{"version":3,"sources":["../node_modules/.pnpm/dotenv@16.3.1/node_modules/dotenv/package.json","../node_modules/.pnpm/dotenv@16.3.1/node_modules/dotenv/lib/main.js","../node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js","../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js","../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js","../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/node.js","../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js","../node_modules/.pnpm/@kwsites+file-exists@1.1.1/node_modules/@kwsites/file-exists/src/index.ts","../node_modules/.pnpm/@kwsites+file-exists@1.1.1/node_modules/@kwsites/file-exists/index.ts","../node_modules/.pnpm/@kwsites+promise-deferred@1.1.1/node_modules/@kwsites/promise-deferred/src/index.ts","../node_modules/.pnpm/@actions+github@6.0.0/node_modules/@actions/github/src/context.ts","../node_modules/.pnpm/@actions+http-client@2.2.0/node_modules/@actions/http-client/src/proxy.ts","../node_modules/.pnpm/tunnel@0.0.6/node_modules/tunnel/lib/tunnel.js","../node_modules/.pnpm/tunnel@0.0.6/node_modules/tunnel/index.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/core/symbols.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/core/errors.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/core/util.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/timers.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/deps/streamsearch/sbmh.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/lib/utils/getLimit.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/lib/utils/decodeText.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/lib/utils/parseParams.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/lib/utils/basename.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/lib/types/multipart.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/lib/utils/Decoder.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/lib/types/urlencoded.js","../node_modules/.pnpm/@fastify+busboy@2.0.0/node_modules/@fastify/busboy/lib/main.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/constants.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/global.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/util.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/symbols.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/webidl.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/dataURL.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/file.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/formdata.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/body.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/core/request.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/dispatcher.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/dispatcher-base.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/core/connect.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/src/llhttp/utils.ts","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/src/llhttp/constants.ts","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/handler/RedirectHandler.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/interceptor/redirectInterceptor.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/llhttp/llhttp-wasm.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/llhttp/llhttp_simd-wasm.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/client.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/node/fixed-queue.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/pool-stats.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/pool-base.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/pool.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/balanced-pool.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/compat/dispatcher-weakref.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/agent.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/readable.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/util.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/abort-signal.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/api-request.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/api-stream.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/api-pipeline.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/api-upgrade.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/api-connect.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/api/index.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/mock-errors.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/mock-symbols.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/mock-utils.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/mock-interceptor.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/mock-client.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/mock-pool.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/pluralizer.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/pending-interceptors-formatter.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/mock/mock-agent.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/proxy-agent.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/global.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/handler/DecoratorHandler.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/headers.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/response.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/request.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fetch/index.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fileapi/symbols.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fileapi/progressevent.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fileapi/encoding.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fileapi/util.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/fileapi/filereader.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/cache/symbols.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/cache/util.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/cache/cache.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/cache/cachestorage.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/cookies/constants.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/cookies/util.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/cookies/parse.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/cookies/index.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/websocket/constants.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/websocket/symbols.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/websocket/events.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/websocket/util.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/websocket/connection.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/websocket/frame.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/websocket/receiver.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/lib/websocket/websocket.js","../node_modules/.pnpm/undici@5.27.2/node_modules/undici/index.js","../node_modules/.pnpm/@actions+http-client@2.2.0/node_modules/@actions/http-client/src/index.ts","../node_modules/.pnpm/@actions+github@6.0.0/node_modules/@actions/github/src/internal/utils.ts","../node_modules/.pnpm/universal-user-agent@6.0.1/node_modules/universal-user-agent/dist-src/index.js","../node_modules/.pnpm/before-after-hook@2.2.3/node_modules/before-after-hook/lib/register.js","../node_modules/.pnpm/before-after-hook@2.2.3/node_modules/before-after-hook/lib/add.js","../node_modules/.pnpm/before-after-hook@2.2.3/node_modules/before-after-hook/lib/remove.js","../node_modules/.pnpm/before-after-hook@2.2.3/node_modules/before-after-hook/index.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/version.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/defaults.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/util/lowercase-keys.js","../node_modules/.pnpm/is-plain-object@5.0.0/node_modules/is-plain-object/dist/is-plain-object.mjs","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/util/merge-deep.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/util/remove-undefined-properties.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/merge.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/util/add-query-parameters.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/util/extract-url-variable-names.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/util/omit.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/util/url-template.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/parse.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/endpoint-with-defaults.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/with-defaults.js","../node_modules/.pnpm/@octokit+endpoint@9.0.2/node_modules/@octokit/endpoint/dist-src/index.js","../node_modules/.pnpm/@octokit+request@8.1.4/node_modules/@octokit/request/dist-src/version.js","../node_modules/.pnpm/deprecation@2.3.1/node_modules/deprecation/dist-web/index.js","../node_modules/.pnpm/wrappy@1.0.2/node_modules/wrappy/wrappy.js","../node_modules/.pnpm/once@1.4.0/node_modules/once/once.js","../node_modules/.pnpm/@octokit+request-error@5.0.1/node_modules/@octokit/request-error/dist-src/index.js","../node_modules/.pnpm/@octokit+request@8.1.4/node_modules/@octokit/request/dist-src/get-buffer-response.js","../node_modules/.pnpm/@octokit+request@8.1.4/node_modules/@octokit/request/dist-src/fetch-wrapper.js","../node_modules/.pnpm/@octokit+request@8.1.4/node_modules/@octokit/request/dist-src/with-defaults.js","../node_modules/.pnpm/@octokit+request@8.1.4/node_modules/@octokit/request/dist-src/index.js","../node_modules/.pnpm/@octokit+graphql@7.0.2/node_modules/@octokit/graphql/dist-web/index.js","../node_modules/.pnpm/@octokit+auth-token@4.0.0/node_modules/@octokit/auth-token/dist-src/auth.js","../node_modules/.pnpm/@octokit+auth-token@4.0.0/node_modules/@octokit/auth-token/dist-src/with-authorization-prefix.js","../node_modules/.pnpm/@octokit+auth-token@4.0.0/node_modules/@octokit/auth-token/dist-src/hook.js","../node_modules/.pnpm/@octokit+auth-token@4.0.0/node_modules/@octokit/auth-token/dist-src/index.js","../node_modules/.pnpm/@octokit+core@5.0.1/node_modules/@octokit/core/dist-web/index.js","../node_modules/.pnpm/@octokit+plugin-rest-endpoint-methods@10.1.2_@octokit+core@5.0.1/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/version.js","../node_modules/.pnpm/@octokit+plugin-rest-endpoint-methods@10.1.2_@octokit+core@5.0.1/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/generated/endpoints.js","../node_modules/.pnpm/@octokit+plugin-rest-endpoint-methods@10.1.2_@octokit+core@5.0.1/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/endpoints-to-methods.js","../node_modules/.pnpm/@octokit+plugin-rest-endpoint-methods@10.1.2_@octokit+core@5.0.1/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js","../node_modules/.pnpm/@octokit+plugin-paginate-rest@9.1.2_@octokit+core@5.0.1/node_modules/@octokit/plugin-paginate-rest/dist-web/index.js","../node_modules/.pnpm/@actions+github@6.0.0/node_modules/@actions/github/src/utils.ts","../node_modules/.pnpm/@actions+github@6.0.0/node_modules/@actions/github/src/github.ts","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Chunk/dist/effect-Chunk.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Function/dist/effect-Function.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/version.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/GlobalValue/dist/effect-GlobalValue.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Predicate/dist/effect-Predicate.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Utils/dist/effect-Utils.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Hash/dist/effect-Hash.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Equal/dist/effect-Equal.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Equivalence/dist/effect-Equivalence.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Inspectable/dist/effect-Inspectable.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Option/dist/effect-Option.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Pipeable/dist/effect-Pipeable.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Data.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/effect.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Effectable.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Option.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Either.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Order/dist/effect-Order.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Either/dist/effect-Either.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/ReadonlyArray.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/ReadonlyArray/dist/effect-ReadonlyArray.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/HashMap/config.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/HashMap/bitwise.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/HashMap/array.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Stack.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/HashMap/node.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/HashMap.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/HashSet.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/HashSet/dist/effect-HashSet.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/MutableRef/dist/effect-MutableRef.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/fiberId.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/FiberId/dist/effect-FiberId.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/cause.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/cause.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Context/dist/effect-Context.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Context.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Differ/ContextPatch.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/HashMap/dist/effect-HashMap.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Differ/HashSetPatch.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/Differ.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Differ/dist/effect-Differ.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/List/dist/effect-List.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/blockedRequests.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/deferred.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/deferred.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/runtimeFlagsPatch.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/runtimeFlags.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/tracer.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/RuntimeFlagsPatch/dist/effect-RuntimeFlagsPatch.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/core.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Cause/dist/effect-Cause.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Exit/dist/effect-Exit.esm.js","../node_modules/.pnpm/@effect+platform@0.27.3_@effect+schema@0.47.2_effect@2.0.0-next.54/node_modules/@effect/platform/Runtime/dist/effect-platform-Runtime.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Effect/dist/effect-Effect.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Duration/dist/effect-Duration.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/timeout.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/clock.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/ConfigError/dist/effect-ConfigError.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/configError.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/configError.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/configSecret.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/config.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/config.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/configProvider/pathPatch.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Number/dist/effect-Number.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/configProvider.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/defaultServices/console.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/random.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/defaultServices.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Clock/dist/effect-Clock.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/fiberRefs.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/FiberRefs/dist/effect-FiberRefs.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/fiberRefs/patch.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric/label.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/singleShotGen.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/LogLevel/dist/effect-LogLevel.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/logSpan.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/LogSpan/dist/effect-LogSpan.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/ref.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Ref/dist/effect-Ref.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Tracer/dist/effect-Tracer.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/core-effect.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/executionStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/fiberStatus.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/FiberStatus/dist/effect-FiberStatus.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/fiberMessage.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/fiberScope.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/fiber.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Boolean/dist/effect-Boolean.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Deferred/dist/effect-Deferred.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Effectable/dist/effect-Effectable.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/ExecutionStrategy/dist/effect-ExecutionStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/FiberRefsPatch/dist/effect-FiberRefsPatch.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/completedRequestMap.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/concurrency.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/logger.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric/boundaries.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric/keyType.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric/key.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric/state.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric/hook.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric/pair.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/MutableHashMap/dist/effect-MutableHashMap.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric/registry.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/metric.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/request.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/RedBlackTree/iterator.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/RedBlackTree/node.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/RedBlackTree.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/RedBlackTree/dist/effect-RedBlackTree.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/SortedSet/dist/effect-SortedSet.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/supervisor.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/supervisor/patch.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Scheduler/dist/effect-Scheduler.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/fiberRuntime.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/schedule/interval.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/ScheduleInterval/dist/effect-ScheduleInterval.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/schedule/intervals.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/ScheduleIntervals/dist/effect-ScheduleIntervals.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/schedule/decision.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/ScheduleDecision/dist/effect-ScheduleDecision.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/schedule.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/effect/circular.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/layer.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Fiber/dist/effect-Fiber.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/runtime.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/synchronizedRef.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Scope/dist/effect-Scope.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/layer.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/MutableList/dist/effect-MutableList.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/MutableQueue/dist/effect-MutableQueue.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/cache.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/query.esm.js","../node_modules/.pnpm/@effect+platform-node@0.28.3_@effect+schema@0.47.2_effect@2.0.0-next.54/node_modules/@effect/platform-node/Runtime/dist/effect-platform-node-Runtime.esm.js","../src/index.ts","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/BigDecimal/dist/effect-BigDecimal.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Layer/dist/effect-Layer.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/layer/circular.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/queue.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/pubsub.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/PubSub/dist/effect-PubSub.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Queue/dist/effect-Queue.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/channelChildExecutorDecision.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/childExecutorDecision.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/continuation.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/continuation.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/channelUpstreamPullStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/upstreamPullStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/channel.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/core-stream.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/channelState.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/channelState.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/subexecutor.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/channelUpstreamPullRequest.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/upstreamPullRequest.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/channelExecutor.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/channelMergeDecision.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/mergeDecision.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/channelMergeState.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/mergeState.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/channelMergeStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/mergeStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel/singleProducerAsyncInput.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/channel.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/sink.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/ChannelMergeDecision/dist/effect-ChannelMergeDecision.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Runtime/dist/effect-Runtime.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Schedule/dist/effect-Schedule.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/opCodes/streamHaltStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/haltStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/StreamHaltStrategy/dist/effect-StreamHaltStrategy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/ringBuffer.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/debounceState.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/emit.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/handoff.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/handoffSignal.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/pull.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/sinkEndReason.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/zipAllState.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream/zipChunksState.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/take.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/stream.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Config/dist/effect-Config.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/ConfigSecret/dist/effect-ConfigSecret.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Data/dist/effect-Data.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/groupBy.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/MutableHashSet/dist/effect-MutableHashSet.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Stream/dist/effect-Stream.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/SortedMap/dist/effect-SortedMap.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Streamable/dist/effect-Streamable.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/String/dist/effect-String.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/Supervisor/dist/effect-Supervisor.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/TestAnnotation/dist/effect-TestAnnotation.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/TestAnnotationMap/dist/effect-TestAnnotationMap.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/TestAnnotations/dist/effect-TestAnnotations.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/testing/suspendedWarningData.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/internal/testing/warningData.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/TestLive/dist/effect-TestLive.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/TestClock/dist/effect-TestClock.esm.js","../node_modules/.pnpm/effect@2.0.0-next.54/node_modules/effect/TestSized/dist/effect-TestSized.esm.js","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/util.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/git-logger.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/runners/scheduler.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/completion-detection.plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/runners/git-executor-chain.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/args/pathspec.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/errors/git-error.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/errors/git-response-error.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/errors/task-configuration-error.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/argument-filters.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/exit-codes.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/git-output-streams.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/line-parser.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/simple-git-options.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/task-options.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/task-parser.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/utils/index.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/check-is-repo.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/CleanSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/task.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/clean.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/ConfigList.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/config.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/grep.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/reset.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/runners/tasks-pending-queue.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/runners/git-executor.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/task-callback.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/change-working-directory.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/checkout.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-commit.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/commit.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/hash-object.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/InitSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/init.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/args/log-format.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/DiffSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-diff-summary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-list-log-summary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/diff.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/log.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/MergeSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/PullSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-remote-objects.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-remote-messages.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-pull.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-merge.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/merge.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-push.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/push.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/show.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/FileStatusSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/StatusSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/status.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/version.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/simple-git-api.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/apply-patch.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/BranchDeleteSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-branch-delete.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/BranchSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-branch.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/branch.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/CheckIgnore.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/check-ignore.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/clone.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-fetch.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/fetch.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/parsers/parse-move.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/move.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/pull.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/GetRemoteSummary.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/remote.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/stash-list.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/sub-module.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/responses/TagList.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/tasks/tag.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/git.js","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/api.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/errors/git-construct-error.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/errors/git-plugin-error.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/abort-plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/block-unsafe-operations-plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/command-config-prefixing-plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/error-detection.plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/plugin-store.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/progress-monitor-plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/spawn-options-plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/timout-plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/plugins/suffix-paths.plugin.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/git-factory.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/lib/runners/promise-wrapped.ts","../node_modules/.pnpm/simple-git@3.20.0/node_modules/simple-git/src/esm.mjs","../src/Git.ts","../src/Github.ts","../src/utils/config.ts"],"names":["parse","match","value","keys","length","environment","debug","config","disable","enable","enabled","hash","extend","split","log","useColors","check","exists","__export","deferred","done","fail","status","promise","_a","options","pending","onError","head","cause","socket","require_tunnel","Blob","isStream","idx","isIterable","stream","err","buffer","handler","chunk","ReadableStream","iterator","delay","timeout","start","end","decodeText","require_main","DOMException","structuredClone","require_util","performance","request","empty","kind","values","input","previous","current","require_symbols","context","min","seq","atob","makeEntry","entry","chunks","resume","session","onConnectTimeout","ERROR","TYPE","FLAGS","LENIENT_FLAGS","METHODS","FINISH","HEADER_STATE","connect","id","exports","parser","sync","write","headers","pipe","tail","next","running","size","dispatcher","pool","counter","finalizer","WeakRef","consume","callback","res","opaque","body","clone","mockDispatch","getResponseData","times","statusCode","data","responseOptions","newMockDispatch","count","scope","URL","opts","require_global","require_request","window","ac","globalThis","isFailure","type","decode","cache","require_constants","date","days","symbol","HttpCodes","Headers","MediaTypes","userAgent","lowercaseKeys","name","method","hook","bind","init_version","isObject","merge","init_merge","omit","option","value2","expand","DEFAULTS","endpoint","VERSION","init_dist_web","cb","once","init_dist_src","withDefaults","init_with_defaults","request2","auth","descriptor","dist_web_exports","paginate","getOctokit","append","appendAll","appendAllNonEmpty","compact","contains","containsWith","dedupe","dedupeAdjacent","filter","filterMap","filterMapWhile","findFirst","findFirstIndex","findLast","findLastIndex","flatMap","flatten","fromIterable","get","getEquivalence","headNonEmpty","intersection","join","last","make","makeBy","map","mapAccum","modifyOption","of","partition","partitionMap","prepend","reduce","reduceRight","remove","reverse","separate","some","sort","splitAt","tailNonEmpty","union","unsafeGet","unzip","zip","zipWith","isFunction","max","array","TypeId","all","getLeft","getRight","isNone","isOption","isSome","none","Structural","as","CommonProto","left","right","number","mapInput","out","adapter","ap","fromNullable","fromOption","gen","getOrElse","getOrNull","getOrThrow","getOrThrowWith","getOrUndefined","isEither","isLeft","isRight","orElse","evaluate","_equivalence","has","b","copy","diff","shift","mutate","i","v","children","newValue","_empty","isEmpty","forEach","zero","makeImpl","set","beginMutation","endMutation","isHashSet","add","difference","combine","ids","threadName","unsafeMake","fiberId","failureOption","parallel","sequential","par","onInterrupt","either","proto","span","getOption","isContext","isTag","pick","service","variance","first","update","patch","PatchProto","EmptyProto","AndThenProto","makeAndThen","differ","hashSet","toReadonlyArray","cons","prependAll","effect","active","None","exit","exclude","_continue","EffectTypeId","use","step","asUnit","unit","spanSymbol","die","interrupt","interruptible","mapBoth","cause2","zipRight","tap","zipLeft","list","isDieType","isInterrupted","isInterruptedOnly","failureOrCause","flipCauseOption","squash","IllegalArgumentException","RuntimeException","isRuntimeException","failCause","succeed","onExit","Do","acquireRelease","acquireReleaseInterruptible","acquireUseRelease","addFinalizer","allSuccesses","allWith","allowInterrupt","annotateCurrentSpan","annotateLogs","annotateSpans","asSome","asSomeError","async","asyncEffect","asyncEither","asyncOption","awaitAllChildren","bindTo","blocked","cached","_catch","catchAll","catchAllCause","catchAllDefect","catchIf","catchSome","catchSomeCause","catchSomeDefect","catchTag","catchTags","checkInterruptible","clock","clockWith","configProviderWith","contextWith","contextWithEffect","currentParentSpan","currentSpan","daemonChildren","descriptorWith","dieMessage","dieSync","diffFiberRefs","disconnect","dropUntil","dropWhile","ensuring","ensuringChild","ensuringChildren","eventually","every","failCauseSync","failSync","fiberIdWith","filterOrDie","filterOrDieMessage","filterOrElse","filterOrFail","finalizersMask","firstSuccessOf","flatMapStep","flip","flipWith","forever","fork","forkAll","forkDaemon","forkIn","forkScoped","forkWithErrorHandler","fromFiber","fromFiberEffect","if_","ignore","ignoreLogged","inheritFiberRefs","interruptWith","interruptibleMask","intoDeferred","isEffect","isSuccess","iterate","labelMetrics","labelMetricsScoped","labelMetricsScopedSet","labelMetricsSet","let_","linkSpans","logAnnotations","logDebug","logError","logFatal","logInfo","logTrace","logWarning","loop","makeSemaphore","makeSpan","makeSpanScoped","mapError","mapErrorCause","mapInputContext","matchCause","matchCauseEffect","matchEffect","mergeAll","metricLabels","negate","never","optionFromOptional","orDie","orDieWith","orElseFail","orElseSucceed","parallelErrors","parallelFinalizers","patchFiberRefs","provide","provideService","provideServiceEffect","race","raceAll","raceFirst","raceWith","random","randomWith","reduceEffect","reduceWhile","repeat","repeatN","replicate","replicateEffect","retry","runRequestBlock","runtime","sandbox","scheduleForked","scopeWith","scoped","sequentialFinalizers","serviceConstants","serviceFunction","serviceFunctionEffect","serviceFunctions","serviceMembers","serviceOption","setFiberRefs","sleep","spanAnnotations","spanLinks","succeedNone","succeedSome","summarized","supervised","suspend","tagMetrics","tagMetricsScoped","takeUntil","takeWhile","tapBoth","tapDefect","tapError","tapErrorCause","tapErrorTag","timed","timedWith","timeoutFail","timeoutFailCause","timeoutTo","tracer","tracerWith","transplant","try_","tryMap","tryMapPromise","tryPromise","unified","uninterruptible","uninterruptibleMask","unless","unlessEffect","unsafeMakeSemaphore","unsandbox","updateFiberRefs","updateService","useSpan","using","validate","validateAll","validateFirst","validateWith","when","whenEffect","whenFiberRef","whenRef","whileLoop","withClock","withClockScoped","withConcurrency","withConfigProvider","withConfigProviderScoped","withEarlyRelease","withLogSpan","withMaxOpsBeforeYield","withMetric","withParentSpan","withRequestBatching","withRequestCache","withRequestCaching","withScheduler","withSchedulingPriority","withSpan","withSpanScoped","withTracer","withTracerScoped","withTracerTiming","withUnhandledErrorLogLevel","yieldNow","equals","duration","nanos","micros","millis","seconds","minutes","hours","weeks","self","that","greaterThan","And","ConfigErrorTypeId","InvalidData","MissingData","Or","SourceUnavailable","Unsupported","isAnd","isConfigError","isInvalidData","isMissingData","isMissingDataOnly","isOr","isSourceUnavailable","isUnsupported","prefixed","reduceWithContext","path","secret","OP_FAIL","string","level","mapOrFail","nested","primitive","tuple","struct","constant","hashMap","prefix","currentTimeMillis","currentTimeNanos","forkAs","getOrDefault","joinAs","setAll","updatedAs","OP_EMPTY","oldValue","fiberRefs","SingleShotGen","Error","Order","render","modify","getAndSet","dropping","run","state","complete","summary","taking","OP_SEQUENTIAL","OP_PARALLEL","runtimeFlags","suspended","isDone","isSuspended","fibers","_await","poll","StructuralCommitPrototype","parallelN","unbounded","bounded","logLevel","fromChunk","bigint","histogram","sum","frequency","gauge","bigint0","swap","getOrder","insert","removeFirst","OP_AND_THEN","toSet","interruption","process","f","acc","a","fails","strategy","after","OP_DONE","continueWith","schedule","unfold","driver","OP_ZIP_WITH","inheritAll","interruptAllAs","roots","unsafeFork","layer","extendScope","fresh","fromEffect","fiberRefLocally","locally","fiberRefLocallyWith","fiberRefLocallyScoped","fiberRefLocallyScopedWith","fold","memoize","zipWithPar","capacity","key","interruptAll","toString","scale","Equivalence","before","LayerTypeId","build","buildWithScope","discard","fromFunction","isFresh","isLayer","launch","locallyEffect","locallyScoped","locallyWith","parentSpan","passthrough","project","provideMerge","scopedContext","scopedDiscard","setConfigProvider","setTracer","succeedContext","syncContext","toRuntime","unwrapEffect","unwrapScoped","useMerge","take","offer","offerAll","isShutdown","BackPressureStrategy","shutdown","unsafeRemove","unsafePollN","takeRemainderLoop","unsafeCompleteDeferred","unsafeOfferAll","subscribe","DequeueTypeId","sliding","isFull","awaitShutdown","takeAll","takeUpTo","takeBetween","takeN","OP_CONTINUE","OP_YIELD","OP_FOLD","OP_FROM_EFFECT","OP_SUSPEND","ChannelTypeId","channelVariance","provideContext","OP_EMIT","OP_READ","Done","onDone","exit2","Emit","childExecutor","emitSeparator","updatedChildExecutors","subexecutor","drain","closeLastSubstream","OP_STATE_DONE","unwrap","queue","$","pull","lastDone","both","single","onDecision","SinkTypeId","sinkVariance","Await","runPromiseExit","spaced","fromInput","Both","emit","OP_PULL_BOTH","OP_PULL_LEFT","OP_PULL_RIGHT","PullBoth","PullLeft","PullRight","StreamTypeId","toChannel","sinkFiber","scheduleFiber","c","fromChannel","fromQueue","toPubSub","toQueue","s","concat","concatAll","mappings","queues","interruptWhenDeferred","drop","dropRight","ensuringWith","find","fromPull","previousChunk","interruptWhen","mergeWith","mkString","orElseEither","OP_HALT","OP_END","provideSomeLayer","range","chunkSize","runDrain","runScoped","result","carry","delimiterCursor","n","takeRight","elapsed","toPull","ConfigTypeId","boolean","integer","isConfig","mapAttempt","orElseIf","withDefault","withDescription","ConfigSecretTypeId","fromString","isConfigSecret","unsafeWipe","grouped","innerQueue","DefaultChunkSize","accumulate","accumulateChunks","aggregate","aggregateWithin","aggregateWithinEither","_async","asyncInterrupt","asyncScoped","bindEffect","branchAfter","broadcast","broadcastDynamic","broadcastedQueues","broadcastedQueuesDynamic","bufferChunks","changes","changesWith","changesWithEffect","chunksWith","combineChunks","contextWithStream","cross","crossLeft","crossRight","crossWith","debounce","distributedWith","distributedWithDynamic","drainFork","dropUntilEffect","dropWhileEffect","encodeText","execute","filterEffect","filterMapEffect","filterMapWhileEffect","findEffect","flattenChunks","flattenEffect","flattenExitOption","flattenIterables","flattenTake","fromAsyncIterable","fromChunkPubSub","fromChunkQueue","fromChunks","fromEffectOption","fromIterableEffect","fromIteratorSucceed","fromPubSub","fromReadableStream","fromReadableStreamByob","fromSchedule","groupAdjacentBy","groupBy","groupByKey","groupedWithin","haltAfter","haltWhen","haltWhenDeferred","identity","interleave","interleaveWith","interruptAfter","intersperse","intersperseAffixes","mapAccumEffect","mapChunks","mapChunksEffect","mapConcat","mapConcatChunk","mapConcatChunkEffect","mapConcatEffect","mapEffect","mergeEither","mergeLeft","mergeRight","orElseIfEmpty","orElseIfEmptyChunk","orElseIfEmptyStream","paginateChunk","paginateChunkEffect","paginateEffect","partitionEither","peel","pipeThrough","pipeThroughChannel","pipeThroughChannelOrFail","provideLayer","provideServiceStream","rechunk","refineOrDie","refineOrDieWith","repeatEffect","repeatEffectChunk","repeatEffectChunkOption","repeatEffectOption","repeatEffectWithSchedule","repeatEither","repeatElements","repeatElementsWith","repeatValue","repeatWith","runCollect","runCount","runFold","runFoldEffect","runFoldScoped","runFoldScopedEffect","runFoldWhile","runFoldWhileEffect","runFoldWhileScoped","runFoldWhileScopedEffect","runForEach","runForEachChunk","runForEachChunkScoped","runForEachScoped","runForEachWhile","runForEachWhileScoped","runHead","runIntoPubSub","runIntoPubSubScoped","runIntoQueue","runIntoQueueElementsScoped","runIntoQueueScoped","runLast","runSum","scan","scanEffect","scanReduce","scanReduceEffect","scheduleWith","slidingSize","someOrElse","someOrFail","splitLines","splitOnChunk","takeUntilEffect","tapSink","throttle","throttleEffect","tick","toQueueOfElements","toReadableStream","transduce","unfoldChunk","unfoldChunkEffect","unfoldEffect","whenCase","whenCaseEffect","zipAll","zipAllLeft","zipAllRight","zipAllSortedByKey","zipAllSortedByKeyLeft","zipAllSortedByKeyRight","zipAllSortedByKeyWith","zipAllWith","zipFlatten","zipLatest","zipLatestWith","zipWithChunks","zipWithIndex","zipWithNext","zipWithPrevious","zipWithPreviousAndNext","streamVariance","SupervisorTypeId","compose","isStart","isPending","sorted","import_promise_deferred","__esm","append2","onError2","__commonJS","__toCommonJS","Git2","close","overwrite","stop","GitError","_","Git","trimmed"],"mappings":"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AA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT;AAAS,iBAAO;AAAA,MAClB;AAAA,IACF;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;ACjSA,IAAAT,gBAAA;AAAA;AAAA;AAEA,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAM,EAAE,cAAc,IAAI;AAC1B,QAAM,EAAE,YAAY,IAAI;AACxB,QAAM,EAAE,cAAAF,cAAa,IAAI;AACzB,QAAM,EAAE,oBAAoB,cAAc,IAAI;AAC9C,QAAM,EAAE,MAAM,IAAI,UAAQ,MAAM;AAChC,QAAM,EAAE,cAAc,IAAI,UAAQ,gBAAgB;AAClD,QAAM,EAAE,KAAK,IAAI,UAAQ,QAAQ;AAGjC,QAAM,4BAA4B;AAAA,MAChC,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,cAAc;AAAA,IAChB;AASA,aAAS,cAAe,IAAI,MAAM,MAAM,cAAc;AAGpD,UAAI,GAAG,MAAM,MAAM,WAAW;AAC5B,cAAM,IAAIA,cAAa,iBAAiB,mBAAmB;AAAA,MAC7D;AAGA,SAAG,MAAM,IAAI;AAGb,SAAG,OAAO,IAAI;AAGd,SAAG,MAAM,IAAI;AAIb,YAAM,SAAS,KAAK,OAAO;AAG3B,YAAM,SAAS,OAAO,UAAU;AAIhC,YAAM,QAAQ,CAAC;AAIf,UAAI,eAAe,OAAO,KAAK;AAG/B,UAAI,eAAe;AAOlB,OAAC,YAAY;AACZ,eAAO,CAAC,GAAG,QAAQ,GAAG;AAEpB,cAAI;AACF,kBAAM,EAAE,MAAA7B,QAAM,OAAAlB,OAAM,IAAI,MAAM;AAK9B,gBAAI,gBAAgB,CAAC,GAAG,QAAQ,GAAG;AACjC,6BAAe,MAAM;AACnB,mCAAmB,aAAa,EAAE;AAAA,cACpC,CAAC;AAAA,YACH;AAGA,2BAAe;AAKf,gBAAI,CAACkB,UAAQ,MAAM,aAAalB,MAAK,GAAG;AAKtC,oBAAM,KAAKA,MAAK;AAKhB,mBAEI,GAAG,uBAAuB,MAAM,UAChC,KAAK,IAAI,IAAI,GAAG,uBAAuB,KAAK,OAE9C,CAAC,GAAG,QAAQ,GACZ;AACA,mBAAG,uBAAuB,IAAI,KAAK,IAAI;AACvC,+BAAe,MAAM;AACnB,qCAAmB,YAAY,EAAE;AAAA,gBACnC,CAAC;AAAA,cACH;AAIA,6BAAe,OAAO,KAAK;AAAA,YAC7B,WAAWkB,QAAM;AAIf,6BAAe,MAAM;AAEnB,mBAAG,MAAM,IAAI;AAIb,oBAAI;AACF,wBAAM,SAAS,YAAY,OAAO,MAAM,KAAK,MAAM,YAAY;AAI/D,sBAAI,GAAG,QAAQ,GAAG;AAChB;AAAA,kBACF;AAGA,qBAAG,OAAO,IAAI;AAGd,qCAAmB,QAAQ,EAAE;AAAA,gBAC/B,SAAS,OAAO;AAId,qBAAG,MAAM,IAAI;AAGb,qCAAmB,SAAS,EAAE;AAAA,gBAChC;AAIA,oBAAI,GAAG,MAAM,MAAM,WAAW;AAC5B,qCAAmB,WAAW,EAAE;AAAA,gBAClC;AAAA,cACF,CAAC;AAED;AAAA,YACF;AAAA,UACF,SAAS,OAAO;AACd,gBAAI,GAAG,QAAQ,GAAG;AAChB;AAAA,YACF;AAKA,2BAAe,MAAM;AAEnB,iBAAG,MAAM,IAAI;AAGb,iBAAG,MAAM,IAAI;AAGb,iCAAmB,SAAS,EAAE;AAI9B,kBAAI,GAAG,MAAM,MAAM,WAAW;AAC5B,mCAAmB,WAAW,EAAE;AAAA,cAClC;AAAA,YACF,CAAC;AAED;AAAA,UACF;AAAA,QACF;AAAA,MACF,GAAG;AAAA,IACL;AAQA,aAAS,mBAAoB,GAAG,QAAQ;AAGtC,YAAM,QAAQ,IAAI,cAAc,GAAG;AAAA,QACjC,SAAS;AAAA,QACT,YAAY;AAAA,MACd,CAAC;AAED,aAAO,cAAc,KAAK;AAAA,IAC5B;AASA,aAAS,YAAa,OAAO,MAAM,UAAU,cAAc;AAMzD,cAAQ,MAAM;AAAA,QACZ,KAAK,WAAW;AAcd,cAAI,UAAU;AAEd,gBAAM,SAAS,cAAc,YAAY,0BAA0B;AAEnE,cAAI,WAAW,WAAW;AACxB,uBAAW,mBAAmB,MAAM;AAAA,UACtC;AAEA,qBAAW;AAEX,gBAAM,UAAU,IAAI,cAAc,QAAQ;AAE1C,qBAAWoB,UAAS,OAAO;AACzB,uBAAW,KAAK,QAAQ,MAAMA,MAAK,CAAC;AAAA,UACtC;AAEA,qBAAW,KAAK,QAAQ,IAAI,CAAC;AAE7B,iBAAO;AAAA,QACT;AAAA,QACA,KAAK,QAAQ;AAEX,cAAI,WAAW;AAIf,cAAI,cAAc;AAChB,uBAAW,YAAY,YAAY;AAAA,UACrC;AAGA,cAAI,aAAa,aAAa,UAAU;AAGtC,kBAAM8E,QAAO,cAAc,QAAQ;AAInC,gBAAIA,UAAS,WAAW;AACtB,yBAAW,YAAYA,MAAK,WAAW,IAAI,SAAS,CAAC;AAAA,YACvD;AAAA,UACF;AAGA,cAAI,aAAa,WAAW;AAC1B,uBAAW;AAAA,UACb;AAIA,iBAAOC,QAAO,OAAO,QAAQ;AAAA,QAC/B;AAAA,QACA,KAAK,eAAe;AAElB,gBAAM,WAAW,qBAAqB,KAAK;AAE3C,iBAAO,SAAS;AAAA,QAClB;AAAA,QACA,KAAK,gBAAgB;AAGnB,cAAI,eAAe;AAEnB,gBAAM,UAAU,IAAI,cAAc,QAAQ;AAE1C,qBAAW/E,UAAS,OAAO;AACzB,4BAAgB,QAAQ,MAAMA,MAAK;AAAA,UACrC;AAEA,0BAAgB,QAAQ,IAAI;AAE5B,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAOA,aAAS+E,QAAQ,SAAS,UAAU;AAClC,YAAM,QAAQ,qBAAqB,OAAO;AAG1C,YAAM,cAAc,YAAY,KAAK;AAErC,UAAI,QAAQ;AAGZ,UAAI,gBAAgB,MAAM;AAExB,mBAAW;AAKX,gBAAQ,gBAAgB,UAAU,IAAI;AAAA,MACxC;AAOA,YAAM,SAAS,MAAM,MAAM,KAAK;AAChC,aAAO,IAAI,YAAY,QAAQ,EAAE,OAAO,MAAM;AAAA,IAChD;AAMA,aAAS,YAAa,SAAS;AAG7B,YAAM,CAAC,GAAG,GAAG,CAAC,IAAI;AAOlB,UAAI,MAAM,OAAQ,MAAM,OAAQ,MAAM,KAAM;AAC1C,eAAO;AAAA,MACT,WAAW,MAAM,OAAQ,MAAM,KAAM;AACnC,eAAO;AAAA,MACT,WAAW,MAAM,OAAQ,MAAM,KAAM;AACnC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,qBAAsB,WAAW;AACxC,YAAM9B,SAAO,UAAU,OAAO,CAAC,GAAG,MAAM;AACtC,eAAO,IAAI,EAAE;AAAA,MACf,GAAG,CAAC;AAEJ,UAAI,SAAS;AAEb,aAAO,UAAU,OAAO,CAAC,GAAG,MAAM;AAChC,UAAE,IAAI,GAAG,MAAM;AACf,kBAAU,EAAE;AACZ,eAAO;AAAA,MACT,GAAG,IAAI,WAAWA,MAAI,CAAC;AAAA,IACzB;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACvYA;AAAA;AAAA;AAEA,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,EAAE,oBAAoB,IAAI;AAEhC,QAAM,aAAN,MAAM,oBAAmB,YAAY;AAAA,MACnC,cAAe;AACb,cAAM;AAEN,aAAK,MAAM,IAAI;AACf,aAAK,OAAO,IAAI;AAChB,aAAK,MAAM,IAAI;AACf,aAAK,OAAO,IAAI;AAAA,UACd,SAAS;AAAA,UACT,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM;AAAA,UACN,UAAU;AAAA,UACV,WAAW;AAAA,QACb;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,kBAAmB,MAAM;AACvB,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,+BAA+B,CAAC;AAEnF,eAAO,OAAO,WAAW,KAAK,MAAM,EAAE,QAAQ,MAAM,CAAC;AAIrD,sBAAc,MAAM,MAAM,aAAa;AAAA,MACzC;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,mBAAoB,MAAM;AACxB,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,gCAAgC,CAAC;AAEpF,eAAO,OAAO,WAAW,KAAK,MAAM,EAAE,QAAQ,MAAM,CAAC;AAIrD,sBAAc,MAAM,MAAM,cAAc;AAAA,MAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,WAAY,MAAM,WAAW,QAAW;AACtC,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,wBAAwB,CAAC;AAE5E,eAAO,OAAO,WAAW,KAAK,MAAM,EAAE,QAAQ,MAAM,CAAC;AAErD,YAAI,aAAa,QAAW;AAC1B,qBAAW,OAAO,WAAW,UAAU,QAAQ;AAAA,QACjD;AAIA,sBAAc,MAAM,MAAM,QAAQ,QAAQ;AAAA,MAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,cAAe,MAAM;AACnB,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,2BAA2B,CAAC;AAE/E,eAAO,OAAO,WAAW,KAAK,MAAM,EAAE,QAAQ,MAAM,CAAC;AAIrD,sBAAc,MAAM,MAAM,SAAS;AAAA,MACrC;AAAA;AAAA;AAAA;AAAA,MAKA,QAAS;AAIP,YAAI,KAAK,MAAM,MAAM,WAAW,KAAK,MAAM,MAAM,QAAQ;AACvD,eAAK,OAAO,IAAI;AAChB;AAAA,QACF;AAIA,YAAI,KAAK,MAAM,MAAM,WAAW;AAC9B,eAAK,MAAM,IAAI;AACf,eAAK,OAAO,IAAI;AAAA,QAClB;AAKA,aAAK,QAAQ,IAAI;AAMjB,2BAAmB,SAAS,IAAI;AAIhC,YAAI,KAAK,MAAM,MAAM,WAAW;AAC9B,6BAAmB,WAAW,IAAI;AAAA,QACpC;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,aAAc;AAChB,eAAO,WAAW,MAAM,WAAU;AAElC,gBAAQ,KAAK,MAAM,GAAG;AAAA,UACpB,KAAK;AAAS,mBAAO,KAAK;AAAA,UAC1B,KAAK;AAAW,mBAAO,KAAK;AAAA,UAC5B,KAAK;AAAQ,mBAAO,KAAK;AAAA,QAC3B;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,SAAU;AACZ,eAAO,WAAW,MAAM,WAAU;AAIlC,eAAO,KAAK,OAAO;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,QAAS;AACX,eAAO,WAAW,MAAM,WAAU;AAIlC,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,YAAa;AACf,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,OAAO,EAAE;AAAA,MACvB;AAAA,MAEA,IAAI,UAAW,IAAI;AACjB,eAAO,WAAW,MAAM,WAAU;AAElC,YAAI,KAAK,OAAO,EAAE,SAAS;AACzB,eAAK,oBAAoB,WAAW,KAAK,OAAO,EAAE,OAAO;AAAA,QAC3D;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,OAAO,EAAE,UAAU;AACxB,eAAK,iBAAiB,WAAW,EAAE;AAAA,QACrC,OAAO;AACL,eAAK,OAAO,EAAE,UAAU;AAAA,QAC1B;AAAA,MACF;AAAA,MAEA,IAAI,UAAW;AACb,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,OAAO,EAAE;AAAA,MACvB;AAAA,MAEA,IAAI,QAAS,IAAI;AACf,eAAO,WAAW,MAAM,WAAU;AAElC,YAAI,KAAK,OAAO,EAAE,OAAO;AACvB,eAAK,oBAAoB,SAAS,KAAK,OAAO,EAAE,KAAK;AAAA,QACvD;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,OAAO,EAAE,QAAQ;AACtB,eAAK,iBAAiB,SAAS,EAAE;AAAA,QACnC,OAAO;AACL,eAAK,OAAO,EAAE,QAAQ;AAAA,QACxB;AAAA,MACF;AAAA,MAEA,IAAI,cAAe;AACjB,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,OAAO,EAAE;AAAA,MACvB;AAAA,MAEA,IAAI,YAAa,IAAI;AACnB,eAAO,WAAW,MAAM,WAAU;AAElC,YAAI,KAAK,OAAO,EAAE,WAAW;AAC3B,eAAK,oBAAoB,aAAa,KAAK,OAAO,EAAE,SAAS;AAAA,QAC/D;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,OAAO,EAAE,YAAY;AAC1B,eAAK,iBAAiB,aAAa,EAAE;AAAA,QACvC,OAAO;AACL,eAAK,OAAO,EAAE,YAAY;AAAA,QAC5B;AAAA,MACF;AAAA,MAEA,IAAI,aAAc;AAChB,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,OAAO,EAAE;AAAA,MACvB;AAAA,MAEA,IAAI,WAAY,IAAI;AAClB,eAAO,WAAW,MAAM,WAAU;AAElC,YAAI,KAAK,OAAO,EAAE,UAAU;AAC1B,eAAK,oBAAoB,YAAY,KAAK,OAAO,EAAE,QAAQ;AAAA,QAC7D;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,OAAO,EAAE,WAAW;AACzB,eAAK,iBAAiB,YAAY,EAAE;AAAA,QACtC,OAAO;AACL,eAAK,OAAO,EAAE,WAAW;AAAA,QAC3B;AAAA,MACF;AAAA,MAEA,IAAI,SAAU;AACZ,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,OAAO,EAAE;AAAA,MACvB;AAAA,MAEA,IAAI,OAAQ,IAAI;AACd,eAAO,WAAW,MAAM,WAAU;AAElC,YAAI,KAAK,OAAO,EAAE,MAAM;AACtB,eAAK,oBAAoB,QAAQ,KAAK,OAAO,EAAE,IAAI;AAAA,QACrD;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,OAAO,EAAE,OAAO;AACrB,eAAK,iBAAiB,QAAQ,EAAE;AAAA,QAClC,OAAO;AACL,eAAK,OAAO,EAAE,OAAO;AAAA,QACvB;AAAA,MACF;AAAA,MAEA,IAAI,UAAW;AACb,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,OAAO,EAAE;AAAA,MACvB;AAAA,MAEA,IAAI,QAAS,IAAI;AACf,eAAO,WAAW,MAAM,WAAU;AAElC,YAAI,KAAK,OAAO,EAAE,OAAO;AACvB,eAAK,oBAAoB,SAAS,KAAK,OAAO,EAAE,KAAK;AAAA,QACvD;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,OAAO,EAAE,QAAQ;AACtB,eAAK,iBAAiB,SAAS,EAAE;AAAA,QACnC,OAAO;AACL,eAAK,OAAO,EAAE,QAAQ;AAAA,QACxB;AAAA,MACF;AAAA,IACF;AAGA,eAAW,QAAQ,WAAW,UAAU,QAAQ;AAEhD,eAAW,UAAU,WAAW,UAAU,UAAU;AAEpD,eAAW,OAAO,WAAW,UAAU,OAAO;AAE9C,WAAO,iBAAiB,WAAW,WAAW;AAAA,MAC5C,OAAO;AAAA,MACP,SAAS;AAAA,MACT,MAAM;AAAA,MACN,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,CAAC,OAAO,WAAW,GAAG;AAAA,QACpB,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AAED,WAAO,iBAAiB,YAAY;AAAA,MAClC,OAAO;AAAA,MACP,SAAS;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAED,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;ACvVA,IAAA7B,mBAAA;AAAA;AAAA;AAEA,WAAO,UAAU;AAAA,MACf,YAAY,OAAO,eAAe;AAAA,IACpC;AAAA;AAAA;;;ACJA,IAAAT,gBAAA;AAAA;AAAA;AAEA,QAAM,SAAS,UAAQ,QAAQ;AAC/B,QAAM,EAAE,cAAc,IAAI;AAC1B,QAAM,EAAE,kBAAkB,IAAI;AAS9B,aAAS,UAAW,GAAG,GAAG,kBAAkB,OAAO;AACjD,YAAM,cAAc,cAAc,GAAG,eAAe;AAEpD,YAAM,cAAc,cAAc,GAAG,eAAe;AAEpD,aAAO,gBAAgB;AAAA,IACzB;AAMA,aAAS,YAAa,QAAQ;AAC5B,aAAO,WAAW,IAAI;AAEtB,YAAMK,UAAS,CAAC;AAEhB,eAAStD,UAAS,OAAO,MAAM,GAAG,GAAG;AACnC,QAAAA,SAAQA,OAAM,KAAK;AAEnB,YAAI,CAACA,OAAM,QAAQ;AACjB;AAAA,QACF,WAAW,CAAC,kBAAkBA,MAAK,GAAG;AACpC;AAAA,QACF;AAEA,QAAAsD,QAAO,KAAKtD,MAAK;AAAA,MACnB;AAEA,aAAOsD;AAAA,IACT;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AChDA;AAAA;AAAA;AAEA,QAAM,EAAE,WAAW,IAAI;AACvB,QAAM,EAAE,WAAW,aAAa,eAAe,IAAI;AACnD,QAAM,EAAE,qBAAqB,YAAY,IAAI;AAC7C,QAAM,EAAE,aAAa,IAAI;AACzB,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,EAAE,UAAU,cAAc,IAAI;AACpC,QAAM,EAAE,QAAQ,IAAI;AACpB,QAAM,EAAE,QAAQ,UAAU,QAAQ,OAAO,IAAI;AAC7C,QAAM,EAAE,SAAS,IAAI;AACrB,QAAM,EAAE,sBAAsB,uBAAuB,aAAa,IAAI;AACtE,QAAM,SAAS,UAAQ,QAAQ;AAC/B,QAAM,EAAE,oBAAoB,IAAI;AAgBhC,QAAM,QAAN,MAAM,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA,MAKV;AAAA,MAEA,cAAe;AACb,YAAI,UAAU,CAAC,MAAM,YAAY;AAC/B,iBAAO,mBAAmB;AAAA,QAC5B;AAEA,aAAK,+BAA+B,UAAU,CAAC;AAAA,MACjD;AAAA,MAEA,MAAM,MAAOH,UAAS,UAAU,CAAC,GAAG;AAClC,eAAO,WAAW,MAAM,MAAK;AAC7B,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,cAAc,CAAC;AAElE,QAAAA,WAAU,OAAO,WAAW,YAAYA,QAAO;AAC/C,kBAAU,OAAO,WAAW,kBAAkB,OAAO;AAErD,cAAM,IAAI,MAAM,KAAK,SAASA,UAAS,OAAO;AAE9C,YAAI,EAAE,WAAW,GAAG;AAClB;AAAA,QACF;AAEA,eAAO,EAAE,CAAC;AAAA,MACZ;AAAA,MAEA,MAAM,SAAUA,WAAU,QAAW,UAAU,CAAC,GAAG;AACjD,eAAO,WAAW,MAAM,MAAK;AAE7B,YAAIA,aAAY;AAAW,UAAAA,WAAU,OAAO,WAAW,YAAYA,QAAO;AAC1E,kBAAU,OAAO,WAAW,kBAAkB,OAAO;AAGrD,YAAI,IAAI;AAGR,YAAIA,aAAY,QAAW;AACzB,cAAIA,oBAAmB,SAAS;AAE9B,gBAAIA,SAAQ,MAAM;AAGlB,gBAAI,EAAE,WAAW,SAAS,CAAC,QAAQ,cAAc;AAC/C,qBAAO,CAAC;AAAA,YACV;AAAA,UACF,WAAW,OAAOA,aAAY,UAAU;AAEtC,gBAAI,IAAI,QAAQA,QAAO,EAAE,MAAM;AAAA,UACjC;AAAA,QACF;AAIA,cAAM,YAAY,CAAC;AAGnB,YAAIA,aAAY,QAAW;AAEzB,qBAAW,mBAAmB,KAAK,8BAA8B;AAC/D,sBAAU,KAAK,gBAAgB,CAAC,CAAC;AAAA,UACnC;AAAA,QACF,OAAO;AAEL,gBAAM,mBAAmB,KAAK,YAAY,GAAG,OAAO;AAGpD,qBAAW,mBAAmB,kBAAkB;AAC9C,sBAAU,KAAK,gBAAgB,CAAC,CAAC;AAAA,UACnC;AAAA,QACF;AAMA,cAAM,eAAe,CAAC;AAGtB,mBAAW,YAAY,WAAW;AAEhC,gBAAM,iBAAiB,IAAI,SAAS,SAAS,MAAM,UAAU,IAAI;AACjE,gBAAM,OAAO,eAAe,MAAM,EAAE;AACpC,yBAAe,MAAM,IAAI;AACzB,yBAAe,MAAM,EAAE,OAAO;AAC9B,yBAAe,QAAQ,EAAE,YAAY,IAAI,SAAS;AAClD,yBAAe,QAAQ,EAAE,MAAM,IAAI;AAEnC,uBAAa,KAAK,cAAc;AAAA,QAClC;AAGA,eAAO,OAAO,OAAO,YAAY;AAAA,MACnC;AAAA,MAEA,MAAM,IAAKA,UAAS;AAClB,eAAO,WAAW,MAAM,MAAK;AAC7B,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,YAAY,CAAC;AAEhE,QAAAA,WAAU,OAAO,WAAW,YAAYA,QAAO;AAG/C,cAAM,WAAW,CAACA,QAAO;AAGzB,cAAM,uBAAuB,KAAK,OAAO,QAAQ;AAGjD,eAAO,MAAM;AAAA,MACf;AAAA,MAEA,MAAM,OAAQ,UAAU;AACtB,eAAO,WAAW,MAAM,MAAK;AAC7B,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,eAAe,CAAC;AAEnE,mBAAW,OAAO,WAAW,uBAAuB,EAAE,QAAQ;AAG9D,cAAM,mBAAmB,CAAC;AAG1B,cAAM,cAAc,CAAC;AAGrB,mBAAWA,YAAW,UAAU;AAC9B,cAAI,OAAOA,aAAY,UAAU;AAC/B;AAAA,UACF;AAGA,gBAAM,IAAIA,SAAQ,MAAM;AAGxB,cAAI,CAAC,qBAAqB,EAAE,GAAG,KAAK,EAAE,WAAW,OAAO;AACtD,kBAAM,OAAO,OAAO,UAAU;AAAA,cAC5B,QAAQ;AAAA,cACR,SAAS;AAAA,YACX,CAAC;AAAA,UACH;AAAA,QACF;AAIA,cAAM,mBAAmB,CAAC;AAG1B,mBAAWA,YAAW,UAAU;AAE9B,gBAAM,IAAI,IAAI,QAAQA,QAAO,EAAE,MAAM;AAGrC,cAAI,CAAC,qBAAqB,EAAE,GAAG,GAAG;AAChC,kBAAM,OAAO,OAAO,UAAU;AAAA,cAC5B,QAAQ;AAAA,cACR,SAAS;AAAA,YACX,CAAC;AAAA,UACH;AAGA,YAAE,YAAY;AACd,YAAE,cAAc;AAGhB,sBAAY,KAAK,CAAC;AAGlB,gBAAM,kBAAkB,sBAAsB;AAG9C,2BAAiB,KAAK,SAAS;AAAA,YAC7B,SAAS;AAAA,YACT,YAAY,oBAAoB;AAAA,YAChC,gBAAiB,UAAU;AAEzB,kBAAI,SAAS,SAAS,WAAW,SAAS,WAAW,OAAO,SAAS,SAAS,OAAO,SAAS,SAAS,KAAK;AAC1G,gCAAgB,OAAO,OAAO,OAAO,UAAU;AAAA,kBAC7C,QAAQ;AAAA,kBACR,SAAS;AAAA,gBACX,CAAC,CAAC;AAAA,cACJ,WAAW,SAAS,YAAY,SAAS,MAAM,GAAG;AAEhD,sBAAM,cAAc,eAAe,SAAS,YAAY,IAAI,MAAM,CAAC;AAGnE,2BAAW,cAAc,aAAa;AAEpC,sBAAI,eAAe,KAAK;AACtB,oCAAgB,OAAO,OAAO,OAAO,UAAU;AAAA,sBAC7C,QAAQ;AAAA,sBACR,SAAS;AAAA,oBACX,CAAC,CAAC;AAEF,+BAAW,cAAc,kBAAkB;AACzC,iCAAW,MAAM;AAAA,oBACnB;AAEA;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,YACA,yBAA0B,UAAU;AAElC,kBAAI,SAAS,SAAS;AACpB,gCAAgB,OAAO,IAAI,aAAa,WAAW,YAAY,CAAC;AAChE;AAAA,cACF;AAGA,8BAAgB,QAAQ,QAAQ;AAAA,YAClC;AAAA,UACF,CAAC,CAAC;AAGF,2BAAiB,KAAK,gBAAgB,OAAO;AAAA,QAC/C;AAGA,cAAM,IAAI,QAAQ,IAAI,gBAAgB;AAGtC,cAAM,YAAY,MAAM;AAGxB,cAAM,aAAa,CAAC;AAGpB,YAAI,QAAQ;AAGZ,mBAAW,YAAY,WAAW;AAGhC,gBAAM,YAAY;AAAA,YAChB,MAAM;AAAA;AAAA,YACN,SAAS,YAAY,KAAK;AAAA;AAAA,YAC1B;AAAA;AAAA,UACF;AAEA,qBAAW,KAAK,SAAS;AAEzB;AAAA,QACF;AAGA,cAAM,kBAAkB,sBAAsB;AAG9C,YAAI,YAAY;AAGhB,YAAI;AACF,eAAK,sBAAsB,UAAU;AAAA,QACvC,SAAS,GAAG;AACV,sBAAY;AAAA,QACd;AAGA,uBAAe,MAAM;AAEnB,cAAI,cAAc,MAAM;AACtB,4BAAgB,QAAQ,MAAS;AAAA,UACnC,OAAO;AAEL,4BAAgB,OAAO,SAAS;AAAA,UAClC;AAAA,QACF,CAAC;AAGD,eAAO,gBAAgB;AAAA,MACzB;AAAA,MAEA,MAAM,IAAKA,UAAS,UAAU;AAC5B,eAAO,WAAW,MAAM,MAAK;AAC7B,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,YAAY,CAAC;AAEhE,QAAAA,WAAU,OAAO,WAAW,YAAYA,QAAO;AAC/C,mBAAW,OAAO,WAAW,SAAS,QAAQ;AAG9C,YAAI,eAAe;AAGnB,YAAIA,oBAAmB,SAAS;AAC9B,yBAAeA,SAAQ,MAAM;AAAA,QAC/B,OAAO;AACL,yBAAe,IAAI,QAAQA,QAAO,EAAE,MAAM;AAAA,QAC5C;AAGA,YAAI,CAAC,qBAAqB,aAAa,GAAG,KAAK,aAAa,WAAW,OAAO;AAC5E,gBAAM,OAAO,OAAO,UAAU;AAAA,YAC5B,QAAQ;AAAA,YACR,SAAS;AAAA,UACX,CAAC;AAAA,QACH;AAGA,cAAM,gBAAgB,SAAS,MAAM;AAGrC,YAAI,cAAc,WAAW,KAAK;AAChC,gBAAM,OAAO,OAAO,UAAU;AAAA,YAC5B,QAAQ;AAAA,YACR,SAAS;AAAA,UACX,CAAC;AAAA,QACH;AAGA,YAAI,cAAc,YAAY,SAAS,MAAM,GAAG;AAE9C,gBAAM,cAAc,eAAe,cAAc,YAAY,IAAI,MAAM,CAAC;AAGxE,qBAAW,cAAc,aAAa;AAEpC,gBAAI,eAAe,KAAK;AACtB,oBAAM,OAAO,OAAO,UAAU;AAAA,gBAC5B,QAAQ;AAAA,gBACR,SAAS;AAAA,cACX,CAAC;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAGA,YAAI,cAAc,SAAS,YAAY,cAAc,KAAK,MAAM,KAAK,cAAc,KAAK,OAAO,SAAS;AACtG,gBAAM,OAAO,OAAO,UAAU;AAAA,YAC5B,QAAQ;AAAA,YACR,SAAS;AAAA,UACX,CAAC;AAAA,QACH;AAGA,cAAM,iBAAiB,cAAc,aAAa;AAGlD,cAAM,kBAAkB,sBAAsB;AAG9C,YAAI,cAAc,QAAQ,MAAM;AAE9B,gBAAM,SAAS,cAAc,KAAK;AAGlC,gBAAM,SAAS,OAAO,UAAU;AAGhC,uBAAa,MAAM,EAAE,KAAK,gBAAgB,SAAS,gBAAgB,MAAM;AAAA,QAC3E,OAAO;AACL,0BAAgB,QAAQ,MAAS;AAAA,QACnC;AAIA,cAAM,aAAa,CAAC;AAIpB,cAAM,YAAY;AAAA,UAChB,MAAM;AAAA;AAAA,UACN,SAAS;AAAA;AAAA,UACT,UAAU;AAAA;AAAA,QACZ;AAGA,mBAAW,KAAK,SAAS;AAGzB,cAAM,QAAQ,MAAM,gBAAgB;AAEpC,YAAI,eAAe,QAAQ,MAAM;AAC/B,yBAAe,KAAK,SAAS;AAAA,QAC/B;AAGA,cAAM,kBAAkB,sBAAsB;AAG9C,YAAI,YAAY;AAGhB,YAAI;AACF,eAAK,sBAAsB,UAAU;AAAA,QACvC,SAAS,GAAG;AACV,sBAAY;AAAA,QACd;AAGA,uBAAe,MAAM;AAEnB,cAAI,cAAc,MAAM;AACtB,4BAAgB,QAAQ;AAAA,UAC1B,OAAO;AACL,4BAAgB,OAAO,SAAS;AAAA,UAClC;AAAA,QACF,CAAC;AAED,eAAO,gBAAgB;AAAA,MACzB;AAAA,MAEA,MAAM,OAAQA,UAAS,UAAU,CAAC,GAAG;AACnC,eAAO,WAAW,MAAM,MAAK;AAC7B,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,eAAe,CAAC;AAEnE,QAAAA,WAAU,OAAO,WAAW,YAAYA,QAAO;AAC/C,kBAAU,OAAO,WAAW,kBAAkB,OAAO;AAKrD,YAAI,IAAI;AAER,YAAIA,oBAAmB,SAAS;AAC9B,cAAIA,SAAQ,MAAM;AAElB,cAAI,EAAE,WAAW,SAAS,CAAC,QAAQ,cAAc;AAC/C,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,iBAAO,OAAOA,aAAY,QAAQ;AAElC,cAAI,IAAI,QAAQA,QAAO,EAAE,MAAM;AAAA,QACjC;AAGA,cAAM,aAAa,CAAC;AAGpB,cAAM,YAAY;AAAA,UAChB,MAAM;AAAA,UACN,SAAS;AAAA,UACT;AAAA,QACF;AAEA,mBAAW,KAAK,SAAS;AAEzB,cAAM,kBAAkB,sBAAsB;AAE9C,YAAI,YAAY;AAChB,YAAI;AAEJ,YAAI;AACF,6BAAmB,KAAK,sBAAsB,UAAU;AAAA,QAC1D,SAAS,GAAG;AACV,sBAAY;AAAA,QACd;AAEA,uBAAe,MAAM;AACnB,cAAI,cAAc,MAAM;AACtB,4BAAgB,QAAQ,CAAC,CAAC,kBAAkB,MAAM;AAAA,UACpD,OAAO;AACL,4BAAgB,OAAO,SAAS;AAAA,UAClC;AAAA,QACF,CAAC;AAED,eAAO,gBAAgB;AAAA,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,MAAM,KAAMA,WAAU,QAAW,UAAU,CAAC,GAAG;AAC7C,eAAO,WAAW,MAAM,MAAK;AAE7B,YAAIA,aAAY;AAAW,UAAAA,WAAU,OAAO,WAAW,YAAYA,QAAO;AAC1E,kBAAU,OAAO,WAAW,kBAAkB,OAAO;AAGrD,YAAI,IAAI;AAGR,YAAIA,aAAY,QAAW;AAEzB,cAAIA,oBAAmB,SAAS;AAE9B,gBAAIA,SAAQ,MAAM;AAGlB,gBAAI,EAAE,WAAW,SAAS,CAAC,QAAQ,cAAc;AAC/C,qBAAO,CAAC;AAAA,YACV;AAAA,UACF,WAAW,OAAOA,aAAY,UAAU;AACtC,gBAAI,IAAI,QAAQA,QAAO,EAAE,MAAM;AAAA,UACjC;AAAA,QACF;AAGA,cAAM9B,WAAU,sBAAsB;AAItC,cAAM,WAAW,CAAC;AAGlB,YAAI8B,aAAY,QAAW;AAEzB,qBAAW,mBAAmB,KAAK,8BAA8B;AAE/D,qBAAS,KAAK,gBAAgB,CAAC,CAAC;AAAA,UAClC;AAAA,QACF,OAAO;AAEL,gBAAM,mBAAmB,KAAK,YAAY,GAAG,OAAO;AAGpD,qBAAW,mBAAmB,kBAAkB;AAE9C,qBAAS,KAAK,gBAAgB,CAAC,CAAC;AAAA,UAClC;AAAA,QACF;AAGA,uBAAe,MAAM;AAEnB,gBAAM,cAAc,CAAC;AAGrB,qBAAWA,YAAW,UAAU;AAC9B,kBAAM,gBAAgB,IAAI,QAAQ,WAAW;AAC7C,0BAAc,MAAM,IAAIA;AACxB,0BAAc,QAAQ,EAAE,YAAY,IAAIA,SAAQ;AAChD,0BAAc,QAAQ,EAAE,MAAM,IAAI;AAClC,0BAAc,MAAM,IAAIA,SAAQ;AAGhC,wBAAY,KAAK,aAAa;AAAA,UAChC;AAGA,UAAA9B,SAAQ,QAAQ,OAAO,OAAO,WAAW,CAAC;AAAA,QAC5C,CAAC;AAED,eAAOA,SAAQ;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,sBAAuB,YAAY;AAEjC,cAAMiG,SAAQ,KAAK;AAGnB,cAAM,cAAc,CAAC,GAAGA,MAAK;AAG7B,cAAM,aAAa,CAAC;AAGpB,cAAM,aAAa,CAAC;AAEpB,YAAI;AAEF,qBAAW,aAAa,YAAY;AAElC,gBAAI,UAAU,SAAS,YAAY,UAAU,SAAS,OAAO;AAC3D,oBAAM,OAAO,OAAO,UAAU;AAAA,gBAC5B,QAAQ;AAAA,gBACR,SAAS;AAAA,cACX,CAAC;AAAA,YACH;AAGA,gBAAI,UAAU,SAAS,YAAY,UAAU,YAAY,MAAM;AAC7D,oBAAM,OAAO,OAAO,UAAU;AAAA,gBAC5B,QAAQ;AAAA,gBACR,SAAS;AAAA,cACX,CAAC;AAAA,YACH;AAGA,gBAAI,KAAK,YAAY,UAAU,SAAS,UAAU,SAAS,UAAU,EAAE,QAAQ;AAC7E,oBAAM,IAAI,aAAa,OAAO,mBAAmB;AAAA,YACnD;AAGA,gBAAI;AAGJ,gBAAI,UAAU,SAAS,UAAU;AAE/B,iCAAmB,KAAK,YAAY,UAAU,SAAS,UAAU,OAAO;AAGxE,kBAAI,iBAAiB,WAAW,GAAG;AACjC,uBAAO,CAAC;AAAA,cACV;AAGA,yBAAW,mBAAmB,kBAAkB;AAC9C,sBAAM,MAAMA,OAAM,QAAQ,eAAe;AACzC,uBAAO,QAAQ,EAAE;AAGjB,gBAAAA,OAAM,OAAO,KAAK,CAAC;AAAA,cACrB;AAAA,YACF,WAAW,UAAU,SAAS,OAAO;AAEnC,kBAAI,UAAU,YAAY,MAAM;AAC9B,sBAAM,OAAO,OAAO,UAAU;AAAA,kBAC5B,QAAQ;AAAA,kBACR,SAAS;AAAA,gBACX,CAAC;AAAA,cACH;AAGA,oBAAM,IAAI,UAAU;AAGpB,kBAAI,CAAC,qBAAqB,EAAE,GAAG,GAAG;AAChC,sBAAM,OAAO,OAAO,UAAU;AAAA,kBAC5B,QAAQ;AAAA,kBACR,SAAS;AAAA,gBACX,CAAC;AAAA,cACH;AAGA,kBAAI,EAAE,WAAW,OAAO;AACtB,sBAAM,OAAO,OAAO,UAAU;AAAA,kBAC5B,QAAQ;AAAA,kBACR,SAAS;AAAA,gBACX,CAAC;AAAA,cACH;AAGA,kBAAI,UAAU,WAAW,MAAM;AAC7B,sBAAM,OAAO,OAAO,UAAU;AAAA,kBAC5B,QAAQ;AAAA,kBACR,SAAS;AAAA,gBACX,CAAC;AAAA,cACH;AAGA,iCAAmB,KAAK,YAAY,UAAU,OAAO;AAGrD,yBAAW,mBAAmB,kBAAkB;AAC9C,sBAAM,MAAMA,OAAM,QAAQ,eAAe;AACzC,uBAAO,QAAQ,EAAE;AAGjB,gBAAAA,OAAM,OAAO,KAAK,CAAC;AAAA,cACrB;AAGA,cAAAA,OAAM,KAAK,CAAC,UAAU,SAAS,UAAU,QAAQ,CAAC;AAGlD,yBAAW,KAAK,CAAC,UAAU,SAAS,UAAU,QAAQ,CAAC;AAAA,YACzD;AAGA,uBAAW,KAAK,CAAC,UAAU,SAAS,UAAU,QAAQ,CAAC;AAAA,UACzD;AAGA,iBAAO;AAAA,QACT,SAAS,GAAG;AAEV,eAAK,6BAA6B,SAAS;AAG3C,eAAK,+BAA+B;AAGpC,gBAAM;AAAA,QACR;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,YAAa,cAAc,SAAS,eAAe;AAEjD,cAAM,aAAa,CAAC;AAEpB,cAAM,UAAU,iBAAiB,KAAK;AAEtC,mBAAW,mBAAmB,SAAS;AACrC,gBAAM,CAAC,eAAe,cAAc,IAAI;AACxC,cAAI,KAAK,0BAA0B,cAAc,eAAe,gBAAgB,OAAO,GAAG;AACxF,uBAAW,KAAK,eAAe;AAAA,UACjC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,0BAA2B,cAAcnE,UAAS,WAAW,MAAM,SAAS;AAK1E,cAAM,WAAW,IAAI,IAAI,aAAa,GAAG;AAEzC,cAAM,YAAY,IAAI,IAAIA,SAAQ,GAAG;AAErC,YAAI,SAAS,cAAc;AACzB,oBAAU,SAAS;AAEnB,mBAAS,SAAS;AAAA,QACpB;AAEA,YAAI,CAAC,UAAU,UAAU,WAAW,IAAI,GAAG;AACzC,iBAAO;AAAA,QACT;AAEA,YACE,YAAY,QACZ,SAAS,cACT,CAAC,SAAS,YAAY,SAAS,MAAM,GACrC;AACA,iBAAO;AAAA,QACT;AAEA,cAAM,cAAc,eAAe,SAAS,YAAY,IAAI,MAAM,CAAC;AAEnE,mBAAW,cAAc,aAAa;AACpC,cAAI,eAAe,KAAK;AACtB,mBAAO;AAAA,UACT;AAEA,gBAAM,eAAeA,SAAQ,YAAY,IAAI,UAAU;AACvD,gBAAM,aAAa,aAAa,YAAY,IAAI,UAAU;AAI1D,cAAI,iBAAiB,YAAY;AAC/B,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,iBAAiB,MAAM,WAAW;AAAA,MACvC,CAAC,OAAO,WAAW,GAAG;AAAA,QACpB,OAAO;AAAA,QACP,cAAc;AAAA,MAChB;AAAA,MACA,OAAO;AAAA,MACP,UAAU;AAAA,MACV,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAED,QAAM,6BAA6B;AAAA,MACjC;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,IACF;AAEA,WAAO,WAAW,oBAAoB,OAAO,oBAAoB,0BAA0B;AAE3F,WAAO,WAAW,yBAAyB,OAAO,oBAAoB;AAAA,MACpE,GAAG;AAAA,MACH;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,MAC/B;AAAA,IACF,CAAC;AAED,WAAO,WAAW,WAAW,OAAO,mBAAmB,QAAQ;AAE/D,WAAO,WAAW,uBAAuB,IAAI,OAAO;AAAA,MAClD,OAAO,WAAW;AAAA,IACpB;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;ACr0BA;AAAA;AAAA;AAEA,QAAM,EAAE,WAAW,IAAI;AACvB,QAAM,EAAE,MAAM,IAAI;AAClB,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,EAAE,oBAAoB,IAAI;AAEhC,QAAM,eAAN,MAAM,cAAa;AAAA;AAAA;AAAA;AAAA;AAAA,MAKjB,UAAU,oBAAI,IAAI;AAAA,MAElB,cAAe;AACb,YAAI,UAAU,CAAC,MAAM,YAAY;AAC/B,iBAAO,mBAAmB;AAAA,QAC5B;AAAA,MACF;AAAA,MAEA,MAAM,MAAOA,UAAS,UAAU,CAAC,GAAG;AAClC,eAAO,WAAW,MAAM,aAAY;AACpC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,qBAAqB,CAAC;AAEzE,QAAAA,WAAU,OAAO,WAAW,YAAYA,QAAO;AAC/C,kBAAU,OAAO,WAAW,uBAAuB,OAAO;AAG1D,YAAI,QAAQ,aAAa,MAAM;AAE7B,cAAI,KAAK,QAAQ,IAAI,QAAQ,SAAS,GAAG;AAEvC,kBAAM,YAAY,KAAK,QAAQ,IAAI,QAAQ,SAAS;AACpD,kBAAMmE,SAAQ,IAAI,MAAM,YAAY,SAAS;AAE7C,mBAAO,MAAMA,OAAM,MAAMnE,UAAS,OAAO;AAAA,UAC3C;AAAA,QACF,OAAO;AAEL,qBAAW,aAAa,KAAK,QAAQ,OAAO,GAAG;AAC7C,kBAAMmE,SAAQ,IAAI,MAAM,YAAY,SAAS;AAG7C,kBAAM,WAAW,MAAMA,OAAM,MAAMnE,UAAS,OAAO;AAEnD,gBAAI,aAAa,QAAW;AAC1B,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,MAAM,IAAK,WAAW;AACpB,eAAO,WAAW,MAAM,aAAY;AACpC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,mBAAmB,CAAC;AAEvE,oBAAY,OAAO,WAAW,UAAU,SAAS;AAIjD,eAAO,KAAK,QAAQ,IAAI,SAAS;AAAA,MACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,MAAM,KAAM,WAAW;AACrB,eAAO,WAAW,MAAM,aAAY;AACpC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,oBAAoB,CAAC;AAExE,oBAAY,OAAO,WAAW,UAAU,SAAS;AAGjD,YAAI,KAAK,QAAQ,IAAI,SAAS,GAAG;AAI/B,gBAAMmE,SAAQ,KAAK,QAAQ,IAAI,SAAS;AAGxC,iBAAO,IAAI,MAAM,YAAYA,MAAK;AAAA,QACpC;AAGA,cAAMA,SAAQ,CAAC;AAGf,aAAK,QAAQ,IAAI,WAAWA,MAAK;AAGjC,eAAO,IAAI,MAAM,YAAYA,MAAK;AAAA,MACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,MAAM,OAAQ,WAAW;AACvB,eAAO,WAAW,MAAM,aAAY;AACpC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,sBAAsB,CAAC;AAE1E,oBAAY,OAAO,WAAW,UAAU,SAAS;AAEjD,eAAO,KAAK,QAAQ,OAAO,SAAS;AAAA,MACtC;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM,OAAQ;AACZ,eAAO,WAAW,MAAM,aAAY;AAGpC,cAAMrH,QAAO,KAAK,QAAQ,KAAK;AAG/B,eAAO,CAAC,GAAGA,KAAI;AAAA,MACjB;AAAA,IACF;AAEA,WAAO,iBAAiB,aAAa,WAAW;AAAA,MAC9C,CAAC,OAAO,WAAW,GAAG;AAAA,QACpB,OAAO;AAAA,QACP,cAAc;AAAA,MAChB;AAAA,MACA,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAED,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;AC/IA,IAAAsH,qBAAA;AAAA;AAAA;AAGA,QAAM,wBAAwB;AAG9B,QAAM,uBAAuB;AAE7B,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACXA,IAAAtE,gBAAA;AAAA;AAAA;AAEA,QAAM,SAAS,UAAQ,QAAQ;AAC/B,QAAM,EAAE,aAAa,IAAI;AAEzB,aAAS,mBAAoBjD,QAAO;AAClC,UAAIA,OAAM,WAAW,GAAG;AACtB,eAAO;AAAA,MACT;AAEA,iBAAW,QAAQA,QAAO;AACxB,cAAM,OAAO,KAAK,WAAW,CAAC;AAE9B,YACG,QAAQ,KAAQ,QAAQ,MACxB,QAAQ,MAAQ,QAAQ,OACzB,SAAS,KACT;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAWA,aAAS,mBAAoB,MAAM;AACjC,iBAAW,QAAQ,MAAM;AACvB,cAAM,OAAO,KAAK,WAAW,CAAC;AAE9B,YACG,QAAQ,MAAQ,OAAO,OACxB,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,QACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,KACT;AACA,gBAAM,IAAI,MAAM,qBAAqB;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AAUA,aAAS,oBAAqBA,QAAO;AACnC,iBAAW,QAAQA,QAAO;AACxB,cAAM,OAAO,KAAK,WAAW,CAAC;AAE9B,YACE,OAAO;AAAA,QACP,SAAS,MACT,SAAS,MACT,SAAS,MACT,SAAS,MACT,OAAO,KACP;AACA,gBAAM,IAAI,MAAM,sBAAsB;AAAA,QACxC;AAAA,MACF;AAAA,IACF;AAMA,aAAS,mBAAoB,MAAM;AACjC,iBAAW,QAAQ,MAAM;AACvB,cAAM,OAAO,KAAK,WAAW,CAAC;AAE9B,YAAI,OAAO,MAAQ,SAAS,KAAK;AAC/B,gBAAM,IAAI,MAAM,qBAAqB;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AAOA,aAAS,qBAAsB,QAAQ;AACrC,UACE,OAAO,WAAW,GAAG,KACrB,OAAO,SAAS,GAAG,KACnB,OAAO,SAAS,GAAG,GACnB;AACA,cAAM,IAAI,MAAM,uBAAuB;AAAA,MACzC;AAAA,IACF;AA2CA,aAAS,UAAWwH,OAAM;AACxB,UAAI,OAAOA,UAAS,UAAU;AAC5B,QAAAA,QAAO,IAAI,KAAKA,KAAI;AAAA,MACtB;AAEA,YAAMC,QAAO;AAAA,QACX;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACrB;AAAA,QAAO;AAAA,QAAO;AAAA,MAChB;AAEA,YAAM,SAAS;AAAA,QACb;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QACnC;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,QAAO;AAAA,MACrC;AAEA,YAAM,UAAUA,MAAKD,MAAK,UAAU,CAAC;AACrC,YAAM,MAAMA,MAAK,WAAW,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG;AACxD,YAAM,QAAQ,OAAOA,MAAK,YAAY,CAAC;AACvC,YAAM,OAAOA,MAAK,eAAe;AACjC,YAAM,OAAOA,MAAK,YAAY,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG;AAC1D,YAAM,SAASA,MAAK,cAAc,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG;AAC9D,YAAM,SAASA,MAAK,cAAc,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG;AAE9D,aAAO,GAAG,OAAO,KAAK,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,IAAI,MAAM;AAAA,IACxE;AASA,aAAS,qBAAsB,QAAQ;AACrC,UAAI,SAAS,GAAG;AACd,cAAM,IAAI,MAAM,wBAAwB;AAAA,MAC1C;AAAA,IACF;AAMA,aAAS,UAAW,QAAQ;AAC1B,UAAI,OAAO,KAAK,WAAW,GAAG;AAC5B,eAAO;AAAA,MACT;AAEA,yBAAmB,OAAO,IAAI;AAC9B,0BAAoB,OAAO,KAAK;AAEhC,YAAM,MAAM,CAAC,GAAG,OAAO,IAAI,IAAI,OAAO,KAAK,EAAE;AAI7C,UAAI,OAAO,KAAK,WAAW,WAAW,GAAG;AACvC,eAAO,SAAS;AAAA,MAClB;AAEA,UAAI,OAAO,KAAK,WAAW,SAAS,GAAG;AACrC,eAAO,SAAS;AAChB,eAAO,SAAS;AAChB,eAAO,OAAO;AAAA,MAChB;AAEA,UAAI,OAAO,QAAQ;AACjB,YAAI,KAAK,QAAQ;AAAA,MACnB;AAEA,UAAI,OAAO,UAAU;AACnB,YAAI,KAAK,UAAU;AAAA,MACrB;AAEA,UAAI,OAAO,OAAO,WAAW,UAAU;AACrC,6BAAqB,OAAO,MAAM;AAClC,YAAI,KAAK,WAAW,OAAO,MAAM,EAAE;AAAA,MACrC;AAEA,UAAI,OAAO,QAAQ;AACjB,6BAAqB,OAAO,MAAM;AAClC,YAAI,KAAK,UAAU,OAAO,MAAM,EAAE;AAAA,MACpC;AAEA,UAAI,OAAO,MAAM;AACf,2BAAmB,OAAO,IAAI;AAC9B,YAAI,KAAK,QAAQ,OAAO,IAAI,EAAE;AAAA,MAChC;AAEA,UAAI,OAAO,WAAW,OAAO,QAAQ,SAAS,MAAM,gBAAgB;AAClE,YAAI,KAAK,WAAW,UAAU,OAAO,OAAO,CAAC,EAAE;AAAA,MACjD;AAEA,UAAI,OAAO,UAAU;AACnB,YAAI,KAAK,YAAY,OAAO,QAAQ,EAAE;AAAA,MACxC;AAEA,iBAAW,QAAQ,OAAO,UAAU;AAClC,YAAI,CAAC,KAAK,SAAS,GAAG,GAAG;AACvB,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACpC;AAEA,cAAM,CAAC,KAAK,GAAGxH,MAAK,IAAI,KAAK,MAAM,GAAG;AAEtC,YAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAIA,OAAM,KAAK,GAAG,CAAC,EAAE;AAAA,MAC7C;AAEA,aAAO,IAAI,KAAK,IAAI;AAAA,IACtB;AAEA,QAAI;AAEJ,aAAS,eAAgB,SAAS;AAChC,UAAI,QAAQ,YAAY,GAAG;AACzB,eAAO,QAAQ,YAAY;AAAA,MAC7B;AAEA,UAAI,CAAC,kBAAkB;AACrB,2BAAmB,OAAO,sBAAsB,OAAO,EAAE;AAAA,UACvD,CAAC0H,YAAWA,QAAO,gBAAgB;AAAA,QACrC;AAEA,eAAO,kBAAkB,0BAA0B;AAAA,MACrD;AAEA,YAAM,cAAc,QAAQ,gBAAgB;AAC5C,aAAO,WAAW;AAElB,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AClSA;AAAA;AAAA;AAEA,QAAM,EAAE,sBAAsB,sBAAsB,IAAI;AACxD,QAAM,EAAE,mBAAmB,IAAI;AAC/B,QAAM,EAAE,iCAAiC,IAAI;AAC7C,QAAM,SAAS,UAAQ,QAAQ;AAQ/B,aAAS,eAAgB,QAAQ;AAI/B,UAAI,mBAAmB,MAAM,GAAG;AAC9B,eAAO;AAAA,MACT;AAEA,UAAI,gBAAgB;AACpB,UAAI,qBAAqB;AACzB,UAAI,OAAO;AACX,UAAI1H,SAAQ;AAGZ,UAAI,OAAO,SAAS,GAAG,GAAG;AAKxB,cAAM,WAAW,EAAE,UAAU,EAAE;AAE/B,wBAAgB,iCAAiC,KAAK,QAAQ,QAAQ;AACtE,6BAAqB,OAAO,MAAM,SAAS,QAAQ;AAAA,MACrD,OAAO;AAML,wBAAgB;AAAA,MAClB;AAKA,UAAI,CAAC,cAAc,SAAS,GAAG,GAAG;AAChC,QAAAA,SAAQ;AAAA,MACV,OAAO;AAKL,cAAM,WAAW,EAAE,UAAU,EAAE;AAC/B,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA,QAAAA,SAAQ,cAAc,MAAM,SAAS,WAAW,CAAC;AAAA,MACnD;AAIA,aAAO,KAAK,KAAK;AACjB,MAAAA,SAAQA,OAAM,KAAK;AAKnB,UAAI,KAAK,SAASA,OAAM,SAAS,sBAAsB;AACrD,eAAO;AAAA,MACT;AAIA,aAAO;AAAA,QACL;AAAA,QAAM,OAAAA;AAAA,QAAO,GAAG,wBAAwB,kBAAkB;AAAA,MAC5D;AAAA,IACF;AAQA,aAAS,wBAAyB,oBAAoB,sBAAsB,CAAC,GAAG;AAG9E,UAAI,mBAAmB,WAAW,GAAG;AACnC,eAAO;AAAA,MACT;AAIA,aAAO,mBAAmB,CAAC,MAAM,GAAG;AACpC,2BAAqB,mBAAmB,MAAM,CAAC;AAE/C,UAAI,WAAW;AAIf,UAAI,mBAAmB,SAAS,GAAG,GAAG;AAGpC,mBAAW;AAAA,UACT;AAAA,UACA;AAAA,UACA,EAAE,UAAU,EAAE;AAAA,QAChB;AACA,6BAAqB,mBAAmB,MAAM,SAAS,MAAM;AAAA,MAC/D,OAAO;AAIL,mBAAW;AACX,6BAAqB;AAAA,MACvB;AAIA,UAAI,gBAAgB;AACpB,UAAI,iBAAiB;AAGrB,UAAI,SAAS,SAAS,GAAG,GAAG;AAM1B,cAAM,WAAW,EAAE,UAAU,EAAE;AAE/B,wBAAgB;AAAA,UACd;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA,yBAAiB,SAAS,MAAM,SAAS,WAAW,CAAC;AAAA,MACvD,OAAO;AAKL,wBAAgB;AAAA,MAClB;AAIA,sBAAgB,cAAc,KAAK;AACnC,uBAAiB,eAAe,KAAK;AAIrC,UAAI,eAAe,SAAS,uBAAuB;AACjD,eAAO,wBAAwB,oBAAoB,mBAAmB;AAAA,MACxE;AAKA,YAAM,yBAAyB,cAAc,YAAY;AAKzD,UAAI,2BAA2B,WAAW;AAGxC,cAAM,aAAa,IAAI,KAAK,cAAc;AAK1C,4BAAoB,UAAU;AAAA,MAChC,WAAW,2BAA2B,WAAW;AAO/C,cAAM,WAAW,eAAe,WAAW,CAAC;AAE5C,aAAK,WAAW,MAAM,WAAW,OAAO,eAAe,CAAC,MAAM,KAAK;AACjE,iBAAO,wBAAwB,oBAAoB,mBAAmB;AAAA,QACxE;AAIA,YAAI,CAAC,QAAQ,KAAK,cAAc,GAAG;AACjC,iBAAO,wBAAwB,oBAAoB,mBAAmB;AAAA,QACxE;AAGA,cAAM,eAAe,OAAO,cAAc;AAiB1C,4BAAoB,SAAS;AAAA,MAC/B,WAAW,2BAA2B,UAAU;AAM9C,YAAI,eAAe;AAInB,YAAI,aAAa,CAAC,MAAM,KAAK;AAC3B,yBAAe,aAAa,MAAM,CAAC;AAAA,QACrC;AAGA,uBAAe,aAAa,YAAY;AAIxC,4BAAoB,SAAS;AAAA,MAC/B,WAAW,2BAA2B,QAAQ;AAO5C,YAAI,aAAa;AACjB,YAAI,eAAe,WAAW,KAAK,eAAe,CAAC,MAAM,KAAK;AAE5D,uBAAa;AAAA,QACf,OAAO;AAIL,uBAAa;AAAA,QACf;AAIA,4BAAoB,OAAO;AAAA,MAC7B,WAAW,2BAA2B,UAAU;AAM9C,4BAAoB,SAAS;AAAA,MAC/B,WAAW,2BAA2B,YAAY;AAOhD,4BAAoB,WAAW;AAAA,MACjC,WAAW,2BAA2B,YAAY;AAMhD,YAAI,cAAc;AAElB,cAAM,0BAA0B,eAAe,YAAY;AAG3D,YAAI,wBAAwB,SAAS,MAAM,GAAG;AAC5C,wBAAc;AAAA,QAChB;AAIA,YAAI,wBAAwB,SAAS,QAAQ,GAAG;AAC9C,wBAAc;AAAA,QAChB;AAIA,YAAI,wBAAwB,SAAS,KAAK,GAAG;AAC3C,wBAAc;AAAA,QAChB;AAKA,4BAAoB,WAAW;AAAA,MACjC,OAAO;AACL,4BAAoB,aAAa,CAAC;AAElC,4BAAoB,SAAS,KAAK,GAAG,aAAa,IAAI,cAAc,EAAE;AAAA,MACxE;AAGA,aAAO,wBAAwB,oBAAoB,mBAAmB;AAAA,IACxE;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC5TA;AAAA;AAAA;AAEA,QAAM,EAAE,eAAe,IAAI;AAC3B,QAAM,EAAE,WAAW,eAAe,IAAI;AACtC,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,EAAE,QAAQ,IAAI;AAoBpB,aAAS,WAAY,SAAS;AAC5B,aAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,aAAa,CAAC;AAEjE,aAAO,WAAW,SAAS,SAAS,EAAE,QAAQ,MAAM,CAAC;AAErD,YAAM,SAAS,QAAQ,IAAI,QAAQ;AACnC,YAAM,MAAM,CAAC;AAEb,UAAI,CAAC,QAAQ;AACX,eAAO;AAAA,MACT;AAEA,iBAAW,SAAS,OAAO,MAAM,GAAG,GAAG;AACrC,cAAM,CAAC,MAAM,GAAGA,MAAK,IAAI,MAAM,MAAM,GAAG;AAExC,YAAI,KAAK,KAAK,CAAC,IAAIA,OAAM,KAAK,GAAG;AAAA,MACnC;AAEA,aAAO;AAAA,IACT;AAQA,aAAS,aAAc,SAAS,MAAM,YAAY;AAChD,aAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,eAAe,CAAC;AAEnE,aAAO,WAAW,SAAS,SAAS,EAAE,QAAQ,MAAM,CAAC;AAErD,aAAO,OAAO,WAAW,UAAU,IAAI;AACvC,mBAAa,OAAO,WAAW,uBAAuB,UAAU;AAIhE,gBAAU,SAAS;AAAA,QACjB;AAAA,QACA,OAAO;AAAA,QACP,SAAS,oBAAI,KAAK,CAAC;AAAA,QACnB,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAMA,aAAS,cAAe,SAAS;AAC/B,aAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,gBAAgB,CAAC;AAEpE,aAAO,WAAW,SAAS,SAAS,EAAE,QAAQ,MAAM,CAAC;AAErD,YAAM,UAAU,eAAe,OAAO,EAAE;AAExC,UAAI,CAAC,SAAS;AACZ,eAAO,CAAC;AAAA,MACV;AAGA,aAAO,QAAQ,IAAI,CAAC,SAAS,eAAe,MAAM,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;AAAA,IACnF;AAOA,aAAS,UAAW,SAAS,QAAQ;AACnC,aAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,YAAY,CAAC;AAEhE,aAAO,WAAW,SAAS,SAAS,EAAE,QAAQ,MAAM,CAAC;AAErD,eAAS,OAAO,WAAW,OAAO,MAAM;AAExC,YAAM,MAAM,UAAU,MAAM;AAE5B,UAAI,KAAK;AACP,gBAAQ,OAAO,cAAc,UAAU,MAAM,CAAC;AAAA,MAChD;AAAA,IACF;AAEA,WAAO,WAAW,yBAAyB,OAAO,oBAAoB;AAAA,MACpE;AAAA,QACE,WAAW,OAAO,kBAAkB,OAAO,WAAW,SAAS;AAAA,QAC/D,KAAK;AAAA,QACL,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,WAAW,OAAO,kBAAkB,OAAO,WAAW,SAAS;AAAA,QAC/D,KAAK;AAAA,QACL,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AAED,WAAO,WAAW,SAAS,OAAO,oBAAoB;AAAA,MACpD;AAAA,QACE,WAAW,OAAO,WAAW;AAAA,QAC7B,KAAK;AAAA,MACP;AAAA,MACA;AAAA,QACE,WAAW,OAAO,WAAW;AAAA,QAC7B,KAAK;AAAA,MACP;AAAA,MACA;AAAA,QACE,WAAW,OAAO,kBAAkB,CAACA,WAAU;AAC7C,cAAI,OAAOA,WAAU,UAAU;AAC7B,mBAAO,OAAO,WAAW,oBAAoB,EAAEA,MAAK;AAAA,UACtD;AAEA,iBAAO,IAAI,KAAKA,MAAK;AAAA,QACvB,CAAC;AAAA,QACD,KAAK;AAAA,QACL,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,WAAW,OAAO,kBAAkB,OAAO,WAAW,WAAW,CAAC;AAAA,QAClE,KAAK;AAAA,QACL,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,WAAW,OAAO,kBAAkB,OAAO,WAAW,SAAS;AAAA,QAC/D,KAAK;AAAA,QACL,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,WAAW,OAAO,kBAAkB,OAAO,WAAW,SAAS;AAAA,QAC/D,KAAK;AAAA,QACL,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,WAAW,OAAO,kBAAkB,OAAO,WAAW,OAAO;AAAA,QAC7D,KAAK;AAAA,QACL,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,WAAW,OAAO,kBAAkB,OAAO,WAAW,OAAO;AAAA,QAC7D,KAAK;AAAA,QACL,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,WAAW,OAAO,WAAW;AAAA,QAC7B,KAAK;AAAA,QACL,eAAe,CAAC,UAAU,OAAO,MAAM;AAAA,MACzC;AAAA,MACA;AAAA,QACE,WAAW,OAAO,kBAAkB,OAAO,WAAW,SAAS;AAAA,QAC/D,KAAK;AAAA,QACL,cAAc,CAAC;AAAA,MACjB;AAAA,IACF,CAAC;AAED,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACvLA,IAAAuH,qBAAA;AAAA;AAAA;AAMA,QAAM,MAAM;AAGZ,QAAM,4BAA4B;AAAA,MAChC,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,cAAc;AAAA,IAChB;AAEA,QAAM,SAAS;AAAA,MACb,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAEA,QAAM,UAAU;AAAA,MACd,cAAc;AAAA,MACd,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACR;AAEA,QAAM,mBAAmB,KAAK,KAAK;AAEnC,QAAM,eAAe;AAAA,MACnB,MAAM;AAAA,MACN,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,WAAW;AAAA,IACb;AAEA,QAAM,cAAc,OAAO,YAAY,CAAC;AAExC,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AClDA,IAAA7D,mBAAA;AAAA;AAAA;AAEA,WAAO,UAAU;AAAA,MACf,eAAe,OAAO,KAAK;AAAA,MAC3B,aAAa,OAAO,aAAa;AAAA,MACjC,aAAa,OAAO,YAAY;AAAA,MAChC,WAAW,OAAO,UAAU;AAAA,MAC5B,aAAa,OAAO,aAAa;AAAA,MACjC,YAAY,OAAO,YAAY;AAAA,MAC/B,gBAAgB,OAAO,gBAAgB;AAAA,MACvC,aAAa,OAAO,aAAa;AAAA,IACnC;AAAA;AAAA;;;ACXA;AAAA;AAAA;AAEA,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,EAAE,oBAAoB,IAAI;AAChC,QAAM,EAAE,YAAY,IAAI,UAAQ,gBAAgB;AAKhD,QAAM,eAAN,MAAM,sBAAqB,MAAM;AAAA,MAC/B;AAAA,MAEA,YAAa,MAAM,gBAAgB,CAAC,GAAG;AACrC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,2BAA2B,CAAC;AAE/E,eAAO,OAAO,WAAW,UAAU,IAAI;AACvC,wBAAgB,OAAO,WAAW,iBAAiB,aAAa;AAEhE,cAAM,MAAM,aAAa;AAEzB,aAAK,aAAa;AAAA,MACpB;AAAA,MAEA,IAAI,OAAQ;AACV,eAAO,WAAW,MAAM,aAAY;AAEpC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,SAAU;AACZ,eAAO,WAAW,MAAM,aAAY;AAEpC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,cAAe;AACjB,eAAO,WAAW,MAAM,aAAY;AAEpC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,SAAU;AACZ,eAAO,WAAW,MAAM,aAAY;AAEpC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,QAAS;AACX,eAAO,WAAW,MAAM,aAAY;AAEpC,YAAI,CAAC,OAAO,SAAS,KAAK,WAAW,KAAK,GAAG;AAC3C,iBAAO,OAAO,KAAK,WAAW,KAAK;AAAA,QACrC;AAEA,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,iBACE,MACA,UAAU,OACV,aAAa,OACb,OAAO,MACP,SAAS,IACT,cAAc,IACd,SAAS,MACT,QAAQ,CAAC,GACT;AACA,eAAO,WAAW,MAAM,aAAY;AAEpC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,gCAAgC,CAAC;AAEpF,eAAO,IAAI,cAAa,MAAM;AAAA,UAC5B;AAAA,UAAS;AAAA,UAAY;AAAA,UAAM;AAAA,UAAQ;AAAA,UAAa;AAAA,UAAQ;AAAA,QAC1D,CAAC;AAAA,MACH;AAAA,IACF;AAKA,QAAM,aAAN,MAAM,oBAAmB,MAAM;AAAA,MAC7B;AAAA,MAEA,YAAa,MAAM,gBAAgB,CAAC,GAAG;AACrC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,yBAAyB,CAAC;AAE7E,eAAO,OAAO,WAAW,UAAU,IAAI;AACvC,wBAAgB,OAAO,WAAW,eAAe,aAAa;AAE9D,cAAM,MAAM,aAAa;AAEzB,aAAK,aAAa;AAAA,MACpB;AAAA,MAEA,IAAI,WAAY;AACd,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,OAAQ;AACV,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,SAAU;AACZ,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,IACF;AAGA,QAAM,aAAN,MAAM,oBAAmB,MAAM;AAAA,MAC7B;AAAA,MAEA,YAAa,MAAM,eAAe;AAChC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,yBAAyB,CAAC;AAE7E,cAAM,MAAM,aAAa;AAEzB,eAAO,OAAO,WAAW,UAAU,IAAI;AACvC,wBAAgB,OAAO,WAAW,eAAe,iBAAiB,CAAC,CAAC;AAEpE,aAAK,aAAa;AAAA,MACpB;AAAA,MAEA,IAAI,UAAW;AACb,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,WAAY;AACd,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,SAAU;AACZ,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,QAAS;AACX,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,QAAS;AACX,eAAO,WAAW,MAAM,WAAU;AAElC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,IACF;AAEA,WAAO,iBAAiB,aAAa,WAAW;AAAA,MAC9C,CAAC,OAAO,WAAW,GAAG;AAAA,QACpB,OAAO;AAAA,QACP,cAAc;AAAA,MAChB;AAAA,MACA,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,kBAAkB;AAAA,IACpB,CAAC;AAED,WAAO,iBAAiB,WAAW,WAAW;AAAA,MAC5C,CAAC,OAAO,WAAW,GAAG;AAAA,QACpB,OAAO;AAAA,QACP,cAAc;AAAA,MAChB;AAAA,MACA,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACZ,CAAC;AAED,WAAO,iBAAiB,WAAW,WAAW;AAAA,MAC5C,CAAC,OAAO,WAAW,GAAG;AAAA,QACpB,OAAO;AAAA,QACP,cAAc;AAAA,MAChB;AAAA,MACA,SAAS;AAAA,MACT,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IACT,CAAC;AAED,WAAO,WAAW,cAAc,OAAO,mBAAmB,WAAW;AAErE,WAAO,WAAW,uBAAuB,IAAI,OAAO;AAAA,MAClD,OAAO,WAAW;AAAA,IACpB;AAEA,QAAM,YAAY;AAAA,MAChB;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,IACF;AAEA,WAAO,WAAW,mBAAmB,OAAO,oBAAoB;AAAA,MAC9D,GAAG;AAAA,MACH;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA;AAAA;AAAA,QAGL,WAAW,OAAO,kBAAkB,OAAO,WAAW,WAAW;AAAA,QACjE,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW,uBAAuB;AAAA,QACpD,IAAI,eAAgB;AAClB,iBAAO,CAAC;AAAA,QACV;AAAA,MACF;AAAA,IACF,CAAC;AAED,WAAO,WAAW,iBAAiB,OAAO,oBAAoB;AAAA,MAC5D,GAAG;AAAA,MACH;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW,gBAAgB;AAAA,QAC7C,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AAED,WAAO,WAAW,iBAAiB,OAAO,oBAAoB;AAAA,MAC5D,GAAG;AAAA,MACH;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,QAC7B,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW,eAAe;AAAA,QAC5C,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW,eAAe;AAAA,QAC5C,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW;AAAA,MAC/B;AAAA,IACF,CAAC;AAED,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC9SA,IAAAT,gBAAA;AAAA;AAAA;AAEA,QAAM,EAAE,aAAa,aAAa,WAAW,aAAa,cAAc,IAAI;AAC5E,QAAM,EAAE,QAAQ,QAAQ,IAAI;AAC5B,QAAM,EAAE,cAAc,WAAW,IAAI;AAOrC,aAAS,cAAe,IAAI;AAI1B,aAAO,GAAG,WAAW,MAAM,OAAO;AAAA,IACpC;AAKA,aAAS,UAAW,IAAI;AAItB,aAAO,GAAG,WAAW,MAAM,OAAO;AAAA,IACpC;AAKA,aAAS,SAAU,IAAI;AACrB,aAAO,GAAG,WAAW,MAAM,OAAO;AAAA,IACpC;AAQA,aAAS,UAAW,GAAG,QAAQ,mBAAmB,OAAO,eAAe;AAMtE,YAAM,QAAQ,IAAI,iBAAiB,GAAG,aAAa;AAOnD,aAAO,cAAc,KAAK;AAAA,IAC5B;AAQA,aAAS,yBAA0B,IAAI,MAAM,MAAM;AAEjD,UAAI,GAAG,WAAW,MAAM,OAAO,MAAM;AACnC;AAAA,MACF;AAGA,UAAI;AAEJ,UAAI,SAAS,QAAQ,MAAM;AAGzB,YAAI;AACF,yBAAe,IAAI,YAAY,SAAS,EAAE,OAAO,KAAK,CAAC,EAAE,OAAO,IAAI;AAAA,QACtE,QAAQ;AACN,kCAAwB,IAAI,uCAAuC;AACnE;AAAA,QACF;AAAA,MACF,WAAW,SAAS,QAAQ,QAAQ;AAClC,YAAI,GAAG,WAAW,MAAM,QAAQ;AAI9B,yBAAe,IAAI,KAAK,CAAC,IAAI,CAAC;AAAA,QAChC,OAAO;AAIL,yBAAe,IAAI,WAAW,IAAI,EAAE;AAAA,QACtC;AAAA,MACF;AAKA,gBAAU,WAAW,IAAI,cAAc;AAAA,QACrC,QAAQ,GAAG,aAAa,EAAE;AAAA,QAC1B,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AAQA,aAAS,mBAAoB,UAAU;AAOrC,UAAI,SAAS,WAAW,GAAG;AACzB,eAAO;AAAA,MACT;AAEA,iBAAW,QAAQ,UAAU;AAC3B,cAAM,OAAO,KAAK,WAAW,CAAC;AAE9B,YACE,OAAO,MACP,OAAO,OACP,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,QACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS;AAAA,QACT,SAAS,GACT;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAMA,aAAS,kBAAmB,MAAM;AAChC,UAAI,QAAQ,OAAQ,OAAO,MAAM;AAC/B,eACE,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,MAEb;AAEA,aAAO,QAAQ,OAAQ,QAAQ;AAAA,IACjC;AAMA,aAAS,wBAAyB,IAAI,QAAQ;AAC5C,YAAM,EAAE,CAAC,WAAW,GAAG,YAAY,CAAC,SAAS,GAAG,SAAS,IAAI;AAE7D,iBAAW,MAAM;AAEjB,UAAI,UAAU,UAAU,CAAC,SAAS,OAAO,WAAW;AAClD,iBAAS,OAAO,QAAQ;AAAA,MAC1B;AAEA,UAAI,QAAQ;AACV,kBAAU,SAAS,IAAI,YAAY;AAAA,UACjC,OAAO,IAAI,MAAM,MAAM;AAAA,QACzB,CAAC;AAAA,MACH;AAAA,IACF;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACvMA;AAAA;AAAA;AAEA,QAAM,qBAAqB,UAAQ,qBAAqB;AACxD,QAAM,EAAE,KAAK,OAAO,IAAI;AACxB,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAM,EAAE,WAAW,wBAAwB,IAAI;AAC/C,QAAM,EAAE,WAAW,IAAI;AACvB,QAAM,EAAE,YAAY,IAAI;AACxB,QAAM,EAAE,SAAS,IAAI;AACrB,QAAM,EAAE,QAAQ,IAAI;AACpB,QAAM,EAAE,oBAAoB,IAAI;AAChC,QAAM,EAAE,aAAa,IAAI;AAEzB,QAAM,WAAW,CAAC;AAClB,aAAS,OAAO,mBAAmB,QAAQ,uBAAuB;AAClE,aAAS,QAAQ,mBAAmB,QAAQ,wBAAwB;AACpE,aAAS,cAAc,mBAAmB,QAAQ,+BAA+B;AAGjF,QAAI;AACJ,QAAI;AACF,eAAS,UAAQ,QAAQ;AAAA,IAC3B,QAAQ;AAAA,IAER;AAUA,aAAS,6BAA8B,KAAK,WAAW,IAAI,aAAa,SAAS;AAG/E,YAAM,aAAa;AAEnB,iBAAW,WAAW,IAAI,aAAa,QAAQ,UAAU;AAMzD,YAAME,WAAU,YAAY;AAAA,QAC1B,SAAS,CAAC,UAAU;AAAA,QACpB,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,MAAM;AAAA,QACN,aAAa;AAAA,QACb,OAAO;AAAA,QACP,UAAU;AAAA,MACZ,CAAC;AAGD,UAAI,QAAQ,SAAS;AACnB,cAAM,cAAc,IAAI,QAAQ,QAAQ,OAAO,EAAE,YAAY;AAE7D,QAAAA,SAAQ,cAAc;AAAA,MACxB;AAUA,YAAM,WAAW,OAAO,YAAY,EAAE,EAAE,SAAS,QAAQ;AAIzD,MAAAA,SAAQ,YAAY,OAAO,qBAAqB,QAAQ;AAIxD,MAAAA,SAAQ,YAAY,OAAO,yBAAyB,IAAI;AAKxD,iBAAW,YAAY,WAAW;AAChC,QAAAA,SAAQ,YAAY,OAAO,0BAA0B,QAAQ;AAAA,MAC/D;AAMA,YAAM,oBAAoB;AAQ1B,YAAM,aAAa,SAAS;AAAA,QAC1B,SAAAA;AAAA,QACA,kBAAkB;AAAA,QAClB,YAAY,QAAQ,cAAc,oBAAoB;AAAA,QACtD,gBAAiB,UAAU;AAGzB,cAAI,SAAS,SAAS,WAAW,SAAS,WAAW,KAAK;AACxD,oCAAwB,IAAI,gDAAgD;AAC5E;AAAA,UACF;AAMA,cAAI,UAAU,WAAW,KAAK,CAAC,SAAS,YAAY,IAAI,wBAAwB,GAAG;AACjF,oCAAwB,IAAI,6CAA6C;AACzE;AAAA,UACF;AAYA,cAAI,SAAS,YAAY,IAAI,SAAS,GAAG,YAAY,MAAM,aAAa;AACtE,oCAAwB,IAAI,mDAAmD;AAC/E;AAAA,UACF;AAMA,cAAI,SAAS,YAAY,IAAI,YAAY,GAAG,YAAY,MAAM,WAAW;AACvE,oCAAwB,IAAI,oDAAoD;AAChF;AAAA,UACF;AASA,gBAAM,cAAc,SAAS,YAAY,IAAI,sBAAsB;AACnE,gBAAM,SAAS,OAAO,WAAW,MAAM,EAAE,OAAO,WAAW,GAAG,EAAE,OAAO,QAAQ;AAC/E,cAAI,gBAAgB,QAAQ;AAC1B,oCAAwB,IAAI,yDAAyD;AACrF;AAAA,UACF;AASA,gBAAM,eAAe,SAAS,YAAY,IAAI,0BAA0B;AAExE,cAAI,iBAAiB,QAAQ,iBAAiB,mBAAmB;AAC/D,oCAAwB,IAAI,yDAAyD;AACrF;AAAA,UACF;AAOA,gBAAM,cAAc,SAAS,YAAY,IAAI,wBAAwB;AAErE,cAAI,gBAAgB,QAAQ,gBAAgBA,SAAQ,YAAY,IAAI,wBAAwB,GAAG;AAC7F,oCAAwB,IAAI,gDAAgD;AAC5E;AAAA,UACF;AAEA,mBAAS,OAAO,GAAG,QAAQ,YAAY;AACvC,mBAAS,OAAO,GAAG,SAAS,aAAa;AACzC,mBAAS,OAAO,GAAG,SAAS,aAAa;AAEzC,cAAI,SAAS,KAAK,gBAAgB;AAChC,qBAAS,KAAK,QAAQ;AAAA,cACpB,SAAS,SAAS,OAAO,QAAQ;AAAA,cACjC,UAAU;AAAA,cACV,YAAY;AAAA,YACd,CAAC;AAAA,UACH;AAEA,sBAAY,QAAQ;AAAA,QACtB;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAKA,aAAS,aAAcb,QAAO;AAC5B,UAAI,CAAC,KAAK,GAAG,WAAW,EAAE,MAAMA,MAAK,GAAG;AACtC,aAAK,MAAM;AAAA,MACb;AAAA,IACF;AAMA,aAAS,gBAAiB;AACxB,YAAM,EAAE,GAAG,IAAI;AAKf,YAAM,WAAW,GAAG,UAAU,KAAK,GAAG,cAAc;AAEpD,UAAI,OAAO;AACX,UAAI,SAAS;AAEb,YAAM,SAAS,GAAG,WAAW,EAAE;AAE/B,UAAI,QAAQ;AACV,eAAO,OAAO,QAAQ;AACtB,iBAAS,OAAO;AAAA,MAClB,WAAW,CAAC,GAAG,UAAU,GAAG;AAM1B,eAAO;AAAA,MACT;AAGA,SAAG,WAAW,IAAI,OAAO;AAgBzB,gBAAU,SAAS,IAAI,YAAY;AAAA,QACjC;AAAA,QAAU;AAAA,QAAM;AAAA,MAClB,CAAC;AAED,UAAI,SAAS,MAAM,gBAAgB;AACjC,iBAAS,MAAM,QAAQ;AAAA,UACrB,WAAW;AAAA,UACX;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAEA,aAAS,cAAe,OAAO;AAC7B,YAAM,EAAE,GAAG,IAAI;AAEf,SAAG,WAAW,IAAI,OAAO;AAEzB,UAAI,SAAS,YAAY,gBAAgB;AACvC,iBAAS,YAAY,QAAQ,KAAK;AAAA,MACpC;AAEA,WAAK,QAAQ;AAAA,IACf;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;AClSA;AAAA;AAAA;AAEA,QAAM,EAAE,iBAAiB,IAAI;AAG7B,QAAI;AACJ,QAAI;AACF,eAAS,UAAQ,QAAQ;AAAA,IAC3B,QAAQ;AAAA,IAER;AAEA,QAAM,qBAAN,MAAyB;AAAA;AAAA;AAAA;AAAA,MAIvB,YAAa,MAAM;AACjB,aAAK,YAAY;AACjB,aAAK,UAAU,OAAO,YAAY,CAAC;AAAA,MACrC;AAAA,MAEA,YAAa,QAAQ;AACnB,cAAM,aAAa,KAAK,WAAW,cAAc;AAGjD,YAAI,gBAAgB;AACpB,YAAI,SAAS;AAEb,YAAI,aAAa,kBAAkB;AACjC,oBAAU;AACV,0BAAgB;AAAA,QAClB,WAAW,aAAa,KAAK;AAC3B,oBAAU;AACV,0BAAgB;AAAA,QAClB;AAEA,cAAMF,UAAS,OAAO,YAAY,aAAa,MAAM;AAGrD,QAAAA,QAAO,CAAC,IAAIA,QAAO,CAAC,IAAI;AACxB,QAAAA,QAAO,CAAC,KAAK;AACb,QAAAA,QAAO,CAAC,KAAKA,QAAO,CAAC,IAAI,OAAQ;AAGjC,QAAAA,QAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;AACnC,QAAAA,QAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;AACnC,QAAAA,QAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;AACnC,QAAAA,QAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;AAEnC,QAAAA,QAAO,CAAC,IAAI;AAEZ,YAAI,kBAAkB,KAAK;AACzB,UAAAA,QAAO,cAAc,YAAY,CAAC;AAAA,QACpC,WAAW,kBAAkB,KAAK;AAEhC,UAAAA,QAAO,CAAC,IAAIA,QAAO,CAAC,IAAI;AACxB,UAAAA,QAAO,YAAY,YAAY,GAAG,CAAC;AAAA,QACrC;AAEA,QAAAA,QAAO,CAAC,KAAK;AAGb,iBAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,UAAAA,QAAO,SAAS,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC;AAAA,QAC7D;AAEA,eAAOA;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;ACxEA;AAAA;AAAA;AAEA,QAAM,EAAE,SAAS,IAAI,UAAQ,QAAQ;AACrC,QAAM,qBAAqB,UAAQ,qBAAqB;AACxD,QAAM,EAAE,cAAc,SAAS,QAAQ,YAAY,IAAI;AACvD,QAAM,EAAE,aAAa,YAAY,WAAW,eAAe,IAAI;AAC/D,QAAM,EAAE,mBAAmB,yBAAyB,yBAAyB,IAAI;AACjF,QAAM,EAAE,mBAAmB,IAAI;AAO/B,QAAM,WAAW,CAAC;AAClB,aAAS,OAAO,mBAAmB,QAAQ,uBAAuB;AAClE,aAAS,OAAO,mBAAmB,QAAQ,uBAAuB;AAElE,QAAM,aAAN,cAAyB,SAAS;AAAA,MAChC,WAAW,CAAC;AAAA,MACZ,cAAc;AAAA,MAEd,SAAS,aAAa;AAAA,MAEtB,QAAQ,CAAC;AAAA,MACT,aAAa,CAAC;AAAA,MAEd,YAAa,IAAI;AACf,cAAM;AAEN,aAAK,KAAK;AAAA,MACZ;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,OAAQE,QAAO,GAAG,UAAU;AAC1B,aAAK,SAAS,KAAKA,MAAK;AACxB,aAAK,eAAeA,OAAM;AAE1B,aAAK,IAAI,QAAQ;AAAA,MACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,IAAK,UAAU;AACb,eAAO,MAAM;AACX,cAAI,KAAK,WAAW,aAAa,MAAM;AAErC,gBAAI,KAAK,cAAc,GAAG;AACxB,qBAAO,SAAS;AAAA,YAClB;AAEA,kBAAMF,UAAS,KAAK,QAAQ,CAAC;AAE7B,iBAAK,MAAM,OAAOA,QAAO,CAAC,IAAI,SAAU;AACxC,iBAAK,MAAM,SAASA,QAAO,CAAC,IAAI;AAIhC,iBAAK,MAAM,mBAAmB,KAAK,MAAM;AAEzC,iBAAK,MAAM,aAAa,CAAC,KAAK,MAAM,OAAO,KAAK,MAAM,WAAW,QAAQ;AAEzE,gBAAI,KAAK,MAAM,cAAc,KAAK,MAAM,WAAW,QAAQ,UAAU,KAAK,MAAM,WAAW,QAAQ,MAAM;AAEvG,sCAAwB,KAAK,IAAI,oCAAoC;AACrE;AAAA,YACF;AAEA,kBAAM,gBAAgBA,QAAO,CAAC,IAAI;AAElC,gBAAI,iBAAiB,KAAK;AACxB,mBAAK,MAAM,gBAAgB;AAC3B,mBAAK,SAAS,aAAa;AAAA,YAC7B,WAAW,kBAAkB,KAAK;AAChC,mBAAK,SAAS,aAAa;AAAA,YAC7B,WAAW,kBAAkB,KAAK;AAChC,mBAAK,SAAS,aAAa;AAAA,YAC7B;AAEA,gBAAI,KAAK,MAAM,cAAc,gBAAgB,KAAK;AAEhD,sCAAwB,KAAK,IAAI,sCAAsC;AACvE;AAAA,YACF,YACG,KAAK,MAAM,WAAW,QAAQ,QAC7B,KAAK,MAAM,WAAW,QAAQ,QAC9B,KAAK,MAAM,WAAW,QAAQ,UAChC,gBAAgB,KAChB;AAEA,sCAAwB,KAAK,IAAI,sDAAsD;AACvF;AAAA,YACF,WAAW,KAAK,MAAM,WAAW,QAAQ,OAAO;AAC9C,kBAAI,kBAAkB,GAAG;AACvB,wCAAwB,KAAK,IAAI,0CAA0C;AAC3E;AAAA,cACF;AAEA,oBAAM,OAAO,KAAK,QAAQ,aAAa;AAEvC,mBAAK,MAAM,YAAY,KAAK,eAAe,OAAO,IAAI;AAEtD,kBAAI,CAAC,KAAK,GAAG,UAAU,GAAG;AAKxB,sBAAM6D,QAAO,OAAO,YAAY,CAAC;AACjC,gBAAAA,MAAK,cAAc,KAAK,MAAM,UAAU,MAAM,CAAC;AAC/C,sBAAM,aAAa,IAAI,mBAAmBA,KAAI;AAE9C,qBAAK,GAAG,SAAS,EAAE,OAAO;AAAA,kBACxB,WAAW,YAAY,QAAQ,KAAK;AAAA,kBACpC,CAAC,QAAQ;AACP,wBAAI,CAAC,KAAK;AACR,2BAAK,GAAG,UAAU,IAAI;AAAA,oBACxB;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAKA,mBAAK,GAAG,WAAW,IAAI,OAAO;AAC9B,mBAAK,GAAG,cAAc,IAAI;AAE1B,mBAAK,IAAI;AAET;AAAA,YACF,WAAW,KAAK,MAAM,WAAW,QAAQ,MAAM;AAM7C,oBAAM,OAAO,KAAK,QAAQ,aAAa;AAEvC,kBAAI,CAAC,KAAK,GAAG,cAAc,GAAG;AAC5B,sBAAM,QAAQ,IAAI,mBAAmB,IAAI;AAEzC,qBAAK,GAAG,SAAS,EAAE,OAAO,MAAM,MAAM,YAAY,QAAQ,IAAI,CAAC;AAE/D,oBAAI,SAAS,KAAK,gBAAgB;AAChC,2BAAS,KAAK,QAAQ;AAAA,oBACpB,SAAS;AAAA,kBACX,CAAC;AAAA,gBACH;AAAA,cACF;AAEA,mBAAK,SAAS,aAAa;AAE3B,kBAAI,KAAK,cAAc,GAAG;AACxB;AAAA,cACF,OAAO;AACL,yBAAS;AACT;AAAA,cACF;AAAA,YACF,WAAW,KAAK,MAAM,WAAW,QAAQ,MAAM;AAK7C,oBAAM,OAAO,KAAK,QAAQ,aAAa;AAEvC,kBAAI,SAAS,KAAK,gBAAgB;AAChC,yBAAS,KAAK,QAAQ;AAAA,kBACpB,SAAS;AAAA,gBACX,CAAC;AAAA,cACH;AAEA,kBAAI,KAAK,cAAc,GAAG;AACxB;AAAA,cACF,OAAO;AACL,yBAAS;AACT;AAAA,cACF;AAAA,YACF;AAAA,UACF,WAAW,KAAK,WAAW,aAAa,kBAAkB;AACxD,gBAAI,KAAK,cAAc,GAAG;AACxB,qBAAO,SAAS;AAAA,YAClB;AAEA,kBAAM7D,UAAS,KAAK,QAAQ,CAAC;AAE7B,iBAAK,MAAM,gBAAgBA,QAAO,aAAa,CAAC;AAChD,iBAAK,SAAS,aAAa;AAAA,UAC7B,WAAW,KAAK,WAAW,aAAa,kBAAkB;AACxD,gBAAI,KAAK,cAAc,GAAG;AACxB,qBAAO,SAAS;AAAA,YAClB;AAEA,kBAAMA,UAAS,KAAK,QAAQ,CAAC;AAC7B,kBAAM,QAAQA,QAAO,aAAa,CAAC;AAQnC,gBAAI,QAAQ,KAAK,KAAK,GAAG;AACvB,sCAAwB,KAAK,IAAI,uCAAuC;AACxE;AAAA,YACF;AAEA,kBAAM,QAAQA,QAAO,aAAa,CAAC;AAEnC,iBAAK,MAAM,iBAAiB,SAAS,KAAK;AAC1C,iBAAK,SAAS,aAAa;AAAA,UAC7B,WAAW,KAAK,WAAW,aAAa,WAAW;AACjD,gBAAI,KAAK,cAAc,KAAK,MAAM,eAAe;AAE/C,qBAAO,SAAS;AAAA,YAClB,WAAW,KAAK,eAAe,KAAK,MAAM,eAAe;AAGvD,oBAAM,OAAO,KAAK,QAAQ,KAAK,MAAM,aAAa;AAElD,mBAAK,WAAW,KAAK,IAAI;AAIzB,kBAAI,CAAC,KAAK,MAAM,cAAe,KAAK,MAAM,OAAO,KAAK,MAAM,WAAW,QAAQ,cAAe;AAC5F,sBAAM,cAAc,OAAO,OAAO,KAAK,UAAU;AAEjD,yCAAyB,KAAK,IAAI,KAAK,MAAM,gBAAgB,WAAW;AAExE,qBAAK,QAAQ,CAAC;AACd,qBAAK,WAAW,SAAS;AAAA,cAC3B;AAEA,mBAAK,SAAS,aAAa;AAAA,YAC7B;AAAA,UACF;AAEA,cAAI,KAAK,cAAc,GAAG;AACxB;AAAA,UACF,OAAO;AACL,qBAAS;AACT;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAS,GAAG;AACV,YAAI,IAAI,KAAK,aAAa;AACxB,iBAAO;AAAA,QACT,WAAW,MAAM,GAAG;AAClB,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,SAAS,CAAC,EAAE,WAAW,GAAG;AACjC,eAAK,eAAe,KAAK,SAAS,CAAC,EAAE;AACrC,iBAAO,KAAK,SAAS,MAAM;AAAA,QAC7B;AAEA,cAAMA,UAAS,OAAO,YAAY,CAAC;AACnC,YAAI,SAAS;AAEb,eAAO,WAAW,GAAG;AACnB,gBAAMiD,QAAO,KAAK,SAAS,CAAC;AAC5B,gBAAM,EAAE,QAAAnF,QAAO,IAAImF;AAEnB,cAAInF,UAAS,WAAW,GAAG;AACzB,YAAAkC,QAAO,IAAI,KAAK,SAAS,MAAM,GAAG,MAAM;AACxC;AAAA,UACF,WAAWlC,UAAS,SAAS,GAAG;AAC9B,YAAAkC,QAAO,IAAIiD,MAAK,SAAS,GAAG,IAAI,MAAM,GAAG,MAAM;AAC/C,iBAAK,SAAS,CAAC,IAAIA,MAAK,SAAS,IAAI,MAAM;AAC3C;AAAA,UACF,OAAO;AACL,YAAAjD,QAAO,IAAI,KAAK,SAAS,MAAM,GAAG,MAAM;AACxC,sBAAUiD,MAAK;AAAA,UACjB;AAAA,QACF;AAEA,aAAK,eAAe;AAEpB,eAAOjD;AAAA,MACT;AAAA,MAEA,eAAgB,UAAU,MAAM;AAG9B,YAAI;AAEJ,YAAI,KAAK,UAAU,GAAG;AAIpB,iBAAO,KAAK,aAAa,CAAC;AAAA,QAC5B;AAEA,YAAI,UAAU;AACZ,cAAI,CAAC,kBAAkB,IAAI,GAAG;AAC5B,mBAAO;AAAA,UACT;AAEA,iBAAO,EAAE,KAAK;AAAA,QAChB;AAIA,YAAI,SAAS,KAAK,SAAS,CAAC;AAG5B,YAAI,OAAO,CAAC,MAAM,OAAQ,OAAO,CAAC,MAAM,OAAQ,OAAO,CAAC,MAAM,KAAM;AAClE,mBAAS,OAAO,SAAS,CAAC;AAAA,QAC5B;AAEA,YAAI,SAAS,UAAa,CAAC,kBAAkB,IAAI,GAAG;AAClD,iBAAO;AAAA,QACT;AAEA,YAAI;AAEF,mBAAS,IAAI,YAAY,SAAS,EAAE,OAAO,KAAK,CAAC,EAAE,OAAO,MAAM;AAAA,QAClE,QAAQ;AACN,iBAAO;AAAA,QACT;AAEA,eAAO,EAAE,MAAM,OAAO;AAAA,MACxB;AAAA,MAEA,IAAI,cAAe;AACjB,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,IACF;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;ACvVA;AAAA;AAAA;AAEA,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,EAAE,cAAAW,cAAa,IAAI;AACzB,QAAM,EAAE,cAAc,IAAI;AAC1B,QAAM,EAAE,gBAAgB,IAAI;AAC5B,QAAM,EAAE,2BAA2B,QAAQ,SAAS,YAAY,IAAI;AACpE,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAM,EAAE,eAAe,WAAW,oBAAoB,yBAAyB,UAAU,IAAI;AAC7F,QAAM,EAAE,6BAA6B,IAAI;AACzC,QAAM,EAAE,mBAAmB,IAAI;AAC/B,QAAM,EAAE,WAAW,IAAI;AACvB,QAAM,EAAE,qBAAqB,WAAW,IAAI;AAC5C,QAAM,EAAE,oBAAoB,IAAI;AAChC,QAAM,EAAE,MAAM,IAAI,UAAQ,MAAM;AAEhC,QAAI,qBAAqB;AAGzB,QAAM,YAAN,MAAM,mBAAkB,YAAY;AAAA,MAClC,UAAU;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,QACP,SAAS;AAAA,MACX;AAAA,MAEA,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,MAMd,YAAa,KAAK,YAAY,CAAC,GAAG;AAChC,cAAM;AAEN,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,wBAAwB,CAAC;AAE5E,YAAI,CAAC,oBAAoB;AACvB,+BAAqB;AACrB,kBAAQ,YAAY,mEAAmE;AAAA,YACrF,MAAM;AAAA,UACR,CAAC;AAAA,QACH;AAEA,cAAM,UAAU,OAAO,WAAW,mDAAmD,EAAE,SAAS;AAEhG,cAAM,OAAO,WAAW,UAAU,GAAG;AACrC,oBAAY,QAAQ;AAGpB,cAAM,UAAU,gBAAgB;AAGhC,YAAI;AAEJ,YAAI;AACF,sBAAY,IAAI,IAAI,KAAK,OAAO;AAAA,QAClC,SAAS,GAAG;AAEV,gBAAM,IAAIA,cAAa,GAAG,aAAa;AAAA,QACzC;AAGA,YAAI,UAAU,aAAa,SAAS;AAClC,oBAAU,WAAW;AAAA,QACvB,WAAW,UAAU,aAAa,UAAU;AAE1C,oBAAU,WAAW;AAAA,QACvB;AAGA,YAAI,UAAU,aAAa,SAAS,UAAU,aAAa,QAAQ;AACjE,gBAAM,IAAIA;AAAA,YACR,wCAAwC,UAAU,QAAQ;AAAA,YAC1D;AAAA,UACF;AAAA,QACF;AAIA,YAAI,UAAU,QAAQ,UAAU,KAAK,SAAS,GAAG,GAAG;AAClD,gBAAM,IAAIA,cAAa,gBAAgB,aAAa;AAAA,QACtD;AAIA,YAAI,OAAO,cAAc,UAAU;AACjC,sBAAY,CAAC,SAAS;AAAA,QACxB;AAMA,YAAI,UAAU,WAAW,IAAI,IAAI,UAAU,IAAI,OAAK,EAAE,YAAY,CAAC,CAAC,EAAE,MAAM;AAC1E,gBAAM,IAAIA,cAAa,wCAAwC,aAAa;AAAA,QAC9E;AAEA,YAAI,UAAU,SAAS,KAAK,CAAC,UAAU,MAAM,OAAK,mBAAmB,CAAC,CAAC,GAAG;AACxE,gBAAM,IAAIA,cAAa,wCAAwC,aAAa;AAAA,QAC9E;AAGA,aAAK,aAAa,IAAI,IAAI,IAAI,UAAU,IAAI;AAQ5C,aAAK,WAAW,IAAI;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA,CAAC,aAAa,KAAK,yBAAyB,QAAQ;AAAA,UACpD;AAAA,QACF;AAKA,aAAK,WAAW,IAAI,WAAU;AAQ9B,aAAK,WAAW,IAAI;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,MAAO,OAAO,QAAW,SAAS,QAAW;AAC3C,eAAO,WAAW,MAAM,UAAS;AAEjC,YAAI,SAAS,QAAW;AACtB,iBAAO,OAAO,WAAW,gBAAgB,EAAE,MAAM,EAAE,OAAO,KAAK,CAAC;AAAA,QAClE;AAEA,YAAI,WAAW,QAAW;AACxB,mBAAS,OAAO,WAAW,UAAU,MAAM;AAAA,QAC7C;AAKA,YAAI,SAAS,QAAW;AACtB,cAAI,SAAS,QAAS,OAAO,OAAQ,OAAO,OAAO;AACjD,kBAAM,IAAIA,cAAa,gBAAgB,oBAAoB;AAAA,UAC7D;AAAA,QACF;AAEA,YAAI,mBAAmB;AAGvB,YAAI,WAAW,QAAW;AAIxB,6BAAmB,OAAO,WAAW,MAAM;AAE3C,cAAI,mBAAmB,KAAK;AAC1B,kBAAM,IAAIA;AAAA,cACR,gDAAgD,gBAAgB;AAAA,cAChE;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAGA,YAAI,KAAK,WAAW,MAAM,WAAU,WAAW,KAAK,WAAW,MAAM,WAAU,QAAQ;AAAA,QAGvF,WAAW,CAAC,cAAc,IAAI,GAAG;AAI/B,kCAAwB,MAAM,kDAAkD;AAChF,eAAK,WAAW,IAAI,WAAU;AAAA,QAChC,WAAW,CAAC,UAAU,IAAI,GAAG;AAW3B,gBAAM,QAAQ,IAAI,mBAAmB;AAOrC,cAAI,SAAS,UAAa,WAAW,QAAW;AAC9C,kBAAM,YAAY,OAAO,YAAY,CAAC;AACtC,kBAAM,UAAU,cAAc,MAAM,CAAC;AAAA,UACvC,WAAW,SAAS,UAAa,WAAW,QAAW;AAGrD,kBAAM,YAAY,OAAO,YAAY,IAAI,gBAAgB;AACzD,kBAAM,UAAU,cAAc,MAAM,CAAC;AAErC,kBAAM,UAAU,MAAM,QAAQ,GAAG,OAAO;AAAA,UAC1C,OAAO;AACL,kBAAM,YAAY;AAAA,UACpB;AAGA,gBAAM,SAAS,KAAK,SAAS,EAAE;AAE/B,iBAAO,MAAM,MAAM,YAAY,QAAQ,KAAK,GAAG,CAAC,QAAQ;AACtD,gBAAI,CAAC,KAAK;AACR,mBAAK,UAAU,IAAI;AAAA,YACrB;AAAA,UACF,CAAC;AAKD,eAAK,WAAW,IAAI,OAAO;AAAA,QAC7B,OAAO;AAGL,eAAK,WAAW,IAAI,WAAU;AAAA,QAChC;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,KAAM,MAAM;AACV,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,oBAAoB,WAAW,GAAG,EAAE,QAAQ,iBAAiB,CAAC;AAErE,eAAO,OAAO,WAAW,kBAAkB,IAAI;AAI/C,YAAI,KAAK,WAAW,MAAM,WAAU,YAAY;AAC9C,gBAAM,IAAIA,cAAa,0BAA0B,mBAAmB;AAAA,QACtE;AAMA,YAAI,CAAC,cAAc,IAAI,KAAK,UAAU,IAAI,GAAG;AAC3C;AAAA,QACF;AAGA,cAAM,SAAS,KAAK,SAAS,EAAE;AAG/B,YAAI,OAAO,SAAS,UAAU;AAY5B,gBAAM/C,SAAQ,OAAO,KAAK,IAAI;AAC9B,gBAAM,QAAQ,IAAI,mBAAmBA,MAAK;AAC1C,gBAAMoC,UAAS,MAAM,YAAY,QAAQ,IAAI;AAE7C,eAAK,mBAAmBpC,OAAM;AAC9B,iBAAO,MAAMoC,SAAQ,MAAM;AACzB,iBAAK,mBAAmBpC,OAAM;AAAA,UAChC,CAAC;AAAA,QACH,WAAW,MAAM,cAAc,IAAI,GAAG;AAapC,gBAAMA,SAAQ,OAAO,KAAK,IAAI;AAC9B,gBAAM,QAAQ,IAAI,mBAAmBA,MAAK;AAC1C,gBAAMoC,UAAS,MAAM,YAAY,QAAQ,MAAM;AAE/C,eAAK,mBAAmBpC,OAAM;AAC9B,iBAAO,MAAMoC,SAAQ,MAAM;AACzB,iBAAK,mBAAmBpC,OAAM;AAAA,UAChC,CAAC;AAAA,QACH,WAAW,YAAY,OAAO,IAAI,GAAG;AAanC,gBAAM,KAAK,OAAO,KAAK,MAAM,KAAK,YAAY,KAAK,UAAU;AAE7D,gBAAM,QAAQ,IAAI,mBAAmB,EAAE;AACvC,gBAAMoC,UAAS,MAAM,YAAY,QAAQ,MAAM;AAE/C,eAAK,mBAAmB,GAAG;AAC3B,iBAAO,MAAMA,SAAQ,MAAM;AACzB,iBAAK,mBAAmB,GAAG;AAAA,UAC7B,CAAC;AAAA,QACH,WAAW,WAAW,IAAI,GAAG;AAY3B,gBAAM,QAAQ,IAAI,mBAAmB;AAErC,eAAK,YAAY,EAAE,KAAK,CAAC,OAAO;AAC9B,kBAAMpC,SAAQ,OAAO,KAAK,EAAE;AAC5B,kBAAM,YAAYA;AAClB,kBAAMoC,UAAS,MAAM,YAAY,QAAQ,MAAM;AAE/C,iBAAK,mBAAmBpC,OAAM;AAC9B,mBAAO,MAAMoC,SAAQ,MAAM;AACzB,mBAAK,mBAAmBpC,OAAM;AAAA,YAChC,CAAC;AAAA,UACH,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MAEA,IAAI,aAAc;AAChB,eAAO,WAAW,MAAM,UAAS;AAGjC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,iBAAkB;AACpB,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,IAAI,MAAO;AACT,eAAO,WAAW,MAAM,UAAS;AAGjC,eAAO,cAAc,KAAK,aAAa,CAAC;AAAA,MAC1C;AAAA,MAEA,IAAI,aAAc;AAChB,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,IAAI,WAAY;AACd,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,IAAI,SAAU;AACZ,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,KAAK,QAAQ;AAAA,MACtB;AAAA,MAEA,IAAI,OAAQ,IAAI;AACd,eAAO,WAAW,MAAM,UAAS;AAEjC,YAAI,KAAK,QAAQ,MAAM;AACrB,eAAK,oBAAoB,QAAQ,KAAK,QAAQ,IAAI;AAAA,QACpD;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,QAAQ,OAAO;AACpB,eAAK,iBAAiB,QAAQ,EAAE;AAAA,QAClC,OAAO;AACL,eAAK,QAAQ,OAAO;AAAA,QACtB;AAAA,MACF;AAAA,MAEA,IAAI,UAAW;AACb,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,KAAK,QAAQ;AAAA,MACtB;AAAA,MAEA,IAAI,QAAS,IAAI;AACf,eAAO,WAAW,MAAM,UAAS;AAEjC,YAAI,KAAK,QAAQ,OAAO;AACtB,eAAK,oBAAoB,SAAS,KAAK,QAAQ,KAAK;AAAA,QACtD;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,QAAQ,QAAQ;AACrB,eAAK,iBAAiB,SAAS,EAAE;AAAA,QACnC,OAAO;AACL,eAAK,QAAQ,QAAQ;AAAA,QACvB;AAAA,MACF;AAAA,MAEA,IAAI,UAAW;AACb,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,KAAK,QAAQ;AAAA,MACtB;AAAA,MAEA,IAAI,QAAS,IAAI;AACf,eAAO,WAAW,MAAM,UAAS;AAEjC,YAAI,KAAK,QAAQ,OAAO;AACtB,eAAK,oBAAoB,SAAS,KAAK,QAAQ,KAAK;AAAA,QACtD;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,QAAQ,QAAQ;AACrB,eAAK,iBAAiB,SAAS,EAAE;AAAA,QACnC,OAAO;AACL,eAAK,QAAQ,QAAQ;AAAA,QACvB;AAAA,MACF;AAAA,MAEA,IAAI,YAAa;AACf,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,KAAK,QAAQ;AAAA,MACtB;AAAA,MAEA,IAAI,UAAW,IAAI;AACjB,eAAO,WAAW,MAAM,UAAS;AAEjC,YAAI,KAAK,QAAQ,SAAS;AACxB,eAAK,oBAAoB,WAAW,KAAK,QAAQ,OAAO;AAAA,QAC1D;AAEA,YAAI,OAAO,OAAO,YAAY;AAC5B,eAAK,QAAQ,UAAU;AACvB,eAAK,iBAAiB,WAAW,EAAE;AAAA,QACrC,OAAO;AACL,eAAK,QAAQ,UAAU;AAAA,QACzB;AAAA,MACF;AAAA,MAEA,IAAI,aAAc;AAChB,eAAO,WAAW,MAAM,UAAS;AAEjC,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,WAAY,MAAM;AACpB,eAAO,WAAW,MAAM,UAAS;AAEjC,YAAI,SAAS,UAAU,SAAS,eAAe;AAC7C,eAAK,WAAW,IAAI;AAAA,QACtB,OAAO;AACL,eAAK,WAAW,IAAI;AAAA,QACtB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAKA,yBAA0B,UAAU;AAGlC,aAAK,SAAS,IAAI;AAElB,cAAM+E,UAAS,IAAI,WAAW,IAAI;AAClC,QAAAA,QAAO,GAAG,SAAS,SAAS,gBAAiB;AAC3C,eAAK,GAAG,SAAS,EAAE,OAAO,OAAO;AAAA,QACnC,CAAC;AAED,iBAAS,OAAO,KAAK;AACrB,aAAK,WAAW,IAAIA;AAGpB,aAAK,WAAW,IAAI,OAAO;AAK3B,cAAM,aAAa,SAAS,YAAY,IAAI,0BAA0B;AAEtE,YAAI,eAAe,MAAM;AACvB,eAAK,cAAc;AAAA,QACrB;AAKA,cAAM,WAAW,SAAS,YAAY,IAAI,wBAAwB;AAElE,YAAI,aAAa,MAAM;AACrB,eAAK,YAAY;AAAA,QACnB;AAGA,kBAAU,QAAQ,IAAI;AAAA,MACxB;AAAA,IACF;AAGA,cAAU,aAAa,UAAU,UAAU,aAAa,OAAO;AAE/D,cAAU,OAAO,UAAU,UAAU,OAAO,OAAO;AAEnD,cAAU,UAAU,UAAU,UAAU,UAAU,OAAO;AAEzD,cAAU,SAAS,UAAU,UAAU,SAAS,OAAO;AAEvD,WAAO,iBAAiB,UAAU,WAAW;AAAA,MAC3C,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,CAAC,OAAO,WAAW,GAAG;AAAA,QACpB,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AAED,WAAO,iBAAiB,WAAW;AAAA,MACjC,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,IACV,CAAC;AAED,WAAO,WAAW,qBAAqB,IAAI,OAAO;AAAA,MAChD,OAAO,WAAW;AAAA,IACpB;AAEA,WAAO,WAAW,kCAAkC,IAAI,SAAU,GAAG;AACnE,UAAI,OAAO,KAAK,KAAK,CAAC,MAAM,YAAY,OAAO,YAAY,GAAG;AAC5D,eAAO,OAAO,WAAW,qBAAqB,EAAE,CAAC;AAAA,MACnD;AAEA,aAAO,OAAO,WAAW,UAAU,CAAC;AAAA,IACtC;AAGA,WAAO,WAAW,gBAAgB,OAAO,oBAAoB;AAAA,MAC3D;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,WAAW,kCAAkC;AAAA,QAC/D,IAAI,eAAgB;AAClB,iBAAO,CAAC;AAAA,QACV;AAAA,MACF;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,CAAC,MAAM;AAAA,QAClB,IAAI,eAAgB;AAClB,iBAAO,oBAAoB;AAAA,QAC7B;AAAA,MACF;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,WAAW,OAAO,kBAAkB,OAAO,WAAW,WAAW;AAAA,MACnE;AAAA,IACF,CAAC;AAED,WAAO,WAAW,mDAAmD,IAAI,SAAU,GAAG;AACpF,UAAI,OAAO,KAAK,KAAK,CAAC,MAAM,YAAY,EAAE,OAAO,YAAY,IAAI;AAC/D,eAAO,OAAO,WAAW,cAAc,CAAC;AAAA,MAC1C;AAEA,aAAO,EAAE,WAAW,OAAO,WAAW,kCAAkC,EAAE,CAAC,EAAE;AAAA,IAC/E;AAEA,WAAO,WAAW,oBAAoB,SAAU,GAAG;AACjD,UAAI,OAAO,KAAK,KAAK,CAAC,MAAM,UAAU;AACpC,YAAI,WAAW,CAAC,GAAG;AACjB,iBAAO,OAAO,WAAW,KAAK,GAAG,EAAE,QAAQ,MAAM,CAAC;AAAA,QACpD;AAEA,YAAI,YAAY,OAAO,CAAC,KAAK,MAAM,iBAAiB,CAAC,GAAG;AACtD,iBAAO,OAAO,WAAW,aAAa,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO,OAAO,WAAW,UAAU,CAAC;AAAA,IACtC;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;AChoBA;AAAA;AAAA;AAEA,QAAM,SAAS;AACf,QAAM,aAAa;AACnB,QAAM,SAAS;AACf,QAAM,OAAO;AACb,QAAM,eAAe;AACrB,QAAM,QAAQ;AACd,QAAM,OAAO;AACb,QAAM,EAAE,qBAAqB,IAAI;AACjC,QAAM,MAAM;AACZ,QAAM,iBAAiB;AACvB,QAAM,aAAa;AACnB,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,aAAa;AACnB,QAAM,aAAa;AACnB,QAAM,EAAE,qBAAqB,oBAAoB,IAAI;AACrD,QAAM,mBAAmB;AACzB,QAAM,kBAAkB;AACxB,QAAM,4BAA4B;AAElC,QAAI;AACJ,QAAI;AACF,gBAAQ,QAAQ;AAChB,kBAAY;AAAA,IACd,QAAQ;AACN,kBAAY;AAAA,IACd;AAEA,WAAO,OAAO,WAAW,WAAW,GAAG;AAEvC,WAAO,QAAQ,aAAa;AAC5B,WAAO,QAAQ,SAAS;AACxB,WAAO,QAAQ,OAAO;AACtB,WAAO,QAAQ,eAAe;AAC9B,WAAO,QAAQ,QAAQ;AACvB,WAAO,QAAQ,aAAa;AAE5B,WAAO,QAAQ,mBAAmB;AAClC,WAAO,QAAQ,kBAAkB;AACjC,WAAO,QAAQ,4BAA4B;AAE3C,WAAO,QAAQ,iBAAiB;AAChC,WAAO,QAAQ,SAAS;AAExB,aAAS,eAAgB,IAAI;AAC3B,aAAO,CAAC,KAAK,MAAM1C,aAAY;AAC7B,YAAI,OAAO,SAAS,YAAY;AAC9B,UAAAA,WAAU;AACV,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,OAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,EAAE,eAAe,MAAO;AACzF,gBAAM,IAAI,qBAAqB,aAAa;AAAA,QAC9C;AAEA,YAAI,QAAQ,QAAQ,OAAO,SAAS,UAAU;AAC5C,gBAAM,IAAI,qBAAqB,cAAc;AAAA,QAC/C;AAEA,YAAI,QAAQ,KAAK,QAAQ,MAAM;AAC7B,cAAI,OAAO,KAAK,SAAS,UAAU;AACjC,kBAAM,IAAI,qBAAqB,mBAAmB;AAAA,UACpD;AAEA,cAAI,OAAO,KAAK;AAChB,cAAI,CAAC,KAAK,KAAK,WAAW,GAAG,GAAG;AAC9B,mBAAO,IAAI,IAAI;AAAA,UACjB;AAEA,gBAAM,IAAI,IAAI,KAAK,YAAY,GAAG,EAAE,SAAS,IAAI;AAAA,QACnD,OAAO;AACL,cAAI,CAAC,MAAM;AACT,mBAAO,OAAO,QAAQ,WAAW,MAAM,CAAC;AAAA,UAC1C;AAEA,gBAAM,KAAK,SAAS,GAAG;AAAA,QACzB;AAEA,cAAM,EAAE,OAAO,aAAa,oBAAoB,EAAE,IAAI;AAEtD,YAAI,OAAO;AACT,gBAAM,IAAI,qBAAqB,mDAAmD;AAAA,QACpF;AAEA,eAAO,GAAG,KAAK,YAAY;AAAA,UACzB,GAAG;AAAA,UACH,QAAQ,IAAI;AAAA,UACZ,MAAM,IAAI,SAAS,GAAG,IAAI,QAAQ,GAAG,IAAI,MAAM,KAAK,IAAI;AAAA,UACxD,QAAQ,KAAK,WAAW,KAAK,OAAO,QAAQ;AAAA,QAC9C,GAAGA,QAAO;AAAA,MACZ;AAAA,IACF;AAEA,WAAO,QAAQ,sBAAsB;AACrC,WAAO,QAAQ,sBAAsB;AAErC,QAAI,KAAK,YAAY,MAAO,KAAK,cAAc,MAAM,KAAK,aAAa,GAAI;AACzE,UAAI,YAAY;AAChB,aAAO,QAAQ,QAAQ,eAAe,MAAO,UAAU;AACrD,YAAI,CAAC,WAAW;AACd,sBAAY,gBAAuB;AAAA,QACrC;AAEA,YAAI;AACF,iBAAO,MAAM,UAAU,GAAG,SAAS;AAAA,QACrC,SAAS,KAAK;AACZ,cAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAM,kBAAkB,KAAK,IAAI;AAAA,UACnC;AAEA,gBAAM;AAAA,QACR;AAAA,MACF;AACA,aAAO,QAAQ,UAAU,kBAA+B;AACxD,aAAO,QAAQ,WAAW,mBAAgC;AAC1D,aAAO,QAAQ,UAAU,mBAA+B;AACxD,aAAO,QAAQ,WAAW,mBAAgC;AAC1D,aAAO,QAAQ,OAAO,eAA4B;AAClD,aAAO,QAAQ,aAAa,qBAAoC;AAEhE,YAAM,EAAE,iBAAiB,gBAAgB,IAAI;AAE7C,aAAO,QAAQ,kBAAkB;AACjC,aAAO,QAAQ,kBAAkB;AAEjC,YAAM,EAAE,aAAa,IAAI;AACzB,YAAM,EAAE,WAAW,IAAI;AAIvB,aAAO,QAAQ,SAAS,IAAI,aAAa,UAAU;AAAA,IACrD;AAEA,QAAI,KAAK,aAAa,IAAI;AACxB,YAAM,EAAE,cAAc,YAAY,eAAe,UAAU,IAAI;AAE/D,aAAO,QAAQ,eAAe;AAC9B,aAAO,QAAQ,aAAa;AAC5B,aAAO,QAAQ,gBAAgB;AAC/B,aAAO,QAAQ,YAAY;AAE3B,YAAM,EAAE,eAAe,mBAAmB,IAAI;AAE9C,aAAO,QAAQ,gBAAgB;AAC/B,aAAO,QAAQ,qBAAqB;AAAA,IACtC;AAEA,QAAI,KAAK,aAAa,MAAM,WAAW;AACrC,YAAM,EAAE,UAAU,IAAI;AAEtB,aAAO,QAAQ,YAAY;AAAA,IAC7B;AAEA,WAAO,QAAQ,UAAU,eAAe,IAAI,OAAO;AACnD,WAAO,QAAQ,SAAS,eAAe,IAAI,MAAM;AACjD,WAAO,QAAQ,WAAW,eAAe,IAAI,QAAQ;AACrD,WAAO,QAAQ,UAAU,eAAe,IAAI,OAAO;AACnD,WAAO,QAAQ,UAAU,eAAe,IAAI,OAAO;AAEnD,WAAO,QAAQ,aAAa;AAC5B,WAAO,QAAQ,WAAW;AAC1B,WAAO,QAAQ,YAAY;AAC3B,WAAO,QAAQ,aAAa;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClK5B,QAAA,OAAA,aAAA,UAAA,MAAA,CAAA;AACA,QAAA,QAAA,aAAA,UAAA,OAAA,CAAA;AAGA,QAAA,KAAA,aAAA,eAAA;AACA,QAAA,SAAA,aAAA,iBAAA;AACA,QAAA,WAAA;AAEA,QAAY;AAAZ,KAAA,SAAYsF,YAAS;AACnB,MAAAA,WAAAA,WAAA,IAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,iBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,kBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,eAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,UAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,aAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,UAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,aAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,mBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,mBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,cAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,iBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,WAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,UAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,kBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,eAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,6BAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,gBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,UAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,MAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,iBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,qBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,gBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,oBAAA,IAAA,GAAA,IAAA;AACA,MAAAA,WAAAA,WAAA,gBAAA,IAAA,GAAA,IAAA;IACF,GA5BY,cAAS,QAAA,YAAT,YAAS,CAAA,EAAA;AA8BrB,QAAY;AAAZ,KAAA,SAAYC,UAAO;AACjB,MAAAA,SAAA,QAAA,IAAA;AACA,MAAAA,SAAA,aAAA,IAAA;IACF,GAHY,YAAO,QAAA,UAAP,UAAO,CAAA,EAAA;AAKnB,QAAY;AAAZ,KAAA,SAAYC,aAAU;AACpB,MAAAA,YAAA,iBAAA,IAAA;IACF,GAFY,eAAU,QAAA,aAAV,aAAU,CAAA,EAAA;AAQtB,aAAgB,YAAY,WAAiB;AAC3C,YAAM,WAAW,GAAG,YAAY,IAAI,IAAI,SAAS,CAAC;AAClD,aAAO,WAAW,SAAS,OAAO;IACpC;AAHA,YAAA,cAAA;AAKA,QAAM,oBAA8B;MAClC,UAAU;MACV,UAAU;MACV,UAAU;MACV,UAAU;MACV,UAAU;;AAEZ,QAAM,yBAAmC;MACvC,UAAU;MACV,UAAU;MACV,UAAU;;AAEZ,QAAM,qBAA+B,CAAC,WAAW,OAAO,UAAU,MAAM;AACxE,QAAM,4BAA4B;AAClC,QAAM,8BAA8B;AAEpC,QAAa,kBAAb,MAAa,yBAAwB,MAAK;MACxC,YAAY,SAAiB,YAAkB;AAC7C,cAAM,OAAO;AACb,aAAK,OAAO;AACZ,aAAK,aAAa;AAClB,eAAO,eAAe,MAAM,iBAAgB,SAAS;MACvD;;AANF,YAAA,kBAAA;AAYA,QAAa,qBAAb,MAA+B;MAC7B,YAAY,SAA6B;AACvC,aAAK,UAAU;MACjB;MAGM,WAAQ;;AACZ,iBAAO,IAAI,QAAgB,CAAM,YAAU,UAAA,MAAA,QAAA,QAAA,aAAA;AACzC,gBAAI,SAAS,OAAO,MAAM,CAAC;AAE3B,iBAAK,QAAQ,GAAG,QAAQ,CAACvF,WAAiB;AACxC,uBAAS,OAAO,OAAO,CAAC,QAAQA,MAAK,CAAC;YACxC,CAAC;AAED,iBAAK,QAAQ,GAAG,OAAO,MAAK;AAC1B,sBAAQ,OAAO,SAAQ,CAAE;YAC3B,CAAC;UACH,CAAC,CAAA;QACH,CAAC;;MAEK,iBAAc;;AAClB,iBAAO,IAAI,QAAgB,CAAM,YAAU,UAAA,MAAA,QAAA,QAAA,aAAA;AACzC,kBAAM2B,UAAmB,CAAA;AAEzB,iBAAK,QAAQ,GAAG,QAAQ,CAAC3B,WAAiB;AACxC,cAAA2B,QAAO,KAAK3B,MAAK;YACnB,CAAC;AAED,iBAAK,QAAQ,GAAG,OAAO,MAAK;AAC1B,sBAAQ,OAAO,OAAO2B,OAAM,CAAC;YAC/B,CAAC;UACH,CAAC,CAAA;QACH,CAAC;;;AAhCH,YAAA,qBAAA;AAmCA,aAAgB,QAAQ,YAAkB;AACxC,YAAM,YAAiB,IAAI,IAAI,UAAU;AACzC,aAAO,UAAU,aAAa;IAChC;AAHA,YAAA,UAAA;AAKA,QAAa,aAAb,MAAuB;MAkBrB,YACE6D,YACA,UACA,gBAAmC;AAhB7B,aAAA,kBAAkB;AAElB,aAAA,kBAAkB;AAClB,aAAA,0BAA0B;AAC1B,aAAA,gBAAgB;AAChB,aAAA,gBAAgB;AAChB,aAAA,cAAc;AAId,aAAA,aAAa;AACb,aAAA,YAAY;AAOlB,aAAK,YAAYA;AACjB,aAAK,WAAW,YAAY,CAAA;AAC5B,aAAK,iBAAiB;AACtB,YAAI,gBAAgB;AAClB,cAAI,eAAe,kBAAkB,MAAM;AACzC,iBAAK,kBAAkB,eAAe;;AAGxC,eAAK,iBAAiB,eAAe;AAErC,cAAI,eAAe,kBAAkB,MAAM;AACzC,iBAAK,kBAAkB,eAAe;;AAGxC,cAAI,eAAe,0BAA0B,MAAM;AACjD,iBAAK,0BAA0B,eAAe;;AAGhD,cAAI,eAAe,gBAAgB,MAAM;AACvC,iBAAK,gBAAgB,KAAK,IAAI,eAAe,cAAc,CAAC;;AAG9D,cAAI,eAAe,aAAa,MAAM;AACpC,iBAAK,aAAa,eAAe;;AAGnC,cAAI,eAAe,gBAAgB,MAAM;AACvC,iBAAK,gBAAgB,eAAe;;AAGtC,cAAI,eAAe,cAAc,MAAM;AACrC,iBAAK,cAAc,eAAe;;;MAGxC;MAEM,QACJ,YACA,mBAA4C;;AAE5C,iBAAO,KAAK,QAAQ,WAAW,YAAY,MAAM,qBAAqB,CAAA,CAAE;QAC1E,CAAC;;MAEK,IACJ,YACA,mBAA4C;;AAE5C,iBAAO,KAAK,QAAQ,OAAO,YAAY,MAAM,qBAAqB,CAAA,CAAE;QACtE,CAAC;;MAEK,IACJ,YACA,mBAA4C;;AAE5C,iBAAO,KAAK,QAAQ,UAAU,YAAY,MAAM,qBAAqB,CAAA,CAAE;QACzE,CAAC;;MAEK,KACJ,YACA,MACA,mBAA4C;;AAE5C,iBAAO,KAAK,QAAQ,QAAQ,YAAY,MAAM,qBAAqB,CAAA,CAAE;QACvE,CAAC;;MAEK,MACJ,YACA,MACA,mBAA4C;;AAE5C,iBAAO,KAAK,QAAQ,SAAS,YAAY,MAAM,qBAAqB,CAAA,CAAE;QACxE,CAAC;;MAEK,IACJ,YACA,MACA,mBAA4C;;AAE5C,iBAAO,KAAK,QAAQ,OAAO,YAAY,MAAM,qBAAqB,CAAA,CAAE;QACtE,CAAC;;MAEK,KACJ,YACA,mBAA4C;;AAE5C,iBAAO,KAAK,QAAQ,QAAQ,YAAY,MAAM,qBAAqB,CAAA,CAAE;QACvE,CAAC;;MAEK,WACJ,MACA,YACA,QACA,mBAA4C;;AAE5C,iBAAO,KAAK,QAAQ,MAAM,YAAY,QAAQ,iBAAiB;QACjE,CAAC;;;;;;MAMK,QACJ,YACA,oBAA8C,CAAA,GAAE;;AAEhD,4BAAkB,QAAQ,MAAM,IAAI,KAAK,4BACvC,mBACA,QAAQ,QACR,WAAW,eAAe;AAE5B,gBAAM,MAA0B,MAAM,KAAK,IACzC,YACA,iBAAiB;AAEnB,iBAAO,KAAK,iBAAoB,KAAK,KAAK,cAAc;QAC1D,CAAC;;MAEK,SACJ,YACA,KACA,oBAA8C,CAAA,GAAE;;AAEhD,gBAAM,OAAe,KAAK,UAAU,KAAK,MAAM,CAAC;AAChD,4BAAkB,QAAQ,MAAM,IAAI,KAAK,4BACvC,mBACA,QAAQ,QACR,WAAW,eAAe;AAE5B,4BAAkB,QAAQ,WAAW,IAAI,KAAK,4BAC5C,mBACA,QAAQ,aACR,WAAW,eAAe;AAE5B,gBAAM,MAA0B,MAAM,KAAK,KACzC,YACA,MACA,iBAAiB;AAEnB,iBAAO,KAAK,iBAAoB,KAAK,KAAK,cAAc;QAC1D,CAAC;;MAEK,QACJ,YACA,KACA,oBAA8C,CAAA,GAAE;;AAEhD,gBAAM,OAAe,KAAK,UAAU,KAAK,MAAM,CAAC;AAChD,4BAAkB,QAAQ,MAAM,IAAI,KAAK,4BACvC,mBACA,QAAQ,QACR,WAAW,eAAe;AAE5B,4BAAkB,QAAQ,WAAW,IAAI,KAAK,4BAC5C,mBACA,QAAQ,aACR,WAAW,eAAe;AAE5B,gBAAM,MAA0B,MAAM,KAAK,IACzC,YACA,MACA,iBAAiB;AAEnB,iBAAO,KAAK,iBAAoB,KAAK,KAAK,cAAc;QAC1D,CAAC;;MAEK,UACJ,YACA,KACA,oBAA8C,CAAA,GAAE;;AAEhD,gBAAM,OAAe,KAAK,UAAU,KAAK,MAAM,CAAC;AAChD,4BAAkB,QAAQ,MAAM,IAAI,KAAK,4BACvC,mBACA,QAAQ,QACR,WAAW,eAAe;AAE5B,4BAAkB,QAAQ,WAAW,IAAI,KAAK,4BAC5C,mBACA,QAAQ,aACR,WAAW,eAAe;AAE5B,gBAAM,MAA0B,MAAM,KAAK,MACzC,YACA,MACA,iBAAiB;AAEnB,iBAAO,KAAK,iBAAoB,KAAK,KAAK,cAAc;QAC1D,CAAC;;;;;;;MAOK,QACJ,MACA,YACA,MACA,SAAkC;;AAElC,cAAI,KAAK,WAAW;AAClB,kBAAM,IAAI,MAAM,mCAAmC;;AAGrD,gBAAM,YAAY,IAAI,IAAI,UAAU;AACpC,cAAI,OAAwB,KAAK,gBAAgB,MAAM,WAAW,OAAO;AAGzE,gBAAM,WACJ,KAAK,iBAAiB,mBAAmB,SAAS,IAAI,IAClD,KAAK,cAAc,IACnB;AACN,cAAI,WAAW;AAEf,cAAI;AACJ,aAAG;AACD,uBAAW,MAAM,KAAK,WAAW,MAAM,IAAI;AAG3C,gBACE,YACA,SAAS,WACT,SAAS,QAAQ,eAAe,UAAU,cAC1C;AACA,kBAAI;AAEJ,yBAAWzF,YAAW,KAAK,UAAU;AACnC,oBAAIA,SAAQ,wBAAwB,QAAQ,GAAG;AAC7C,0CAAwBA;AACxB;;;AAIJ,kBAAI,uBAAuB;AACzB,uBAAO,sBAAsB,qBAAqB,MAAM,MAAM,IAAI;qBAC7D;AAGL,uBAAO;;;AAIX,gBAAI,qBAA6B,KAAK;AACtC,mBACE,SAAS,QAAQ,cACjB,kBAAkB,SAAS,SAAS,QAAQ,UAAU,KACtD,KAAK,mBACL,qBAAqB,GACrB;AACA,oBAAM,cACJ,SAAS,QAAQ,QAAQ,UAAU;AACrC,kBAAI,CAAC,aAAa;AAEhB;;AAEF,oBAAM,oBAAoB,IAAI,IAAI,WAAW;AAC7C,kBACE,UAAU,aAAa,YACvB,UAAU,aAAa,kBAAkB,YACzC,CAAC,KAAK,yBACN;AACA,sBAAM,IAAI,MACR,8KAA8K;;AAMlL,oBAAM,SAAS,SAAQ;AAGvB,kBAAI,kBAAkB,aAAa,UAAU,UAAU;AACrD,2BAAW,UAAU,SAAS;AAE5B,sBAAI,OAAO,YAAW,MAAO,iBAAiB;AAC5C,2BAAO,QAAQ,MAAM;;;;AAM3B,qBAAO,KAAK,gBAAgB,MAAM,mBAAmB,OAAO;AAC5D,yBAAW,MAAM,KAAK,WAAW,MAAM,IAAI;AAC3C;;AAGF,gBACE,CAAC,SAAS,QAAQ,cAClB,CAAC,uBAAuB,SAAS,SAAS,QAAQ,UAAU,GAC5D;AAEA,qBAAO;;AAGT,wBAAY;AAEZ,gBAAI,WAAW,UAAU;AACvB,oBAAM,SAAS,SAAQ;AACvB,oBAAM,KAAK,2BAA2B,QAAQ;;mBAEzC,WAAW;AAEpB,iBAAO;QACT,CAAC;;;;;MAKD,UAAO;AACL,YAAI,KAAK,QAAQ;AACf,eAAK,OAAO,QAAO;;AAGrB,aAAK,YAAY;MACnB;;;;;;MAOM,WACJ,MACA,MAA2C;;AAE3C,iBAAO,IAAI,QAA4B,CAAC,SAAS,WAAU;AACzD,qBAAS,kBAAkB,KAAa,KAAwB;AAC9D,kBAAI,KAAK;AACP,uBAAO,GAAG;yBACD,CAAC,KAAK;AAEf,uBAAO,IAAI,MAAM,eAAe,CAAC;qBAC5B;AACL,wBAAQ,GAAG;;YAEf;AAEA,iBAAK,uBAAuB,MAAM,MAAM,iBAAiB;UAC3D,CAAC;QACH,CAAC;;;;;;;;MAQD,uBACE,MACA,MACA,UAAyD;AAEzD,YAAI,OAAO,SAAS,UAAU;AAC5B,cAAI,CAAC,KAAK,QAAQ,SAAS;AACzB,iBAAK,QAAQ,UAAU,CAAA;;AAEzB,eAAK,QAAQ,QAAQ,gBAAgB,IAAI,OAAO,WAAW,MAAM,MAAM;;AAGzE,YAAI,iBAAiB;AACrB,iBAAS,aAAa,KAAa,KAAwB;AACzD,cAAI,CAAC,gBAAgB;AACnB,6BAAiB;AACjB,qBAAS,KAAK,GAAG;;QAErB;AAEA,cAAM,MAA0B,KAAK,WAAW,QAC9C,KAAK,SACL,CAAC,QAA6B;AAC5B,gBAAM,MAA0B,IAAI,mBAAmB,GAAG;AAC1D,uBAAa,QAAW,GAAG;QAC7B,CAAC;AAGH,YAAI;AACJ,YAAI,GAAG,UAAU,UAAO;AACtB,mBAAS;QACX,CAAC;AAGD,YAAI,WAAW,KAAK,kBAAkB,IAAI,KAAO,MAAK;AACpD,cAAI,QAAQ;AACV,mBAAO,IAAG;;AAEZ,uBAAa,IAAI,MAAM,oBAAoB,KAAK,QAAQ,IAAI,EAAE,CAAC;QACjE,CAAC;AAED,YAAI,GAAG,SAAS,SAAU,KAAG;AAG3B,uBAAa,GAAG;QAClB,CAAC;AAED,YAAI,QAAQ,OAAO,SAAS,UAAU;AACpC,cAAI,MAAM,MAAM,MAAM;;AAGxB,YAAI,QAAQ,OAAO,SAAS,UAAU;AACpC,eAAK,GAAG,SAAS,WAAA;AACf,gBAAI,IAAG;UACT,CAAC;AAED,eAAK,KAAK,GAAG;eACR;AACL,cAAI,IAAG;;MAEX;;;;;;MAOA,SAAS,WAAiB;AACxB,cAAM,YAAY,IAAI,IAAI,SAAS;AACnC,eAAO,KAAK,UAAU,SAAS;MACjC;MAEA,mBAAmB,WAAiB;AAClC,cAAM,YAAY,IAAI,IAAI,SAAS;AACnC,cAAM,WAAW,GAAG,YAAY,SAAS;AACzC,cAAM,WAAW,YAAY,SAAS;AACtC,YAAI,CAAC,UAAU;AACb;;AAGF,eAAO,KAAK,yBAAyB,WAAW,QAAQ;MAC1D;MAEQ,gBACN,QACA,YACA,SAAkC;AAElC,cAAM,OAAyC,CAAA;AAE/C,aAAK,YAAY;AACjB,cAAM,WAAoB,KAAK,UAAU,aAAa;AACtD,aAAK,aAAa,WAAW,QAAQ;AACrC,cAAM,cAAsB,WAAW,MAAM;AAE7C,aAAK,UAA+B,CAAA;AACpC,aAAK,QAAQ,OAAO,KAAK,UAAU;AACnC,aAAK,QAAQ,OAAO,KAAK,UAAU,OAC/B,SAAS,KAAK,UAAU,IAAI,IAC5B;AACJ,aAAK,QAAQ,QACV,KAAK,UAAU,YAAY,OAAO,KAAK,UAAU,UAAU;AAC9D,aAAK,QAAQ,SAAS;AACtB,aAAK,QAAQ,UAAU,KAAK,cAAc,OAAO;AACjD,YAAI,KAAK,aAAa,MAAM;AAC1B,eAAK,QAAQ,QAAQ,YAAY,IAAI,KAAK;;AAG5C,aAAK,QAAQ,QAAQ,KAAK,UAAU,KAAK,SAAS;AAGlD,YAAI,KAAK,UAAU;AACjB,qBAAWA,YAAW,KAAK,UAAU;AACnC,YAAAA,SAAQ,eAAe,KAAK,OAAO;;;AAIvC,eAAO;MACT;MAEQ,cACN,SAAkC;AAElC,YAAI,KAAK,kBAAkB,KAAK,eAAe,SAAS;AACtD,iBAAO,OAAO,OACZ,CAAA,GACA0F,eAAc,KAAK,eAAe,OAAO,GACzCA,eAAc,WAAW,CAAA,CAAE,CAAC;;AAIhC,eAAOA,eAAc,WAAW,CAAA,CAAE;MACpC;MAEQ,4BACN,mBACA,QACA,UAAgB;AAEhB,YAAI;AACJ,YAAI,KAAK,kBAAkB,KAAK,eAAe,SAAS;AACtD,yBAAeA,eAAc,KAAK,eAAe,OAAO,EAAE,MAAM;;AAElE,eAAO,kBAAkB,MAAM,KAAK,gBAAgB;MACtD;MAEQ,UAAU,WAAc;AAC9B,YAAI;AACJ,cAAM,WAAW,GAAG,YAAY,SAAS;AACzC,cAAM,WAAW,YAAY,SAAS;AAEtC,YAAI,KAAK,cAAc,UAAU;AAC/B,kBAAQ,KAAK;;AAGf,YAAI,KAAK,cAAc,CAAC,UAAU;AAChC,kBAAQ,KAAK;;AAIf,YAAI,OAAO;AACT,iBAAO;;AAGT,cAAM,WAAW,UAAU,aAAa;AACxC,YAAI,aAAa;AACjB,YAAI,KAAK,gBAAgB;AACvB,uBAAa,KAAK,eAAe,cAAc,KAAK,YAAY;;AAIlE,YAAI,YAAY,SAAS,UAAU;AACjC,gBAAM,eAAe;YACnB;YACA,WAAW,KAAK;YAChB,OAAK,OAAA,OAAA,OAAA,OAAA,CAAA,IACE,SAAS,YAAY,SAAS,aAAa;cAC9C,WAAW,GAAG,SAAS,QAAQ,IAAI,SAAS,QAAQ;aACpD,GAAA,EACF,MAAM,SAAS,UACf,MAAM,SAAS,KAAI,CAAA;;AAIvB,cAAI;AACJ,gBAAM,YAAY,SAAS,aAAa;AACxC,cAAI,UAAU;AACZ,0BAAc,YAAY,OAAO,iBAAiB,OAAO;iBACpD;AACL,0BAAc,YAAY,OAAO,gBAAgB,OAAO;;AAG1D,kBAAQ,YAAY,YAAY;AAChC,eAAK,cAAc;;AAIrB,YAAI,KAAK,cAAc,CAAC,OAAO;AAC7B,gBAAM,UAAU,EAAC,WAAW,KAAK,YAAY,WAAU;AACvD,kBAAQ,WAAW,IAAI,MAAM,MAAM,OAAO,IAAI,IAAI,KAAK,MAAM,OAAO;AACpE,eAAK,SAAS;;AAIhB,YAAI,CAAC,OAAO;AACV,kBAAQ,WAAW,MAAM,cAAc,KAAK;;AAG9C,YAAI,YAAY,KAAK,iBAAiB;AAIpC,gBAAM,UAAU,OAAO,OAAO,MAAM,WAAW,CAAA,GAAI;YACjD,oBAAoB;WACrB;;AAGH,eAAO;MACT;MAEQ,yBAAyB,WAAgB,UAAa;AAC5D,YAAI;AAEJ,YAAI,KAAK,YAAY;AACnB,uBAAa,KAAK;;AAIpB,YAAI,YAAY;AACd,iBAAO;;AAGT,cAAM,WAAW,UAAU,aAAa;AACxC,qBAAa,IAAI,SAAA,WAAU,OAAA,OAAA,EACzB,KAAK,SAAS,MACd,YAAY,CAAC,KAAK,aAAa,IAAI,EAAC,IAC/B,SAAS,YAAY,SAAS,aAAa;UAC9C,OAAO,GAAG,SAAS,QAAQ,IAAI,SAAS,QAAQ;SAChD,CAAA;AAEJ,aAAK,wBAAwB;AAE7B,YAAI,YAAY,KAAK,iBAAiB;AAIpC,qBAAW,UAAU,OAAO,OAAO,WAAW,QAAQ,cAAc,CAAA,GAAI;YACtE,oBAAoB;WACrB;;AAGH,eAAO;MACT;MAEc,2BAA2B,aAAmB;;AAC1D,wBAAc,KAAK,IAAI,2BAA2B,WAAW;AAC7D,gBAAM,KAAa,8BAA8B,KAAK,IAAI,GAAG,WAAW;AACxE,iBAAO,IAAI,QAAQ,aAAW,WAAW,MAAM,QAAO,GAAI,EAAE,CAAC;QAC/D,CAAC;;MAEa,iBACZ,KACA,SAA4B;;AAE5B,iBAAO,IAAI,QAA8B,CAAO,SAAS,WAAU,UAAA,MAAA,QAAA,QAAA,aAAA;AACjE,kBAAM,aAAa,IAAI,QAAQ,cAAc;AAE7C,kBAAM,WAAiC;cACrC;cACA,QAAQ;cACR,SAAS,CAAA;;AAIX,gBAAI,eAAe,UAAU,UAAU;AACrC,sBAAQ,QAAQ;;AAKlB,qBAAS,qBAAqB,KAAU/H,QAAU;AAChD,kBAAI,OAAOA,WAAU,UAAU;AAC7B,sBAAM,IAAI,IAAI,KAAKA,MAAK;AACxB,oBAAI,CAAC,MAAM,EAAE,QAAO,CAAE,GAAG;AACvB,yBAAO;;;AAIX,qBAAOA;YACT;AAEA,gBAAI;AACJ,gBAAI;AAEJ,gBAAI;AACF,yBAAW,MAAM,IAAI,SAAQ;AAC7B,kBAAI,YAAY,SAAS,SAAS,GAAG;AACnC,oBAAI,WAAW,QAAQ,kBAAkB;AACvC,wBAAM,KAAK,MAAM,UAAU,oBAAoB;uBAC1C;AACL,wBAAM,KAAK,MAAM,QAAQ;;AAG3B,yBAAS,SAAS;;AAGpB,uBAAS,UAAU,IAAI,QAAQ;qBACxB,KAAK;;AAKd,gBAAI,aAAa,KAAK;AACpB,kBAAI;AAGJ,kBAAI,OAAO,IAAI,SAAS;AACtB,sBAAM,IAAI;yBACD,YAAY,SAAS,SAAS,GAAG;AAE1C,sBAAM;qBACD;AACL,sBAAM,oBAAoB,UAAU;;AAGtC,oBAAM,MAAM,IAAI,gBAAgB,KAAK,UAAU;AAC/C,kBAAI,SAAS,SAAS;AAEtB,qBAAO,GAAG;mBACL;AACL,sBAAQ,QAAQ;;UAEpB,CAAC,CAAA;QACH,CAAC;;;AA/rBH,YAAA,aAAA;AAksBA,QAAM+H,iBAAgB,CAAC,QACrB,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,GAAQ,OAAQ,EAAE,EAAE,YAAW,CAAE,IAAI,IAAI,CAAC,GAAI,IAAI,CAAA,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACh0B/E,QAAA,aAAA,aAAA,aAAA;AAEA,QAAA,WAAA;AAEA,aAAgB,cACd,OACA,SAAuB;AAEvB,UAAI,CAAC,SAAS,CAAC,QAAQ,MAAM;AAC3B,cAAM,IAAI,MAAM,0CAA0C;iBACjD,SAAS,QAAQ,MAAM;AAChC,cAAM,IAAI,MAAM,0DAA0D;;AAG5E,aAAO,OAAO,QAAQ,SAAS,WAAW,QAAQ,OAAO,SAAS,KAAK;IACzE;AAXA,YAAA,gBAAA;AAaA,aAAgB,cAAc,gBAAsB;AAClD,YAAM,KAAK,IAAI,WAAW,WAAU;AACpC,aAAO,GAAG,SAAS,cAAc;IACnC;AAHA,YAAA,gBAAA;AAKA,aAAgB,wBACd,gBAAsB;AAEtB,YAAM,KAAK,IAAI,WAAW,WAAU;AACpC,aAAO,GAAG,mBAAmB,cAAc;IAC7C;AALA,YAAA,0BAAA;AAOA,aAAgB,cAAc,gBAAc;AAC1C,YAAM,iBAAiB,wBAAwB,cAAc;AAC7D,YAAM,aAA2B,CAAO,KAAK,SAAQ,UAAA,MAAA,QAAA,QAAA,aAAA;AACnD,gBAAO,GAAA,SAAA,OAAM,KAAG,OAAA,OAAA,OAAA,OAAA,CAAA,GACX,IAAI,GAAA,EACP,YAAY,eAAc,CAAA,CAAA;MAE9B,CAAC;AACD,aAAO;IACT;AATA,YAAA,gBAAA;AAWA,aAAgB,gBAAa;AAC3B,aAAO,QAAQ,IAAI,gBAAgB,KAAK;IAC1C;AAFA,YAAA,gBAAA;;;;;ACzCO,SAAS,eAAe;AAC3B,MAAI,OAAO,cAAc,YAAY,eAAe,WAAW;AAC3D,WAAO,UAAU;EACzB;AACI,MAAI,OAAO,YAAY,YAAY,QAAQ,YAAY,QAAW;AAC9D,WAAO,WAAW,QAAQ,QAAQ,OAAO,CAAC,CAAC,KAAK,QAAQ,QAAQ,KAAK,QAAQ,IAAI;EACzF;AACI,SAAO;AACX;AARO;;;;;;;ACAP;AAAA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,SAAS,OAAO,MAAM,QAAQ,SAAS;AAC9C,UAAI,OAAO,WAAW,YAAY;AAChC,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC7D;AAEA,UAAI,CAAC,SAAS;AACZ,kBAAU,CAAC;AAAA,MACb;AAEA,UAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,eAAO,KAAK,QAAQ,EAAE,OAAO,SAAU,UAAUC,OAAM;AACrD,iBAAO,SAAS,KAAK,MAAM,OAAOA,OAAM,UAAU,OAAO;AAAA,QAC3D,GAAG,MAAM,EAAE;AAAA,MACb;AAEA,aAAO,QAAQ,QAAQ,EAAE,KAAK,WAAY;AACxC,YAAI,CAAC,MAAM,SAAS,IAAI,GAAG;AACzB,iBAAO,OAAO,OAAO;AAAA,QACvB;AAEA,eAAO,MAAM,SAAS,IAAI,EAAE,OAAO,SAAUC,SAAQ,YAAY;AAC/D,iBAAO,WAAW,KAAK,KAAK,MAAMA,SAAQ,OAAO;AAAA,QACnD,GAAG,MAAM,EAAE;AAAA,MACb,CAAC;AAAA,IACH;AAAA;AAAA;;;AC1BA;AAAA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,QAAQ,OAAO,MAAM,MAAMC,OAAM;AACxC,UAAI,OAAOA;AACX,UAAI,CAAC,MAAM,SAAS,IAAI,GAAG;AACzB,cAAM,SAAS,IAAI,IAAI,CAAC;AAAA,MAC1B;AAEA,UAAI,SAAS,UAAU;AACrB,QAAAA,QAAO,SAAU,QAAQ,SAAS;AAChC,iBAAO,QAAQ,QAAQ,EACpB,KAAK,KAAK,KAAK,MAAM,OAAO,CAAC,EAC7B,KAAK,OAAO,KAAK,MAAM,OAAO,CAAC;AAAA,QACpC;AAAA,MACF;AAEA,UAAI,SAAS,SAAS;AACpB,QAAAA,QAAO,SAAU,QAAQ,SAAS;AAChC,cAAI;AACJ,iBAAO,QAAQ,QAAQ,EACpB,KAAK,OAAO,KAAK,MAAM,OAAO,CAAC,EAC/B,KAAK,SAAU,SAAS;AACvB,qBAAS;AACT,mBAAO,KAAK,QAAQ,OAAO;AAAA,UAC7B,CAAC,EACA,KAAK,WAAY;AAChB,mBAAO;AAAA,UACT,CAAC;AAAA,QACL;AAAA,MACF;AAEA,UAAI,SAAS,SAAS;AACpB,QAAAA,QAAO,SAAU,QAAQ,SAAS;AAChC,iBAAO,QAAQ,QAAQ,EACpB,KAAK,OAAO,KAAK,MAAM,OAAO,CAAC,EAC/B,MAAM,SAAU,OAAO;AACtB,mBAAO,KAAK,OAAO,OAAO;AAAA,UAC5B,CAAC;AAAA,QACL;AAAA,MACF;AAEA,YAAM,SAAS,IAAI,EAAE,KAAK;AAAA,QACxB,MAAMA;AAAA,QACN;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;;;AC7CA;AAAA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,WAAW,OAAO,MAAM,QAAQ;AACvC,UAAI,CAAC,MAAM,SAAS,IAAI,GAAG;AACzB;AAAA,MACF;AAEA,UAAI,QAAQ,MAAM,SAAS,IAAI,EAC5B,IAAI,SAAU,YAAY;AACzB,eAAO,WAAW;AAAA,MACpB,CAAC,EACA,QAAQ,MAAM;AAEjB,UAAI,UAAU,IAAI;AAChB;AAAA,MACF;AAEA,YAAM,SAAS,IAAI,EAAE,OAAO,OAAO,CAAC;AAAA,IACtC;AAAA;AAAA;;;AClBA;AAAA;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,UAAU;AACd,QAAI,aAAa;AAGjB,QAAIC,QAAO,SAAS;AACpB,QAAI,WAAWA,MAAK,KAAKA,KAAI;AAE7B,aAAS,QAAQD,OAAM,OAAO,MAAM;AAClC,UAAI,gBAAgB,SAAS,YAAY,IAAI,EAAE;AAAA,QAC7C;AAAA,QACA,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK;AAAA,MAC/B;AACA,MAAAA,MAAK,MAAM,EAAE,QAAQ,cAAc;AACnC,MAAAA,MAAK,SAAS;AACd,OAAC,UAAU,SAAS,SAAS,MAAM,EAAE,QAAQ,SAAU,MAAM;AAC3D,YAAI,OAAO,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI;AACpD,QAAAA,MAAK,IAAI,IAAIA,MAAK,IAAI,IAAI,IAAI,SAAS,SAAS,IAAI,EAAE,MAAM,MAAM,IAAI;AAAA,MACxE,CAAC;AAAA,IACH;AAEA,aAAS,eAAe;AACtB,UAAI,mBAAmB;AACvB,UAAI,oBAAoB;AAAA,QACtB,UAAU,CAAC;AAAA,MACb;AACA,UAAI,eAAe,SAAS,KAAK,MAAM,mBAAmB,gBAAgB;AAC1E,cAAQ,cAAc,mBAAmB,gBAAgB;AACzD,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB;AACxB,UAAI,QAAQ;AAAA,QACV,UAAU,CAAC;AAAA,MACb;AAEA,UAAIA,QAAO,SAAS,KAAK,MAAM,KAAK;AACpC,cAAQA,OAAM,KAAK;AAEnB,aAAOA;AAAA,IACT;AAEA,QAAI,4CAA4C;AAChD,aAAS,OAAO;AACd,UAAI,CAAC,2CAA2C;AAC9C,gBAAQ;AAAA,UACN;AAAA,QACF;AACA,oDAA4C;AAAA,MAC9C;AACA,aAAO,eAAe;AAAA,IACxB;AAEA,SAAK,WAAW,aAAa,KAAK;AAClC,SAAK,aAAa,eAAe,KAAK;AAEtC,WAAO,UAAU;AAEjB,WAAO,QAAQ,OAAO;AACtB,WAAO,QAAQ,WAAW,KAAK;AAC/B,WAAO,QAAQ,aAAa,KAAK;AAAA;AAAA;;;AC5DjC,IAAM;AAAN,IAAAE,gBAAA;AAAA;AAAA;AAAA,IAAM,UAAU;AAAA;AAAA;;;ACAhB,IAEM,WACA;AAHN;AAAA;AAAA;AAAA;AACA,IAAAA;AACA,IAAM,YAAY,uBAAuB,OAAO,IAAI,aAAa,CAAC;AAClE,IAAM,WAAW;AAAA,MACf,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,QACP,QAAQ;AAAA,QACR,cAAc;AAAA,MAChB;AAAA,MACA,WAAW;AAAA,QACT,QAAQ;AAAA,MACV;AAAA,IACF;AAAA;AAAA;;;ACbA,SAAS,cAAc,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,WAAO,CAAC;AAAA,EACV;AACA,SAAO,OAAO,KAAK,MAAM,EAAE,OAAO,CAAC,QAAQ,QAAQ;AACjD,WAAO,IAAI,YAAY,CAAC,IAAI,OAAO,GAAG;AACtC,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP;AARA;AAAA;AAAA;AAAA;AAAA;;;ACOA,SAASC,UAAS,GAAG;AACnB,SAAO,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM;AAC/C;AAEA,SAAS,cAAc,GAAG;AACxB,MAAI,MAAK;AAET,MAAIA,UAAS,CAAC,MAAM;AAAO,WAAO;AAGlC,SAAO,EAAE;AACT,MAAI,SAAS;AAAW,WAAO;AAG/B,SAAO,KAAK;AACZ,MAAIA,UAAS,IAAI,MAAM;AAAO,WAAO;AAGrC,MAAI,KAAK,eAAe,eAAe,MAAM,OAAO;AAClD,WAAO;AAAA,EACT;AAGA,SAAO;AACT;AA/BA;AAAA;AAAA;AAAA;AAAA;;;ACCA,SAAS,UAAU,UAAU,SAAS;AACpC,QAAM,SAAS,OAAO,OAAO,CAAC,GAAG,QAAQ;AACzC,SAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,QAAQ;AACpC,QAAI,cAAc,QAAQ,GAAG,CAAC,GAAG;AAC/B,UAAI,EAAE,OAAO;AACX,eAAO,OAAO,QAAQ,EAAE,CAAC,GAAG,GAAG,QAAQ,GAAG,EAAE,CAAC;AAAA;AAE7C,eAAO,GAAG,IAAI,UAAU,SAAS,GAAG,GAAG,QAAQ,GAAG,CAAC;AAAA,IACvD,OAAO;AACL,aAAO,OAAO,QAAQ,EAAE,CAAC,GAAG,GAAG,QAAQ,GAAG,EAAE,CAAC;AAAA,IAC/C;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,SAAS,0BAA0B,KAAK;AACtC,aAAW,OAAO,KAAK;AACrB,QAAI,IAAI,GAAG,MAAM,QAAQ;AACvB,aAAO,IAAI,GAAG;AAAA,IAChB;AAAA,EACF;AACA,SAAO;AACT;AAPA;AAAA;AAAA;AAAA;AAAA;;;ACGA,SAASC,QAAM,UAAU,OAAO,SAAS;AACvC,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,MAAM,GAAG;AACnC,cAAU,OAAO,OAAO,MAAM,EAAE,QAAQ,IAAI,IAAI,EAAE,KAAK,OAAO,GAAG,OAAO;AAAA,EAC1E,OAAO;AACL,cAAU,OAAO,OAAO,CAAC,GAAG,KAAK;AAAA,EACnC;AACA,UAAQ,UAAU,cAAc,QAAQ,OAAO;AAC/C,4BAA0B,OAAO;AACjC,4BAA0B,QAAQ,OAAO;AACzC,QAAM,gBAAgB,UAAU,YAAY,CAAC,GAAG,OAAO;AACvD,MAAI,QAAQ,QAAQ,YAAY;AAC9B,QAAI,YAAY,SAAS,UAAU,UAAU,QAAQ;AACnD,oBAAc,UAAU,WAAW,SAAS,UAAU,SAAS;AAAA,QAC7D,CAAC,YAAY,CAAC,cAAc,UAAU,SAAS,SAAS,OAAO;AAAA,MACjE,EAAE,OAAO,cAAc,UAAU,QAAQ;AAAA,IAC3C;AACA,kBAAc,UAAU,YAAY,cAAc,UAAU,YAAY,CAAC,GAAG,IAAI,CAAC,YAAY,QAAQ,QAAQ,YAAY,EAAE,CAAC;AAAA,EAC9H;AACA,SAAO;AACT;AAvBA,IAAAC,cAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA,SAAS,mBAAmB,KAAK,YAAY;AAC3C,QAAM,YAAY,KAAK,KAAK,GAAG,IAAI,MAAM;AACzC,QAAM,QAAQ,OAAO,KAAK,UAAU;AACpC,MAAI,MAAM,WAAW,GAAG;AACtB,WAAO;AAAA,EACT;AACA,SAAO,MAAM,YAAY,MAAM,IAAI,CAAC,SAAS;AAC3C,QAAI,SAAS,KAAK;AAChB,aAAO,OAAO,WAAW,EAAE,MAAM,GAAG,EAAE,IAAI,kBAAkB,EAAE,KAAK,GAAG;AAAA,IACxE;AACA,WAAO,GAAG,IAAI,IAAI,mBAAmB,WAAW,IAAI,CAAC,CAAC;AAAA,EACxD,CAAC,EAAE,KAAK,GAAG;AACb;AAZA;AAAA;AAAA;AAAA;AAAA;;;ACCA,SAAS,eAAe,cAAc;AACpC,SAAO,aAAa,QAAQ,cAAc,EAAE,EAAE,MAAM,GAAG;AACzD;AACA,SAAS,wBAAwB,KAAK;AACpC,QAAM,UAAU,IAAI,MAAM,gBAAgB;AAC1C,MAAI,CAAC,SAAS;AACZ,WAAO,CAAC;AAAA,EACV;AACA,SAAO,QAAQ,IAAI,cAAc,EAAE,OAAO,CAAC,GAAG,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AACrE;AAVA,IAAM;AAAN;AAAA;AAAA;AAAA,IAAM,mBAAmB;AAAA;AAAA;;;ACAzB,SAASC,MAAK,QAAQ,YAAY;AAChC,SAAO,OAAO,KAAK,MAAM,EAAE,OAAO,CAACC,YAAW,CAAC,WAAW,SAASA,OAAM,CAAC,EAAE,OAAO,CAAC,KAAK,QAAQ;AAC/F,QAAI,GAAG,IAAI,OAAO,GAAG;AACrB,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP;AALA;AAAA;AAAA;AAAA;AAAA;;;ACAA,SAAS,eAAe,KAAK;AAC3B,SAAO,IAAI,MAAM,oBAAoB,EAAE,IAAI,SAAS,MAAM;AACxD,QAAI,CAAC,eAAe,KAAK,IAAI,GAAG;AAC9B,aAAO,UAAU,IAAI,EAAE,QAAQ,QAAQ,GAAG,EAAE,QAAQ,QAAQ,GAAG;AAAA,IACjE;AACA,WAAO;AAAA,EACT,CAAC,EAAE,KAAK,EAAE;AACZ;AACA,SAAS,iBAAiB,KAAK;AAC7B,SAAO,mBAAmB,GAAG,EAAE,QAAQ,YAAY,SAAS,GAAG;AAC7D,WAAO,MAAM,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,EAAE,YAAY;AAAA,EACxD,CAAC;AACH;AACA,SAAS,YAAY,UAAUzI,QAAO,KAAK;AACzC,EAAAA,SAAQ,aAAa,OAAO,aAAa,MAAM,eAAeA,MAAK,IAAI,iBAAiBA,MAAK;AAC7F,MAAI,KAAK;AACP,WAAO,iBAAiB,GAAG,IAAI,MAAMA;AAAA,EACvC,OAAO;AACL,WAAOA;AAAA,EACT;AACF;AACA,SAAS,UAAUA,QAAO;AACxB,SAAOA,WAAU,UAAUA,WAAU;AACvC;AACA,SAAS,cAAc,UAAU;AAC/B,SAAO,aAAa,OAAO,aAAa,OAAO,aAAa;AAC9D;AACA,SAAS,UAAU2D,UAAS,UAAU,KAAK,UAAU;AACnD,MAAI3D,SAAQ2D,SAAQ,GAAG,GAAG,SAAS,CAAC;AACpC,MAAI,UAAU3D,MAAK,KAAKA,WAAU,IAAI;AACpC,QAAI,OAAOA,WAAU,YAAY,OAAOA,WAAU,YAAY,OAAOA,WAAU,WAAW;AACxF,MAAAA,SAAQA,OAAM,SAAS;AACvB,UAAI,YAAY,aAAa,KAAK;AAChC,QAAAA,SAAQA,OAAM,UAAU,GAAG,SAAS,UAAU,EAAE,CAAC;AAAA,MACnD;AACA,aAAO;AAAA,QACL,YAAY,UAAUA,QAAO,cAAc,QAAQ,IAAI,MAAM,EAAE;AAAA,MACjE;AAAA,IACF,OAAO;AACL,UAAI,aAAa,KAAK;AACpB,YAAI,MAAM,QAAQA,MAAK,GAAG;AACxB,UAAAA,OAAM,OAAO,SAAS,EAAE,QAAQ,SAAS0I,SAAQ;AAC/C,mBAAO;AAAA,cACL,YAAY,UAAUA,SAAQ,cAAc,QAAQ,IAAI,MAAM,EAAE;AAAA,YAClE;AAAA,UACF,CAAC;AAAA,QACH,OAAO;AACL,iBAAO,KAAK1I,MAAK,EAAE,QAAQ,SAAS,GAAG;AACrC,gBAAI,UAAUA,OAAM,CAAC,CAAC,GAAG;AACvB,qBAAO,KAAK,YAAY,UAAUA,OAAM,CAAC,GAAG,CAAC,CAAC;AAAA,YAChD;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,OAAO;AACL,cAAM,MAAM,CAAC;AACb,YAAI,MAAM,QAAQA,MAAK,GAAG;AACxB,UAAAA,OAAM,OAAO,SAAS,EAAE,QAAQ,SAAS0I,SAAQ;AAC/C,gBAAI,KAAK,YAAY,UAAUA,OAAM,CAAC;AAAA,UACxC,CAAC;AAAA,QACH,OAAO;AACL,iBAAO,KAAK1I,MAAK,EAAE,QAAQ,SAAS,GAAG;AACrC,gBAAI,UAAUA,OAAM,CAAC,CAAC,GAAG;AACvB,kBAAI,KAAK,iBAAiB,CAAC,CAAC;AAC5B,kBAAI,KAAK,YAAY,UAAUA,OAAM,CAAC,EAAE,SAAS,CAAC,CAAC;AAAA,YACrD;AAAA,UACF,CAAC;AAAA,QACH;AACA,YAAI,cAAc,QAAQ,GAAG;AAC3B,iBAAO,KAAK,iBAAiB,GAAG,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC;AAAA,QACzD,WAAW,IAAI,WAAW,GAAG;AAC3B,iBAAO,KAAK,IAAI,KAAK,GAAG,CAAC;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AAAA,EACF,OAAO;AACL,QAAI,aAAa,KAAK;AACpB,UAAI,UAAUA,MAAK,GAAG;AACpB,eAAO,KAAK,iBAAiB,GAAG,CAAC;AAAA,MACnC;AAAA,IACF,WAAWA,WAAU,OAAO,aAAa,OAAO,aAAa,MAAM;AACjE,aAAO,KAAK,iBAAiB,GAAG,IAAI,GAAG;AAAA,IACzC,WAAWA,WAAU,IAAI;AACvB,aAAO,KAAK,EAAE;AAAA,IAChB;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,SAAS,UAAU;AAC1B,SAAO;AAAA,IACL,QAAQ2I,QAAO,KAAK,MAAM,QAAQ;AAAA,EACpC;AACF;AACA,SAASA,QAAO,UAAUhF,UAAS;AACjC,MAAI,YAAY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAClD,aAAW,SAAS;AAAA,IAClB;AAAA,IACA,SAAS,GAAG,YAAY,SAAS;AAC/B,UAAI,YAAY;AACd,YAAI,WAAW;AACf,cAAML,UAAS,CAAC;AAChB,YAAI,UAAU,QAAQ,WAAW,OAAO,CAAC,CAAC,MAAM,IAAI;AAClD,qBAAW,WAAW,OAAO,CAAC;AAC9B,uBAAa,WAAW,OAAO,CAAC;AAAA,QAClC;AACA,mBAAW,MAAM,IAAI,EAAE,QAAQ,SAAS,UAAU;AAChD,cAAI,MAAM,4BAA4B,KAAK,QAAQ;AACnD,UAAAA,QAAO,KAAK,UAAUK,UAAS,UAAU,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;AAAA,QACpE,CAAC;AACD,YAAI,YAAY,aAAa,KAAK;AAChC,cAAI,YAAY;AAChB,cAAI,aAAa,KAAK;AACpB,wBAAY;AAAA,UACd,WAAW,aAAa,KAAK;AAC3B,wBAAY;AAAA,UACd;AACA,kBAAQL,QAAO,WAAW,IAAI,WAAW,MAAMA,QAAO,KAAK,SAAS;AAAA,QACtE,OAAO;AACL,iBAAOA,QAAO,KAAK,GAAG;AAAA,QACxB;AAAA,MACF,OAAO;AACL,eAAO,eAAe,OAAO;AAAA,MAC/B;AAAA,IACF;AAAA,EACF;AACA,MAAI,aAAa,KAAK;AACpB,WAAO;AAAA,EACT,OAAO;AACL,WAAO,SAAS,QAAQ,OAAO,EAAE;AAAA,EACnC;AACF;AAjIA;AAAA;AAAA;AAAA;AAAA;;;ACIA,SAAS,MAAM,SAAS;AACtB,MAAI,SAAS,QAAQ,OAAO,YAAY;AACxC,MAAI,OAAO,QAAQ,OAAO,KAAK,QAAQ,gBAAgB,MAAM;AAC7D,MAAI,UAAU,OAAO,OAAO,CAAC,GAAG,QAAQ,OAAO;AAC/C,MAAI;AACJ,MAAI,aAAakF,MAAK,SAAS;AAAA,IAC7B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,QAAM,mBAAmB,wBAAwB,GAAG;AACpD,QAAM,SAAS,GAAG,EAAE,OAAO,UAAU;AACrC,MAAI,CAAC,QAAQ,KAAK,GAAG,GAAG;AACtB,UAAM,QAAQ,UAAU;AAAA,EAC1B;AACA,QAAM,oBAAoB,OAAO,KAAK,OAAO,EAAE,OAAO,CAACC,YAAW,iBAAiB,SAASA,OAAM,CAAC,EAAE,OAAO,SAAS;AACrH,QAAM,sBAAsBD,MAAK,YAAY,iBAAiB;AAC9D,QAAM,kBAAkB,6BAA6B,KAAK,QAAQ,MAAM;AACxE,MAAI,CAAC,iBAAiB;AACpB,QAAI,QAAQ,UAAU,QAAQ;AAC5B,cAAQ,SAAS,QAAQ,OAAO,MAAM,GAAG,EAAE;AAAA,QACzC,CAAC,WAAW,OAAO;AAAA,UACjB;AAAA,UACA,uBAAuB,QAAQ,UAAU,MAAM;AAAA,QACjD;AAAA,MACF,EAAE,KAAK,GAAG;AAAA,IACZ;AACA,QAAI,IAAI,SAAS,UAAU,GAAG;AAC5B,UAAI,QAAQ,UAAU,UAAU,QAAQ;AACtC,cAAM,2BAA2B,QAAQ,OAAO,MAAM,qBAAqB,KAAK,CAAC;AACjF,gBAAQ,SAAS,yBAAyB,OAAO,QAAQ,UAAU,QAAQ,EAAE,IAAI,CAAC,YAAY;AAC5F,gBAAM,SAAS,QAAQ,UAAU,SAAS,IAAI,QAAQ,UAAU,MAAM,KAAK;AAC3E,iBAAO,0BAA0B,OAAO,WAAW,MAAM;AAAA,QAC3D,CAAC,EAAE,KAAK,GAAG;AAAA,MACb;AAAA,IACF;AAAA,EACF;AACA,MAAI,CAAC,OAAO,MAAM,EAAE,SAAS,MAAM,GAAG;AACpC,UAAM,mBAAmB,KAAK,mBAAmB;AAAA,EACnD,OAAO;AACL,QAAI,UAAU,qBAAqB;AACjC,aAAO,oBAAoB;AAAA,IAC7B,OAAO;AACL,UAAI,OAAO,KAAK,mBAAmB,EAAE,QAAQ;AAC3C,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACA,MAAI,CAAC,QAAQ,cAAc,KAAK,OAAO,SAAS,aAAa;AAC3D,YAAQ,cAAc,IAAI;AAAA,EAC5B;AACA,MAAI,CAAC,SAAS,KAAK,EAAE,SAAS,MAAM,KAAK,OAAO,SAAS,aAAa;AACpE,WAAO;AAAA,EACT;AACA,SAAO,OAAO;AAAA,IACZ,EAAE,QAAQ,KAAK,QAAQ;AAAA,IACvB,OAAO,SAAS,cAAc,EAAE,KAAK,IAAI;AAAA,IACzC,QAAQ,UAAU,EAAE,SAAS,QAAQ,QAAQ,IAAI;AAAA,EACnD;AACF;AAlEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACAA,SAAS,qBAAqB,UAAU,OAAO,SAAS;AACtD,SAAO,MAAMF,QAAM,UAAU,OAAO,OAAO,CAAC;AAC9C;AALA;AAAA;AAAA;AACA,IAAAC;AACA;AAAA;AAAA;;;ACCA,SAAS,aAAa,aAAa,aAAa;AAC9C,QAAMK,YAAWN,QAAM,aAAa,WAAW;AAC/C,QAAMO,YAAW,qBAAqB,KAAK,MAAMD,SAAQ;AACzD,SAAO,OAAO,OAAOC,WAAU;AAAA,IAC7B,UAAAD;AAAA,IACA,UAAU,aAAa,KAAK,MAAMA,SAAQ;AAAA,IAC1C,OAAON,QAAM,KAAK,MAAMM,SAAQ;AAAA,IAChC;AAAA,EACF,CAAC;AACH;AAZA;AAAA;AAAA;AAAA;AACA,IAAAL;AACA;AAAA;AAAA;;;ACFA,IAEM;AAFN;AAAA;AAAA;AAAA;AACA;AACA,IAAM,WAAW,aAAa,MAAM,QAAQ;AAAA;AAAA;;;ACF5C,IAAMO;AAAN,IAAAV,gBAAA;AAAA;AAAA;AAAA,IAAMU,WAAU;AAAA;AAAA;;;ACAhB,IAAM;AAAN,IAAAC,iBAAA;AAAA;AAAA;AAAA,IAAM,cAAN,cAA0B,MAAM;AAAA,MAC9B,YAAY,SAAS;AACnB,cAAM,OAAO;AAIb,YAAI,MAAM,mBAAmB;AAC3B,gBAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,QAChD;AAEA,aAAK,OAAO;AAAA,MACd;AAAA,IAEF;AAAA;AAAA;;;ACbA;AAAA;AAAA;AAKA,WAAO,UAAU;AACjB,aAAS,OAAQ,IAAI,IAAI;AACvB,UAAI,MAAM;AAAI,eAAO,OAAO,EAAE,EAAE,EAAE;AAElC,UAAI,OAAO,OAAO;AAChB,cAAM,IAAI,UAAU,uBAAuB;AAE7C,aAAO,KAAK,EAAE,EAAE,QAAQ,SAAU,GAAG;AACnC,gBAAQ,CAAC,IAAI,GAAG,CAAC;AAAA,MACnB,CAAC;AAED,aAAO;AAEP,eAAS,UAAU;AACjB,YAAI,OAAO,IAAI,MAAM,UAAU,MAAM;AACrC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,CAAC,IAAI,UAAU,CAAC;AAAA,QACvB;AACA,YAAI,MAAM,GAAG,MAAM,MAAM,IAAI;AAC7B,YAAIC,MAAK,KAAK,KAAK,SAAO,CAAC;AAC3B,YAAI,OAAO,QAAQ,cAAc,QAAQA,KAAI;AAC3C,iBAAO,KAAKA,GAAE,EAAE,QAAQ,SAAU,GAAG;AACnC,gBAAI,CAAC,IAAIA,IAAG,CAAC;AAAA,UACf,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;AChCA;AAAA;AAAA;AAAA,QAAI,SAAS;AACb,WAAO,UAAU,OAAOC,KAAI;AAC5B,WAAO,QAAQ,SAAS,OAAO,UAAU;AAEzC,IAAAA,MAAK,QAAQA,MAAK,WAAY;AAC5B,aAAO,eAAe,SAAS,WAAW,QAAQ;AAAA,QAChD,OAAO,WAAY;AACjB,iBAAOA,MAAK,IAAI;AAAA,QAClB;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAe,SAAS,WAAW,cAAc;AAAA,QACtD,OAAO,WAAY;AACjB,iBAAO,WAAW,IAAI;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAAA,IACH,CAAC;AAED,aAASA,MAAM,IAAI;AACjB,UAAI,IAAI,WAAY;AAClB,YAAI,EAAE;AAAQ,iBAAO,EAAE;AACvB,UAAE,SAAS;AACX,eAAO,EAAE,QAAQ,GAAG,MAAM,MAAM,SAAS;AAAA,MAC3C;AACA,QAAE,SAAS;AACX,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,IAAI;AACvB,UAAI,IAAI,WAAY;AAClB,YAAI,EAAE;AACJ,gBAAM,IAAI,MAAM,EAAE,SAAS;AAC7B,UAAE,SAAS;AACX,eAAO,EAAE,QAAQ,GAAG,MAAM,MAAM,SAAS;AAAA,MAC3C;AACA,UAAI,OAAO,GAAG,QAAQ;AACtB,QAAE,YAAY,OAAO;AACrB,QAAE,SAAS;AACX,aAAO;AAAA,IACT;AAAA;AAAA;;;ACzCA,IACA,aACM,aACA,gBACA;AAJN,IAAAC,iBAAA;AAAA;AAAA;AAAA,IAAAH;AACA,kBAAiB;AACjB,IAAM,kBAAc,YAAAE,SAAK,CAAC,gBAAgB,QAAQ,KAAK,WAAW,CAAC;AACnE,IAAM,qBAAiB,YAAAA,SAAK,CAAC,gBAAgB,QAAQ,KAAK,WAAW,CAAC;AACtE,IAAM,eAAN,cAA2B,MAAM;AAAA,MAC/B,YAAY,SAAS,YAAY,SAAS;AACxC,cAAM,OAAO;AACb,YAAI,MAAM,mBAAmB;AAC3B,gBAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,QAChD;AACA,aAAK,OAAO;AACZ,aAAK,SAAS;AACd,YAAI;AACJ,YAAI,aAAa,WAAW,OAAO,QAAQ,YAAY,aAAa;AAClE,oBAAU,QAAQ;AAAA,QACpB;AACA,YAAI,cAAc,SAAS;AACzB,eAAK,WAAW,QAAQ;AACxB,oBAAU,QAAQ,SAAS;AAAA,QAC7B;AACA,cAAM,cAAc,OAAO,OAAO,CAAC,GAAG,QAAQ,OAAO;AACrD,YAAI,QAAQ,QAAQ,QAAQ,eAAe;AACzC,sBAAY,UAAU,OAAO,OAAO,CAAC,GAAG,QAAQ,QAAQ,SAAS;AAAA,YAC/D,eAAe,QAAQ,QAAQ,QAAQ,cAAc;AAAA,cACnD;AAAA,cACA;AAAA,YACF;AAAA,UACF,CAAC;AAAA,QACH;AACA,oBAAY,MAAM,YAAY,IAAI,QAAQ,wBAAwB,0BAA0B,EAAE,QAAQ,uBAAuB,yBAAyB;AACtJ,aAAK,UAAU;AACf,eAAO,eAAe,MAAM,QAAQ;AAAA,UAClC,MAAM;AACJ;AAAA,cACE,IAAI;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AACA,mBAAO;AAAA,UACT;AAAA,QACF,CAAC;AACD,eAAO,eAAe,MAAM,WAAW;AAAA,UACrC,MAAM;AACJ;AAAA,cACE,IAAI;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AACA,mBAAO,WAAW,CAAC;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA;AAAA;;;ACpDA,SAAS,kBAAkB,UAAU;AACnC,SAAO,SAAS,YAAY;AAC9B;AAFA;AAAA;AAAA;AAAA;AAAA;;;ACGA,SAAS,aAAa,gBAAgB;AACpC,QAAMrI,OAAM,eAAe,WAAW,eAAe,QAAQ,MAAM,eAAe,QAAQ,MAAM;AAChG,QAAM,2BAA2B,eAAe,SAAS,6BAA6B;AACtF,MAAI,cAAc,eAAe,IAAI,KAAK,MAAM,QAAQ,eAAe,IAAI,GAAG;AAC5E,mBAAe,OAAO,KAAK,UAAU,eAAe,IAAI;AAAA,EAC1D;AACA,MAAI,UAAU,CAAC;AACf,MAAIQ;AACJ,MAAI;AACJ,MAAI,EAAE,MAAM,IAAI;AAChB,MAAI,eAAe,SAAS,OAAO;AACjC,YAAQ,eAAe,QAAQ;AAAA,EACjC;AACA,MAAI,CAAC,OAAO;AACV,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACA,SAAO,MAAM,eAAe,KAAK;AAAA,IAC/B,QAAQ,eAAe;AAAA,IACvB,MAAM,eAAe;AAAA,IACrB,SAAS,eAAe;AAAA,IACxB,QAAQ,eAAe,SAAS;AAAA;AAAA;AAAA,IAGhC,GAAG,eAAe,QAAQ,EAAE,QAAQ,OAAO;AAAA,EAC7C,CAAC,EAAE,KAAK,OAAO,aAAa;AAC1B,UAAM,SAAS;AACf,IAAAA,UAAS,SAAS;AAClB,eAAW,eAAe,SAAS,SAAS;AAC1C,cAAQ,YAAY,CAAC,CAAC,IAAI,YAAY,CAAC;AAAA,IACzC;AACA,QAAI,iBAAiB,SAAS;AAC5B,YAAM,UAAU,QAAQ,QAAQ,QAAQ,KAAK,MAAM,8BAA8B;AACjF,YAAM,kBAAkB,WAAW,QAAQ,IAAI;AAC/C,MAAAR,KAAI;AAAA,QACF,uBAAuB,eAAe,MAAM,IAAI,eAAe,GAAG,qDAAqD,QAAQ,MAAM,GAAG,kBAAkB,SAAS,eAAe,KAAK,EAAE;AAAA,MAC3L;AAAA,IACF;AACA,QAAIQ,YAAW,OAAOA,YAAW,KAAK;AACpC;AAAA,IACF;AACA,QAAI,eAAe,WAAW,QAAQ;AACpC,UAAIA,UAAS,KAAK;AAChB;AAAA,MACF;AACA,YAAM,IAAI,aAAa,SAAS,YAAYA,SAAQ;AAAA,QAClD,UAAU;AAAA,UACR;AAAA,UACA,QAAAA;AAAA,UACA;AAAA,UACA,MAAM;AAAA,QACR;AAAA,QACA,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AACA,QAAIA,YAAW,KAAK;AAClB,YAAM,IAAI,aAAa,gBAAgBA,SAAQ;AAAA,QAC7C,UAAU;AAAA,UACR;AAAA,UACA,QAAAA;AAAA,UACA;AAAA,UACA,MAAM,MAAM,gBAAgB,QAAQ;AAAA,QACtC;AAAA,QACA,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AACA,QAAIA,WAAU,KAAK;AACjB,YAAM,OAAO,MAAM,gBAAgB,QAAQ;AAC3C,YAAM,QAAQ,IAAI,aAAa,eAAe,IAAI,GAAGA,SAAQ;AAAA,QAC3D,UAAU;AAAA,UACR;AAAA,UACA,QAAAA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,SAAS;AAAA,MACX,CAAC;AACD,YAAM;AAAA,IACR;AACA,WAAO,2BAA2B,MAAM,gBAAgB,QAAQ,IAAI,SAAS;AAAA,EAC/E,CAAC,EAAE,KAAK,CAAC,SAAS;AAChB,WAAO;AAAA,MACL,QAAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC,EAAE,MAAM,CAAC,UAAU;AAClB,QAAI,iBAAiB;AACnB,YAAM;AAAA,aACC,MAAM,SAAS;AACtB,YAAM;AACR,QAAI,UAAU,MAAM;AACpB,QAAI,MAAM,SAAS,eAAe,WAAW,OAAO;AAClD,UAAI,MAAM,iBAAiB,OAAO;AAChC,kBAAU,MAAM,MAAM;AAAA,MACxB,WAAW,OAAO,MAAM,UAAU,UAAU;AAC1C,kBAAU,MAAM;AAAA,MAClB;AAAA,IACF;AACA,UAAM,IAAI,aAAa,SAAS,KAAK;AAAA,MACnC,SAAS;AAAA,IACX,CAAC;AAAA,EACH,CAAC;AACH;AACA,eAAe,gBAAgB,UAAU;AACvC,QAAM,cAAc,SAAS,QAAQ,IAAI,cAAc;AACvD,MAAI,oBAAoB,KAAK,WAAW,GAAG;AACzC,WAAO,SAAS,KAAK;AAAA,EACvB;AACA,MAAI,CAAC,eAAe,yBAAyB,KAAK,WAAW,GAAG;AAC9D,WAAO,SAAS,KAAK;AAAA,EACvB;AACA,SAAO,kBAAU,QAAQ;AAC3B;AACA,SAAS,eAAe,MAAM;AAC5B,MAAI,OAAO,SAAS;AAClB,WAAO;AACT,MAAI,aAAa,MAAM;AACrB,QAAI,MAAM,QAAQ,KAAK,MAAM,GAAG;AAC9B,aAAO,GAAG,KAAK,OAAO,KAAK,KAAK,OAAO,IAAI,KAAK,SAAS,EAAE,KAAK,IAAI,CAAC;AAAA,IACvE;AACA,WAAO,KAAK;AAAA,EACd;AACA,SAAO,kBAAkB,KAAK,UAAU,IAAI,CAAC;AAC/C;AAjIA;AAAA;AAAA;AAAA;AACA,IAAA8H;AACA;AAAA;AAAA;;;ACDA,SAASC,cAAa,aAAa,aAAa;AAC9C,QAAMN,YAAW,YAAY,SAAS,WAAW;AACjD,QAAM,SAAS,SAAS,OAAO,YAAY;AACzC,UAAM,kBAAkBA,UAAS,MAAM,OAAO,UAAU;AACxD,QAAI,CAAC,gBAAgB,WAAW,CAAC,gBAAgB,QAAQ,MAAM;AAC7D,aAAO,aAAaA,UAAS,MAAM,eAAe,CAAC;AAAA,IACrD;AACA,UAAM1F,WAAU,CAAC,QAAQ,gBAAgB;AACvC,aAAO;AAAA,QACL0F,UAAS,MAAMA,UAAS,MAAM,QAAQ,WAAW,CAAC;AAAA,MACpD;AAAA,IACF;AACA,WAAO,OAAO1F,UAAS;AAAA,MACrB,UAAA0F;AAAA,MACA,UAAUM,cAAa,KAAK,MAAMN,SAAQ;AAAA,IAC5C,CAAC;AACD,WAAO,gBAAgB,QAAQ,KAAK1F,UAAS,eAAe;AAAA,EAC9D;AACA,SAAO,OAAO,OAAO,QAAQ;AAAA,IAC3B,UAAA0F;AAAA,IACA,UAAUM,cAAa,KAAK,MAAMN,SAAQ;AAAA,EAC5C,CAAC;AACH;AAvBA,IAAAO,sBAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAIMjG;AAJN,IAAA+F,iBAAA;AAAA;AAAA;AAAA;AACA;AACA,IAAAd;AACA,IAAAgB;AACA,IAAMjG,WAAUgG,cAAa,UAAU;AAAA,MACrC,SAAS;AAAA,QACP,cAAc,sBAAsBL,QAAO,IAAI,aAAa,CAAC;AAAA,MAC/D;AAAA,IACF,CAAC;AAAA;AAAA;;;ACMD,SAAS,+BAA+B,MAAM;AAC5C,SAAO;AAAA,IACL,KAAK,OAAO,IAAI,CAAC,MAAM,MAAM,EAAE,OAAO,EAAE,EAAE,KAAK,IAAI;AACvD;AA4BA,SAAS,QAAQO,WAAU,OAAO,SAAS;AACzC,MAAI,SAAS;AACX,QAAI,OAAO,UAAU,YAAY,WAAW,SAAS;AACnD,aAAO,QAAQ;AAAA,QACb,IAAI,MAAM,4DAA4D;AAAA,MACxE;AAAA,IACF;AACA,eAAW,OAAO,SAAS;AACzB,UAAI,CAAC,2BAA2B,SAAS,GAAG;AAC1C;AACF,aAAO,QAAQ;AAAA,QACb,IAAI;AAAA,UACF,uBAAuB,GAAG;AAAA,QAC5B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,QAAM,gBAAgB,OAAO,UAAU,WAAW,OAAO,OAAO,EAAE,MAAM,GAAG,OAAO,IAAI;AACtF,QAAM,iBAAiB,OAAO;AAAA,IAC5B;AAAA,EACF,EAAE,OAAO,CAAC,QAAQ,QAAQ;AACxB,QAAI,qBAAqB,SAAS,GAAG,GAAG;AACtC,aAAO,GAAG,IAAI,cAAc,GAAG;AAC/B,aAAO;AAAA,IACT;AACA,QAAI,CAAC,OAAO,WAAW;AACrB,aAAO,YAAY,CAAC;AAAA,IACtB;AACA,WAAO,UAAU,GAAG,IAAI,cAAc,GAAG;AACzC,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACL,QAAM,UAAU,cAAc,WAAWA,UAAS,SAAS,SAAS;AACpE,MAAI,qBAAqB,KAAK,OAAO,GAAG;AACtC,mBAAe,MAAM,QAAQ,QAAQ,sBAAsB,cAAc;AAAA,EAC3E;AACA,SAAOA,UAAS,cAAc,EAAE,KAAK,CAAC,aAAa;AACjD,QAAI,SAAS,KAAK,QAAQ;AACxB,YAAM,UAAU,CAAC;AACjB,iBAAW,OAAO,OAAO,KAAK,SAAS,OAAO,GAAG;AAC/C,gBAAQ,GAAG,IAAI,SAAS,QAAQ,GAAG;AAAA,MACrC;AACA,YAAM,IAAI;AAAA,QACR;AAAA,QACA;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AACA,WAAO,SAAS,KAAK;AAAA,EACvB,CAAC;AACH;AAGA,SAASF,cAAaE,WAAU,aAAa;AAC3C,QAAM,aAAaA,UAAS,SAAS,WAAW;AAChD,QAAM,SAAS,CAAC,OAAO,YAAY;AACjC,WAAO,QAAQ,YAAY,OAAO,OAAO;AAAA,EAC3C;AACA,SAAO,OAAO,OAAO,QAAQ;AAAA,IAC3B,UAAUF,cAAa,KAAK,MAAM,UAAU;AAAA,IAC5C,UAAU,WAAW;AAAA,EACvB,CAAC;AACH;AAUA,SAAS,kBAAkB,eAAe;AACxC,SAAOA,cAAa,eAAe;AAAA,IACjC,QAAQ;AAAA,IACR,KAAK;AAAA,EACP,CAAC;AACH;AAzHA,IAKIL,UAaA,sBAgBA,sBASA,4BACA,sBAiEA;AA7GJ,IAAAC,iBAAA;AAAA;AAAA;AACA,IAAAG;AACA;AAGA,IAAIJ,WAAU;AAad,IAAI,uBAAuB,cAAc,MAAM;AAAA,MAC7C,YAAYO,WAAU,SAAS,UAAU;AACvC,cAAM,+BAA+B,QAAQ,CAAC;AAC9C,aAAK,UAAUA;AACf,aAAK,UAAU;AACf,aAAK,WAAW;AAChB,aAAK,OAAO;AACZ,aAAK,SAAS,SAAS;AACvB,aAAK,OAAO,SAAS;AACrB,YAAI,MAAM,mBAAmB;AAC3B,gBAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,QAChD;AAAA,MACF;AAAA,IACF;AAGA,IAAI,uBAAuB;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,IAAI,6BAA6B,CAAC,SAAS,UAAU,KAAK;AAC1D,IAAI,uBAAuB;AAiE3B,IAAI,WAAWF,cAAahG,UAAS;AAAA,MACnC,SAAS;AAAA,QACP,cAAc,sBAAsB2F,QAAO,IAAI,aAAa,CAAC;AAAA,MAC/D;AAAA,MACA,QAAQ;AAAA,MACR,KAAK;AAAA,IACP,CAAC;AAAA;AAAA;;;AChHD,eAAe,KAAK,OAAO;AACzB,QAAM,QAAQ,MAAM,MAAM,IAAI,EAAE,WAAW;AAC3C,QAAM,iBAAiB,6BAA6B,KAAK,KAAK,KAAK,sBAAsB,KAAK,KAAK;AACnG,QAAM,iBAAiB,wBAAwB,KAAK,KAAK;AACzD,QAAM,YAAY,QAAQ,QAAQ,iBAAiB,iBAAiB,iBAAiB,mBAAmB;AACxG,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA;AAAA,EACF;AACF;AAbA,IAAM,8BACA,uBACA;AAFN;AAAA;AAAA;AAAA,IAAM,+BAA+B;AACrC,IAAM,wBAAwB;AAC9B,IAAM,0BAA0B;AAAA;AAAA;;;ACFhC,SAAS,wBAAwB,OAAO;AACtC,MAAI,MAAM,MAAM,IAAI,EAAE,WAAW,GAAG;AAClC,WAAO,UAAU,KAAK;AAAA,EACxB;AACA,SAAO,SAAS,KAAK;AACvB;AALA;AAAA;AAAA;AAAA;AAAA;;;ACCA,eAAe,KAAK,OAAO3F,UAAS,OAAO,YAAY;AACrD,QAAM0F,YAAW1F,SAAQ,SAAS;AAAA,IAChC;AAAA,IACA;AAAA,EACF;AACA,EAAA0F,UAAS,QAAQ,gBAAgB,wBAAwB,KAAK;AAC9D,SAAO1F,SAAQ0F,SAAQ;AACzB;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAEM;AAFN,IAAAK,iBAAA;AAAA;AAAA;AAAA;AACA;AACA,IAAM,kBAAkB,SAAS,iBAAiB,OAAO;AACvD,UAAI,CAAC,OAAO;AACV,cAAM,IAAI,MAAM,0DAA0D;AAAA,MAC5E;AACA,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AACA,cAAQ,MAAM,QAAQ,sBAAsB,EAAE;AAC9C,aAAO,OAAO,OAAO,KAAK,KAAK,MAAM,KAAK,GAAG;AAAA,QAC3C,MAAM,KAAK,KAAK,MAAM,KAAK;AAAA,MAC7B,CAAC;AAAA,IACH;AAAA;AAAA;;;ACfA;AAAA;AAAA;AAAA;AAAA,IAEA,0BAMIJ,UAGA;AAXJ,IAAAC,iBAAA;AAAA;AAAA;AACA;AACA,+BAA2B;AAC3B,IAAAG;AACA,IAAAH;AACA,IAAAG;AAGA,IAAIJ,WAAU;AAGd,IAAI,UAAU,MAAM;AAAA,MAClB,OAAO;AACL,aAAK,UAAUA;AAAA,MACjB;AAAA,MACA,OAAO,SAAS,UAAU;AACxB,cAAM,sBAAsB,cAAc,KAAK;AAAA,UAC7C,eAAe,MAAM;AACnB,kBAAM,UAAU,KAAK,CAAC,KAAK,CAAC;AAC5B,gBAAI,OAAO,aAAa,YAAY;AAClC,oBAAM,SAAS,OAAO,CAAC;AACvB;AAAA,YACF;AACA;AAAA,cACE,OAAO;AAAA,gBACL,CAAC;AAAA,gBACD;AAAA,gBACA;AAAA,gBACA,QAAQ,aAAa,SAAS,YAAY;AAAA,kBACxC,WAAW,GAAG,QAAQ,SAAS,IAAI,SAAS,SAAS;AAAA,gBACvD,IAAI;AAAA,cACN;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MACA,OAAO;AACL,aAAK,UAAU,CAAC;AAAA,MAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,OAAO,UAAU,YAAY;AAC3B,cAAM,iBAAiB,KAAK;AAC5B,cAAM,aAAa,cAAc,KAAK;AAAA,UACpC,OAAO;AACL,iBAAK,UAAU,eAAe;AAAA,cAC5B,WAAW,OAAO,CAAC,WAAW,CAAC,eAAe,SAAS,MAAM,CAAC;AAAA,YAChE;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MACA,YAAY,UAAU,CAAC,GAAG;AACxB,cAAMZ,QAAO,IAAI,oCAAW;AAC5B,cAAM,kBAAkB;AAAA,UACtB,SAAS/E,SAAQ,SAAS,SAAS;AAAA,UACnC,SAAS,CAAC;AAAA,UACV,SAAS,OAAO,OAAO,CAAC,GAAG,QAAQ,SAAS;AAAA;AAAA,YAE1C,MAAM+E,MAAK,KAAK,MAAM,SAAS;AAAA,UACjC,CAAC;AAAA,UACD,WAAW;AAAA,YACT,UAAU,CAAC;AAAA,YACX,QAAQ;AAAA,UACV;AAAA,QACF;AACA,wBAAgB,QAAQ,YAAY,IAAI;AAAA,UACtC,QAAQ;AAAA,UACR,mBAAmBY,QAAO,IAAI,aAAa,CAAC;AAAA,QAC9C,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG;AAC1B,YAAI,QAAQ,SAAS;AACnB,0BAAgB,UAAU,QAAQ;AAAA,QACpC;AACA,YAAI,QAAQ,UAAU;AACpB,0BAAgB,UAAU,WAAW,QAAQ;AAAA,QAC/C;AACA,YAAI,QAAQ,UAAU;AACpB,0BAAgB,QAAQ,WAAW,IAAI,QAAQ;AAAA,QACjD;AACA,aAAK,UAAU3F,SAAQ,SAAS,eAAe;AAC/C,aAAK,UAAU,kBAAkB,KAAK,OAAO,EAAE,SAAS,eAAe;AACvE,aAAK,MAAM,OAAO;AAAA,UAChB;AAAA,YACE,OAAO,MAAM;AAAA,YACb;AAAA,YACA,MAAM,MAAM;AAAA,YACZ;AAAA,YACA,MAAM,QAAQ,KAAK,KAAK,OAAO;AAAA,YAC/B,OAAO,QAAQ,MAAM,KAAK,OAAO;AAAA,UACnC;AAAA,UACA,QAAQ;AAAA,QACV;AACA,aAAK,OAAO+E;AACZ,YAAI,CAAC,QAAQ,cAAc;AACzB,cAAI,CAAC,QAAQ,MAAM;AACjB,iBAAK,OAAO,aAAa;AAAA,cACvB,MAAM;AAAA,YACR;AAAA,UACF,OAAO;AACL,kBAAMoB,QAAO,gBAAgB,QAAQ,IAAI;AACzC,YAAApB,MAAK,KAAK,WAAWoB,MAAK,IAAI;AAC9B,iBAAK,OAAOA;AAAA,UACd;AAAA,QACF,OAAO;AACL,gBAAM,EAAE,cAAc,GAAG,aAAa,IAAI;AAC1C,gBAAMA,QAAO;AAAA,YACX,OAAO;AAAA,cACL;AAAA,gBACE,SAAS,KAAK;AAAA,gBACd,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMV,SAAS;AAAA,gBACT,gBAAgB;AAAA,cAClB;AAAA,cACA,QAAQ;AAAA,YACV;AAAA,UACF;AACA,UAAApB,MAAK,KAAK,WAAWoB,MAAK,IAAI;AAC9B,eAAK,OAAOA;AAAA,QACd;AACA,cAAM,mBAAmB,KAAK;AAC9B,yBAAiB,QAAQ,QAAQ,CAAC,WAAW;AAC3C,iBAAO,OAAO,MAAM,OAAO,MAAM,OAAO,CAAC;AAAA,QAC3C,CAAC;AAAA,MACH;AAAA,IACF;AAAA;AAAA;;;ACtIA,IAAMR;AAAN,IAAAV,gBAAA;AAAA;AAAA;AAAA,IAAMU,WAAU;AAAA;AAAA;;;ACAhB,IAAM,WAy4DF;AAz4DJ;AAAA;AAAA;AAAA,IAAM,YAAY;AAAA,MAChB,SAAS;AAAA,QACP,yCAAyC;AAAA,UACvC;AAAA,QACF;AAAA,QACA,0CAA0C;AAAA,UACxC;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,mBAAmB;AAAA,UACjB;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,yBAAyB,CAAC,+CAA+C;AAAA,QACzE,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,oCAAoC;AAAA,QACxD,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,yBAAyB,CAAC,+CAA+C;AAAA,QACzE,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,oBAAoB,CAAC,8CAA8C;AAAA,QACnE,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,gBAAgB;AAAA,UACd;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,kDAAkD;AAAA,QACpE,mBAAmB,CAAC,6CAA6C;AAAA,QACjE,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,oDAAoD;AAAA,QACxE,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,oDAAoD;AAAA,UAClD;AAAA,QACF;AAAA,QACA,iBAAiB;AAAA,UACf;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,mDAAmD;AAAA,UACjD;AAAA,QACF;AAAA,QACA,gBAAgB;AAAA,UACd;AAAA,QACF;AAAA,QACA,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,qBAAqB,CAAC,0CAA0C;AAAA,QAChE,sBAAsB,CAAC,+CAA+C;AAAA,QACtE,kCAAkC;AAAA,UAChC;AAAA,QACF;AAAA,QACA,4BAA4B,CAAC,qCAAqC;AAAA,QAClE,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,aAAa,CAAC,2DAA2D;AAAA,QACzE,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,sBAAsB;AAAA,UACpB;AAAA,QACF;AAAA,QACA,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,wDAAwD;AAAA,UACtD;AAAA,QACF;AAAA,QACA,sDAAsD;AAAA,UACpD;AAAA,QACF;AAAA,QACA,yCAAyC;AAAA,UACvC;AAAA,QACF;AAAA,QACA,uCAAuC;AAAA,UACrC;AAAA,QACF;AAAA,QACA,sBAAsB,CAAC,iDAAiD;AAAA,QACxE,iBAAiB,CAAC,4CAA4C;AAAA,QAC9D,cAAc,CAAC,+CAA+C;AAAA,QAC9D,gBAAgB,CAAC,0CAA0C;AAAA,QAC3D,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,WAAW,uCAAuC,EAAE;AAAA,QAClE;AAAA,QACA,kBAAkB,CAAC,sDAAsD;AAAA,QACzE,eAAe,CAAC,yDAAyD;AAAA,QACzE,iBAAiB,CAAC,oDAAoD;AAAA,QACtE,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,2BAA2B,CAAC,6CAA6C;AAAA,QACzE,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,aAAa,CAAC,2DAA2D;AAAA,QACzE,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,iDAAiD;AAAA,QAClE,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,sBAAsB,CAAC,6CAA6C;AAAA,QACpE,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,qCAAqC;AAAA,UACnC;AAAA,QACF;AAAA,QACA,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,iCAAiC;AAAA,QAClD,kBAAkB,CAAC,mCAAmC;AAAA,QACtD,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,2CAA2C;AAAA,QAC7D,mBAAmB,CAAC,6CAA6C;AAAA,QACjE,mBAAmB,CAAC,6CAA6C;AAAA,QACjE,8BAA8B,CAAC,2CAA2C;AAAA,QAC1E,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,0DAA0D;AAAA,UACxD;AAAA,QACF;AAAA,QACA,6BAA6B,CAAC,iCAAiC;AAAA,QAC/D,8BAA8B,CAAC,2CAA2C;AAAA,QAC1E,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,yBAAyB,CAAC,wCAAwC;AAAA,QAClE,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,eAAe,CAAC,wDAAwD;AAAA,QACxE,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,iDAAiD;AAAA,UAC/C;AAAA,QACF;AAAA,QACA,kDAAkD;AAAA,UAChD;AAAA,QACF;AAAA,QACA,6CAA6C;AAAA,UAC3C;AAAA,QACF;AAAA,QACA,8CAA8C;AAAA,UAC5C;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,0CAA0C;AAAA,UACxC;AAAA,QACF;AAAA,QACA,2CAA2C;AAAA,UACzC;AAAA,QACF;AAAA,QACA,wDAAwD;AAAA,UACtD;AAAA,QACF;AAAA,QACA,sDAAsD;AAAA,UACpD;AAAA,QACF;AAAA,QACA,yCAAyC;AAAA,UACvC;AAAA,QACF;AAAA,QACA,uCAAuC;AAAA,UACrC;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,yDAAyD;AAAA,UACvD;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,4CAA4C;AAAA,QAChE,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR,uCAAuC,CAAC,kCAAkC;AAAA,QAC1E,wBAAwB,CAAC,2CAA2C;AAAA,QACpE,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,UAAU,CAAC,YAAY;AAAA,QACvB,qBAAqB,CAAC,wCAAwC;AAAA,QAC9D,WAAW,CAAC,wCAAwC;AAAA,QACpD,2CAA2C;AAAA,UACzC;AAAA,QACF;AAAA,QACA,gCAAgC,CAAC,8BAA8B;AAAA,QAC/D,uCAAuC,CAAC,oBAAoB;AAAA,QAC5D,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,aAAa;AAAA,QAChC,gCAAgC,CAAC,qCAAqC;AAAA,QACtE,yBAAyB,CAAC,qCAAqC;AAAA,QAC/D,qBAAqB,CAAC,wBAAwB;AAAA,QAC9C,2BAA2B,CAAC,uCAAuC;AAAA,QACnE,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,kCAAkC;AAAA,QACnD,2CAA2C;AAAA,UACzC;AAAA,QACF;AAAA,QACA,qCAAqC,CAAC,mBAAmB;AAAA,QACzD,wBAAwB,CAAC,+BAA+B;AAAA,QACxD,wBAAwB,CAAC,qCAAqC;AAAA,QAC9D,uBAAuB,CAAC,sCAAsC;AAAA,QAC9D,sCAAsC,CAAC,yBAAyB;AAAA,QAChE,qBAAqB,CAAC,uCAAuC;AAAA,QAC7D,yBAAyB,CAAC,oBAAoB;AAAA,QAC9C,6BAA6B,CAAC,yCAAyC;AAAA,QACvE,kBAAkB,CAAC,0CAA0C;AAAA,QAC7D,qBAAqB,CAAC,wCAAwC;AAAA,QAC9D,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,8BAA8B,CAAC,kCAAkC;AAAA,QACjE,gCAAgC,CAAC,qCAAqC;AAAA,MACxE;AAAA,MACA,MAAM;AAAA,QACJ,uBAAuB;AAAA,UACrB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,QAAQ,2CAA2C,EAAE;AAAA,QACnE;AAAA,QACA,2CAA2C;AAAA,UACzC;AAAA,QACF;AAAA,QACA,YAAY,CAAC,sCAAsC;AAAA,QACnD,oBAAoB,CAAC,wCAAwC;AAAA,QAC7D,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,qBAAqB,CAAC,wCAAwC;AAAA,QAC9D,oBAAoB,CAAC,6CAA6C;AAAA,QAClE,aAAa,CAAC,wCAAwC;AAAA,QACtD,kBAAkB,CAAC,UAAU;AAAA,QAC7B,WAAW,CAAC,sBAAsB;AAAA,QAClC,iBAAiB,CAAC,0CAA0C;AAAA,QAC5D,oBAAoB,CAAC,8BAA8B;AAAA,QACnD,qBAAqB,CAAC,wCAAwC;AAAA,QAC9D,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,qBAAqB,CAAC,oCAAoC;AAAA,QAC1D,wBAAwB,CAAC,sBAAsB;AAAA,QAC/C,oBAAoB,CAAC,wCAAwC;AAAA,QAC7D,qBAAqB,CAAC,mDAAmD;AAAA,QACzE,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,2CAA2C;AAAA,UACzC;AAAA,QACF;AAAA,QACA,6CAA6C;AAAA,UAC3C;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,wBAAwB;AAAA,QAC5C,uCAAuC,CAAC,yBAAyB;AAAA,QACjE,WAAW,CAAC,gCAAgC;AAAA,QAC5C,kBAAkB,CAAC,wCAAwC;AAAA,QAC3D,mCAAmC,CAAC,gCAAgC;AAAA,QACpE,uCAAuC,CAAC,iCAAiC;AAAA,QACzE,8CAA8C;AAAA,UAC5C;AAAA,QACF;AAAA,QACA,uBAAuB,CAAC,0BAA0B;AAAA,QAClD,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,UAC1B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,QAAQ,gDAAgD,EAAE;AAAA,QACxE;AAAA,QACA,gDAAgD;AAAA,UAC9C;AAAA,QACF;AAAA,QACA,YAAY,CAAC,uCAAuC;AAAA,QACpD,+BAA+B,CAAC,4BAA4B;AAAA,QAC5D,YAAY,CAAC,6CAA6C;AAAA,QAC1D,qBAAqB,CAAC,oDAAoD;AAAA,QAC1E,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,2BAA2B,CAAC,wBAAwB;AAAA,MACtD;AAAA,MACA,SAAS;AAAA,QACP,4BAA4B,CAAC,0CAA0C;AAAA,QACvE,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,6BAA6B,CAAC,2CAA2C;AAAA,QACzE,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,QAAQ,CAAC,uCAAuC;AAAA,QAChD,aAAa,CAAC,yCAAyC;AAAA,QACvD,KAAK,CAAC,qDAAqD;AAAA,QAC3D,UAAU,CAAC,yDAAyD;AAAA,QACpE,iBAAiB;AAAA,UACf;AAAA,QACF;AAAA,QACA,YAAY,CAAC,oDAAoD;AAAA,QACjE,cAAc;AAAA,UACZ;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,sDAAsD;AAAA,QACzE,cAAc;AAAA,UACZ;AAAA,QACF;AAAA,QACA,gBAAgB;AAAA,UACd;AAAA,QACF;AAAA,QACA,sBAAsB;AAAA,UACpB;AAAA,QACF;AAAA,QACA,QAAQ,CAAC,uDAAuD;AAAA,MAClE;AAAA,MACA,cAAc;AAAA,QACZ,gBAAgB;AAAA,UACd;AAAA,QACF;AAAA,QACA,UAAU;AAAA,UACR;AAAA,UACA,CAAC;AAAA,UACD,EAAE,mBAAmB,EAAE,UAAU,eAAe,EAAE;AAAA,QACpD;AAAA,QACA,aAAa;AAAA,UACX;AAAA,QACF;AAAA,QACA,mBAAmB;AAAA,UACjB;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,uDAAuD;AAAA,QACzE,UAAU,CAAC,2DAA2D;AAAA,QACtE,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,sCAAsC;AAAA,QACzD,mBAAmB,CAAC,gDAAgD;AAAA,QACpE,qBAAqB;AAAA,UACnB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,gBAAgB,oBAAoB,EAAE;AAAA,QACpD;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,oBAAoB,CAAC,kDAAkD;AAAA,QACvE,aAAa;AAAA,UACX;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,aAAa,CAAC,iDAAiD;AAAA,MACjE;AAAA,MACA,gBAAgB;AAAA,QACd,sBAAsB,CAAC,uBAAuB;AAAA,QAC9C,gBAAgB,CAAC,6BAA6B;AAAA,MAChD;AAAA,MACA,YAAY;AAAA,QACV,4CAA4C;AAAA,UAC1C;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,uCAAuC;AAAA,UACrC;AAAA,QACF;AAAA,QACA,4BAA4B,CAAC,uBAAuB;AAAA,QACpD,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,0CAA0C;AAAA,UACxC;AAAA,QACF;AAAA,QACA,kCAAkC;AAAA,UAChC;AAAA,QACF;AAAA,QACA,oCAAoC;AAAA,UAClC;AAAA,QACF;AAAA,QACA,4BAA4B,CAAC,0CAA0C;AAAA,QACvE,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,qDAAqD;AAAA,QACvE,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,kCAAkC;AAAA,UAChC;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,yBAAyB,CAAC,uCAAuC;AAAA,QACjE,iBAAiB,CAAC,+CAA+C;AAAA,QACjE,cAAc,CAAC,kDAAkD;AAAA,QACjE,kCAAkC;AAAA,UAChC;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,eAAe;AAAA,UACb;AAAA,QACF;AAAA,QACA,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,mDAAmD;AAAA,UACjD;AAAA,QACF;AAAA,QACA,0BAA0B,CAAC,sBAAsB;AAAA,QACjD,oBAAoB;AAAA,UAClB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,mBAAmB,EAAE,QAAQ,MAAM,EAAE;AAAA,QACzC;AAAA,QACA,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,oCAAoC;AAAA,QACrD,iBAAiB,CAAC,8CAA8C;AAAA,QAChE,+CAA+C;AAAA,UAC7C;AAAA,QACF;AAAA,QACA,iCAAiC,CAAC,8BAA8B;AAAA,QAChE,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,uCAAuC;AAAA,UACrC;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,+CAA+C;AAAA,UAC7C;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,kCAAkC;AAAA,UAChC;AAAA,QACF;AAAA,QACA,8CAA8C;AAAA,UAC5C;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,2BAA2B,CAAC,8CAA8C;AAAA,QAC1E,0BAA0B,CAAC,6CAA6C;AAAA,QACxE,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,4BAA4B,CAAC,yCAAyC;AAAA,MACxE;AAAA,MACA,SAAS;AAAA,QACP,oCAAoC;AAAA,UAClC;AAAA,QACF;AAAA,QACA,oCAAoC;AAAA,UAClC;AAAA,QACF;AAAA,QACA,qCAAqC;AAAA,UACnC;AAAA,QACF;AAAA,QACA,qCAAqC;AAAA,UACnC;AAAA,QACF;AAAA,QACA,+BAA+B,CAAC,iCAAiC;AAAA,QACjE,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,uCAAuC;AAAA,MAC5D;AAAA,MACA,YAAY;AAAA,QACV,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,qDAAqD;AAAA,QACvE,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,UAAU,CAAC,4DAA4D;AAAA,QACvE,iBAAiB,CAAC,+CAA+C;AAAA,QACjE,cAAc,CAAC,kDAAkD;AAAA,QACjE,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,eAAe;AAAA,UACb;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,mCAAmC;AAAA,QACtD,mBAAmB,CAAC,6CAA6C;AAAA,QACjE,gBAAgB,CAAC,oCAAoC;AAAA,QACrD,iBAAiB,CAAC,8CAA8C;AAAA,QAChE,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,aAAa;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAAA,MACA,iBAAiB;AAAA,QACf,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,WAAW;AAAA,UACT;AAAA,QACF;AAAA,QACA,YAAY,CAAC,iDAAiD;AAAA,MAChE;AAAA,MACA,QAAQ,EAAE,KAAK,CAAC,aAAa,EAAE;AAAA,MAC/B,OAAO;AAAA,QACL,gBAAgB,CAAC,2BAA2B;AAAA,QAC5C,QAAQ,CAAC,aAAa;AAAA,QACtB,eAAe,CAAC,gCAAgC;AAAA,QAChD,QAAQ,CAAC,yBAAyB;AAAA,QAClC,eAAe,CAAC,+CAA+C;AAAA,QAC/D,MAAM,CAAC,6BAA6B;AAAA,QACpC,KAAK,CAAC,sBAAsB;AAAA,QAC5B,YAAY,CAAC,4CAA4C;AAAA,QACzD,aAAa,CAAC,4BAA4B;AAAA,QAC1C,MAAM,CAAC,YAAY;AAAA,QACnB,cAAc,CAAC,+BAA+B;AAAA,QAC9C,aAAa,CAAC,8BAA8B;AAAA,QAC5C,aAAa,CAAC,6BAA6B;AAAA,QAC3C,WAAW,CAAC,4BAA4B;AAAA,QACxC,YAAY,CAAC,mBAAmB;AAAA,QAChC,aAAa,CAAC,oBAAoB;AAAA,QAClC,MAAM,CAAC,2BAA2B;AAAA,QAClC,QAAQ,CAAC,8BAA8B;AAAA,QACvC,QAAQ,CAAC,wBAAwB;AAAA,QACjC,eAAe,CAAC,8CAA8C;AAAA,MAChE;AAAA,MACA,KAAK;AAAA,QACH,YAAY,CAAC,sCAAsC;AAAA,QACnD,cAAc,CAAC,wCAAwC;AAAA,QACvD,WAAW,CAAC,qCAAqC;AAAA,QACjD,WAAW,CAAC,qCAAqC;AAAA,QACjD,YAAY,CAAC,sCAAsC;AAAA,QACnD,WAAW,CAAC,6CAA6C;AAAA,QACzD,SAAS,CAAC,gDAAgD;AAAA,QAC1D,WAAW,CAAC,oDAAoD;AAAA,QAChE,QAAQ,CAAC,yCAAyC;AAAA,QAClD,QAAQ,CAAC,8CAA8C;AAAA,QACvD,SAAS,CAAC,gDAAgD;AAAA,QAC1D,kBAAkB,CAAC,mDAAmD;AAAA,QACtE,WAAW,CAAC,4CAA4C;AAAA,MAC1D;AAAA,MACA,WAAW;AAAA,QACT,iBAAiB,CAAC,0BAA0B;AAAA,QAC5C,aAAa,CAAC,iCAAiC;AAAA,MACjD;AAAA,MACA,cAAc;AAAA,QACZ,qCAAqC,CAAC,8BAA8B;AAAA,QACpE,uBAAuB,CAAC,oCAAoC;AAAA,QAC5D,wBAAwB,CAAC,8CAA8C;AAAA,QACvE,mCAAmC;AAAA,UACjC;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,gBAAgB,qCAAqC,EAAE;AAAA,QACrE;AAAA,QACA,wCAAwC,CAAC,iCAAiC;AAAA,QAC1E,0BAA0B,CAAC,uCAAuC;AAAA,QAClE,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,sCAAsC;AAAA,UACpC;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,gBAAgB,wCAAwC,EAAE;AAAA,QACxE;AAAA,QACA,qCAAqC,CAAC,8BAA8B;AAAA,QACpE,uBAAuB,CAAC,oCAAoC;AAAA,QAC5D,wBAAwB,CAAC,8CAA8C;AAAA,QACvE,mCAAmC;AAAA,UACjC;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,gBAAgB,qCAAqC,EAAE;AAAA,QACrE;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,cAAc;AAAA,UACZ;AAAA,QACF;AAAA,QACA,WAAW,CAAC,yDAAyD;AAAA,QACrE,wBAAwB,CAAC,gDAAgD;AAAA,QACzE,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,QAAQ,CAAC,mCAAmC;AAAA,QAC5C,eAAe;AAAA,UACb;AAAA,QACF;AAAA,QACA,aAAa,CAAC,mCAAmC;AAAA,QACjD,iBAAiB,CAAC,uCAAuC;AAAA,QACzD,eAAe;AAAA,UACb;AAAA,QACF;AAAA,QACA,aAAa,CAAC,4CAA4C;AAAA,QAC1D,iBAAiB;AAAA,UACf;AAAA,QACF;AAAA,QACA,KAAK,CAAC,iDAAiD;AAAA,QACvD,YAAY,CAAC,wDAAwD;AAAA,QACrE,UAAU,CAAC,oDAAoD;AAAA,QAC/D,UAAU,CAAC,yCAAyC;AAAA,QACpD,cAAc,CAAC,yDAAyD;AAAA,QACxE,MAAM,CAAC,aAAa;AAAA,QACpB,eAAe,CAAC,qCAAqC;AAAA,QACrD,cAAc,CAAC,0DAA0D;AAAA,QACzE,qBAAqB,CAAC,2CAA2C;AAAA,QACjE,YAAY,CAAC,wDAAwD;AAAA,QACrE,mBAAmB,CAAC,yCAAyC;AAAA,QAC7D,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,0BAA0B,CAAC,kBAAkB;AAAA,QAC7C,YAAY,CAAC,wBAAwB;AAAA,QACrC,aAAa,CAAC,kCAAkC;AAAA,QAChD,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,kCAAkC;AAAA,QACtD,mBAAmB;AAAA,UACjB;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,sCAAsC;AAAA,QACvD,MAAM,CAAC,sDAAsD;AAAA,QAC7D,iBAAiB;AAAA,UACf;AAAA,QACF;AAAA,QACA,iBAAiB;AAAA,UACf;AAAA,QACF;AAAA,QACA,aAAa;AAAA,UACX;AAAA,QACF;AAAA,QACA,WAAW,CAAC,wDAAwD;AAAA,QACpE,QAAQ,CAAC,yDAAyD;AAAA,QAClE,QAAQ,CAAC,mDAAmD;AAAA,QAC5D,eAAe,CAAC,0DAA0D;AAAA,QAC1E,aAAa,CAAC,2CAA2C;AAAA,QACzD,iBAAiB;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR,KAAK,CAAC,yBAAyB;AAAA,QAC/B,oBAAoB,CAAC,eAAe;AAAA,QACpC,YAAY,CAAC,mCAAmC;AAAA,MAClD;AAAA,MACA,UAAU;AAAA,QACR,QAAQ,CAAC,gBAAgB;AAAA,QACzB,WAAW;AAAA,UACT;AAAA,UACA,EAAE,SAAS,EAAE,gBAAgB,4BAA4B,EAAE;AAAA,QAC7D;AAAA,MACF;AAAA,MACA,MAAM;AAAA,QACJ,KAAK,CAAC,WAAW;AAAA,QACjB,gBAAgB,CAAC,eAAe;AAAA,QAChC,YAAY,CAAC,cAAc;AAAA,QAC3B,QAAQ,CAAC,UAAU;AAAA,QACnB,MAAM,CAAC,OAAO;AAAA,MAChB;AAAA,MACA,YAAY;AAAA,QACV,cAAc;AAAA,UACZ;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,iBAAiB;AAAA,UACf;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,eAAe;AAAA,UACb;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,+BAA+B,CAAC,qCAAqC;AAAA,QACrE,iBAAiB,CAAC,2CAA2C;AAAA,QAC7D,0BAA0B,CAAC,sBAAsB;AAAA,QACjD,YAAY,CAAC,4BAA4B;AAAA,QACzC,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,wDAAwD;AAAA,QAC1E,kBAAkB;AAAA,UAChB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,cAAc,+BAA+B,EAAE;AAAA,QAC7D;AAAA,QACA,iBAAiB;AAAA,UACf;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,2BAA2B,CAAC,uBAAuB;AAAA,QACnD,aAAa,CAAC,6BAA6B;AAAA,QAC3C,aAAa;AAAA,UACX;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,YAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,cAAc;AAAA,UACZ;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,YAAY;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAAA,MACA,MAAM;AAAA,QACJ,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,WAAW,CAAC,mCAAmC;AAAA,QAC/C,kBAAkB,CAAC,gDAAgD;AAAA,QACnE,kBAAkB,CAAC,mCAAmC;AAAA,QACtD,wBAAwB,CAAC,oCAAoC;AAAA,QAC7D,8BAA8B,CAAC,2CAA2C;AAAA,QAC1E,oCAAoC;AAAA,UAClC;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,8BAA8B;AAAA,QACjD,gCAAgC,CAAC,qCAAqC;AAAA,QACtE,8CAA8C;AAAA,UAC5C;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,eAAe,CAAC,wBAAwB;AAAA,QACxC,QAAQ,CAAC,oBAAoB;AAAA,QAC7B,eAAe,CAAC,oCAAoC;AAAA,QACpD,6CAA6C;AAAA,UAC3C;AAAA,QACF;AAAA,QACA,KAAK,CAAC,iBAAiB;AAAA,QACvB,wBAAwB,CAAC,mCAAmC;AAAA,QAC5D,mBAAmB;AAAA,UACjB;AAAA,QACF;AAAA,QACA,mCAAmC,CAAC,kCAAkC;AAAA,QACtE,sBAAsB,CAAC,wCAAwC;AAAA,QAC/D,YAAY,CAAC,iCAAiC;AAAA,QAC9C,wBAAwB,CAAC,wCAAwC;AAAA,QACjE,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,MAAM,CAAC,oBAAoB;AAAA,QAC3B,sBAAsB,CAAC,+BAA+B;AAAA,QACtD,kBAAkB,CAAC,wBAAwB;AAAA,QAC3C,oCAAoC,CAAC,mCAAmC;AAAA,QACxE,uBAAuB,CAAC,oCAAoC;AAAA,QAC5D,0BAA0B,CAAC,gBAAgB;AAAA,QAC3C,aAAa,CAAC,4BAA4B;AAAA,QAC1C,qBAAqB,CAAC,mDAAmD;AAAA,QACzE,aAAa,CAAC,yBAAyB;AAAA,QACvC,qCAAqC,CAAC,4BAA4B;AAAA,QAClE,0BAA0B,CAAC,uCAAuC;AAAA,QAClE,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,sBAAsB,CAAC,gDAAgD;AAAA,QACvE,eAAe,CAAC,wCAAwC;AAAA,QACxD,wBAAwB,CAAC,6BAA6B;AAAA,QACtD,mBAAmB,CAAC,gCAAgC;AAAA,QACpD,0BAA0B,CAAC,mCAAmC;AAAA,QAC9D,uBAAuB,CAAC,4CAA4C;AAAA,QACpE,cAAc,CAAC,uBAAuB;AAAA,QACtC,aAAa,CAAC,wCAAwC;AAAA,QACtD,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,sBAAsB;AAAA,UACpB;AAAA,QACF;AAAA,QACA,cAAc,CAAC,uCAAuC;AAAA,QACtD,yBAAyB,CAAC,2CAA2C;AAAA,QACrE,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,4CAA4C;AAAA,UAC1C;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,sBAAsB,CAAC,wCAAwC;AAAA,QAC/D,yCAAyC;AAAA,UACvC;AAAA,QACF;AAAA,QACA,aAAa,CAAC,sCAAsC;AAAA,QACpD,QAAQ,CAAC,mBAAmB;AAAA,QAC5B,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,kDAAkD;AAAA,QACpE,mBAAmB,CAAC,yCAAyC;AAAA,QAC7D,eAAe,CAAC,mCAAmC;AAAA,QACnD,2BAA2B,CAAC,0CAA0C;AAAA,MACxE;AAAA,MACA,UAAU;AAAA,QACR,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,sBAAsB;AAAA,UACpB;AAAA,QACF;AAAA,QACA,0CAA0C;AAAA,UACxC;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,8CAA8C;AAAA,UAC5C;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,YAAY,2CAA2C,EAAE;AAAA,QACvE;AAAA,QACA,6DAA6D;AAAA,UAC3D;AAAA,UACA,CAAC;AAAA,UACD;AAAA,YACE,SAAS;AAAA,cACP;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,yDAAyD;AAAA,UACvD;AAAA,QACF;AAAA,QACA,2CAA2C;AAAA,UACzC;AAAA,QACF;AAAA,QACA,4CAA4C;AAAA,UAC1C;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,mBAAmB;AAAA,UACjB;AAAA,QACF;AAAA,QACA,uCAAuC;AAAA,UACrC;AAAA,QACF;AAAA,QACA,kCAAkC;AAAA,UAChC;AAAA,QACF;AAAA,QACA,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,4DAA4D;AAAA,UAC1D;AAAA,QACF;AAAA,QACA,uDAAuD;AAAA,UACrD;AAAA,QACF;AAAA,QACA,+CAA+C;AAAA,UAC7C;AAAA,QACF;AAAA,QACA,kCAAkC,CAAC,oBAAoB;AAAA,QACvD,6BAA6B,CAAC,0BAA0B;AAAA,QACxD,qBAAqB,CAAC,gCAAgC;AAAA,QACtD,oCAAoC;AAAA,UAClC;AAAA,QACF;AAAA,QACA,sBAAsB;AAAA,UACpB;AAAA,QACF;AAAA,QACA,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,2CAA2C;AAAA,UACzC;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR,iBAAiB,CAAC,qDAAqD;AAAA,QACvE,YAAY,CAAC,0CAA0C;AAAA,QACvD,cAAc,CAAC,qCAAqC;AAAA,QACpD,4BAA4B,CAAC,qBAAqB;AAAA,QAClD,cAAc,CAAC,2BAA2B;AAAA,QAC1C,eAAe,CAAC,qCAAqC;AAAA,QACrD,QAAQ,CAAC,+BAA+B;AAAA,QACxC,YAAY,CAAC,0CAA0C;AAAA,QACvD,cAAc,CAAC,sCAAsC;AAAA,QACrD,KAAK,CAAC,4BAA4B;AAAA,QAClC,SAAS,CAAC,uCAAuC;AAAA,QACjD,WAAW,CAAC,mCAAmC;AAAA,QAC/C,sBAAsB;AAAA,UACpB;AAAA,QACF;AAAA,QACA,WAAW,CAAC,yCAAyC;AAAA,QACrD,mBAAmB,CAAC,0CAA0C;AAAA,QAC9D,aAAa,CAAC,oCAAoC;AAAA,QAClD,YAAY,CAAC,0BAA0B;AAAA,QACvC,aAAa,CAAC,oCAAoC;AAAA,QAClD,aAAa,CAAC,gCAAgC;AAAA,QAC9C,UAAU,CAAC,8CAA8C;AAAA,QACzD,YAAY,CAAC,0CAA0C;AAAA,QACvD,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,QAAQ,CAAC,8BAA8B;AAAA,QACvC,YAAY,CAAC,yCAAyC;AAAA,QACtD,cAAc,CAAC,qCAAqC;AAAA,MACtD;AAAA,MACA,OAAO;AAAA,QACL,eAAe,CAAC,qDAAqD;AAAA,QACrE,QAAQ,CAAC,kCAAkC;AAAA,QAC3C,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,cAAc,CAAC,wDAAwD;AAAA,QACvE,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,eAAe;AAAA,UACb;AAAA,QACF;AAAA,QACA,KAAK,CAAC,+CAA+C;AAAA,QACrD,WAAW;AAAA,UACT;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,uDAAuD;AAAA,QAC1E,MAAM,CAAC,iCAAiC;AAAA,QACxC,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,aAAa,CAAC,uDAAuD;AAAA,QACrE,WAAW,CAAC,qDAAqD;AAAA,QACjE,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,2BAA2B,CAAC,0CAA0C;AAAA,QACtE,aAAa,CAAC,uDAAuD;AAAA,QACrE,OAAO,CAAC,qDAAqD;AAAA,QAC7D,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,cAAc;AAAA,UACZ;AAAA,QACF;AAAA,QACA,QAAQ,CAAC,iDAAiD;AAAA,QAC1D,cAAc;AAAA,UACZ;AAAA,QACF;AAAA,QACA,cAAc;AAAA,UACZ;AAAA,QACF;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAAA,MACA,WAAW,EAAE,KAAK,CAAC,iBAAiB,EAAE;AAAA,MACtC,WAAW;AAAA,QACT,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,gBAAgB;AAAA,UACd;AAAA,QACF;AAAA,QACA,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,qCAAqC;AAAA,UACnC;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,gBAAgB;AAAA,UACd;AAAA,QACF;AAAA,QACA,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,sBAAsB;AAAA,UACpB;AAAA,QACF;AAAA,QACA,cAAc,CAAC,2DAA2D;AAAA,QAC1E,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,gBAAgB;AAAA,UACd;AAAA,QACF;AAAA,QACA,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL,kBAAkB;AAAA,UAChB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,sCAAsC,EAAE;AAAA,QAC/D;AAAA,QACA,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,0BAA0B;AAAA,UACxB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,OAAO;AAAA,QACtB;AAAA,QACA,iBAAiB,CAAC,oDAAoD;AAAA,QACtE,wBAAwB;AAAA,UACtB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,WAAW;AAAA,QAC1B;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,QAAQ;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,QAAQ;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,oDAAoD;AAAA,QACxE,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,6CAA6C;AAAA,QAChE,gBAAgB,CAAC,mDAAmD;AAAA,QACpE,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,sCAAsC;AAAA,QACvD,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,oBAAoB,CAAC,2CAA2C;AAAA,QAChE,iBAAiB,CAAC,iCAAiC;AAAA,QACnD,kBAAkB,CAAC,wCAAwC;AAAA,QAC3D,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,qBAAqB,CAAC,uCAAuC;AAAA,QAC7D,4BAA4B,CAAC,kBAAkB;AAAA,QAC/C,YAAY,CAAC,kCAAkC;AAAA,QAC/C,aAAa,CAAC,wBAAwB;AAAA,QACtC,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,4BAA4B,CAAC,2CAA2C;AAAA,QACxE,kBAAkB,CAAC,2BAA2B;AAAA,QAC9C,uBAAuB,CAAC,6CAA6C;AAAA,QACrE,iBAAiB,CAAC,kCAAkC;AAAA,QACpD,eAAe,CAAC,qCAAqC;AAAA,QACrD,mBAAmB,CAAC,qCAAqC;AAAA,QACzD,qBAAqB,CAAC,4CAA4C;AAAA,QAClE,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,eAAe,CAAC,kCAAkC;AAAA,QAClD,mBAAmB;AAAA,UACjB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,uCAAuC,EAAE;AAAA,QAChE;AAAA,QACA,uCAAuC;AAAA,UACrC;AAAA,QACF;AAAA,QACA,QAAQ,CAAC,8BAA8B;AAAA,QACvC,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,sDAAsD;AAAA,QACvE,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,qBAAqB,CAAC,oDAAoD;AAAA,QAC1E,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,4CAA4C;AAAA,QAC9D,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,YAAY,CAAC,8CAA8C;AAAA,QAC3D,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,0CAA0C;AAAA,QAC7D,iBAAiB,CAAC,oCAAoC;AAAA,QACtD,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,eAAe,CAAC,oDAAoD;AAAA,QACpE,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,oDAAoD;AAAA,QACxE,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,eAAe,CAAC,8CAA8C;AAAA,QAC9D,+BAA+B;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,iBAAiB;AAAA,UACf;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,wBAAwB,EAAE;AAAA,QACjD;AAAA,QACA,wBAAwB,CAAC,yCAAyC;AAAA,QAClE,wBAAwB,CAAC,yCAAyC;AAAA,QAClE,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,qCAAqC;AAAA,UACnC;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,sBAAsB;AAAA,UACpB;AAAA,QACF;AAAA,QACA,KAAK,CAAC,2BAA2B;AAAA,QACjC,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,oBAAoB,CAAC,wCAAwC;AAAA,QAC7D,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,cAAc,CAAC,kCAAkC;AAAA,QACjD,oCAAoC;AAAA,UAClC;AAAA,QACF;AAAA,QACA,aAAa,CAAC,mDAAmD;AAAA,QACjE,WAAW,CAAC,6CAA6C;AAAA,QACzD,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,mDAAmD;AAAA,QACpE,WAAW,CAAC,0CAA0C;AAAA,QACtD,uBAAuB,CAAC,gDAAgD;AAAA,QACxE,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,yBAAyB,CAAC,gDAAgD;AAAA,QAC1E,WAAW,CAAC,yCAAyC;AAAA,QACrD,wBAAwB,CAAC,iDAAiD;AAAA,QAC1E,kBAAkB,CAAC,iDAAiD;AAAA,QACpE,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,4BAA4B,CAAC,6CAA6C;AAAA,QAC1E,YAAY,CAAC,2CAA2C;AAAA,QACxD,sBAAsB,CAAC,8CAA8C;AAAA,QACrE,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,2BAA2B,CAAC,6CAA6C;AAAA,QACzE,cAAc,CAAC,yCAAyC;AAAA,QACxD,eAAe,CAAC,uDAAuD;AAAA,QACvE,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,qBAAqB;AAAA,UACnB;AAAA,QACF;AAAA,QACA,gBAAgB;AAAA,UACd;AAAA,QACF;AAAA,QACA,qBAAqB,CAAC,+CAA+C;AAAA,QACrE,kBAAkB,CAAC,2CAA2C;AAAA,QAC9D,iBAAiB,CAAC,sDAAsD;AAAA,QACxE,kBAAkB,CAAC,sCAAsC;AAAA,QACzD,eAAe,CAAC,uCAAuC;AAAA,QACvD,gBAAgB,CAAC,0BAA0B;AAAA,QAC3C,UAAU,CAAC,iCAAiC;AAAA,QAC5C,eAAe,CAAC,mDAAmD;AAAA,QACnE,qBAAqB,CAAC,wCAAwC;AAAA,QAC9D,uBAAuB,CAAC,+CAA+C;AAAA,QACvE,gCAAgC;AAAA,UAC9B;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,4CAA4C;AAAA,QAChE,WAAW,CAAC,kCAAkC;AAAA,QAC9C,sBAAsB,CAAC,wCAAwC;AAAA,QAC/D,YAAY,CAAC,iDAAiD;AAAA,QAC9D,iBAAiB,CAAC,sDAAsD;AAAA,QACxE,iBAAiB,CAAC,+CAA+C;AAAA,QACjE,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,gDAAgD;AAAA,QACpE,gBAAgB,CAAC,iDAAiD;AAAA,QAClE,iBAAiB,CAAC,oCAAoC;AAAA,QACtD,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,qCAAqC;AAAA,UACnC;AAAA,QACF;AAAA,QACA,aAAa,CAAC,iDAAiD;AAAA,QAC/D,iBAAiB,CAAC,qDAAqD;AAAA,QACvE,qCAAqC;AAAA,UACnC;AAAA,QACF;AAAA,QACA,UAAU,CAAC,yCAAyC;AAAA,QACpD,YAAY,CAAC,2CAA2C;AAAA,QACxD,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,oCAAoC;AAAA,QACrD,eAAe,CAAC,qCAAqC;AAAA,QACrD,cAAc,CAAC,oCAAoC;AAAA,QACnD,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,yCAAyC;AAAA,QAC7D,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,2BAA2B,CAAC,oCAAoC;AAAA,QAChE,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,aAAa,CAAC,mCAAmC;AAAA,QACjD,kBAAkB,CAAC,wCAAwC;AAAA,QAC3D,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,gBAAgB,CAAC,gCAAgC;AAAA,QACjD,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,uCAAuC;AAAA,QACzD,0BAA0B,CAAC,iBAAiB;AAAA,QAC5C,YAAY,CAAC,uBAAuB;AAAA,QACpC,aAAa,CAAC,6BAA6B;AAAA,QAC3C,WAAW,CAAC,iCAAiC;AAAA,QAC7C,iBAAiB,CAAC,uCAAuC;AAAA,QACzD,qCAAqC,CAAC,kCAAkC;AAAA,QACxE,eAAe,CAAC,qCAAqC;AAAA,QACrD,iBAAiB,CAAC,wCAAwC;AAAA,QAC1D,YAAY,CAAC,mBAAmB;AAAA,QAChC,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,mBAAmB;AAAA,UACjB;AAAA,QACF;AAAA,QACA,cAAc,CAAC,oCAAoC;AAAA,QACnD,mBAAmB,CAAC,2CAA2C;AAAA,QAC/D,UAAU,CAAC,gCAAgC;AAAA,QAC3C,WAAW,CAAC,iCAAiC;AAAA,QAC7C,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,cAAc,CAAC,iCAAiC;AAAA,QAChD,OAAO,CAAC,mCAAmC;AAAA,QAC3C,eAAe,CAAC,2CAA2C;AAAA,QAC3D,aAAa,CAAC,kDAAkD;AAAA,QAChE,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,OAAO;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,WAAW;AAAA,QAC1B;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,QAAQ;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,QAAQ;AAAA,QACvB;AAAA,QACA,cAAc,CAAC,qDAAqD;AAAA,QACpE,kBAAkB,CAAC,kCAAkC;AAAA,QACrD,mBAAmB,CAAC,yCAAyC;AAAA,QAC7D,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,0BAA0B;AAAA,UACxB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,OAAO;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,WAAW;AAAA,QAC1B;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,QAAQ;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,WAAW,QAAQ;AAAA,QACvB;AAAA,QACA,iBAAiB,CAAC,kDAAkD;AAAA,QACpE,UAAU,CAAC,qCAAqC;AAAA,QAChD,QAAQ,CAAC,6BAA6B;AAAA,QACtC,wBAAwB;AAAA,UACtB;AAAA,QACF;AAAA,QACA,qBAAqB,CAAC,mDAAmD;AAAA,QACzE,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,iCAAiC,CAAC,iCAAiC;AAAA,QACnE,kBAAkB;AAAA,UAChB;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,uCAAuC;AAAA,QAC1D,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,eAAe,CAAC,mDAAmD;AAAA,QACnE,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,iDAAiD;AAAA,QACrE,4BAA4B;AAAA,UAC1B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,6BAA6B,EAAE;AAAA,QACtD;AAAA,QACA,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,eAAe,CAAC,6CAA6C;AAAA,QAC7D,4BAA4B;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,UACA,EAAE,SAAS,6BAA6B;AAAA,QAC1C;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,MAAM,CAAC,kBAAkB;AAAA,QACzB,SAAS,CAAC,qBAAqB;AAAA,QAC/B,uBAAuB,CAAC,oBAAoB;AAAA,QAC5C,QAAQ,CAAC,oBAAoB;AAAA,QAC7B,OAAO,CAAC,0BAA0B;AAAA,QAClC,QAAQ,CAAC,oBAAoB;AAAA,QAC7B,OAAO,CAAC,mBAAmB;AAAA,MAC7B;AAAA,MACA,gBAAgB;AAAA,QACd,UAAU;AAAA,UACR;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,QACF;AAAA,QACA,kBAAkB,CAAC,wCAAwC;AAAA,QAC3D,mBAAmB,CAAC,kDAAkD;AAAA,QACtE,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,aAAa;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAAA,MACA,oBAAoB;AAAA,QAClB,kCAAkC;AAAA,UAChC;AAAA,QACF;AAAA,QACA,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,QACA,oCAAoC;AAAA,UAClC;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,2BAA2B;AAAA,QAC/C,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,sBAAsB,CAAC,iBAAiB;AAAA,QACxC,6BAA6B,CAAC,qCAAqC;AAAA,QACnE,0BAA0B,CAAC,+CAA+C;AAAA,QAC1E,0BAA0B;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL,mCAAmC;AAAA,UACjC;AAAA,QACF;AAAA,QACA,oCAAoC;AAAA,UAClC;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,iCAAiC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,QAAQ,CAAC,wBAAwB;AAAA,QACjC,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,uBAAuB,CAAC,gDAAgD;AAAA,QACxE,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,aAAa,CAAC,sCAAsC;AAAA,QACpD,WAAW,CAAC,mCAAmC;AAAA,QAC/C,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,2BAA2B;AAAA,UACzB;AAAA,QACF;AAAA,QACA,MAAM,CAAC,uBAAuB;AAAA,QAC9B,gBAAgB,CAAC,yCAAyC;AAAA,QAC1D,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,sBAAsB,CAAC,+CAA+C;AAAA,QACtE,0BAA0B,CAAC,iBAAiB;AAAA,QAC5C,kBAAkB,CAAC,2CAA2C;AAAA,QAC9D,6BAA6B;AAAA,UAC3B;AAAA,QACF;AAAA,QACA,mBAAmB,CAAC,4CAA4C;AAAA,QAChE,gBAAgB,CAAC,yCAAyC;AAAA,QAC1D,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB;AAAA,QACF;AAAA,QACA,iBAAiB;AAAA,UACf;AAAA,QACF;AAAA,QACA,8BAA8B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,uBAAuB;AAAA,UACrB;AAAA,QACF;AAAA,QACA,aAAa,CAAC,qCAAqC;AAAA,MACrD;AAAA,MACA,OAAO;AAAA,QACL,0BAA0B;AAAA,UACxB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,8BAA8B,EAAE;AAAA,QACvD;AAAA,QACA,8BAA8B,CAAC,mBAAmB;AAAA,QAClD,sCAAsC,CAAC,4BAA4B;AAAA,QACnE,OAAO,CAAC,6BAA6B;AAAA,QACrC,cAAc,CAAC,6BAA6B;AAAA,QAC5C,uBAAuB,CAAC,+CAA+C;AAAA,QACvE,sCAAsC,CAAC,gCAAgC;AAAA,QACvE,8BAA8B;AAAA,UAC5B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,kCAAkC,EAAE;AAAA,QAC3D;AAAA,QACA,kCAAkC,CAAC,qBAAqB;AAAA,QACxD,oCAAoC;AAAA,UAClC;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,wCAAwC,EAAE;AAAA,QACjE;AAAA,QACA,wCAAwC,CAAC,iBAAiB;AAAA,QAC1D,yCAAyC,CAAC,6BAA6B;AAAA,QACvE,6BAA6B;AAAA,UAC3B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,iCAAiC,EAAE;AAAA,QAC1D;AAAA,QACA,iCAAiC,CAAC,qBAAqB;AAAA,QACvD,8BAA8B;AAAA,UAC5B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,kCAAkC,EAAE;AAAA,QAC3D;AAAA,QACA,kCAAkC,CAAC,oCAAoC;AAAA,QACvE,oCAAoC;AAAA,UAClC;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,wCAAwC,EAAE;AAAA,QACjE;AAAA,QACA,wCAAwC,CAAC,4BAA4B;AAAA,QACrE,yCAAyC,CAAC,8BAA8B;AAAA,QACxE,yCAAyC;AAAA,UACvC;AAAA,QACF;AAAA,QACA,QAAQ,CAAC,gCAAgC;AAAA,QACzC,kBAAkB,CAAC,WAAW;AAAA,QAC9B,eAAe,CAAC,uBAAuB;AAAA,QACvC,mBAAmB,CAAC,iCAAiC;AAAA,QACrD,2BAA2B;AAAA,UACzB;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,+BAA+B,EAAE;AAAA,QACxD;AAAA,QACA,+BAA+B,CAAC,iCAAiC;AAAA,QACjE,iCAAiC;AAAA,UAC/B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,qCAAqC,EAAE;AAAA,QAC9D;AAAA,QACA,qCAAqC,CAAC,yBAAyB;AAAA,QAC/D,sCAAsC;AAAA,UACpC;AAAA,QACF;AAAA,QACA,MAAM,CAAC,YAAY;AAAA,QACnB,4BAA4B;AAAA,UAC1B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,gCAAgC,EAAE;AAAA,QACzD;AAAA,QACA,gCAAgC,CAAC,kBAAkB;AAAA,QACnD,4BAA4B;AAAA,UAC1B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,gCAAgC,EAAE;AAAA,QACzD;AAAA,QACA,gCAAgC,CAAC,kBAAkB;AAAA,QACnD,6BAA6B;AAAA,UAC3B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,iCAAiC,EAAE;AAAA,QAC1D;AAAA,QACA,iCAAiC,CAAC,qBAAqB;AAAA,QACvD,mCAAmC,CAAC,qBAAqB;AAAA,QACzD,sBAAsB,CAAC,iCAAiC;AAAA,QACxD,sBAAsB,CAAC,iCAAiC;AAAA,QACxD,6BAA6B;AAAA,UAC3B;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,iCAAiC,EAAE;AAAA,QAC1D;AAAA,QACA,iCAAiC,CAAC,oBAAoB;AAAA,QACtD,oBAAoB,CAAC,gCAAgC;AAAA,QACrD,kCAAkC;AAAA,UAChC;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,sCAAsC,EAAE;AAAA,QAC/D;AAAA,QACA,sCAAsC,CAAC,yBAAyB;AAAA,QAChE,uBAAuB,CAAC,4BAA4B;AAAA,QACpD,mCAAmC;AAAA,UACjC;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,uCAAuC,EAAE;AAAA,QAChE;AAAA,QACA,uCAAuC,CAAC,gBAAgB;AAAA,QACxD,wCAAwC,CAAC,2BAA2B;AAAA,QACpE,2BAA2B,CAAC,uCAAuC;AAAA,QACnE,wCAAwC,CAAC,4BAA4B;AAAA,QACrE,2BAA2B,CAAC,wCAAwC;AAAA,QACpE,2CAA2C;AAAA,UACzC;AAAA,UACA,CAAC;AAAA,UACD,EAAE,SAAS,CAAC,SAAS,+CAA+C,EAAE;AAAA,QACxE;AAAA,QACA,+CAA+C;AAAA,UAC7C;AAAA,QACF;AAAA,QACA,SAAS,CAAC,gCAAgC;AAAA,QAC1C,UAAU,CAAC,mCAAmC;AAAA,QAC9C,qBAAqB,CAAC,aAAa;AAAA,MACrC;AAAA,IACF;AACA,IAAI,oBAAoB;AAAA;AAAA;;;AC/zDxB,SAAS,mBAAmB,SAAS;AACnC,QAAM,aAAa,CAAC;AACpB,aAAWnC,UAAS,mBAAmB,KAAK,GAAG;AAC7C,eAAWA,MAAK,IAAI,IAAI,MAAM,EAAE,SAAS,OAAAA,QAAO,OAAO,CAAC,EAAE,GAAG,OAAO;AAAA,EACtE;AACA,SAAO;AACT;AACA,SAAS,SAAS,SAASA,QAAO,YAAY,UAAU,aAAa;AACnE,QAAM,sBAAsB,QAAQ,QAAQ,SAAS,QAAQ;AAC7D,WAAS,mBAAmB,MAAM;AAChC,QAAI,UAAU,oBAAoB,SAAS,MAAM,GAAG,IAAI;AACxD,QAAI,YAAY,WAAW;AACzB,gBAAU,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,QACnC,MAAM,QAAQ,YAAY,SAAS;AAAA,QACnC,CAAC,YAAY,SAAS,GAAG;AAAA,MAC3B,CAAC;AACD,aAAO,oBAAoB,OAAO;AAAA,IACpC;AACA,QAAI,YAAY,SAAS;AACvB,YAAM,CAAC,UAAU,aAAa,IAAI,YAAY;AAC9C,cAAQ,IAAI;AAAA,QACV,WAAWA,MAAK,IAAI,UAAU,kCAAkC,QAAQ,IAAI,aAAa;AAAA,MAC3F;AAAA,IACF;AACA,QAAI,YAAY,YAAY;AAC1B,cAAQ,IAAI,KAAK,YAAY,UAAU;AAAA,IACzC;AACA,QAAI,YAAY,mBAAmB;AACjC,YAAM,WAAW,oBAAoB,SAAS,MAAM,GAAG,IAAI;AAC3D,iBAAW,CAAC,MAAM,KAAK,KAAK,OAAO;AAAA,QACjC,YAAY;AAAA,MACd,GAAG;AACD,YAAI,QAAQ,UAAU;AACpB,kBAAQ,IAAI;AAAA,YACV,IAAI,IAAI,0CAA0CA,MAAK,IAAI,UAAU,aAAa,KAAK;AAAA,UACzF;AACA,cAAI,EAAE,SAAS,WAAW;AACxB,qBAAS,KAAK,IAAI,SAAS,IAAI;AAAA,UACjC;AACA,iBAAO,SAAS,IAAI;AAAA,QACtB;AAAA,MACF;AACA,aAAO,oBAAoB,QAAQ;AAAA,IACrC;AACA,WAAO,oBAAoB,GAAG,IAAI;AAAA,EACpC;AACA,SAAO,OAAO,OAAO,iBAAiB,mBAAmB;AAC3D;AAzHA,IACM,oBAuBA;AAxBN;AAAA;AAAA;AAAA;AACA,IAAM,qBAAqC,oBAAI,IAAI;AACnD,eAAW,CAACA,QAAO,SAAS,KAAK,OAAO,QAAQ,iBAAS,GAAG;AAC1D,iBAAW,CAAC,YAAYkC,SAAQ,KAAK,OAAO,QAAQ,SAAS,GAAG;AAC9D,cAAM,CAAC,OAAO,UAAU,WAAW,IAAIA;AACvC,cAAM,CAAC,QAAQ,GAAG,IAAI,MAAM,MAAM,GAAG;AACrC,cAAM,mBAAmB,OAAO;AAAA,UAC9B;AAAA,YACE;AAAA,YACA;AAAA,UACF;AAAA,UACA;AAAA,QACF;AACA,YAAI,CAAC,mBAAmB,IAAIlC,MAAK,GAAG;AAClC,6BAAmB,IAAIA,QAAuB,oBAAI,IAAI,CAAC;AAAA,QACzD;AACA,2BAAmB,IAAIA,MAAK,EAAE,IAAI,YAAY;AAAA,UAC5C,OAAAA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AACA,IAAM,UAAU;AAAA,MACd,IAAI,EAAE,OAAAA,OAAM,GAAG,YAAY;AACzB,eAAO,mBAAmB,IAAIA,MAAK,EAAE,IAAI,UAAU;AAAA,MACrD;AAAA,MACA,yBAAyB,QAAQ,YAAY;AAC3C,eAAO;AAAA,UACL,OAAO,KAAK,IAAI,QAAQ,UAAU;AAAA;AAAA,UAElC,cAAc;AAAA,UACd,UAAU;AAAA,UACV,YAAY;AAAA,QACd;AAAA,MACF;AAAA,MACA,eAAe,QAAQ,YAAY4C,aAAY;AAC7C,eAAO,eAAe,OAAO,OAAO,YAAYA,WAAU;AAC1D,eAAO;AAAA,MACT;AAAA,MACA,eAAe,QAAQ,YAAY;AACjC,eAAO,OAAO,MAAM,UAAU;AAC9B,eAAO;AAAA,MACT;AAAA,MACA,QAAQ,EAAE,OAAA5C,OAAM,GAAG;AACjB,eAAO,CAAC,GAAG,mBAAmB,IAAIA,MAAK,EAAE,KAAK,CAAC;AAAA,MACjD;AAAA,MACA,IAAI,QAAQ,YAAY3G,QAAO;AAC7B,eAAO,OAAO,MAAM,UAAU,IAAIA;AAAA,MACpC;AAAA,MACA,IAAI,EAAE,SAAS,OAAA2G,QAAO,OAAAW,OAAM,GAAG,YAAY;AACzC,YAAIA,OAAM,UAAU,GAAG;AACrB,iBAAOA,OAAM,UAAU;AAAA,QACzB;AACA,cAAM,SAAS,mBAAmB,IAAIX,MAAK,EAAE,IAAI,UAAU;AAC3D,YAAI,CAAC,QAAQ;AACX,iBAAO;AAAA,QACT;AACA,cAAM,EAAE,kBAAkB,YAAY,IAAI;AAC1C,YAAI,aAAa;AACf,UAAAW,OAAM,UAAU,IAAI;AAAA,YAClB;AAAA,YACAX;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QACF,OAAO;AACL,UAAAW,OAAM,UAAU,IAAI,QAAQ,QAAQ,SAAS,gBAAgB;AAAA,QAC/D;AACA,eAAOA,OAAM,UAAU;AAAA,MACzB;AAAA,IACF;AAAA;AAAA;;;ACzEA;AAAA;AAAA;AAAA;AAAA;AAEA,SAAS,oBAAoB,SAAS;AACpC,QAAM,MAAM,mBAAmB,OAAO;AACtC,SAAO;AAAA,IACL,MAAM;AAAA,EACR;AACF;AAEA,SAAS,0BAA0B,SAAS;AAC1C,QAAM,MAAM,mBAAmB,OAAO;AACtC,SAAO;AAAA,IACL,GAAG;AAAA,IACH,MAAM;AAAA,EACR;AACF;AAfA,IAAA4B,iBAAA;AAAA;AAAA;AAAA,IAAAd;AACA;AAOA,wBAAoB,UAAUU;AAQ9B,8BAA0B,UAAUA;AAAA;AAAA;;;AChBpC,IAAAU,oBAAA;AAAA,SAAAA,mBAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,SAAS,+BAA+B,UAAU;AAChD,MAAI,CAAC,SAAS,MAAM;AAClB,WAAO;AAAA,MACL,GAAG;AAAA,MACH,MAAM,CAAC;AAAA,IACT;AAAA,EACF;AACA,QAAM,6BAA6B,iBAAiB,SAAS,QAAQ,EAAE,SAAS,SAAS;AACzF,MAAI,CAAC;AACH,WAAO;AACT,QAAM,oBAAoB,SAAS,KAAK;AACxC,QAAM,sBAAsB,SAAS,KAAK;AAC1C,QAAM,aAAa,SAAS,KAAK;AACjC,SAAO,SAAS,KAAK;AACrB,SAAO,SAAS,KAAK;AACrB,SAAO,SAAS,KAAK;AACrB,QAAM,eAAe,OAAO,KAAK,SAAS,IAAI,EAAE,CAAC;AACjD,QAAM,OAAO,SAAS,KAAK,YAAY;AACvC,WAAS,OAAO;AAChB,MAAI,OAAO,sBAAsB,aAAa;AAC5C,aAAS,KAAK,qBAAqB;AAAA,EACrC;AACA,MAAI,OAAO,wBAAwB,aAAa;AAC9C,aAAS,KAAK,uBAAuB;AAAA,EACvC;AACA,WAAS,KAAK,cAAc;AAC5B,SAAO;AACT;AAGA,SAAS,SAAS,SAAS,OAAO,YAAY;AAC5C,QAAM,UAAU,OAAO,UAAU,aAAa,MAAM,SAAS,UAAU,IAAI,QAAQ,QAAQ,SAAS,OAAO,UAAU;AACrH,QAAM,gBAAgB,OAAO,UAAU,aAAa,QAAQ,QAAQ;AACpE,QAAM,SAAS,QAAQ;AACvB,QAAM,UAAU,QAAQ;AACxB,MAAI,MAAM,QAAQ;AAClB,SAAO;AAAA,IACL,CAAC,OAAO,aAAa,GAAG,OAAO;AAAA,MAC7B,MAAM,OAAO;AACX,YAAI,CAAC;AACH,iBAAO,EAAE,MAAM,KAAK;AACtB,YAAI;AACF,gBAAM,WAAW,MAAM,cAAc,EAAE,QAAQ,KAAK,QAAQ,CAAC;AAC7D,gBAAM,qBAAqB,+BAA+B,QAAQ;AAClE,kBAAQ,mBAAmB,QAAQ,QAAQ,IAAI;AAAA,YAC7C;AAAA,UACF,KAAK,CAAC,GAAG,CAAC;AACV,iBAAO,EAAE,OAAO,mBAAmB;AAAA,QACrC,SAAS,OAAO;AACd,cAAI,MAAM,WAAW;AACnB,kBAAM;AACR,gBAAM;AACN,iBAAO;AAAA,YACL,OAAO;AAAA,cACL,QAAQ;AAAA,cACR,SAAS,CAAC;AAAA,cACV,MAAM,CAAC;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,SAASC,UAAS,SAAS,OAAO,YAAY,OAAO;AACnD,MAAI,OAAO,eAAe,YAAY;AACpC,YAAQ;AACR,iBAAa;AAAA,EACf;AACA,SAAO;AAAA,IACL;AAAA,IACA,CAAC;AAAA,IACD,SAAS,SAAS,OAAO,UAAU,EAAE,OAAO,aAAa,EAAE;AAAA,IAC3D;AAAA,EACF;AACF;AACA,SAAS,OAAO,SAAS,SAAS,WAAW,OAAO;AAClD,SAAO,UAAU,KAAK,EAAE,KAAK,CAAC,WAAW;AACvC,QAAI,OAAO,MAAM;AACf,aAAO;AAAA,IACT;AACA,QAAI,YAAY;AAChB,aAASvI,SAAO;AACd,kBAAY;AAAA,IACd;AACA,cAAU,QAAQ;AAAA,MAChB,QAAQ,MAAM,OAAO,OAAOA,MAAI,IAAI,OAAO,MAAM;AAAA,IACnD;AACA,QAAI,WAAW;AACb,aAAO;AAAA,IACT;AACA,WAAO,OAAO,SAAS,SAAS,WAAW,KAAK;AAAA,EAClD,CAAC;AACH;AAoPA,SAAS,qBAAqB,KAAK;AACjC,MAAI,OAAO,QAAQ,UAAU;AAC3B,WAAO,oBAAoB,SAAS,GAAG;AAAA,EACzC,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAGA,SAAS,aAAa,SAAS;AAC7B,SAAO;AAAA,IACL,UAAU,OAAO,OAAOuI,UAAS,KAAK,MAAM,OAAO,GAAG;AAAA,MACpD,UAAU,SAAS,KAAK,MAAM,OAAO;AAAA,IACvC,CAAC;AAAA,EACH;AACF;AAtWA,IACIX,UAqGA,qBAKA;AA3GJ,IAAAC,iBAAA;AAAA;AAAA;AACA,IAAID,WAAU;AAqGd,IAAI,sBAAsB,OAAO,OAAOW,WAAU;AAAA,MAChD;AAAA,IACF,CAAC;AAGD,IAAI,sBAAsB;AAAA,MACxmBA,iBAAa,UAAUX;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvWvB,QAAA,UAAA,aAAA,iBAAA;AACA,QAAA,QAAA,aAAA,gBAAA;AAGA,QAAA,SAAA;AAEA,QAAA,iCAAA;AACA,QAAA,yBAAA;AAEa,YAAA,UAAU,IAAI,QAAQ,QAAO;AAE1C,QAAM,UAAU,MAAM,cAAa;AACtB,YAAA,WAA2B;MACtC;MACA,SAAS;QACP,OAAO,MAAM,cAAc,OAAO;QAClC,OAAO,MAAM,cAAc,OAAO;;;AAIzB,YAAA,SAAS,OAAA,QAAQ,OAC5B,+BAAA,qBACA,uBAAA,YAAY,EACZ,SAAS,QAAA,QAAQ;AAQnB,aAAgB,kBACd,OACA,SAAwB;AAExB,YAAM,OAAO,OAAO,OAAO,CAAA,GAAI,WAAW,CAAA,CAAE;AAG5C,YAAMQ,QAAO,MAAM,cAAc,OAAO,IAAI;AAC5C,UAAIA,OAAM;AACR,aAAK,OAAOA;;AAGd,aAAO;IACT;AAbA,YAAA,oBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA,QAAA,UAAA,aAAA,iBAAA;AACA,QAAA,UAAA;AAKa,YAAA,UAAU,IAAI,QAAQ,QAAO;AAQ1C,aAAgBI,YACd,OACA,YACG,mBAAkC;AAErC,YAAM,oBAAoB,QAAA,OAAO,OAAO,GAAG,iBAAiB;AAC5D,aAAO,IAAI,mBAAkB,GAAA,QAAA,mBAAkB,OAAO,OAAO,CAAC;IAChE;AAPA,YAAA,aAAAA;;;;;ACdA;AAAA;AAAA,gBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA;AAAA,iBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,eAAA9G;AAAA,EAAA;AAAA,gBAAA+G;AAAA,EAAA,iBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA;AAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA,sBAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,YAAApJ;AAAA,EAAA,oBAAAqJ;AAAA,EAAA,oBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA;AAAA,sBAAAC;AAAA,EAAA,UAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA,iBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA;AAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA;AAAA;AAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA,sBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA;AAAA;AAAA,mBAAAC;AAAA,EAAA;AAAA;AAAA,eAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,eAAAC;AAAA;;;ACuBA,IAAM,aAAa,CAAAlJ,WAAS,OAAOA,WAAU;AA2C7C,IAAM,OAAO,SAAU,OAAO,MAAM;AAClC,MAAI,OAAO,UAAU,YAAY;AAC/B,WAAO,WAAY;AACjB,UAAI,MAAM,SAAS,GAAG;AAEpB,eAAO,KAAK,MAAM,MAAM,SAAS;AAAA,MACnC;AACA,aAAO,UAAQ,KAAK,MAAM,GAAG,SAAS;AAAA,IACxC;AAAA,EACF;AACA,UAAQ,OAAO;AAAA,IACb,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO,SAAU,GAAG;AAClB,YAAI,UAAU,UAAU,GAAG;AACzB,iBAAO,KAAK,CAAC;AAAA,QACf;AACA,eAAO,WAAY;AACjB,iBAAO,KAAK,CAAC;AAAA,QACf;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO,SAAU,GAAG,GAAG;AACrB,YAAI,UAAU,UAAU,GAAG;AACzB,iBAAO,KAAK,GAAG,CAAC;AAAA,QAClB;AACA,eAAO,SAAU,MAAM;AACrB,iBAAO,KAAK,MAAM,CAAC;AAAA,QACrB;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO,SAAU,GAAG,GAAG,GAAG;AACxB,YAAI,UAAU,UAAU,GAAG;AACzB,iBAAO,KAAK,GAAG,GAAG,CAAC;AAAA,QACrB;AACA,eAAO,SAAU,MAAM;AACrB,iBAAO,KAAK,MAAM,GAAG,CAAC;AAAA,QACxB;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO,SAAU,GAAG,GAAG,GAAG,GAAG;AAC3B,YAAI,UAAU,UAAU,GAAG;AACzB,iBAAO,KAAK,GAAG,GAAG,GAAG,CAAC;AAAA,QACxB;AACA,eAAO,SAAU,MAAM;AACrB,iBAAO,KAAK,MAAM,GAAG,GAAG,CAAC;AAAA,QAC3B;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO,SAAU,GAAG,GAAG,GAAG,GAAG,GAAG;AAC9B,YAAI,UAAU,UAAU,GAAG;AACzB,iBAAO,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,QAC3B;AACA,eAAO,SAAU,MAAM;AACrB,iBAAO,KAAK,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AACE,aAAO,WAAY;AACjB,YAAI,UAAU,UAAU,OAAO;AAE7B,iBAAO,KAAK,MAAM,MAAM,SAAS;AAAA,QACnC;AACA,cAAM,OAAO;AACb,eAAO,SAAU,MAAM;AACrB,iBAAO,KAAK,MAAM,GAAG,IAAI;AAAA,QAC3B;AAAA,MACF;AAAA,EACJ;AACF;AAiDA,IAAM,WAAW,OAAK;AAkCtB,IAAM,WAAW,CAAAvD,WAAS,MAAMA;AAYhC,IAAM,YAAyB,yBAAS,IAAI;AAY5C,IAAM,aAA0B,yBAAS,KAAK;AAY9C,IAAM,YAAyB,yBAAS,IAAI;AAY5C,IAAM,iBAA8B,yBAAS,MAAS;AAYtD,IAAM,YAAY;AAkGlB,SAAS,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAC/C,UAAQ,UAAU,QAAQ;AAAA,IACxB,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO,GAAG,CAAC;AAAA,IACb,KAAK;AACH,aAAO,GAAG,GAAG,CAAC,CAAC;AAAA,IACjB,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAAA,IACrB,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAAA,IACzB,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IAC7B,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACjC,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACrC,KAAK;AACH,aAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACzC,SACE;AACE,UAAI,MAAM,UAAU,CAAC;AACrB,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,cAAM,UAAU,CAAC,EAAE,GAAG;AAAA,MACxB;AACA,aAAO;AAAA,IACT;AAAA,EACJ;AACF;;;ACtZA,IAAM,gBAAgB;;;ACKtB,IAAM,gBAA6B,uBAAO,IAAI,oCAAoC,aAAa,EAAE;AACjG,IAAI,EAAE,iBAAiB,aAAa;AAClC,aAAW,aAAa,IAAiB,oBAAI,IAAI;AACnD;AACA,IAAM,cAAc,WAAW,aAAa;AAK5C,IAAM,cAAc,CAAC6E,KAAI,YAAY;AACnC,MAAI,CAAC,YAAY,IAAIA,GAAE,GAAG;AACxB,gBAAY,IAAIA,KAAI,QAAQ,CAAC;AAAA,EAC/B;AACA,SAAO,YAAY,IAAIA,GAAE;AAC3B;;;ACuCA,IAAM,WAAW,CAAAtB,WAAS,OAAOA,WAAU;AAiB3C,IAAM,WAAW,CAAAA,WAAS,OAAOA,WAAU;AAkC3C,IAAM,WAAW,CAAAA,WAAS,OAAOA,WAAU;AAkC3C,IAAMmJ,cAAa;AAgInB,IAAM,WAAW,CAAAnJ,WAAS,OAAOA,WAAU,YAAYA,WAAU,QAAQmJ,YAAWnJ,MAAK;AAWzF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,aAAa,SAAS,IAAI,KAAK,YAAY,IAAI;AAqB/F,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,QAAQ,YAAY,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,GAAG;AAmBtG,IAAM,aAAa,CAAAA,WAASA,WAAU,QAAQA,WAAU;AA4FxD,IAAM,aAAa,CAAAA,WAAS,YAAYA,QAAO,OAAO,QAAQ;;;ACnZ9D,IAAM,gBAA6B,uBAAO,IAAI,oBAAoB;AAgBlE,IAAM,cAAN,MAAkB;AAAA,EAChB,YAIAvD,QAAO;AACL,SAAK,QAAQA;AAAA,EACf;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,KAAK;AACP,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,KAAK;AACP,WAAO,OAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,KAAK;AACP,WAAO,OAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,KAAK;AACP,WAAO,OAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,CAAC,aAAa,IAAI;AAAA;AAAA;AAAA;AAAA,EAKlB,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,IAAI,cAAc,IAAI;AAAA,EAC/B;AACF;AAMA,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,SAAS;AAAA,EACT,YAAY,MAAM;AAChB,SAAK,OAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK,GAAG;AACN,WAAO,KAAK,SAAS;AAAA,MACnB,OAAO;AAAA,MACP,MAAM;AAAA,IACR,KAAK,KAAK,SAAS,MAAM;AAAA,MACvB,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,GAAG;AACR,WAAO;AAAA,MACL,OAAO;AAAA,MACP,MAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,GAAG;AACP,UAAM;AAAA,EACR;AAAA;AAAA;AAAA;AAAA,EAKA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,IAAI,eAAc,KAAK,IAAI;AAAA,EACpC;AACF;AA2BA,IAAM,UAAU;AAAA;AAAA,EAEhB,WAAY;AACV,QAAI,IAAI,UAAU,CAAC;AACnB,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,UAAU,CAAC,EAAE,CAAC;AAAA,IACpB;AACA,WAAO,IAAI,YAAY,CAAC;AAAA,EAC1B;AAAA;AACA,IAAM,eAAe;AACrB,IAAM,eAAe;AACrB,IAAM,SAAS,eAAe;AAC9B,IAAM,SAAS,eAAe;AAC9B,IAAM,SAAS;AACf,IAAM,SAAS;AAoBf,IAAM,YAAN,MAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8Bd,YAAY,QAAQ,QAAQ,OAAO,OAAO;AACxC,QAAI,WAAW,MAAM,KAAK,WAAW,MAAM,GAAG;AAC5C,eAAS,KAAK,OAAO,IAAI,eAAe;AACxC,eAAS;AAAA,IACX,WAAW,WAAW,MAAM,GAAG;AAC7B,eAAS;AACT,eAAS;AAAA,IACX;AACA,QAAI,WAAW,KAAK,KAAK,WAAW,KAAK,GAAG;AAC1C,cAAQ,KAAK,SAAS,KAAK,OAAO,CAAC,IAAI;AACvC,cAAQ,KAAK,SAAS,KAAK,OAAO,CAAC,IAAI;AAAA,IACzC,WAAW,WAAW,KAAK,GAAG;AAC5B,cAAQ;AACR,cAAQ;AAAA,IACV;AACA,SAAK,SAAS,IAAI,WAAW,CAAC,GAAG,GAAG,UAAU,KAAK,SAAS,KAAK,OAAO,CAAC,CAAC;AAC1E,SAAK,MAAM;AACX,UAAM,KAAK,QAAQ,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,WAAW,GAAG,WAAW,CAAC;AAC7E,SAAK,MAAM;AACX,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAW;AACT,WAAO,CAAC,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAS,OAAO;AACd,SAAK,OAAO,CAAC,IAAI,MAAM,CAAC;AACxB,SAAK,OAAO,CAAC,IAAI,MAAM,CAAC;AACxB,SAAK,OAAO,CAAC,IAAI,MAAM,CAAC;AACxB,SAAK,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,QAAQ2M,MAAK;AACX,QAAI,CAACA,MAAK;AACR,aAAO,KAAK,MAAM;AAAA,IACpB;AACA,IAAAA,OAAMA,SAAQ;AACd,SAAKA,OAAMA,OAAM,OAAO,GAAG;AACzB,aAAO,KAAK,MAAM,IAAIA,OAAM;AAAA,IAC9B;AAEA,QAAI,MAAM;AACV,UAAM,QAAQ,CAACA,SAAQ,KAAKA,SAAQ;AACpC,SAAK,MAAM,KAAK,MAAM,GAAG,MAAM,MAAM,MAAM,KAAK,MAAM,GAAG;AAAA,IAGzD;AACA,WAAO,MAAMA;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,SAAS;AACP,UAAM,MAAM,KAAK,MAAM,IAAI,YAAc;AACzC,UAAM,MAAM,KAAK,MAAM,IAAI,aAAc;AACzC,YAAQ,KAAK,SAAS,MAAM;AAAA,EAC9B;AAAA;AAAA,EAGA,QAAQ;AAEN,UAAM,QAAQ,KAAK,OAAO,CAAC,MAAM;AACjC,UAAM,QAAQ,KAAK,OAAO,CAAC,MAAM;AAGjC,UAAM,KAAK,QAAQ,OAAO,OAAO,QAAQ,MAAM;AAC/C,UAAM,KAAK,QAAQ,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAGjF,QAAI,OAAO,UAAU;AACrB,QAAI,QAAQ,UAAU,KAAK,SAAS,QAAQ;AAC5C,YAAQ,OAAO,WAAW;AAC1B,YAAQ,OAAO,WAAW;AAC1B,UAAM,cAAc,SAAS,KAAK,QAAQ,OAAO;AAGjD,UAAM,MAAM,UAAU;AACtB,UAAM,QAAQ,CAAC,QAAQ,IAAI,QAAQ;AACnC,YAAQ,eAAe,MAAM,cAAc,UAAU;AAAA,EACvD;AACF;AACA,SAAS,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AACtC,MAAI,MAAM,QAAQ,OAAO,MAAM,WAAY;AAC3C,MAAI,MAAM,MAAM,UAAW,QAAQ,QAAQ;AAC3C,MAAI,MAAM,MAAM,UAAW,MAAM,WAAY;AAC7C,MAAI,MAAM,QAAQ,OAAO,QAAQ,QAAQ,OAAO,OAAO,OAAO,SAAS;AACvE,OAAK,MAAM,OAAO;AAClB,OAAK,KAAK,OAAO;AACjB,MAAI,OAAO,IAAI,OAAO,GAAG;AACvB,SAAK,KAAK,MAAM;AAAA,EAClB;AACA,OAAK,MAAM,OAAO;AAClB,OAAK,KAAK,OAAO;AACjB,MAAI,OAAO,IAAI,OAAO,GAAG;AACvB,SAAK,KAAK,MAAM;AAAA,EAClB;AACA,OAAK,KAAK,KAAK,KAAK,KAAK,GAAG,MAAM;AAClC,OAAK,KAAK,KAAK,KAAK,KAAK,GAAG,MAAM;AAClC,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACX;AAGA,SAAS,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AACtC,MAAI,KAAK,MAAM,QAAQ;AACvB,QAAM,KAAK,MAAM,QAAQ;AACzB,MAAI,OAAO,IAAI,QAAQ,GAAG;AACxB,SAAK,KAAK,IAAI;AAAA,EAChB;AACA,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACX;;;ACnVA,IAAM,kBAA+B,4BAA0B,uBAAO,IAAI,6BAA6B,GAAG,MAAM,oBAAI,QAAQ,CAAC;AAE7H,IAAM,OAAoB,4BAA0B,uBAAO,IAAI,kBAAkB,GAAG,MAAM,IAAI,UAAU,CAAC;AAMzG,IAAM,SAAsB,uBAAO,IAAI,aAAa;AAWpD,IAAM,OAAO,UAAQ;AACnB,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK,UACH;AACE,aAAO,OAAO,IAAI;AAAA,IACpB;AAAA,IACF,KAAK,UACH;AACE,aAAO,OAAO,KAAK,SAAS,EAAE,CAAC;AAAA,IACjC;AAAA,IACF,KAAK,WACH;AACE,aAAO,OAAO,OAAO,IAAI,CAAC;AAAA,IAC5B;AAAA,IACF,KAAK,UACH;AACE,aAAO,OAAO,OAAO,IAAI,CAAC;AAAA,IAC5B;AAAA,IACF,KAAK,UACH;AACE,aAAO,OAAO,IAAI;AAAA,IACpB;AAAA,IACF,KAAK,aACH;AACE,aAAO,OAAO,WAAW;AAAA,IAC3B;AAAA,IACF,KAAK;AAAA,IACL,KAAK,UACH;AACE,UAAI,SAAS,MAAM;AACjB,eAAO,OAAO,MAAM;AAAA,MACtB;AACA,UAAI,OAAO,IAAI,GAAG;AAChB,eAAO,KAAK,MAAM,EAAE;AAAA,MACtB,OAAO;AACL,eAAO,OAAO,IAAI;AAAA,MACpB;AAAA,IACF;AAAA,IACF,SACE;AACE,YAAM,IAAI,MAAM,mBAAmB;AAAA,IACrC;AAAA,EACJ;AACF;AAMA,IAAM,SAAS,UAAQ;AACrB,MAAI,CAAC,gBAAgB,IAAI,IAAI,GAAG;AAC9B,oBAAgB,IAAI,MAAM,OAAO,KAAK,QAAQ,OAAO,gBAAgB,CAAC,CAAC;AAAA,EACzE;AACA,SAAO,gBAAgB,IAAI,IAAI;AACjC;AAMA,IAAM,UAAU,OAAK,UAAQ,OAAO,KAAK;AAMzC,IAAM,WAAW,OAAK,IAAI,aAAa,MAAM,IAAI;AAMjD,IAAM,SAAS,OAAK,YAAY,GAAG,MAAM;AAMzC,IAAM,SAAS,OAAK;AAClB,MAAI,MAAM,KAAK,MAAM,UAAU;AAC7B,WAAO;AAAA,EACT;AACA,MAAI,IAAI,IAAI;AACZ,MAAI,MAAM,GAAG;AACX,SAAK,IAAI;AAAA,EACX;AACA,SAAO,IAAI,YAAY;AACrB,SAAK,KAAK;AAAA,EACZ;AACA,SAAO,SAAS,CAAC;AACnB;AAMA,IAAM,SAAS,SAAO;AACpB,MAAI,IAAI,MACN,IAAI,IAAI;AACV,SAAO,GAAG;AACR,QAAI,IAAI,KAAK,IAAI,WAAW,EAAE,CAAC;AAAA,EACjC;AACA,SAAO,SAAS,CAAC;AACnB;AAMA,IAAM,gBAAgB,CAAC,GAAG1M,UAAS;AACjC,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,KAAK;AACpC,SAAK,KAAK,OAAOA,MAAK,CAAC,CAAC,GAAG,QAAQ,KAAK,EAAEA,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,EACtD;AACA,SAAO,SAAS,CAAC;AACnB;AAMA,IAAM,YAAY,OAAK,cAAc,GAAG,OAAO,KAAK,CAAC,CAAC;AAMtD,IAAM,QAAQ,SAAO;AACnB,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,QAAI,KAAK,GAAG,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;AAAA,EACnC;AACA,SAAO,SAAS,CAAC;AACnB;;;ACvJA,IAAMyH,UAAsB,uBAAO,IAAI,cAAc;AAYrD,SAAS,SAAS;AAChB,MAAI,UAAU,WAAW,GAAG;AAC1B,WAAO,UAAQ,YAAY,MAAM,UAAU,CAAC,CAAC;AAAA,EAC/C;AACA,SAAO,YAAY,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC;AAC/C;AACA,SAAS,YAAY,MAAM,MAAM;AAC/B,MAAI,SAAS,MAAM;AACjB,WAAO;AAAA,EACT;AACA,QAAM,WAAW,OAAO;AACxB,MAAI,aAAa,OAAO,MAAM;AAC5B,WAAO;AAAA,EACT;AACA,OAAK,aAAa,YAAY,aAAa,eAAe,SAAS,QAAQ,SAAS,MAAM;AACxF,QAAI,QAAQ,IAAI,KAAK,QAAQ,IAAI,GAAG;AAClC,aAAO,KAAK,IAAI,MAAM,KAAK,IAAI,KAAK,KAAKA,OAAM,EAAE,IAAI;AAAA,IACvD;AAAA,EACF;AACA,SAAO;AACT;AAMA,IAAM,UAAU,OAAK,YAAY,GAAGA,OAAM;AAM1C,IAAM,cAAc,MAAM,CAAC,MAAM,SAAS,OAAO,MAAM,IAAI;;;AC/B3D,IAAM,OAAO,kBAAgB,CAAC,MAAM,SAAS,SAAS,QAAQ,aAAa,MAAM,IAAI;AA0ErF,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,CAAC,GAAG,MAAM,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAiEnF,IAAMkF,SAAQ,UAAQ,KAAK,CAAC,MAAM,SAAS;AACzC,MAAI,KAAK,WAAW,KAAK,QAAQ;AAC/B,WAAO;AAAA,EACT;AACA,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAM,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAClC,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT,CAAC;;;ACpKD,IAAM,oBAAiC,uBAAO,IAAI,4BAA4B;AAe9E,IAAM,SAAS,OAAK;AAClB,MAAI,YAAY,GAAG,QAAQ,KAAKF,YAAW,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,GAAG;AACnF,WAAO,EAAE,OAAO;AAAA,EAClB,WAAW,MAAM,QAAQ,CAAC,GAAG;AAC3B,WAAO,EAAE,IAAI,MAAM;AAAA,EACrB;AACA,SAAO;AACT;AAKA,IAAM,WAAW,OAAK,KAAK,UAAU,GAAG,MAAM,CAAC;;;ACrC/C;AAAA;AAAA;AAAA,gBAAAG;AAAA,EAAA,WAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAnB;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACYA,IAAM,gBAAgB,CAAC,MAAM,SAAS;AACpC,UAAQ,KAAK,QAAQ;AAAA,IACnB,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,IAAI;AAAA,IACrB,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC;AAAA,IAC9B,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;AAAA,IACvC,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AAAA,IAChD,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAAA,IACzD,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IAClE,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IAC3E,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACpF,KAAK;AACH,aAAO,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IAC7F,SACE;AACE,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,IAAI,KAAK,KAAK;AAC/C,cAAM,KAAK,CAAC,EAAE,GAAG;AAAA,MACnB;AACA,aAAO;AAAA,IACT;AAAA,EACJ;AACF;;;ACrCA,IAAM,aAA0B,uBAAO,OAAqB,uBAAO,OAAO,MAAM,SAAS,GAAG;AAAA,EAC1F,CAAC,MAAM,IAAI;AACT,WAAO,MAAM,IAAI;AAAA,EACnB;AAAA,EACA,CAACvE,OAAQ,EAAE,MAAM;AACf,QAAI,MAAM,QAAQ,IAAI,KAAK,KAAK,WAAW,KAAK,QAAQ;AACtD,aAAO,KAAK,MAAM,CAAC,GAAG,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;AAAA,IAChD,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AACF,CAAC;AAGD,IAAM,cAAc;AAAA,EAClB,CAAC,MAAM,IAAI;AACT,WAAO,UAAU,IAAI;AAAA,EACvB;AAAA,EACA,CAACA,OAAQ,EAAE,MAAM;AACf,UAAM,WAAW,OAAO,KAAK,IAAI;AACjC,UAAM,WAAW,OAAO,KAAK,IAAI;AACjC,QAAI,SAAS,WAAW,SAAS,QAAQ;AACvC,aAAO;AAAA,IACT;AACA,eAAW,OAAO,UAAU;AAC1B,UAAI,EAAE,OAAO,QAAQ,OAAO,KAAK,GAAG,GAAG,KAAK,GAAG,CAAC,IAAI;AAClD,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAGA,IAAM,aAA0B,2BAAY;AAC1C,WAAS2F,YAAW,MAAM;AACxB,QAAI,MAAM;AACR,aAAO,OAAO,MAAM,IAAI;AAAA,IAC1B;AAAA,EACF;AACA,EAAAA,YAAW,YAAY;AACvB,SAAOA;AACT,EAAE;AAGF,IAAM,SAAS,CAAAC,QAAM,OAAO,OAAO,OAAO,OAAO,WAAW,GAAGA,GAAE;;;AC9CjE,IAAM,WAAW;AAKjB,IAAM,YAAY;AAKlB,IAAM,aAAa;AAKnB,IAAM,gBAAgB;AAKtB,IAAM,gBAAgB;AAKtB,IAAM,4BAA4B;AAKlC,IAAM,aAAa;AAKnB,IAAM,UAAU;AAGhB,IAAM,SAAS;AAOf,IAAM,0BAA0B;AAKhC,IAAM,WAAW;AAKjB,IAAM,kBAAkB;AAKxB,IAAM,WAAW;AAKjB,IAAM,kBAAkB;;;AC5DxB,IAAM,eAA4B,uBAAO,IAAI,eAAe;AAG5D,IAAM,eAA4B,uBAAO,IAAI,eAAe;AAG5D,IAAM,aAA0B,uBAAO,IAAI,aAAa;AAGxD,IAAM,gBAA6B,uBAAO,IAAI,gBAAgB;AAG9D,IAAM,iBAAiB;AAAA,EACrB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AAAA,EACT,IAAI;AACN;AAGA,IAAM,eAAe;AAAA,EACnB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AAAA,EACT,KAAK,OAAK;AAAA,EACV,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAGA,IAAM,kBAAkB;AAAA,EACtB,MAAM,OAAK;AAAA,EACX,QAAQ,OAAK;AAAA,EACb,SAAS,OAAK;AAAA,EACd,SAAS,OAAK;AAAA,EACd,SAAS,OAAK;AAAA,EACd,UAAU,OAAK;AAAA,EACf,UAAU,OAAK;AACjB;AAGA,IAAM,kBAAkB;AAAA,EACtB,CAAC,YAAY,GAAG;AAAA,EAChB,CAAC,YAAY,GAAG;AAAA,EAChB,CAAC,UAAU,GAAG;AAAA,EACd,CAAC,aAAa,GAAG;AAAA,EACjB,CAAC5F,OAAM,EAAE,MAAM;AACb,WAAO,SAAS;AAAA,EAClB;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,OAAO,IAAI;AAAA,EACpB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,kBAAkB;AAAA,EACtB,GAAG;AAAA,EACH,KAAK;AACP;AAGA,IAAM,4BAA4B;AAAA,EAChC,GAAG;AAAA,EACH,GAAG,WAAW;AAChB;;;ACjEA,IAAM,SAAsB,uBAAO,IAAI,eAAe;AACtD,IAAM,cAAc;AAAA,EAClB,GAAG;AAAA,EACH,CAAC,MAAM,GAAG;AAAA,IACR,IAAI,OAAK;AAAA,EACX;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AACF;AACA,IAAM,YAAyB,uBAAO,OAAqB,uBAAO,OAAO,WAAW,GAAG;AAAA,EACrF,MAAM;AAAA,EACN,KAAK;AAAA,EACL,CAACA,OAAM,EAAE,MAAM;AACb,WAAO,SAAS,IAAI,KAAK,OAAO,IAAI,KAAK,OAAO,KAAK,OAAO,KAAK,KAAK;AAAA,EACxE;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,QAAQ,KAAK,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC;AAAA,EAClD;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,MACX,OAAO,OAAO,KAAK,KAAK;AAAA,IAC1B;AAAA,EACF;AACF,CAAC;AACD,IAAM,YAAyB,uBAAO,OAAqB,uBAAO,OAAO,WAAW,GAAG;AAAA,EACrF,MAAM;AAAA,EACN,KAAK;AAAA,EACL,CAACA,OAAM,EAAE,MAAM;AACb,WAAO,SAAS,IAAI,KAAK,OAAO,IAAI;AAAA,EACtC;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,QAAQ,KAAK,KAAK,IAAI,CAAC;AAAA,EAChC;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,IACb;AAAA,EACF;AACF,CAAC;AAGD,IAAM,WAAW,CAAAnE,WAAS,YAAYA,QAAO,MAAM;AAGnD,IAAM,SAAS,QAAM,GAAG,SAAS;AAGjC,IAAM,SAAS,QAAM,GAAG,SAAS;AAGjC,IAAM,OAAoB,uBAAO,OAAO,SAAS;AAGjD,IAAM,OAAO,CAAAvD,WAAS;AACpB,QAAM,IAAI,OAAO,OAAO,SAAS;AACjC,IAAE,QAAQA;AACV,SAAO;AACT;;;AC1DA,IAAM6M,UAAsB,uBAAO,IAAI,eAAe;AACtD,IAAMU,eAAc;AAAA,EAClB,GAAG;AAAA,EACH,CAACV,OAAM,GAAG;AAAA,IACR,IAAI,OAAK;AAAA,EACX;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AACF;AACA,IAAM,aAA0B,uBAAO,OAAqB,uBAAO,OAAOU,YAAW,GAAG;AAAA,EACtF,MAAM;AAAA,EACN,KAAK;AAAA,EACL,CAAC7F,OAAM,EAAE,MAAM;AACb,WAAO,SAAS,IAAI,KAAK,QAAQ,IAAI,KAAK,OAAO,KAAK,OAAO,KAAK,KAAK;AAAA,EACzE;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,QAAQ,KAAK,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC;AAAA,EAClD;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,MACX,OAAO,OAAO,KAAK,KAAK;AAAA,IAC1B;AAAA,EACF;AACF,CAAC;AACD,IAAM,YAAyB,uBAAO,OAAqB,uBAAO,OAAO6F,YAAW,GAAG;AAAA,EACrF,MAAM;AAAA,EACN,KAAK;AAAA,EACL,CAAC7F,OAAM,EAAE,MAAM;AACb,WAAO,SAAS,IAAI,KAAK,OAAO,IAAI,KAAK,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,EACtE;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,QAAQ,KAAK,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI,CAAC;AAAA,EACjD;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,MACX,MAAM,OAAO,KAAK,IAAI;AAAA,IACxB;AAAA,EACF;AACF,CAAC;AAGD,IAAM,WAAW,CAAAnE,WAAS,YAAYA,QAAOsJ,OAAM;AAGnD,IAAM,SAAS,QAAM,GAAG,SAAS;AAGjC,IAAM,UAAU,QAAM,GAAG,SAAS;AAGlC,IAAM,OAAO,CAAAW,UAAQ;AACnB,QAAM,IAAI,OAAO,OAAO,SAAS;AACjC,IAAE,OAAOA;AACT,SAAO;AACT;AAGA,IAAM,QAAQ,CAAAC,WAAS;AACrB,QAAM,IAAI,OAAO,OAAO,UAAU;AAClC,IAAE,QAAQA;AACV,SAAO;AACT;AAGA,IAAM,UAAU,UAAQ,QAAQ,IAAI,IAAI,OAAO,KAAK,KAAK,IAAI;AAG7D,IAAM,WAAW,UAAQ,OAAO,IAAI,IAAI,OAAO,KAAK,KAAK,KAAK;AAG9D,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,WAAW,OAAO,IAAI,IAAI,KAAK,OAAO,CAAC,IAAI,MAAM,KAAK,KAAK,CAAC;;;ACzE3G,IAAMtC,QAAO,aAAW,CAAC,MAAM,SAAS,SAAS,OAAO,IAAI,QAAQ,MAAM,IAAI;AAY9E,IAAMuC,UAAsB,gBAAAvC,MAAK,CAAC,MAAM,SAAS,OAAO,OAAO,KAAK,CAAC;AAgErE,IAAMwC,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAMxC,MAAK,CAAC,IAAI,OAAO,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AAqBvF,IAAM,MAAM,gBAAc;AACxB,SAAOA,MAAK,CAAC,GAAG,MAAM;AACpB,UAAM,MAAM,KAAK,IAAI,EAAE,QAAQ,EAAE,MAAM;AACvC,QAAI,mBAAmB;AACvB,eAAW,KAAK,YAAY;AAC1B,UAAI,oBAAoB,KAAK;AAC3B;AAAA,MACF;AACA,YAAM,IAAI,EAAE,EAAE,gBAAgB,GAAG,EAAE,gBAAgB,CAAC;AACpD,UAAI,MAAM,GAAG;AACX,eAAO;AAAA,MACT;AACA;AAAA,IACF;AACA,WAAO;AAAA,EACT,CAAC;AACH;AA6BA,IAAM,QAAQ,IAAI,aAAa,IAAI,QAAQ;AAwD3C,IAAM,cAAc,OAAK,KAAK,GAAG,CAAC,MAAM,SAAS,EAAE,MAAM,IAAI,MAAM,CAAC;;;APrMpE,IAAM0B,UAAsB,uBAAO,IAAI,eAAe;AAsCtD,IAAMO,QAAO,MAAM;AAUnB,IAAMnB,QAAO;AAiBb,IAAMiB,YAAW;AAgBjB,IAAMD,UAAS;AAgBf,IAAME,UAAS;AA2Bf,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAM;AAAA,EACxC;AAAA,EACA;AACF,MAAMF,QAAO,IAAI,IAAI,OAAO,IAAI,OAAO,KAAK,KAAK,CAAC;AAoBlD,IAAM,eAAe,OAAK,OAAKE,QAAO,EAAE,CAAC,CAAC;AAiB1C,IAAM,eAAe,gBAAc;AACjC,aAAW,KAAK,YAAY;AAC1B,WAAOlB,MAAK,CAAC;AAAA,EACf;AACA,SAAOmB,MAAK;AACd;AAiBA,IAAMJ,YAAW;AAejB,IAAMD,WAAU;AAkBhB,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,WAAWE,QAAO,IAAI,IAAI,OAAO,IAAI,KAAK,KAAK;AA4C7F,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,SAASA,QAAO,IAAI,IAAI,KAAK,IAAI,IAAI;AAchF,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,SAASA,QAAO,IAAI,IAAI,IAAI,KAAK,GAAG,KAAK,IAAI,IAAI,MAAM,IAAI,CAAC;AAe7G,IAAM,cAAc,gBAAc;AAChC,MAAI,MAAMG,MAAK;AACf,OAAK,OAAO,YAAY;AACtB,QAAID,QAAO,GAAG,GAAG;AACf,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAkBA,IAAM,eAAe,mBAAiB,iBAAiB,OAAOC,MAAK,IAAInB,MAAK,aAAa;AAqBzF,IAAM,eAAe,OAAK,IAAI,MAAM,aAAa,EAAE,GAAG,CAAC,CAAC;AAgBxD,IAAM,YAAyB,0BAAU,SAAS;AAgBlD,IAAM,iBAA8B,0BAAU,cAAc;AAqB5D,IAAM,gBAAgB,OAAK,IAAI,MAAM;AACnC,MAAI;AACF,WAAOA,MAAK,EAAE,GAAG,CAAC,CAAC;AAAA,EACrB,SAAS,GAAG;AACV,WAAOmB,MAAK;AAAA,EACd;AACF;AAsBA,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,WAAW;AAC5D,MAAID,QAAO,IAAI,GAAG;AAChB,WAAO,KAAK;AAAA,EACd;AACA,QAAM,OAAO;AACf,CAAC;AAmBD,IAAM,aAA0B,+BAAe,MAAM,IAAI,MAAM,6BAA6B,CAAC;AAW7F,IAAM,MAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMF,QAAO,IAAI,IAAIG,MAAK,IAAInB,MAAK,EAAE,KAAK,KAAK,CAAC,CAAC;AAQzF,IAAM,KAAkB,qBAAK,GAAG,CAAC,MAAM,MAAM,IAAI,MAAM,MAAM,CAAC,CAAC;AAU/D,IAAM,SAAsB,mBAAG,MAAS;AAKxC,IAAM,OAAoB,gBAAAA,MAAK,MAAS;AAQxC,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAMgB,QAAO,IAAI,IAAIG,MAAK,IAAI,EAAE,KAAK,KAAK,CAAC;AA0CvF,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAMH,QAAO,IAAI,IAAIG,MAAK,IAAI,aAAa,EAAE,KAAK,KAAK,CAAC,CAAC;AAM7G,IAAM,UAAuB,wBAAQ,QAAQ;AAM7C,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,SAAS,QAAQ,MAAM,MAAM,IAAI,CAAC;AAM/E,IAAM,WAAwB,qBAAK,GAAG,CAAC,KAAK,QAAQ,OAAK,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC;AAa7E,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS,IAAI,MAAM,MAAM,IAAI,CAAC;AAuB1E,IAAM,MAAmB,qBAAK,GAAG,CAAC,MAAM,MAAM,QAAQ,MAAM,OAAK,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAMpF,IAAM,UAAU,CAAC,MAAM,SAASD,QAAO,IAAI,KAAKA,QAAO,IAAI,IAAIlB,MAAK,CAAC,KAAK,OAAO,KAAK,KAAK,CAAC,IAAImB,MAAK;AAMrG,IAAM,cAAc,CAAC,MAAM,eAAe;AACxC,MAAIH,QAAO,IAAI,GAAG;AAChB,WAAOG,MAAK;AAAA,EACd;AACA,QAAM,MAAM,CAAC,KAAK,KAAK;AACvB,aAAW,KAAK,YAAY;AAC1B,QAAIH,QAAO,CAAC,GAAG;AACb,aAAOG,MAAK;AAAA,IACd;AACA,QAAI,KAAK,EAAE,KAAK;AAAA,EAClB;AACA,SAAOnB,MAAK,GAAG;AACjB;AAsBA,IAAMa,OAAM,CAAAvJ,WAAS;AACnB,MAAI,OAAO,YAAYA,QAAO;AAC5B,UAAMqK,OAAM,CAAC;AACb,eAAW,KAAKrK,QAAO;AACrB,UAAI0J,QAAO,CAAC,GAAG;AACb,eAAOG,MAAK;AAAA,MACd;AACA,MAAAQ,KAAI,KAAK,EAAE,KAAK;AAAA,IAClB;AACA,WAAO3B,MAAK2B,IAAG;AAAA,EACjB;AACA,QAAM,MAAM,CAAC;AACb,aAAW,OAAO,OAAO,KAAKrK,MAAK,GAAG;AACpC,UAAM,IAAIA,OAAM,GAAG;AACnB,QAAI0J,QAAO,CAAC,GAAG;AACb,aAAOG,MAAK;AAAA,IACd;AACA,QAAI,GAAG,IAAI,EAAE;AAAA,EACf;AACA,SAAOnB,MAAK,GAAG;AACjB;AA0BA,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM,IAAI,QAAQ,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AAMrG,IAAM,KAAkB,qBAAK,GAAG,CAAC,MAAM,SAAS,QAAQ,MAAM,MAAM,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AAmBnF,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM;AACzD,MAAI,MAAM;AACV,aAAW,MAAM,MAAM;AACrB,QAAIkB,QAAO,EAAE,GAAG;AACd,YAAM,EAAE,KAAK,GAAG,KAAK;AAAA,IACvB;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAkBD,IAAM,UAAU,UAAQF,QAAO,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK;AAMvD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACrD,MAAIA,QAAO,IAAI,GAAG;AAChB,WAAO,CAACG,MAAK,GAAGA,MAAK,CAAC;AAAA,EACxB;AACA,QAAM,IAAI,EAAE,KAAK,KAAK;AACtB,SAAO,OAAO,CAAC,IAAI,CAACnB,MAAK,EAAE,IAAI,GAAGmB,MAAK,CAAC,IAAI,CAACA,MAAK,GAAGnB,MAAK,EAAE,KAAK,CAAC;AACpE,CAAC;AAsBD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAMgB,QAAO,IAAI,IAAIG,MAAK,IAAI,EAAE,KAAK,KAAK,CAAC;AA8BzF,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,cAAc,UAAU,MAAM,OAAK,UAAU,CAAC,IAAI,KAAO,CAAC,IAAI,IAAM,CAAC;AAiBhH,IAAM,iBAAiB,kBAAgB,KAAK,CAAC,GAAG,MAAM,MAAM,MAAMH,QAAO,CAAC,IAAIA,QAAO,CAAC,IAAIA,QAAO,CAAC,IAAI,QAAQ,aAAa,EAAE,OAAO,EAAE,KAAK,EAAE;AAwB7I,IAAM,WAAW,OAAK9B,MAAO,CAAC,MAAM,SAASgC,QAAO,IAAI,IAAIA,QAAO,IAAI,IAAI,EAAE,KAAK,OAAO,KAAK,KAAK,IAAI,IAAI,EAAE;AAU7G,IAAM,QAAQ,OAAK,KAAK,GAAG,CAAC,MAAM,SAAS,QAAQ,MAAM,MAAM,CAAC,CAAC;AAmBjE,IAAM,gBAAgB,eAAa,OAAK,UAAU,CAAC,IAAIlB,MAAK,CAAC,IAAImB,MAAK;AAqBtE,IAAM,eAAe,kBAAgB,KAAK,GAAG,CAAC,MAAM,MAAMH,QAAO,IAAI,IAAI,QAAQ,aAAa,KAAK,OAAO,CAAC,CAAC;AAC5G,IAAM,eAA4B,4BAAY;AAQ9C,IAAM,WAAwB,6BAAa,YAAY;AAoBvD,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,cAAcA,QAAO,IAAI,IAAI,QAAQ,UAAU,KAAK,KAAK,CAAC;AAUrG,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS,IAAI,MAAM,QAAM;AAAA,EAClE,CAAC,IAAI,GAAG;AACV,EAAE,CAAC;AACH,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM,IAAI,MAAM,OAAK,OAAO,OAAO,CAAC,GAAG,GAAG;AAAA,EACvF,CAAC,IAAI,GAAG,EAAE,CAAC;AACb,CAAC,CAAC,CAAC;AAMH,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM,QAAQ,MAAM,OAAK,IAAI,EAAE,CAAC,GAAG,OAAK,OAAO,OAAO,CAAC,GAAG,GAAG;AAAA,EAC1G,CAAC,IAAI,GAAG;AACV,CAAC,CAAC,CAAC,CAAC;AAMJ,IAAM,KAAkB,gBAAAhB,MAAK,CAAC,CAAC;AAC/B,IAAM4B,WAAuB,wBAAU;AAMvC,IAAM,MAAM,OAAK;AACf,QAAMrL,YAAW,EAAEqL,QAAO;AAC1B,MAAI,QAAQrL,UAAS,KAAK;AAC1B,MAAI,MAAM,MAAM;AACd,WAAOyJ,MAAK,MAAM,KAAK;AAAA,EACzB,OAAO;AACL,QAAIxI,WAAU,MAAM,MAAM;AAC1B,QAAIwJ,QAAOxJ,QAAO,GAAG;AACnB,aAAOA;AAAA,IACT;AACA,WAAO,CAAC,MAAM,MAAM;AAClB,cAAQjB,UAAS,KAAKiB,SAAQ,KAAK;AACnC,UAAI,CAAC,MAAM,MAAM;AACf,QAAAA,WAAU,MAAM,MAAM;AACtB,YAAIwJ,QAAOxJ,QAAO,GAAG;AACnB,iBAAOA;AAAA,QACT;AAAA,MACF;AAAA,IACF;AACA,WAAOwI,MAAK,MAAM,KAAK;AAAA,EACzB;AACF;;;AQ39BA;AAAA;AAAA,gBAAAY;AAAA,EAAA,WAAAC;AAAA,EAAA,UAAAgB;AAAA,EAAA,eAAApD;AAAA,EAAA,oBAAAqD;AAAA,EAAA,kBAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,sBAAAnD;AAAA,EAAA,eAAAiC;AAAA,EAAA,iBAAAmB;AAAA,EAAA,iBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,gBAAAtB;AAAA,EAAA,gBAAAuB;AAAA,EAAA,cAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,YAAAjB;AAAA,EAAA,WAAAnC;AAAA,EAAA;AAAA;AAAA,eAAAtL;AAAA,EAAA;AAAA,gBAAA2O;AAAA,EAAA;AAAA,eAAAjB;AAAA,EAAA;AAAA,iBAAAhB;AAAA;AAmBA,IAAMI,UAASA;AAuCf,IAAMY,SAAQ;AASd,IAAMD,QAAO;AAeb,IAAMO,gBAA4B,qBAAK,GAAG,CAAC,MAAM,eAAe,QAAQ,OAAOP,MAAK,WAAW,IAAI,CAAC,IAAIC,OAAM,IAAI,CAAC;AAanH,IAAMO,cAAa;AACnB,IAAM,OAAO,CAAAW,cAAY;AACvB,MAAIjC,YAAWiC,SAAQ,GAAG;AACxB,QAAI;AACF,aAAOlB,OAAMkB,UAAS,CAAC;AAAA,IACzB,SAAS,GAAG;AACV,aAAOnB,MAAK,CAAC;AAAA,IACf;AAAA,EACF,OAAO;AACL,QAAI;AACF,aAAOC,OAAMkB,UAAS,IAAI,CAAC;AAAA,IAC7B,SAAS,GAAG;AACV,aAAOnB,MAAKmB,UAAS,MAAM,CAAC,CAAC;AAAA,IAC/B;AAAA,EACF;AACF;AAiBA,IAAMJ,YAAW;AAgBjB,IAAMC,UAAS;AAgBf,IAAMC,WAAU;AAiBhB,IAAMzB,YAAW;AAejB,IAAMD,WAAU;AAMhB,IAAMjC,kBAAiB,CAAC,IAAI,OAAO,KAAK,CAAC,GAAG,MAAM,MAAM,MAAM0D,QAAO,CAAC,IAAIA,QAAO,CAAC,KAAK,GAAG,EAAE,MAAM,EAAE,IAAI,IAAIC,SAAQ,CAAC,KAAK,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE;AAM/I,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC1C;AAAA,EACA;AACF,MAAMD,QAAO,IAAI,IAAIhB,MAAK,OAAO,KAAK,IAAI,CAAC,IAAIC,OAAM,QAAQ,KAAK,KAAK,CAAC,CAAC;AAWzE,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAMe,QAAO,IAAI,IAAIhB,MAAK,EAAE,KAAK,IAAI,CAAC,IAAIC,OAAM,KAAK,KAAK,CAAC;AAWvG,IAAMpC,OAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMoD,SAAQ,IAAI,IAAIhB,OAAM,EAAE,KAAK,KAAK,CAAC,IAAID,MAAK,KAAK,IAAI,CAAC;AAuBpG,IAAMzN,SAAqB,qBAAK,GAAG,CAAC,MAAM;AAAA,EACxC;AAAA,EACA;AACF,MAAMyO,QAAO,IAAI,IAAI,OAAO,KAAK,IAAI,IAAI,QAAQ,KAAK,KAAK,CAAC;AAM5D,IAAM,QAAqB,gBAAAzO,OAAM;AAAA,EAC/B,QAAQ;AAAA,EACR,SAAS;AACX,CAAC;AAcD,IAAMmO,aAAyB,qBAAK,GAAG,CAAC,MAAM,WAAWM,QAAO,IAAI,IAAI,OAAO,KAAK,IAAI,IAAI,KAAK,KAAK;AAYtG,IAAML,aAAyB,gBAAAD,WAAU,SAAS;AAYlD,IAAMI,kBAA8B,gBAAAJ,WAAU,cAAc;AAsB5D,IAAMG,kBAA8B,qBAAK,GAAG,CAAC,MAAM,WAAW;AAC5D,MAAII,SAAQ,IAAI,GAAG;AACjB,WAAO,KAAK;AAAA,EACd;AACA,QAAM,OAAO,KAAK,IAAI;AACxB,CAAC;AAmBD,IAAML,cAA0B,gBAAAC,gBAAe,MAAM,IAAI,MAAM,6BAA6B,CAAC;AAW7F,IAAMK,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAASF,QAAO,IAAI,IAAI,KAAK,KAAK,IAAI,IAAIf,OAAM,KAAK,KAAK,CAAC;AAMtG,IAAM/C,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM8D,QAAO,IAAI,IAAIhB,MAAK,KAAK,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC;AAMhG,IAAMf,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM/B,SAAQ,MAAM,OAAKW,KAAI,MAAM,OAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAMnG,IAAMyC,MAAkB,qBAAK,GAAG,CAAC,MAAM,SAASrB,SAAQ,MAAM,MAAM,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AAsBnF,IAAMK,OAAM,CAAAvJ,WAAS;AACnB,MAAI,OAAO,YAAYA,QAAO;AAC5B,UAAMqK,OAAM,CAAC;AACb,eAAW,KAAKrK,QAAO;AACrB,UAAIiL,QAAO,CAAC,GAAG;AACb,eAAO;AAAA,MACT;AACA,MAAAZ,KAAI,KAAK,EAAE,KAAK;AAAA,IAClB;AACA,WAAOH,OAAMG,IAAG;AAAA,EAClB;AACA,QAAM,MAAM,CAAC;AACb,aAAW,OAAO,OAAO,KAAKrK,MAAK,GAAG;AACpC,UAAM,IAAIA,OAAM,GAAG;AACnB,QAAIiL,QAAO,CAAC,GAAG;AACb,aAAO;AAAA,IACT;AACA,QAAI,GAAG,IAAI,EAAE;AAAA,EACf;AACA,SAAOf,OAAM,GAAG;AAClB;AAKA,IAAM,UAAU,UAAQe,QAAO,IAAI,IAAIf,OAAM,KAAK,IAAI,IAAID,MAAK,KAAK,KAAK;AACzE,IAAMK,WAAuB,wBAAU;AAMvC,IAAMI,OAAM,OAAK;AACf,QAAMzL,YAAW,EAAEqL,QAAO;AAC1B,MAAI,QAAQrL,UAAS,KAAK;AAC1B,MAAI,MAAM,MAAM;AACd,WAAOiL,OAAM,MAAM,KAAK;AAAA,EAC1B,OAAO;AACL,QAAIhK,WAAU,MAAM,MAAM;AAC1B,QAAI+K,QAAO/K,QAAO,GAAG;AACnB,aAAOA;AAAA,IACT;AACA,WAAO,CAAC,MAAM,MAAM;AAClB,cAAQjB,UAAS,KAAKiB,SAAQ,KAAK;AACnC,UAAI,CAAC,MAAM,MAAM;AACf,QAAAA,WAAU,MAAM,MAAM;AACtB,YAAI+K,QAAO/K,QAAO,GAAG;AACnB,iBAAOA;AAAA,QACT;AAAA,MACF;AAAA,IACF;AACA,WAAOgK,OAAM,MAAM,KAAK;AAAA,EAC1B;AACF;;;AC9bA,IAAM,kBAAkB,UAAQ,KAAK,SAAS;;;AC8C9C,IAAM,SAAS,CAAC,GAAG,MAAM;AACvB,QAAMd,OAAM,KAAK,IAAI,GAAG,KAAK,MAAM,CAAC,CAAC;AACrC,QAAM,MAAM,CAAC,EAAE,CAAC,CAAC;AACjB,WAAS,IAAI,GAAG,IAAIA,MAAK,KAAK;AAC5B,QAAI,KAAK,EAAE,CAAC,CAAC;AAAA,EACf;AACA,SAAO;AACT;AAkCA,IAAM/B,gBAAe,gBAAc,MAAM,QAAQ,UAAU,IAAI,aAAa,MAAM,KAAK,UAAU;AAyDjG,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAMlJ,UAAS,CAACA,OAAM,GAAG,IAAI,CAAC;AAoBpE,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAMwJ,UAAS,CAAC,GAAG,MAAMA,KAAI,CAAC;AAMnE,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,SAASN,cAAa,IAAI,EAAE,OAAOA,cAAa,IAAI,CAAC,CAAC;AAMpG,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,SAAS,UAAU,MAAM,IAAI,CAAC;AAgDpF,IAAM,eAAe,UAAQ,KAAK,WAAW;AAgB7C,IAAM,uBAAuB;AAoC7B,IAAM,0BAA0B;AAShC,IAAM,eAAe,CAAC,GAAG0C,QAAO,IAAI,KAAK,KAAKA,IAAG;AASjD,IAAM,MAAmB,qBAAK,GAAG,CAAC,MAAM,UAAU;AAChD,QAAM,IAAI,KAAK,MAAM,KAAK;AAC1B,SAAO,aAAa,GAAG,IAAI,IAAIF,MAAK,IAAInB,MAAO,KAAK,CAAC,CAAC;AACxD,CAAC;AAQD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,UAAU;AACtD,QAAM,IAAI,KAAK,MAAM,KAAK;AAC1B,MAAI,aAAa,GAAG,IAAI,GAAG;AACzB,UAAM,IAAI,MAAM,SAAS,CAAC,gBAAgB;AAAA,EAC5C;AACA,SAAO,KAAK,CAAC;AACf,CAAC;AAwBD,IAAM,OAAoB,oBAAI,CAAC;AAM/B,IAAM,eAA4B,0BAAU,CAAC;AAQ7C,IAAM,OAAO,UAAQ,wBAAwB,IAAI,IAAIA,MAAO,aAAa,IAAI,CAAC,IAAImB,MAAK;AAMvF,IAAM,eAAe,UAAQ,KAAK,KAAK,SAAS,CAAC;AAiBjD,IAAM,eAAe,UAAQ,KAAK,MAAM,CAAC;AA8HzC,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC/D,MAAI,IAAI;AACR,aAAW,KAAK,MAAM;AACpB,QAAI,UAAU,CAAC,GAAG;AAChB,aAAOnB,MAAO,CAAC;AAAA,IACjB;AACA;AAAA,EACF;AACA,SAAOmB,MAAK;AACd,CAAC;AAQD,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC9D,QAAM7J,SAAQqH,cAAa,IAAI;AAC/B,WAAS,IAAIrH,OAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,QAAI,UAAUA,OAAM,CAAC,CAAC,GAAG;AACvB,aAAO0I,MAAO,CAAC;AAAA,IACjB;AAAA,EACF;AACA,SAAOmB,MAAK;AACd,CAAC;AASD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC1D,QAAM7J,SAAQqH,cAAa,IAAI;AAC/B,WAAS,IAAI,GAAG,IAAIrH,OAAM,QAAQ,KAAK;AACrC,QAAI,UAAUA,OAAM,CAAC,CAAC,GAAG;AACvB,aAAO0I,MAAO1I,OAAM,CAAC,CAAC;AAAA,IACxB;AAAA,EACF;AACA,SAAO6J,MAAK;AACd,CAAC;AAQD,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,cAAc;AACzD,QAAM7J,SAAQqH,cAAa,IAAI;AAC/B,WAAS,IAAIrH,OAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,QAAI,UAAUA,OAAM,CAAC,CAAC,GAAG;AACvB,aAAO0I,MAAO1I,OAAM,CAAC,CAAC;AAAA,IACxB;AAAA,EACF;AACA,SAAO6J,MAAK;AACd,CAAC;AA6CD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM;AACxD,QAAM,MAAM,MAAM,KAAK,IAAI;AAC3B,MAAI,aAAa,GAAG,GAAG,GAAG;AACxB,WAAOA,MAAK;AAAA,EACd;AACA,QAAM/H,QAAO,EAAE,IAAI,CAAC,CAAC;AAErB,MAAI,CAAC,IAAIA;AACT,SAAO4G,MAAO,GAAG;AACnB,CAAC;AAQD,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC/C,QAAM,MAAM,MAAM,KAAK,IAAI;AAC3B,MAAI,aAAa,GAAG,GAAG,GAAG;AACxB,WAAO;AAAA,EACT;AACA,MAAI,OAAO,GAAG,CAAC;AACf,SAAO;AACT,CAAC;AAQD,IAAMF,WAAU,UAAQ,MAAM,KAAK,IAAI,EAAE,QAAQ;AAcjD,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC7C,QAAM,MAAM,MAAM,KAAK,IAAI;AAC3B,MAAI,KAAK,CAAC;AACV,SAAO;AACT,CAAC;AAyCD,IAAM,MAAmB,qBAAK,GAAG,CAAC,MAAM,SAASU,SAAQ,MAAM,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAQtF,IAAMA,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM;AACtD,QAAMa,MAAK1C,cAAa,IAAI;AAC5B,QAAM,KAAKA,cAAa,IAAI;AAC5B,SAAO,wBAAwB0C,GAAE,KAAK,wBAAwB,EAAE,IAAI,gBAAgB,IAAI,CAAC,EAAEA,GAAE,IAAI,CAAC;AACpG,CAAC;AAUD,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM;AAC9D,QAAM,KAAK,CAAC,EAAE,aAAa,IAAI,GAAG,aAAa,IAAI,CAAC,CAAC;AACrD,QAAM,MAAM,KAAK,IAAI,KAAK,QAAQ,KAAK,MAAM;AAC7C,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,OAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,EAC5B;AACA,SAAO;AACT,CAAC;AAOD,IAAM,QAAQ,UAAQ;AACpB,QAAM/J,SAAQqH,cAAa,IAAI;AAC/B,SAAO,wBAAwBrH,MAAK,IAAI,cAAcA,MAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACxE;AAKA,IAAM,gBAAgB,UAAQ;AAC5B,QAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACtB,QAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACtB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,OAAG,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;AACjB,OAAG,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;AAAA,EACnB;AACA,SAAO,CAAC,IAAI,EAAE;AAChB;AA4FA,IAAMyG,gBAAe,kBAAgB,KAAK,GAAG,CAAC,MAAM,MAAM;AACxD,aAAW,KAAK,MAAM;AACpB,QAAI,aAAa,GAAG,CAAC,GAAG;AACtB,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT,CAAC;AACD,IAAM4E,gBAA4B,4BAAY;AAQ9C,IAAM7E,YAAwB,gBAAAC,cAAa4E,aAAY;AAOvD,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,iBAAiB;AACtE,QAAM,MAAM,CAAC,aAAa,IAAI,CAAC;AAC/B,QAAM,OAAO,aAAa,IAAI;AAC9B,aAAW,KAAK,MAAM;AACpB,QAAI,IAAI,MAAM,OAAK,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG;AACvC,UAAI,KAAK,CAAC;AAAA,IACZ;AAAA,EACF;AACA,SAAO;AACT,CAAC;AA8CD,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAChD,QAAMrL,SAAQ,MAAM,KAAK,IAAI;AAC7B,SAAO,KAAK,KAAK,wBAAwBA,MAAK,IAAI,gBAAgBA,QAAO,CAAC,IAAI,qBAAqBA,MAAK,IAAI,CAACA,QAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAGA,MAAK;AACtI,CAAC;AAKD,IAAM,OAAO,UAAQ,KAAK,MAAM;AAQhC,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACxD,QAAM,IAAI,KAAK,IAAI,GAAG,CAAC;AACvB,SAAO,KAAK,KAAK,SAAS,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAG,aAAa,IAAI,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC;AAC5G,CAAC;AAkFD,IAAM,YAAY,kBAAgB,KAAK,GAAG,CAAC,MAAM,SAAS;AACxD,QAAM,IAAIqH,cAAa,IAAI;AAC3B,QAAM,IAAIA,cAAa,IAAI;AAC3B,SAAO,wBAAwB,CAAC,KAAK,wBAAwB,CAAC,IAAI,kBAAkB,YAAY,EAAE,GAAG,CAAC,IAAI,wBAAwB,CAAC,IAAI,IAAI;AAC7I,CAAC;AAKD,IAAM,QAAqB,0BAAUgE,aAAY;AAKjD,IAAM,oBAAoB,kBAAgB;AACxC,QAAM3E,UAAS,mBAAmB,YAAY;AAC9C,SAAO,KAAK,GAAG,CAAC,MAAM,SAASA,QAAO,kBAAkB,MAAM,IAAI,CAAC,CAAC;AACtE;AAaA,IAAM,mBAAmB,kBAAgB;AACvC,QAAM4E,OAAM7E,cAAa,YAAY;AACrC,SAAO,KAAK,GAAG,CAAC,MAAM,SAASY,cAAa,IAAI,EAAE,OAAO,OAAKiE,KAAI,MAAM,CAAC,CAAC,CAAC;AAC7E;AAQA,IAAM,eAA4B,iCAAiBD,aAAY;AAyB/D,IAAM,QAAQ,MAAM,CAAC;AAQrB,IAAM,KAAK,OAAK,CAAC,CAAC;AAUlB,IAAMvD,OAAmB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,IAAI,CAAC,CAAC;AAMzD,IAAMX,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAChD,MAAI,qBAAqB,IAAI,GAAG;AAC9B,WAAO,CAAC;AAAA,EACV;AACA,QAAM,MAAM,CAAC;AACb,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,QAAI,KAAK,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,EAC3B;AACA,SAAO;AACT,CAAC;AAYD,IAAMC,WAAuB,gBAAAD,SAAQ,QAAQ;AAY7C,IAAMN,aAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAClD,QAAMkD,MAAK1C,cAAa,IAAI;AAC5B,QAAM,MAAM,CAAC;AACb,WAAS,IAAI,GAAG,IAAI0C,IAAG,QAAQ,KAAK;AAClC,UAAM,IAAI,EAAEA,IAAG,CAAC,GAAG,CAAC;AACpB,QAAIH,QAAO,CAAC,GAAG;AACb,UAAI,KAAK,EAAE,KAAK;AAAA,IAClB;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAQD,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACvD,QAAM,MAAM,CAAC;AACb,aAAW,KAAK,MAAM;AACpB,UAAM,IAAI,EAAE,CAAC;AACb,QAAIA,QAAO,CAAC,GAAG;AACb,UAAI,KAAK,EAAE,KAAK;AAAA,IAClB,OAAO;AACL;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAMD,IAAMzB,gBAA4B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACrD,QAAM8B,QAAO,CAAC;AACd,QAAMC,SAAQ,CAAC;AACf,QAAMH,MAAK1C,cAAa,IAAI;AAC5B,WAAS,IAAI,GAAG,IAAI0C,IAAG,QAAQ,KAAK;AAClC,UAAM,IAAI,EAAEA,IAAG,CAAC,GAAG,CAAC;AACpB,QAAIkB,QAAO,CAAC,GAAG;AACb,MAAAhB,MAAK,KAAK,EAAE,IAAI;AAAA,IAClB,OAAO;AACL,MAAAC,OAAM,KAAK,EAAE,KAAK;AAAA,IACpB;AAAA,EACF;AACA,SAAO,CAACD,OAAMC,MAAK;AACrB,CAAC;AAMD,IAAM,UAAuB,gBAAArD,WAAU,QAAQ;AAqB/C,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC1D,QAAMoD,QAAO,CAAC;AACd,QAAMC,SAAQ,CAAC;AACf,QAAMH,MAAK1C,cAAa,IAAI;AAC5B,WAAS,IAAI,GAAG,IAAI0C,IAAG,QAAQ,KAAK;AAClC,QAAI,UAAUA,IAAG,CAAC,GAAG,CAAC,GAAG;AACvB,MAAAG,OAAM,KAAKH,IAAG,CAAC,CAAC;AAAA,IAClB,OAAO;AACL,MAAAE,MAAK,KAAKF,IAAG,CAAC,CAAC;AAAA,IACjB;AAAA,EACF;AACA,SAAO,CAACE,OAAMC,MAAK;AACrB,CAAC;AAMD,IAAM,WAAwB,gBAAA/B,cAAa,QAAQ;AAMnD,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAMd,cAAa,IAAI,EAAE,OAAO,CAACkE,IAAG,GAAG,MAAM,EAAEA,IAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAMzG,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAMlE,cAAa,IAAI,EAAE,YAAY,CAACkE,IAAG,GAAG,MAAM,EAAEA,IAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AA4EnH,IAAM,SAAS,CAAC,GAAG,MAAM;AACvB,QAAM,MAAM,CAAC;AACb,MAAIzJ,QAAO;AACX,MAAI;AACJ,SAAO8H,QAAO,IAAI,EAAE9H,KAAI,CAAC,GAAG;AAC1B,UAAM,CAAC,GAAGyJ,EAAC,IAAI,EAAE;AACjB,QAAI,KAAK,CAAC;AACV,IAAAzJ,QAAOyJ;AAAA,EACT;AACA,SAAO;AACT;AAiBA,IAAMhE,kBAAiB8B;AAcvB,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,iBAAiB;AAC9D,QAAMrJ,SAAQqH,cAAa,IAAI;AAC/B,SAAO,wBAAwBrH,MAAK,IAAI,mBAAmB,YAAY,EAAEA,MAAK,IAAI,CAAC;AACrF,CAAC;AAOD,IAAM,SAAsB,2BAAyB,4BAAY,CAAC;AAOlE,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,iBAAiB;AACtE,QAAM,MAAM,CAAC;AACb,MAAI,QAAQ6J,MAAK;AACjB,aAAW,KAAK,MAAM;AACpB,QAAIH,QAAO,KAAK,KAAK,CAAC,aAAa,GAAG,MAAM,KAAK,GAAG;AAClD,UAAI,KAAK,CAAC;AACV,cAAQhB,MAAO,CAAC;AAAA,IAClB;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAOD,IAAM,iBAA8B,mCAAiC,4BAAY,CAAC;AAQlF,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,QAAQrB,cAAa,IAAI,EAAE,KAAK,GAAG,CAAC;AAQ7E,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM;AACpD,MAAI,KAAK;AACT,QAAM,MAAM,CAAC;AACb,aAAW,KAAK,MAAM;AACpB,UAAM,IAAI,EAAE,IAAI,CAAC;AACjB,SAAK,EAAE,CAAC;AACR,QAAI,KAAK,EAAE,CAAC,CAAC;AAAA,EACf;AACA,SAAO,CAAC,IAAI,GAAG;AACjB,CAAC;;;ApBl4CD,IAAMiC,UAAsB,uBAAO,IAAI,cAAc;AAsBrD,SAASkC,MAAK,KAAK,QAAQ,MAAM,SAAS,KAAK;AAC7C,WAAS,IAAI,QAAQ,IAAI,KAAK,IAAI,IAAI,QAAQ,SAAS,GAAG,GAAG,KAAK;AAChE,SAAK,UAAU,IAAI,MAAM,IAAI,IAAI,CAAC;AAAA,EACpC;AACA,SAAO;AACT;AACA,IAAM,aAAa,CAAC;AAQpB,IAAMjE,kBAAiB,kBAAgB,KAAO,CAAC,MAAM,SAAS,KAAK,WAAW,KAAK,UAAU,gBAAgB,IAAI,EAAE,MAAM,CAAC9K,QAAO,MAAM,aAAaA,QAAOsM,WAAU,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/K,IAAMsC,gBAA4B,gBAAA9D,gBAAe,MAAM;AACvD,IAAM,aAAa;AAAA,EACjB,CAAC+B,OAAM,GAAG;AAAA,IACR,IAAI,OAAK;AAAA,EACX;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,gBAAgB,IAAI,EAAE,IAAI,MAAM;AAAA,IAC1C;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,CAACnF,OAAM,EAAE,MAAM;AACb,WAAO,QAAQ,IAAI,KAAKkH,cAAa,MAAM,IAAI;AAAA,EACjD;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,MAAM,gBAAgB,IAAI,CAAC;AAAA,EACpC;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,YAAQ,KAAK,QAAQ,MAAM;AAAA,MACzB,KAAK,UACH;AACE,eAAO,KAAK,QAAQ,MAAM,OAAO,QAAQ,EAAE;AAAA,MAC7C;AAAA,MACF,KAAK,UACH;AACE,eAAO,WAAW,OAAO,QAAQ,EAAE;AAAA,MACrC;AAAA,MACF,SACE;AACE,eAAO,gBAAgB,IAAI,EAAE,OAAO,QAAQ,EAAE;AAAA,MAChD;AAAA,IACJ;AAAA,EACF;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAM,YAAY,aAAW;AAC3B,QAAMtM,SAAQ,OAAO,OAAO,UAAU;AACtC,EAAAA,OAAM,UAAU;AAChB,UAAQ,QAAQ,MAAM;AAAA,IACpB,KAAK,UACH;AACE,MAAAA,OAAM,SAAS;AACf,MAAAA,OAAM,QAAQ;AACd,MAAAA,OAAM,OAAOA;AACb,MAAAA,OAAM,QAAQA;AACd;AAAA,IACF;AAAA,IACF,KAAK,WACH;AACE,MAAAA,OAAM,SAAS,QAAQ,KAAK,SAAS,QAAQ,MAAM;AACnD,MAAAA,OAAM,QAAQ,IAAI,KAAK,IAAI,QAAQ,KAAK,OAAO,QAAQ,MAAM,KAAK;AAClE,MAAAA,OAAM,OAAO,QAAQ;AACrB,MAAAA,OAAM,QAAQ,QAAQ;AACtB;AAAA,IACF;AAAA,IACF,KAAK,UACH;AACE,MAAAA,OAAM,SAAS,QAAQ,MAAM;AAC7B,MAAAA,OAAM,QAAQ;AACd,MAAAA,OAAM,OAAO;AACb,MAAAA,OAAM,QAAQ;AACd;AAAA,IACF;AAAA,IACF,KAAK,cACH;AACE,MAAAA,OAAM,SAAS;AACf,MAAAA,OAAM,QAAQ;AACd,MAAAA,OAAM,OAAO;AACb,MAAAA,OAAM,QAAQ;AACd;AAAA,IACF;AAAA,IACF,KAAK,UACH;AACE,MAAAA,OAAM,SAAS,QAAQ;AACvB,MAAAA,OAAM,QAAQ,QAAQ,MAAM,QAAQ;AACpC,MAAAA,OAAM,OAAO;AACb,MAAAA,OAAM,QAAQ;AACd;AAAA,IACF;AAAA,EACJ;AACA,SAAOA;AACT;AAQA,IAAM,UAAU,OAAK,YAAY,GAAGuK,OAAM;AAC1C,IAAM,SAAsB,0BAAU;AAAA,EACpC,MAAM;AACR,CAAC;AAMD,IAAMzJ,SAAQ,MAAM;AAQpB,IAAM+H,QAAO,IAAImC,QAAOA,IAAG,WAAW,IAAI9B,IAAG8B,IAAG,CAAC,CAAC,IAAI,wBAAwBA,GAAE;AAQhF,IAAM9B,MAAK,OAAK,UAAU;AAAA,EACxB,MAAM;AAAA,EACN;AACF,CAAC;AAQD,IAAMZ,gBAAe,UAAQ,QAAQ,IAAI,IAAI,OAAO,UAAU;AAAA,EAC5D,MAAM;AAAA,EACN,OAAOA,cAAe,IAAI;AAC5B,CAAC;AACD,IAAM,cAAc,CAAC,MAAMgC,QAAO,YAAY;AAC5C,UAAQ,KAAK,QAAQ,MAAM;AAAA,IACzB,KAAK,UACH;AACE,MAAAmC,MAAK,KAAK,QAAQ,OAAO,GAAGnC,QAAO,SAAS,KAAK,MAAM;AACvD;AAAA,IACF;AAAA,IACF,KAAK,WACH;AACE,kBAAY,KAAK,MAAMA,QAAO,OAAO;AACrC,kBAAY,KAAK,OAAOA,QAAO,UAAU,KAAK,KAAK,MAAM;AACzD;AAAA,IACF;AAAA,IACF,KAAK,cACH;AACE,MAAAA,OAAM,OAAO,IAAI,KAAK,QAAQ;AAC9B;AAAA,IACF;AAAA,IACF,KAAK,UACH;AACE,UAAI,IAAI;AACR,UAAI,IAAI;AACR,aAAO,IAAI,KAAK,QAAQ;AACtB,QAAAA,OAAM,CAAC,IAAIN,WAAU,MAAM,CAAC;AAC5B,aAAK;AACL,aAAK;AAAA,MACP;AACA;AAAA,IACF;AAAA,EACJ;AACF;AAQA,IAAM,kBAAkB,UAAQ;AAC9B,UAAQ,KAAK,QAAQ,MAAM;AAAA,IACzB,KAAK,UACH;AACE,aAAO;AAAA,IACT;AAAA,IACF,KAAK,UACH;AACE,aAAO,KAAK,QAAQ;AAAA,IACtB;AAAA,IACF,SACE;AACE,YAAM,MAAM,IAAI,MAAM,KAAK,MAAM;AACjC,kBAAY,MAAM,KAAK,CAAC;AACxB,WAAK,UAAU;AAAA,QACb,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AACA,WAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,QAAQ;AACb,aAAO;AAAA,IACT;AAAA,EACJ;AACF;AAMA,IAAMP,WAAU,UAAQ;AACtB,UAAQ,KAAK,QAAQ,MAAM;AAAA,IACzB,KAAK;AAAA,IACL,KAAK;AACH,aAAO;AAAA,IACT,KAAK,UACH;AACE,aAAO,UAAU;AAAA,QACf,MAAM;AAAA,QACN,OAAOA,SAAU,KAAK,QAAQ,KAAK;AAAA,MACrC,CAAC;AAAA,IACH;AAAA,IACF,KAAK,WACH;AACE,aAAO,UAAU;AAAA,QACf,MAAM;AAAA,QACN,MAAMA,SAAQ,KAAK,QAAQ,KAAK;AAAA,QAChC,OAAOA,SAAQ,KAAK,QAAQ,IAAI;AAAA,MAClC,CAAC;AAAA,IACH;AAAA,IACF,KAAK;AACH,aAAO,gBAAgBA,SAAU,gBAAgB,IAAI,CAAC,CAAC;AAAA,EAC3D;AACF;AAQA,IAAMlB,OAAmB,qBAAK,GAAG,CAAC,MAAM,UAAU,QAAQ,KAAK,SAAS,KAAK,SAASuC,MAAK,IAAInB,MAAOK,WAAU,MAAM,KAAK,CAAC,CAAC;AAQ7H,IAAM,kBAAkB,UAAQ,UAAU;AAAA,EACxC,MAAM;AAAA,EACN,OAAO;AACT,CAAC;AAQD,IAAM,0BAA0B,UAAQ,gBAAgB,IAAI;AAQ5D,IAAMA,aAAyB,qBAAK,GAAG,CAAC,MAAM,UAAU;AACtD,UAAQ,KAAK,QAAQ,MAAM;AAAA,IACzB,KAAK,UACH;AACE,YAAM,IAAI,MAAM,qBAAqB;AAAA,IACvC;AAAA,IACF,KAAK,cACH;AACE,UAAI,UAAU,GAAG;AACf,cAAM,IAAI,MAAM,qBAAqB;AAAA,MACvC;AACA,aAAO,KAAK,QAAQ;AAAA,IACtB;AAAA,IACF,KAAK,UACH;AACE,UAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AACrC,cAAM,IAAI,MAAM,qBAAqB;AAAA,MACvC;AACA,aAAO,KAAK,QAAQ,MAAM,KAAK;AAAA,IACjC;AAAA,IACF,KAAK,WACH;AACE,aAAO,QAAQ,KAAK,KAAK,SAASA,WAAU,KAAK,MAAM,KAAK,IAAIA,WAAU,KAAK,OAAO,QAAQ,KAAK,KAAK,MAAM;AAAA,IAChH;AAAA,IACF,KAAK,UACH;AACE,aAAOA,WAAU,KAAK,QAAQ,OAAO,QAAQ,KAAK,QAAQ,MAAM;AAAA,IAClE;AAAA,EACJ;AACF,CAAC;AAQD,IAAM3C,UAAsB,qBAAK,GAAG,CAAC,MAAM,MAAME,mBAAkB,MAAM2B,IAAG,CAAC,CAAC,CAAC;AAQ/E,IAAMG,WAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS9B,mBAAkB2B,IAAG,IAAI,GAAG,IAAI,CAAC;AAOtF,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC7C,MAAI,KAAK,GAAG;AACV,WAAO;AAAA,EACT,WAAW,KAAK,KAAK,QAAQ;AAC3B,WAAO;AAAA,EACT,OAAO;AACL,YAAQ,KAAK,QAAQ,MAAM;AAAA,MACzB,KAAK,UACH;AACE,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,OAAO,KAAK,QAAQ;AAAA,UACpB,QAAQ;AAAA,UACR,QAAQ,KAAK,QAAQ;AAAA,QACvB,CAAC;AAAA,MACH;AAAA,MACF,KAAK,WACH;AACE,YAAI,IAAI,KAAK,KAAK,QAAQ;AACxB,iBAAO,UAAU;AAAA,YACf,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,OAAO,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,MAAM;AAAA,UAC9C,CAAC;AAAA,QACH;AACA,eAAO,KAAK,KAAK,MAAM,CAAC;AAAA,MAC1B;AAAA,MACF,SACE;AACE,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACV,CAAC;AAAA,MACH;AAAA,IACJ;AAAA,EACF;AACF,CAAC;AAOD,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC7C,MAAI,KAAK,GAAG;AACV,WAAO;AAAA,EACT,WAAW,KAAK,KAAK,QAAQ;AAC3B,WAAO;AAAA,EACT,OAAO;AACL,YAAQ,KAAK,QAAQ,MAAM;AAAA,MACzB,KAAK,UACH;AACE,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,OAAO,KAAK,QAAQ;AAAA,UACpB,QAAQ,KAAK,QAAQ,SAAS;AAAA,UAC9B,QAAQ,KAAK,QAAQ,SAAS;AAAA,QAChC,CAAC;AAAA,MACH;AAAA,MACF,KAAK,WACH;AACE,YAAI,IAAI,KAAK,KAAK,QAAQ;AACxB,iBAAO,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,MAAM;AAAA,QAC9C;AACA,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,MAAM,KAAK,KAAK,MAAM,CAAC;AAAA,UACvB,OAAO,KAAK;AAAA,QACd,CAAC;AAAA,MACH;AAAA,MACF,SACE;AACE,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ,KAAK,SAAS;AAAA,QACxB,CAAC;AAAA,MACH;AAAA,IACJ;AAAA,EACF;AACF,CAAC;AAOD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM,KAAK,IAAI,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;AAO5F,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAClD,QAAM,MAAM,gBAAgB,IAAI;AAChC,QAAM,MAAM,IAAI;AAChB,MAAI,IAAI;AACR,SAAO,IAAI,OAAO,EAAE,IAAI,CAAC,CAAC,GAAG;AAC3B;AAAA,EACF;AACA,SAAO,KAAK,MAAM,CAAC;AACrB,CAAC;AAMD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,SAAS5B,WAAU,MAAM,IAAI,CAAC;AAM7E,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,SAAS,WAAW,MAAM,IAAI,CAAC;AAQtF,IAAMA,aAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS;AACrD,MAAI,KAAK,QAAQ,SAAS,UAAU;AAClC,WAAO;AAAA,EACT;AACA,MAAI,KAAK,QAAQ,SAAS,UAAU;AAClC,WAAO;AAAA,EACT;AACA,QAAMoF,QAAO,KAAK,QAAQ,KAAK;AAC/B,MAAI,KAAK,IAAIA,KAAI,KAAK,GAAG;AACvB,WAAO,UAAU;AAAA,MACf,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT,CAAC;AAAA,EACH,WAAWA,QAAO,IAAI;AACpB,QAAI,KAAK,KAAK,SAAS,KAAK,MAAM,OAAO;AACvC,YAAM,KAAKpF,WAAU,KAAK,OAAO,IAAI;AACrC,aAAO,UAAU;AAAA,QACf,MAAM;AAAA,QACN,MAAM,KAAK;AAAA,QACX,OAAO;AAAA,MACT,CAAC;AAAA,IACH,OAAO;AACL,YAAM,MAAMA,WAAU,KAAK,MAAM,OAAO,IAAI;AAC5C,UAAI,IAAI,UAAU,KAAK,QAAQ,GAAG;AAChC,cAAM,KAAK,UAAU;AAAA,UACnB,MAAM;AAAA,UACN,MAAM,KAAK,MAAM;AAAA,UACjB,OAAO;AAAA,QACT,CAAC;AACD,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,OAAO;AAAA,QACT,CAAC;AAAA,MACH,OAAO;AACL,cAAM,KAAK,UAAU;AAAA,UACnB,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,OAAO,KAAK,MAAM;AAAA,QACpB,CAAC;AACD,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,OAAO;AACL,QAAI,KAAK,MAAM,SAAS,KAAK,KAAK,OAAO;AACvC,YAAM,KAAKA,WAAU,MAAM,KAAK,IAAI;AACpC,aAAO,UAAU;AAAA,QACf,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO,KAAK;AAAA,MACd,CAAC;AAAA,IACH,OAAO;AACL,YAAM,MAAMA,WAAU,MAAM,KAAK,KAAK,IAAI;AAC1C,UAAI,IAAI,UAAU,KAAK,QAAQ,GAAG;AAChC,cAAM,KAAK,UAAU;AAAA,UACnB,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO,KAAK,KAAK;AAAA,QACnB,CAAC;AACD,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO,KAAK;AAAA,QACd,CAAC;AAAA,MACH,OAAO;AACL,cAAM,KAAK,UAAU;AAAA,UACnB,MAAM;AAAA,UACN,MAAM,KAAK,KAAK;AAAA,UAChB,OAAO,KAAK;AAAA,QACd,CAAC;AACD,eAAO,UAAU;AAAA,UACf,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAMD,IAAMC,qBAAiC,qBAAK,GAAG,CAAC,MAAM,SAASD,WAAU,MAAM,IAAI,CAAC;AAQpF,IAAMQ,aAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,gBAAgBA,WAAY,MAAM,CAAC,CAAC,CAAC;AAQzF,IAAMD,UAAsB,qBAAK,GAAG,CAAC,MAAM,cAAc,gBAAgBC,WAAY,MAAM,cAAc,SAAS,CAAC,CAAC,CAAC;AAQrH,IAAMC,kBAA8B,qBAAK,GAAG,CAAC,MAAM,MAAM,gBAAgB,eAAiB,MAAM,CAAC,CAAC,CAAC;AAQnG,IAAMP,WAAU,UAAQM,WAAU,MAAM,QAAQ;AAQhD,IAAMM,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAChD,MAAI,KAAK,QAAQ,SAAS,cAAc;AACtC,WAAO,EAAE,KAAK,QAAQ,GAAG,CAAC;AAAA,EAC5B;AACA,MAAI,MAAM;AACV,MAAI,IAAI;AACR,aAAW,KAAK,MAAM;AACpB,UAAMd,WAAU,KAAK,EAAE,GAAG,GAAG,CAAC;AAAA,EAChC;AACA,SAAO;AACT,CAAC;AAMD,IAAM,kBAAkBc;AAQxB,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,gBAAgB,IAAI,EAAE,QAAQ,CAAC,CAAC;AAQlF,IAAMC,WAAuB,gBAAAD,SAAQ,QAAQ;AAM7C,IAAM,kBAA+B,gCAAgB,QAAQ;AAQ7D,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM;AACjD,QAAM,KAAK,CAAC;AACZ,MAAIjH,WAAU,CAAC;AACf,kBAAgB,IAAI,EAAE,QAAQ,OAAK;AACjC,IAAAA,SAAQ,KAAK,CAAC;AACd,QAAIA,SAAQ,UAAU,GAAG;AACvB,SAAG,KAAK,gBAAgBA,QAAO,CAAC;AAChC,MAAAA,WAAU,CAAC;AAAA,IACb;AAAA,EACF,CAAC;AACD,MAAIA,SAAQ,SAAS,GAAG;AACtB,OAAG,KAAK,gBAAgBA,QAAO,CAAC;AAAA,EAClC;AACA,SAAO,gBAAgB,EAAE;AAC3B,CAAC;AAUD,IAAMuH,gBAA4B,qBAAK,GAAG,CAAC,MAAM,SAAS,gBAAgB,aAAe,gBAAgB,IAAI,GAAG,gBAAgB,IAAI,CAAC,CAAC,CAAC;AAQvI,IAAM,UAAU,UAAQ,KAAK,WAAW;AAQxC,IAAM,aAAa,UAAQ,KAAK,SAAS;AAQzC,IAAMtJ,QAAoB,gBAAAmJ,KAAI,CAAC;AAQ/B,IAAM,aAAa,UAAQyB,WAAU,MAAM,CAAC;AAQ5C,IAAMvB,gBAAe;AAQrB,IAAMG,QAAO,UAAQL,KAAI,MAAM,KAAK,SAAS,CAAC;AAQ9C,IAAM,aAAa,UAAQyB,WAAU,MAAM,KAAK,SAAS,CAAC;AAY1D,IAAMjB,OAAmB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,QAAQ,SAAS,eAAeG,IAAG,EAAE,KAAK,QAAQ,GAAG,CAAC,CAAC,IAAI,gBAAgB,KAAK,gBAAgB,IAAI,GAAGH,KAAM,CAAC,GAAG,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAQpL,IAAMC,YAAwB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM;AACpD,QAAM,CAAC,IAAIgC,GAAE,IAAI,SAAW,MAAM,GAAG,CAAC;AACtC,SAAO,CAAC,IAAI,gBAAgBA,GAAE,CAAC;AACjC,CAAC;AAQD,IAAM7B,aAAyB,qBAAK,GAAG,CAAC,MAAM,cAAc,KAAK,UAAY,gBAAgB,IAAI,GAAG,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAQrK,IAAMC,gBAA4B,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAKA,cAAe,gBAAgB,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAQ3J,IAAMM,YAAW,UAAQ,KAAK,SAAW,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAQrH,IAAM,OAAO,UAAQ,KAAK;AAQ1B,IAAME,QAAoB,qBAAK,GAAG,CAAC,MAAM,MAAM,gBAAgB,KAAO,gBAAgB,IAAI,GAAG,CAAC,CAAC,CAAC;AAMhG,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,GAAG,UAAUA,MAAK,MAAMyB,UAAS,OAAO,CAAC,CAAC,CAAC;AAQxF,IAAMxB,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,CAAC,KAAK,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC;AAQhF,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAM,MAAM,SAAS,MAAM,KAAK,KAAK,KAAK,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;AAQtG,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC3D,MAAI,IAAI;AACR,aAAW,KAAK,gBAAgB,IAAI,GAAG;AACrC,QAAI,UAAU,CAAC,GAAG;AAChB;AAAA,IACF,OAAO;AACL;AAAA,IACF;AAAA,EACF;AACA,SAAOA,SAAQ,MAAM,CAAC;AACxB,CAAC;AAQD,IAAM,OAAO,UAAQ,KAAK,SAAS,IAAIF,MAAO,KAAK,MAAM,CAAC,CAAC,IAAImB,MAAK;AAQpE,IAAMhB,gBAAe,UAAQ,KAAK,MAAM,CAAC;AAQzC,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM,KAAK,SAAS,CAAC,CAAC;AAQ/E,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC1D,QAAM,MAAM,CAAC;AACb,aAAW,KAAK,gBAAgB,IAAI,GAAG;AACrC,QAAI,UAAU,CAAC,GAAG;AAChB,UAAI,KAAK,CAAC;AAAA,IACZ,OAAO;AACL;AAAA,IACF;AAAA,EACF;AACA,SAAO,gBAAgB,GAAG;AAC5B,CAAC;AAQD,IAAMC,SAAqB,qBAAK,GAAG,CAAC,MAAM,SAAS,gBAAgB,MAAQ,gBAAgB,IAAI,GAAG,gBAAgB,IAAI,CAAC,CAAC,CAAC;AAQzH,IAAMpC,UAAS,UAAQ,gBAAgB,OAAS,gBAAgB,IAAI,CAAC,CAAC;AAQtE,IAAMC,kBAAiB,UAAQ,gBAAgB,eAAiB,IAAI,CAAC;AAUrE,IAAMqC,SAAQ,UAAQ;AACpB,QAAM,CAACiB,OAAMC,MAAK,IAAI,MAAQ,IAAI;AAClC,SAAO,CAAC,gBAAgBD,KAAI,GAAG,gBAAgBC,MAAK,CAAC;AACvD;AAQA,IAAMhB,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM,gBAAgBA,SAAU,MAAM,MAAM,CAAC,CAAC,CAAC;AAQjG,IAAMD,OAAmB,qBAAK,GAAG,CAAC,MAAM,SAASC,SAAQ,MAAM,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAQtF,IAAMX,UAAsB,qBAAK,GAAG,CAAC,MAAM,MAAM,gBAAgB,OAAS,gBAAgB,IAAI,GAAG,CAAC,CAAC,CAAC;AAKpG,IAAMP,gBAA4B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,IAAM,aAAe,gBAAgB,IAAI,GAAG,GAAG,CAAC,GAAG,eAAe,CAAC;AAQ7H,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,UAAUA,cAAa,MAAM,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC;AAQnG,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,OAAO,MAAM,GAAG,MAAM,CAAC,CAAC;AAK7E,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAMA,cAAa,MAAM,GAAG,MAAM,CAAC,CAAC;AAUzF,IAAMH,UAAsB,qBAAK,GAAG,CAAC,GAAG,MAAMR,cAAa,OAAS,GAAG,CAAC,CAAC,CAAC;AAQ1E,IAAM,QAAQ,CAACjI,QAAOC,SAAQD,UAASC,OAAMwI,QAAOxI,OAAMD,SAAQ,GAAG,OAAKA,SAAQ,CAAC,IAAI6I,IAAG7I,MAAK;AAY/F,IAAMoH,YAAWA;AAQjB,IAAMC,gBAAeA;AASrB,IAAMM,aAAY;AAQlB,IAAMC,kBAAiB;AAQvB,IAAMC,YAAW;AAQjB,IAAMC,iBAAgB;AAQtB,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAM,eAAeG,cAAe,IAAI,EAAE,MAAM,UAAU,CAAC;AAQ/F,IAAMqB,QAAoB,qBAAK,GAAG,CAAC,MAAM,cAAcrB,cAAe,IAAI,EAAE,KAAK,SAAS,CAAC;AAQ3F,IAAMK,QAAO;AAMb,IAAMW,UAAS;AAMf,IAAMC,eAAc;;;AqB5jCpB,IAAM,OAAO;AAGb,IAAM,cAA2B,qBAAK,IAAI,GAAG,IAAI;AAGjD,IAAM,OAAO,cAAc;AAG3B,IAAM,iBAAiB,cAAc;AAGrC,IAAM,iBAAiB,cAAc;;;ACJrC,SAAS,SAAS,GAAG;AACnB,OAAK,KAAK,IAAI;AACd,OAAK,IAAI,cAAe,KAAK,IAAI;AACjC,MAAI,KAAK,KAAK,KAAK;AACnB,OAAK,KAAK;AACV,OAAK,KAAK;AACV,SAAO,IAAI;AACb;AAGA,SAAS,aAAaoD,QAAO,GAAG;AAC9B,SAAO,MAAMA,SAAQ;AACvB;AAGA,SAAS,SAAS,GAAG;AACnB,SAAO,KAAK;AACd;AAGA,SAAS,WAAW,QAAQ,KAAK;AAC/B,SAAO,SAAS,SAAS,MAAM,CAAC;AAClC;;;AC9BA,SAAS,YAAYC,SAAQ,IAAI,GAAG,KAAK;AACvC,MAAI,MAAM;AACV,MAAI,CAACA,SAAQ;AACX,UAAM,MAAM,IAAI;AAChB,UAAM,IAAI,MAAM,GAAG;AACnB,aAAS,IAAI,GAAG,IAAI,KAAK,EAAE;AAAG,UAAI,CAAC,IAAI,IAAI,CAAC;AAAA,EAC9C;AACA,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAGA,SAAS,eAAeA,SAAQ,IAAI,KAAK;AACvC,QAAM,SAAS,IAAI,SAAS;AAC5B,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,MAAM;AACV,MAAIA,SAAQ;AACV,QAAI,IAAI;AAAA,EACV,OAAO;AACL,UAAM,IAAI,MAAM,MAAM;AACtB,WAAO,IAAI;AAAI,UAAI,GAAG,IAAI,IAAI,GAAG;AAAA,EACnC;AACA,IAAE;AACF,SAAO,KAAK;AAAQ,QAAI,GAAG,IAAI,IAAI,GAAG;AACtC,MAAIA,SAAQ;AACV,QAAI,SAAS;AAAA,EACf;AACA,SAAO;AACT;AAGA,SAAS,cAAcA,SAAQ,IAAI,GAAG,KAAK;AACzC,QAAM,MAAM,IAAI;AAChB,MAAIA,SAAQ;AACV,QAAIC,KAAI;AACR,WAAOA,MAAK;AAAI,UAAIA,IAAG,IAAI,IAAIA,EAAC;AAChC,QAAI,EAAE,IAAI;AACV,WAAO;AAAA,EACT;AACA,MAAI,IAAI,GACN,IAAI;AACN,QAAM,MAAM,IAAI,MAAM,MAAM,CAAC;AAC7B,SAAO,IAAI;AAAI,QAAI,GAAG,IAAI,IAAI,GAAG;AACjC,MAAI,EAAE,IAAI;AACV,SAAO,IAAI;AAAK,QAAI,EAAE,CAAC,IAAI,IAAI,GAAG;AAClC,SAAO;AACT;;;AC/CA,IAAM,QAAN,MAAY;AAAA,EACV,YAAYnP,QAAOwD,WAAU;AAC3B,SAAK,QAAQxD;AACb,SAAK,WAAWwD;AAAA,EAClB;AACF;;;ACOA,IAAM,YAAN,MAAM,WAAU;AAAA,EACd,OAAO;AAAA,EACP,OAAO,MAAM,QAAQ,GAAG/C,OAAM,KAAK8E,QAAM;AACvC,UAAM,IAAI,EAAE6H,MAAK,CAAC;AAClB,QAAIH,QAAO,CAAC;AAAG,aAAO,IAAI,WAAU;AACpC,MAAE1H,OAAK;AACP,WAAO,IAAI,SAAS,MAAM9E,OAAM,KAAK,CAAC;AAAA,EACxC;AACF;AAGA,SAAS,YAAY,GAAG;AACtB,SAAO,SAAS,GAAG,WAAW;AAChC;AAGA,SAAS,WAAW,MAAM;AACxB,SAAO,YAAY,IAAI,KAAK,KAAK,SAAS,cAAc,KAAK,SAAS;AACxE;AAGA,SAAS,YAAY,MAAM,MAAM;AAC/B,SAAO,YAAY,IAAI,IAAI,QAAQ,SAAS,KAAK;AACnD;AAGA,IAAM,WAAN,MAAM,UAAS;AAAA,EACb,OAAO;AAAA,EACP,YAAY,MAAMA,OAAM,KAAKT,QAAO;AAClC,SAAK,OAAO;AACZ,SAAK,OAAOS;AACZ,SAAK,MAAM;AACX,SAAK,QAAQT;AAAA,EACf;AAAA,EACA,OAAO,MAAMiP,QAAO,GAAGxO,OAAM,KAAK8E,QAAM;AACtC,QAAI,OAAO,KAAK,KAAK,GAAG,GAAG;AACzB,YAAM6J,KAAI,EAAE,KAAK,KAAK;AACtB,UAAIA,OAAM,KAAK;AAAO,eAAO;AAAA,eAAcnC,QAAOmC,EAAC,GAAG;AACpD,UAAE7J,OAAK;AACP,eAAO,IAAI,UAAU;AAAA,MACvB;AACA,UAAI,YAAY,MAAM,IAAI,GAAG;AAC3B,aAAK,QAAQ6J;AACb,eAAO;AAAA,MACT;AACA,aAAO,IAAI,UAAS,MAAM3O,OAAM,KAAK2O,EAAC;AAAA,IACxC;AACA,UAAM,IAAI,EAAEhC,MAAK,CAAC;AAClB,QAAIH,QAAO,CAAC;AAAG,aAAO;AACtB,MAAE1H,OAAK;AACP,WAAO,YAAY,MAAM0J,QAAO,KAAK,MAAM,MAAMxO,OAAM,IAAI,UAAS,MAAMA,OAAM,KAAK,CAAC,CAAC;AAAA,EACzF;AACF;AAGA,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,OAAO;AAAA,EACP,YAAY,MAAMA,OAAM4O,WAAU;AAChC,SAAK,OAAO;AACZ,SAAK,OAAO5O;AACZ,SAAK,WAAW4O;AAAA,EAClB;AAAA,EACA,OAAO,MAAMJ,QAAO,GAAGxO,OAAM,KAAK8E,QAAM;AACtC,QAAI9E,UAAS,KAAK,MAAM;AACtB,YAAM,UAAU,YAAY,MAAM,IAAI;AACtC,YAAM,OAAO,KAAK,oBAAoB,SAAS,MAAM,KAAK,MAAM,KAAK,UAAU,GAAG,KAAK8E,MAAI;AAC3F,UAAI,SAAS,KAAK;AAAU,eAAO;AACnC,aAAO,KAAK,SAAS,IAAI,IAAI,eAAc,MAAM,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC;AAAA,IAC5E;AAEA,UAAM,IAAI,EAAE6H,MAAK,CAAC;AAClB,QAAIH,QAAO,CAAC;AAAG,aAAO;AACtB,MAAE1H,OAAK;AACP,WAAO,YAAY,MAAM0J,QAAO,KAAK,MAAM,MAAMxO,OAAM,IAAI,SAAS,MAAMA,OAAM,KAAK,CAAC,CAAC;AAAA,EACzF;AAAA,EACA,oBAAoByO,SAAQ,MAAMzO,OAAM,MAAM,GAAG,KAAK8E,QAAM;AAC1D,UAAM,MAAM,KAAK;AACjB,aAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAM,QAAQ,KAAK,CAAC;AACpB,UAAI,SAAS,SAAS,OAAO,KAAK,MAAM,GAAG,GAAG;AAC5C,cAAMvF,SAAQ,MAAM;AACpB,cAAMsP,YAAW,EAAEtP,MAAK;AACxB,YAAIsP,cAAatP;AAAO,iBAAO;AAC/B,YAAIiN,QAAOqC,SAAQ,GAAG;AACpB,YAAE/J,OAAK;AACP,iBAAO,eAAe2J,SAAQ,GAAG,IAAI;AAAA,QACvC;AACA,eAAO,YAAYA,SAAQ,GAAG,IAAI,SAAS,MAAMzO,OAAM,KAAK6O,SAAQ,GAAG,IAAI;AAAA,MAC7E;AAAA,IACF;AACA,UAAM,WAAW,EAAElC,MAAK,CAAC;AACzB,QAAIH,QAAO,QAAQ;AAAG,aAAO;AAC7B,MAAE1H,OAAK;AACP,WAAO,YAAY2J,SAAQ,KAAK,IAAI,SAAS,MAAMzO,OAAM,KAAK,QAAQ,GAAG,IAAI;AAAA,EAC/E;AACF;AAGA,IAAM,cAAN,MAAM,aAAY;AAAA,EAChB,OAAO;AAAA,EACP,YAAY,MAAM,MAAM4O,WAAU;AAChC,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,WAAWA;AAAA,EAClB;AAAA,EACA,OAAO,MAAMJ,QAAO,GAAGxO,OAAM,KAAK8E,QAAM;AACtC,UAAM,OAAO,KAAK;AAClB,UAAM8J,YAAW,KAAK;AACtB,UAAM,OAAO,aAAaJ,QAAOxO,KAAI;AACrC,UAAM,MAAM,SAAS,IAAI;AACzB,UAAM,OAAO,WAAW,MAAM,GAAG;AACjC,UAAMM,UAAS,OAAO;AACtB,UAAM,UAAU,YAAY,MAAM,IAAI;AACtC,QAAI,CAACA,SAAQ;AACX,YAAM,YAAY,IAAI,UAAU,EAAE,OAAO,MAAMkO,SAAQ,MAAM,GAAGxO,OAAM,KAAK8E,MAAI;AAC/E,UAAI,CAAC;AAAW,eAAO;AACvB,aAAO8J,UAAS,UAAU,iBAAiB,OAAO,MAAM,MAAM,WAAW,MAAMA,SAAQ,IAAI,IAAI,aAAY,MAAM,OAAO,KAAK,cAAc,SAAS,MAAM,WAAWA,SAAQ,CAAC;AAAA,IAChL;AACA,UAAM5L,WAAU4L,UAAS,IAAI;AAC7B,UAAM,QAAQ5L,SAAQ,OAAO,MAAMwL,SAAQ,MAAM,GAAGxO,OAAM,KAAK8E,MAAI;AACnE,QAAI9B,aAAY;AAAO,aAAO;AAC9B,QAAI,SAAS;AACb,QAAI;AACJ,QAAI,YAAY,KAAK,GAAG;AAEtB,gBAAU,CAAC;AACX,UAAI,CAAC;AAAQ,eAAO,IAAI,UAAU;AAClC,UAAI4L,UAAS,UAAU,KAAK,WAAWA,UAAS,OAAO,CAAC,CAAC,GAAG;AAC1D,eAAOA,UAAS,OAAO,CAAC;AAAA,MAC1B;AAEA,oBAAc,eAAe,SAAS,MAAMA,SAAQ;AAAA,IACtD,OAAO;AAEL,oBAAc,YAAY,SAAS,MAAM,OAAOA,SAAQ;AAAA,IAC1D;AACA,QAAI,SAAS;AACX,WAAK,OAAO;AACZ,WAAK,WAAW;AAChB,aAAO;AAAA,IACT;AACA,WAAO,IAAI,aAAY,MAAM,QAAQ,WAAW;AAAA,EAClD;AACF;AAGA,IAAM,YAAN,MAAM,WAAU;AAAA,EACd,OAAO;AAAA,EACP,YAAY,MAAM9J,QAAM8J,WAAU;AAChC,SAAK,OAAO;AACZ,SAAK,OAAO9J;AACZ,SAAK,WAAW8J;AAAA,EAClB;AAAA,EACA,OAAO,MAAMJ,QAAO,GAAGxO,OAAM,KAAK8E,QAAM;AACtC,QAAImB,SAAQ,KAAK;AACjB,UAAM2I,YAAW,KAAK;AACtB,UAAM,OAAO,aAAaJ,QAAOxO,KAAI;AACrC,UAAM,QAAQ4O,UAAS,IAAI;AAC3B,UAAM,YAAY,SAAS,IAAI,UAAU,GAAG,OAAO,MAAMJ,SAAQ,MAAM,GAAGxO,OAAM,KAAK8E,MAAI;AACzF,QAAI,UAAU;AAAU,aAAO;AAC/B,UAAM,UAAU,YAAY,MAAM,IAAI;AACtC,QAAI;AACJ,QAAI,YAAY,KAAK,KAAK,CAAC,YAAY,QAAQ,GAAG;AAChD,QAAEmB;AACF,oBAAc,YAAY,SAAS,MAAM,UAAU2I,SAAQ;AAAA,IAC7D,WAAW,CAAC,YAAY,KAAK,KAAK,YAAY,QAAQ,GAAG;AACvD,QAAE3I;AACF,UAAIA,UAAS,gBAAgB;AAC3B,eAAO,KAAK,MAAMA,QAAO,MAAM2I,SAAQ;AAAA,MACzC;AACA,oBAAc,YAAY,SAAS,MAAM,IAAI,UAAU,GAAGA,SAAQ;AAAA,IACpE,OAAO;AAEL,oBAAc,YAAY,SAAS,MAAM,UAAUA,SAAQ;AAAA,IAC7D;AACA,QAAI,SAAS;AACX,WAAK,OAAO3I;AACZ,WAAK,WAAW;AAChB,aAAO;AAAA,IACT;AACA,WAAO,IAAI,WAAU,MAAMA,QAAO,WAAW;AAAA,EAC/C;AACF;AACA,SAAS,KAAK,MAAMA,QAAO,SAAS,UAAU;AAC5C,QAAM2I,YAAW,IAAI,MAAM3I,SAAQ,CAAC;AACpC,MAAI,IAAI;AACR,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,MAAM,SAAS,QAAQ,IAAI,KAAK,EAAE,GAAG;AACnD,QAAI,MAAM,SAAS;AACjB,YAAM,OAAO,SAAS,CAAC;AACvB,UAAI,QAAQ,CAAC,YAAY,IAAI,GAAG;AAC9B,QAAA2I,UAAS,GAAG,IAAI;AAChB,kBAAU,KAAK;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AACA,SAAO,IAAI,YAAY,MAAM,QAAQA,SAAQ;AAC/C;AACA,SAAS,OAAO,MAAM,MAAM,OAAO,QAAQ,UAAU;AACnD,QAAM,MAAM,CAAC;AACb,MAAI,MAAM;AACV,MAAI3I,SAAQ;AACZ,WAAS,IAAI,GAAG,KAAK,EAAE,GAAG;AACxB,QAAI,MAAM;AAAG,UAAI,CAAC,IAAI,SAASA,QAAO;AACtC,aAAS;AAAA,EACX;AACA,MAAI,IAAI,IAAI;AACZ,SAAO,IAAI,UAAU,MAAMA,SAAQ,GAAG,GAAG;AAC3C;AACA,SAAS,iBAAiB,MAAMuI,QAAO,IAAI,IAAI,IAAI,IAAI;AACrD,MAAI,OAAO;AAAI,WAAO,IAAI,cAAc,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AAC1D,QAAM,QAAQ,aAAaA,QAAO,EAAE;AACpC,QAAM,QAAQ,aAAaA,QAAO,EAAE;AACpC,MAAI,UAAU,OAAO;AACnB,WAAO,WAAS,IAAI,YAAY,MAAM,SAAS,KAAK,IAAI,SAAS,KAAK,GAAG,CAAC,KAAK,CAAC;AAAA,EAClF,OAAO;AACL,UAAMI,YAAW,QAAQ,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AACnD,WAAO,IAAI,YAAY,MAAM,SAAS,KAAK,IAAI,SAAS,KAAK,GAAGA,SAAQ;AAAA,EAC1E;AACF;AACA,SAAS,YAAY,MAAMJ,QAAO,IAAI,IAAI,IAAI,IAAI;AAChD,MAAI,QAAQ;AACZ,MAAI,eAAeA;AAEnB,SAAO,MAAM;AACX,UAAM,MAAM,iBAAiB,MAAM,cAAc,IAAI,IAAI,IAAI,EAAE;AAC/D,QAAI,OAAO,QAAQ,YAAY;AAC7B,cAAQ,IAAI,MAAM,KAAK,KAAK;AAC5B,qBAAe,eAAe;AAAA,IAChC,OAAO;AACL,UAAI,QAAQ;AACZ,aAAO,SAAS,MAAM;AACpB,gBAAQ,MAAM,MAAM,KAAK;AACzB,gBAAQ,MAAM;AAAA,MAChB;AACA,aAAO;AAAA,IACT;AAAA,EACF;AACF;;;AC/OA,IAAM,gBAA6B,uBAAO,IAAI,gBAAgB;AAI9D,IAAM,eAAe;AAAA,EACnB,CAAC,aAAa,GAAG;AAAA,EACjB,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,IAAI,gBAAgB,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAAA,EACnD;AAAA,EACA,CAAC,MAAM,IAAI;AACT,QAAI,SAAS,KAAK,SAAS;AAC3B,eAAW,QAAQ,MAAM;AACvB,gBAAU,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;AAAA,IAChD;AACA,WAAO;AAAA,EACT;AAAA,EACA,CAACvH,OAAQ,EAAE,MAAM;AACf,QAAI,UAAU,IAAI,GAAG;AACnB,UAAI,KAAK,UAAU,KAAK,OAAO;AAC7B,eAAO;AAAA,MACT;AACA,iBAAW,QAAQ,MAAM;AACvB,cAAM,OAAO,KAAK,MAAM,QAAQ,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;AACvD,YAAIuF,QAAO,IAAI,GAAG;AAChB,iBAAO;AAAA,QACT,OAAO;AACL,cAAI,CAAC,OAAO,KAAK,CAAC,GAAG,KAAK,KAAK,GAAG;AAChC,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAM,WAAW,CAAC,UAAU,MAAM,MAAM1H,WAAS;AAC/C,QAAM8F,QAAM,OAAO,OAAO,YAAY;AACtC,EAAAA,MAAI,YAAY;AAChB,EAAAA,MAAI,QAAQ;AACZ,EAAAA,MAAI,QAAQ;AACZ,EAAAA,MAAI,QAAQ9F;AACZ,SAAO8F;AACT;AACA,IAAM,kBAAN,MAAM,iBAAgB;AAAA,EACpB,YAAYA,OAAK,GAAG;AAClB,SAAK,MAAMA;AACX,SAAK,IAAI;AACT,SAAK,IAAI,UAAU,KAAK,IAAI,OAAO,KAAK,GAAG,MAAS;AAAA,EACtD;AAAA,EACA,OAAO;AACL,QAAI4B,QAAO,KAAK,CAAC,GAAG;AAClB,aAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,IACF;AACA,UAAM,KAAK,KAAK,EAAE;AAClB,SAAK,IAAI,UAAU,GAAG,IAAI;AAC1B,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO,GAAG;AAAA,IACZ;AAAA,EACF;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,IAAI,iBAAgB,KAAK,KAAK,KAAK,CAAC;AAAA,EAC7C;AACF;AACA,IAAM,YAAY,UAAQ,OAAO,kBAAkB,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAIG,MAAK;AACvG,IAAM,YAAY,CAAC,MAAM,GAAG,OAAO,WAAc;AAC/C,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,YACH;AACE,UAAID,QAAO,KAAK,KAAK,GAAG;AACtB,eAAOlB,MAAK;AAAA,UACV,OAAO,EAAE,KAAK,KAAK,KAAK,MAAM,KAAK;AAAA,UACnC;AAAA,QACF,CAAC;AAAA,MACH;AACA,aAAO,UAAU,IAAI;AAAA,IACvB;AAAA,IACF,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,eACH;AACE,YAAMoD,YAAW,KAAK;AACtB,aAAO,kBAAkBA,UAAS,QAAQA,WAAU,GAAG,GAAG,IAAI;AAAA,IAChE;AAAA,IACF,SACE;AACE,aAAO,UAAU,IAAI;AAAA,IACvB;AAAA,EACJ;AACF;AACA,IAAM,oBAAoB,CAAC,KAAKA,WAAU,GAAG,GAAG,SAAS;AACvD,SAAO,IAAI,KAAK;AACd,UAAM,QAAQA,UAAS,GAAG;AAC1B,QAAI,SAAS,CAAC,YAAY,KAAK,GAAG;AAChC,aAAO,UAAU,OAAO,GAAG,CAAC,KAAKA,WAAU,GAAG,GAAG,IAAI,CAAC;AAAA,IACxD;AAAA,EACF;AACA,SAAO,UAAU,IAAI;AACvB;AACA,IAAME,UAAsB,yBAAS,OAAO,GAAgB,oBAAI,UAAU,GAAG,CAAC;AAG9E,IAAMnM,SAAQ,MAAMmM;AAGpB,IAAMpE,QAAO,IAAI,YAAYP,cAAa,OAAO;AAGjD,IAAMA,gBAAe,aAAW;AAC9B,QAAMS,QAAM,cAAcjI,OAAM,CAAC;AACjC,aAAW,SAAS,SAAS;AAC3B,QAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,EAAEiI,KAAG;AAAA,EAC7B;AACA,SAAO,YAAYA,KAAG;AACxB;AAGA,IAAM,YAAY,OAAK,YAAY,GAAG,aAAa;AAGnD,IAAMmE,WAAU,UAAQ,QAAQ,YAAY,KAAK,KAAK;AAGtD,IAAM3E,OAAmB,qBAAK,GAAG,CAAC,MAAM,QAAQ,QAAQ,MAAM,KAAK,KAAK,GAAG,CAAC,CAAC;AAG7E,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,KAAKpK,UAAS;AACxD,MAAI,OAAO,KAAK;AAChB,MAAIwO,SAAQ;AAEZ,SAAO,MAAM;AACX,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK,YACH;AACE,eAAO,OAAO,KAAK,KAAK,GAAG,IAAI,KAAK,QAAQ7B,MAAK;AAAA,MACnD;AAAA,MACF,KAAK,iBACH;AACE,YAAI3M,UAAS,KAAK,MAAM;AACtB,gBAAM4O,YAAW,KAAK;AACtB,mBAAS,IAAI,GAAG,MAAMA,UAAS,QAAQ,IAAI,KAAK,EAAE,GAAG;AACnD,kBAAM,QAAQA,UAAS,CAAC;AACxB,gBAAI,SAAS,SAAS,OAAO,KAAK,MAAM,GAAG,GAAG;AAC5C,qBAAO,MAAM;AAAA,YACf;AAAA,UACF;AAAA,QACF;AACA,eAAOjC,MAAK;AAAA,MACd;AAAA,MACF,KAAK,eACH;AACE,cAAM,OAAO,aAAa6B,QAAOxO,KAAI;AACrC,cAAM,MAAM,SAAS,IAAI;AACzB,YAAI,KAAK,OAAO,KAAK;AACnB,iBAAO,KAAK,SAAS,WAAW,KAAK,MAAM,GAAG,CAAC;AAC/C,UAAAwO,UAAS;AACT;AAAA,QACF;AACA,eAAO7B,MAAK;AAAA,MACd;AAAA,MACF,KAAK,aACH;AACE,eAAO,KAAK,SAAS,aAAa6B,QAAOxO,KAAI,CAAC;AAC9C,YAAI,MAAM;AACR,UAAAwO,UAAS;AACT;AAAA,QACF;AACA,eAAO7B,MAAK;AAAA,MACd;AAAA,MACF;AACE,eAAOA,MAAK;AAAA,IAChB;AAAA,EACF;AACF,CAAC;AAYD,IAAM,MAAmB,qBAAK,GAAG,CAAC,MAAM,QAAQD,QAAO,QAAQ,MAAM,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC;AAMrF,IAAM,MAAmB,qBAAK,GAAG,CAAC,MAAM,KAAKnN,WAAU,SAAS,MAAM,KAAK,MAAMiM,MAAKjM,MAAK,CAAC,CAAC;AAG7F,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS,YAAY;AAC/D,MAAI,KAAK,WAAW;AAClB,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,WAAO;AAAA,EACT;AACA,SAAO,YAAY,KAAK,QAAQ,OAAO,SAAS,KAAK,WAAW,KAAK,OAAO,SAAS,OAAO;AAC9F,CAAC;AAGD,IAAM,OAAO,UAAQ,IAAI,gBAAgB,MAAM,SAAO,GAAG;AAMzD,IAAMuF,QAAO,UAAQ,KAAK;AAG1B,IAAM,gBAAgB,UAAQ,SAAS,MAAM,KAAK,QAAQ,GAAG,KAAK,OAAO,KAAK,KAAK;AAGnF,IAAM,cAAc,UAAQ;AAC1B,OAAK,YAAY;AACjB,SAAO;AACT;AAUA,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,KAAK,MAAM,WAAW,MAAM,KAAK,KAAK,GAAG,GAAG,CAAC,CAAC;AAG3F,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,KAAK9E,OAAM,MAAM;AAC9D,QAAM8E,SAAO;AAAA,IACX,OAAO,KAAK;AAAA,EACd;AACA,QAAM,UAAU,KAAK,MAAM,OAAO,KAAK,YAAY,KAAK,QAAQ,KAAK,GAAG,GAAG9E,OAAM,KAAK8E,MAAI;AAC1F,SAAO,KAAK,MAAM,QAAQ,SAASA,OAAK,KAAK,CAAC;AAChD,CAAC;AAaD,IAAMuG,UAAsB,qBAAK,GAAG,CAAC,MAAM,QAAQ,SAAS,MAAM,KAAKsB,KAAI,CAAC;AAe5E,IAAM/B,OAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMO,QAAO,MAAMxI,OAAM,GAAG,CAACiI,OAAKrL,QAAO,QAAQ,IAAIqL,OAAK,KAAK,EAAErL,QAAO,GAAG,CAAC,CAAC,CAAC;AAMtH,IAAMyP,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM7D,QAAO,MAAM,QAAQ,CAAC,GAAG5L,QAAO,QAAQ,EAAEA,QAAO,GAAG,CAAC,CAAC;AAGxG,IAAM4L,UAAsB,qBAAK,GAAG,CAAC,MAAM8D,OAAM,MAAM;AACrD,QAAM,OAAO,KAAK;AAClB,MAAI,KAAK,SAAS,YAAY;AAC5B,WAAOvC,QAAO,KAAK,KAAK,IAAI,EAAEuC,OAAM,KAAK,MAAM,OAAO,KAAK,GAAG,IAAIA;AAAA,EACpE;AACA,MAAI,KAAK,SAAS,aAAa;AAC7B,WAAOA;AAAA,EACT;AACA,QAAM,UAAU,CAAC,KAAK,QAAQ;AAC9B,MAAIL;AACJ,SAAOA,YAAW,QAAQ,IAAI,GAAG;AAC/B,aAAS,IAAI,GAAG,MAAMA,UAAS,QAAQ,IAAI,OAAM;AAC/C,YAAM,QAAQA,UAAS,GAAG;AAC1B,UAAI,SAAS,CAAC,YAAY,KAAK,GAAG;AAChC,YAAI,MAAM,SAAS,YAAY;AAC7B,cAAIlC,QAAO,MAAM,KAAK,GAAG;AACvB,YAAAuC,QAAO,EAAEA,OAAM,MAAM,MAAM,OAAO,MAAM,GAAG;AAAA,UAC7C;AAAA,QACF,OAAO;AACL,kBAAQ,KAAK,MAAM,QAAQ;AAAA,QAC7B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAOA;AACT,CAAC;;;AClUD,IAAM,gBAA6B,uBAAO,IAAI,gBAAgB;AAI9D,IAAM,eAAe;AAAA,EACnB,CAAC,aAAa,GAAG;AAAA,EACjB,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,KAAK,KAAK,OAAO;AAAA,EAC1B;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,QAAQ,KAAK,KAAK,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC;AAAA,EACpD;AAAA,EACA,CAAChI,OAAQ,EAAE,MAAM;AACf,QAAI,UAAU,IAAI,GAAG;AACnB,aAAOnC,MAAO,KAAK,OAAO,MAAMA,MAAO,KAAK,OAAO,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO;AAAA,IAC3F;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAMoK,YAAW,YAAU;AACzB,QAAMC,OAAM,OAAO,OAAO,YAAY;AACtC,EAAAA,KAAI,UAAU;AACd,SAAOA;AACT;AAGA,IAAM,YAAY,OAAK,YAAY,GAAG,aAAa;AACnD,IAAML,UAAsB,gBAAAI,UAAuB,gBAAAvM,OAAQ,CAAC;AAG5D,IAAMA,SAAQ,MAAMmM;AAGpB,IAAM3E,gBAAe,cAAY;AAC/B,QAAMgF,OAAMC,eAAczM,OAAM,CAAC;AACjC,aAAWpD,UAAS,UAAU;AAC5B,QAAI4P,MAAK5P,MAAK;AAAA,EAChB;AACA,SAAO8P,aAAYF,IAAG;AACxB;AAGA,IAAMzE,QAAO,IAAI,aAAa;AAC5B,QAAMyE,OAAMC,eAAczM,OAAM,CAAC;AACjC,aAAWpD,UAAS,UAAU;AAC5B,QAAI4P,MAAK5P,MAAK;AAAA,EAChB;AACA,SAAO8P,aAAYF,IAAG;AACxB;AAGA,IAAMf,OAAmB,qBAAK,GAAG,CAAC,MAAM7O,WAAU,IAAM,KAAK,SAASA,MAAK,CAAC;AAwB5E,IAAMuF,QAAO,UAAQA,MAAO,KAAK,OAAO;AAGxC,IAAMsK,iBAAgB,UAAQF,UAAS,cAAgB,KAAK,OAAO,CAAC;AAGpE,IAAMG,eAAc,UAAQ;AAC1B,OAAK,QAAQ,YAAY;AACzB,SAAO;AACT;AAGA,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC/C,QAAM,YAAYD,eAAc,IAAI;AACpC,IAAE,SAAS;AACX,SAAOC,aAAY,SAAS;AAC9B,CAAC;AAGD,IAAM,MAAmB,qBAAK,GAAG,CAAC,MAAM9P,WAAU,KAAK,QAAQ,aAAa,IAAIA,QAAO,IAAI,EAAE,KAAK,OAAO,GAAG,QAAQ2P,UAAS,IAAI3P,QAAO,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AAG5J,IAAM8L,UAAsB,qBAAK,GAAG,CAAC,MAAM9L,WAAU,KAAK,QAAQ,aAAa8L,QAAS9L,MAAK,EAAE,KAAK,OAAO,GAAG,QAAQ2P,UAAS7D,QAAS9L,MAAK,EAAE,KAAK,OAAO,CAAC,CAAC;AAG7J,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,SAAS,OAAO,MAAM,CAAA4P,SAAO;AAC1E,aAAW5P,UAAS,MAAM;AACxB,IAAA8L,QAAO8D,MAAK5P,MAAK;AAAA,EACnB;AACF,CAAC,CAAC;AAYF,IAAMqM,SAAqB,qBAAK,GAAG,CAAC,MAAM,SAAS,OAAOjJ,OAAM,GAAG,CAAAwM,SAAO;AACxE,EAAAH,SAAQ,MAAM,CAAAzP,WAAS,IAAI4P,MAAK5P,MAAK,CAAC;AACtC,aAAWA,UAAS,MAAM;AACxB,QAAI4P,MAAK5P,MAAK;AAAA,EAChB;AACF,CAAC,CAAC;AA2BF,IAAMyP,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAMA,SAAU,KAAK,SAAS,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AAGzF,IAAM7D,UAAsB,qBAAK,GAAG,CAAC,MAAM8D,OAAM,MAAM9D,QAAS,KAAK,SAAS8D,OAAM,CAAC,GAAG,GAAG,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;;;AC7JzG,IAAMK,aAAY;AAQlB,IAAM3M,SAAQA;AAQd,IAAMwH,gBAAeA;AAQrB,IAAMO,QAAOA;AAQb,IAAM0D,OAAMA;AA2CZ,IAAMtJ,QAAOA;AA4Bb,IAAMyK,OAAM;AAOZ,IAAMlE,UAASA;AAWf,IAAMmE,cAAa;AAsBnB,IAAM5D,SAAQA;AAyCd,IAAMT,UAASA;;;ACpMf,IAAMiB,UAAsB,uBAAO,IAAI,mBAAmB;AAY1D,IAAM,kBAAkB;AAAA,EACtB,CAACA,OAAM,GAAGA;AAAA,EACV,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,SAAS,OAAO,KAAK,OAAO;AAAA,IAC9B;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAMA,IAAM1B,QAAO,CAAAnL,WAAS;AACpB,QAAM,MAAM,OAAO,OAAO,eAAe;AACzC,MAAI,UAAUA;AACd,SAAO;AACT;AAMA,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,UAAU,aAAa;AACvE,MAAI,OAAO,UAAU,KAAK,OAAO,GAAG;AAClC,SAAK,UAAU;AACf,WAAO;AAAA,EACT;AACA,SAAO;AACT,CAAC;AAkBD,IAAM6K,OAAM,UAAQ,KAAK;AAwCzB,IAAM,kBAAkB,UAAQ,aAAa,MAAM,OAAK,IAAI,CAAC;AAM7D,IAAM+E,OAAmB,qBAAK,GAAG,CAAC,MAAM5P,WAAU;AAChD,OAAK,UAAUA;AACf,SAAO;AACT,CAAC;AAMD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAMA,WAAU;AACtD,OAAK,UAAUA;AACf,SAAO,KAAK;AACd,CAAC;AAMD,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,MAAM4P,KAAI,MAAM,EAAE/E,KAAI,IAAI,CAAC,CAAC,CAAC;AAMxE,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,MAAM,UAAU,MAAM,EAAEA,KAAI,IAAI,CAAC,CAAC,CAAC;;;ACxIpF,IAAM,mBAAmB;AAGzB,IAAM,gBAA6B,uBAAO,IAAI,gBAAgB;AAG9D,IAAM,UAAU;AAKhB,IAAM,aAAa;AAKnB,IAAM,eAAe;AAKrB,IAAM,OAAN,MAAW;AAAA,EACT,CAAC,aAAa,IAAI;AAAA,EAClB,OAAO;AAAA,EACP,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,gBAAgB,GAAG,QAAU,KAAK,KAAK,IAAI,CAAC,CAAC;AAAA,EAChE;AAAA,EACA,CAACnD,OAAQ,EAAE,MAAM;AACf,WAAO,UAAU,IAAI,KAAK,KAAK,SAAS;AAAA,EAC1C;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,IACb;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AACF;AAGA,IAAM,UAAN,MAAc;AAAA,EACZ,CAAC,aAAa,IAAI;AAAA,EAClB,OAAO;AAAA,EACP,YAAY7C,KAAI,iBAAiB;AAC/B,SAAK,KAAKA;AACV,SAAK,kBAAkB;AAAA,EACzB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,gBAAgB,GAAG,QAAU,KAAK,KAAK,IAAI,CAAC,GAAG,QAAU,KAAK,KAAK,EAAE,CAAC,GAAG,QAAU,KAAK,KAAK,eAAe,CAAC,CAAC;AAAA,EACjI;AAAA,EACA,CAAC6C,OAAQ,EAAE,MAAM;AACf,WAAO,UAAU,IAAI,KAAK,KAAK,SAAS,cAAc,KAAK,OAAO,KAAK,MAAM,KAAK,oBAAoB,KAAK;AAAA,EAC7G;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,MACX,IAAI,KAAK;AAAA,MACT,iBAAiB,KAAK;AAAA,IACxB;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AACF;AAGA,IAAM,YAAN,MAAgB;AAAA,EACd,CAAC,aAAa,IAAI;AAAA,EAClB,OAAO;AAAA,EACP,YAAY8F,OAAMC,QAAO;AACvB,SAAK,OAAOD;AACZ,SAAK,QAAQC;AAAA,EACf;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,gBAAgB,GAAG,QAAU,KAAK,KAAK,IAAI,CAAC,GAAG,QAAU,KAAK,KAAK,IAAI,CAAC,GAAG,QAAU,KAAK,KAAK,KAAK,CAAC,CAAC;AAAA,EACzH;AAAA,EACA,CAAC/F,OAAQ,EAAE,MAAM;AACf,WAAO,UAAU,IAAI,KAAK,KAAK,SAAS,gBAAgB,OAAO,KAAK,MAAM,KAAK,IAAI,KAAK,OAAO,KAAK,OAAO,KAAK,KAAK;AAAA,EACvH;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,MACX,MAAM,OAAO,KAAK,IAAI;AAAA,MACtB,OAAO,OAAO,KAAK,KAAK;AAAA,IAC1B;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AACF;AAGA,IAAM0F,QAAoB,oBAAI,KAAK;AAanC,IAAM,YAAY,UAAQ,YAAY,MAAM,aAAa;AAkBzD,IAAM8C,WAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS;AACnD,MAAI,KAAK,SAAS,SAAS;AACzB,WAAO;AAAA,EACT;AACA,MAAI,KAAK,SAAS,SAAS;AACzB,WAAO;AAAA,EACT;AACA,SAAO,IAAI,UAAU,MAAM,IAAI;AACjC,CAAC;AAWD,IAAM,MAAM,UAAQ;AAClB,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,SACH;AACE,aAAO9M,OAAM;AAAA,IACf;AAAA,IACF,KAAK,YACH;AACE,aAAO+H,MAAO,KAAK,EAAE;AAAA,IACvB;AAAA,IACF,KAAK,cACH;AACE,aAAO,KAAK,IAAI,KAAK,IAAI,GAAGkB,OAAM,IAAI,KAAK,KAAK,CAAC,CAAC;AAAA,IACpD;AAAA,EACJ;AACF;AACA,IAAM,gBAA6B,4BAA0B,uBAAO,IAAI,+BAA+B,GAAG,MAAMlB,MAAO,CAAC,CAAC;AAQzH,IAAM,aAAa,UAAQ;AACzB,QAAM,cAAc,MAAM,KAAK,IAAI,IAAI,CAAC,EAAE,IAAI,OAAK,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG;AACpE,SAAO;AACT;AA0CA,IAAM,aAAa,MAAM;AACvB,QAAMtG,MAAKgG,KAAI,aAAa;AAC5B,OAAK,eAAe+E,KAAI/K,MAAK,CAAC,CAAC;AAC/B,SAAO,IAAI,QAAQA,MAAI,oBAAI,KAAK,GAAE,QAAQ,CAAC;AAC7C;;;ACvMA,IAAMuI,QAAOA;AAqDb,IAAM8C,WAAUA;AAwBhB,IAAMC,OAAM;AAiBZ,IAAMC,cAAa;AAwBnB,IAAMC,cAAa;;;AC7JnB,IAAM,SAAS;AAKf,IAAM,WAAW;AAKjB,IAAM,UAAU;AAKhB,IAAM,eAAe;AAKrB,IAAM,cAAc;AAKpB,IAAM,gBAAgB;;;ACRtB,IAAM,iBAAiB;AAGvB,IAAM,cAA2B,uBAAO,IAAI,cAAc;AAG1D,IAAM,WAAW;AAAA,EACf,IAAI,OAAK;AACX;AAGA,IAAM,QAAQ;AAAA,EACZ,CAAC,WAAW,GAAG;AAAA,EACf,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,cAAc,GAAG,QAAQ,KAAK,aAAa,IAAI,CAAC,CAAC,CAAC;AAAA,EACrE;AAAA,EACA,CAAC3I,OAAQ,EAAE,MAAM;AACf,WAAO,QAAQ,IAAI,KAAK,YAAY,MAAM,IAAI;AAAA,EAChD;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,SAAS;AACP,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AACH,eAAO;AAAA,UACL,KAAK;AAAA,UACL,MAAM,KAAK;AAAA,QACb;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,KAAK;AAAA,UACL,MAAM,KAAK;AAAA,UACX,QAAQ,OAAO,KAAK,MAAM;AAAA,QAC5B;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,KAAK;AAAA,UACL,MAAM,KAAK;AAAA,UACX,SAAS,KAAK,QAAQ,OAAO;AAAA,QAC/B;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,KAAK;AAAA,UACL,MAAM,KAAK;AAAA,UACX,SAAS,OAAO,KAAK,KAAK;AAAA,QAC5B;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,UACL,KAAK;AAAA,UACL,MAAM,KAAK;AAAA,UACX,MAAM,OAAO,KAAK,IAAI;AAAA,UACtB,OAAO,OAAO,KAAK,KAAK;AAAA,QAC1B;AAAA,IACJ;AAAA,EACF;AAAA,EACA,WAAW;AACT,WAAO,OAAO,IAAI;AAAA,EACpB;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AACF;AAOA,IAAMtE,SAAsB,uBAAM;AAChC,QAAM,IAAiB,uBAAO,OAAO,KAAK;AAC1C,IAAE,OAAO;AACT,SAAO;AACT,GAAG;AAGH,IAAM,OAAO,WAAS;AACpB,QAAM,IAAI,OAAO,OAAO,KAAK;AAC7B,IAAE,OAAO;AACT,IAAE,QAAQ;AACV,SAAO;AACT;AAGA,IAAM,MAAM,YAAU;AACpB,QAAM,IAAI,OAAO,OAAO,KAAK;AAC7B,IAAE,OAAO;AACT,IAAE,SAAS;AACX,SAAO;AACT;AAGA,IAAM,YAAY,CAAAkN,aAAW;AAC3B,QAAM,IAAI,OAAO,OAAO,KAAK;AAC7B,IAAE,OAAO;AACT,IAAE,UAAUA;AACZ,SAAO;AACT;AAGA,IAAM,WAAW,CAAC9C,OAAMC,WAAU;AAChC,QAAM,IAAI,OAAO,OAAO,KAAK;AAC7B,IAAE,OAAO;AACT,IAAE,OAAOD;AACT,IAAE,QAAQC;AACV,SAAO;AACT;AAGA,IAAM,aAAa,CAACD,OAAMC,WAAU;AAClC,QAAM,IAAI,OAAO,OAAO,KAAK;AAC7B,IAAE,OAAO;AACT,IAAE,OAAOD;AACT,IAAE,QAAQC;AACV,SAAO;AACT;AAOA,IAAM,UAAU,OAAK,YAAY,GAAG,WAAW;AAS/C,IAAM,YAAY,UAAQ,KAAK,SAAS;AAmBxC,IAAM+B,WAAU,UAAQ;AACtB,MAAI,KAAK,SAAS,UAAU;AAC1B,WAAO;AAAA,EACT;AACA,SAAO5D,QAAO,MAAM,MAAM,CAAC,KAAKjK,WAAU;AACxC,YAAQA,OAAM,MAAM;AAAA,MAClB,KAAK,UACH;AACE,eAAOsK,MAAK,GAAG;AAAA,MACjB;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,cACH;AACE,eAAOA,MAAK,KAAK;AAAA,MACnB;AAAA,MACF,SACE;AACE,eAAOmB,MAAK;AAAA,MACd;AAAA,IACJ;AAAA,EACF,CAAC;AACH;AASA,IAAM,gBAAgB,UAAQD,QAAO,gBAAgB,IAAI,CAAC;AAG1D,IAAM,oBAAoB,UAAQ,kBAAkB,QAAW,6BAA6B,EAAE,IAAI;AAGlG,IAAM,WAAW,UAAQpB,SAAQH,QAAO,MAAMxI,OAAQ,GAAG,CAAC,MAAMzB,WAAUA,OAAM,SAAS,UAAUsK,MAAK,KAAK,MAAMN,SAAQhK,OAAM,KAAK,CAAC,CAAC,IAAIyL,MAAK,CAAC,CAAC;AAGnJ,IAAM,UAAU,UAAQrB,SAAQH,QAAO,MAAMxI,OAAQ,GAAG,CAAC,MAAMzB,WAAUA,OAAM,SAAS,SAASsK,MAAK,KAAK,MAAMN,SAAQhK,OAAM,MAAM,CAAC,CAAC,IAAIyL,MAAK,CAAC,CAAC;AAGlJ,IAAM,eAAe,UAAQxB,QAAO,MAAMxI,OAAQ,GAAG,CAACwM,MAAKjO,WAAUA,OAAM,SAAS,eAAesK,MAAK,KAAK2D,MAAKI,KAAIrO,OAAM,OAAO,CAAC,CAAC,IAAIyL,MAAK,CAAC;AAG/I,IAAM,gBAAgB,UAAQ,KAAK,MAAM,CAAAzL,WAASA,OAAM,SAAS,UAAUsK,MAAKtK,OAAM,KAAK,IAAIyL,MAAK,CAAC;AAGrG,IAAM,iBAAiB,UAAQ;AAC7B,QAAM3E,UAAS,cAAc,IAAI;AACjC,UAAQA,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AAEE,aAAOgF,OAAM,IAAI;AAAA,IACnB;AAAA,IACF,KAAK,QACH;AACE,aAAOD,MAAK/E,QAAO,KAAK;AAAA,IAC1B;AAAA,EACJ;AACF;AAMA,IAAM,kBAAkB,UAAQ1I,OAAM,MAAM;AAAA,EAC1C,SAASkM,MAAK7I,MAAK;AAAA,EACnB,QAAQ,CAAAmN,mBAAiB,KAAKA,gBAAe,IAAM,IAAI,CAAC;AAAA,EACxD,OAAO,YAAUtE,MAAK,IAAI,MAAM,CAAC;AAAA,EACjC,aAAa,CAAAqE,aAAWrE,MAAK,UAAUqE,QAAO,CAAC;AAAA,EAC/C,cAAc,CAAC9C,OAAMC,WAAU;AAC7B,QAAIN,QAAOK,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAK,WAAWuB,MAAK,OAAOC,OAAM,KAAK,CAAC;AAAA,IACjD;AACA,QAAIR,QAAOO,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAKwB,OAAM,KAAK;AAAA,IACzB;AACA,QAAIN,QAAOK,KAAI,KAAKP,QAAOQ,MAAK,GAAG;AACjC,aAAOxB,MAAKuB,MAAK,KAAK;AAAA,IACxB;AACA,WAAOJ,MAAK;AAAA,EACd;AAAA,EACA,YAAY,CAACI,OAAMC,WAAU;AAC3B,QAAIN,QAAOK,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAK,SAASuB,MAAK,OAAOC,OAAM,KAAK,CAAC;AAAA,IAC/C;AACA,QAAIR,QAAOO,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAKwB,OAAM,KAAK;AAAA,IACzB;AACA,QAAIN,QAAOK,KAAI,KAAKP,QAAOQ,MAAK,GAAG;AACjC,aAAOxB,MAAKuB,MAAK,KAAK;AAAA,IACxB;AACA,WAAOJ,MAAK;AAAA,EACd;AACF,CAAC;AAGD,IAAM,kBAAkB,UAAQ,KAAK,MAAM,CAAAzL,WAASA,OAAM,SAAS,eAAesK,MAAKtK,OAAM,OAAO,IAAIyL,MAAK,CAAC;AAG9G,IAAM,cAAc,UAAQrN,OAAM,MAAM;AAAA,EACtC,SAASqN,MAAK;AAAA,EACd,QAAQ,MAAMA,MAAK;AAAA,EACnB,OAAO,YAAUnB,MAAK,IAAI,MAAM,CAAC;AAAA,EACjC,aAAa,MAAMmB,MAAK;AAAA,EACxB,cAAc,CAACI,OAAMC,WAAU;AAC7B,QAAIN,QAAOK,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAK,WAAWuB,MAAK,OAAOC,OAAM,KAAK,CAAC;AAAA,IACjD;AACA,QAAIN,QAAOK,KAAI,KAAKP,QAAOQ,MAAK,GAAG;AACjC,aAAOxB,MAAKuB,MAAK,KAAK;AAAA,IACxB;AACA,QAAIP,QAAOO,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAKwB,OAAM,KAAK;AAAA,IACzB;AACA,WAAOL,MAAK;AAAA,EACd;AAAA,EACA,YAAY,CAACI,OAAMC,WAAU;AAC3B,QAAIN,QAAOK,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAK,SAASuB,MAAK,OAAOC,OAAM,KAAK,CAAC;AAAA,IAC/C;AACA,QAAIN,QAAOK,KAAI,KAAKP,QAAOQ,MAAK,GAAG;AACjC,aAAOxB,MAAKuB,MAAK,KAAK;AAAA,IACxB;AACA,QAAIP,QAAOO,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAKwB,OAAM,KAAK;AAAA,IACzB;AACA,WAAOL,MAAK;AAAA,EACd;AACF,CAAC;AAGD,IAAM,8BAA8B,UAAQrN,OAAM,MAAM;AAAA,EACtD,SAASqN,MAAK;AAAA,EACd,QAAQ,aAAWnB,MAAK,IAAI,OAAO,CAAC;AAAA,EACpC,OAAO,YAAUA,MAAK,IAAI,MAAM,CAAC;AAAA,EACjC,aAAa,MAAMmB,MAAK;AAAA,EACxB,cAAc,CAACI,OAAMC,WAAU;AAC7B,QAAIN,QAAOK,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAK,WAAWuB,MAAK,OAAOC,OAAM,KAAK,CAAC;AAAA,IACjD;AACA,QAAIN,QAAOK,KAAI,KAAKP,QAAOQ,MAAK,GAAG;AACjC,aAAOxB,MAAKuB,MAAK,KAAK;AAAA,IACxB;AACA,QAAIP,QAAOO,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAKwB,OAAM,KAAK;AAAA,IACzB;AACA,WAAOL,MAAK;AAAA,EACd;AAAA,EACA,YAAY,CAACI,OAAMC,WAAU;AAC3B,QAAIN,QAAOK,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAK,SAASuB,MAAK,OAAOC,OAAM,KAAK,CAAC;AAAA,IAC/C;AACA,QAAIN,QAAOK,KAAI,KAAKP,QAAOQ,MAAK,GAAG;AACjC,aAAOxB,MAAKuB,MAAK,KAAK;AAAA,IACxB;AACA,QAAIP,QAAOO,KAAI,KAAKL,QAAOM,MAAK,GAAG;AACjC,aAAOxB,MAAKwB,OAAM,KAAK;AAAA,IACzB;AACA,WAAOL,MAAK;AAAA,EACd;AACF,CAAC;AAaD,IAAM,gBAAgB,UAAQrN,OAAM,MAAM;AAAA,EACxC,SAASqD;AAAA,EACT,QAAQ,MAAMA;AAAA,EACd,OAAO,YAAU,IAAI,MAAM;AAAA,EAC3B,aAAa,CAAAkN,aAAW,UAAUA,QAAO;AAAA,EACzC,cAAc;AAAA,EACd,YAAY;AACd,CAAC;AAGD,IAAM,gBAAgB,UAAQvQ,OAAM,MAAM;AAAA,EACxC,SAASqD;AAAA,EACT,QAAQ,aAAW,IAAI,OAAO;AAAA,EAC9B,OAAO,YAAU,IAAI,MAAM;AAAA,EAC3B,aAAa,CAAAkN,aAAW,UAAUA,QAAO;AAAA,EACzC,cAAc,CAAC9C,OAAMC,WAAU,WAAWD,OAAMC,MAAK;AAAA,EACrD,YAAY,CAACD,OAAMC,WAAU,SAASD,OAAMC,MAAK;AACnD,CAAC;AA6CD,IAAMpC,OAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMX,SAAQ,MAAM,OAAK,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAO5E,IAAMA,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM3K,OAAM,MAAM;AAAA,EAC5D,SAASqD;AAAA,EACT,QAAQ,WAAS,EAAE,KAAK;AAAA,EACxB,OAAO,YAAU,IAAI,MAAM;AAAA,EAC3B,aAAa,CAAAkN,aAAW,UAAUA,QAAO;AAAA,EACzC,cAAc,CAAC9C,OAAMC,WAAU,WAAWD,OAAMC,MAAK;AAAA,EACrD,YAAY,CAACD,OAAMC,WAAU,SAASD,OAAMC,MAAK;AACnD,CAAC,CAAC;AAGF,IAAM9C,WAAU,UAAQD,SAAQ,MAAM,QAAQ;AAiB9C,IAAM,cAAc,CAAC8C,OAAMC,WAAU;AACnC,MAAI,YAAYjC,IAAGgC,KAAI;AACvB,MAAI,aAAahC,IAAGiC,MAAK;AACzB,SAAO,WAAW,SAAS,KAAK,WAAW,UAAU,GAAG;AACtD,UAAM,CAAC,cAAc,cAAc,IAAI,KAAK1C,cAAa,SAAS,GAAGa,QAAO,CAACxI,OAAQ,GAAGA,OAAQ,CAAC,GAAG,CAAC,CAACoN,WAAUC,WAAU,GAAG9O,WAAU;AACrI,YAAM,CAAC+O,MAAK7M,IAAG,IAAI,cAAclC,MAAK;AACtC,aAAOsK,MAAK,CAAC,KAAKuE,WAAUnE,OAAMqE,IAAG,CAAC,GAAG,KAAKD,aAAY7G,WAAU/F,IAAG,CAAC,CAAC,CAAC;AAAA,IAC5E,CAAC,CAAC;AACF,UAAM,CAAC,eAAe,eAAe,IAAI,KAAKkH,cAAa,UAAU,GAAGa,QAAO,CAACxI,OAAQ,GAAGA,OAAQ,CAAC,GAAG,CAAC,CAACoN,WAAUC,WAAU,GAAG9O,WAAU;AACxI,YAAM,CAAC+O,MAAK7M,IAAG,IAAI,cAAclC,MAAK;AACtC,aAAOsK,MAAK,CAAC,KAAKuE,WAAUnE,OAAMqE,IAAG,CAAC,GAAG,KAAKD,aAAY7G,WAAU/F,IAAG,CAAC,CAAC,CAAC;AAAA,IAC5E,CAAC,CAAC;AACF,QAAI,CAAC,OAAO,cAAc,aAAa,GAAG;AACxC,aAAO;AAAA,IACT;AACA,gBAAY;AACZ,iBAAa;AAAA,EACf;AACA,SAAO;AACT;AAaA,IAAM,eAAe,CAAAlC,WAAS;AAC5B,SAAO,iBAAiB6J,IAAG7J,MAAK,GAAGyB,OAAQ,CAAC;AAC9C;AAGA,IAAM,mBAAmB,CAAC,QAAQ,cAAc;AAE9C,SAAO,GAAG;AACR,UAAM,CAACoN,WAAUC,WAAU,IAAI,KAAK,QAAQ,OAAS,CAACrN,OAAQ,GAAGA,OAAQ,CAAC,GAAG,CAAC,CAACoN,WAAUC,WAAU,GAAG9O,WAAU;AAC9G,YAAM,CAAC+O,MAAK7M,IAAG,IAAI,cAAclC,MAAK;AACtC,aAAO,CAAC,KAAK6O,WAAUnE,OAAMqE,IAAG,CAAC,GAAG,KAAKD,aAAY7G,WAAU/F,IAAG,CAAC,CAAC;AAAA,IACtE,CAAC,CAAC;AACF,UAAM,UAAU0B,MAAOiL,SAAQ,IAAI,IAAI,KAAK,WAAW7E,SAAQ6E,SAAQ,CAAC,IAAI;AAC5E,QAAI,QAAUC,WAAU,GAAG;AACzB,aAAO1E,SAAQ,OAAO;AAAA,IACxB;AACA,aAAS0E;AACT,gBAAY;AAAA,EACd;AACA,QAAM,IAAI,MAAM,gGAAgG;AAClH;AAOA,IAAM,SAAS,UAAQ;AACrB,SAAO,WAAW,QAAQ,EAAE,IAAI;AAClC;AAGA,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACnD,QAAMhI,UAAS,KAAK,MAAM,eAAe,IAAM,CAAC,CAAC;AACjD,UAAQA,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO,KAAK,QAAQ,IAAI,GAAG/G,OAAM,MAAQ;AAAA,QACvC,QAAQ,MAAM;AACZ,gBAAM,aAAa,MAAM,KAAK,aAAa,IAAI,CAAC,EAAE,QAAQ,CAAA4O,aAAW,MAAM,KAAKH,KAAIG,QAAO,CAAC,EAAE,IAAI,CAAAzL,QAAM,IAAIA,GAAE,EAAE,CAAC;AACjH,iBAAO,qBAAqB,aAAa,0BAA0B,WAAW,KAAK,IAAI,CAAC,KAAK,MAAM;AAAA,QACrG;AAAA,QACA,QAAQ;AAAA,MACV,CAAC,CAAC;AAAA,IACJ;AAAA,IACF,KAAK,QACH;AACE,aAAO4D,QAAO;AAAA,IAChB;AAAA,EACJ;AACF,CAAC;AAOD,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,OAAO;AAC9C,QAAM,QAAQ,CAAC,IAAI;AACnB,SAAO,MAAM,SAAS,GAAG;AACvB,UAAM,OAAO,MAAM,IAAI;AACvB,UAAMA,UAAS,GAAG,IAAI;AACtB,YAAQA,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,gBAAQ,KAAK,MAAM;AAAA,UACjB,KAAK;AAAA,UACL,KAAK,aACH;AACE,kBAAM,KAAK,KAAK,KAAK;AACrB,kBAAM,KAAK,KAAK,IAAI;AACpB;AAAA,UACF;AAAA,QACJ;AACA;AAAA,MACF;AAAA,MACF,KAAK,QACH;AACE,eAAOA;AAAA,MACT;AAAA,IACJ;AAAA,EACF;AACA,SAAO2E,MAAK;AACd,CAAC;AAmBD,IAAM,gBAAgB,UAAQ;AAC5B,MAAIzL,SAAQ;AACZ,QAAM,QAAQ,CAAC;AACf,MAAI,YAAYyB,OAAQ;AACxB,MAAI,cAAcA,OAAQ;AAC1B,SAAOzB,WAAU,QAAW;AAC1B,YAAQA,OAAM,MAAM;AAAA,MAClB,KAAK,UACH;AACE,YAAI,MAAM,WAAW,GAAG;AACtB,iBAAO,CAAC,WAAW,WAAW;AAAA,QAChC;AACA,QAAAA,SAAQ,MAAM,IAAI;AAClB;AAAA,MACF;AAAA,MACF,KAAK,SACH;AACE,YAAI,MAAM,WAAW,GAAG;AACtB,iBAAO,CAAC,KAAK,WAAWqO,KAAIrO,OAAM,KAAK,CAAC,GAAG,WAAW;AAAA,QACxD;AACA,oBAAY,KAAK,WAAWqO,KAAIrO,OAAM,KAAK,CAAC;AAC5C,QAAAA,SAAQ,MAAM,IAAI;AAClB;AAAA,MACF;AAAA,MACF,KAAK,QACH;AACE,YAAI,MAAM,WAAW,GAAG;AACtB,iBAAO,CAAC,KAAK,WAAWqO,KAAIrO,OAAM,MAAM,CAAC,GAAG,WAAW;AAAA,QACzD;AACA,oBAAY,KAAK,WAAWqO,KAAIrO,OAAM,MAAM,CAAC;AAC7C,QAAAA,SAAQ,MAAM,IAAI;AAClB;AAAA,MACF;AAAA,MACF,KAAK,cACH;AACE,YAAI,MAAM,WAAW,GAAG;AACtB,iBAAO,CAAC,KAAK,WAAWqO,KAAIrO,OAAM,OAAO,CAAC,GAAG,WAAW;AAAA,QAC1D;AACA,oBAAY,KAAK,WAAWqO,KAAIrO,OAAM,OAAO,CAAC;AAC9C,QAAAA,SAAQ,MAAM,IAAI;AAClB;AAAA,MACF;AAAA,MACF,KAAK,eACH;AACE,gBAAQA,OAAM,KAAK,MAAM;AAAA,UACvB,KAAK,UACH;AACE,YAAAA,SAAQA,OAAM;AACd;AAAA,UACF;AAAA,UACF,KAAK,eACH;AACE,YAAAA,SAAQ,WAAWA,OAAM,KAAK,MAAM,WAAWA,OAAM,KAAK,OAAOA,OAAM,KAAK,CAAC;AAC7E;AAAA,UACF;AAAA,UACF,KAAK,aACH;AACE,YAAAA,SAAQ,SAAS,WAAWA,OAAM,KAAK,MAAMA,OAAM,KAAK,GAAG,WAAWA,OAAM,KAAK,OAAOA,OAAM,KAAK,CAAC;AACpG;AAAA,UACF;AAAA,UACF,SACE;AACE,0BAAc,KAAK,aAAagK,SAAQhK,OAAM,KAAK,CAAC;AACpD,YAAAA,SAAQA,OAAM;AACd;AAAA,UACF;AAAA,QACJ;AACA;AAAA,MACF;AAAA,MACF,KAAK,aACH;AACE,cAAM,KAAKA,OAAM,KAAK;AACtB,QAAAA,SAAQA,OAAM;AACd;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,QAAM,IAAI,MAAM,iGAAiG;AACnH;AAiBA,IAAM,gCAAgC;AAAA,EACpC,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AAAA,EACT,eAAe;AAAA,EACf,gBAAgB,CAAC,GAAG6L,OAAMC,WAAUD,SAAQC;AAAA,EAC5C,cAAc,CAAC,GAAGD,OAAMC,WAAUD,SAAQC;AAC5C;AAoCA,IAAM,qBAAqB;AAC3B,IAAM,mBAAmB;AAOzB,IAAM1N,SAAqB,qBAAK,GAAG,CAAC,MAAM;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAA4Q;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,SAAO,kBAAkB,MAAM,QAAQ;AAAA,IACrC,WAAW,MAAM;AAAA,IACjB,UAAU,CAAC,GAAG,UAAU,OAAO,KAAK;AAAA,IACpC,SAAS,CAAC,GAAG,WAAW,MAAM,MAAM;AAAA,IACpC,eAAe,CAAC,GAAGL,aAAYK,aAAYL,QAAO;AAAA,IAClD,gBAAgB,CAAC,GAAG9C,OAAMC,WAAU,aAAaD,OAAMC,MAAK;AAAA,IAC5D,cAAc,CAAC,GAAGD,OAAMC,WAAU,WAAWD,OAAMC,MAAK;AAAA,EAC1D,CAAC;AACH,CAAC;AAGD,IAAM7B,UAAsB,qBAAK,GAAG,CAAC,MAAM8D,OAAM,OAAO;AACtD,MAAI,cAAcA;AAClB,MAAI/N,SAAQ;AACZ,QAAM,SAAS,CAAC;AAChB,SAAOA,WAAU,QAAW;AAC1B,UAAM8G,UAAS,GAAG,aAAa9G,MAAK;AACpC,kBAAcwL,QAAO1E,OAAM,IAAIA,QAAO,QAAQ;AAC9C,YAAQ9G,OAAM,MAAM;AAAA,MAClB,KAAK,eACH;AACE,eAAO,KAAKA,OAAM,KAAK;AACvB,QAAAA,SAAQA,OAAM;AACd;AAAA,MACF;AAAA,MACF,KAAK,aACH;AACE,eAAO,KAAKA,OAAM,KAAK;AACvB,QAAAA,SAAQA,OAAM;AACd;AAAA,MACF;AAAA,MACF,SACE;AACE,QAAAA,SAAQ;AACR;AAAA,MACF;AAAA,IACJ;AACA,QAAIA,WAAU,UAAa,OAAO,SAAS,GAAG;AAC5C,MAAAA,SAAQ,OAAO,IAAI;AAAA,IACrB;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAGD,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAMgC,UAAS,YAAY;AACzE,QAAMJ,SAAQ,CAAC,IAAI;AACnB,QAAM,SAAS,CAAC;AAChB,SAAOA,OAAM,SAAS,GAAG;AACvB,UAAM5B,SAAQ4B,OAAM,IAAI;AACxB,YAAQ5B,OAAM,MAAM;AAAA,MAClB,KAAK,UACH;AACE,eAAO,KAAK8L,OAAM,QAAQ,UAAU9J,QAAO,CAAC,CAAC;AAC7C;AAAA,MACF;AAAA,MACF,KAAK,SACH;AACE,eAAO,KAAK8J,OAAM,QAAQ,SAAS9J,UAAShC,OAAM,KAAK,CAAC,CAAC;AACzD;AAAA,MACF;AAAA,MACF,KAAK,QACH;AACE,eAAO,KAAK8L,OAAM,QAAQ,QAAQ9J,UAAShC,OAAM,MAAM,CAAC,CAAC;AACzD;AAAA,MACF;AAAA,MACF,KAAK,cACH;AACE,eAAO,KAAK8L,OAAM,QAAQ,cAAc9J,UAAShC,OAAM,OAAO,CAAC,CAAC;AAChE;AAAA,MACF;AAAA,MACF,KAAK,eACH;AACE,QAAA4B,OAAM,KAAK5B,OAAM,KAAK;AACtB,QAAA4B,OAAM,KAAK5B,OAAM,IAAI;AACrB,eAAO,KAAK6L,MAAK;AAAA,UACf,MAAM;AAAA,QACR,CAAC,CAAC;AACF;AAAA,MACF;AAAA,MACF,KAAK,aACH;AACE,QAAAjK,OAAM,KAAK5B,OAAM,KAAK;AACtB,QAAA4B,OAAM,KAAK5B,OAAM,IAAI;AACrB,eAAO,KAAK6L,MAAK;AAAA,UACf,MAAM;AAAA,QACR,CAAC,CAAC;AACF;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,QAAM,cAAc,CAAC;AACrB,SAAO,OAAO,SAAS,GAAG;AACxB,UAAMoD,UAAS,OAAO,IAAI;AAC1B,YAAQA,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,gBAAQA,QAAO,KAAK,MAAM;AAAA,UACxB,KAAK,oBACH;AACE,kBAAMpD,QAAO,YAAY,IAAI;AAC7B,kBAAMC,SAAQ,YAAY,IAAI;AAC9B,kBAAMzN,SAAQ,QAAQ,eAAe2D,UAAS6J,OAAMC,MAAK;AACzD,wBAAY,KAAKzN,MAAK;AACtB;AAAA,UACF;AAAA,UACF,KAAK,kBACH;AACE,kBAAMwN,QAAO,YAAY,IAAI;AAC7B,kBAAMC,SAAQ,YAAY,IAAI;AAC9B,kBAAMzN,SAAQ,QAAQ,aAAa2D,UAAS6J,OAAMC,MAAK;AACvD,wBAAY,KAAKzN,MAAK;AACtB;AAAA,UACF;AAAA,QACJ;AACA;AAAA,MACF;AAAA,MACF,KAAK,SACH;AACE,oBAAY,KAAK4Q,QAAO,KAAK;AAC7B;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,MAAI,YAAY,WAAW,GAAG;AAC5B,UAAM,IAAI,MAAM,iGAAiG;AAAA,EACnH;AACA,SAAO,YAAY,IAAI;AACzB,CAAC;AAMD,IAAM,gBAAgB,CAACC,SAAO,QAAQ;AACpC,QAAM,OAAO;AAAA,IACX,OAAO;AAAA,IACP,YAAY;AAAA,EACd;AACA,QAAM,oBAAoB;AAAA,IACxB,GAAGA;AAAA,IACH,WAAW;AACT,aAAO,GAAG,KAAK,IAAI,KAAK,KAAK,OAAO;AAAA,IACtC;AAAA,EACF;AACA,SAAO,aAAW,OAAO,OAAO,mBAAmB;AAAA,IACjD;AAAA,IACA,SAAS;AAAA,MACP,OAAO;AAAA,MACP,YAAY;AAAA,IACd;AAAA,EACF,CAAC;AACH;AAGA,IAAM,yBAAsC,uBAAO,IAAI,sCAAsC;AAG7F,IAAM,mBAAgC,8BAAc;AAAA,EAClD,CAAC,sBAAsB,GAAG;AAC5B,GAAG,kBAAkB;AAGrB,IAAM,qBAAqB,OAAK,YAAY,GAAG,sBAAsB;AAGrE,IAAM,6BAA0C,uBAAO,IAAI,0CAA0C;AAGrG,IAAM,uBAAoC,8BAAc;AAAA,EACtD,CAAC,0BAA0B,GAAG;AAChC,GAAG,sBAAsB;AAGzB,IAAM,yBAAyB,OAAK,YAAY,GAAG,0BAA0B;AAG7E,IAAM,iCAA8C,uBAAO,IAAI,qCAAqC;AAGpG,IAAM,2BAAwC,8BAAc;AAAA,EAC1D,CAAC,8BAA8B,GAAG;AACpC,GAAG,0BAA0B;AAM7B,IAAM,+BAA4C,uBAAO,IAAI,mCAAmC;AAGhG,IAAM,yBAAsC,8BAAc;AAAA,EACxD,CAAC,4BAA4B,GAAG;AAClC,GAAG,wBAAwB;AAG3B,IAAM,2BAA2B,OAAK,YAAY,GAAG,4BAA4B;AAGjF,IAAM,uCAAoD,uBAAO,IAAI,oDAAoD;AAGzH,IAAM,iCAA8C,8BAAc;AAAA,EAChE,CAAC,oCAAoC,GAAG;AAC1C,GAAG,gCAAgC;AAMnC,IAAM,cAAc,WAAS;AAC3B,QAAM,QAAQ,MAAM,MAAM,IAAI;AAC9B,QAAM,MAAM,CAAC;AACb,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,MAAM,CAAC,EAAE,SAAS,iBAAiB,KAAK,MAAM,CAAC,EAAE,SAAS,gBAAgB,KAAK,MAAM,CAAC,EAAE,SAAS,cAAc,GAAG;AACpH,aAAO,IAAI,KAAK,IAAI;AAAA,IACtB,OAAO;AACL,UAAI,KAAK,MAAM,CAAC,CAAC;AAAA,IACnB;AAAA,EACF;AACA,SAAO,IAAI,KAAK,IAAI;AACtB;AAGA,IAAM,SAAS,CAAAlP,WAAS;AACtB,MAAI,kBAAkBA,MAAK,GAAG;AAC5B,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,aAAaA,MAAK,EAAE,IAAI,OAAK;AACzC,QAAI,UAAU,EAAE;AAChB,QAAI,EAAE,OAAO;AACX,iBAAW;AAAA,EAAO,YAAY,EAAE,KAAK,CAAC;AAAA,IACxC;AACA,QAAI,EAAE,MAAM;AACV,UAAI8B,WAAU,EAAE;AAChB,UAAI,IAAI;AACR,aAAOA,YAAWA,SAAQ,SAAS,UAAU,IAAI,IAAI;AACnD,mBAAW;AAAA,SAAcA,SAAQ,IAAI;AACrC,QAAAA,WAAU,eAAeA,SAAQ,MAAM;AACvC;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT,CAAC,EAAE,KAAK,MAAM;AACd,SAAO;AACT;AACA,IAAM,cAAN,MAAkB;AAAA,EAChB,YAAY,SAAS,OAAOqN,OAAM;AAChC,SAAK,UAAU;AACf,SAAK,QAAQ;AACb,SAAK,OAAOA;AAAA,EACd;AAAA,EACA,SAAS;AACP,UAAM,MAAM;AAAA,MACV,SAAS,KAAK;AAAA,IAChB;AACA,QAAI,KAAK,OAAO;AACd,UAAI,QAAQ,KAAK;AAAA,IACnB;AACA,QAAI,KAAK,MAAM;AACb,UAAI,OAAO,KAAK;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AACF;AAgBA,IAAM,qBAAqB,OAAK;AAE9B,MAAI,OAAO,MAAM,UAAU;AACzB,WAAO,UAAU,CAAC;AAAA,EACpB;AAEA,MAAI,YAAY,GAAG,UAAU,KAAKpE,YAAW,EAAE,UAAU,CAAC,KAAK,EAAE,UAAU,MAAM,OAAO,UAAU,UAAU;AAC1G,WAAO,EAAE,UAAU,EAAE;AAAA,EACvB;AAEA,SAAO,UAAU,KAAK,UAAU,CAAC,CAAC;AACpC;AACA,IAAM,aAA0B,uBAAO,IAAI,uBAAuB;AAClE,IAAM,qBAAqB,WAAS;AAClC,QAAMoE,QAAO,YAAY,OAAO,UAAU,KAAK,MAAM,UAAU;AAC/D,MAAI,iBAAiB,OAAO;AAC1B,WAAO,IAAI,YAAY,mBAAmB,KAAK,GAAG,MAAM,OAAO,MAAM,IAAI,EAAE,OAAO,OAAK,EAAE,MAAM,SAAS,CAAC,EAAE,KAAK,IAAI,GAAGA,KAAI;AAAA,EAC7H;AACA,SAAO,IAAI,YAAY,mBAAmB,KAAK,GAAG,QAAQA,KAAI;AAChE;AAGA,IAAM,eAAe,CAAAnP,WAAS,kBAAkBA,QAAO,QAAQ;AAAA,EAC7D,WAAW,MAAM,CAAC;AAAA,EAClB,SAAS,CAAC,GAAG,iBAAiB;AAC5B,WAAO,CAAC,mBAAmB,YAAY,CAAC;AAAA,EAC1C;AAAA,EACA,UAAU,CAAC,GAAG,UAAU;AACtB,WAAO,CAAC,mBAAmB,KAAK,CAAC;AAAA,EACnC;AAAA,EACA,eAAe,MAAM,CAAC;AAAA,EACtB,cAAc,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EACtC,gBAAgB,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AAC1C,CAAC;;;ACnhCD;AAAA;AAAA;AAAA,aAAAqO;AAAA,EAAA,aAAA5M;AAAA,EAAA,WAAAyH;AAAA,EAAA,iBAAAkG;AAAA,EAAA,iBAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,YAAA9F;AAAA,EAAA,aAAA7C;AAAA,EAAA,YAAAE;AAAA,EAAA,YAAA0I;AAAA,EAAA,iBAAA5E;AAAA,EAAA,kBAAA+D;AAAA;;;ACWA,IAAM,YAAyB,uBAAO,IAAI,oBAAoB;AAG9D,IAAM,eAAe;AAGrB,IAAM,YAAyB,uBAAO,IAAI,YAAY;AAGtD,IAAM,WAAW;AAAA,EACf,GAAG;AAAA,EACH,MAAM;AAAA,EACN,KAAK;AAAA,EACL,CAAC,SAAS,GAAG;AAAA,EACb,CAAC,SAAS,GAAG;AAAA,IACX,IAAI,OAAK;AAAA,IACT,IAAI,OAAK;AAAA,EACX;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,YAAY,KAAK;AAAA,MACjB,OAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,GAAG,MAAM;AACP,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,MAAM;AACZ,WAAOlF,MAAK,MAAM,IAAI;AAAA,EACxB;AACF;AACA,IAAM,cAA2B,4BAAY,kCAAkC,MAAM,oBAAI,IAAI,CAAC;AAG9F,IAAM,UAAU,gBAAc;AAC5B,MAAI,cAAc,YAAY,IAAI,UAAU,GAAG;AAC7C,WAAO,YAAY,IAAI,UAAU;AAAA,EACnC;AACA,QAAM,QAAQ,MAAM;AACpB,QAAM,kBAAkB;AACxB,QAAM,gBAAgB,IAAI,MAAM;AAChC,QAAM,kBAAkB;AACxB,QAAM,MAAM,OAAO,OAAO,QAAQ;AAClC,SAAO,eAAe,KAAK,SAAS;AAAA,IAClC,MAAM;AACJ,aAAO,cAAc;AAAA,IACvB;AAAA,EACF,CAAC;AACD,MAAI,YAAY;AACd,QAAI,aAAa;AACjB,gBAAY,IAAI,YAAY,GAAG;AAAA,EACjC;AACA,SAAO;AACT;AAGA,IAAM0B,UAAsB,uBAAO,IAAI,gBAAgB;AAGvD,IAAM,eAAe;AAAA,EACnB,CAACA,OAAM,GAAG;AAAA,IACR,IAAI,OAAK;AAAA,EACX;AAAA,EACA,CAACnF,OAAM,EAAE,MAAM;AACb,QAAI,UAAU,IAAI,GAAG;AACnB,UAAI,KAAK,UAAU,SAAS,KAAK,UAAU,MAAM;AAC/C,mBAAW,KAAK,KAAK,UAAU,KAAK,GAAG;AACrC,cAAI,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,UAAU,IAAI,CAAC,GAAG,KAAK,UAAU,IAAI,CAAC,CAAC,GAAG;AACnF,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,OAAO,KAAK,UAAU,IAAI;AAAA,EACnC;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,UAAU,MAAM,KAAK,KAAK,SAAS,EAAE,IAAI,MAAM;AAAA,IACjD;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AACF;AAGA,IAAM,cAAc,eAAa;AAC/B,QAAM/D,WAAU,OAAO,OAAO,YAAY;AAC1C,EAAAA,SAAQ,YAAY;AACpB,SAAOA;AACT;AACA,IAAM,uBAAuB,SAAO;AAClC,QAAM,QAAQ,IAAI,MAAM,oBAAoB,IAAI,aAAa,KAAK,OAAO,IAAI,UAAU,CAAC,KAAK,EAAE,EAAE;AACjG,MAAI,IAAI,OAAO;AACb,UAAM,QAAQ,IAAI,MAAM,MAAM,IAAI;AAClC,QAAI,MAAM,SAAS,GAAG;AACpB,YAAM,UAAU,MAAM,CAAC,EAAE,MAAM,SAAS;AACxC,UAAI,SAAS;AACX,cAAM,UAAU,MAAM,UAAU,gBAAgB,QAAQ,CAAC,CAAC;AAAA,MAC5D;AAAA,IACF;AAAA,EACF;AACA,MAAI,MAAM,OAAO;AACf,UAAM,QAAQ,MAAM,MAAM,MAAM,IAAI;AACpC,UAAM,OAAO,GAAG,CAAC;AACjB,UAAM,QAAQ,MAAM,KAAK,IAAI;AAAA,EAC/B;AACA,SAAO;AACT;AAGA,IAAM,YAAY,OAAK,YAAY,GAAGkJ,OAAM;AAG5C,IAAM,QAAQ,OAAK,YAAY,GAAG,SAAS;AAC3C,IAAM0C,UAAsB,4BAA0B,oBAAI,IAAI,CAAC;AAG/D,IAAMnM,SAAQ,MAAMmM;AAGpB,IAAMpE,QAAO,CAAC,KAAKgG,aAAY,YAAY,oBAAI,IAAI,CAAC,CAAC,KAAKA,QAAO,CAAC,CAAC,CAAC;AAGpE,IAAMnB,OAAmB,qBAAK,GAAG,CAAC,MAAM,KAAKmB,aAAY;AACvD,QAAM9F,QAAM,IAAI,IAAI,KAAK,SAAS;AAClC,EAAAA,MAAI,IAAI,KAAK8F,QAAO;AACpB,SAAO,YAAY9F,KAAG;AACxB,CAAC;AAGD,IAAMiB,aAAyB,qBAAK,GAAG,CAAC,MAAM,QAAQ;AACpD,MAAI,CAAC,KAAK,UAAU,IAAI,GAAG,GAAG;AAC5B,UAAM,qBAAqB,GAAG;AAAA,EAChC;AACA,SAAO,KAAK,UAAU,IAAI,GAAG;AAC/B,CAAC;AAGD,IAAMzB,OAAMyB;AAGZ,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,QAAQ;AACpD,MAAI,CAAC,KAAK,UAAU,IAAI,GAAG,GAAG;AAC5B,WAAO;AAAA,EACT;AACA,SAAO,KAAK,KAAK,UAAU,IAAI,GAAG,CAAC;AACrC,CAAC;AAGD,IAAMhE,SAAqB,qBAAK,GAAG,CAAC,MAAM,SAAS;AACjD,QAAM+C,QAAM,IAAI,IAAI,KAAK,SAAS;AAClC,aAAW,CAAC,KAAK,CAAC,KAAK,KAAK,WAAW;AACrC,IAAAA,MAAI,IAAI,KAAK,CAAC;AAAA,EAChB;AACA,SAAO,YAAYA,KAAG;AACxB,CAAC;AAGD,IAAM,OAAO,IAAI,SAAS,UAAQ;AAChC,QAAM,SAAS,IAAI,IAAI,IAAI;AAC3B,QAAM,SAAS,oBAAI,IAAI;AACvB,aAAW,CAAC,KAAK,CAAC,KAAK,KAAK,UAAU,QAAQ,GAAG;AAC/C,QAAI,OAAO,IAAI,GAAG,GAAG;AACnB,aAAO,IAAI,KAAK,CAAC;AAAA,IACnB;AAAA,EACF;AACA,SAAO,YAAY,MAAM;AAC3B;AAGA,IAAM,OAAO,IAAI,SAAS,UAAQ;AAChC,QAAM,SAAS,IAAI,IAAI,KAAK,SAAS;AACrC,aAAW,OAAO,MAAM;AACtB,WAAO,OAAO,GAAG;AAAA,EACnB;AACA,SAAO,YAAY,MAAM;AAC3B;;;ADtJA,IAAM,MAAM;AAqBZ,IAAMgF,cAAa;AAenB,IAAMW,aAAY;AAelB,IAAMC,SAAQ;AAad,IAAM7N,SAAQA;AAiBd,IAAM+H,SAAOA;AAwBb,IAAM6E,OAAMA;AAyBZ,IAAMnF,OAAMA;AAyBZ,IAAMyB,aAAYA;AAwBlB,IAAMyE,aAAY;AAwBlB,IAAMzI,SAAQA;AA4Bd,IAAM4I,QAAO;AAKb,IAAM1I,QAAO;;;AE7Rb,IAAM,qBAAkC,uBAAO,IAAI,2BAA2B;AAC9E,SAAS4I,UAAS,GAAG;AACnB,SAAO;AACT;AAGA,IAAM,aAAa;AAAA,EACjB,GAAG,WAAW;AAAA,EACd,CAAC,kBAAkB,GAAG;AAAA,IACpB,QAAQA;AAAA,IACR,QAAQA;AAAA,EACV;AACF;AACA,IAAM,aAA0B,uBAAO,OAAqB,uBAAO,OAAO,UAAU,GAAG;AAAA,EACrF,MAAM;AACR,CAAC;AACD,IAAM7B,UAAsB,uBAAO,OAAO,UAAU;AAKpD,IAAMnM,SAAQ,MAAMmM;AAIpB,IAAM,eAA4B,uBAAO,OAAqB,uBAAO,OAAO,UAAU,GAAG;AAAA,EACvF,MAAM;AACR,CAAC;AACD,IAAM,cAAc,CAAC8B,QAAO,WAAW;AACrC,QAAM,IAAI,OAAO,OAAO,YAAY;AACpC,IAAE,QAAQA;AACV,IAAE,SAAS;AACX,SAAO;AACT;AAIA,IAAM,kBAA+B,uBAAO,OAAqB,uBAAO,OAAO,UAAU,GAAG;AAAA,EAC1F,MAAM;AACR,CAAC;AACD,IAAM,iBAAiB,CAAC,KAAKF,aAAY;AACvC,QAAM,IAAI,OAAO,OAAO,eAAe;AACvC,IAAE,MAAM;AACR,IAAE,UAAUA;AACZ,SAAO;AACT;AAIA,IAAM,qBAAkC,uBAAO,OAAqB,uBAAO,OAAO,UAAU,GAAG;AAAA,EAC7F,MAAM;AACR,CAAC;AACD,IAAM,oBAAoB,SAAO;AAC/B,QAAM,IAAI,OAAO,OAAO,kBAAkB;AAC1C,IAAE,MAAM;AACR,SAAO;AACT;AAIA,IAAM,qBAAkC,uBAAO,OAAqB,uBAAO,OAAO,UAAU,GAAG;AAAA,EAC7F,MAAM;AACR,CAAC;AACD,IAAM,oBAAoB,CAAC,KAAKG,YAAW;AACzC,QAAM,IAAI,OAAO,OAAO,kBAAkB;AAC1C,IAAE,MAAM;AACR,IAAE,SAASA;AACX,SAAO;AACT;AAEA,IAAM,OAAO,CAAC,UAAU,aAAa;AACnC,QAAM,kBAAkB,IAAI,IAAI,SAAS,SAAS;AAClD,MAAIC,SAAQnO,OAAM;AAClB,aAAW,CAAC,KAAK,UAAU,KAAK,SAAS,UAAU,QAAQ,GAAG;AAC5D,QAAI,gBAAgB,IAAI,GAAG,GAAG;AAC5B,YAAM,MAAM,gBAAgB,IAAI,GAAG;AACnC,sBAAgB,OAAO,GAAG;AAC1B,UAAI,CAAC,OAAO,KAAK,UAAU,GAAG;AAC5B,QAAAmO,SAAQrB,SAAQ,kBAAkB,KAAK,MAAM,UAAU,CAAC,EAAEqB,MAAK;AAAA,MACjE;AAAA,IACF,OAAO;AACL,sBAAgB,OAAO,GAAG;AAC1B,MAAAA,SAAQrB,SAAQ,eAAe,KAAK,UAAU,CAAC,EAAEqB,MAAK;AAAA,IACxD;AAAA,EACF;AACA,aAAW,CAAC,GAAG,KAAK,gBAAgB,QAAQ,GAAG;AAC7C,IAAAA,SAAQrB,SAAQ,kBAAkB,GAAG,CAAC,EAAEqB,MAAK;AAAA,EAC/C;AACA,SAAOA;AACT;AAGA,IAAMrB,WAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS,YAAY,MAAM,IAAI,CAAC;AAG5E,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAMvM,aAAY;AACpD,MAAI,oBAAoB;AACxB,MAAI,UAAU6H,IAAG,IAAI;AACrB,QAAM,iBAAiB,IAAI,IAAI7H,SAAQ,SAAS;AAChD,SAAO,WAAW,OAAO,GAAG;AAC1B,UAAMjC,QAAOqJ,cAAa,OAAO;AACjC,UAAM3F,QAAOgH,cAAa,OAAO;AACjC,YAAQ1K,MAAK,MAAM;AAAA,MACjB,KAAK,SACH;AACE,kBAAU0D;AACV;AAAA,MACF;AAAA,MACF,KAAK,cACH;AACE,uBAAe,IAAI1D,MAAK,KAAKA,MAAK,OAAO;AACzC,kBAAU0D;AACV;AAAA,MACF;AAAA,MACF,KAAK,WACH;AACE,kBAAUuG,SAAQA,SAAQvG,OAAM1D,MAAK,MAAM,GAAGA,MAAK,KAAK;AACxD;AAAA,MACF;AAAA,MACF,KAAK,iBACH;AACE,uBAAe,OAAOA,MAAK,GAAG;AAC9B,kBAAU0D;AACV;AAAA,MACF;AAAA,MACF,KAAK,iBACH;AACE,uBAAe,IAAI1D,MAAK,KAAKA,MAAK,OAAO,eAAe,IAAIA,MAAK,GAAG,CAAC,CAAC;AACtE,4BAAoB;AACpB,kBAAU0D;AACV;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,MAAI,CAAC,mBAAmB;AACtB,WAAO,YAAY,cAAc;AAAA,EACnC;AACA,QAAMiG,QAAM,oBAAI,IAAI;AACpB,aAAW,CAAC,GAAG,KAAK1H,SAAQ,WAAW;AACrC,QAAI,eAAe,IAAI,GAAG,GAAG;AAC3B,MAAA0H,MAAI,IAAI,KAAK,eAAe,IAAI,GAAG,CAAC;AACpC,qBAAe,OAAO,GAAG;AAAA,IAC3B;AAAA,EACF;AACA,aAAW,CAAC,KAAK,CAAC,KAAK,gBAAgB;AACrC,IAAAA,MAAI,IAAI,KAAK,CAAC;AAAA,EAChB;AACA,SAAO,YAAYA,KAAG;AACxB,CAAC;;;AC1HD,IAAMjI,UAAQA;AAQd,IAAM+H,SAAOA;AAQb,IAAMP,gBAAeA;AAQrB,IAAM4E,WAAUA;AAShB,IAAM3E,OAAMA;AA0CZ,IAAM+E,OAAM;AAQZ,IAAM3P,QAAO;AAwBb,IAAMsF,QAAOA;AAqEb,IAAMuG,UAASA;AAef,IAAMT,OAAMA;AAkBZ,IAAMoE,WAAUA;AAQhB,IAAM7D,UAASA;;;ACpPf,IAAM,qBAAkC,uBAAO,IAAI,2BAA2B;AAC9E,SAASwF,UAAS,GAAG;AACnB,SAAO;AACT;AAGA,IAAMI,cAAa;AAAA,EACjB,GAAG,WAAW;AAAA,EACd,CAAC,kBAAkB,GAAG;AAAA,IACpB,QAAQJ;AAAA,IACR,MAAMA;AAAA,IACN,QAAQA;AAAA,EACV;AACF;AACA,IAAMK,cAA0B,uBAAO,OAAqB,uBAAO,OAAOD,WAAU,GAAG;AAAA,EACrF,MAAM;AACR,CAAC;AACD,IAAMjC,UAAsB,uBAAO,OAAOkC,WAAU;AAGpD,IAAMrO,UAAQ,MAAMmM;AACpB,IAAMmC,gBAA4B,uBAAO,OAAqB,uBAAO,OAAOF,WAAU,GAAG;AAAA,EACvF,MAAM;AACR,CAAC;AAGD,IAAMG,eAAc,CAACN,QAAO,WAAW;AACrC,QAAM,IAAI,OAAO,OAAOK,aAAY;AACpC,IAAE,QAAQL;AACV,IAAE,SAAS;AACX,SAAO;AACT;AACA,IAAM,WAAwB,uBAAO,OAAqB,uBAAO,OAAOG,WAAU,GAAG;AAAA,EACnF,MAAM;AACR,CAAC;AAGD,IAAM,UAAU,CAAAxR,WAAS;AACvB,QAAM,IAAI,OAAO,OAAO,QAAQ;AAChC,IAAE,QAAQA;AACV,SAAO;AACT;AACA,IAAM,cAA2B,uBAAO,OAAqB,uBAAO,OAAOwR,WAAU,GAAG;AAAA,EACtF,MAAM;AACR,CAAC;AAGD,IAAM,aAAa,CAAAxR,WAAS;AAC1B,QAAM,IAAI,OAAO,OAAO,WAAW;AACnC,IAAE,QAAQA;AACV,SAAO;AACT;AAEA,IAAMgP,QAAO,CAAC,UAAU,aAAa;AACnC,QAAM,CAAC,SAASuC,MAAK,IAAI3F,QAAO,CAAC,UAAUxI,QAAM,CAAC,GAAG,CAAC,CAACwM,MAAK2B,MAAK,GAAGvR,WAAU;AAC5E,QAAI6O,KAAI7O,MAAK,EAAE4P,IAAG,GAAG;AACnB,aAAO,CAAC9D,QAAO9L,MAAK,EAAE4P,IAAG,GAAG2B,MAAK;AAAA,IACnC;AACA,WAAO,CAAC3B,MAAKM,SAAQ,QAAQlQ,MAAK,CAAC,EAAEuR,MAAK,CAAC;AAAA,EAC7C,CAAC,EAAE,QAAQ;AACX,SAAO3F,QAAO2F,QAAO,CAACA,QAAOvR,WAAUkQ,SAAQ,WAAWlQ,MAAK,CAAC,EAAEuR,MAAK,CAAC,EAAE,OAAO;AACnF;AAGA,IAAMrB,WAAuB,qBAAK,GAAG,CAAC,MAAM,SAASyB,aAAY,MAAM,IAAI,CAAC;AAG5E,IAAMJ,SAAqB,qBAAK,GAAG,CAAC,MAAM,aAAa;AACrD,MAAI3B,OAAM;AACV,MAAI,UAAUpE,IAAG,IAAI;AACrB,SAAO,WAAW,OAAO,GAAG;AAC1B,UAAM9J,QAAOqJ,cAAa,OAAO;AACjC,UAAM3F,QAAOgH,cAAa,OAAO;AACjC,YAAQ1K,MAAK,MAAM;AAAA,MACjB,KAAK,SACH;AACE,kBAAU0D;AACV;AAAA,MACF;AAAA,MACF,KAAK,WACH;AACE,kBAAUuG,SAAQjK,MAAK,KAAK,EAAEiK,SAAQjK,MAAK,MAAM,EAAE0D,KAAI,CAAC;AACxD;AAAA,MACF;AAAA,MACF,KAAK,OACH;AACE,QAAAwK,OAAMI,KAAItO,MAAK,KAAK,EAAEkO,IAAG;AACzB,kBAAUxK;AACV;AAAA,MACF;AAAA,MACF,KAAK,UACH;AACE,QAAAwK,OAAM9D,QAAOpK,MAAK,KAAK,EAAEkO,IAAG;AAC5B,kBAAUxK;AAAA,MACZ;AAAA,IACJ;AAAA,EACF;AACA,SAAOwK;AACT,CAAC;;;AC/FD,IAAM,eAA4B,uBAAO,IAAI,eAAe;AAG5D,IAAM,cAAc;AAAA,EAClB,CAAC,YAAY,GAAG;AAAA,IACd,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AACF;AAGA,IAAMzE,SAAO,YAAU;AACrB,QAAMyG,UAAS,OAAO,OAAO,WAAW;AACxC,EAAAA,QAAO,QAAQ,OAAO;AACtB,EAAAA,QAAO,OAAO,OAAO;AACrB,EAAAA,QAAO,UAAU,OAAO;AACxB,EAAAA,QAAO,QAAQ,OAAO;AACtB,SAAOA;AACT;AAGA,IAAM,cAAc,MAAMzG,OAAK;AAAA,EAC7B,OAAO/H,OAAM;AAAA,EACb,SAAS,CAACiO,QAAO,WAAWnB,SAAQ,MAAM,EAAEmB,MAAK;AAAA,EACjD,MAAM,CAAC,UAAU,aAAa,KAAK,UAAU,QAAQ;AAAA,EACrD,OAAO,CAAC,SAAS,aAAa,MAAM,QAAQ,EAAE,OAAO;AACvD,CAAC;AA2BD,IAAM,UAAU,MAAMlG,OAAK;AAAA,EACzB,OAAO/H,QAAQ;AAAA,EACf,SAAS,CAACiO,QAAO,WAAWnB,SAAU,MAAM,EAAEmB,MAAK;AAAA,EACnD,MAAM,CAAC,UAAU,aAAarC,MAAO,UAAU,QAAQ;AAAA,EACvD,OAAO,CAACuC,QAAO,aAAaA,OAAQ,QAAQ,EAAEA,MAAK;AACrD,CAAC;AA+BD,IAAMD,UAAS,MAAM,WAAW,CAAC,GAAG,MAAM,CAAC;AAG3C,IAAM,aAAa,OAAKnG,OAAK;AAAA,EAC3B,OAAO;AAAA,EACP,SAAS,CAACkG,QAAO,WAAW;AAC1B,QAAIA,WAAU,UAAU;AACtB,aAAO;AAAA,IACT;AACA,QAAI,WAAW,UAAU;AACvB,aAAOA;AAAA,IACT;AACA,WAAO,OAAK,OAAOA,OAAM,CAAC,CAAC;AAAA,EAC7B;AAAA,EACA,MAAM,CAAC,UAAU,aAAa;AAC5B,QAAI,OAAO,UAAU,QAAQ,GAAG;AAC9B,aAAO;AAAA,IACT;AACA,WAAO,SAAS,QAAQ;AAAA,EAC1B;AAAA,EACA,OAAO,CAACE,QAAO,aAAa,EAAE,UAAUA,OAAM,QAAQ,CAAC;AACzD,CAAC;;;AC7DD,IAAMpG,SAAOA;AAQb,IAAMhL,eAAc;AA0BpB,IAAM0R,WAAU;AA0BhB,IAAMP,UAASA;;;AC9Ef,IAAMzE,UAAsB,uBAAO,IAAI,aAAa;AAuBpD,IAAMiF,mBAAkB,UAAQ,MAAM,KAAK,IAAI;AAM/C,IAAMhH,kBAAiB,kBAAgB,SAASA,gBAAiB,YAAY,GAAGgH,gBAAe;AAC/F,IAAMlD,gBAA4B,gBAAA9D,gBAAe,MAAM;AACvD,IAAM,YAAY;AAAA,EAChB,CAAC+B,OAAM,GAAGA;AAAA,EACV,MAAM;AAAA,EACN,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQiF,iBAAgB,IAAI,EAAE,IAAI,MAAM;AAAA,IAC1C;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,CAACpK,OAAQ,EAAE,MAAM;AACf,WAAO,OAAO,IAAI,KAAK,KAAK,SAAS,KAAK,QAAQkH,cAAa,MAAM,IAAI;AAAA,EAC3E;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,MAAMkD,iBAAgB,IAAI,CAAC;AAAA,EACpC;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,QAAI5Q,SAAO;AAEX,QAAI,OAAO;AACX,WAAO;AAAA,MACL,OAAO;AACL,YAAIA,QAAM;AACR,iBAAO,KAAK,OAAO;AAAA,QACrB;AACA,YAAI,KAAK,SAAS,OAAO;AACvB,UAAAA,SAAO;AACP,iBAAO,KAAK,OAAO;AAAA,QACrB;AACA,cAAMlB,SAAQ,KAAK;AACnB,eAAO,KAAK;AACZ,eAAO;AAAA,UACL,MAAAkB;AAAA,UACA,OAAAlB;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAOA,QAAO;AACZ,YAAI,CAACkB,QAAM;AACT,UAAAA,SAAO;AAAA,QACT;AACA,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAAlB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAM,WAAW,CAAC0B,OAAM0D,UAAS;AAC/B,QAAM2M,QAAO,OAAO,OAAO,SAAS;AACpC,EAAAA,MAAK,OAAOrQ;AACZ,EAAAqQ,MAAK,OAAO3M;AACZ,SAAO2M;AACT;AACA,IAAM,WAAW;AAAA,EACf,CAAClF,OAAM,GAAGA;AAAA,EACV,MAAM;AAAA,EACN,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,MAAMiF,iBAAgB,IAAI,CAAC;AAAA,EACpC;AAAA,EACA,CAACpK,OAAQ,EAAE,MAAM;AACf,WAAO,OAAO,IAAI,KAAK,KAAK,SAAS,KAAK;AAAA,EAC5C;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO;AAAA,MACL,OAAO;AACL,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAM,OAAoB,uBAAO,OAAO,QAAQ;AAQhD,IAAM,SAAS,OAAK,YAAY,GAAGmF,OAAM;AAQzC,IAAM,QAAQ,UAAQ,KAAK,SAAS;AAQpC,IAAM,SAAS,UAAQ,KAAK,SAAS;AAwBrC,IAAM,MAAM,MAAM;AAQlB,IAAM,OAAO,CAACnL,OAAM0D,UAAS,SAAS1D,OAAM0D,KAAI;AAUhD,IAAMhC,UAAQ;AAQd,IAAMoI,MAAK,CAAAxL,WAAS,SAASA,QAAO,IAAI;AA+CxC,IAAM4J,aAAyB,qBAAK,GAAG,CAAC,MAAM,SAASoI,YAAW,MAAM,IAAI,CAAC;AAc7E,IAAMrG,WAAuB,qBAAK,GAAG,CAAC,MAAM,YAAY,KAAK,SAAS,IAAI,CAAC;AAQ3E,IAAMqG,cAA0B,qBAAK,GAAG,CAAC,MAAM,WAAW;AACxD,MAAI,MAAM,IAAI,GAAG;AACf,WAAO;AAAA,EACT,WAAW,MAAM,MAAM,GAAG;AACxB,WAAO;AAAA,EACT,OAAO;AACL,UAAM,SAAS,SAAS,OAAO,MAAM,IAAI;AACzC,QAAI,OAAO;AACX,QAAI,OAAO,OAAO;AAClB,WAAO,CAAC,MAAM,IAAI,GAAG;AACnB,YAAM,OAAO,SAAS,KAAK,MAAM,IAAI;AACrC,WAAK,OAAO;AACZ,aAAO;AACP,aAAO,KAAK;AAAA,IACd;AACA,WAAO;AAAA,EACT;AACF,CAAC;AAoWD,IAAMpG,UAAsB,qBAAK,GAAG,CAAC,MAAM8D,OAAM,MAAM;AACrD,MAAI,MAAMA;AACV,MAAI,QAAQ;AACZ,SAAO,CAAC,MAAM,KAAK,GAAG;AACpB,UAAM,EAAE,KAAK,MAAM,IAAI;AACvB,YAAQ,MAAM;AAAA,EAChB;AACA,SAAO;AACT,CAAC;AAyBD,IAAM3D,WAAU,UAAQ;AACtB,MAAI,SAAS3I,QAAM;AACnB,MAAI,QAAQ;AACZ,SAAO,CAAC,MAAM,KAAK,GAAG;AACpB,aAASuI,SAAQ,QAAQ,MAAM,IAAI;AACnC,YAAQ,MAAM;AAAA,EAChB;AACA,SAAO;AACT;;;AC9sBA,IAAMvI,UAAQ;AAAA,EACZ,MAAM;AACR;AAQA,IAAM,MAAM,CAAC,MAAM,UAAU;AAAA,EAC3B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AAQA,IAAM,MAAM,CAAC,MAAM,UAAU;AAAA,EAC3B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AAQA,IAAM,SAAS,CAAC,YAAY,oBAAoB;AAAA,EAC9C,MAAM;AAAA,EACN;AAAA,EACA;AACF;AAiGA,IAAMuH,WAAU,UAAQ;AACtB,MAAIlH,WAAU+H,IAAG,IAAI;AACrB,MAAI,UAAUpI,QAAQ;AAEtB,SAAO,GAAG;AACR,UAAM,CAACoN,WAAUC,WAAU,IAAI7E,QAASnI,UAAS,CAAC,wBAAwB,GAAGL,QAAQ,CAAC,GAAG,CAAC,CAACoN,WAAUC,WAAU,GAAG,mBAAmB;AACnI,YAAM,CAACC,MAAK7M,IAAG,IAAI,KAAK,cAAc;AACtC,aAAO,CAAC,0BAA0B2M,WAAUE,IAAG,GAAG9G,WAAU6G,aAAY5M,IAAG,CAAC;AAAA,IAC9E,CAAC;AACD,cAAUyE,OAAM,SAASkI,SAAQ;AACjC,QAAI,MAAMC,WAAU,GAAG;AACrB,aAAO1E,SAAQ,OAAO;AAAA,IACxB;AACA,IAAAtI,WAAUgN;AAAA,EACZ;AACA,QAAM,IAAI,MAAM,oGAAoG;AACtH;AAQA,IAAM,OAAO,cAAY;AACvB,MAAIhN,WAAU;AACd,MAAI+M,YAAW,wBAAwB;AACvC,MAAI,QAAQpN,QAAQ;AACpB,MAAIqN,cAAarN,QAAQ;AAEzB,SAAO,GAAG;AACR,YAAQK,SAAQ,MAAM;AAAA,MACpB,KAAK,SACH;AACE,YAAI,MAAM,KAAK,GAAG;AAChB,iBAAO,CAAC+M,WAAUC,WAAU;AAAA,QAC9B;AACA,QAAAhN,WAAU,MAAM;AAChB,gBAAQ,MAAM;AACd;AAAA,MACF;AAAA,MACF,KAAK,OACH;AACE,gBAAQ,KAAKA,SAAQ,OAAO,KAAK;AACjC,QAAAA,WAAUA,SAAQ;AAClB;AAAA,MACF;AAAA,MACF,KAAK,OACH;AACE,cAAM+J,QAAO/J,SAAQ;AACrB,cAAMgK,SAAQhK,SAAQ;AACtB,gBAAQ+J,MAAK,MAAM;AAAA,UACjB,KAAK,SACH;AACE,YAAA/J,WAAUgK;AACV;AAAA,UACF;AAAA,UACF,KAAK,OACH;AACE,kBAAM,IAAID,MAAK;AACf,kBAAM,IAAIA,MAAK;AACf,YAAA/J,WAAU,IAAI,IAAI,GAAGgK,MAAK,GAAG,IAAI,GAAGA,MAAK,CAAC;AAC1C;AAAA,UACF;AAAA,UACF,KAAK,OACH;AACE,kBAAM,IAAID,MAAK;AACf,kBAAM,IAAIA,MAAK;AACf,YAAA/J,WAAU,IAAI,GAAG,IAAI,GAAGgK,MAAK,CAAC;AAC9B;AAAA,UACF;AAAA,UACF,KAAK,UACH;AACE,YAAAhK,WAAU+J;AACV,YAAAiD,cAAa,KAAKhD,QAAOgD,WAAU;AACnC;AAAA,UACF;AAAA,QACJ;AACA;AAAA,MACF;AAAA,MACF,KAAK,UACH;AACE,QAAAD,YAAW,0BAA0BA,WAAU,uBAAuB/M,SAAQ,YAAYA,SAAQ,cAAc,CAAC;AACjH,YAAI,MAAM,KAAK,GAAG;AAChB,iBAAO,CAAC+M,WAAUC,WAAU;AAAA,QAC9B;AACA,QAAAhN,WAAU,MAAM;AAChB,gBAAQ,MAAM;AACd;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,QAAM,IAAI,MAAM,iGAAiG;AACnH;AAQA,IAAM6E,SAAQ,CAACmI,aAAYD,cAAa;AACtC,MAAI,MAAMC,WAAU,GAAG;AACrB,WAAOjF,IAAG,yCAAyCgF,SAAQ,CAAC;AAAA,EAC9D;AACA,MAAI,0BAA0BA,SAAQ,GAAG;AACvC,WAAOC;AAAA,EACT;AACA,QAAM,cAAc,yBAAyBA,YAAW,IAAI;AAC5D,QAAM,UAAU,uBAAuBD,SAAQ;AAC/C,MAAI,YAAY,WAAW,KAAK,QAAQ,WAAW,KAAK,OAAO,YAAY,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG;AAC1F,WAAO,KAAK,4BAA4BC,YAAW,MAAM,yCAAyCD,SAAQ,CAAC,GAAGC,YAAW,IAAI;AAAA,EAC/H;AACA,SAAO,KAAK,yCAAyCD,SAAQ,GAAGC,WAAU;AAC5E;AAOA,IAAM,cAA2B,uBAAO,IAAI,2BAA2B;AAGvE,IAAM,YAAN,MAAgB;AAAA,EACd,CAAC,WAAW,IAAI;AAAA,EAChB,YAAYtN,UAAS,QAAQ,WAAW,SAAS,OAAO;AACtD,SAAK,UAAUA;AACf,SAAK,SAAS;AACd,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA,EACf;AACF;AAGA,IAAM,yBAAyB;AAAA,EAC7B,IAAI,OAAK;AACX;AAMA,IAAM,YAAY,aAAW,IAAI,UAAU,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,WAAW,QAAQ,SAAS,QAAQ,KAAK;AAG7H,IAAM,6BAA0C,uBAAO,IAAI,0CAA0C;AACrG,IAAM,mBAAmB;AAAA,EACvB,IAAI,OAAK;AACX;AACA,IAAM,eAAN,MAAmB;AAAA,EACjB,CAAC,0BAA0B,IAAI;AAAA,EAC/B,YAAYkI,OAAK;AACf,SAAK,MAAMA;AAAA,EACb;AACF;AAGA,IAAM,0BAA0B,MAAM,IAAI,aAAajI,QAAQ,CAAC;AAGhE,IAAM,yBAAyB,CAAC,YAAY,mBAAmB,IAAI,aAAa+H,OAAK,CAAC,YAAY,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC;AAG5H,IAAM,4BAA4B,CAAC,MAAM,SAAS,IAAI,aAAaS,QAAS,KAAK,KAAK,KAAK,KAAK,CAACP,OAAKrL,QAAO,QAAQ4P,KAAIvE,OAAK,KAAK,MAAMR,KAAIQ,OAAK,GAAG,GAAG;AAAA,EACtJ,QAAQ,MAAMrL;AAAA,EACd,QAAQ,OAAK,CAAC,GAAG,GAAG,GAAGA,MAAK;AAC9B,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAM,4BAA4B,UAAQwP,SAAQ,KAAK,GAAG;AAG1D,IAAM,yBAAyB,UAAQ,MAAM,KAAKvP,MAAK,KAAK,GAAG,CAAC;AAGhE,IAAM,2CAA2C,UAAQ,yBAAyBoL,KAAI,KAAK,KAAK,OAAK,MAAM,GAAG,CAAC,CAAC,CAAC;AAGjH,IAAM,6BAA0C,uBAAO,IAAI,4CAA4C;AAGvG,IAAM,qBAAqB;AAAA,EACzB,IAAI,OAAK;AACX;AACA,IAAM,iBAAN,MAAqB;AAAA,EACnB,CAAC,0BAA0B,IAAI;AAAA,EAC/B,YAAYA,OAAK;AACf,SAAK,MAAMA;AAAA,EACb;AACF;AAGA,IAAM,2BAA2B,CAAAA,UAAO,IAAI,eAAeA,KAAG;AAG9D,IAAM,8BAA8B,CAAC,MAAM,SAAS,IAAI,eAAeO,QAAS,KAAK,KAAK,KAAK,KAAK,CAACP,OAAKrL,QAAO,QAAQ4P,KAAIvE,OAAK,KAAK,MAAMR,KAAIQ,OAAK,GAAG,GAAG;AAAA,EAC1J,QAAQ,MAAM,CAAC;AAAA,EACf,QAAQ,OAAK,CAAC,GAAG,GAAG,GAAGrL,MAAK;AAC9B,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAM,2BAA2B,UAAQ,MAAM,KAAKC,MAAK,KAAK,GAAG,CAAC;AAGlE,IAAM,8BAA8B,UAAQ,MAAM,KAAK,KAAK,GAAG;;;AC5V/D,IAAM,mBAAmB;AAKzB,IAAM,gBAAgB;;;ACHtB,IAAM,oBAAoB;AAG1B,IAAM,iBAA8B,uBAAO,IAAI,iBAAiB;AAGhE,IAAM,mBAAmB;AAAA,EACvB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AASA,IAAM,UAAU,aAAW;AACzB,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,EACF;AACF;AAGA,IAAM,OAAO,CAAAgS,YAAU;AACrB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,QAAAA;AAAA,EACF;AACF;;;AC/BA,IAAM,WAAW;AAGjB,IAAM,YAAY;AAGlB,IAAM,SAAS,CAAAV,WAASA,SAAQ;AAGhC,IAAM,UAAU,CAAAA,WAASA,UAAS,YAAY;AAG9C,IAAMpG,SAAO,CAAC+G,SAAQ1R,cAAa0R,UAAS,cAAc1R,WAAU0R,UAAS,aAAa;AAG1F,IAAM9O,UAAqB,gBAAA+H,OAAK,GAAG,CAAC;AAGpC,IAAM,SAAS,UAAQA,OAAK,MAAM,IAAI;AAGtC,IAAM,UAAU,UAAQA,OAAK,MAAM,CAAC;AAepC,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,SAASA,OAAK,OAAO,IAAI,IAAI,CAAC,MAAM,QAAQ,IAAI,CAAC,CAAC;AAS9F,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS,OAAO,IAAI;AAMhE,IAAM,SAAS,OAAK,CAAC,MAAM,IAAI;;;ACjD/B,IAAMgH,QAAO;AAGb,IAAM,eAAe,KAAK;AAG1B,IAAM,gBAAgB,KAAK;AAG3B,IAAM,iBAAiB,KAAK;AAG5B,IAAM,WAAW,KAAK;AAGtB,IAAM,sBAAsB,KAAK;AAkCjC,IAAM,sBAAsB,UAAQ,UAAU,MAAM,mBAAmB;AASvE,IAAM5R,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS,OAAO,IAAI;AAM/D,IAAM,gBAAgB,UAAQ,aAAa,IAAI,KAAK,CAAC,SAAS,IAAI;AAGlE,IAAM,eAAe,UAAQ,UAAU,MAAM,YAAY;AAMzD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,UAAU,OAAO,UAAU,CAAC;AAG1E,IAAM4K,SAAO,IAAI,UAAU,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC;AAG1D,IAAMiC,QAAoB,gBAAAjC,OAAKgH,KAAI;AAiBnC,IAAM,iBAAiB,UAAQ,UAAU,MAAM,cAAc;AAI7D,IAAM,WAAW,UAAQ,UAAU,MAAM,QAAQ;AAWjD,IAAMnD,QAAoB,qBAAK,GAAG,CAAC,MAAM,SAAS7D,OAAO,OAAO,MAAM,IAAI,CAAC;AAG3E,IAAMoG,SAAqB,qBAAK,GAAG,CAAC,MAAMA,WAAU,QAAQ,OAAO,OAAOA,MAAK,CAAC,IAAI,QAAQA,MAAK,KAAK,OAAOA,MAAK,IAAI,QAAQA,MAAK,CAAC;AAUpI,IAAM,SAAsB,gBAAApG,OAAO;AAAA,EACjC,OAAO/H;AAAA,EACP,MAAM,CAAC,UAAU,aAAa4L,MAAK,UAAU,QAAQ;AAAA,EACrD,SAAS,CAACqC,QAAO,WAAW,QAAQ,MAAM,EAAEA,MAAK;AAAA,EACjD,OAAO,CAAC,QAAQ,aAAaE,OAAM,UAAU,MAAM;AACrD,CAAC;;;AC9HD,IAAM,eAA4B,uBAAO,IAAI,eAAe;AAG5D,IAAMpG,SAAO,cAAY;AAAA,EACvB,CAAC,YAAY,GAAG;AAAA,EAChB,GAAG;AACL;AAGA,IAAM,YAAyB,oBAAkB,uBAAO,IAAI,eAAe,CAAC;AAG5E,IAAM,UAAuB,oBAAkB,uBAAO,IAAI,mBAAmB,CAAC;AAC9E,IAAMgF,OAAmB,4BAAY,4BAA4B,MAAMhF,MAAO,CAAC,CAAC;AAGhF,IAAM,aAAN,MAAiB;AAAA,EACf,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS,CAAC;AAAA,EACV,YAAY,MAAM,QAAQxH,UAAS,OAAO,WAAW;AACnD,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,UAAUA;AACf,SAAK,QAAQ;AACb,SAAK,YAAY;AACjB,SAAK,SAAS;AAAA,MACZ,MAAM;AAAA,MACN;AAAA,IACF;AACA,SAAK,aAAa,oBAAI,IAAI;AAC1B,SAAK,SAAS,OAAO,gBAAgBwM,IAAG,CAAC;AAAA,EAC3C;AAAA,EACA,MAAM,CAAC,SAASiC,UAAS;AACvB,SAAK,SAAS;AAAA,MACZ,MAAM;AAAA,MACN;AAAA,MACA,MAAAA;AAAA,MACA,WAAW,KAAK,OAAO;AAAA,IACzB;AAAA,EACF;AAAA,EACA,YAAY,CAAC,KAAKpS,WAAU;AAC1B,SAAK,WAAW,IAAI,KAAKA,MAAK;AAAA,EAChC;AAAA,EACA,QAAQ,CAAC,MAAM,WAAW,eAAe;AACvC,SAAK,OAAO,KAAK,CAAC,MAAM,WAAW,cAAc,CAAC,CAAC,CAAC;AAAA,EACtD;AACF;AAGA,IAAM,eAA4B,gBAAAmL,OAAK;AAAA,EACrC,MAAM,CAAC,MAAM,QAAQxH,UAAS,OAAO,cAAc,IAAI,WAAW,MAAM,QAAQA,UAAS,OAAO,SAAS;AAAA,EACzG,SAAS,OAAK,EAAE;AAClB,CAAC;;;AC5CD,IAAMP,UAAQA;AAcd,IAAM7C,UAAS;AAQf,IAAMD,WAAU;AAgFhB,IAAM+R,WAAU;;;ACvFhB,IAAM,uBAAuB;AAG7B,IAAM,oBAAiC,uBAAO,IAAI,oBAAoB;AAOtE,IAAM,gBAAgB,OAAK,YAAY,GAAG,iBAAiB;AAG3D,IAAM,kBAAkB,CAAA1Q,YAAU;AAAA,EAChC,CAAC,iBAAiB,GAAG;AAAA,EACrB,MAAM;AAAA,EACN,OAAAA;AACF;AAKA,IAAM,UAAU,CAAC,iBAAiB2Q,eAAc;AAC9C,QAAML,UAAS,IAAI,gBAAgB,SAAS;AAC5C,EAAAA,QAAO,KAAK;AACZ,EAAAA,QAAO,KAAKK;AACZ,SAAOL;AACT;AAKA,IAAM,kBAAkB,qBAAmB;AACzC,QAAMA,UAAS,IAAI,gBAAgB,YAAY;AAC/C,EAAAA,QAAO,KAAK;AACZ,SAAOA;AACT;AAGA,IAAMM,gBAA4B,uBAAO,IAAI,eAAe;AAO5D,IAAM,cAAN,MAAkB;AAAA,EAChB,MAAM;AAAA,EACN,YAAYhB,QAAO,IAAI;AACrB,SAAK,QAAQA;AACb,SAAK,KAAK;AAAA,EACZ;AACF;AAGA,IAAM,kBAAN,MAAsB;AAAA,EACpB,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,CAACgB,aAAY,IAAI;AAAA,EACjB,YAAY,KAAK;AACf,SAAK,MAAM;AAAA,EACb;AAAA,EACA,CAAC7K,OAAM,EAAE,MAAM;AACb,WAAO,SAAS;AAAA,EAClB;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,OAAO,IAAI;AAAA,EACpB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,KAAK,KAAK;AAAA,MACV,IAAI,OAAO,KAAK,EAAE;AAAA,MAClB,IAAI,OAAO,KAAK,EAAE;AAAA,MAClB,IAAI,OAAO,KAAK,EAAE;AAAA,IACpB;AAAA,EACF;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AACF;AAGA,IAAM,yBAAN,MAA6B;AAAA,EAC3B,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,CAAC6K,aAAY,IAAI;AAAA,EACjB,YAAY,KAAK;AACf,SAAK,MAAM;AAEX,SAAK,OAAO;AAAA,EACd;AAAA,EACA,CAAC7K,OAAM,EAAE,MAAM;AACb,WAAO,SAAS;AAAA,EAClB;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,OAAO,IAAI;AAAA,EACpB;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,MACX,OAAO,KAAK,MAAM,OAAO;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AACF;AAGA,IAAM,yBAAN,MAA6B;AAAA,EAC3B,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,CAAC6K,aAAY,IAAI;AAAA,EACjB,YAAY,KAAK;AACf,SAAK,MAAM;AAEX,SAAK,OAAO;AAAA,EACd;AAAA,EACA,CAAC7K,OAAM,EAAE,MAAM;AACb,WAAO,SAAS;AAAA,EAClB;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,OAAO,IAAI;AAAA,EACpB;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,MAAM,KAAK;AAAA,MACX,OAAO,OAAO,KAAK,KAAK;AAAA,IAC1B;AAAA,EACF;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AACF;AAmCA,IAAM,WAAW,OAAK,YAAY,GAAG6K,aAAY;AAGjD,IAAM,mBAAmB,iBAAe;AACtC,QAAMN,UAAS,IAAI,gBAAgB,eAAe;AAClD,EAAAA,QAAO,KAAK;AACZ,SAAOA;AACT;AAGA,IAAM,oBAAiC,qBAAK,GAAG,CAAC,SAASO,MAAK,YAAY,oBAAoB,aAAW9H,SAAQ,SAAS,OAAKA,SAAQ,KAAK,QAAQ,MAAM,QAAQ+H,MAAKD,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAAJ,UAAQ;AACzL,MAAIA,MAAK,SAAS,aAAaA,MAAK,MAAM,QAAQ,WAAW;AAC3D,UAAMpS,SAAQoS,MAAK;AACnB,WAAO,QAAQpS,OAAM,IAAI,kBAAkB,QAAQ,CAAC,GAAG,MAAMA,OAAM,IAAI,OAAO,CAAC;AAAA,EACjF;AACA,QAAM,OAAO,YAAYoS,KAAI;AAC7B,SAAO,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,KAAK,iBAAiB;AAAA,IAC3D,WAAW,CAAAzQ,WAAS;AAClB,cAAQ,KAAK,MAAM;AAAA,QACjB,KAAK,YACH;AACE,iBAAO,UAAU,SAAS,KAAK,IAAIA,MAAK,CAAC;AAAA,QAC3C;AAAA,QACF,KAAK,YACH;AACE,iBAAO,UAAUA,MAAK;AAAA,QACxB;AAAA,MACJ;AAAA,IACF;AAAA,IACA,WAAW,MAAM;AAAA,EACnB,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAM2L,MAAkB,qBAAK,GAAG,CAAC,MAAMtN,WAAU0K,SAAQ,MAAM,MAAM,QAAQ1K,MAAK,CAAC,CAAC;AAGpF,IAAM0S,UAAS,UAAQpF,IAAG,MAAM,MAAM;AAGtC,IAAM,QAAQ,CAAC,UAAU,aAAaF,UAAS,QAAQ,MAAM;AAC3D,MAAI,cAAc;AAClB,MAAI,gBAAgB;AACpB,QAAM6E,UAAS,IAAI,gBAAgB,QAAQ;AAC3C,MAAI,SAAS,WAAW,GAAG;AACzB,UAAM,aAAa,IAAI,gBAAgB;AACvC,oBAAgB;AAChB,IAAAA,QAAO,KAAK,CAAA/N,YAAU;AACpB,oBAAc,SAASA,SAAQ,WAAW,MAAM;AAAA,IAClD;AAAA,EACF,OAAO;AACL,IAAA+N,QAAO,KAAK,CAAA/N,YAAU;AAEpB,oBAAc,SAASA,OAAM;AAAA,IAC/B;AAAA,EACF;AACA,EAAA+N,QAAO,KAAK;AACZ,SAAO,YAAYA,SAAQ,MAAM;AAC/B,QAAI,eAAe;AACjB,oBAAc,MAAM;AAAA,IACtB;AACA,WAAO,eAAeU;AAAA,EACxB,CAAC;AACH,CAAC;AAGD,IAAM,cAAc,CAAC,UAAU,aAAavF,UAAS,MAAM,CAAAlJ,YAAU;AACnE,QAAM,SAAS,SAASA,OAAM;AAC9B,MAAIuK,SAAQ,MAAM,GAAG;AACnB,IAAAvK,QAAO,OAAO,KAAK;AAAA,EACrB,OAAO;AACL,WAAO,OAAO;AAAA,EAChB;AACF,GAAG;AAGH,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACtD,QAAM+N,UAAS,IAAI,gBAAgB,aAAa;AAChD,EAAAA,QAAO,KAAK;AACZ,EAAAA,QAAO,KAAK;AACZ,SAAOA;AACT,CAAC;AAGD,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,YAAY,MAAM;AAAA,EACnE,WAAW;AAAA,EACX,WAAW;AACb,CAAC,CAAC;AAMF,IAAM,UAAU,OAAK,IAAI,SAAS,EAAE,GAAG,IAAI;AAG3C,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,WAAW,MAAM,cAAc,MAAM,CAAAtQ,WAAS;AACxF,QAAMiP,UAAS,eAAejP,MAAK;AACnC,UAAQiP,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO,UAAUA,QAAO,IAAI,IAAI,EAAEA,QAAO,IAAI,IAAI,UAAUjP,MAAK;AAAA,IAClE;AAAA,IACF,KAAK,SACH;AACE,aAAO,UAAUiP,QAAO,KAAK;AAAA,IAC/B;AAAA,EACJ;AACF,CAAC,CAAC;AAGF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,OAAO,cAAc,MAAM,CAAAjP,WAAS;AAChF,QAAMiP,UAAS,eAAejP,MAAK;AACnC,UAAQiP,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO,KAAK,GAAGA,QAAO,IAAI,GAAG,UAAU,MAAM,UAAUjP,MAAK,CAAC,CAAC;AAAA,IAChE;AAAA,IACF,KAAK,SACH;AACE,aAAO,UAAUiP,QAAO,KAAK;AAAA,IAC/B;AAAA,EACJ;AACF,CAAC,CAAC;AAGF,IAAM,qBAAqB,OAAK,iBAAiB,CAAC,GAAGxP,YAAW,EAAE,aAAaA,QAAO,YAAY,CAAC,CAAC;AACpG,IAAMwR,cAA0B,uBAAO,IAAI,uBAAuB;AAClE,IAAM,iBAA8B,uBAAO,IAAI,2BAA2B;AAY1E,IAAM,UAAU,CAAC,KAAK9B,UAAS;AAC7B,MAAI3D,QAAO2D,KAAI,GAAG;AAChB,WAAO,IAAI,MAAM,KAAK;AAAA,MACpB,IAAI,QAAQ,GAAG;AACb,eAAO,MAAM8B,eAAc,MAAM,kBAAkB,KAAK;AAAA,MAC1D;AAAA,MACA,IAAI,QAAQ,GAAG;AACb,YAAI,MAAMA,aAAY;AACpB,iBAAO9B,MAAK;AAAA,QACd;AACA,YAAI,MAAM,gBAAgB;AACxB,iBAAO;AAAA,QACT;AAEA,eAAO,OAAO,CAAC;AAAA,MACjB;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO;AACT;AAGA,IAAM+B,OAAM,YAAU,SAAS,MAAM,KAAK,EAAED,eAAc,UAAU,iBAAiB,WAAS,UAAU,IAAM,QAAQ,QAAQ,qBAAqB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,IAAM,MAAM,CAAC;AAGvL,IAAM,aAAa,aAAW,cAAc,MAAM,IAAM,iBAAiB,OAAO,CAAC,CAAC;AAGlF,IAAM,UAAU,CAAAjE,cAAYjE,SAAQ,KAAKiE,SAAQ,GAAGkE,IAAG;AAGvD,IAAMjC,UAAS,UAAQ,YAAY,MAAM;AAAA,EACvC,WAAW,OAAK,QAAQpD,MAAK,CAAC,CAAC;AAAA,EAC/B,WAAW,OAAK,QAAQC,OAAM,CAAC,CAAC;AAClC,CAAC;AAGD,IAAM,OAAO,UAAQ,WAAW,MAAM;AAAA,EACpC,WAAW;AAAA,EACX,WAAW;AACb,CAAC;AAGD,IAAMtM,QAAO,WAAS,SAAS,KAAK,KAAK,EAAEyR,eAAc,SAAS,iBAAiB,WAAS,UAAU,KAAO,QAAQ,OAAO,qBAAqB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,KAAO,KAAK,CAAC;AAGrL,IAAM,WAAW,CAAAjE,cAAYjE,SAAQ,KAAKiE,SAAQ,GAAGxN,KAAI;AAGzD,IAAM,YAAY,CAAAQ,WAAS;AACzB,QAAMsQ,UAAS,IAAI,uBAAuB,UAAU;AACpD,EAAAA,QAAO,KAAKtQ;AACZ,SAAOsQ;AACT;AAGA,IAAM,gBAAgB,CAAAtD,cAAYjE,SAAQ,KAAKiE,SAAQ,GAAG,SAAS;AAGnE,IAAM,UAAuB,iCAAiB,WAAS,QAAQ,MAAM,GAAG,CAAC,CAAC;AAG1E,IAAM,cAAc,OAAK,iBAAiB,WAAS,EAAE,MAAM,GAAG,CAAC,CAAC;AAGhE,IAAMjE,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAChD,QAAMuH,UAAS,IAAI,gBAAgB,aAAa;AAChD,EAAAA,QAAO,KAAK;AACZ,EAAAA,QAAO,KAAK;AACZ,SAAOA;AACT,CAAC;AAGD,IAAMQ,QAAO,UAAQ;AACnB,QAAMR,UAAS,IAAI,gBAAgB,QAAQ;AAC3C,EAAAA,QAAO,KAAK;AACZ,EAAAA,QAAO,KAAK;AACZ,SAAOA;AACT;AAGA,IAAM,cAAc,CAAC,MAAM,MAAM;AAC/B,QAAMA,UAAS,IAAI,gBAAgB,QAAQ;AAC3C,EAAAA,QAAO,KAAK;AACZ,EAAAA,QAAO,KAAK;AACZ,SAAOA;AACT;AAGA,IAAMtH,WAAU,UAAQD,SAAQ,MAAM,QAAQ;AAG9C,IAAM,OAAO,UAAQ,YAAY,MAAM;AAAA,EACrC,WAAW;AAAA,EACX,WAAWvJ;AACb,CAAC;AAGD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC7C;AAAA,EACA;AACF,MAAM,iBAAiB,MAAM;AAAA,EAC3B,WAAW,CAAAQ,WAAS,QAAQ,UAAUA,MAAK,CAAC;AAAA,EAC5C,WAAW,OAAK,QAAQ,UAAU,CAAC,CAAC;AACtC,CAAC,CAAC;AAGF,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM;AAAA,EACnD;AAAA,EACA;AACF,MAAM;AACJ,QAAMsQ,UAAS,IAAI,gBAAgB,yBAAyB;AAC5D,EAAAA,QAAO,KAAK;AACZ,EAAAA,QAAO,KAAK;AACZ,EAAAA,QAAO,KAAK;AACZ,SAAOA;AACT,CAAC;AAGD,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC9C;AAAA,EACA;AACF,MAAM,iBAAiB,MAAM;AAAA,EAC3B,WAAW,CAAAtQ,WAAS;AAClB,UAAM,aAAa,SAASA,MAAK;AACjC,UAAM,YAAY,QAAQA,MAAK;AAC/B,QAAI,UAAU,SAAS,GAAG;AACxB,aAAO,UAAU,cAAcA,MAAK,CAAC;AAAA,IACvC;AACA,QAAI,WAAW,SAAS,GAAG;AACzB,aAAO,UAAU,WAAW,UAAU,CAAC;AAAA,IACzC;AACA,WAAO,UAAUA,MAAK;AAAA,EACxB;AAAA,EACA;AACF,CAAC,CAAC;AAGF,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,MAAM,QAAQ,MAAM;AACxE,QAAM,MAAMiJ,cAAe,IAAI;AAC/B,QAAM,MAAM,IAAI,MAAM,IAAI,MAAM;AAChC,MAAI,IAAI;AACR,SAAO0C,IAAG,UAAU;AAAA,IAClB,OAAO,MAAM,IAAI,IAAI;AAAA,IACrB,MAAM,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC;AAAA,IACvB,MAAM,OAAK;AACT,UAAI,GAAG,IAAI;AAAA,IACb;AAAA,EACF,CAAC,GAAG,GAAG;AACT,CAAC,CAAC;AAGF,IAAM,2BAAwC,qBAAK,GAAG,CAAC,MAAM,MAAM,QAAQ,MAAM;AAC/E,QAAM,MAAM1C,cAAe,IAAI;AAC/B,MAAI,IAAI;AACR,SAAO,UAAU;AAAA,IACf,OAAO,MAAM,IAAI,IAAI;AAAA,IACrB,MAAM,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC;AAAA,IACvB,MAAM,MAAM;AACV;AAAA,IACF;AAAA,EACF,CAAC;AACH,CAAC,CAAC;AAGF,IAAM,MAAmB,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,aAAa,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM;AAAA,EAC9F;AAAA,EACA;AACF,MAAM,OAAO,SAAS,YAAY,OAAO,SAAS,UAAUF,SAAQ,MAAM,QAAQ,OAAK,IAAI,SAAS,OAAO,CAAC,CAAC;AAG7G,IAAMoI,aAAyB,gBAAApI,SAAQ,SAAS,CAAA4F,aAAW,cAAcA,QAAO,CAAC;AAGjF,IAAM,gBAAgB,CAAAA,aAAW,UAAU,UAAYA,QAAO,CAAC;AAG/D,IAAMyC,iBAAgB,UAAQ;AAC5B,QAAMd,UAAS,IAAI,gBAAgB,uBAAuB;AAC1D,EAAAA,QAAO,KAAK1R,QAAO,YAAY;AAC/B,QAAM+R,aAAY,aAAW;AAC3B,QAAI,QAAQ,SAAS,WAAW;AAC9B,aAAO,QAAQ,QAAQ,IAAIS,eAAc,QAAQ,EAAE,CAAC;AAAA,IACtD,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AACA,EAAAd,QAAO,KAAK,MAAM,YAAY,MAAMK,UAAS;AAC7C,SAAOL;AACT;AAGA,IAAM,oBAAoB,OAAK;AAC7B,QAAMA,UAAS,IAAI,gBAAgB,uBAAuB;AAC1D,EAAAA,QAAO,KAAK1R,QAAO,YAAY;AAC/B,QAAM+R,aAAY,CAAAG,UAAQ;AACxB,QAAIA,MAAK,QAAQ,WAAW;AAC1B,aAAO,QAAQA,MAAK,IAAIM,eAAcN,MAAK,EAAE,CAAC;AAAA,IAChD;AACA,WAAOA;AAAA,EACT;AACA,EAAAR,QAAO,KAAK,cAAY,aAAa,QAAQ,IAAIQ,MAAK,EAAEM,cAAa,CAAC,IAAIN,MAAK,EAAE,eAAe,CAAC;AACjG,SAAO/H,SAAQuH,SAAQK,UAAS;AAClC;AAGA,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAMrR,cAAa,oBAAoB,aAAWyJ,SAAQ,KAAK,QAAQ,IAAI,CAAC,GAAG,CAAA0H,UAAQ,aAAanR,WAAUmR,KAAI,CAAC,CAAC,CAAC;AAGhK,IAAM/G,QAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMX,SAAQ,MAAM,OAAK,KAAK,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAGlF,IAAMsI,WAAuB,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC1C;AAAA,EACA;AACF,MAAM,YAAY,MAAM;AAAA,EACtB,WAAW,OAAK,SAAS,MAAM,UAAU,CAAC,CAAC;AAAA,EAC3C,WAAW,OAAK,KAAK,MAAM,UAAU,CAAC,CAAC;AACzC,CAAC,CAAC;AAGF,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,iBAAiB,MAAM;AAAA,EACxE,WAAW,CAAArR,WAAS;AAClB,UAAMiP,UAAS,eAAejP,MAAK;AACnC,YAAQiP,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,eAAO,SAAS,MAAM,EAAEA,QAAO,IAAI,CAAC;AAAA,MACtC;AAAA,MACF,KAAK,SACH;AACE,eAAO,UAAUA,QAAO,KAAK;AAAA,MAC/B;AAAA,IACJ;AAAA,EACF;AAAA,EACA,WAAW;AACb,CAAC,CAAC;AAGF,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,YAAY,OAAO,MAAM,QAAQ,CAAAwB,UAAQ,cAAcA,KAAI,IAAIO,QAAO,QAAQP,MAAK,EAAE,CAAC,CAAC,CAAC;AAGpI,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,YAAY,oBAAoB,aAAW,iBAAiB,QAAQ,IAAI,GAAG;AAAA,EACpH,WAAW,YAAU;AACnB,UAAM,SAAS,cAAc,MAAM;AACnC,WAAO,iBAAiB,QAAQ,MAAM,GAAG;AAAA,MACvC,WAAW,CAAAa,YAAU,cAAc,WAAW,QAAQA,OAAM,CAAC;AAAA,MAC7D,WAAW,MAAM;AAAA,IACnB,CAAC;AAAA,EACH;AAAA,EACA,WAAW,aAAW;AACpB,UAAM,SAAS,YAAY,OAAO;AAClC,WAAOC,UAAS,QAAQ,MAAM,GAAG,MAAM;AAAA,EACzC;AACF,CAAC,CAAC,CAAC;AAGH,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,YAAY,OAAO,MAAM,UAAU;AAAA,EACjF,WAAW,CAAAvR,WAAS,kBAAkBA,MAAK,IAAI+Q,QAAO,QAAQ,aAAa/Q,MAAK,CAAC,CAAC,IAAIgR;AAAA,EACtF,WAAW,MAAMA;AACnB,CAAC,CAAC,CAAC;AAGH,IAAMjE,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS,cAAc,MAAM,MAAM,OAAO,CAAC;AAGtF,IAAM,QAAQ,UAAQ,UAAU,MAAM,QAAQ;AAG9C,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,YAAY,MAAM;AAAA,EACpE,WAAW,OAAKmE,KAAI,EAAE,CAAC,CAAC;AAAA,EACxB,WAAW;AACb,CAAC,CAAC;AAGF,IAAMnH,gBAAe,CAAC,UAAU,MAAMd,cAAe,QAAQ,EAAE,YAAY,CAAC,CAAC,OAAO,MAAM,GAAGnH,aAAY;AACvG,QAAMmN,UAAS,EAAEnN,QAAO;AACxB,UAAQmN,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO,CAAC,CAACA,QAAO,MAAM,GAAG,KAAK,GAAG,MAAM;AAAA,IACzC;AAAA,IACF,KAAK,SACH;AACE,aAAO,CAAC,OAAO,CAACA,QAAO,OAAO,GAAG,MAAM,CAAC;AAAA,IAC1C;AAAA,EACJ;AACF,GAAG,CAAC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC;AAG7B,IAAM,eAA4B,iCAAiB,CAAC,GAAGxP,YAAW,QAAQA,QAAO,YAAY,CAAC;AAG9F,IAAM,UAAU,CAAApB,WAAS;AACvB,QAAMiS,UAAS,IAAI,uBAAuB,UAAU;AACpD,EAAAA,QAAO,KAAKjS;AACZ,SAAOiS;AACT;AAGA,IAAM,UAAU,CAAAA,YAAUvH,SAAQ,KAAKuH,OAAM,GAAG,QAAQ;AAGxD,IAAM,OAAO,CAAAtD,cAAY;AACvB,QAAMsD,UAAS,IAAI,gBAAgB,OAAO;AAC1C,EAAAA,QAAO,KAAKtD;AACZ,SAAOsD;AACT;AAGA,IAAMkB,OAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMzI,SAAQ,MAAM,OAAK4C,IAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAG7E,IAAM,aAAa,OAAK,iBAAiB,WAAS;AAChD,QAAM,gBAAgB,MAAM,YAAY,wBAAwB;AAChE,QAAM3G,SAAQ,KAAK,eAAe,UAAU,MAAM,MAAM,MAAM,CAAC,CAAC;AAChE,SAAO,EAAE,gBAAgB,0BAA0BsF,MAAKtF,MAAK,CAAC,CAAC;AACjE,CAAC;AAGD,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,cAAc,iBAAiB,MAAM;AAAA,EAC3F,WAAW,CAAAhF,WAAS;AAClB,UAAM,YAAY,QAAQA,MAAK;AAC/B,QAAI,UAAU,SAAS,GAAG;AACxB,aAAO,UAAU,WAAW,4BAA4BA,MAAK,CAAC,CAAC;AAAA,IACjE;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA;AACF,CAAC,CAAC;AAGF,IAAM,kBAAkB,UAAQ;AAC9B,QAAMsQ,UAAS,IAAI,gBAAgB,uBAAuB;AAC1D,EAAAA,QAAO,KAAK3R,SAAQ,YAAY;AAChC,EAAA2R,QAAO,KAAK,MAAM,YAAY,MAAMK,UAAS;AAC7C,QAAMA,aAAY,aAAW;AAC3B,QAAI,QAAQ,SAAS,WAAW;AAC9B,aAAO,QAAQ,QAAQ,IAAI,gBAAgB,QAAQ,EAAE,CAAC;AAAA,IACxD,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAOL;AACT;AAGA,IAAM,sBAAsB,OAAK;AAC/B,QAAMA,UAAS,IAAI,gBAAgB,uBAAuB;AAC1D,EAAAA,QAAO,KAAK3R,SAAQ,YAAY;AAChC,QAAMgS,aAAY,CAAAG,UAAQ;AACxB,QAAIA,MAAK,QAAQ,WAAW;AAC1B,aAAO,QAAQA,MAAK,IAAI,gBAAgBA,MAAK,EAAE,CAAC;AAAA,IAClD;AACA,WAAOA;AAAA,EACT;AACA,EAAAR,QAAO,KAAK,cAAY,aAAa,QAAQ,IAAIQ,MAAK,EAAEM,cAAa,CAAC,IAAIN,MAAK,EAAE,eAAe,CAAC;AACjG,SAAO/H,SAAQuH,SAAQK,UAAS;AAClC;AAGA,IAAMK,QAAoB,wBAAQ,MAAM;AAGxC,IAAM,qBAAqB,CAAApB,WAAS;AAClC,QAAMU,UAAS,IAAI,gBAAgB,uBAAuB;AAC1D,EAAAA,QAAO,KAAKV;AACZ,EAAAU,QAAO,KAAK;AACZ,SAAOA;AACT;AAGA,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,cAAcvH,SAAQ,WAAW,OAAK;AACnF,MAAI,GAAG;AACL,WAAO,KAAK,MAAMW,MAAIY,KAAI,CAAC;AAAA,EAC7B;AACA,SAAO,QAAQmB,MAAO,CAAC;AACzB,CAAC,CAAC;AAGF,IAAM,YAAY,aAAW;AAC3B,QAAM6E,UAAS,IAAI,gBAAgB,QAAQ;AAC3C,EAAAA,QAAO,KAAK,QAAQ;AACpB,EAAAA,QAAO,KAAK,QAAQ;AACpB,EAAAA,QAAO,KAAK,QAAQ;AACpB,SAAOA;AACT;AAGA,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,gBAAgB,gBAAgB,MAAM,oBAAoB,WAAW,CAAC;AAG1H,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAM,oBAAoB,gBAAgB,MAAM,wBAAwB,eAAe,CAAC;AAG1I,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAMX,YAAW;AAC9D,QAAMW,UAAS,IAAI,gBAAgB,uBAAuB;AAC1D,EAAAA,QAAO,KAAKX;AACZ,EAAAW,QAAO,KAAK,MAAM;AAClB,SAAOA;AACT,CAAC;AAGD,IAAM,mBAAgC,qBAAK,GAAG,CAACA,SAAQzR,aAAY,gBAAgByR,SAAQ,4BAA4BzR,QAAO,CAAC;AAG/H,IAAM,WAAW,aAAW;AAC1B,QAAMyR,UAAS,IAAI,gBAAgB,QAAQ;AAC3C,SAAO,OAAO,SAAS,aAAa,cAAc,uBAAuB,QAAQ,QAAQ,EAAEA,OAAM,IAAIA;AACvG;AAGA,IAAMzF,OAAmB,qBAAK,GAAG,CAAC,MAAM,SAAS9B,SAAQ,MAAM,OAAKW,MAAI,MAAM,OAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAG3F,IAAM+H,WAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS1I,SAAQ,MAAM,OAAK4C,IAAG,MAAM,CAAC,CAAC,CAAC;AAGpF,IAAM4F,YAAwB,qBAAK,GAAG,CAAC,MAAM,SAASxI,SAAQ,MAAM,MAAM,IAAI,CAAC;AAG/E,IAAM+B,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM/B,SAAQ,MAAM,OAAKW,MAAI,MAAM,OAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAGnG,IAAM,QAAqB,4BAAY,MAAM;AAC3C,QAAM,WAAW,YAAY,MAAM;AAAA,EAEnC,GAAG,KAAK,KAAK,CAAC;AACd,SAAOmC,MAAK,KAAK,MAAM,cAAc,QAAQ,CAAC,CAAC;AACjD,CAAC;AAOD,IAAM,iBAAiB,UAAQ9C,SAAQ,SAAS,CAAA4F,aAAW,KAAK,MAAM,iBAAiBA,QAAO,CAAC,CAAC;AAGhG,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAMA,aAAY5F,SAAQ,KAAK,gBAAgB4F,QAAO,GAAG,MAAM,KAAK,MAAM,CAAC,CAAC;AAO3H,IAAM,cAAc;AAAA,EAClB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS,OAAO;AAAA,EAChB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,kBAAkB;AAAA,EACtB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,eAAe;AAAA,EACnB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,eAAe;AAAA,EACnB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS,OAAO;AAAA,EAChB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,eAAe,CAAC,aAAa,eAAe,eAAe,cAAc,iBAAiB,eAAe,eAAe,YAAY;AAO1I,IAAM,oBAAoB;AAG1B,IAAM,iBAA8B,uBAAO,IAAI,iBAAiB;AAGhE,IAAM,mBAAmB;AAAA,EACvB,IAAI,OAAK;AACX;AAGA,IAAM,cAAc,UAAQ,eAAe,MAAM,OAAK,CAAC,GAAG,CAAC,CAAC;AAY5D,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM5F,SAAQ,YAAY,IAAI,GAAG,CAAC,CAAC;AAGvF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM1K,WAAU,eAAe,MAAM,MAAM,CAAC,QAAQA,MAAK,CAAC,CAAC;AAYrG,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,MAAM,iBAAiB,WAAS;AACjF,QAAM,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,YAAY,IAAI,CAAC;AACxC,QAAM,YAAY,MAAM,CAAC;AACzB,SAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAyBF,IAAM,2BAA2B;AAGjC,IAAM,wBAAqC,uBAAO,IAAI,wBAAwB;AAC9E,IAAM,qBAAqB;AAAA,EACzB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAGA,IAAM,sBAAN,MAAM,qBAAoB;AAAA,EACxB,CAAC,qBAAqB,IAAI;AAAA,EAC1B,YAAY,QAAQ,QAAQ;AAC1B,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,KAAK,SAAS,KAAK,KAAK,MAAM,IAAI,OAAO,IAAI;AAAA,EACtD;AAAA,EACA,CAAC0H,OAAM,EAAE,MAAM;AACb,WAAO,KAAK,SAAS,kBAAkB,IAAI,KAAK,OAAO,KAAK,QAAQ,KAAK,MAAM,IAAI,SAAS;AAAA,EAC9F;AAAA,EACA,cAAcyI,MAAK;AACjB,WAAO,IAAI,qBAAoB,KAAK,QAAQvF,cAAauF,IAAG,CAAC;AAAA,EAC/D;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,oBAAoB,OAAK,YAAY,GAAG,qBAAqB;AAiBnE,IAAM,kBAA+B,qBAAK,GAAG,CAACqC,MAAK,MAAMxS,WAAU0K,SAAQ,kBAAkB0I,SAAQ,YAAY,IAAI,GAAG,YAAY,MAAMpT,MAAK,CAAC,GAAG,MAAMyS,MAAKD,IAAG,GAAG,cAAY,YAAY,MAAM,QAAQ,CAAC,GAAG,SAAO;AACnN,MAAI,IAAI,QAAQ,WAAW;AACzB,WAAO,QAAQ,IAAI,IAAI,gBAAgB,IAAI,IAAI,MAAMxS,MAAK,CAAC;AAAA,EAC7D;AACA,SAAO;AACT,CAAC,CAAC;AAGF,IAAM,sBAAmC,qBAAK,GAAG,CAACwS,MAAK,MAAM,MAAM,gBAAgB,MAAM,OAAK,gBAAgBA,MAAK,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAG/H,IAAM,qBAAqB,CAAC,SAAS,YAAY,wBAAwB,SAAS;AAAA,EAChF,QAAQlB,QAAO;AAAA,EACf,MAAM,SAAS,QAAQ;AAAA,EACvB,MAAM,SAAS;AACjB,CAAC;AAGD,IAAM,4BAA4B,aAAW;AAC3C,QAAMM,UAASC,SAAQ;AACvB,SAAO,wBAAwB,SAAS;AAAA,IACtC,QAAAD;AAAA,IACA,MAAMA,QAAO;AAAA,EACf,CAAC;AACH;AAGA,IAAM,4BAA4B,aAAW;AAC3C,QAAMA,UAASzR,aAAY;AAC3B,SAAO,wBAAwB,SAAS;AAAA,IACtC,QAAAyR;AAAA,IACA,MAAMA,QAAO;AAAA,EACf,CAAC;AACH;AAGA,IAAM,0BAA0B,CAAC,SAAS,aAAa;AAAA,EACrD,CAAC,cAAc,GAAG;AAAA,EAClB;AAAA,EACA,MAAM,CAAC,UAAU,aAAa,QAAQ,OAAO,KAAK,UAAU,QAAQ;AAAA,EACpE,SAAS,CAACP,QAAO,WAAW,QAAQ,OAAO,QAAQA,QAAO,MAAM;AAAA,EAChE,OAAO,CAAAE,WAAS,cAAY,QAAQ,OAAO,MAAMA,QAAO,QAAQ;AAAA,EAChE,MAAM,QAAQ;AAAA,EACd,MAAM,QAAQ,SAAS,CAAC,GAAG,MAAM;AAAA,EACjC,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,iCAAiC,aAAW,wBAAwB,SAAS;AAAA,EACjF;AAAA,EACA,MAAM,OAAO;AACf,CAAC;AAGD,IAAM,iBAA8B,4BAA0B,uBAAO,IAAI,gCAAgC,GAAG,MAAM,0BAA0BnO,OAAQ,CAAC,CAAC;AAGtJ,IAAM,4BAAyC,4BAA0B,uBAAO,IAAI,2CAA2C,GAAG,MAAM,mBAAmB,CAAC,CAAC;AAG7J,IAAM,2BAAwC,4BAA0B,uBAAO,IAAI,0CAA0C,GAAG,MAAM,mBAAmB,IAAI,CAAC;AAG9J,IAAM,wBAAqC,4BAA0B,uBAAO,IAAI,sCAAsC,GAAG,MAAM,mBAAmBA,QAAQ,CAAC,CAAC;AAG5J,IAAM,kBAA+B,4BAA0B,uBAAO,IAAI,iCAAiC,GAAG,MAAM,mBAAmB,YAAY,CAAC;AAGpJ,IAAM,iBAA8B,4BAA0B,uBAAO,IAAI,gCAAgC,GAAG,MAAM,mBAAmBA,QAAQ,CAAC,CAAC;AAG/I,IAAM,yBAAsC,qBAAK,GAAG,CAAC,MAAM,cAAc,gBAAgB,MAAM,2BAA2B,SAAS,CAAC;AAGpI,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAM,cAAc,gBAAgB,MAAM,0BAA0B,SAAS,CAAC;AAGlI,IAAM,qBAAkC,4BAA0B,uBAAO,IAAI,oCAAoC,GAAG,MAAM,mBAAmB,WAAW,CAAC;AAKzJ,IAAM,yBAAsC,4BAA0B,uBAAO,IAAI,wCAAwC,GAAG,MAAM,mBAAmB,IAAI,CAAC;AAG1J,IAAM,gCAA6C,4BAA0B,uBAAO,IAAI,+CAA+C,GAAG,MAAM,mBAAmB6I,MAAK,aAAa,CAAC,CAAC;AAGvL,IAAM,6BAA0C,qBAAK,GAAG,CAAC,MAAM,UAAU,gBAAgB,MAAM,+BAA+B,KAAK,CAAC;AAGpI,IAAM,sBAAmC,4BAA0B,uBAAO,IAAI,qCAAqC,GAAG,MAAM,0BAA0B7I,OAAQ,CAAC,CAAC;AAGhK,IAAM,eAA4B,4BAAY,mBAAmB;AAGjE,IAAM,2BAAwC,4BAA0B,uBAAO,IAAI,0CAA0C,GAAG,MAAM,mBAAmBgK,MAAO,GAAG;AAAA,EACjK,MAAM,MAAMA,MAAO;AAAA,EACnB,MAAM,CAAC,QAAQ,MAAM;AACvB,CAAC,CAAC;AAGF,IAAM,0BAAuC,4BAA0B,uBAAO,IAAI,yCAAyC,GAAG,MAAM,mBAAmBhK,QAAS;AAAA,EAC9J,MAAM,MAAMA;AAAA,EACZ,MAAM,CAAC,QAAQ,MAAM;AACvB,CAAC,CAAC;AAGF,IAAM,6BAA0C,4BAA0B,uBAAO,IAAI,qCAAqC,GAAG,MAAM,mBAAmB,IAAI,CAAC;AAG3J,IAAM,+BAA4C,4BAA0B,uBAAO,IAAI,8CAA8C,GAAG,MAAM,mBAAmBA,QAAQ,CAAC,CAAC;AAG3K,IAAM,yBAAsC,4BAA0B,uBAAO,IAAI,wCAAwC,GAAG,MAAM,mBAAmBA,OAAQ,CAAC,CAAC;AAO/J,IAAM,cAA2B,uBAAO,IAAI,cAAc;AAG1D,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAG5E,IAAM,oBAAoB,CAAC,MAAMuC,eAAc,KAAK,aAAa,MAAM+M,QAAO/M,UAAS,CAAC;AAGxF,IAAM,wBAAwB,CAAC,MAAMA,eAAc,KAAK,aAAaA,UAAS;AAG9E,IAAM,aAAa,CAAC,MAAMyM,UAAS,KAAK,MAAMA,KAAI;AAGlD,IAAM,YAAY,CAAC,MAAM,aAAa,KAAK,KAAK,QAAQ;AASxD,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAMzM,eAAc0F,MAAI,oBAAoB,MAAM1F,UAAS,GAAG,MAAM;AAAA,EAC9G,QAAQ,MAAM,MAAMgN;AAAA,EACpB,QAAQ,SAAO,CAAAP,UAAQ,kBAAkB,KAAKA,KAAI,EAAE,IAAI;AAC1D,CAAC,CAAC,CAAC;AAGH,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,KAAKA,UAAS,QAAQ,MAAM;AAChF,UAAQ,KAAK,MAAM,MAAM;AAAA,IACvB,KAAK,UACH;AACE,aAAOO;AAAA,IACT;AAAA,IACF,KAAK,WACH;AACE,YAAMhN,aAAY,KAAK,MAAM,WAAW,IAAI,GAAG;AAC/C,WAAK,MAAM,WAAW,OAAO,GAAG;AAChC,UAAIA,cAAa,MAAM;AACrB,eAAO,KAAK,MAAM,OAAOA,UAAS,EAAEyM,KAAI;AAAA,MAC1C;AACA,aAAOO;AAAA,IACT;AAAA,EACJ;AACF,CAAC,CAAC;AAGF,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAMhN,eAAc,QAAQ,MAAM;AAClF,UAAQ,KAAK,MAAM,MAAM;AAAA,IACvB,KAAK,UACH;AACE,WAAK,MAAM,WAAW;AACtB,aAAO2H,IAAG3H,WAAU,KAAK,MAAM,IAAI,GAAGyH,MAAO,CAAC;AAAA,IAChD;AAAA,IACF,KAAK,WACH;AACE,YAAM,MAAM,KAAK,MAAM;AACvB,WAAK,MAAM,WAAW,IAAI,KAAKzH,UAAS;AACxC,WAAK,MAAM,WAAW;AACtB,aAAO,QAAQsG,MAAK,GAAG,CAAC;AAAA,IAC1B;AAAA,EACJ;AACF,CAAC,CAAC;AAGF,IAAM,iBAA8B,qBAAK,OAAO;AAAA,EAC9C,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,oBAAI,IAAI;AAAA,IACpB,QAAQ;AAAA,EACV;AACF,EAAE;AAUF,IAAM,gBAAgB,UAAQ,KAAK,SAAS;AAG5C,IAAM,gBAAgB,UAAQ,KAAK,SAAS;AAiB5C,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAMjM,WAAU;AACnD,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,YACH;AACE,aAAO,cAAc,KAAK,EAAE;AAAA,IAC9B;AAAA,IACF,KAAK,YACH;AACE,aAAO,YAAYA,MAAK;AAAA,IAC1B;AAAA,EACJ;AACF,CAAC;AAGD,IAAM,aAAa,UAAQ,OAAO,MAAM,MAAM;AAiB9C,IAAM,iBAAiB,CAAC,OAAO,YAAY,uBAAuB,OAAO,SAAS,WAAW,WAAW,UAAU;AAGlH,IAAM,UAAU,YAAU,cAAc,IAAM,MAAM,CAAC;AAiBrD,IAAM,WAAW,WAAS,cAAc,KAAO,KAAK,CAAC;AAGrD,IAAM,gBAAgB,CAAA2B,WAAS;AAC7B,QAAMsQ,UAAS,IAAI,uBAAuB,UAAU;AACpD,EAAAA,QAAO,KAAKtQ;AACZ,SAAOsQ;AACT;AAGA,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACpD,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,YACH;AACE,aAAO,cAAc,KAAK,EAAE;AAAA,IAC9B;AAAA,IACF,KAAK,YACH;AACE,aAAO,EAAE,KAAK,EAAE;AAAA,IAClB;AAAA,EACJ;AACF,CAAC;AAiBD,IAAM,cAAc,UAAQ,KAAK,MAAM,YAAY,QAAQ,CAAC;AA2D5D,IAAM,gBAAgB,CAAA3B,aAAW,cAAc,UAAYA,QAAO,CAAC;AAGnE,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAChD,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,YACH;AACE,aAAO,cAAc,KAAK,EAAE;AAAA,IAC9B;AAAA,IACF,KAAK,YACH;AACE,aAAO,YAAY,EAAE,KAAK,EAAE,CAAC;AAAA,IAC/B;AAAA,EACJ;AACF,CAAC;AAGD,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC9C;AAAA,EACA;AACF,MAAM;AACJ,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,YACH;AACE,aAAO,cAAc,KAAK,KAAK,IAAIjF,KAAM,SAAS,CAAC,CAAC;AAAA,IACtD;AAAA,IACF,KAAK,YACH;AACE,aAAO,YAAY,UAAU,KAAK,EAAE,CAAC;AAAA,IACvC;AAAA,EACJ;AACF,CAAC;AA+BD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC5C;AAAA,EACA;AACF,MAAM;AACJ,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,YACH;AACE,aAAO,UAAU,KAAK,EAAE;AAAA,IAC1B;AAAA,IACF,KAAK,YACH;AACE,aAAO,UAAU,KAAK,EAAE;AAAA,IAC1B;AAAA,EACJ;AACF,CAAC;AAGD,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM;AAAA,EAClD;AAAA,EACA;AACF,MAAM;AACJ,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,YACH;AACE,aAAO,UAAU,KAAK,EAAE;AAAA,IAC1B;AAAA,IACF,KAAK,YACH;AACE,aAAO,UAAU,KAAK,EAAE;AAAA,IAC1B;AAAA,EACJ;AACF,CAAC;AAGD,IAAM,cAAc,CAAArL,WAAS;AAC3B,QAAMiS,UAAS,IAAI,uBAAuB,UAAU;AACpD,EAAAA,QAAO,KAAKjS;AACZ,SAAOiS;AACT;AAGA,IAAM,WAAwB,4BAAY,MAAM;AAGhD,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS,YAAY,MAAM,MAAM;AAAA,EAC3E,WAAW,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE;AAAA,EAC5B,WAAW;AACb,CAAC,CAAC;AASF,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,SAAS,YAAY,MAAM,MAAM;AAAA,EAChF,WAAW,CAAC,GAAG,OAAO;AAAA,EACtB,WAAW;AACb,CAAC,CAAC;AAqBF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,MAAM;AAAA,EACpD;AAAA,EACA;AACF,MAAM;AACJ,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,YACH;AACE,cAAQ,KAAK,MAAM;AAAA,QACjB,KAAK,YACH;AACE,iBAAO,cAAc,KAAK,EAAE;AAAA,QAC9B;AAAA,QACF,KAAK,YACH;AACE,iBAAO,cAAc,UAAU,KAAK,IAAI,KAAK,EAAE,CAAC;AAAA,QAClD;AAAA,MACJ;AAAA,IACF;AAAA,IACF,KAAK,YACH;AACE,cAAQ,KAAK,MAAM;AAAA,QACjB,KAAK,YACH;AACE,iBAAO,YAAY,UAAU,KAAK,IAAI,KAAK,EAAE,CAAC;AAAA,QAChD;AAAA,QACF,KAAK,YACH;AACE,iBAAO,cAAc,KAAK,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACF;AAAA,EACJ;AACF,CAAC;AACD,IAAM,yBAAyB,CAAC,OAAO,kBAAkB;AACvD,QAAM,OAAOrH,cAAa,KAAK;AAC/B,MAAI,CAAC,WAAW,IAAI,GAAG;AACrB,WAAOwC,MAAO;AAAA,EAChB;AACA,SAAO,KAAKhB,cAAa,IAAI,GAAG,OAAS,KAAKrB,cAAa,IAAI,GAAG,QAAQS,GAAE,CAAC,GAAG,CAAC,aAAa/H,aAAY,KAAK,aAAa,YAAYA,UAAS;AAAA,IAC/I,WAAW,CAAC4P,OAAMrT,WAAU,KAAKqT,OAAM1H,SAAQ3L,MAAK,CAAC;AAAA,IACrD,WAAW;AAAA,EACb,CAAC,CAAC,CAAC,GAAG,QAAQ+L,QAAO,GAAG,QAAQ,CAAAzJ,WAAS,MAAM,KAAKA,MAAK,CAAC,GAAG2J,KAAI;AACnE;AAOA,IAAM,qBAAqB,CAAAqE,cAAY;AAAA,EACrC,CAAC,cAAc,GAAG;AAAA,EAClB,OAAOnF,MAAO,QAAQ,CAAC,CAAC,CAAC;AAAA,EACzB,YAAYmF;AAAA,EACZ,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,eAAe,MAAM5F,SAAQ,SAAS,CAAA7F,QAAM,eAAeA,GAAE,CAAC;AAGpE,IAAM,iBAAiB,CAAAyL,aAAW,KAAK,MAAM,mBAAmBA,QAAO,CAAC;AAGxE,IAAM,gBAAgB,UAAQ,YAAY,OAAK;AAC7C,QAAM,QAAQzF,KAAI,KAAK,KAAK;AAC5B,UAAQ,MAAM,MAAM;AAAA,IAClB,KAAK,eACH;AACE,aAAO4C,OAAM,MAAM,MAAM;AAAA,IAC3B;AAAA,IACF,KAAK,kBACH;AACE,WAAK,KAAK,OAAOmC,KAAI,QAAQ,CAAC,GAAG,GAAG,MAAM,OAAO,CAAC,CAAC,CAAC;AACpD,aAAOpC,MAAK,wBAAwB,MAAM,CAAC,CAAC;AAAA,IAC9C;AAAA,EACJ;AACF,GAAG,KAAK,UAAU;AAGlB,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAMyE,YAAW,aAAaA,SAAQ,IAAI,CAAC;AAG1F,IAAM,uBAAoC,qBAAK,GAAG,CAAC,MAAMA,YAAW,KAAK,MAAM;AAC7E,QAAM,QAAQpH,KAAI,KAAK,KAAK;AAC5B,UAAQ,MAAM,MAAM;AAAA,IAClB,KAAK,eACH;AACE,aAAO;AAAA,IACT;AAAA,IACF,KAAK,kBACH;AACE,WAAK,KAAK,OAAO+E,KAAI,KAAKqC,OAAM,CAAC,CAAC;AAClC,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,QAAQ,KAAK;AAC7C,cAAM,QAAQ,CAAC,EAAEA,OAAM;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAAA,EACJ;AACF,CAAC,CAAC;AAGF,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAMG,UAAS,qBAAqB,MAAMA,KAAI,CAAC;AAG1F,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,UAAU,qBAAqB,MAAMjR,MAAK,KAAK,CAAC,CAAC;AAMlG,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAMQ,WAAU,qBAAqB,MAAM,UAAUA,MAAK,CAAC,CAAC;AAY5G,IAAM,oBAAoB,UAAQ+I,SAAQ,SAAS,CAAA4F,aAAW,qBAAqB,MAAM,cAAcA,QAAO,CAAC,CAAC;AAGhH,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAMA,aAAY,qBAAqB,MAAM,cAAcA,QAAO,CAAC,CAAC;AAGxH,IAAM,iBAAiB,UAAQ,KAAK,MAAMzF,KAAI,KAAK,KAAK,EAAE,SAAS,aAAa;AAGhF,IAAM,eAAe,UAAQ,KAAK,MAAM;AACtC,QAAM,QAAQA,KAAI,KAAK,KAAK;AAC5B,UAAQ,MAAM,MAAM;AAAA,IAClB,KAAK,eACH;AACE,aAAOoB,MAAK,MAAM,MAAM;AAAA,IAC1B;AAAA,IACF,KAAK,kBACH;AACE,aAAOmB,MAAO;AAAA,IAChB;AAAA,EACJ;AACF,CAAC;AAGD,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAMpN,WAAU,qBAAqB,MAAM,QAAQA,MAAK,CAAC,CAAC;AAMxG,IAAM,qBAAqB,CAAC,MAAMiS,YAAW;AAC3C,QAAM,QAAQpH,KAAI,KAAK,KAAK;AAC5B,MAAI,MAAM,SAAS,kBAAkB;AACnC,SAAK,KAAK,OAAO+E,KAAI,KAAKqC,OAAM,CAAC,CAAC;AAClC,aAAS,IAAI,MAAM,QAAQ,SAAS,GAAG,KAAK,GAAG,KAAK;AAClD,YAAM,QAAQ,CAAC,EAAEA,OAAM;AAAA,IACzB;AAAA,EACF;AACF;AACA,IAAM,0BAA0B,CAAC,MAAM,WAAW,KAAK,MAAM;AAC3D,QAAM,QAAQpH,KAAI,KAAK,KAAK;AAC5B,MAAI,MAAM,SAAS,kBAAkB;AACnC,SAAK,KAAK,OAAO+E,KAAI,QAAQ,MAAM,QAAQ,OAAO,OAAK,MAAM,MAAM,CAAC,CAAC,CAAC;AAAA,EACxE;AACF,CAAC;AAMD,IAAM,eAA4B,4BAAY,cAAc;AAG5D,IAAM,UAAU,MAAM;AAGtB,IAAM,oBAAoB,OAAKlF,SAAQ,QAAQ,GAAG,CAAC;AAGnD,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM/G,aAAY,gBAAgB,gBAAgBA,QAAO,EAAE,IAAI,CAAC;AAG7G,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAMA,aAAY,oBAAoB,gBAAgB,YAAU2E,OAAM,QAAQ3E,QAAO,CAAC,EAAE,IAAI,CAAC;AAG9I,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM,kBAAkB,CAAAA,aAAW,eAAe,MAAM,EAAEA,QAAO,CAAC,CAAC,CAAC;AAOxH,IAAM,uBAAuB,WAAS;AACpC,QAAMmN,QAAO,MAAM,YAAY,cAAc,EAAE,UAAU,IAAI,OAAO;AACpE,SAAOA,UAAS,UAAaA,MAAK,SAAS,SAAS7E,MAAK6E,KAAI,IAAI1D,MAAO;AAC1E;;;ACj/CA,IAAMjM,QAAO;AAQb,IAAM0R,OAAM;AAQZ,IAAMC,aAAY;AAqDlB,IAAMQ,aAAY;AAqElB,IAAMC,iBAAgB;AAStB,IAAMC,qBAAoB;AA6C1B,IAAMC,kBAAiB;AASvB,IAAMC,mBAAkB;AAmExB,IAAMrI,QAAMA;AA8BZ,IAAMsI,UAAS;AA+Ef,IAAMC,4BAA2B;AAmCjC,IAAMC,oBAAmB;AASzB,IAAMC,sBAAqB;;;AChlB3B,IAAM3M,aAAY;AAQlB,IAAM,YAAY;AA4ClB,IAAM2F,OAAM;AAQZ,IAAM+F,OAAM;AAkBZ,IAAM1R,QAAO;AAQb,IAAM4S,aAAY;AAkBlB,IAAMpJ,WAAU;AAkDhB,IAAMU,QAAM;AASZ,IAAM2H,WAAU;AAwBhB,IAAMjT,SAAQ;AAcd,IAAMiU,WAAU;AAQhB,IAAMrB,QAAO;AASb,IAAMnG,OAAM;AAkBZ,IAAM0G,YAAW;;;ACrRjB,IAAM,kBAAkB,CAACd,OAAM6B,YAAW;AACxC,EAAAA,QAAY9M,WAAUiL,KAAI,KAAK,CAAOoB,mBAAkBpB,MAAK,KAAK,IAAI,IAAI,CAAC;AAC7E;;;AClBA;AAAA;AAAA,YAAA8B;AAAA,EAAA,oBAAA3B;AAAA,EAAA,sBAAA4B;AAAA,EAAA,mCAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,WAAAxH;AAAA,EAAA,oBAAAyH;AAAA,EAAA,eAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,2BAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,UAAA9G;AAAA,EAAA,UAAAR;AAAA,EAAA,cAAAuH;AAAA,EAAA,mBAAAC;AAAA,EAAA,cAAApC;AAAA,EAAA,aAAAqC;AAAA,EAAA,mBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,YAAAhN;AAAA,EAAA,cAAAiN;AAAA,EAAA,eAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,aAAArU;AAAA,EAAA,0BAAAsU;AAAA,EAAA,aAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,cAAA9V;AAAA,EAAA,0BAAA+V;AAAA,EAAA,eAAAzS;AAAA,EAAA,mBAAA0S;AAAA,EAAA,yBAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,aAAAhU;AAAA,EAAA,kBAAA8G;AAAA,EAAA,sBAAAmN;AAAA,EAAA,WAAA7D;AAAA,EAAA,kBAAA8D;AAAA,EAAA,eAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,cAAApG;AAAA,EAAA,gBAAAqG;AAAA,EAAA,qBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,cAAAtW;AAAA,EAAA,YAAAqR;AAAA,EAAA,YAAAjR;AAAA,EAAA,iBAAA4S;AAAA,EAAA,qBAAAuD;AAAA,EAAA,gBAAAC;AAAA,EAAA,eAAAjH;AAAA,EAAA,mBAAAkH;AAAA,EAAA,cAAArN;AAAA,EAAA,mBAAAsN;AAAA,EAAA,0BAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,iBAAAvN;AAAA,EAAA,sBAAAwN;AAAA,EAAA,eAAApN;AAAA,EAAA,mBAAAqN;AAAA,EAAA,eAAApN;AAAA,EAAA,YAAAqN;AAAA,EAAA,gBAAAC;AAAA,EAAA,eAAAxI;AAAA,EAAA,eAAAyI;AAAA,EAAA,YAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,4BAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,oBAAA3K;AAAA,EAAA,WAAAE;AAAA,EAAA;AAAA;AAAA,cAAAvM;AAAA,EAAA,UAAAiX;AAAA,EAAA,cAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,iBAAAhG;AAAA,EAAA,qBAAAiG;AAAA,EAAA,qBAAAhG;AAAA,EAAA,yBAAAiG;AAAA,EAAA,oBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,iBAAA/R;AAAA,EAAA,iBAAAgS;AAAA,EAAA,eAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,6BAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,aAAA9Y;AAAA,EAAA,sBAAA+Y;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,WAAAhP;AAAA,EAAA,gBAAAC;AAAA,EAAA,eAAA0H;AAAA,EAAA,gBAAAsH;AAAA,EAAA,qBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,aAAAza;AAAA,EAAA,kBAAA0a;AAAA,EAAA,wBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,aAAArS;AAAA,EAAA,gBAAAsS;AAAA,EAAA,oBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,YAAA3N;AAAA,EAAA,eAAA3L;AAAA,EAAA,cAAAwS;AAAA,EAAA,mBAAAtD;AAAA,EAAA,YAAA1H;AAAA,EAAA,cAAAR;AAAA,EAAA,0BAAAuS;AAAA,EAAA,aAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,cAAAxM;AAAA,EAAA,kBAAAyM;AAAA,EAAA,qBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,iBAAA7P;AAAA,EAAA,sBAAA8P;AAAA,EAAA;AAAA,iBAAAla;AAAA,EAAA,eAAAma;AAAA,EAAA,sBAAAC;AAAA,EAAA,4BAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,cAAApQ;AAAA,EAAA,oBAAAqQ;AAAA,EAAA,mBAAApQ;AAAA,EAAA,mBAAAqQ;AAAA,EAAA,cAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA;AAAA,eAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAAC;AAAA,EAAA;AAAA;AAAA,iBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA;AAAA,wBAAAC;AAAA,EAAA;AAAA,eAAAhW;AAAA,EAAA,iBAAAiW;AAAA,EAAA,cAAAC;AAAA,EAAA,4BAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,6BAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,YAAA/K;AAAA,EAAA,eAAAuB;AAAA,EAAA,mBAAAyJ;AAAA,EAAA,mBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,YAAA7Y;AAAA,EAAA,kBAAA8Y;AAAA,EAAA,wBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,WAAA9K;AAAA,EAAA,eAAA+K;AAAA,EAAA,iBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,eAAA9b;AAAA,EAAA,mBAAA+b;AAAA,EAAA,wBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA;AAAA,yBAAAC;AAAA,EAAA,2BAAAC;AAAA,EAAA,YAAA1M;AAAA,EAAA,cAAA2M;AAAA,EAAA,oBAAAC;AAAA,EAAA,2BAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,gCAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,6BAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,2BAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA;AAAA;AAAA,uBAAAC;AAAA,EAAA,8BAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,kCAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,WAAApV;AAAA,EAAA,eAAA4G;AAAA,EAAA,gBAAAF;AAAA,EAAA,eAAAzG;AAAA;;;ACYA,IAAMI,UAAsB,uBAAO,IAAI,iBAAiB;AACxD,IAAM,YAAyB,uBAAO,GAAK;AAC3C,IAAM,YAAyB,uBAAO,GAAa;AA2BnD,IAAM,iBAAiB;AAKvB,IAAM,SAAS,CAAAtJ,WAAS;AACtB,MAAI,WAAWA,MAAK,GAAG;AACrB,WAAOA;AAAA,EACT,WAAW,SAASA,MAAK,GAAG;AAC1B,WAAO,OAAOA,MAAK;AAAA,EACrB,WAAW,SAASA,MAAK,GAAG;AAC1B,WAAO,MAAMA,MAAK;AAAA,EACpB,OAAO;AACL,mBAAe,YAAY;AAC3B,UAAMxD,UAAQ,eAAe,KAAKwD,MAAK;AACvC,QAAIxD,SAAO;AACT,YAAM,CAAC,GAAG,UAAU4S,KAAI,IAAI5S;AAC5B,YAAMC,SAAQ,OAAO,QAAQ;AAC7B,cAAQ2S,OAAM;AAAA,QACZ,KAAK;AACH,iBAAO,MAAM,OAAO,QAAQ,CAAC;AAAA,QAC/B,KAAK;AACH,iBAAO,OAAO,OAAO,QAAQ,CAAC;AAAA,QAChC,KAAK;AACH,iBAAO,OAAO3S,MAAK;AAAA,QACrB,KAAK;AACH,iBAAO,QAAQA,MAAK;AAAA,QACtB,KAAK;AACH,iBAAO,QAAQA,MAAK;AAAA,QACtB,KAAK;AACH,iBAAO,MAAMA,MAAK;AAAA,QACpB,KAAK;AACH,iBAAO,KAAKA,MAAK;AAAA,QACnB,KAAK;AACH,iBAAO,MAAMA,MAAK;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AACA,QAAM,IAAI,MAAM,wBAAwB;AAC1C;AACA,IAAM,YAAY;AAAA,EAChB,MAAM;AAAA,EACN,QAAQ;AACV;AACA,IAAM,gBAAgB;AAAA,EACpB,MAAM;AACR;AACA,IAAM,gBAAgB;AAAA,EACpB,CAAC6M,OAAM,GAAGA;AAAA,EACV,CAAC,MAAM,IAAI;AACT,WAAO,UAAU,KAAK,KAAK;AAAA,EAC7B;AAAA,EACA,CAACnF,OAAQ,EAAE,MAAM;AACf,WAAO,WAAW,IAAI,KAAKma,QAAO,MAAM,IAAI;AAAA,EAC9C;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,YAAQ,KAAK,MAAM,MAAM;AAAA,MACvB,KAAK;AACH,eAAO;AAAA,UACL,KAAK;AAAA,UACL,MAAM;AAAA,UACN,QAAQ,KAAK,MAAM;AAAA,QACrB;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,KAAK;AAAA,UACL,MAAM;AAAA,UACN,QAAQ,SAAS,IAAI;AAAA,QACvB;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,IACJ;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAM1W,SAAO,CAAA5H,WAAS;AACpB,QAAMue,YAAW,OAAO,OAAO,aAAa;AAC5C,MAAI,SAASve,MAAK,GAAG;AACnB,QAAI,MAAMA,MAAK,KAAKA,SAAQ,GAAG;AAC7B,MAAAue,UAAS,QAAQ;AAAA,IACnB,WAAW,CAAC,OAAO,SAASve,MAAK,GAAG;AAClC,MAAAue,UAAS,QAAQ;AAAA,IACnB,WAAW,CAAC,OAAO,UAAUve,MAAK,GAAG;AACnC,MAAAue,UAAS,QAAQ;AAAA,QACf,MAAM;AAAA,QACN,OAAO,OAAO,KAAK,MAAMve,SAAQ,GAAS,CAAC;AAAA,MAC7C;AAAA,IACF,OAAO;AACL,MAAAue,UAAS,QAAQ;AAAA,QACf,MAAM;AAAA,QACN,QAAQve;AAAA,MACV;AAAA,IACF;AAAA,EACF,WAAWA,SAAQ,OAAO,CAAC,GAAG;AAC5B,IAAAue,UAAS,QAAQ;AAAA,EACnB,OAAO;AACL,IAAAA,UAAS,QAAQ;AAAA,MACf,MAAM;AAAA,MACN,OAAOve;AAAA,IACT;AAAA,EACF;AACA,SAAOue;AACT;AAMA,IAAM,aAAa,OAAK,YAAY,GAAGjV,OAAM;AAM7C,IAAM,OAAoB,gBAAA1B,OAAK,CAAC;AAYhC,IAAM,QAAQ,CAAA4W,WAAS5W,OAAK4W,MAAK;AAMjC,IAAM,SAAS,CAAAC,YAAU7W,OAAK6W,UAAS,SAAS;AAMhD,IAAM,SAAS,CAAAC,YAAU9W,OAAK8W,OAAM;AAMpC,IAAM,UAAU,CAAAC,aAAW/W,OAAK+W,WAAU,GAAI;AAM9C,IAAM,UAAU,CAAAC,aAAWhX,OAAKgX,WAAU,GAAM;AAMhD,IAAM,QAAQ,CAAAC,WAASjX,OAAKiX,SAAQ,IAAS;AAM7C,IAAM,OAAO,CAAA3a,UAAQ0D,OAAK1D,QAAO,KAAU;AAM3C,IAAM,QAAQ,CAAA4a,WAASlX,OAAKkX,SAAQ,MAAW;AAM/C,IAAM,WAAW,UAAQ;AACvB,QAAM,QAAQ,OAAO,IAAI;AACzB,UAAQ,MAAM,MAAM,MAAM;AAAA,IACxB,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO,OAAO,MAAM,MAAM,KAAK,IAAI;AAAA,IACrC,KAAK;AACH,aAAO,MAAM,MAAM;AAAA,EACvB;AACF;AAoDA,IAAM,WAAW,UAAQ;AACvB,QAAM,QAAQ,OAAO,IAAI;AACzB,UAAQ,MAAM,MAAM,MAAM;AAAA,IACxB,KAAK;AACH,aAAO,CAAC,UAAU,CAAC;AAAA,IACrB,KAAK;AACH,aAAO,CAAC,OAAO,MAAM,MAAM,QAAQ,SAAS,GAAG,OAAO,MAAM,MAAM,QAAQ,SAAS,CAAC;AAAA,IACtF,KAAK;AACH,aAAO,CAAC,KAAK,MAAM,MAAM,MAAM,SAAS,GAAI,GAAG,KAAK,MAAM,MAAM,MAAM,SAAS,MAAO,GAAS,CAAC;AAAA,EACpG;AACF;AAsBA,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,YAAY;AAC9D,QAAM,QAAQ,OAAO,IAAI;AACzB,QAAM,QAAQ,OAAO,IAAI;AACzB,MAAI,MAAM,MAAM,SAAS,cAAc,MAAM,MAAM,SAAS,YAAY;AACtE,WAAO,QAAQ,SAAS,SAAS,KAAK,GAAG,SAAS,KAAK,CAAC;AAAA,EAC1D,WAAW,MAAM,MAAM,SAAS,WAAW,MAAM,MAAM,SAAS,SAAS;AACvE,UAAM,YAAY,MAAM,MAAM,SAAS,UAAU,MAAM,MAAM,QAAQ,OAAO,KAAK,MAAM,MAAM,MAAM,SAAS,GAAS,CAAC;AACtH,UAAM,YAAY,MAAM,MAAM,SAAS,UAAU,MAAM,MAAM,QAAQ,OAAO,KAAK,MAAM,MAAM,MAAM,SAAS,GAAS,CAAC;AACtH,WAAO,QAAQ,QAAQ,WAAW,SAAS;AAAA,EAC7C;AACA,SAAO,QAAQ,SAAS,MAAM,MAAM,QAAQ,MAAM,MAAM,MAAM;AAChE,CAAC;AAuBD,IAAM,cAAc,CAAC,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,EACxD,UAAU,CAACC,OAAMC,UAASD,UAASC;AAAA,EACnC,SAAS,CAACD,OAAMC,UAASD,UAASC;AACpC,CAAC;AAiCD,IAAM,MAAmB,qBAAK,GAAG,CAAC,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,EACrE,UAAU,CAACD,OAAMC,UAASpX,OAAKmX,QAAOC,KAAI;AAAA,EAC1C,SAAS,CAACD,OAAMC,UAASpX,OAAKmX,QAAOC,KAAI;AAC3C,CAAC,CAAC;AAwBF,IAAMC,eAA2B,qBAAK,GAAG,CAAC,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,EAC7E,UAAU,CAACF,OAAMC,UAASD,QAAOC;AAAA,EACjC,SAAS,CAACD,OAAMC,UAASD,QAAOC;AAClC,CAAC,CAAC;AAMF,IAAM,uBAAoC,qBAAK,GAAG,CAAC,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,EACtF,UAAU,CAACD,OAAMC,UAASD,SAAQC;AAAA,EAClC,SAAS,CAACD,OAAMC,UAASD,SAAQC;AACnC,CAAC,CAAC;AAMF,IAAMV,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS,YAAY,OAAO,IAAI,GAAG,OAAO,IAAI,CAAC,CAAC;;;AC5a3F,IAAM,QAAQ,OAAO,YAAY,cAAc,QAAQ,CAAC,CAAC,SAAS;AAGlE,IAAM,QAAQ,QAAQ,CAAAhd,QAAM,cAAcA,GAAE,IAAI,CAAAA,QAAM,aAAaA,GAAE;AAGrE,IAAM+K,OAAM,QAAQ,CAAC,IAAI,OAAO;AAC9B,QAAM/K,MAAK,YAAY,MAAM;AAC3B,OAAG;AACH,kBAAcA,GAAE;AAAA,EAClB,GAAG,EAAE;AACL,SAAOA;AACT,IAAI,CAAC,IAAI,OAAO,WAAW,IAAI,EAAE;;;ACXjC,IAAM,iBAAiB;AAGvB,IAAM,cAA2B,uBAAO,IAAI,cAAc;AAG1D,IAAM,WAAwB,oBAAI,WAAW;AAG7C,IAAM,mBAAmB,KAAK,KAAK;AAGnC,IAAM,uBAAuB;AAAA,EAC3B,eAAe,MAAMid,WAAU;AAC7B,UAAMG,UAAS,SAASH,SAAQ;AAGhC,QAAIG,UAAS,kBAAkB;AAC7B,aAAO;AAAA,IACT;AACA,QAAI,YAAY;AAChB,UAAM,SAASrS,KAAI,MAAM;AACvB,kBAAY;AACZ,WAAK;AAAA,IACP,GAAGqS,OAAM;AACT,WAAO,MAAM;AACX,YAAM,MAAM;AACZ,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AACF;AACA,IAAM,sBAAmC,2BAAY;AACnD,QAAM,YAAyB,uBAAO,GAAS;AAC/C,MAAI,OAAO,gBAAgB,aAAa;AACtC,WAAO,MAAM,OAAO,KAAK,IAAI,CAAC,IAAI;AAAA,EACpC;AACA,QAAM,SAAS,gBAAgB,eAAe,OAAO,YAAY,eAAe,WAAwB,uBAAqB,qBAAK,MAAM,YAAY,aAAa,GAAS,CAAC,IAAiB,uBAAqB,qBAAK,IAAI,CAAC,IAAI,YAAyB,uBAAqB,qBAAK,MAAoB,4BAAY,IAAI,IAAI,GAAS,CAAC;AACpU,SAAO,MAAM,SAAS,OAAO,KAAK,MAAM,YAAY,IAAI,IAAI,GAAS,CAAC;AACxE,EAAE;AACF,IAAM,0BAAuC,2BAAY;AACvD,QAAM,gBAAgB,OAAO,YAAY,YAAY,YAAY,WAAW,OAAO,QAAQ,OAAO,WAAW,aAAa,QAAQ,SAAS;AAC3I,MAAI,CAAC,eAAe;AAClB,WAAO;AAAA,EACT;AACA,QAAM,SAAsB,oCAAoB,IAAiB,8BAAc,OAAO;AACtF,SAAO,MAAM,SAAS,cAAc,OAAO;AAC7C,EAAE;AAGF,IAAM,YAAN,MAAgB;AAAA,EACd,CAAC,WAAW,IAAI;AAAA,EAChB,0BAA0B;AACxB,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,yBAAyB;AACvB,WAAO,wBAAwB;AAAA,EACjC;AAAA,EACA,oBAAoB,KAAK,MAAM,KAAK,wBAAwB,CAAC;AAAA,EAC7D,mBAAmB,KAAK,MAAM,KAAK,uBAAuB,CAAC;AAAA,EAC3D,YAAY;AACV,WAAO,QAAQ,oBAAoB;AAAA,EACrC;AAAA,EACA,MAAMH,WAAU;AACd,WAAO,YAAY,QAAM;AACvB,YAAM,WAAW,qBAAqB,eAAe,MAAM,GAAGnP,KAAI,GAAGmP,SAAQ;AAC7E,aAAOtU,MAAKkF,QAAO,KAAK,QAAQ,CAAC,CAAC;AAAA,IACpC,CAAC;AAAA,EACH;AACF;AAGA,IAAMvH,SAAO,MAAM,IAAI,UAAU;;;AC/EjC;AAAA;AAAA,aAAAsX;AAAA,EAAA,yBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,UAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,2BAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,yBAAAC;AAAA;;;ACGA,IAAM,SAAS;AAKf,IAAM,QAAQ;AAKd,IAAM,kBAAkB;AAKxB,IAAM,kBAAkB;AAKxB,IAAM,wBAAwB;AAK9B,IAAM,iBAAiB;;;ACrBvB,IAAM,uBAAuB;AAG7B,IAAM,oBAAiC,uBAAO,IAAI,oBAAoB;AAGtE,IAAM5S,SAAQ;AAAA,EACZ,CAAC,iBAAiB,GAAG;AACvB;AAGA,IAAM,MAAM,CAAC,MAAM,SAAS;AAC1B,QAAM,QAAQ,OAAO,OAAOA,MAAK;AACjC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,QAAQ;AACd,SAAO,eAAe,OAAO,YAAY;AAAA,IACvC,YAAY;AAAA,IACZ,QAAQ;AACN,aAAO,GAAG,KAAK,IAAI,QAAQ,KAAK,KAAK;AAAA,IACvC;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAGA,IAAM,KAAK,CAAC,MAAM,SAAS;AACzB,QAAM,QAAQ,OAAO,OAAOA,MAAK;AACjC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,QAAQ;AACd,SAAO,eAAe,OAAO,YAAY;AAAA,IACvC,YAAY;AAAA,IACZ,QAAQ;AACN,aAAO,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK;AAAA,IACtC;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAGA,IAAM,cAAc,CAAC,MAAM,SAAS,UAAU;AAAA,EAC5C,WAAW;AACb,MAAM;AACJ,QAAM,QAAQ,OAAO,OAAOA,MAAK;AACjC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,UAAU;AAChB,SAAO,eAAe,OAAO,YAAY;AAAA,IACvC,YAAY;AAAA,IACZ,QAAQ;AACN,YAAM6S,QAAO,KAAK,KAAK,MAAM,KAAK,QAAQ,SAAS,CAAC;AACpD,aAAO,oBAAoBA,KAAI,MAAM,KAAK,OAAO;AAAA,IACnD;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAGA,IAAM,cAAc,CAAC,MAAM,SAAS,UAAU;AAAA,EAC5C,WAAW;AACb,MAAM;AACJ,QAAM,QAAQ,OAAO,OAAO7S,MAAK;AACjC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,UAAU;AAChB,SAAO,eAAe,OAAO,YAAY;AAAA,IACvC,YAAY;AAAA,IACZ,QAAQ;AACN,YAAM6S,QAAO,KAAK,KAAK,MAAM,KAAK,QAAQ,SAAS,CAAC;AACpD,aAAO,oBAAoBA,KAAI,MAAM,KAAK,OAAO;AAAA,IACnD;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAGA,IAAM,oBAAoB,CAAC,MAAM,SAAS/hB,QAAO,UAAU;AAAA,EACzD,WAAW;AACb,MAAM;AACJ,QAAM,QAAQ,OAAO,OAAOkP,MAAK;AACjC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,UAAU;AAChB,QAAM,QAAQlP;AACd,SAAO,eAAe,OAAO,YAAY;AAAA,IACvC,YAAY;AAAA,IACZ,QAAQ;AACN,YAAM+hB,QAAO,KAAK,KAAK,MAAM,KAAK,QAAQ,SAAS,CAAC;AACpD,aAAO,0BAA0BA,KAAI,MAAM,KAAK,OAAO;AAAA,IACzD;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAGA,IAAM,cAAc,CAAC,MAAM,SAAS,UAAU;AAAA,EAC5C,WAAW;AACb,MAAM;AACJ,QAAM,QAAQ,OAAO,OAAO7S,MAAK;AACjC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAM,UAAU;AAChB,SAAO,eAAe,OAAO,YAAY;AAAA,IACvC,YAAY;AAAA,IACZ,QAAQ;AACN,YAAM6S,QAAO,KAAK,KAAK,MAAM,KAAK,QAAQ,SAAS,CAAC;AACpD,aAAO,6BAA6BA,KAAI,MAAM,KAAK,OAAO;AAAA,IAC5D;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAGA,IAAM,gBAAgB,OAAK,YAAY,GAAG,iBAAiB;AAG3D,IAAM,QAAQ,UAAQ,KAAK,SAAS;AAGpC,IAAM,OAAO,UAAQ,KAAK,SAAS;AAGnC,IAAM,gBAAgB,UAAQ,KAAK,SAAS;AAG5C,IAAM,gBAAgB,UAAQ,KAAK,SAAS;AAG5C,IAAM,sBAAsB,UAAQ,KAAK,SAAS;AAGlD,IAAM,gBAAgB,UAAQ,KAAK,SAAS;AAG5C,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,WAAW;AACtD,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,QACH;AACE,aAAO,IAAI,SAAS,MAAM,EAAE,KAAK,IAAI,GAAG,SAAS,MAAM,EAAE,KAAK,KAAK,CAAC;AAAA,IACtE;AAAA,IACF,KAAK,OACH;AACE,aAAO,GAAG,SAAS,MAAM,EAAE,KAAK,IAAI,GAAG,SAAS,MAAM,EAAE,KAAK,KAAK,CAAC;AAAA,IACrE;AAAA,IACF,KAAK,iBACH;AACE,aAAO,YAAY,CAAC,GAAG,QAAQ,GAAG,KAAK,IAAI,GAAG,KAAK,OAAO;AAAA,IAC5D;AAAA,IACF,KAAK,iBACH;AACE,aAAO,YAAY,CAAC,GAAG,QAAQ,GAAG,KAAK,IAAI,GAAG,KAAK,OAAO;AAAA,IAC5D;AAAA,IACF,KAAK,uBACH;AACE,aAAO,kBAAkB,CAAC,GAAG,QAAQ,GAAG,KAAK,IAAI,GAAG,KAAK,SAAS,KAAK,KAAK;AAAA,IAC9E;AAAA,IACF,KAAK,gBACH;AACE,aAAO,YAAY,CAAC,GAAG,QAAQ,GAAG,KAAK,IAAI,GAAG,KAAK,OAAO;AAAA,IAC5D;AAAA,EACJ;AACF,CAAC;AAGD,IAAM,2BAA2B;AAAA,EAC/B,SAAS,CAAC,GAAGlW,OAAMC,WAAUD,SAAQC;AAAA,EACrC,QAAQ,CAAC,GAAGD,OAAMC,WAAUD,SAAQC;AAAA,EACpC,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,uBAAuB;AAAA,EACvB,iBAAiB;AACnB;AASA,IAAMgW,qBAAiC,qBAAK,GAAG,CAAC,MAAM9f,UAAS,YAAY;AACzE,QAAMJ,SAAQ,CAAC,IAAI;AACnB,QAAM,SAAS,CAAC;AAChB,SAAOA,OAAM,SAAS,GAAG;AACvB,UAAM,QAAQA,OAAM,IAAI;AACxB,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK,QACH;AACE,QAAAA,OAAM,KAAK,MAAM,KAAK;AACtB,QAAAA,OAAM,KAAK,MAAM,IAAI;AACrB,eAAO,KAAKiK,MAAK;AAAA,UACf,MAAM;AAAA,QACR,CAAC,CAAC;AACF;AAAA,MACF;AAAA,MACF,KAAK,OACH;AACE,QAAAjK,OAAM,KAAK,MAAM,KAAK;AACtB,QAAAA,OAAM,KAAK,MAAM,IAAI;AACrB,eAAO,KAAKiK,MAAK;AAAA,UACf,MAAM;AAAA,QACR,CAAC,CAAC;AACF;AAAA,MACF;AAAA,MACF,KAAK,iBACH;AACE,eAAO,KAAKC,OAAM,QAAQ,gBAAgB9J,UAAS,MAAM,MAAM,MAAM,OAAO,CAAC,CAAC;AAC9E;AAAA,MACF;AAAA,MACF,KAAK,iBACH;AACE,eAAO,KAAK8J,OAAM,QAAQ,gBAAgB9J,UAAS,MAAM,MAAM,MAAM,OAAO,CAAC,CAAC;AAC9E;AAAA,MACF;AAAA,MACF,KAAK,uBACH;AACE,eAAO,KAAK8J,OAAM,QAAQ,sBAAsB9J,UAAS,MAAM,MAAM,MAAM,SAAS,MAAM,KAAK,CAAC,CAAC;AACjG;AAAA,MACF;AAAA,MACF,KAAK,gBACH;AACE,eAAO,KAAK8J,OAAM,QAAQ,gBAAgB9J,UAAS,MAAM,MAAM,MAAM,OAAO,CAAC,CAAC;AAC9E;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,QAAM,cAAc,CAAC;AACrB,SAAO,OAAO,SAAS,GAAG;AACxB,UAAMiN,UAAS,OAAO,IAAI;AAC1B,YAAQA,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,gBAAQA,QAAO,KAAK,MAAM;AAAA,UACxB,KAAK,WACH;AACE,kBAAMpD,QAAO,YAAY,IAAI;AAC7B,kBAAMC,SAAQ,YAAY,IAAI;AAC9B,kBAAMzN,SAAQ,QAAQ,QAAQ2D,UAAS6J,OAAMC,MAAK;AAClD,wBAAY,KAAKzN,MAAK;AACtB;AAAA,UACF;AAAA,UACF,KAAK,UACH;AACE,kBAAMwN,QAAO,YAAY,IAAI;AAC7B,kBAAMC,SAAQ,YAAY,IAAI;AAC9B,kBAAMzN,SAAQ,QAAQ,OAAO2D,UAAS6J,OAAMC,MAAK;AACjD,wBAAY,KAAKzN,MAAK;AACtB;AAAA,UACF;AAAA,QACJ;AACA;AAAA,MACF;AAAA,MACF,KAAK,SACH;AACE,oBAAY,KAAK4Q,QAAO,KAAK;AAC7B;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,MAAI,YAAY,WAAW,GAAG;AAC5B,UAAM,IAAI,MAAM,uGAAuG;AAAA,EACzH;AACA,SAAO,YAAY,IAAI;AACzB,CAAC;AAGD,IAAM,oBAAoB,UAAQ6S,mBAAkB,MAAM,QAAQ,wBAAwB;;;AFxQ1F,IAAMf,qBAAoB;AA8D1B,IAAMD,OAAM;AAMZ,IAAMI,MAAK;AAMX,IAAMD,eAAc;AAMpB,IAAMD,eAAc;AAMpB,IAAMG,qBAAoB;AAM1B,IAAMC,eAAc;AAQpB,IAAME,iBAAgB;AAQtB,IAAMD,SAAQ;AAQd,IAAMK,QAAO;AASb,IAAMH,iBAAgB;AAStB,IAAMC,iBAAgB;AAQtB,IAAMC,qBAAoB;AAS1B,IAAME,uBAAsB;AAS5B,IAAMC,iBAAgB;AAMtB,IAAMC,YAAW;AAMjB,IAAMC,qBAAoBA;;;AG/K1B,IAAM,wBAAwB;AAG9B,IAAM,qBAAkC,uBAAO,IAAI,qBAAqB;AAGxE,IAAM5S,SAAQ;AAAA,EACZ,CAAC,kBAAkB,GAAG;AAAA,EACtB,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,qBAAqB,GAAG,QAAQ,MAAM,KAAK,GAAG,CAAC,CAAC;AAAA,EACnE;AAAA,EACA,CAACnJ,OAAQ,EAAE,MAAM;AACf,WAAO,eAAe,IAAI,KAAK,KAAK,IAAI,WAAW,KAAK,IAAI,UAAU,KAAK,IAAI,MAAM,CAAC,GAAG,MAAM,OAAO,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;AAAA,EACvH;AACF;AAGA,IAAM,iBAAiB,OAAK,YAAY,GAAG,kBAAkB;AAG7D,IAAMyD,SAAO,WAAS;AACpB,QAAMwY,UAAS,OAAO,OAAO9S,MAAK;AAClC,SAAO,eAAe8S,SAAQ,YAAY;AAAA,IACxC,YAAY;AAAA,IACZ,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AACD,SAAO,eAAeA,SAAQ,OAAO;AAAA,IACnC,YAAY;AAAA,IACZ,OAAO;AAAA,EACT,CAAC;AACD,SAAOA;AACT;AAGA,IAAM,YAAY,CAAArhB,WAAS;AACzB,SAAO6I,OAAK,gBAAgB7I,MAAK,EAAE,IAAI,UAAQ,KAAK,WAAW,CAAC,CAAC,CAAC;AACpE;AAGA,IAAM,aAAa,UAAQ;AACzB,SAAO6I,OAAK,KAAK,MAAM,EAAE,EAAE,IAAI,UAAQ,KAAK,WAAW,CAAC,CAAC,CAAC;AAC5D;AAGA,IAAM,QAAQ,UAAQ;AACpB,SAAO,KAAK,IAAI,IAAI,UAAQ,OAAO,aAAa,IAAI,CAAC,EAAE,KAAK,EAAE;AAChE;AAGA,IAAM,aAAa,UAAQ;AACzB,WAAS,IAAI,GAAG,IAAI,KAAK,IAAI,QAAQ,KAAK;AACxC,SAAK,IAAI,CAAC,IAAI;AAAA,EAChB;AACF;;;AC3DA,IAAM,cAAc;AAKpB,IAAMyY,WAAU;AAKhB,IAAM,cAAc;AAKpB,IAAM,eAAe;AAKrB,IAAM,UAAU;AAKhB,IAAM,iBAAiB;AAKvB,IAAM,YAAY;AAKlB,IAAM,eAAe;AAKrB,IAAM,cAAc;AAKpB,IAAM,aAAa;AAKnB,IAAM,cAAc;;;ACvCpB,IAAM,kBAAkB;AAGxB,IAAM,eAA4B,uBAAO,IAAI,eAAe;AAK5D,IAAM,iBAAiB;AAAA,EACrB,IAAI,OAAK;AACX;AAGA,IAAM/S,SAAQ;AAAA,EACZ,CAAC,YAAY,GAAG;AAAA,EAChB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AA2BA,IAAM,UAAU,UAAQ;AACtB,QAAMxQ,UAAS,UAAU,sBAAsB,UAAQ;AACrD,YAAQ,MAAM;AAAA,MACZ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,KACH;AACE,eAAOoN,OAAM,IAAI;AAAA,MACnB;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,KACH;AACE,eAAOA,OAAM,KAAK;AAAA,MACpB;AAAA,MACF,SACE;AACE,cAAM,QAAQ,YAAY,CAAC,GAAG,0CAA0C,IAAI,EAAE;AAC9E,eAAOD,MAAK,KAAK;AAAA,MACnB;AAAA,IACJ;AAAA,EACF,CAAC;AACD,SAAO,SAAS,SAAYnN,UAAS,OAAO,IAAI,EAAEA,OAAM;AAC1D;AAGA,IAAMuM,SAAQ,CAACvM,SAAQ,SAAS;AAC9B,SAAO,KAAKiC,OAAMjC,SAAQ,IAAI,GAAGgL,MAAI,eAAe,CAAC;AACvD;AAGA,IAAM/I,SAAQ,CAACjC,SAAQ,SAAS;AAC9B,SAAOgL,MAAI,SAAS,SAAY,OAAOhL,OAAM,IAAI,OAAO,IAAI,EAAE,OAAOA,OAAM,CAAC,GAAG,eAAe;AAChG;AAGA,IAAM,OAAO,UAAQ;AACnB,QAAMA,UAAS,UAAU,mBAAmB,UAAQ;AAClD,UAAM,SAAS,KAAK,MAAM,IAAI;AAC9B,QAAI,OAAO,MAAM,MAAM,GAAG;AACxB,aAAOmN,MAAK,YAAY,CAAC,GAAG,sCAAsC,IAAI,EAAE,CAAC;AAAA,IAC3E;AACA,WAAOC,OAAM,IAAI,KAAK,MAAM,CAAC;AAAA,EAC/B,CAAC;AACD,SAAO,SAAS,SAAYpN,UAAS,OAAO,IAAI,EAAEA,OAAM;AAC1D;AAGA,IAAMc,QAAO,aAAW;AACtB,QAAMA,SAAO,OAAO,OAAO0P,MAAK;AAChC,EAAA1P,OAAK,OAAOyiB;AACZ,EAAAziB,OAAK,UAAU;AACf,EAAAA,OAAK,QAAQ,MAAMqM,MAAK,YAAY,CAAC,GAAG,OAAO,CAAC;AAChD,SAAOrM;AACT;AAGA,IAAMuM,UAAS,UAAQ;AACrB,QAAMrN,UAAS,UAAU,qBAAqB,UAAQ;AACpD,UAAM,SAAS,OAAO,WAAW,IAAI;AACrC,QAAI,OAAO,MAAM,MAAM,GAAG;AACxB,aAAOmN,MAAK,YAAY,CAAC,GAAG,yCAAyC,IAAI,EAAE,CAAC;AAAA,IAC9E;AACA,WAAOC,OAAM,MAAM;AAAA,EACrB,CAAC;AACD,SAAO,SAAS,SAAYpN,UAAS,OAAO,IAAI,EAAEA,OAAM;AAC1D;AAGA,IAAM,UAAU,UAAQ;AACtB,QAAMA,UAAS,UAAU,uBAAuB,UAAQ;AACtD,UAAM,SAAS,OAAO,SAAS,MAAM,EAAE;AACvC,QAAI,OAAO,MAAM,MAAM,GAAG;AACxB,aAAOmN,MAAK,YAAY,CAAC,GAAG,0CAA0C,IAAI,EAAE,CAAC;AAAA,IAC/E;AACA,WAAOC,OAAM,MAAM;AAAA,EACrB,CAAC;AACD,SAAO,SAAS,SAAYpN,UAAS,OAAO,IAAI,EAAEA,OAAM;AAC1D;AAGA,IAAM,WAAW,UAAQ;AACvB,QAAMA,UAAS,UAAUwjB,QAAO,GAAG,CAAA7jB,WAAS;AAC1C,UAAM,QAAQA,OAAM,YAAY;AAChC,UAAM,QAAQ,aAAa,KAAK,CAAA8jB,WAASA,OAAM,UAAU,KAAK;AAC9D,WAAO,UAAU,SAAYtW,MAAK,YAAY,CAAC,GAAG,oCAAoCxN,MAAK,EAAE,CAAC,IAAIyN,OAAM,KAAK;AAAA,EAC/G,CAAC;AACD,SAAO,SAAS,SAAYpN,UAAS,OAAOA,SAAQ,IAAI;AAC1D;AAGA,IAAMgL,QAAmB,qBAAK,GAAG,CAAC,MAAM,MAAM,UAAU,MAAM,OAAKoC,OAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAG/E,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,MAAM,UAAU,MAAM,OAAK;AACxE,MAAI;AACF,WAAOA,OAAM,EAAE,CAAC,CAAC;AAAA,EACnB,SAAS,OAAO;AACd,WAAOD,MAAK,YAAY,CAAC,GAAG,iBAAiB,QAAQ,MAAM,UAAU,GAAG,KAAK,EAAE,CAAC;AAAA,EAClF;AACF,CAAC,CAAC;AAGF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAClD,QAAMuW,aAAY,OAAO,OAAOlT,MAAK;AACrC,EAAAkT,WAAU,OAAO;AACjB,EAAAA,WAAU,WAAW;AACrB,EAAAA,WAAU,YAAY;AACtB,SAAOA;AACT,CAAC;AAGD,IAAM,eAAe,UAAQ;AAC3B,SAAO,UAAQ;AACb,WAAO,YAAY,CAAC,GAAG,YAAY,KAAK,WAAW,cAAc,IAAI,EAAE;AAAA,EACzE;AACF;AAGA,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS;AAClD,QAAMC,UAAS,OAAO,OAAOnT,MAAK;AAClC,EAAAmT,QAAO,OAAO;AACd,EAAAA,QAAO,OAAO;AACd,EAAAA,QAAO,SAAS;AAChB,SAAOA;AACT,CAAC;AAGD,IAAMtV,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS;AAClD,QAAM,WAAW,OAAO,OAAOmC,MAAK;AACpC,WAAS,OAAO;AAChB,WAAS,QAAQ;AACjB,WAAS,SAASgN,SAAQ,IAAI;AAC9B,WAAS,YAAY;AACrB,SAAO;AACT,CAAC;AAGD,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,YAAY;AACvD,QAAM,WAAW,OAAO,OAAOhN,MAAK;AACpC,WAAS,OAAO;AAChB,WAAS,QAAQ;AACjB,WAAS,SAASgN,SAAQ,QAAQ,MAAM;AACxC,WAAS,YAAY,QAAQ;AAC7B,SAAO;AACT,CAAC;AAGD,IAAM,SAAS,UAAQ;AACrB,SAAO,KAAK,MAAMxS,MAAIY,KAAI,GAAG,SAAS;AAAA,IACpC,QAAQ,MAAM+H,SAAQ5G,MAAK,CAAC;AAAA,IAC5B,IAAIgW;AAAA,EACN,CAAC,CAAC;AACJ;AAGA,IAAM,YAAY,CAAC,aAAatjB,WAAU;AACxC,QAAMmkB,aAAY,OAAO,OAAOpT,MAAK;AACrC,EAAAoT,WAAU,OAAO;AACjB,EAAAA,WAAU,cAAc;AACxB,EAAAA,WAAU,QAAQnkB;AAClB,SAAOmkB;AACT;AAGA,IAAM,SAAS,UAAQ;AACrB,QAAM9H,UAAS,OAAO,OAAOtL,MAAK;AAClC,EAAAsL,QAAO,OAAO;AACd,EAAAA,QAAO,SAAS;AAChB,SAAOA;AACT;AAGA,IAAM,SAAS,UAAQ;AACrB,QAAM9b,UAAS,UAAU,qBAAqB,UAAQoN,OAAM,WAAW,IAAI,CAAC,CAAC;AAC7E,SAAO,SAAS,SAAYpN,UAAS,OAAO,IAAI,EAAEA,OAAM;AAC1D;AAGA,IAAMwR,WAAU,CAACxR,SAAQ,SAAS;AAChC,QAAM,YAAYgL,MAAI/I,OAAMjC,OAAM,GAAGuK,aAAY;AACjD,SAAO,SAAS,SAAY,YAAY,OAAO,IAAI,EAAE,SAAS;AAChE;AAGA,IAAMiZ,UAAS,UAAQ;AACrB,QAAMxjB,UAAS,UAAU,mBAAmBoN,MAAK;AACjD,SAAO,SAAS,SAAYpN,UAAS,OAAO,IAAI,EAAEA,OAAM;AAC1D;AACA,IAAMyM,OAAM,SAAO;AACjB,MAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,WAAOoX,OAAM,GAAG;AAAA,EAClB,WAAW,OAAO,YAAY,KAAK;AACjC,WAAOA,OAAM,CAAC,GAAG,GAAG,CAAC;AAAA,EACvB;AACA,SAAOC,QAAO,GAAG;AACnB;AACA,IAAMA,UAAS,OAAK;AAClB,QAAM,UAAU,OAAO,QAAQ,CAAC;AAChC,MAAI,SAAS,KAAK,QAAQ,CAAC,EAAE,CAAC,GAAG9Y,MAAI,CAAArL,YAAU;AAAA,IAC7C,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAGA;AAAA,EACnB,EAAE,CAAC;AACH,MAAI,QAAQ,WAAW,GAAG;AACxB,WAAO;AAAA,EACT;AACA,QAAM,OAAO,QAAQ,MAAM,CAAC;AAC5B,aAAW,CAAC,KAAKK,OAAM,KAAK,MAAM;AAChC,aAAS,KAAK,QAAQoM,SAAQpM,SAAQ,CAAC,QAAQL,YAAW;AAAA,MACxD,GAAG;AAAA,MACH,CAAC,GAAG,GAAGA;AAAA,IACT,EAAE,CAAC;AAAA,EACL;AACA,SAAO;AACT;AAGA,IAAMgU,WAAU,CAAAhU,WAAS;AACvB,QAAMokB,YAAW,OAAO,OAAOvT,MAAK;AACpC,EAAAuT,UAAS,OAAO;AAChB,EAAAA,UAAS,QAAQpkB;AACjB,EAAAokB,UAAS,QAAQ,MAAM3W,OAAMzN,MAAK;AAClC,SAAOokB;AACT;AAGA,IAAMvG,WAAU,CAAAxd,YAAU;AACxB,QAAM,OAAO,OAAO,OAAOwQ,MAAK;AAChC,OAAK,OAAO;AACZ,OAAK,SAASxQ;AACd,SAAO;AACT;AAGA,IAAM2E,QAAO,CAAAhF,WAAS;AACpB,SAAO6d,SAAQ,MAAM7J,SAAQhU,OAAM,CAAC,CAAC;AACvC;AAGA,IAAMqkB,WAAU,CAAChkB,SAAQ,SAAS;AAChC,QAAM,QAAQ,OAAO,OAAOwQ,MAAK;AACjC,QAAM,OAAO;AACb,QAAM,cAAcxQ;AACpB,SAAO,SAAS,SAAY,QAAQ,OAAO,IAAI,EAAE,KAAK;AACxD;AAGA,IAAM,WAAW,OAAK,YAAY,GAAG,YAAY;AAGjD,IAAM6jB,SAAQ,CAAAA,WAAS;AACrB,MAAIA,OAAM,WAAW,GAAG;AACtB,WAAOlQ,SAAQ,CAAC,CAAC;AAAA,EACnB;AACA,MAAIkQ,OAAM,WAAW,GAAG;AACtB,WAAO7Y,MAAI6Y,OAAM,CAAC,GAAG,OAAK,CAAC,CAAC,CAAC;AAAA,EAC/B;AACA,MAAI,SAAS7Y,MAAI6Y,OAAM,CAAC,GAAG,OAAK,CAAC,CAAC,CAAC;AACnC,WAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ,KAAK;AACrC,UAAM7jB,UAAS6jB,OAAM,CAAC;AACtB,aAAS,KAAK,QAAQzX,SAAQpM,SAAQ,CAAC6jB,QAAOlkB,WAAU,CAAC,GAAGkkB,QAAOlkB,MAAK,CAAC,CAAC;AAAA,EAC5E;AACA,SAAO;AACT;AAKA,IAAM,SAAS,aAAW;AACxB,MAAI,SAAS,OAAO,GAAG;AACrB,WAAO;AAAA,EACT;AACA,SAAOmkB,QAAO,OAAO,YAAY,OAAO,QAAQ,OAAO,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F;AAGA,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC3C;AAAA,EACA;AACF,MAAM,UAAU,MAAM,OAAK;AACzB,MAAI,WAAW,CAAC,GAAG;AACjB,WAAO1W,OAAM,CAAC;AAAA,EAChB;AACA,SAAOD,MAAK,YAAY,CAAC,GAAG,OAAO,CAAC;AACtC,CAAC,CAAC;AAGF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,QAAQ,SAAS,MAAM;AAAA,EACrE,QAAQ,MAAMwG,SAAQ,GAAG;AAAA,EACzB,IAAIoP;AACN,CAAC,CAAC;AAGF,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,gBAAgB;AAClE,QAAM,YAAY,OAAO,OAAOvS,MAAK;AACrC,YAAU,OAAO;AACjB,YAAU,SAAS;AACnB,YAAU,cAAc;AACxB,SAAO;AACT,CAAC;AAGD,IAAMrE,OAAmB,qBAAK,GAAG,CAAC,MAAM,SAASC,SAAQ,MAAM,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAGtF,IAAMA,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM;AACtD,QAAMA,YAAU,OAAO,OAAOoE,MAAK;AACnC,EAAApE,UAAQ,OAAO;AACf,EAAAA,UAAQ,OAAO;AACf,EAAAA,UAAQ,QAAQ;AAChB,EAAAA,UAAQ,MAAM;AACd,SAAOA;AACT,CAAC;;;AC5WD,IAAMrJ,UAAQ;AAAA,EACZ,MAAM;AACR;AA4BA,IAAMmO,SAAqB,qBAAK,GAAG,CAAC,MAAMA,WAAU;AAClD,MAAIhO,SAAQiI,IAAG+F,MAAK;AACpB,MAAI,SAAS;AACb,SAAO,OAAOhO,MAAK,GAAG;AACpB,UAAMgO,SAAQhO,OAAM;AACpB,YAAQgO,OAAM,MAAM;AAAA,MAClB,KAAK,SACH;AACE,QAAAhO,SAAQA,OAAM;AACd;AAAA,MACF;AAAA,MACF,KAAK,WACH;AACE,QAAAA,SAAQ,KAAKgO,OAAM,OAAO,KAAKA,OAAM,QAAQhO,OAAM,IAAI,CAAC;AACxD;AAAA,MACF;AAAA,MACF,KAAK,WACH;AACE,iBAAS8H,KAAI,QAAQkG,OAAM,CAAC;AAC5B,QAAAhO,SAAQA,OAAM;AACd;AAAA,MACF;AAAA,MACF,KAAK,UACH;AACE,iBAAS,QAAQ,QAAQgO,OAAM,IAAI;AACnC,QAAAhO,SAAQA,OAAM;AACd;AAAA,MACF;AAAA,MACF,KAAK,YACH;AACE,cAAM,eAAe,KAAK,KAAK,MAAM,GAAG,SAASgO,OAAM,IAAI,CAAC;AAC5D,YAAI,cAAc;AAChB,mBAAS,aAAa,MAAM;AAC5B,UAAAhO,SAAQA,OAAM;AAAA,QAChB,OAAO;AACL,iBAAOiK,MAAK,YAAY,QAAQ,YAAY+D,OAAM,IAAI,2CAA2C,CAAC;AAAA,QACpG;AACA;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,SAAO9D,OAAM,MAAM;AACrB,CAAC;;;AC0ED,IAAM,QAAQC;;;AC1Id,IAAM,SAAS,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AAGpC,IAAM,0BAA0B;AAGhC,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAG5E,IAAM,oBAAiC,oBAAI,oBAAoB;AAG/D,IAAM,8BAA8B;AAGpC,IAAM,2BAAwC,uBAAO,IAAI,2BAA2B;AAGpF,IAAMvC,SAAO,cAAY;AAAA,EACvB,CAAC,oBAAoB,GAAG;AAAA,EACxB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,GAAG;AACL;AAGA,IAAM,WAAW,cAAY;AAAA,EAC3B,CAAC,wBAAwB,GAAG;AAAA,EAC5B,OAAO,QAAQ;AAAA,EACf,MAAM,CAAC,MAAM9K,SAAQM,SAAQ,SAAS,QAAQ,KAAK,MAAMN,SAAQM,MAAK;AAAA,EACtE,mBAAmB,QAAQ;AAC7B;AAGA,IAAM,WAAW,UAAQwK,OAAK;AAAA,EAC5B,MAAM,CAAA9K,YAAUqK,SAAQ,aAAa,MAAM,MAAM,GAAGrK,SAAQ,KAAK,GAAG,CAAAiC,WAAS,MAAM,KAAKA,MAAK,GAAG;AAAA,IAC9F,QAAQ,MAAMnB,MAAK,YAAY,MAAM,GAAG,6CAA6Cd,OAAM,EAAE,CAAC;AAAA,IAC9F,QAAQ;AAAA,EACV,CAAC,CAAC;AAAA,EACF,WAAW;AACb,CAAC;AAGD,IAAM,UAAU,CAACA,UAAS,CAAC,MAAM;AAC/B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,OAAO,OAAO,CAAC,GAAG;AAAA,IACpB,WAAW;AAAA,IACX,UAAU;AAAA,EACZ,GAAGA,OAAM;AACT,QAAM,iBAAiB,UAAQ,KAAK,MAAM,KAAK,SAAS,CAAC;AACzD,QAAM,mBAAmB,gBAAc,WAAW,MAAM,SAAS;AACjE,QAAM,SAAS,MAAM,OAAO,YAAY,eAAe,SAAS,WAAW,OAAO,QAAQ,QAAQ,WAAW,QAAQ,MAAM,CAAC;AAC5H,QAAM,OAAO,CAAC,MAAM4jB,YAAWtjB,SAAQ,SAAS;AAC9C,UAAM,aAAa,eAAe,IAAI;AACtC,UAAM8C,WAAU,OAAO;AACvB,UAAM,WAAW,cAAcA,WAAUwI,MAAKxI,SAAQ,UAAU,CAAC,IAAI2J,MAAK;AAC1E,WAAO,KAAK,UAAU,SAAS,MAAM,YAAY,MAAM,YAAY,UAAU,kCAAkC,CAAC,GAAG1C,SAAQ,CAAA1K,WAAS,eAAeA,QAAO,MAAMikB,YAAW,UAAUtjB,MAAK,CAAC,CAAC;AAAA,EAC9L;AACA,QAAM,oBAAoB,UAAQ,KAAK,MAAM;AAC3C,UAAM8C,WAAU,OAAO;AACvB,UAAMxD,QAAO,OAAO,KAAKwD,QAAO;AAChC,UAAM,WAAW,MAAM,KAAKxD,KAAI,EAAE,IAAI,CAAAD,WAAS,iBAAiBA,OAAM,YAAY,CAAC,CAAC;AACpF,UAAM,mBAAmB,SAAS,OAAO,aAAW;AAClD,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAM,gBAAgB,KAAK,MAAM,UAAU,CAAC,CAAC;AAC7C,cAAM,iBAAiB,QAAQ,CAAC;AAChC,YAAI,mBAAmB,UAAa,kBAAkB,gBAAgB;AACpE,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT,CAAC,EAAE,QAAQ,aAAW,QAAQ,MAAM,KAAK,QAAQ,KAAK,SAAS,CAAC,CAAC;AACjE,WAAO4K,cAAa,gBAAgB;AAAA,EACtC,CAAC;AACD,SAAO,SAAS,SAAS;AAAA,IACvB;AAAA,IACA;AAAA,IACA,OAAOxH;AAAA,EACT,CAAC,CAAC;AACJ;AAuCA,IAAM,SAAS,CAAC,SAAS,UAAUoK,OAAMC,WAAU;AACjD,QAAM,UAAU,OAAOD,MAAK,QAAQ,WAAS,SAASC,OAAM,SAASL,MAAK,IAAInB,MAAK,CAAC,QAAQ,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC/G,QAAM,WAAW,OAAOwB,OAAM,QAAQ,WAAS,SAASD,MAAK,SAASJ,MAAK,IAAInB,MAAK,CAAC,SAAS,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;AACjH,QAAM,gBAAgB,OAAOuB,OAAM,OAAO;AAC1C,QAAM,iBAAiB,OAAOC,QAAO,QAAQ;AAC7C,SAAO,CAAC,eAAe,cAAc;AACvC;AACA,IAAM,eAAe,CAAC,MAAM,QAAQpN,SAAQM,WAAU;AACpD,QAAM,KAAKN;AACX,UAAQ,GAAG,MAAM;AAAA,IACf,KAAK,aACH;AACE,aAAO,QAAQ,GAAG,GAAG,KAAK,CAAC;AAAA,IAC7B;AAAA,IACF,KAAK,cACH;AACE,aAAO,QAAQ,MAAM,aAAa,MAAM,QAAQ,GAAG,QAAQM,MAAK,CAAC;AAAA,IACnE;AAAA,IACF,KAAKijB,UACH;AACE,aAAOziB,MAAK,YAAY,QAAQ,GAAG,OAAO,CAAC;AAAA,IAC7C;AAAA,IACF,KAAK,aACH;AACE,aAAO,KAAK,QAAQ,MAAM,aAAa,MAAM,QAAQ,GAAG,OAAOR,MAAK,CAAC,GAAG,SAAS,YAAU;AACzF,YAAI,GAAG,UAAU,MAAM,GAAG;AACxB,iBAAO,KAAK,aAAa,MAAM,QAAQ,GAAG,QAAQA,MAAK,GAAG,SAAS,YAAUQ,MAAK,GAAG,QAAQ,MAAM,CAAC,CAAC,CAAC;AAAA,QACxG;AACA,eAAOA,MAAK,MAAM;AAAA,MACpB,CAAC,CAAC;AAAA,IACJ;AAAA,IACF,KAAK,SACH;AACE,aAAO,QAAQ,MAAM,aAAa,MAAM,QAAQ,GAAG,OAAO,GAAGR,MAAK,CAAC;AAAA,IACrE;AAAA,IACF,KAAK,gBACH;AACE,aAAO,QAAQ,MAAM,KAAK,aAAa,MAAM,QAAQ,GAAG,UAAUA,MAAK,GAAG+J,SAAQ,kBAAkB,OAAK,KAAK,GAAG,UAAU,CAAC,GAAG,SAAS,SAAS,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IAC/J;AAAA,IACF,KAAK,WACH;AACE,aAAO,QAAQ,MAAM,aAAa,MAAM,OAAO,QAAQ,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,QAAQ/J,MAAK,CAAC;AAAA,IACxF;AAAA,IACF,KAAK,cACH;AACE,aAAO,KAAK4Q,OAAM,QAAQ,KAAK,KAAK,GAAG7G,SAAQ,CAAA4Z,YAAU,KAAK,KAAK,KAAKA,SAAQ,IAAI3jB,MAAK,GAAG+J,SAAQ,CAAApH,YAAU;AAC5G,YAAIA,QAAO,WAAW,GAAG;AACvB,gBAAM,OAAO,KAAK,KAAKghB,OAAM,GAAG,UAAU,MAAM,OAAO,CAAC;AACxD,iBAAOnjB,MAAK,aAAa,IAAI,CAAC;AAAA,QAChC;AACA,eAAO,QAAQmC,OAAM;AAAA,MACvB,CAAC,CAAC,CAAC,CAAC;AAAA,IACN;AAAA,IACF,KAAK,aACH;AACE,aAAO,KAAKiO,OAAM,QAAQ,KAAK,KAAK,GAAG7G,SAAQ,mBAAiB,KAAK,KAAK,kBAAkB,aAAa,GAAGA,SAAQ,WAAW,GAAGA,SAAQ,aAAW;AACnJ,YAAI,QAAQ,WAAW,GAAG;AACxB,iBAAO,QAAQ,MAAMW,MAAI,aAAa,MAAM,eAAe,GAAG,QAAQ,IAAI,GAAG,EAAE,CAAC;AAAA,QAClF;AACA,eAAO,KAAK,kBAAkB,SAAS,WAAS,aAAa,MAAM,OAAO,QAAQ,IAAI,KAAK,GAAG,GAAG,GAAG,QAAQ,IAAI,CAAC,GAAGA,MAAI,gBAAc;AACpI,gBAAM,YAAYV,SAAQ,UAAU;AACpC,cAAI,UAAU,WAAW,GAAG;AAC1B,mBAAO,GAAG,MAAM,CAAC;AAAA,UACnB;AACA,iBAAO,GAAG,SAAS;AAAA,QACrB,CAAC,CAAC;AAAA,MACJ,CAAC,CAAC,CAAC,CAAC;AAAA,IACN;AAAA,IACF,KAAK,YACH;AACE,aAAO,QAAQ,MAAM,KAAK4G,OAAM,QAAQ,KAAK,KAAK,GAAG7G,SAAQ,CAAA4Z,YAAU,KAAK,KAAK,kBAAkBA,OAAM,GAAG5Z,SAAQ,CAAAzK,UAAQ;AAC1H,eAAO,KAAKA,OAAM,kBAAkB,SAAO,aAAa,MAAM,OAAOqkB,SAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,aAAa3jB,MAAK,CAAC,GAAG0K,MAAI,CAAA/H,YAAU;AAC5H,cAAIA,QAAO,WAAW,GAAG;AACvB,mBAAO,GAAGF,QAAQ,CAAC;AAAA,UACrB;AACA,gBAAM,SAASE,QAAO,IAAI,OAAK,MAAM,KAAK,CAAC,CAAC;AAC5C,iBAAO,KAAK,UAAU,MAAM,GAAG+H,KAAM,CAAA/H,YAAUsH,cAAe,IAAIA,cAAe3K,KAAI,GAAGqD,OAAM,CAAC,CAAC,CAAC;AAAA,QACnG,CAAC,CAAC;AAAA,MACJ,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACP;AAAA,IACF,KAAK,aACH;AACE,aAAO,QAAQ,MAAM,KAAK,aAAa,MAAM,QAAQ,GAAG,MAAM3C,MAAK,GAAGiQ,SAAQlG,SAAQ,CAAA8C,UAAQ,KAAK,aAAa,MAAM,QAAQ,GAAG,OAAO7M,MAAK,GAAGiQ,SAAQlG,SAAQ,aAAW;AACzK,YAAI8D,QAAOhB,KAAI,KAAKgB,QAAO,OAAO,GAAG;AACnC,iBAAOrN,MAAK,IAAIqM,MAAK,MAAM,QAAQ,IAAI,CAAC;AAAA,QAC1C;AACA,YAAIgB,QAAOhB,KAAI,KAAKiB,SAAQ,OAAO,GAAG;AACpC,iBAAOtN,MAAKqM,MAAK,IAAI;AAAA,QACvB;AACA,YAAIiB,SAAQjB,KAAI,KAAKgB,QAAO,OAAO,GAAG;AACpC,iBAAOrN,MAAK,QAAQ,IAAI;AAAA,QAC1B;AACA,YAAIsN,SAAQjB,KAAI,KAAKiB,SAAQ,OAAO,GAAG;AACrC,gBAAM,OAAO,KAAK,QAAQ,KAAK,GAAG,CAAC;AACnC,gBAAMtN,SAAO,iBAAiB,QAAQ,IAAI;AAC1C,gBAAM,CAAC,OAAO,MAAM,IAAI,OAAOA,QAAMA,QAAM,KAAKqM,MAAK,OAAOnC,KAAMoC,MAAK,CAAC,GAAG,KAAK,QAAQ,OAAOpC,KAAMoC,MAAK,CAAC,CAAC;AAC5G,iBAAO,KAAK,OAAO,IAAI,MAAM,GAAG,kBAAkB,CAAC,CAACD,OAAMC,MAAK,MAAM,KAAKjB,KAAMgB,OAAMC,MAAK,GAAGpC,MAAI,CAAC,CAACmC,OAAMC,MAAK,MAAM,GAAG,IAAID,OAAMC,MAAK,CAAC,CAAC,CAAC,CAAC;AAAA,QAC7I;AACA,cAAM,IAAI,MAAM,qGAAqG;AAAA,MACvH,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACP;AAAA,EACJ;AACF;AACA,IAAM,mBAAmB,CAAC,QAAQ,SAAS,WAASD,MAAK,YAAY,QAAQ,wBAAwB,KAAK,2BAA2B,IAAI,eAAe,CAAC;AAmEzJ,IAAM,kBAAkB,CAAC,MAAM,UAAU;AACvC,QAAM7M,SAAQ,KAAK,MAAM,IAAI,OAAO,OAAO,YAAY,KAAK,CAAC,MAAM,CAAC;AACpE,SAAOA;AACT;AACA,IAAM,iBAAiB,CAAC,MAAM,MAAMsjB,YAAW,WAAWtjB,WAAU;AAClE,MAAI,CAACA,QAAO;AACV,WAAO,KAAKsjB,WAAU,MAAM,IAAI,GAAG5Y,MAAI,EAAE,GAAG,SAAS,SAAS,IAAI,CAAC,CAAC;AAAA,EACtE;AACA,SAAO,KAAK,gBAAgB,MAAM,SAAS,GAAG,kBAAkB,UAAQ4Y,WAAU,MAAM,KAAK,KAAK,CAAC,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC,CAAC;AACjI;AACA,IAAM,YAAY,CAAArX,WAAS;AACzB,SAAO,OAAO,KAAKA,OAAM,CAAC,CAAC,EAAE,IAAI,YAAUA,OAAM,IAAI,SAAO,IAAI,MAAM,CAAC,CAAC;AAC1E;AACA,IAAM,cAAc,CAAAiX,YAAU;AAC5B,SAAOA,QAAO,QAAQ,0BAA0B,MAAM;AACxD;AACA,IAAM,cAAc,mBAAiB,KAAK,kBAAkB,eAAe,gBAAgB,GAAG7Q,SAAQ;AAAA,EACpG,WAAW,MAAM,MAAM;AAAA,EACvB,WAAW,KAAK,KAAK;AACvB,CAAC,GAAGpC,SAAQvF,MAAI,KAAK,CAAC;AAEtB,IAAM,qBAAqB;AAC3B,IAAM,mBAAmB,SAAO;AAC9B,QAAMtL,UAAQ,IAAI,MAAM,kBAAkB;AAC1C,MAAIA,YAAU,MAAM;AAClB,UAAM,eAAeA,QAAM,CAAC;AAC5B,WAAO,KAAK,iBAAiB,UAAa,aAAa,SAAS,IAAIkM,MAAK,YAAY,IAAImB,MAAK,GAAG,QAAU,YAAY,CAAC;AAAA,EAC1H;AACA,SAAOA,MAAK;AACd;AAuBA,IAAM,eAAe,SAAO;AAC1B,QAAM,cAAc,OAAO,SAAS,GAAG;AACvC,SAAO,OAAO,MAAM,WAAW,IAAIA,MAAK,IAAInB,MAAK,WAAW;AAC9D;;;ACtWA,IAAMY,WAAsB,uBAAO,IAAI,gBAAgB;AAGvD,IAAM,aAA0B,oBAAIA,QAAM;AAG1C,IAAM,iBAAiB;AAAA,EACrB,CAACA,QAAM,GAAGA;AAAA,EACV,OAAO,cAAc,MAAM;AACzB,WAAO,KAAK,MAAM;AAChB,cAAQ,OAAO,WAAW,GAAG,IAAI;AAAA,IACnC,CAAC;AAAA,EACH;AAAA,EACA,OAAoB,qBAAK,MAAM;AAC7B,YAAQ,MAAM;AAAA,EAChB,CAAC;AAAA,EACD,MAAM,OAAO;AACX,WAAO,KAAK,MAAM;AAChB,cAAQ,MAAM,KAAK;AAAA,IACrB,CAAC;AAAA,EACH;AAAA,EACA,WAAW,OAAO;AAChB,WAAO,KAAK,MAAM;AAChB,cAAQ,WAAW,KAAK;AAAA,IAC1B,CAAC;AAAA,EACH;AAAA,EACA,SAAS,MAAM;AACb,WAAO,KAAK,MAAM;AAChB,cAAQ,MAAM,GAAG,IAAI;AAAA,IACvB,CAAC;AAAA,EACH;AAAA,EACA,IAAI,MAAM,SAAS;AACjB,WAAO,KAAK,MAAM;AAChB,cAAQ,IAAI,MAAM,OAAO;AAAA,IAC3B,CAAC;AAAA,EACH;AAAA,EACA,UAAU,MAAM;AACd,WAAO,KAAK,MAAM;AAChB,cAAQ,OAAO,GAAG,IAAI;AAAA,IACxB,CAAC;AAAA,EACH;AAAA,EACA,SAAS,MAAM;AACb,WAAO,KAAK,MAAM;AAChB,cAAQ,MAAM,GAAG,IAAI;AAAA,IACvB,CAAC;AAAA,EACH;AAAA,EACA,MAAM,SAAS;AACb,WAAO,SAAS,YAAY,KAAK,MAAM,QAAQ,eAAe,SAAS,KAAK,CAAC,IAAI,KAAK,MAAM,QAAQ,MAAM,SAAS,KAAK,CAAC;AAAA,EAC3H;AAAA,EACA,UAAuB,qBAAK,MAAM;AAChC,YAAQ,SAAS;AAAA,EACnB,CAAC;AAAA,EACD,QAAQ,MAAM;AACZ,WAAO,KAAK,MAAM;AAChB,cAAQ,KAAK,GAAG,IAAI;AAAA,IACtB,CAAC;AAAA,EACH;AAAA,EACA,OAAO,MAAM;AACX,WAAO,KAAK,MAAM;AAChB,cAAQ,IAAI,GAAG,IAAI;AAAA,IACrB,CAAC;AAAA,EACH;AAAA,EACA,MAAM,aAAa,YAAY;AAC7B,WAAO,KAAK,MAAM;AAChB,cAAQ,MAAM,aAAa,UAAU;AAAA,IACvC,CAAC;AAAA,EACH;AAAA,EACA,KAAK,OAAO;AACV,WAAO,KAAK,MAAM,QAAQ,KAAK,KAAK,CAAC;AAAA,EACvC;AAAA,EACA,QAAQ,OAAO;AACb,WAAO,KAAK,MAAM,QAAQ,QAAQ,KAAK,CAAC;AAAA,EAC1C;AAAA,EACA,QAAQ,UAAU,MAAM;AACtB,WAAO,KAAK,MAAM;AAChB,cAAQ,QAAQ,OAAO,GAAG,IAAI;AAAA,IAChC,CAAC;AAAA,EACH;AAAA,EACA,SAAS,MAAM;AACb,WAAO,KAAK,MAAM;AAChB,cAAQ,MAAM,GAAG,IAAI;AAAA,IACvB,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,MAAM;AACZ,WAAO,KAAK,MAAM;AAChB,cAAQ,KAAK,GAAG,IAAI;AAAA,IACtB,CAAC;AAAA,EACH;AAAA,EACA,QAAQ;AACV;;;ACtFA,IAAM,kBAAkB;AAGxB,IAAM,eAA4B,uBAAO,IAAI,eAAe;AAG5D,IAAM,YAAyB,oBAAI,YAAY;AAE/C,IAAM,aAAN,MAAiB;AAAA,EACf,CAAC,YAAY,IAAI;AAAA,EACjB,YAAY,MAAM;AAChB,SAAK,OAAO;AACZ,SAAK,OAAO,IAAI,UAAU,IAAI;AAAA,EAChC;AAAA,EACA,OAAO;AACL,WAAO,KAAK,MAAM,KAAK,KAAK,OAAO,CAAC;AAAA,EACtC;AAAA,EACA,cAAc;AACZ,WAAOxB,MAAI,KAAK,KAAK,GAAG,OAAK,IAAI,GAAG;AAAA,EACtC;AAAA,EACA,UAAU;AACR,WAAO,KAAK,MAAM,KAAK,KAAK,QAAQ,OAAO,gBAAgB,CAAC;AAAA,EAC9D;AAAA,EACA,UAAUzH,MAAK+I,MAAK;AAClB,WAAOtB,MAAI,KAAK,KAAK,GAAG,QAAMsB,OAAM/I,QAAO,IAAIA,IAAG;AAAA,EACpD;AAAA,EACA,eAAeA,MAAK+I,MAAK;AACvB,WAAO,KAAK,MAAM,KAAK,KAAK,QAAQA,OAAM/I,IAAG,IAAIA,IAAG;AAAA,EACtD;AAAA,EACA,QAAQ,UAAU;AAChB,WAAO,YAAY,UAAU,OAAK,KAAK,eAAe,GAAG,IAAI,CAAC,CAAC;AAAA,EACjE;AACF;AACA,IAAM,cAAc,CAAC,UAAU,mBAAmB;AAChD,SAAO,QAAQ,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,QAAQ,CAAC,GAAG8G,SAAQ,CAAAtI,YAAU;AAC5E,UAAM,UAAU,CAAC;AACjB,aAAS,IAAIA,QAAO,QAAQ,KAAK,GAAG,IAAI,IAAI,GAAG;AAC7C,cAAQ,KAAK,CAAC;AAAA,IAChB;AACA,WAAO,KAAK,SAAS,yBAAyB,OAAK,KAAK,eAAe,CAAC,GAAGiJ,MAAI,OAAK,KAAKjJ,SAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGkL,IAAG1C,cAAaxI,OAAM,CAAC,CAAC;AAAA,EACzI,CAAC,CAAC,CAAC;AACL;AACA,IAAM,OAAO,CAACA,SAAQ,QAAQ,WAAW;AACvC,QAAM,MAAMA,QAAO,MAAM;AACzB,EAAAA,QAAO,MAAM,IAAIA,QAAO,MAAM;AAC9B,EAAAA,QAAO,MAAM,IAAI;AACjB,SAAOA;AACT;AACA,IAAM+I,SAAO,UAAQ,IAAI,WAAW,IAAI;;;AC3CxC,IAAM,eAA4B,qBAAmB,gBAAA/H,OAAM,GAAgB,gBAAA4M,KAAI,UAAuB,gBAAA7E,OAAO,CAAC,GAAgB,gBAAA6E,KAAI,YAAY,cAAc,GAAgB,gBAAAA,KAAI,WAAwB,gBAAA7E,OAAmB,qBAAK,OAAO,IAAI,eAAe,CAAC,CAAC,GAAgB,gBAAA6E,KAAI,mBAAgC,wBAAQ,CAAC,GAAgB,gBAAAA,KAAI,WAAW,YAAY,CAAC;AAQrW,IAAM,kBAA+B,4BAA0B,uBAAO,IAAI,wCAAwC,GAAG,MAAM,0BAA0B,YAAY,CAAC;AAKlK,IAAM,QAAQ,CAAA8R,cAAY;AACxB,QAAM,kBAAkB,OAAOA,SAAQ;AACvC,SAAO,UAAU,CAAA5L,WAASA,OAAM,MAAM,eAAe,CAAC;AACxD;AAGA,IAAM,YAAY,OAAK,gBAAgB,iBAAiB,cAAY,EAAErL,KAAI,UAAU,QAAQ,CAAC,CAAC;AAG9F,IAAM,oBAAiC,0BAAU,CAAAqL,WAASA,OAAM,iBAAiB;AAGjF,IAAM,mBAAgC,0BAAU,CAAAA,WAASA,OAAM,gBAAgB;AAG/E,IAAM,YAAyB,qBAAK,GAAG,CAACjE,SAAQjS,WAAU,oBAAoB,iBAAiBgQ,KAAI,UAAUhQ,MAAK,CAAC,EAAEiS,OAAM,CAAC;AAK5H,IAAM,qBAAkC,qBAAK,GAAG,CAACA,SAAQjS,WAAU,oBAAoB,iBAAiBgQ,KAAI,mBAAmBhQ,MAAK,CAAC,EAAEiS,OAAM,CAAC;AAG9I,IAAM,qBAAqB,OAAK,gBAAgB,iBAAiB,cAAY,EAAEpH,KAAI,UAAU,iBAAiB,CAAC,CAAC;AAGhH,IAAM,SAAS,CAAAxK,YAAU,mBAAmB,OAAK,EAAE,KAAKA,OAAM,CAAC;AAK/D,IAAM,aAAa,OAAK,gBAAgB,iBAAiB,cAAY,EAAEwK,KAAI,UAAU,SAAS,CAAC,CAAC;AAuBhG,IAAM,aAAa,OAAK,gBAAgB,iBAAiB,cAAY,EAAEA,KAAI,UAAU,SAAS,CAAC,CAAC;AAGhG,IAAM,aAA0B,qBAAK,GAAG,CAACoH,SAAQjS,WAAU,oBAAoB,iBAAiBgQ,KAAI,WAAWhQ,MAAK,CAAC,EAAEiS,OAAM,CAAC;;;AC/B9H,IAAMqL,SAAQ;AAMd,IAAMiH,qBAAoB;AAM1B,IAAMC,oBAAmB;AAMzB,IAAMrO,aAAY;;;AC5DlB,SAAS9F,YAAW,gBAAgB;AAClC,SAAO,IAAI,cAAc,cAAc;AACzC;AAGA,SAASjN,UAAQ;AACf,SAAOiN,YAAW,oBAAI,IAAI,CAAC;AAC7B;AAGA,IAAM,eAA4B,uBAAO,IAAI,kBAAkB;AAG/D,IAAM,gBAAN,MAAoB;AAAA,EAClB,CAAC,YAAY,IAAI;AAAA,EACjB,YAAY,QAAQ;AAClB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,eAAe,CAAC,MAAM,cAAc,aAAa,iBAAiB,UAAU;AAChF,QAAM,MAAM;AACZ,MAAI,cAAc;AAClB,MAAI,aAAa;AACjB,MAAI,gBAAgB;AACpB,MAAI,MAAM;AACV,SAAO,QAAQ,QAAW;AACxB,QAAI,wBAAwB,WAAW,KAAK,wBAAwB,UAAU,GAAG;AAC/E,YAAM,gBAAgB,aAAa,WAAW,EAAE,CAAC;AACjD,YAAM,kBAAkB,aAAa,WAAW;AAChD,YAAM,eAAe,aAAa,UAAU,EAAE,CAAC;AAC/C,YAAM,gBAAgB,aAAa,UAAU,EAAE,CAAC;AAChD,YAAM,iBAAiB,aAAa,UAAU;AAC9C,UAAI,cAAc,kBAAkB,aAAa,iBAAiB;AAChE,qBAAa;AACb,wBAAgB;AAAA,MAClB,WAAW,cAAc,kBAAkB,aAAa,iBAAiB;AACvE,sBAAc;AAAA,MAChB,OAAO;AACL,YAAI,cAAc,KAAK,aAAa,IAAI;AACtC,uBAAa;AACb,0BAAgB;AAAA,QAClB,WAAW,cAAc,KAAK,aAAa,IAAI;AAC7C,wBAAc;AAAA,QAChB,OAAO;AACL,gBAAM,CAAC,eAAe,aAAa;AAAA,QACrC;AAAA,MACF;AAAA,IACF,OAAO;AACL,YAAM,CAAC,IAAI,SAAS,IAAI;AAAA,IAC1B;AAAA,EACF;AACA,SAAO;AACT;AAGA,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAMC,UAAS,SAAS;AAC3D,QAAM,kBAAkB,IAAI,IAAI,KAAK,MAAM;AAC3C,aAAW,CAAC,UAAU,UAAU,KAAK,KAAK,QAAQ;AAChD,UAAM,aAAa,aAAa,UAAU,EAAE,CAAC;AAC7C,QAAI,CAAC,OAAO,aAAa,UAAU,EAAE,CAAC,GAAGA,QAAO,GAAG;AACjD,UAAI,CAAC,gBAAgB,IAAI,QAAQ,GAAG;AAClC,YAAI,OAAO,YAAY,SAAS,OAAO,GAAG;AACxC;AAAA,QACF;AACA,wBAAgB,IAAI,UAAU,CAAC,CAACA,UAAS,SAAS,KAAK,SAAS,SAAS,UAAU,CAAC,CAAC,CAAC;AACtF;AAAA,MACF;AACA,YAAM,cAAc,gBAAgB,IAAI,QAAQ;AAChD,YAAM,CAAC,UAAU,WAAW,IAAI,aAAa,UAAU,aAAa,UAAU;AAC9E,UAAI,aAAa;AACf,cAAMiB,SAAQ,SAAS,KAAK,UAAU,UAAU;AAChD,cAAM,WAAW,aAAa,WAAW,EAAE,CAAC;AAC5C,cAAM,WAAW,SAAS,KAAK,UAAU,SAAS,MAAMA,MAAK,EAAE,QAAQ,CAAC;AACxE,YAAI,CAAC,OAAO,UAAU,QAAQ,GAAG;AAC/B,cAAI;AACJ,gBAAM,gBAAgB,aAAa,WAAW,EAAE,CAAC;AACjD,cAAI,OAAO,eAAejB,QAAO,GAAG;AAClC,uBAAW,QAAQ,CAAC,eAAe,QAAQ,CAAC,EAAE,aAAa,WAAW,CAAC;AAAA,UACzE,OAAO;AACL,uBAAW,QAAQ,CAACA,UAAS,QAAQ,CAAC,EAAE,WAAW;AAAA,UACrD;AACA,0BAAgB,IAAI,UAAU,QAAQ;AAAA,QACxC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO,IAAI,cAAc,IAAI,IAAI,eAAe,CAAC;AACnD,CAAC;AAGD,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,YAAY;AACrD,QAAMjF,QAAM,oBAAI,IAAI;AACpB,aAAW,CAAC,UAAU,KAAK,KAAK,KAAK,OAAO,QAAQ,GAAG;AACrD,UAAM,WAAW,aAAa,KAAK,EAAE,CAAC;AACtC,UAAM,WAAW,SAAS,MAAM,SAAS,IAAI,EAAE,QAAQ;AACvD,QAAI,OAAO,UAAU,QAAQ,GAAG;AAC9B,MAAAA,MAAI,IAAI,UAAU,KAAK;AAAA,IACzB,OAAO;AACL,MAAAA,MAAI,IAAI,UAAU,QAAQ,CAAC,SAAS,QAAQ,CAAC,EAAE,KAAK,CAAC;AAAA,IACvD;AAAA,EACF;AACA,SAAO,IAAI,cAAcA,KAAG;AAC9B,CAAC;AAGD,IAAM,YAAY,UAAQT,cAAa,KAAK,OAAO,KAAK,CAAC;AAGzD,IAAM,SAAS,UAAQ,yBAAyB,UAAU,IAAI,GAAG,cAAY,YAAY,UAAU,aAAa,MAAM,QAAQ,CAAC,CAAC;AAGhI,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,aAAa;AACvD,QAAM,SAAS,IAAI,IAAI,KAAK,MAAM;AAClC,SAAO,OAAO,QAAQ;AACtB,SAAO,IAAI,cAAc,MAAM;AACjC,CAAC;AAGD,IAAMC,OAAmB,qBAAK,GAAG,CAAC,MAAM,aAAa;AACnD,MAAI,CAAC,KAAK,OAAO,IAAI,QAAQ,GAAG;AAC9B,WAAOuC,MAAK;AAAA,EACd;AACA,SAAOnB,MAAK,aAAa,KAAK,OAAO,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxD,CAAC;AAGD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,aAAa,KAAKpB,KAAI,MAAM,QAAQ,GAAG,UAAU,MAAM,SAAS,OAAO,CAAC,CAAC;AAG1H,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC5C,SAAAyF;AAAA,EACA;AAAA,EACA,OAAAtQ;AACF,MAAM;AACJ,QAAM,WAAW,KAAK,OAAO,IAAI,QAAQ,IAAI,KAAK,OAAO,IAAI,QAAQ,IAAI,MAAQ;AACjF,MAAI;AACJ,MAAI,qBAAqB,QAAQ,GAAG;AAClC,eAAW,GAAG,CAACsQ,UAAStQ,MAAK,CAAC;AAAA,EAChC,OAAO;AACL,UAAM,CAAC,WAAW,YAAY,IAAI,aAAa,QAAQ;AACvD,QAAI,OAAO,WAAWsQ,QAAO,GAAG;AAC9B,UAAI,OAAO,cAActQ,MAAK,GAAG;AAC/B,eAAO;AAAA,MACT,OAAO;AACL,mBAAW,QAAQ,CAACsQ,UAAStQ,MAAK,CAAC,EAAE,aAAa,QAAQ,CAAC;AAAA,MAC7D;AAAA,IACF,OAAO;AACL,iBAAW,QAAQ,CAACsQ,UAAStQ,MAAK,CAAC,EAAE,QAAQ;AAAA,IAC/C;AAAA,EACF;AACA,QAAM,SAAS,IAAI,IAAI,KAAK,MAAM;AAClC,SAAO,IAAI,cAAc,OAAO,IAAI,UAAU,QAAQ,CAAC;AACzD,CAAC;;;AC1HD,IAAMykB,UAAS;AAkBf,IAAMC,gBAAe;AAUrB,IAAMC,UAAS;AAQf,IAAMC,UAAS;AAQf,IAAMC,aAAY;AAgBlB,IAAMzhB,UAAQA;;;AClGd,IAAM0hB,YAAW;AAKjB,IAAM,SAAS;AAKf,IAAM,YAAY;AAKlB,IAAM,YAAY;AAKlB,IAAM,cAAc;AAKpB,IAAM1hB,UAAQ;AAAA,EACZ,MAAM0hB;AACR;AAGA,IAAM9V,QAAO,CAAC,UAAU,aAAa;AACnC,QAAM,gBAAgB,IAAI,IAAI,SAAS,MAAM;AAC7C,MAAIuC,SAAQnO;AACZ,aAAW,CAAC,UAAU,KAAK,KAAK,SAAS,OAAO,QAAQ,GAAG;AACzD,UAAMkM,YAAW,aAAa,KAAK,EAAE,CAAC;AACtC,UAAM,MAAM,cAAc,IAAI,QAAQ;AACtC,QAAI,QAAQ,QAAW;AACrB,YAAMyV,YAAW,aAAa,GAAG,EAAE,CAAC;AACpC,UAAI,CAAC,OAAOA,WAAUzV,SAAQ,GAAG;AAC/B,QAAAiC,SAAQrB,SAAQ;AAAA,UACd,MAAM;AAAA,UACN;AAAA,UACA,OAAO,SAAS,KAAK6U,WAAUzV,SAAQ;AAAA,QACzC,CAAC,EAAEiC,MAAK;AAAA,MACV;AAAA,IACF,OAAO;AACL,MAAAA,SAAQrB,SAAQ;AAAA,QACd,MAAM;AAAA,QACN;AAAA,QACA,OAAOZ;AAAA,MACT,CAAC,EAAEiC,MAAK;AAAA,IACV;AACA,kBAAc,OAAO,QAAQ;AAAA,EAC/B;AACA,aAAW,CAAC,QAAQ,KAAK,cAAc,QAAQ,GAAG;AAChD,IAAAA,SAAQrB,SAAQ;AAAA,MACd,MAAM;AAAA,MACN;AAAA,IACF,CAAC,EAAEqB,MAAK;AAAA,EACV;AACA,SAAOA;AACT;AAGA,IAAMrB,WAAuB,qBAAK,GAAG,CAAC,MAAM,UAAU;AAAA,EACpD,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AACV,EAAE;AAGF,IAAMqB,SAAqB,qBAAK,GAAG,CAAC,MAAMjB,UAAS,aAAa;AAC9D,MAAI0U,aAAY;AAChB,MAAI,UAAU,GAAG,IAAI;AACrB,SAAO,wBAAwB,OAAO,GAAG;AACvC,UAAMtjB,QAAO,aAAa,OAAO;AACjC,UAAM0D,QAAO,aAAa,OAAO;AACjC,YAAQ1D,MAAK,MAAM;AAAA,MACjB,KAAKojB,WACH;AACE,kBAAU1f;AACV;AAAA,MACF;AAAA,MACF,KAAK,QACH;AACE,QAAA4f,aAAY,UAAUA,YAAW;AAAA,UAC/B,SAAA1U;AAAA,UACA,UAAU5O,MAAK;AAAA,UACf,OAAOA,MAAK;AAAA,QACd,CAAC;AACD,kBAAU0D;AACV;AAAA,MACF;AAAA,MACF,KAAK,WACH;AACE,QAAA4f,aAAY,QAAQA,YAAWtjB,MAAK,QAAQ;AAC5C,kBAAU0D;AACV;AAAA,MACF;AAAA,MACF,KAAK,WACH;AACE,cAAMpF,SAAQ,aAAaglB,YAAWtjB,MAAK,QAAQ;AACnD,QAAAsjB,aAAY,UAAUA,YAAW;AAAA,UAC/B,SAAA1U;AAAA,UACA,UAAU5O,MAAK;AAAA,UACf,OAAOA,MAAK,SAAS,MAAMA,MAAK,KAAK,EAAE1B,MAAK;AAAA,QAC9C,CAAC;AACD,kBAAUoF;AACV;AAAA,MACF;AAAA,MACF,KAAK,aACH;AACE,kBAAU,QAAQ1D,MAAK,KAAK,EAAE,QAAQA,MAAK,MAAM,EAAE0D,KAAI,CAAC;AACxD;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,SAAO4f;AACT,CAAC;;;ACrHD,IAAM,uBAAuB;AAG7B,IAAM,oBAAiC,uBAAO,IAAI,oBAAoB;AAGtE,IAAM,kBAAN,MAAsB;AAAA,EACpB,CAAC,iBAAiB,IAAI;AAAA,EACtB,YAAY,KAAKhlB,QAAO;AACtB,SAAK,MAAM;AACX,SAAK,QAAQA;AAAA,EACf;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,oBAAoB,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,QAAQ,KAAK,KAAK,KAAK,CAAC,CAAC;AAAA,EAC5F;AAAA,EACA,CAAC0H,OAAQ,EAAE,MAAM;AACf,WAAO,cAAc,IAAI,KAAK,KAAK,QAAQ,KAAK,OAAO,KAAK,UAAU,KAAK;AAAA,EAC7E;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAMyD,SAAO,CAAC,KAAKnL,WAAU;AAC3B,SAAO,IAAI,gBAAgB,KAAKA,MAAK;AACvC;AAGA,IAAM,gBAAgB,OAAK,YAAY,GAAG,iBAAiB;;;ACnC3D,IAAMilB,iBAAN,MAAM,eAAc;AAAA,EAClB,SAAS;AAAA,EACT,YAAY,MAAM;AAChB,SAAK,OAAO;AAAA,EACd;AAAA,EACA,KAAK,GAAG;AACN,WAAO,KAAK,SAAS;AAAA,MACnB,OAAO;AAAA,MACP,MAAM;AAAA,IACR,KAAK,KAAK,SAAS,MAAM;AAAA,MACvB,OAAO,KAAK;AAAA,MACZ,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,OAAO,GAAG;AACR,WAAO;AAAA,MACL,OAAO;AAAA,MACP,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,MAAM,GAAG;AACP,UAAM;AAAA,EACR;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,IAAI,eAAc,KAAK,IAAI;AAAA,EACpC;AACF;;;AC4CA,IAAM,MAAM;AAMZ,IAAM,QAAQ;AAMd,IAAMC,SAAQ;AAMd,IAAM,UAAU;AAMhB,IAAM,OAAO;AAMb,IAAM,QAAQ;AAMd,IAAM,QAAQ;AAMd,IAAM/S,QAAO;AAqBb,IAAMgT,SAAqB,qBAAK,OAAsB,gBAAAxX,UAAS,WAAS,MAAM,OAAO,CAAC;AAkBtF,IAAM6U,eAA2B,4BAAc2C,MAAK;AAYpD,IAAM,cAAc,OAAK;AACvB,UAAQ,GAAG;AAAA,IACT,KAAK,OACH;AACE,aAAO;AAAA,IACT;AAAA,IACF,KAAK,SACH;AACE,aAAO;AAAA,IACT;AAAA,IACF,KAAK,SACH;AACE,aAAOD;AAAA,IACT;AAAA,IACF,KAAK,SACH;AACE,aAAO;AAAA,IACT;AAAA,IACF,KAAK,QACH;AACE,aAAO;AAAA,IACT;AAAA,IACF,KAAK,SACH;AACE,aAAO;AAAA,IACT;AAAA,IACF,KAAK,QACH;AACE,aAAO/S;AAAA,IACT;AAAA,IACF,KAAK,WACH;AACE,aAAO;AAAA,IACT;AAAA,EACJ;AACF;;;ACtMA,IAAMhH,SAAO,CAAC,OAAO,eAAe;AAAA,EAClC;AAAA,EACA;AACF;AAGA,IAAM,SAAS,SAAO;AACpB,SAAO,UAAQ;AACb,UAAM,QAAQ,KAAK,MAAM,QAAQ,WAAW,GAAG;AAC/C,WAAO,GAAG,KAAK,IAAI,MAAM,KAAK,SAAS;AAAA,EACzC;AACF;;;ACGA,IAAMA,SAAOA;AAMb,IAAMia,UAAS;;;ACdf,IAAM,YAAyB,uBAAO,IAAI,YAAY;AAGtD,IAAM,cAAc;AAAA,EAClB,IAAI,OAAK;AACX;AACA,IAAM,UAAN,MAAc;AAAA,EACZ,CAAC,SAAS,IAAI;AAAA,EACd,YAAY,KAAK;AACf,SAAK,MAAM;AAAA,EACb;AAAA,EACA,OAAO,GAAG;AACR,WAAO,KAAK,MAAM;AAChB,YAAM3hB,WAAUoH,KAAM,KAAK,GAAG;AAC9B,YAAM,CAAC,GAAG,CAAC,IAAI,EAAEpH,QAAO;AACxB,UAAIA,aAAY,GAAG;AACjB,QAAAmM,KAAM,CAAC,EAAE,KAAK,GAAG;AAAA,MACnB;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAMS,cAAa,CAAArQ,WAAS,IAAI,QAAQmL,MAAOnL,MAAK,CAAC;AAGrD,IAAMmL,SAAO,CAAAnL,WAAS,KAAK,MAAMqQ,YAAWrQ,MAAK,CAAC;AAGlD,IAAM6K,OAAM,UAAQ,KAAK,OAAO,OAAK,CAAC,GAAG,CAAC,CAAC;AAG3C,IAAM+E,OAAmB,qBAAK,GAAG,CAAC,MAAM5P,WAAU,KAAK,OAAO,MAAM,CAAC,QAAQA,MAAK,CAAC,CAAC;AAGpF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAMA,WAAU,KAAK,OAAO,OAAK,CAAC,GAAGA,MAAK,CAAC,CAAC;AAwBpF,IAAMqlB,UAAsB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,OAAO,CAAC,CAAC;AAkB/D,IAAM/T,UAAsB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,OAAO,OAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AA8BjF,IAAMhF,aAAY,UAAQzB,KAAM,KAAK,GAAG;;;ACxFxC,IAAMM,SAAOA;AAMb,IAAMN,QAAMA;AAMZ,IAAMya,aAAY;AAkBlB,IAAMD,UAASA;AAYf,IAAMzV,OAAMA;AAYZ,IAAM0B,UAASA;;;ACZf,IAAMuN,cAAa;;;AC5CnB,IAAM,eAA4B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,WAAY;AAC5E,QAAM,OAAO;AACb,SAAO,oBAAoB,KAAK,CAAC,GAAG,uBAAuB,OAAO,KAAK,CAAC,MAAM,WAAWjP,KAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,iBAAe,OAAO,QAAQ,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK5P,MAAK,MAAM4P,KAAI,KAAK,KAAK5P,MAAK,GAAG,WAAW,CAAC;AAC1N,CAAC;AAGD,IAAM,SAAS,UAAQqL,MAAI,MAAMY,KAAI;AAGrC,IAAM,cAAc,UAAQ,SAAS,MAAMA,KAAI;AAG/C,IAAM,cAAc,CAAC,UAAU,aAAamB,UAAW,YAAY,QAAM;AACvE,QAAM3E,UAAS,SAAS,EAAE;AAC1B,UAAQA,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO+E,MAAKmF,KAAI;AAAA,IAClB;AAAA,IACF,KAAK,QACH;AACE,aAAOlF,OAAMhF,QAAO,KAAK;AAAA,IAC3B;AAAA,EACJ;AACF,GAAG,UAAU;AAGb,IAAMsW,QAAO,SAAO;AAClB,MAAIpQ;AACJ,MAAI,YAAY;AAChB,MAAI,OAAO,QAAQ,YAAY;AAC7B,IAAAA,YAAW;AAAA,EACb,OAAO;AACL,IAAAA,YAAW,IAAI;AACf,gBAAY,IAAI;AAAA,EAClB;AACA,SAAO,KAAK,MAAM;AAChB,QAAI;AACF,aAAOA,UAAS;AAAA,IAClB,SAAS,OAAO;AACd,YAAM,gBAAgB,KAAK,YAAY,UAAU,KAAK,IAAI,KAAK,CAAC;AAAA,IAClE;AAAA,EACF,CAAC;AACH;AAGA,IAAM,SAAsB;AAAA;AAAA,EAE5B;AAAA,EAAG,CAAC,MAAM,KAAK,YAAY,SAAS,MAAM,OAAK;AAC7C,QAAI,YAAY,GAAG,GAAG,KAAK,EAAE,GAAG,MAAM,QAAQ,SAAS;AACrD,aAAO,QAAQ,UAAU,CAAC;AAAA,IAC5B;AACA,WAAOxN,MAAO,CAAC;AAAA,EACjB,CAAC;AAAC;AAGF,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,MAAM,cAAc,MAAM,QAAQ,CAAAQ,WAAS;AAC5F,QAAM8G,UAAS,KAAK9G,QAAO,OAAK,UAAU,CAAC,IAAIsK,MAAK,CAAC,IAAImB,MAAO,CAAC;AACjE,UAAQ3E,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO,UAAU9G,MAAK;AAAA,IACxB;AAAA,IACF,KAAK,QACH;AACE,aAAO,EAAE8G,QAAO,MAAM,MAAM;AAAA,IAC9B;AAAA,EACJ;AACF,CAAC,CAAC,CAAC;AAGH,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,MAAM,iBAAiB,MAAM;AAAA,EAC9E,WAAW,CAAA9G,WAAS;AAClB,UAAM8G,UAAS,EAAE9G,MAAK;AACtB,YAAQ8G,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,eAAO,UAAU9G,MAAK;AAAA,MACxB;AAAA,MACF,KAAK,QACH;AACE,eAAO8G,QAAO;AAAA,MAChB;AAAA,IACJ;AAAA,EACF;AAAA,EACA,WAAW;AACb,CAAC,CAAC;AAGF,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,OAAO,cAAc,MAAM,QAAQ,CAAA9G,WAAS;AAC9F,QAAM8G,UAAS,KAAK9G,QAAO,OAAK,UAAU,CAAC,IAAIsK,MAAK,CAAC,IAAImB,MAAO,CAAC;AACjE,UAAQ3E,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO,UAAU9G,MAAK;AAAA,IACxB;AAAA,IACF,KAAK,QACH;AACE,YAAM,eAAe,GAAG8G,QAAO,MAAM,MAAM;AAC3C,aAAO,aAAa,SAAS,SAAS,aAAa,QAAQ,UAAU9G,MAAK;AAAA,IAC5E;AAAA,EACJ;AACF,CAAC,CAAC,CAAC;AAGH,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,QAAQ,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC;AAGnF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,UAAU;AACtD,MAAI1B;AACJ,SAAO,QAAQ,MAAM,OAAK;AACxB,IAAAA,UAAS,OAAO,KAAK,KAAK;AAC1B,WAAO,YAAY,GAAG,MAAM,KAAK,SAAS,EAAE,MAAM,CAAC,KAAKA,MAAK,SAAS,EAAE,MAAM,CAAC;AAAA,EACjF,GAAG,OAAK,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;AAC7B,CAAC;AAGD,IAAM,QAAQ,UAAQ,WAAW,MAAM;AAAA,EACrC,WAAW;AAAA,EACX,WAAW,MAAMmD;AACnB,CAAC;AAGD,IAAM+S,aAAYA;AAGlB,IAAM,QAAqB,gBAAAA,WAAU,OAAO;AAG5C,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAM2L,cAAa5O,UAASoK,OAAQwE,SAAQ,GAAG,IAAI,CAAC;AAGxF,IAAM,iBAAiB,OAAK,iBAAiB,CAAC,OAAO1gB,YAAW,EAAE;AAAA,EAChE,IAAI,MAAM,GAAG;AAAA,EACb,QAAAA;AAAA,EACA,cAAc,aAAa,MAAM,YAAY,uBAAuB,CAAC;AACvE,CAAC,CAAC;AAGF,IAAM,iBAA8B,+BAAe,CAAAmI,gBAAchE,MAAKgE,YAAW,YAAY,IAAI,IAAIuJ,aAAYH,KAAI;AAGrH,IAAM,aAA0B,+BAAe,OAAO;AAGtD,IAAM,gBAAgB,UAAQ,WAAW,MAAMqS,YAAWhW,KAAI;AAG9D,IAAM,+BAA+B,UAAQ,WAAW,MAAMxC,KAAIwY,YAAW,YAAY,GAAG,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,SAAS,QAAQ,MAAM,CAAChW,MAAK,MAAM,OAAO,GAAGA,MAAO,OAAO,QAAQ,CAAC,CAAC;AAGlL,IAAMkF,MAAkB,wBAAQ,CAAC,CAAC;AAGlC,IAAM/L,QAAoB,qBAAK,GAAG,CAAC,MAAM,KAAK,MAAMuC,SAAQ,MAAM,OAAKW,MAAI,EAAE,CAAC,GAAG,QAAM;AAAA,EACrF,GAAG;AAAA,EACH,CAAC,GAAG,GAAG;AACT,EAAE,CAAC,CAAC;AAGJ,IAAM+J,UAAsB,qBAAK,GAAG,CAAC,MAAM,QAAQ/J,MAAI,MAAM,QAAM;AAAA,EACjE,CAAC,GAAG,GAAG;AACT,EAAE,CAAC;AAGH,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,KAAK,MAAMA,MAAI,MAAM,QAAM;AAAA,EACvE,GAAG;AAAA,EACH,CAAC,GAAG,GAAG,EAAE,CAAC;AACZ,EAAE,CAAC;AAGH,IAAM,YAAyB,qBAAK,GAAG,CAAC,UAAU,cAAc,QAAQ,MAAM;AAC5E,QAAM7I,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAM,UAAU,CAAC;AACjB,MAAI6C;AACJ,MAAIkgB,YAAW,QAAQ,KAAK;AAC5B,MAAI,IAAI;AACR,UAAQlgB,QAAO7C,UAAS,KAAK,MAAM,CAAC6C,MAAK,MAAM;AAC7C,UAAM,IAAIA,MAAK;AACf,UAAM,QAAQ;AACd,IAAAkgB,YAAW7a,SAAQ6a,WAAU,UAAQ;AACnC,UAAI,MAAM;AACR,gBAAQ,KAAK,CAAC;AACd,eAAO,QAAQ,IAAI;AAAA,MACrB;AACA,aAAO,UAAU,GAAG,KAAK;AAAA,IAC3B,CAAC;AAAA,EACH;AACA,SAAOla,MAAIka,WAAU,MAAM,OAAO;AACpC,CAAC,CAAC;AAGF,IAAMvO,aAAyB,qBAAK,GAAG,CAAC,UAAU,MAAM,QAAQ,MAAM;AACpE,QAAMxU,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAM,UAAU,CAAC;AACjB,MAAI6C;AACJ,MAAIkgB,YAAW,QAAQ,IAAI;AAC3B,MAAI,IAAI;AACR,UAAQlgB,QAAO7C,UAAS,KAAK,MAAM,CAAC6C,MAAK,MAAM;AAC7C,UAAM,IAAIA,MAAK;AACf,UAAM,QAAQ;AACd,IAAAkgB,YAAW7a,SAAQ6a,WAAU,OAAKla,MAAI,IAAI,EAAE,GAAG,KAAK,IAAI,QAAQ,KAAK,GAAG,OAAK;AAC3E,UAAI,CAAC,GAAG;AACN,gBAAQ,KAAK,CAAC;AAAA,MAChB;AACA,aAAO;AAAA,IACT,CAAC,CAAC;AAAA,EACJ;AACA,SAAOA,MAAIka,WAAU,MAAM,OAAO;AACpC,CAAC,CAAC;AAGF,IAAM,cAAc,OAAKla,MAAI,QAAQ,GAAG,CAAC;AAGzC,IAAM,aAAa,UAAQqD,QAAO,MAAM,MAAMhE,SAAQ,SAAS,GAAG,MAAM,WAAW,IAAI,CAAC,CAAC;AAGzF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAMP,UAAQ+Q,eAAc,aAAa,MAAM/Q,UAAQ,OAAK,QAAQ,MAAM+Q,WAAU,CAAC,CAAC,CAAC,CAAC;AAGlI,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM/Q,UAAQ,YAAY,aAAa,MAAMA,UAAQ,MAAM,WAAW,OAAO,CAAC,CAAC;AAGhI,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAMA,UAAQuE,aAAWhE,SAAQ,MAAM,OAAKP,SAAO,CAAC,IAAI,QAAQ,CAAC,IAAIuE,SAAO,CAAC,CAAC,CAAC;AAG1H,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAMvE,UAAQ,eAAe,aAAa,MAAMA,UAAQ,OAAK,SAAS,MAAM,WAAW,CAAC,CAAC,CAAC,CAAC;AAGtI,IAAMG,aAAyB,qBAAK,GAAG,CAAC,UAAU,MAAM,QAAQ,MAAM;AACpE,QAAM9H,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAM6C,QAAO7C,UAAS,KAAK;AAC3B,MAAI,CAAC6C,MAAK,MAAM;AACd,WAAO,SAAS7C,WAAU,GAAG,GAAG6C,MAAK,KAAK;AAAA,EAC5C;AACA,SAAO,QAAQ+H,MAAO,CAAC;AACzB,CAAC,CAAC;AACF,IAAM,WAAW,CAAC5K,WAAU,OAAO,GAAGxC,WAAU0K,SAAQ,EAAE1K,QAAO,KAAK,GAAG,YAAU;AACjF,MAAI,QAAQ;AACV,WAAO,QAAQiM,MAAKjM,MAAK,CAAC;AAAA,EAC5B;AACA,QAAMqF,QAAO7C,UAAS,KAAK;AAC3B,MAAI,CAAC6C,MAAK,MAAM;AACd,WAAO,SAAS7C,WAAU,QAAQ,GAAG,GAAG6C,MAAK,KAAK;AAAA,EACpD;AACA,SAAO,QAAQ+H,MAAO,CAAC;AACzB,CAAC;AAGD,IAAM,iBAAiB,aAAW,QAAQ,MAAM;AAC9C,QAAM,OAAOxC,cAAe,OAAO;AACnC,MAAI,CAAC,WAAW,IAAI,GAAG;AACrB,WAAO,QAAQ,MAAM,yBAAyB,yCAAyC,CAAC;AAAA,EAC1F;AACA,SAAO,KAAKwB,cAAa,IAAI,GAAG,OAASrB,cAAa,IAAI,GAAG,CAACyC,OAAMC,WAAUiB,QAAOlB,OAAM,MAAMC,MAAK,CAAC,CAAC;AAC1G,CAAC;AAGD,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;AAGtE,IAAM1N,SAAqB,qBAAK,GAAG,CAAC,MAAM;AAAA,EACxC;AAAA,EACA;AACF,MAAM,YAAY,MAAM;AAAA,EACtB,WAAW,OAAK,QAAQ,UAAU,CAAC,CAAC;AAAA,EACpC,WAAW,OAAK,QAAQ,UAAU,CAAC,CAAC;AACtC,CAAC,CAAC;AAGF,IAAMsX,SAAqB,qBAAK,GAAG,CAAC,UAAU,MAAM,QAAQ,MAAM,WAAW,SAAS,OAAO,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AAChH,IAAM,aAAa,CAAC7U,WAAU,OAAO,MAAM;AACzC,QAAM6C,QAAO7C,UAAS,KAAK;AAC3B,SAAO6C,MAAK,OAAO,QAAQ,IAAI,IAAIqF,SAAQ,EAAErF,MAAK,OAAO,KAAK,GAAG,OAAK,IAAI,WAAW7C,WAAU,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC;AAC3H;AAGA,IAAM,UAAU,UAAQ;AACtB,QAAM0X,QAAOxP,SAAQA,SAAQ,MAAM,MAAM,SAAS,CAAC,GAAG,MAAMwP,KAAI;AAChE,SAAOA;AACT;AAGA,IAAM,YAAN,MAAgB;AAAA,EACd,YAAYla,QAAO;AACjB,SAAK,QAAQA;AAAA,EACf;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,IAAIilB,eAAc,IAAI;AAAA,EAC/B;AACF;AACA,IAAMpX,WAAU,WAAY;AAC1B,MAAI,IAAI,UAAU,CAAC;AACnB,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,QAAI,UAAU,CAAC,EAAE,CAAC;AAAA,EACpB;AACA,SAAO,IAAI,UAAU,CAAC;AACxB;AAKA,IAAMI,OAAM,WAAY;AACtB,MAAI;AACJ,MAAI,UAAU,WAAW,GAAG;AAC1B,QAAI,UAAU,CAAC;AAAA,EACjB,OAAO;AACL,QAAI,UAAU,CAAC,EAAE,KAAK,UAAU,CAAC,CAAC;AAAA,EACpC;AACA,SAAO,QAAQ,MAAM;AACnB,UAAMzL,YAAW,EAAEqL,QAAO;AAC1B,UAAM,QAAQrL,UAAS,KAAK;AAC5B,UAAMgjB,OAAM,CAAAC,WAASA,OAAM,OAAO,QAAQA,OAAM,KAAK,IAAI,KAAKA,OAAM,MAAM,OAAO/a,SAAQ,SAAO8a,KAAIhjB,UAAS,KAAK,GAAG,CAAC,CAAC,CAAC;AACxH,WAAOgjB,KAAI,KAAK;AAAA,EAClB,CAAC;AACH;AAGA,IAAMR,aAAyB,iCAAiB,WAAS,QAAQ,MAAM,aAAa,CAAC,CAAC;AAGtF,IAAMtjB,QAAO,UAAQ,YAAY,MAAM;AAAA,EACrC,WAAW,OAAKP,MAAO8K,MAAK,CAAC,CAAC;AAAA,EAC9B,WAAW,CAAAqB,QAAM;AACf,UAAM9K,YAAW8K,IAAG,OAAO,QAAQ,EAAE;AACrC,UAAMjI,QAAO7C,UAAS,KAAK;AAC3B,QAAI6C,MAAK,MAAM;AACb,aAAOlE,MAAOiM,MAAO,CAAC;AAAA,IACxB;AACA,WAAO,QAAQ/H,MAAK,KAAK;AAAA,EAC3B;AACF,CAAC;AAGD,IAAM,SAAS,UAAQtF,OAAM,MAAM;AAAA,EACjC,WAAW;AAAA,EACX,WAAW;AACb,CAAC;AAGD,IAAM,eAAe,UAAQ,iBAAiB,MAAM;AAAA,EAClD,WAAW,CAAA4B,WAAS,SAASA,QAAO,0EAA0E;AAAA,EAC9G,WAAW,MAAMgR;AACnB,CAAC;AAGD,IAAM,mBAAmB,oBAAkB,gBAAgB,CAAC,eAAe,oBAAoBgS,QAAO,iBAAiB,eAAe,cAAc,CAAC;AAGrJ,IAAMxd,aAAY,UAAQpH,OAAM,MAAM;AAAA,EACpC,WAAW;AAAA,EACX,WAAW;AACb,CAAC;AAGD,IAAMoZ,aAAY,UAAQpZ,OAAM,MAAM;AAAA,EACpC,WAAW;AAAA,EACX,WAAW;AACb,CAAC;AAGD,IAAM,UAAU,CAAC,SAAS,YAAY,QAAQ,MAAM;AAClD,MAAI,QAAQ,MAAM,OAAO,GAAG;AAC1B,WAAO2K,SAAQ,QAAQ,KAAK,OAAO,GAAG,QAAM,QAAQ,IAAI,OAAO,CAAC;AAAA,EAClE;AACA,SAAO,QAAQ,OAAO;AACxB,CAAC;AACD,IAAM,eAAe,WAAS,CAAC,gBAAgB,kBAAkB;AAC/D,QAAM,cAAc,aAAe,KAAK;AACxC,MAAI;AACJ,MAAI/I;AACJ,MAAI,QAAQ,cAAc,GAAG;AAC3B,IAAAA,SAAQ;AACR,cAAU,iBAAiB;AAAA,EAC7B,OAAO;AACL,cAAU;AACV,IAAAA,SAAQ,iBAAiByB;AAAA,EAC3B;AACA,SAAO,iBAAiB,gBAAc;AACpC,eAAW,IAAI,SAASzB,QAAO,WAAW;AAC1C,WAAOgR;AAAA,EACT,CAAC;AACH;AAGA,IAAM,MAAmB,6BAAa;AAGtC,IAAM,WAAwB,6BAAa,KAAK;AAGhD,IAAM,WAAwB,6BAAa,KAAK;AAGhD,IAAM,UAAuB,6BAAa,IAAI;AAG9C,IAAM,aAA0B,6BAAa,OAAO;AAGpD,IAAM,WAAwB,6BAAauS,MAAK;AAGhD,IAAM,WAAwB,6BAAa,KAAK;AAGhD,IAAM,cAA2B,qBAAK,GAAG,CAACjT,SAAQ,UAAUvH,SAAQ6Z,oBAAmB,SAAO,oBAAoBtS,SAAQ,gBAAgBtG,SAAQR,OAAK,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AAGrK,IAAM,iBAA8B,4BAAY,qBAAqB;AAIrE,IAAM,OAAO,CAAC,SAAS,YAAY,QAAQ,UAAU,YAAY,SAAS,QAAQ,OAAO,QAAQ,MAAM,QAAQ,IAAI,IAAIE,MAAI,aAAa,SAAS,QAAQ,OAAO,QAAQ,MAAM,QAAQ,IAAI,GAAG,OAAK,MAAM,KAAK,CAAC,CAAC;AAC/M,IAAM,eAAe,CAAC,SAAS,MAAM,KAAK,SAAS,QAAQ,MAAM,KAAK,OAAO,IAAIX,SAAQ,KAAK,OAAO,GAAG,OAAKW,MAAI,aAAa,IAAI,OAAO,GAAG,MAAM,KAAK,IAAI,GAAGM,SAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,MAAMvI,QAAQ,CAAC,CAAC;AAClM,IAAM,cAAc,CAAC,SAAS,MAAM,KAAK,SAAS,QAAQ,MAAM,KAAK,OAAO,IAAIsH,SAAQ,KAAK,OAAO,GAAG,MAAM,YAAY,IAAI,OAAO,GAAG,MAAM,KAAK,IAAI,CAAC,IAAIiI,KAAI;AAG/J,IAAMrH,YAAwB,qBAAK,GAAG,CAAC,UAAUoE,OAAM,MAAM,QAAQ,MAAM;AACzE,QAAMlN,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAM,UAAU,CAAC;AACjB,MAAI,SAAS,QAAQkN,KAAI;AACzB,MAAIrK;AACJ,MAAI,IAAI;AACR,SAAO,EAAEA,QAAO7C,UAAS,KAAK,GAAG,MAAM;AACrC,UAAM,QAAQ;AACd,aAASkI,SAAQ,QAAQ,WAASW,MAAI,EAAE,OAAOhG,MAAK,OAAO,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM;AAC7E,cAAQ,KAAK,CAAC;AACd,aAAO;AAAA,IACT,CAAC,CAAC;AAAA,EACJ;AACA,SAAOgG,MAAI,QAAQ,OAAK,CAAC,GAAG,OAAO,CAAC;AACtC,CAAC,CAAC;AAGF,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,iBAAiB,MAAM;AAAA,EAC7E,WAAW,OAAK,cAAc,MAAM,EAAE,CAAC,CAAC;AAAA,EACxC,WAAW;AACb,CAAC,CAAC;AAGF,IAAM,UAAU,UAAQ,KAAK,aAAa,GAAGX,SAAQ,CAAAzJ,cAAY,KAAK,6BAA6B,IAAI,GAAG,aAAaA,SAAQ,GAAG,MAAMoK,MAAI,CAAAqa,cAAYxS,UAASwS,WAAU,KAAK,cAAczkB,SAAQ,GAAGyJ,SAAQ,CAAC,CAAC6G,QAAO,CAAC,MAAMjE,IAAGd,KAAI,eAAe+E,OAAM,CAAC,CAAC,GAAG,mBAAmBA,OAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGzS,IAAMjJ,SAAQ,UAAQ,YAAY,MAAM;AAAA,EACtC,WAAW,OAAK,QAAQ,CAAC;AAAA,EACzB,WAAW;AACb,CAAC;AAGD,IAAM,SAAS,UAAQ+C,MAAI,MAAM,OAAK,CAAC,CAAC;AAGxC,IAAM+B,QAAO,UAAQ,YAAY,MAAM;AAAA,EACrC,WAAW,OAAKjM,MAAO8K,MAAK,CAAC,CAAC;AAAA,EAC9B,WAAW,CAAAxD,YAAU;AACnB,YAAQA,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,eAAOkK;AAAA,MACT;AAAA,MACF,KAAK,QACH;AACE,eAAOxR,MAAOiM,MAAO,CAAC;AAAA,MACxB;AAAA,IACJ;AAAA,EACF;AACF,CAAC;AAGD,IAAM,OAAO,UAAQ/B,MAAIF,OAAO,IAAI,GAAG,SAAOuH,QAAO,WAAW,MAAM4S,WAAU,KAAK,KAAK,CAAC,CAAC,CAAC;AAG7F,IAAM7c,UAAS,UAAQ,YAAY,MAAM;AAAA,EACvC,WAAW,MAAM,QAAQ2E,MAAO,CAAC;AAAA,EACjC,WAAW,OAAK,QAAQnB,MAAK,CAAC,CAAC;AACjC,CAAC;AAGD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM0C,cAAaD,QAAO,MAAM,MAAM,SAASC,SAAQ,CAAC,CAAC;AAGlG,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAMA,cAAaD,QAAO,MAAM,MAAM,KAAKC,SAAQ,CAAC,CAAC;AAGjG,IAAM,iBAAiB,UAAQ,iBAAiB,MAAM;AAAA,EACpD,WAAW,CAAAhN,WAAS;AAClB,UAAM,SAAS,MAAM,KAAK,SAASA,MAAK,CAAC;AACzC,WAAO,OAAO,WAAW,IAAI,UAAUA,MAAK,IAAIR,MAAO,MAAM;AAAA,EAC/D;AAAA,EACA,WAAW;AACb,CAAC;AAGD,IAAM,iBAAiB,aAAW,gBAAgB,CAACmP,UAAS0U,eAAc,KAAK,SAASzT,OAAMjB,UAAS0U,UAAS,CAAC,CAAC;AAGlH,IAAM,UAAU,CAAArW,cAAYA,UAAS,UAAU,IAAI,MAAM,CAAC,SAAS,WAAW;AAC5E,EAAAA,UAAS,MAAM,EAAE,KAAK,OAAK,QAAQ,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,OAAK,QAAQ,QAAQ,CAAC,CAAC,CAAC;AACpF,KAAK,MAAM,aAAW;AACpB,EAAAA,UAAS,EAAE,KAAK,OAAK,QAAQ,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,OAAK,QAAQ,QAAQ,CAAC,CAAC,CAAC;AAC9E;AAGA,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,KAAKwC,aAAY,kBAAkB,SAAO,eAAe,MAAMnB,KAAI,KAAK,KAAKmB,QAAO,CAAC,CAAC,CAAC;AAG1I,IAAM,uBAAoC,qBAAK,GAAG,CAAC,MAAM,KAAKc,YAAW,kBAAkB,SAAOvH,SAAQuH,SAAQ,CAAAd,aAAW,eAAe,MAAM,KAAK,KAAKnB,KAAI,KAAKmB,QAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAGjL,IAAM4K,UAAsB,2BAAW,OAAO;AAG9C,IAAMnQ,UAAsB,qBAAK,GAAG,CAAC,UAAU8D,OAAM,MAAM9E,cAAa,QAAQ,EAAE,OAAO,CAAC,KAAK,IAAI,MAAMF,SAAQ,KAAK,OAAK,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQgF,KAAI,CAAC,CAAC;AAGvJ,IAAM7D,eAA2B,qBAAK,GAAG,CAAC,UAAU6D,OAAM,MAAM9E,cAAa,QAAQ,EAAE,YAAY,CAAC,KAAK,IAAI,MAAMF,SAAQ,KAAK,OAAK,EAAE,IAAI,GAAG,CAAC,CAAC,GAAG,QAAQgF,KAAI,CAAC,CAAC;AAGjK,IAAM,cAA2B,qBAAK,GAAG,CAAC,UAAUA,OAAM,YAAYhF,SAAQ,KAAK,MAAM,SAAS,OAAO,QAAQ,EAAE,CAAC,GAAG,CAAAlI,cAAY,gBAAgBA,WAAU,GAAGkN,OAAM,QAAQ,OAAO,QAAQ,IAAI,CAAC,CAAC;AACnM,IAAM,kBAAkB,CAAClN,WAAU,OAAO,OAAO,WAAW,MAAM;AAChE,QAAM6C,QAAO7C,UAAS,KAAK;AAC3B,MAAI,CAAC6C,MAAK,QAAQ,UAAU,KAAK,GAAG;AAClC,WAAOqF,SAAQ,EAAE,OAAOrF,MAAK,OAAO,KAAK,GAAG,eAAa,gBAAgB7C,WAAU,QAAQ,GAAG,WAAW,WAAW,CAAC,CAAC;AAAA,EACxH;AACA,SAAO,QAAQ,KAAK;AACtB;AAGA,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,QAAQ,MAAM,YAAY,MAAM,CAAC,CAAC,CAAC;AAGrF,IAAM,cAAc,CAAC,MAAM,MAAMkI,SAAQ,MAAM,OAAK,KAAK,IAAI,QAAQ,CAAC,IAAIwI,UAAS,SAAS,GAAG,YAAY,MAAM,IAAI,CAAC,CAAC,CAAC;AAGxH,IAAM,UAAU,UAAQ,iBAAiB,MAAM;AAAA,EAC7C,WAAW/R;AAAA,EACX,WAAW;AACb,CAAC;AAGD,IAAM,eAAe,CAAA6jB,eAAa,QAAQ,MAAMJ,QAAOI,UAAS,CAAC;AAGjE,IAAM1H,SAAQA;AAGd,IAAM,cAA2B,wBAAsB,gBAAAlQ,MAAO,CAAC;AAG/D,IAAM,cAAc,CAAApN,WAAS,QAAQiM,MAAKjM,MAAK,CAAC;AAGhD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM2lB,UAAS,MAAMjb,SAAQib,UAAS,CAAAhjB,WAAS+H,SAAQ,MAAM,CAAA1K,WAASqL,MAAIsa,UAAS,CAAA/iB,SAAO,CAAC,EAAED,QAAOC,IAAG,GAAG5C,MAAK,CAAC,CAAC,CAAC,CAAC;AAG5J,IAAM,aAA0B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,WAAY;AAC1E,SAAO,aAAa,UAAU,CAAC,GAAG,OAAO,UAAU,CAAC,MAAM,WAAW,CAACmL,OAAO,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,OAAO,QAAQ,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAMA,OAAO,GAAG,CAAC,CAAC,CAAC;AACxK,CAAC;AAGD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,WAAW,gBAAgB,MAAMP,cAAe,MAAM,CAAC,CAAC;AAGzG,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,WAAW,oBAAoB,qBAAqB,CAAAgF,SAAO,KAAKA,MAAKvD,OAAM,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;AAG9I,IAAM,YAAyB,qBAAK,GAAG,CAAC,UAAU,cAAc,QAAQ,MAAM;AAC5E,QAAM7J,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAM,UAAU,CAAC;AACjB,MAAI6C;AACJ,MAAI4M,UAAS,QAAQ,KAAK;AAC1B,MAAI,IAAI;AACR,UAAQ5M,QAAO7C,UAAS,KAAK,MAAM,CAAC6C,MAAK,MAAM;AAC7C,UAAM,IAAIA,MAAK;AACf,UAAM,QAAQ;AACd,IAAA4M,UAASvH,SAAQuH,SAAQ,UAAQ;AAC/B,UAAI,MAAM;AACR,eAAO,QAAQ,IAAI;AAAA,MACrB;AACA,cAAQ,KAAK,CAAC;AACd,aAAO,UAAU,GAAG,KAAK;AAAA,IAC3B,CAAC;AAAA,EACH;AACA,SAAO5G,MAAI4G,SAAQ,MAAM,OAAO;AAClC,CAAC,CAAC;AAGF,IAAMgM,aAAyB,qBAAK,GAAG,CAAC,UAAU,cAAc,QAAQ,MAAM;AAC5E,QAAMzb,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAM,UAAU,CAAC;AACjB,MAAI6C;AACJ,MAAI,SAAS,QAAQ,IAAI;AACzB,MAAI,IAAI;AACR,UAAQA,QAAO7C,UAAS,KAAK,MAAM,CAAC6C,MAAK,MAAM;AAC7C,UAAM,IAAIA,MAAK;AACf,UAAM,QAAQ;AACd,aAASqF,SAAQ,QAAQ,CAAAkb,YAAU,KAAKA,UAAS,UAAU,GAAG,KAAK,IAAI,QAAQ,KAAK,GAAGva,MAAI,UAAQ;AACjG,UAAI,MAAM;AACR,gBAAQ,KAAK,CAAC;AAAA,MAChB;AACA,aAAO;AAAA,IACT,CAAC,CAAC,CAAC;AAAA,EACL;AACA,SAAOA,MAAI,QAAQ,MAAM,OAAO;AAClC,CAAC,CAAC;AAGF,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC1C;AAAA,EACA;AACF,MAAM,iBAAiB,MAAM;AAAA,EAC3B,WAAW,CAAA1J,WAAS;AAClB,UAAMiP,UAAS,eAAejP,MAAK;AACnC,YAAQiP,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,eAAOsC,UAAS,UAAUtC,QAAO,IAAI,GAAG,UAAUjP,MAAK,CAAC;AAAA,MAC1D;AAAA,MACF,KAAK,SACH;AACE,eAAO,UAAUA,MAAK;AAAA,MACxB;AAAA,IACJ;AAAA,EACF;AAAA,EACA,WAAW,OAAK2L,IAAG,UAAU,CAAC,GAAG,CAAC;AACpC,CAAC,CAAC;AAGF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,cAAc,MAAM,CAAA3L,WAAS,MAAQ,YAAYA,MAAK,GAAG;AAAA,EAC3G,QAAQ,MAAM,UAAUA,MAAK;AAAA,EAC7B,QAAQ,OAAKuR,UAAS,EAAE,CAAC,GAAG,UAAUvR,MAAK,CAAC;AAC9C,CAAC,CAAC,CAAC;AAGH,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,iBAAiB,MAAM;AAAA,EACxE,WAAW,CAAAA,WAAS;AAClB,UAAMiP,UAAS,eAAejP,MAAK;AACnC,YAAQiP,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,eAAOsC,UAAS,EAAEtC,QAAO,IAAI,GAAG,UAAUjP,MAAK,CAAC;AAAA,MAClD;AAAA,MACF,KAAK,SACH;AACE,eAAO,UAAUA,MAAK;AAAA,MACxB;AAAA,IACJ;AAAA,EACF;AAAA,EACA,WAAW;AACb,CAAC,CAAC;AAGF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,SAAS,MAAM,OAAK;AAC3E,MAAI,SAAS,GAAG,CAAC,GAAG;AAClB,WAAO,EAAE,CAAC;AAAA,EACZ;AACA,SAAOgR;AACT,CAAC,CAAC;AAGF,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,iBAAiB,MAAM;AAAA,EAC7E,WAAW,CAAAhR,WAASuR,UAAS,EAAEvR,MAAK,GAAG,UAAUA,MAAK,CAAC;AAAA,EACvD,WAAW;AACb,CAAC,CAAC;AAGF,IAAM,QAAQ,UAAQ,UAAU,MAAM6iB,iBAAgB;AAGtD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,YAAY,WAAW,MAAM,SAAS,CAAC7hB,QAAOC,SAAQ,MAAMA,OAAMD,MAAK,CAAC,CAAC;AAGvH,IAAMkc,cAAaA;AAGnB,IAAM,SAAsB,gBAAAA,YAAW,OAAO;AAG9C,IAAM,aAAa,SAAO;AACxB,MAAIlQ;AACJ,MAAI,UAAU;AACd,MAAI,OAAO,QAAQ,YAAY;AAC7B,IAAAA,YAAW;AAAA,EACb,OAAO;AACL,IAAAA,YAAW,IAAI;AACf,cAAU,IAAI;AAAA,EAChB;AACA,MAAIA,UAAS,UAAU,GAAG;AACxB,WAAO,QAAQ,MAAM;AACnB,YAAM,aAAa,IAAI,gBAAgB;AACvC,aAAOjE,SAAQqU,MAAK,MAAMpQ,UAAS,WAAW,MAAM,CAAC,GAAG,CAAAtN,aAAW,MAAM,aAAW;AAClF,QAAAA,SAAQ,KAAK,OAAK,QAAQ,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,OAAK,QAAQF,MAAO,UAAU,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/F,eAAO,KAAK,MAAM,WAAW,MAAM,CAAC;AAAA,MACtC,EAAE;AAAA,IACJ,CAAC;AAAA,EACH;AACA,SAAOuJ,SAAQqU,MAAK,GAAG,GAAG,CAAA1d,aAAW,MAAM,aAAW;AACpD,IAAAA,SAAQ,KAAK,OAAK,QAAQ,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,OAAK,QAAQF,MAAO,UAAU,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA,EACjG,EAAE;AACJ;AAGA,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,YAAYuJ,SAAQ,MAAM,OAAKqU,MAAK;AAAA,EAC7E,KAAK,MAAM,QAAQ,IAAI,CAAC;AAAA,EACxB,OAAO,QAAQ;AACjB,CAAC,CAAC,CAAC;AAGH,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,YAAYrU,SAAQ,MAAM,OAAK,WAAW;AAAA,EAC1F,KAAK,QAAQ,IAAI,UAAU,IAAI,YAAU,QAAQ,IAAI,GAAG,MAAM,IAAI,MAAM,QAAQ,IAAI,CAAC;AAAA,EACrF,OAAO,QAAQ;AACjB,CAAC,CAAC,CAAC;AAGH,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,cAAc,QAAQ,MAAM,UAAU,IAAI,cAAc,OAAO,IAAI,CAAC,CAAC;AAGhH,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,cAAcA,SAAQ,WAAW,OAAK,IAAI,cAAc,OAAO,IAAI,CAAC,CAAC;AAGtH,IAAM,YAAY,UAAQ,cAAc,MAAMC,QAAO;AAGrD,IAAM,kBAAkB,OAAK,iBAAiB,WAAS;AACrD,QAAM,aAAa,EAAE,MAAM,GAAG,GAAG,MAAM,aAAa,CAAC,CAAC;AACtD,SAAOgI;AACT,CAAC;AAGD,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,KAAK,MAAM,gBAAgB,MAAM,CAAAhP,aAAWqM,KAAIrM,UAAS,KAAK,EAAE2I,WAAU3I,UAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AAG5I,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,cAAc,QAAQ,MAAM,UAAU,IAAI0H,MAAI,MAAMY,KAAI,IAAI,QAAQmB,MAAO,CAAC,CAAC,CAAC;AAGvH,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,UAAU,cAAc1C,SAAQ,YAAY,QAAQ,GAAG,OAAK,UAAU,CAAC,IAAIW,MAAI,MAAM,OAAK,CAAC,GAAGY,MAAK,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,GAAGmB,MAAO,CAAC,CAAC,CAAC,CAAC;AAGlL,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,KAAK,cAAc1C,SAAQG,MAAI,GAAG,GAAG,OAAK,UAAU,CAAC,IAAIQ,MAAI,MAAM,OAAK,CAAC,GAAGY,MAAK,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,GAAGmB,MAAO,CAAC,CAAC,CAAC,CAAC;AAG3J,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,WAAW,OAAO,IAAI,CAAC;AAGtE,IAAM,wBAAwB,CAAC+D,UAAS,MAAM,IAAI,SAASzG,SAAQyG,UAAS,OAAK,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;AAG9F,IAAM,kBAAkB,CAACA,UAAS,MAAM,IAAI,SAAS9F,MAAI8F,UAAS,OAAK,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;AAGpF,IAAM,mBAAmB,SAAO,IAAI,MAAM,CAAC,GAAG;AAAA,EAC5C,IAAI,SAAS,MAAM,WAAW;AAC5B,WAAO,IAAI,SAASzG,SAAQ,KAAK,OAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAAA,EACxD;AACF,CAAC;AAGD,IAAM,mBAAmB,SAAO,IAAI,MAAM,CAAC,GAAG;AAAA,EAC5C,IAAI,SAAS,MAAM,WAAW;AAC5B,WAAOA,SAAQ,KAAK,OAAK,EAAE,IAAI,CAAC;AAAA,EAClC;AACF,CAAC;AAGD,IAAM,iBAAiB,UAAQ;AAAA,EAC7B,WAAW,iBAAiB,GAAG;AAAA,EAC/B,WAAW,iBAAiB,GAAG;AACjC;AAGA,IAAM,gBAAgB,SAAOW,MAAI,QAAQ,GAAG0F,WAAU,GAAG,CAAC;AAO1D,IAAM,sBAAsB,WAAY;AACtC,QAAM,OAAO;AACb,SAAOrG,SAAQ,aAAa,CAAAoG,UAAQA,MAAK,SAAS,SAAS,KAAK,MAAM;AACpE,QAAI,OAAO,KAAK,CAAC,MAAM,UAAU;AAC/B,MAAAA,MAAK,MAAM,UAAU,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,IACvC,OAAO;AACL,iBAAW,OAAO,KAAK,CAAC,GAAG;AACzB,QAAAA,MAAK,MAAM,UAAU,KAAK,KAAK,CAAC,EAAE,GAAG,CAAC;AAAA,MACxC;AAAA,IACF;AAAA,EACF,CAAC,IAAI6B,KAAI;AACX;AAGA,IAAM,gBAA6B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,WAAY;AAC7E,QAAM,OAAO;AACb,SAAO,oBAAoB,KAAK,CAAC,GAAG,8BAA8B,OAAO,KAAK,CAAC,MAAM,WAAW/C,KAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,iBAAe,OAAO,QAAQ,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK5P,MAAK,MAAM4P,KAAI,KAAK,KAAK5P,MAAK,GAAG,WAAW,CAAC;AACjO,CAAC;AAGD,IAAM,oBAAiC,8BAAc,OAAO;AAG5D,IAAM,cAA2B,gBAAAqL,MAAkB,wBAAQ,GAAG,CAAA1H,aAAW;AACvE,QAAMmN,QAAOnN,SAAQ,UAAU,IAAI,OAAO;AAC1C,SAAOmN,UAAS,UAAaA,MAAK,SAAS,SAAS7E,MAAK6E,KAAI,IAAI1D,MAAO;AAC1E,CAAC;AACD,IAAM,UAAuB,uBAAO,CAAC;AAErC,IAAM,0BAAuC,gCAAgB,4BAA4B,CAAA5M,aAAWA,WAAUgkB,oBAAmB,QAAQ,OAAO,CAAC;AAGjJ,IAAM,YAAyB,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM1T,OAAM,eAAe,oBAAoB,MAAM,wBAAwBnH,QAAO;AAAA,EAClJ,MAAM;AAAA,EACN,MAAAmH;AAAA,EACA,YAAY,cAAc,CAAC;AAC7B,CAAC,CAAC,CAAC;AAGH,IAAM,WAAW,CAAC,MAAM,YAAY+N,YAAW,CAAAD,YAAUlU,SAAQ,SAAS,SAAS,YAAY,QAAQ,MAAM,IAAI,SAAS,OAAO,cAAc,mBAAmB,YAAUA,SAAQ,YAAY,4BAA4B,GAAG,iBAAeA,SAAQ,YAAY,sBAAsB,GAAG,WAASA,SAAQ,yBAAyB,eAAa,KAAK,MAAM;AAC3V,QAAM,aAAa,SAAS,QAAQ,CAAC,GAAG,gBAAgB,KAAK,GAAG,GAAG,QAAQ,KAAK,IAAI,gBAAgB,KAAK;AACzG,QAAMoG,QAAO8N,QAAO,KAAK,MAAM,QAAQ,SAAS,WAAWxb,OAAQ,GAAG,YAAY,SAAS;AAC3F,EAAAqM,SAAQ,aAAa,CAACzP,QAAO,QAAQ8Q,MAAK,UAAU,KAAK9Q,MAAK,CAAC;AAC/D,SAAO,QAAQ,SAAS,cAAc,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM8Q,MAAK,UAAU,GAAG,CAAC,CAAC;AAClF,SAAOA;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGN,IAAM,kBAA+B,4BAAY,4BAA4B;AAG7E,IAAM,YAAyB,4BAAY,sBAAsB;AAGjE,IAAM,UAAU,CAAC,SAAS,SAAS;AACjC,QAAM,UAAU,KAAK,WAAW,IAAI,SAAY,KAAK,CAAC;AACtD,QAAMnC,YAAW,KAAK,KAAK,SAAS,CAAC;AACrC,SAAO,kBAAkB,SAAS,MAAM,OAAO,GAAGA,WAAU,CAACmC,OAAMsB,UAAS1H,SAAQ,yBAAyB,aAAW,KAAK,MAAMoG,MAAK,IAAI,SAASsB,KAAI,CAAC,CAAC,CAAC;AAC9J;AAGA,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAMtB,UAAS,eAAe,MAAM,SAASA,KAAI,CAAC;AAG/F,IAAM,WAAwB,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,UAAU,CAAC,MAAM,MAAM,YAAY,QAAQ,MAAM,WAAW,CAAC,GAAG,CAAAA,UAAQ,eAAe,MAAMA,KAAI,CAAC,CAAC;AAOjK,IAAM/C,gBAAe,CAAA/N,WAASA,UAAS,OAAOmB,MAAO,uBAAuB,CAAC,IAAI,QAAQnB,MAAK;AAG9F,IAAM,qBAAqB,UAAQ,SAASqL,MAAI,MAAMY,KAAI,GAAG,WAAS,yBAAyB,KAAK,IAAI,cAAc9K,MAAO,KAAK,CAAC;;;AC92BnI,IAAM0kB,iBAAgB;AAKtB,IAAMC,eAAc;AAKpB,IAAM,gBAAgB;AAKtB,IAAMrV,cAAa;AAAA,EACjB,MAAMoV;AACR;AAGA,IAAMrV,YAAW;AAAA,EACf,MAAMsV;AACR;AAGA,IAAM,YAAY,kBAAgB;AAAA,EAChC,MAAM;AAAA,EACN;AACF;AAGA,IAAM,eAAe,UAAQ,KAAK,SAASD;AAG3C,IAAM,aAAa,UAAQ,KAAK,SAASC;;;AChCzC,IAAM,uBAAuB;AAG7B,IAAM,oBAAiC,uBAAO,IAAI,oBAAoB;AAGtE,IAAM,UAAU;AAKhB,IAAM,aAAa;AAKnB,IAAM,eAAe;AAKrB,IAAM,OAAN,MAAW;AAAA,EACT,CAAC,iBAAiB,IAAI;AAAA,EACtB,OAAO;AAAA,EACP,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,oBAAoB,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC;AAAA,EAClE;AAAA,EACA,CAACpe,OAAQ,EAAE,MAAM;AACf,WAAO,cAAc,IAAI,KAAK,KAAK,SAAS;AAAA,EAC9C;AACF;AAGA,IAAM,UAAN,MAAc;AAAA,EACZ,CAAC,iBAAiB,IAAI;AAAA,EACtB,OAAO;AAAA,EACP,YAAYqe,eAAc;AACxB,SAAK,eAAeA;AAAA,EACtB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,oBAAoB,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,GAAG,QAAQ,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,EACpG;AAAA,EACA,CAACre,OAAQ,EAAE,MAAM;AACf,WAAO,cAAc,IAAI,KAAK,KAAK,SAAS,cAAc,KAAK,iBAAiB,KAAK;AAAA,EACvF;AACF;AAGA,IAAM,YAAN,MAAgB;AAAA,EACd,CAAC,iBAAiB,IAAI;AAAA,EACtB,OAAO;AAAA,EACP,YAAYqe,eAAc,YAAY;AACpC,SAAK,eAAeA;AACpB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,oBAAoB,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,GAAG,QAAQ,KAAK,KAAK,YAAY,CAAC,GAAG,QAAQ,KAAK,KAAK,UAAU,CAAC,CAAC;AAAA,EACpI;AAAA,EACA,CAACre,OAAQ,EAAE,MAAM;AACf,WAAO,cAAc,IAAI,KAAK,KAAK,SAAS,gBAAgB,KAAK,iBAAiB,KAAK,gBAAgB,OAAO,KAAK,YAAY,KAAK,UAAU;AAAA,EAChJ;AACF;AAGA,IAAMxG,QAAoB,oBAAI,KAAK;AAGnC,IAAM,UAAU,CAAA6kB,kBAAgB,IAAI,QAAQA,aAAY;AAGxD,IAAM,YAAY,CAACA,eAAc,eAAe,IAAI,UAAUA,eAAc,UAAU;AAGtF,IAAM,gBAAgB,OAAK,YAAY,GAAG,iBAAiB;AAG3D,IAAM,SAAS,UAAQ,KAAK,SAAS;AAMrC,IAAM,cAAc,UAAQ,KAAK,SAAS;;;AC/C1C,IAAM7kB,QAAOA;AAMb,IAAMoE,WAAU;AAMhB,IAAM0gB,aAAY;AAgBlB,IAAMC,UAAS;AAkBf,IAAMC,eAAc;;;ACnFpB,IAAM,sBAAsB;AAK5B,IAAM,cAAc;AAKpB,IAAM,YAAY;AAKlB,IAAM,eAAe;AAarB,IAAM,kBAAkB,CAAAvkB,YAAU;AAAA,EAChC,MAAM;AAAA,EACN,OAAAA;AACF;AAGA,IAAM,WAAW,cAAY;AAAA,EAC3B,MAAM;AAAA,EACN;AACF;AAGA,IAAM,SAAS,CAAAsQ,aAAW;AAAA,EACxB,MAAM;AAAA,EACN,QAAAA;AACF;AAGA,IAAM2P,YAAW,OAAO;AAAA,EACtB,MAAM;AACR;;;AC9CA,IAAM,sBAAsB;AAG5B,IAAM,mBAAgC,uBAAO,IAAI,mBAAmB;AAYpE,IAAM,SAAN,MAAa;AAAA,EACX,CAAC,gBAAgB,IAAI;AAAA,EACrB,UAAUxU;AAAA,EACV,QAAQ,oBAAI,IAAI;AAAA,EAChB,IAAI,eAAe,OAAO;AACxB,SAAK,MAAM,IAAI,KAAK;AACpB,UAAM,YAAY,MAAM;AACtB,WAAK,MAAM,OAAO,KAAK;AAAA,IACzB,CAAC;AAAA,EACH;AACF;AAGA,IAAM,QAAN,MAAY;AAAA,EACV,CAAC,gBAAgB,IAAI;AAAA,EACrB,YAAYkD,UAAS,QAAQ;AAC3B,SAAK,UAAUA;AACf,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,IAAI,eAAe,OAAO;AACxB,SAAK,OAAO,KAAK,SAAS,iBAAe;AACvC,kBAAY,SAAS,KAAK;AAC1B,YAAM,YAAY,MAAM;AACtB,oBAAY,YAAY,KAAK;AAAA,MAC/B,CAAC;AAAA,IACH,CAAC,CAAC;AAAA,EACJ;AACF;AAGA,IAAMD,cAAa,WAAS;AAC1B,SAAO,IAAI,MAAM,MAAM,GAAG,GAAG,KAAK;AACpC;AAGA,IAAM,cAA2B,4BAA0B,uBAAO,IAAI,0BAA0B,GAAG,MAAM,IAAI,OAAO,CAAC;;;ACtCrH,IAAM,iBAAiB;AAGvB,IAAM,cAA2B,uBAAO,IAAI,cAAc;AAG1D,IAAM,gBAAgB;AAAA,EACpB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAGA,IAAM,aAAa;AAAA,EACjB,CAAC,WAAW,GAAG;AAAA,EACf,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,wBAAwB;AAG9B,IAAM,qBAAkC,uBAAO,IAAI,qBAAqB;AAGxE,IAAM8U,SAAqB,qBAAmB,sBAAM,OAAS,KAAO,GAAgB,gBAAAxX,UAAS,WAAS,CAAC,MAAM,GAAG,EAAE,iBAAiB,MAAM,GAAG,EAAE,EAAE,CAAC,CAAC;AASlJ,IAAM,SAAS,UAAQ,KAAK,MAAM;AAsClC,IAAM,aAAa,UAAQ,KAAK,WAAW;AAS3C,IAAM,iBAA8B,qBAAK,GAAG,CAACwY,SAAQ7V,aAAY,KAAK,yBAAyB6V,SAAQ,gBAAgB7V,QAAO,CAAC,GAAG4C,UAAS,KAAKiT,SAAQ,yBAAyB,MAAM,CAAC,CAAC,CAAC,CAAC;AAG3L,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM7V,aAAY,KAAK,gBAAgBA,QAAO,CAAC;AAG7F,IAAMrF,QAAO,UAAQmI,SAAQzI,SAAQ,KAAK,MAAM,CAAC,GAAG,KAAK,WAAW,CAAC;AA6CrE,IAAMoQ,SAAQ;AAAA,EACZ,GAAG;AAAA,EACH,IAAI,MAAM3N;AAAA,EACV,OAAO,MAAM;AAAA,EACb,UAAU,MAAM,QAAU,CAAC,CAAC;AAAA,EAC5B,YAAY,MAAM;AAAA,EAClB,MAAM,MAAM,QAAUA,MAAO,CAAC;AAAA,EAC9B,iBAAiB,MAAM;AACzB;AA4BA,IAAM,OAAO,UAAQ,KAAK,KAAK;AAmD/B,IAAM,cAAc,MAAM,MAAM,KAAK,YAAY,KAAK;AAGtD,IAAM,QAAqB,qBAAK,WAAW;AAY3C,IAAM,kBAAkB;;;ACrLxB,IAAM,MAAM,UAAQ,CAAC;;;AC/BrB,IAAMjC,SAAO;AASb,IAAMib,UAAS;AA8Bf,IAAMllB,QAAO;AASb,IAAMC,QAAO;AAkBb,IAAM4S,aAAY;AAqClB,IAAMjB,aAAY;AAkBlB,IAAMmT,UAAS;AASf,IAAMI,QAAO;AAQb,IAAMrS,WAAU;AAgBhB,IAAM3D,cAAa;;;ACzLnB,IAAMkC,gBAAe;AA6DrB,IAAM+T,6BAA4B;;;AC1BlC,IAAM7V,cAAaA;AAQnB,IAAMD,YAAWA;AAQjB,IAAM+V,aAAY;;;ACNlB,IAAMvX,QAAOA;AAmBb,IAAMuC,SAAQA;;;ACrEd,IAAM,oBAAiC,4BAA0B,uBAAO,IAAI,mCAAmC,GAAG,MAAM,mBAAmB,oBAAI,IAAI,CAAC,CAAC;;;ACDrJ,IAAMxR,SAAQ,CAAC,SAAS0Q,aAAY+V,YAAWC,aAAY;AACzD,UAAQ,SAAS,aAAa;AAAA,IAC5B,KAAK,QACH;AACE,aAAOhW,YAAW;AAAA,IACpB;AAAA,IACF,KAAK,aACH;AACE,aAAO+V,WAAU;AAAA,IACnB;AAAA,IACF,KAAK,WACH;AACE,aAAO,gBAAgB,oBAAoB,iBAAe,gBAAgB,cAAcA,WAAU,IAAI,cAAc,IAAIC,SAAQ,WAAW,IAAIhW,YAAW,CAAC;AAAA,IAC7J;AAAA,IACF,SACE;AACE,aAAO,QAAQ,cAAc,IAAIgW,SAAQ,QAAQ,WAAW,IAAIhW,YAAW;AAAA,IAC7E;AAAA,EACJ;AACF;AAGA,IAAM,cAAc,CAAC,SAASA,aAAY,eAAe;AACvD,UAAQ,SAAS,aAAa;AAAA,IAC5B,KAAK,QACH;AACE,aAAOA,YAAW;AAAA,IACpB;AAAA,IACF,KAAK,aACH;AACE,aAAO,WAAW;AAAA,IACpB;AAAA,IACF,KAAK,WACH;AACE,aAAO,gBAAgB,oBAAoB,iBAAe,gBAAgB,cAAc,WAAW,IAAI,cAAc,IAAI,WAAW,IAAIA,YAAW,CAAC;AAAA,IACtJ;AAAA,IACF,SACE;AACE,aAAO,QAAQ,cAAc,IAAI,WAAW,IAAIA,YAAW;AAAA,IAC7D;AAAA,EACJ;AACF;;;AClCA,IAAM,kBAAkB;AAGxB,IAAM,eAA4B,uBAAO,IAAI,eAAe;AAG5D,IAAM,iBAAiB;AAAA,EACrB,UAAU,OAAK;AAAA,EACf,SAAS,OAAK;AAChB;AAGA,IAAM,aAAa,CAAA7P,UAAQ;AAAA,EACzB,CAAC,YAAY,GAAG;AAAA,EAChB,KAAAA;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAeA,IAAMwM,QAAO;AAAA,EACX,CAAC,YAAY,GAAG;AAAA,EAChB,KAAK;AAAA,EACL,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAiCA,IAAM,eAA4B,2BAAW,CAAC;AAAA,EAC5C;AAAA,EACA,OAAAzL;AAAA,EACA,MAAA6F;AAAA,EACA,SAAA8I;AAAA,EACA,UAAAoW;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,YAAYlf,MAAK,QAAQ;AAC/B,QAAM,cAAc,CAAC,aAAaA,MAAK,YAAY,CAAC,IAAI,SAASkf,UAAS,KAAK,IAAI,SAAS,WAAWpW,QAAO,CAAC,EAAE;AACjH,MAAI,SAAS,YAAY,KAAK,GAAG;AACjC,QAAM,gBAAgB,iBAAiB,OAAO;AAC9C,MAAI,cAAc,SAAS,GAAG;AAC5B,aAAS,SAAS;AAClB,aAAS,aAAa,eAAe,MAAM;AAAA,EAC7C;AACA,MAAI3O,UAAS,QAAQA,OAAM,SAAS,SAAS;AAC3C,aAAS,SAAS;AAClB,aAAS,aAAa,OAAOA,MAAK,GAAG,MAAM;AAAA,EAC7C;AACA,MAAI,OAAO,KAAK,GAAG;AACjB,aAAS,SAAS;AAClB,QAAI0P,SAAQ;AACZ,eAAWP,SAAQ,OAAO;AACxB,UAAIO,QAAO;AACT,QAAAA,SAAQ;AAAA,MACV,OAAO;AACL,iBAAS,SAAS;AAAA,MACpB;AACA,eAAS,SAAS,KAAKP,OAAMsU,QAAO,SAAS,CAAC;AAAA,IAChD;AAAA,EACF;AACA,MAAI,KAAK,aAAa7f,KAAI,IAAI,GAAG;AAC/B,aAAS,SAAS;AAClB,QAAI8L,SAAQ;AACZ,eAAW,CAAC,KAAKrR,MAAK,KAAK,aAAa;AACtC,UAAIqR,QAAO;AACT,QAAAA,SAAQ;AAAA,MACV,OAAO;AACL,iBAAS,SAAS;AAAA,MACpB;AACA,eAAS,SAAS,cAAc,GAAG;AACnC,eAAS,SAAS;AAClB,eAAS,aAAa,iBAAiBrR,MAAK,GAAG,MAAM;AAAA,IACvD;AAAA,EACF;AACA,SAAO;AACT,CAAC;AACD,IAAM,mBAAmB,OAAK;AAC5B,MAAI;AACF,WAAO,OAAO,MAAM,WAAW,KAAK,UAAU,CAAC,IAAI,OAAO,CAAC;AAAA,EAC7D,SAAS,GAAG;AACV,WAAO,OAAO,CAAC;AAAA,EACjB;AACF;AAGA,IAAM,qBAAqB,SAAO,IAAI,IAAI,QAAQ,mBAAmB,QAAQ,CAAC;AAC9E,IAAM,WAAW;AAGjB,IAAM,eAAe,CAAC,OAAO,WAAW,UAAU,MAAM,MAAM,QAAQ,IAAI,QAAQ,mBAAmB,KAAK;AAsD1G,IAAM,gBAAgB,SAAO,IAAI,QAAQ,WAAW,GAAG;;;AC7LvD,IAAM,4BAA4B;AAGlC,IAAM,yBAAsC,uBAAO,IAAI,yBAAyB;AAGhF,IAAM,uBAAN,MAA2B;AAAA,EACzB,CAAC,sBAAsB,IAAI;AAAA,EAC3B,YAAYsD,SAAQ;AAClB,SAAK,SAASA;AAAA,EAChB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,yBAAyB,GAAG,QAAQ,KAAK,KAAK,MAAM,CAAC,CAAC;AAAA,EACzE;AAAA,EACA,CAACoE,OAAQ,EAAE,GAAG;AACZ,WAAO,mBAAmB,CAAC,KAAK,OAAO,KAAK,QAAQ,EAAE,MAAM;AAAA,EAC9D;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,qBAAqB,OAAK,YAAY,GAAG,sBAAsB;AAGrE,IAAMif,aAAY,CAAArkB,WAAS;AACzB,QAAMgB,UAAS,KAAKhB,QAAOsH,WAAU4B,IAAG,OAAO,iBAAiB,CAAC,GAAGvB,OAAM;AAC1E,SAAO,IAAI,qBAAqB3G,OAAM;AACxC;AAMA,IAAM,cAAc,aAAW,KAAK,OAAO,QAAQ,QAAQ,GAAG,OAAK,QAAQ,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,CAAC,GAAG,iBAAiBqjB,UAAS;;;ACpC3I,IAAM,yBAAyB;AAG/B,IAAM,sBAAmC,uBAAO,IAAI,sBAAsB;AAG1E,IAAM,0BAA0B;AAGhC,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAG5E,IAAM,4BAA4B;AAGlC,IAAM,yBAAsC,uBAAO,IAAI,yBAAyB;AAGhF,IAAM,wBAAwB;AAG9B,IAAM,qBAAkC,uBAAO,IAAI,qBAAqB;AAGxE,IAAM,4BAA4B;AAGlC,IAAM,yBAAsC,uBAAO,IAAI,yBAAyB;AAGhF,IAAM,0BAA0B;AAGhC,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAG5E,IAAM,wBAAwB;AAAA,EAC5B,KAAK,OAAK;AAAA,EACV,MAAM,OAAK;AACb;AAGA,IAAM,iBAAN,MAAqB;AAAA,EACnB,CAAC,mBAAmB,IAAI;AAAA,EACxB,CAAC,oBAAoB,IAAI;AAAA,EACzB,YAAY,aAAaC,SAAQ;AAC/B,SAAK,cAAc;AACnB,SAAK,SAASA;AAAA,EAChB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,uBAAuB;AAAA,EACrC;AAAA,EACA,CAAClf,OAAQ,EAAE,MAAM;AACf,WAAO,aAAa,IAAI;AAAA,EAC1B;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,mBAAN,MAAuB;AAAA,EACrB,CAAC,mBAAmB,IAAI;AAAA,EACxB,CAAC,sBAAsB,IAAI;AAAA,EAC3B,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,yBAAyB;AAAA,EACvC;AAAA,EACA,CAACA,OAAQ,EAAE,MAAM;AACf,WAAO,eAAe,IAAI;AAAA,EAC5B;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,eAAN,MAAmB;AAAA,EACjB,CAAC,mBAAmB,IAAI;AAAA,EACxB,CAAC,kBAAkB,IAAI;AAAA,EACvB,YAAYkf,SAAQ;AAClB,SAAK,SAASA;AAAA,EAChB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,qBAAqB;AAAA,EACnC;AAAA,EACA,CAAClf,OAAQ,EAAE,MAAM;AACf,WAAO,WAAW,IAAI;AAAA,EACxB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAMA,IAAM,mBAAN,MAAuB;AAAA,EACrB,CAAC,mBAAmB,IAAI;AAAA,EACxB,CAAC,sBAAsB,IAAI;AAAA,EAC3B,YAAY,YAAY;AACtB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,yBAAyB,GAAG,QAAQ,KAAK,KAAK,UAAU,CAAC,CAAC;AAAA,EAC7E;AAAA,EACA,CAACA,OAAQ,EAAE,MAAM;AACf,WAAO,eAAe,IAAI,KAAK,OAAO,KAAK,YAAY,KAAK,UAAU;AAAA,EACxE;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,iBAAN,MAAqB;AAAA,EACnB,CAAC,mBAAmB,IAAI;AAAA,EACxB,CAAC,oBAAoB,IAAI;AAAA,EACzB,YAAY,QAAQ,SAAS,OAAO,WAAW;AAC7C,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,QAAQ;AACb,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,uBAAuB,GAAG,QAAQ,KAAK,KAAK,MAAM,CAAC,GAAG,QAAQ,KAAK,KAAK,OAAO,CAAC,GAAG,QAAQ,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,KAAK,KAAK,SAAS,CAAC,CAAC;AAAA,EAC9J;AAAA,EACA,CAACA,OAAQ,EAAE,MAAM;AACf,WAAO,aAAa,IAAI,KAAK,OAAO,KAAK,QAAQ,KAAK,MAAM,KAAK,KAAK,YAAY,KAAK,WAAW,KAAK,UAAU,KAAK,SAAS,OAAO,KAAK,WAAW,KAAK,SAAS;AAAA,EACtK;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAMA,IAAM,UAAU,aAAW,IAAI,eAAe,SAAS,eAAe,OAAO,SAAS,UAAU,KAAK;AAkBrG,IAAM,YAAY,gBAAc;AAC9B,SAAO,IAAI,iBAAiB,UAAU;AACxC;AAoBA,IAAM,eAAe,OAAK,YAAY,GAAG,oBAAoB;AAM7D,IAAM,iBAAiB,OAAK,YAAY,GAAG,sBAAsB;AAMjE,IAAM,aAAa,OAAK,YAAY,GAAG,kBAAkB;AAMzD,IAAM,iBAAiB,OAAK,YAAY,GAAG,sBAAsB;AAMjE,IAAM,eAAe,OAAK,YAAY,GAAG,oBAAoB;;;ACxM7D,IAAM,qBAAqB;AAG3B,IAAM,kBAA+B,uBAAO,IAAI,kBAAkB;AAGlE,IAAM,oBAAoB;AAAA,EACxB,OAAO,OAAK;AACd;AAGA,IAAM,gBAAN,MAAoB;AAAA,EAClB,CAAC,eAAe,IAAI;AAAA,EACpB,YAAY,MAAM,SAAS,aAAa,OAAOtE,OAAM,GAAG;AACtD,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,cAAc;AACnB,SAAK,OAAO;AAAA,EACd;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,KAAK,IAAI,GAAG,QAAQ,KAAK,KAAK,OAAO,CAAC,GAAG,QAAQ,KAAK,KAAK,WAAW,CAAC,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC;AAAA,EACrH;AAAA,EACA,CAACsE,OAAQ,EAAE,GAAG;AACZ,WAAO,YAAY,CAAC,KAAK,KAAK,SAAS,EAAE,QAAQ,OAAO,KAAK,SAAS,EAAE,OAAO,KAAK,OAAO,KAAK,aAAa,EAAE,WAAW,KAAK,OAAO,KAAK,MAAM,EAAE,IAAI;AAAA,EACzJ;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,cAAc,OAAK,YAAY,GAAG,eAAe;AAGvD,IAAMhC,WAAU,CAAC,MAAM,YAAY,IAAI,cAAc,MAAM,QAAU,OAAO,GAAG,aAAa,SAAS,WAAW,CAAC;AASjH,IAAMmhB,aAAY,CAAC,MAAM,YAAY,gBAAgB,IAAI,cAAc,MAAM,UAAY,UAAU,GAAG,aAAa,WAAW,CAAC;AAY/H,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,cAActhB,MAAK,SAAS,MAAM,IAAI,OAAO,IAAI,cAAc,KAAK,MAAM,KAAK,SAAS,KAAK,aAAa,KAAK,KAAK,MAAM8G,OAAM,SAAS,CAAC,CAAC,CAAC;;;AC3DnM,IAAM,uBAAuB;AAG7B,IAAM,oBAAiC,uBAAO,IAAI,oBAAoB;AAGtE,IAAM,wBAAwB;AAG9B,IAAM,qBAAkC,uBAAO,IAAI,qBAAqB;AAGxE,IAAM,0BAA0B;AAGhC,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAG5E,IAAM,sBAAsB;AAG5B,IAAM,mBAAgC,uBAAO,IAAI,mBAAmB;AAGpE,IAAM,0BAA0B;AAGhC,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAG5E,IAAM,wBAAwB;AAG9B,IAAM,qBAAkC,uBAAO,IAAI,qBAAqB;AAGxE,IAAM,sBAAsB;AAAA,EAC1B,IAAI,OAAK;AACX;AAGA,IAAM,eAAN,MAAmB;AAAA,EACjB,CAAC,iBAAiB,IAAI;AAAA,EACtB,CAAC,kBAAkB,IAAI;AAAA,EACvB,YAAY3F,QAAO;AACjB,SAAK,QAAQA;AAAA,EACf;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,qBAAqB,GAAG,QAAQ,KAAK,KAAK,KAAK,CAAC,CAAC;AAAA,EACpE;AAAA,EACA,CAACgB,OAAQ,EAAE,MAAM;AACf,WAAO,eAAe,IAAI,KAAK,KAAK,UAAU,KAAK;AAAA,EACrD;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,iBAAN,MAAqB;AAAA,EACnB,CAAC,iBAAiB,IAAI;AAAA,EACtB,CAAC,oBAAoB,IAAI;AAAA,EACzB,YAAY,aAAa;AACvB,SAAK,cAAc;AAAA,EACrB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,uBAAuB,GAAG,QAAQ,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,EAC5E;AAAA,EACA,CAACA,OAAQ,EAAE,MAAM;AACf,WAAO,iBAAiB,IAAI,KAAK,OAAO,KAAK,aAAa,KAAK,WAAW;AAAA,EAC5E;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,aAAN,MAAiB;AAAA,EACf,CAAC,iBAAiB,IAAI;AAAA,EACtB,CAAC,gBAAgB,IAAI;AAAA,EACrB,YAAY1H,QAAO;AACjB,SAAK,QAAQA;AAAA,EACf;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,mBAAmB,GAAG,QAAQ,KAAK,KAAK,KAAK,CAAC,CAAC;AAAA,EAClE;AAAA,EACA,CAAC0H,OAAQ,EAAE,GAAG;AACZ,WAAO,aAAa,CAAC,KAAK,KAAK,UAAU,EAAE;AAAA,EAC7C;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,iBAAN,MAAqB;AAAA,EACnB,CAAC,iBAAiB,IAAI;AAAA,EACtB,CAAC,oBAAoB,IAAI;AAAA,EACzB,YAAY,SAAShB,QAAO9C,MAAK+I,MAAKma,MAAK;AACzC,SAAK,UAAU;AACf,SAAK,QAAQpgB;AACb,SAAK,MAAM9C;AACX,SAAK,MAAM+I;AACX,SAAK,MAAMma;AAAA,EACb;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,uBAAuB,GAAG,QAAQ,KAAK,KAAK,OAAO,CAAC,GAAG,QAAQ,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,CAAC;AAAA,EAC9K;AAAA,EACA,CAACpf,OAAQ,EAAE,MAAM;AACf,WAAO,iBAAiB,IAAI,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO,KAAK,KAAK,UAAU,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,QAAQ,KAAK;AAAA,EAC1K;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,eAAN,MAAmB;AAAA,EACjB,CAAC,iBAAiB,IAAI;AAAA,EACtB,CAAC,kBAAkB,IAAI;AAAA,EACvB,YAAY,OAAO,WAAWhB,QAAO9C,MAAK+I,MAAKma,MAAK;AAClD,SAAK,QAAQ;AACb,SAAK,YAAY;AACjB,SAAK,QAAQpgB;AACb,SAAK,MAAM9C;AACX,SAAK,MAAM+I;AACX,SAAK,MAAMma;AAAA,EACb;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,qBAAqB,GAAG,QAAQ,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,KAAK,KAAK,SAAS,CAAC,GAAG,QAAQ,KAAK,KAAK,KAAK,CAAC,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,CAAC;AAAA,EACzM;AAAA,EACA,CAACpf,OAAQ,EAAE,MAAM;AACf,WAAO,eAAe,IAAI,KAAK,KAAK,UAAU,KAAK,SAAS,OAAO,KAAK,WAAW,KAAK,SAAS,KAAK,KAAK,UAAU,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,QAAQ,KAAK;AAAA,EACzM;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAMhC,WAAU,CAAAgB,WAAS,IAAI,aAAaA,MAAK;AAG/C,IAAMqgB,aAAY,iBAAe;AAC/B,SAAO,IAAI,eAAe,WAAW;AACvC;AAGA,IAAMC,SAAQ,CAAAtgB,WAAS,IAAI,WAAWA,MAAK;AAG3C,IAAMmgB,aAAY,aAAW,IAAI,eAAe,QAAQ,SAAS,QAAQ,OAAO,QAAQ,KAAK,QAAQ,KAAK,QAAQ,GAAG;AAGrH,IAAMlB,WAAU,aAAW,IAAI,aAAa,QAAQ,OAAO,QAAQ,WAAW,QAAQ,OAAO,QAAQ,KAAK,QAAQ,KAAK,QAAQ,GAAG;AAMlI,IAAM,iBAAiB,OAAK,YAAY,GAAG,kBAAkB;AAM7D,IAAM,mBAAmB,OAAK,YAAY,GAAG,oBAAoB;AAMjE,IAAM,eAAe,OAAK,YAAY,GAAG,gBAAgB;AAMzD,IAAM,mBAAmB,OAAK,YAAY,GAAG,oBAAoB;AAMjE,IAAM,iBAAiB,OAAK,YAAY,GAAG,kBAAkB;;;ACpL7D,IAAM,sBAAsB;AAG5B,IAAM,mBAAgC,uBAAO,IAAI,mBAAmB;AAGpE,IAAM,qBAAqB;AAAA,EACzB,KAAK,OAAK;AAAA,EACV,MAAM,OAAK;AACb;AAGA,IAAMxa,SAAO,cAAY;AAAA,EACvB,CAAC,gBAAgB,GAAG;AAAA,EACpB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,GAAG;AACL;AAcA,IAAM8b,WAAuB,uBAAO,CAAC;AAGrC,IAAMvhB,WAAU,SAAO;AACrB,MAAIohB,OAAM,IAAI,QAAQ,SAASG,WAAU;AACzC,QAAM,YAAY,IAAI,QAAQ,cAAc,IAAI,QAAQ,SAAS,CAAAjnB,WAASA,UAASinB,WAAU,CAAAjnB,WAASA,UAAS,IAAI,YAAU;AAC7H,SAAOmL,OAAK;AAAA,IACV,KAAK,MAAMzF,SAAUohB,IAAG;AAAA,IACxB,QAAQ,CAAA9mB,WAAS;AACf,UAAI,UAAUA,MAAK,GAAG;AACpB,QAAA8mB,OAAMA,OAAM9mB;AAAA,MACd;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAGA,IAAM+mB,aAAY,UAAQ;AACxB,QAAMzjB,UAAS,oBAAI,IAAI;AACvB,QAAMgO,UAAS,UAAQ;AACrB,UAAM,YAAYhO,QAAO,IAAI,IAAI,KAAK;AACtC,IAAAA,QAAO,IAAI,MAAM,YAAY,CAAC;AAAA,EAChC;AACA,QAAM,WAAW,MAAMsH,cAAatH,QAAO,QAAQ,CAAC;AACpD,SAAO6H,OAAK;AAAA,IACV,KAAK,MAAM4b,WAAY,SAAS,CAAC;AAAA,IACjC,QAAAzV;AAAA,EACF,CAAC;AACH;AAGA,IAAM0V,SAAQ,CAAC,MAAM,YAAY;AAC/B,MAAIhnB,SAAQ;AACZ,SAAOmL,OAAK;AAAA,IACV,KAAK,MAAM6b,OAAQhnB,MAAK;AAAA,IACxB,QAAQ,OAAK;AACX,MAAAA,SAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACH;AAGA,IAAM6mB,aAAY,SAAO;AACvB,QAAM,SAAS,IAAI,QAAQ,WAAW;AACtC,QAAMthB,SAAO,OAAO;AACpB,QAAMjC,UAAS,IAAI,YAAYiC,SAAO,CAAC;AACvC,QAAM,aAAa,IAAI,aAAaA,MAAI;AACxC,MAAImB,SAAQ;AACZ,MAAIogB,OAAM;AACV,MAAIljB,OAAM,OAAO;AACjB,MAAI+I,OAAM,OAAO;AACjB,OAAK,QAAQT,MAAK,KAAK,GAAGb,KAAI,CAAC,GAAG,MAAM;AACtC,eAAW,CAAC,IAAI;AAAA,EAClB,CAAC,CAAC;AAGF,QAAMiG,UAAS,CAAAtR,WAAS;AACtB,QAAI,OAAO;AACX,QAAI,KAAKuF;AACT,WAAO,SAAS,IAAI;AAClB,YAAM,MAAM,KAAK,MAAM,QAAQ,KAAK,QAAQ,CAAC;AAC7C,YAAM,WAAW,WAAW,GAAG;AAC/B,UAAIvF,UAAS,UAAU;AACrB,aAAK;AAAA,MACP,OAAO;AACL,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,OAAO,GAAG;AACnB,YAAIA,UAAS,WAAW,IAAI,GAAG;AAC7B,eAAK;AAAA,QACP,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AACA,IAAAsD,QAAO,IAAI,IAAIA,QAAO,IAAI,IAAI;AAC9B,IAAAoD,SAAQA,SAAQ;AAChB,IAAAogB,OAAMA,OAAM9mB;AACZ,QAAIA,SAAQ4D,MAAK;AACf,MAAAA,OAAM5D;AAAA,IACR;AACA,QAAIA,SAAQ2M,MAAK;AACf,MAAAA,OAAM3M;AAAA,IACR;AAAA,EACF;AACA,QAAM,aAAa,MAAM;AACvB,UAAM,UAAU,MAAMuF,MAAI;AAC1B,QAAI,YAAY;AAChB,aAAS,IAAI,GAAG,IAAIA,QAAM,KAAK;AAC7B,YAAM,WAAW,WAAW,CAAC;AAC7B,YAAMvF,SAAQsD,QAAO,CAAC;AACtB,kBAAY,YAAYtD;AACxB,cAAQ,CAAC,IAAI,CAAC,UAAU,SAAS;AAAA,IACnC;AACA,WAAO,gBAAgB,OAAO;AAAA,EAChC;AACA,SAAOmL,OAAK;AAAA,IACV,KAAK,MAAM0b,WAAY;AAAA,MACrB,SAAS,WAAW;AAAA,MACpB,OAAAngB;AAAA,MACA,KAAA9C;AAAA,MACA,KAAA+I;AAAA,MACA,KAAAma;AAAA,IACF,CAAC;AAAA,IACD,QAAAxV;AAAA,EACF,CAAC;AACH;AAGA,IAAMqU,WAAU,SAAO;AACrB,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,IAAI;AACR,QAAM,kBAAkB,KAAK,WAAWzZ,MAAK,KAAK,CAAC;AACnD,QAAM5I,UAAS,MAAM,OAAO;AAC5B,MAAI5B,QAAO;AACX,MAAIgF,SAAQ;AACZ,MAAIogB,OAAM;AACV,MAAIljB,OAAM,OAAO;AACjB,MAAI+I,OAAM,OAAO;AAGjB,QAAM,WAAW,SAAO;AACtB,UAAM,UAAU,CAAC;AAajB,QAAI,IAAI;AACR,WAAO,MAAM,UAAU,GAAG;AACxB,YAAM,OAAOrJ,QAAO,CAAC;AACrB,UAAI,QAAQ,MAAM;AAChB,cAAM,CAAC,GAAG,CAAC,IAAI;AACf,cAAM,MAAM,OAAO,MAAM,CAAC;AAC1B,YAAI,qBAAqB,KAAK,IAAI,KAAK,OAAO,QAAQ;AACpD,kBAAQ,KAAK,CAAC;AAAA,QAChB;AAAA,MACF;AACA,UAAI,IAAI;AAAA,IACV;AACA,WAAO,mBAAmB,OAAO,iBAAiB,KAAK,gBAAgB,OAAO,GAAG4I,MAAK,KAAK,CAAC,CAAC;AAAA,EAC/F;AACA,QAAM,UAAU,CAAClM,QAAO,cAAc;AACpC,QAAI,UAAU,GAAG;AACf,MAAA0B,QAAOA,QAAO;AACd,YAAM,SAASA,QAAO;AACtB,MAAA4B,QAAO,MAAM,IAAI,CAAC,WAAWtD,MAAK;AAAA,IACpC;AACA,IAAA0G,SAAQA,SAAQ;AAChB,IAAAogB,OAAMA,OAAM9mB;AACZ,QAAIA,SAAQ4D,MAAK;AACf,MAAAA,OAAM5D;AAAA,IACR;AACA,QAAIA,SAAQ2M,MAAK;AACf,MAAAA,OAAM3M;AAAA,IACR;AAAA,EACF;AACA,SAAOmL,OAAK;AAAA,IACV,KAAK,MAAMwa,SAAU;AAAA,MACnB;AAAA,MACA,WAAW,SAAS,KAAK,IAAI,CAAC;AAAA,MAC9B,OAAAjf;AAAA,MACA,KAAA9C;AAAA,MACA,KAAA+I;AAAA,MACA,KAAAma;AAAA,IACF,CAAC;AAAA,IACD,QAAQ,CAAC,CAAC9mB,QAAO,SAAS,MAAM,QAAQA,QAAO,SAAS;AAAA,EAC1D,CAAC;AACH;AAKA,IAAM,qBAAqB,CAAC,OAAO,iBAAiB,kBAAkB;AAEpE,QAAM,cAAc,cAAc;AAClC,MAAI,QAAQ,eAAe,GAAG;AAC5B,WAAOoD,OAAM;AAAA,EACf;AACA,QAAM1B,QAAO,WAAW,eAAe;AACvC,QAAM0D,QAAO,KAAK,iBAAiB,KAAK,CAAC,CAAC;AAC1C,QAAM,WAAW,KAAKA,OAAM,OAAOoG,IAAG,gBAAgB,OAAO,aAAa4B,MAAK,GAAG,GAAG1L,OAAM,aAAa,CAAC,GAAG,CAAC,aAAa,aAAa;AACrI,UAAM,IAAI,WAAW,WAAW;AAChC,WAAO,KAAK,aAAaiI,QAAO,gBAAgB,OAAO,aAAa,EAAE,OAAO,EAAE,UAAU,UAAU,EAAE,IAAI,CAAC,CAAC;AAAA,EAC7G,CAAC,CAAC;AACF,SAAO,KAAK,UAAU0B,KAAI,QAAM,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC,CAAC;AAC1D;AAGA,IAAM,kBAAkB,CAAC,OAAO,aAAa5H,UAAS,UAAU,UAAU,SAAS;AACjF,MAAI,UAAU;AACd,MAAI,gBAAgB;AACpB,MAAI,YAAYA;AAChB,MAAI,aAAa;AACjB,MAAI,aAAa;AACjB,MAAI,SAAS;AACb,MAAI,UAAU;AACd,MAAI,gBAAgB;AACpB,MAAI,YAAYA;AAChB,MAAI,aAAa;AACjB,MAAI,aAAa;AACjB,MAAI,SAAS;AAEb,SAAO,GAAG;AAER,QAAI,QAAQ,MAAM,GAAG;AACnB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO2J,MAAK;AAAA,QACZ,UAAU;AAAA,QACV,MAAMhK,OAAM;AAAA,MACd;AAAA,IACF;AAGA,QAAI,eAAe,GAAG;AACpB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO6I,MAAK,WAAW,MAAM,CAAC;AAAA,QAC9B,UAAU,aAAa,OAAO;AAAA,QAC9B,MAAM7I,OAAM;AAAA,MACd;AAAA,IACF;AAGA,UAAM,WAAW,KAAK,QAAQ,WAAW,OAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AAErE,UAAM,UAAU,aAAa;AAE7B,UAAM,eAAe,UAAU,IAAI;AAInC,UAAM,eAAe,aAAa,SAAS,CAAC,EAAE;AAC9C,UAAM,YAAY,KAAK,IAAI,eAAe,OAAO;AAEjD,QAAI,eAAe,UAAU,cAAc;AACzC,gBAAU;AACV,sBAAgB;AAChB,kBAAY1B,MAAK,MAAM;AACvB,mBAAa;AACb,mBAAa;AACb,eAAS,SAAS,CAAC;AACnB,gBAAU;AACV,sBAAgB;AAChB,kBAAY;AACZ,mBAAa;AACb,mBAAa;AACb,eAAS;AACT;AAAA,IACF;AAGA,QAAI,eAAe,UAAU,cAAc;AACzC,aAAO;AAAA,QACL,UAAU;AAAA,QACV,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,MACR;AAAA,IACF;AAGA,YAAQ,UAAU,MAAM;AAAA,MACtB,KAAK,QACH;AACE,kBAAU;AACV,wBAAgB;AAChB,oBAAYA,MAAK,MAAM;AACvB,qBAAa;AACb,qBAAa;AACb,iBAAS,SAAS,CAAC;AACnB,kBAAU;AACV,wBAAgB;AAChB,oBAAY;AACZ,qBAAa;AACb,qBAAa;AACb,iBAAS;AACT;AAAA,MACF;AAAA,MACF,KAAK,QACH;AACE,cAAM,YAAY,KAAK,IAAI,UAAU,UAAU,KAAK;AACpD,YAAI,YAAY,WAAW;AACzB,oBAAU;AACV,0BAAgB;AAChB,sBAAYA,MAAK,MAAM;AACvB,uBAAa;AACb,uBAAa;AACb,mBAAS,SAAS,CAAC;AACnB,oBAAU;AACV,0BAAgB;AAChB,sBAAY;AACZ,uBAAa;AACb,uBAAa;AACb,mBAAS;AACT;AAAA,QACF;AACA,eAAO;AAAA,UACL,UAAU;AAAA,UACV,OAAOuK,MAAK,UAAU,KAAK;AAAA,UAC3B,UAAU;AAAA,UACV,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,QAAM,IAAI,MAAM,qGAAqG;AACvH;;;ACxWA,IAAM,sBAAsB;AAG5B,IAAM,mBAAgC,uBAAO,IAAI,mBAAmB;AAGpE,IAAM,qBAAqB;AAAA,EACzB,OAAO,OAAK;AACd;AAeA,IAAMoE,cAAa,CAAC,WAAW,gBAAgB;AAC7C,SAAO;AAAA,IACL,CAAC,gBAAgB,GAAG;AAAA,IACpB;AAAA,IACA;AAAA,IACA,OAAO;AACL,aAAO,cAAc,MAAM,SAAS;AAAA,IACtC;AAAA,EACF;AACF;;;ACzBA,IAAMxD,WAAsB,uBAAO,IAAI,uBAAuB;AAY9D,IAAM,sBAAsB;AAAA,EAC1B,CAACA,QAAM,GAAGA;AAAA,EACV,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,KAAK,WAAW,QAAQ,OAAO,QAAQ,EAAE;AAAA,EAClD;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAM,cAAc,gBAAc;AAChC,QAAMxB,QAAM,OAAO,OAAO,mBAAmB;AAC7C,EAAAA,MAAI,aAAaF,MAAO,UAAU;AAClC,SAAOE;AACT;AAMA,IAAMjI,UAAQ,MAAM,YAAYA,QAAQ,CAAC;AAkBzC,IAAMyH,QAAmB,qBAAK,GAAG,CAAC,MAAM,QAAQA,KAAM,KAAK,WAAW,SAAS,GAAG,CAAC;AAMnF,IAAMgE,OAAmB,qBAAK,GAAG,CAAC,MAAM,QAAQ1B,QAAOtC,MAAI,MAAM,GAAG,CAAC,CAAC;AA+BtE,IAAMiB,UAAsB,qBAAK,GAAG,CAAC,MAAM,QAAQ;AACjD,SAAO,KAAK,YAAYA,QAAS,GAAG,CAAC;AACrC,SAAO;AACT,CAAC;AAKD,IAAM8D,OAAmB,qBAAK,GAAG,CAAC,MAAM,KAAK5P,WAAU;AACrD,SAAO,KAAK,YAAY4P,KAAM,KAAK5P,MAAK,CAAC;AACzC,SAAO;AACT,CAAC;AAMD,IAAMuF,QAAO,UAAQA,MAAOsF,KAAM,KAAK,UAAU,CAAC;;;ACpHlD,IAAM,0BAA0B;AAGhC,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAG5E,IAAM,qBAAN,MAAyB;AAAA,EACvB,CAAC,oBAAoB,IAAI;AAAA,EACzB,MAAMzH,QAAM;AAAA,EACZ,WAAW;AACT,UAAM,SAAS,CAAC;AAChB,eAAW,CAAC,KAAK8E,KAAI,KAAK,KAAK,KAAK;AAClC,aAAO,KAAKmI,YAAW,KAAKnI,MAAK,IAAI,CAAC,CAAC;AAAA,IACzC;AACA,WAAO0C,cAAa,MAAM;AAAA,EAC5B;AAAA,EACA,IAAI,KAAK;AACP,UAAM1C,QAAO,KAAK,KAAK,KAAK2C,MAAI,GAAG,GAAG,cAAc;AACpD,QAAI3C,SAAQ,MAAM;AAChB,UAAI,aAAa,IAAI,OAAO,GAAG;AAC7B,eAAO,KAAK,WAAW,GAAG;AAAA,MAC5B;AACA,UAAI,WAAW,IAAI,OAAO,GAAG;AAC3B,eAAO,KAAK,SAAS,GAAG;AAAA,MAC1B;AACA,UAAI,eAAe,IAAI,OAAO,GAAG;AAC/B,eAAO,KAAK,aAAa,GAAG;AAAA,MAC9B;AACA,UAAI,eAAe,IAAI,OAAO,GAAG;AAC/B,eAAO,KAAK,aAAa,GAAG;AAAA,MAC9B;AACA,UAAI,aAAa,IAAI,OAAO,GAAG;AAC7B,eAAO,KAAK,WAAW,GAAG;AAAA,MAC5B;AACA,YAAM,IAAI,MAAM,oHAAoH;AAAA,IACtI,OAAO;AACL,aAAOA;AAAA,IACT;AAAA,EACF;AAAA,EACA,WAAW,KAAK;AACd,QAAIlI,SAAQ,KAAK,KAAK,KAAK6K,MAAI,GAAG,GAAG,cAAc;AACnD,QAAI7K,UAAS,MAAM;AACjB,YAAM,YAAY0F,SAAQ,GAAG;AAC7B,UAAI,CAAC,KAAK,KAAK,KAAKmJ,KAAI,GAAG,CAAC,GAAG;AAC7B,aAAK,KAAK,KAAKe,KAAI,KAAK,SAAS,CAAC;AAAA,MACpC;AACA,MAAA5P,SAAQ;AAAA,IACV;AACA,WAAOA;AAAA,EACT;AAAA,EACA,aAAa,KAAK;AAChB,QAAIA,SAAQ,KAAK,KAAK,KAAK6K,MAAI,GAAG,GAAG,cAAc;AACnD,QAAI7K,UAAS,MAAM;AACjB,YAAM,cAAc+mB,WAAU;AAC9B,UAAI,CAAC,KAAK,KAAK,KAAKlY,KAAI,GAAG,CAAC,GAAG;AAC7B,aAAK,KAAK,KAAKe,KAAI,KAAK,WAAW,CAAC;AAAA,MACtC;AACA,MAAA5P,SAAQ;AAAA,IACV;AACA,WAAOA;AAAA,EACT;AAAA,EACA,SAAS,KAAK;AACZ,QAAIA,SAAQ,KAAK,KAAK,KAAK6K,MAAI,GAAG,GAAG,cAAc;AACnD,QAAI7K,UAAS,MAAM;AACjB,YAAM,UAAUgnB,OAAM,KAAK,IAAI,QAAQ,SAAS,OAAO,CAAC,IAAI,CAAC;AAC7D,UAAI,CAAC,KAAK,KAAK,KAAKnY,KAAI,GAAG,CAAC,GAAG;AAC7B,aAAK,KAAK,KAAKe,KAAI,KAAK,OAAO,CAAC;AAAA,MAClC;AACA,MAAA5P,SAAQ;AAAA,IACV;AACA,WAAOA;AAAA,EACT;AAAA,EACA,aAAa,KAAK;AAChB,QAAIA,SAAQ,KAAK,KAAK,KAAK6K,MAAI,GAAG,GAAG,cAAc;AACnD,QAAI7K,UAAS,MAAM;AACjB,YAAM,cAAc6mB,WAAU,GAAG;AACjC,UAAI,CAAC,KAAK,KAAK,KAAKhY,KAAI,GAAG,CAAC,GAAG;AAC7B,aAAK,KAAK,KAAKe,KAAI,KAAK,WAAW,CAAC;AAAA,MACtC;AACA,MAAA5P,SAAQ;AAAA,IACV;AACA,WAAOA;AAAA,EACT;AAAA,EACA,WAAW,KAAK;AACd,QAAIA,SAAQ,KAAK,KAAK,KAAK6K,MAAI,GAAG,GAAG,cAAc;AACnD,QAAI7K,UAAS,MAAM;AACjB,YAAM,YAAY2lB,SAAQ,GAAG;AAC7B,UAAI,CAAC,KAAK,KAAK,KAAK9W,KAAI,GAAG,CAAC,GAAG;AAC7B,aAAK,KAAK,KAAKe,KAAI,KAAK,SAAS,CAAC;AAAA,MACpC;AACA,MAAA5P,SAAQ;AAAA,IACV;AACA,WAAOA;AAAA,EACT;AACF;AAGA,IAAMmL,SAAO,MAAM;AACjB,SAAO,IAAI,mBAAmB;AAChC;;;AC5FA,IAAM,kBAAkB;AAGxB,IAAM,eAA4B,uBAAO,IAAI,eAAe;AAG5D,IAAM,iBAAiB;AAAA,EACrB,OAAO,OAAK;AAAA,EACZ,KAAK,OAAK;AAAA,EACV,MAAM,OAAK;AACb;AAGA,IAAM,uBAAoC,4BAA0B,uBAAO,IAAI,oCAAoC,GAAG,MAAMA,OAAO,CAAC;AAGpI,IAAMA,SAAO,SAAU,SAAS,cAAc,aAAa;AACzD,QAAM,SAAS,OAAO,OAAO,CAAA8G,YAAUkB,KAAIlB,SAAQ,OAAK,KAAO,MAAM,aAAa,GAAG7O,OAAM,CAAC,CAAC,CAAC,GAAG;AAAA,IAC/F,CAAC,YAAY,GAAG;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AACL,aAAO,cAAc,MAAM,SAAS;AAAA,IACtC;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAMA,IAAMsC,WAAU,CAAC,MAAM,YAAY,cAAcA,SAAU,MAAM,OAAO,CAAC;AASzE,IAAM,gBAAgB,SAAO;AAC3B,QAAMwC,QAAO,eAAa;AACxB,UAAM,UAAU,KAAK,KAAK,mBAAmB,SAAS,CAAC;AACvD,WAAO,qBAAqB,IAAI,OAAO;AAAA,EACzC;AACA,SAAOiD,OAAK,IAAI,SAAS,CAAC5H,QAAO,cAAc2E,MAAK,SAAS,EAAE,OAAO3E,MAAK,GAAG,eAAa2E,MAAK,SAAS,EAAE,IAAI,CAAC;AAClH;AAMA,IAAM2e,aAAY,CAAC,MAAM,YAAY,gBAAgB,cAAcA,WAAY,MAAM,YAAY,WAAW,CAAC;AA8B7G,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,KAAK7mB,WAAU,iBAAiB,MAAMmL,MAAOA,OAAO,KAAKnL,MAAK,CAAC,CAAC,CAAC;AAM5G,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM,sBAAsB;AACzE,QAAM,YAAY+P,WAAU,iBAAiB,IAAI,oBAAoBnF,cAAa,iBAAiB;AACnG,SAAOO,OAAK,KAAK,SAAS,CAAC5H,QAAO,eAAe,KAAK,aAAaA,QAAO,KAAK,WAAW8I,OAAM,UAAU,CAAC,CAAC,GAAG,gBAAc,KAAK,YAAY,KAAK,WAAWA,OAAM,UAAU,CAAC,CAAC,CAAC;AACnL,CAAC;;;ACtED,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,WAAW,gBAAgB,mBAAmB,CAAAhB,UAAO,KAAK,MAAM;AAC3G,MAAIA,MAAI,IAAI,IAAI,GAAG;AACjB,UAAM,QAAQA,MAAI,IAAI,IAAI;AAC1B,QAAI,CAAC,MAAM,MAAM,WAAW;AAC1B,YAAM,MAAM,YAAY;AACxB,yBAAmB,MAAM,QAAQ,MAAM;AAAA,IACzC;AAAA,EACF;AACF,CAAC,CAAC,CAAC;AAeH,IAAM,YAAN,MAAgB;AAAA,EACd,QAAQ;AAAA,EACR,YAAY,oBAAI,IAAI;AAAA,EACpB,YAAY,GAAG;AACb,SAAK,UAAU,IAAI,CAAC;AAAA,EACtB;AAAA,EACA,eAAe,GAAG;AAChB,SAAK,UAAU,OAAO,CAAC;AAAA,EACzB;AAAA,EACA,YAAY;AACV,SAAK;AACL,SAAK,UAAU,QAAQ,OAAK,EAAE,KAAK,KAAK,CAAC;AAAA,EAC3C;AAAA,EACA,YAAY;AACV,SAAK;AACL,SAAK,UAAU,QAAQ,OAAK,EAAE,KAAK,KAAK,CAAC;AAAA,EAC3C;AACF;;;AC5EA,IAAM,YAAY;AAAA,EAChB,SAAS;AAAA,EACT,UAAU,KAAK;AACjB;AAGA,IAAM,uBAAN,MAAM,sBAAqB;AAAA,EACzB,QAAQ;AAAA,EACR,YAAY,MAAM,OAAO,WAAW;AAClC,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,WAAO,IAAI,sBAAqB,KAAK,MAAM,KAAK,MAAM,MAAM,GAAG,KAAK,SAAS;AAAA,EAC/E;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,WAAO,IAAI,sBAAqB,KAAK,MAAM,KAAK,MAAM,MAAM,GAAG,KAAK,cAAc,UAAU,UAAU,UAAU,WAAW,UAAU,OAAO;AAAA,EAC9I;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO;AACL,UAAM,QAAQ,KAAK;AACnB,SAAK;AACL,QAAI,KAAK,cAAc,UAAU,SAAS;AACxC,WAAK,SAAS;AAAA,IAChB,OAAO;AACL,WAAK,SAAS;AAAA,IAChB;AACA,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK,QACH;AACE,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO,KAAK;AAAA,QACd;AAAA,MACF;AAAA,MACF,KAAK,QACH;AACE,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO,MAAM;AAAA,QACf;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,MAAM;AACR,QAAI,KAAK,MAAM,SAAS,GAAG;AACzB,aAAOY,MAAK,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAAE,GAAG;AAAA,IACnD;AACA,WAAOmB,MAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,QAAQ;AACV,QAAI,KAAK,MAAM,SAAS,GAAG;AACzB,aAAOnB,MAAK,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAAE,KAAK;AAAA,IACrD;AACA,WAAOmB,MAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,QAAQ;AACV,QAAI,KAAK,MAAM,SAAS,GAAG;AACzB,aAAOnB,MAAK,CAAC,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAAE,KAAK,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAAE,KAAK,CAAC;AAAA,IAC9F;AACA,WAAOmB,MAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,QAAQ;AACV,QAAI,MAAM;AACV,UAAM,QAAQ,KAAK;AACnB,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI,KAAK,KAAK;AACpB,UAAI,KAAK,MAAM;AACb,eAAO,EAAE;AAAA,MACX;AACA,aAAO;AAAA,IACT,WAAW,MAAM,MAAM,SAAS,CAAC,EAAE,QAAQ,MAAM;AAC/C,YAAM,MAAM,MAAM,SAAS,CAAC,EAAE,KAAK;AAAA,IACrC;AACA,aAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC1C,UAAI,MAAM,IAAI,CAAC,MAAM,MAAM,CAAC,EAAE,OAAO;AACnC,UAAE;AACF,YAAI,MAAM,CAAC,EAAE,QAAQ,MAAM;AACzB,iBAAO,MAAM,CAAC,EAAE,KAAK;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,UAAM,QAAQ,KAAK;AACnB,QAAI,MAAM,WAAW,GAAG;AACtB;AAAA,IACF;AACA,QAAI,IAAI,MAAM,MAAM,SAAS,CAAC;AAC9B,QAAI,EAAE,SAAS,MAAM;AACnB,UAAI,EAAE;AACN,aAAO,KAAK,MAAM;AAChB,cAAM,KAAK,CAAC;AACZ,YAAI,EAAE;AAAA,MACR;AAAA,IACF,OAAO;AACL,YAAM,IAAI;AACV,aAAO,MAAM,SAAS,KAAK,MAAM,MAAM,SAAS,CAAC,EAAE,UAAU,GAAG;AAC9D,YAAI,MAAM,MAAM,SAAS,CAAC;AAC1B,cAAM,IAAI;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,UAAU;AACZ,UAAM,QAAQ,KAAK;AACnB,QAAI,MAAM,WAAW,GAAG;AACtB,aAAO;AAAA,IACT;AACA,QAAI,MAAM,MAAM,SAAS,CAAC,EAAE,SAAS,MAAM;AACzC,aAAO;AAAA,IACT;AACA,aAAS,IAAI,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG;AACzC,UAAI,MAAM,IAAI,CAAC,EAAE,SAAS,MAAM,CAAC,GAAG;AAClC,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,UAAM,QAAQ,KAAK;AACnB,QAAI,MAAM,WAAW,GAAG;AACtB;AAAA,IACF;AACA,QAAI,IAAI,MAAM,MAAM,SAAS,CAAC;AAC9B,QAAI,KAAK,QAAQ,EAAE,QAAQ,MAAM;AAC/B,UAAI,EAAE;AACN,aAAO,KAAK,MAAM;AAChB,cAAM,KAAK,CAAC;AACZ,YAAI,EAAE;AAAA,MACR;AAAA,IACF,OAAO;AACL,YAAM,IAAI;AACV,aAAO,MAAM,SAAS,KAAK,MAAM,MAAM,SAAS,CAAC,EAAE,SAAS,GAAG;AAC7D,YAAI,MAAM,MAAM,SAAS,CAAC;AAC1B,cAAM,IAAI;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,UAAU;AACZ,UAAM,QAAQ,KAAK;AACnB,QAAI,MAAM,WAAW,GAAG;AACtB,aAAO;AAAA,IACT;AACA,QAAI,MAAM,MAAM,SAAS,CAAC,EAAE,QAAQ,MAAM;AACxC,aAAO;AAAA,IACT;AACA,aAAS,IAAI,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG;AACzC,UAAI,MAAM,IAAI,CAAC,EAAE,UAAU,MAAM,CAAC,GAAG;AACnC,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;;;ACxMA,IAAM,QAAQ;AAAA,EACZ,KAAK;AAAA,EACL,OAAO,KAAK;AACd;AAEA,IAAM,OAAN,MAAW;AAAA,EACT,YAAY,OAAO,KAAKpN,QAAOwN,OAAMC,QAAO/G,QAAO;AACjD,SAAK,QAAQ;AACb,SAAK,MAAM;AACX,SAAK,QAAQ1G;AACb,SAAK,OAAOwN;AACZ,SAAK,QAAQC;AACb,SAAK,QAAQ/G;AAAA,EACf;AACF;AAGA,SAAS,MAAM,MAAM;AACnB,SAAO,IAAI,KAAK,KAAK,OAAO,KAAK,KAAK,KAAK,OAAO,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK;AACrF;AAGA,SAASwgB,MAAK,GAAG,GAAG;AAClB,IAAE,MAAM,EAAE;AACV,IAAE,QAAQ,EAAE;AACZ,IAAE,OAAO,EAAE;AACX,IAAE,QAAQ,EAAE;AACZ,IAAE,QAAQ,EAAE;AACZ,IAAE,QAAQ,EAAE;AACd;AAGA,SAAS,QAAQ,MAAM,OAAO;AAC5B,SAAO,IAAI,KAAK,OAAO,KAAK,KAAK,KAAK,OAAO,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK;AAChF;AAGA,SAAS,QAAQ,MAAM;AACrB,OAAK,QAAQ,KAAK,KAAK,MAAM,SAAS,MAAM,KAAK,OAAO,SAAS;AACnE;;;AC5BA,IAAM,wBAAwB;AAG9B,IAAM,qBAAkC,uBAAO,IAAI,qBAAqB;AAIxE,IAAM,oBAAoB;AAAA,EACxB,CAAC,kBAAkB,GAAG;AAAA,EACtB,CAAC,MAAM,IAAI;AACT,WAAO,QAAQ,KAAK,qBAAqB,CAAC,EAAE,MAAM,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,EACrE;AAAA,EACA,CAACxf,OAAQ,EAAE,MAAM;AACf,QAAI,eAAe,IAAI,GAAG;AACxB,WAAK,KAAK,OAAO,SAAS,QAAQ,KAAK,OAAO,SAAS,IAAI;AACzD,eAAO;AAAA,MACT;AACA,aAAO,OAAO,MAAM,KAAK,IAAI,GAAG,MAAM,KAAK,IAAI,CAAC;AAAA,IAClD;AACA,WAAO;AAAA,EACT;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,UAAM,QAAQ,CAAC;AACf,QAAI,IAAI,KAAK;AACb,WAAO,KAAK,MAAM;AAChB,YAAM,KAAK,CAAC;AACZ,UAAI,EAAE;AAAA,IACR;AACA,WAAO,IAAI,qBAAqB,MAAM,OAAO,UAAU,OAAO;AAAA,EAChE;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAMiI,YAAW,CAAC,KAAK,SAAS;AAC9B,QAAM,OAAO,OAAO,OAAO,iBAAiB;AAC5C,OAAK,OAAO;AACZ,OAAK,QAAQ;AACb,SAAO;AACT;AAGA,IAAM,iBAAiB,OAAK,YAAY,GAAG,kBAAkB;AAG7D,IAAMvM,UAAQ,SAAOuM,UAAS,KAAK,MAAS;AA6E5C,IAAMrF,aAAyB,qBAAK,GAAG,CAAC,MAAM,QAAQ;AACpD,QAAM,MAAM,KAAK;AACjB,MAAI,OAAO,KAAK;AAChB,SAAO,SAAS,QAAW;AACzB,UAAM,IAAI,IAAI,KAAK,KAAK,GAAG;AAC3B,QAAI,OAAO,KAAK,KAAK,GAAG,GAAG;AACzB,aAAO2B,MAAK,KAAK,KAAK;AAAA,IACxB;AACA,QAAI,KAAK,GAAG;AACV,aAAO,KAAK;AAAA,IACd,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AACA,SAAOmB,MAAK;AACd,CAAC;AA8CD,IAAM+Z,YAAW,UAAQ,KAAK;AAG9B,IAAMtY,OAAmB,qBAAK,GAAG,CAAC,MAAM,QAAQ1B,QAAO7C,WAAU,MAAM,GAAG,CAAC,CAAC;AAG5E,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,KAAKtK,WAAU;AACxD,QAAM,MAAM,KAAK;AAEjB,MAAI,IAAI,KAAK;AACb,QAAM,UAAU,CAAC;AACjB,QAAM,UAAU,CAAC;AACjB,SAAO,KAAK,MAAM;AAChB,UAAM,IAAI,IAAI,KAAK,EAAE,GAAG;AACxB,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,QAAI,KAAK,GAAG;AACV,UAAI,EAAE;AAAA,IACR,OAAO;AACL,UAAI,EAAE;AAAA,IACR;AAAA,EACF;AAEA,UAAQ,KAAK,IAAI,KAAK,MAAM,KAAK,KAAKA,QAAO,QAAW,QAAW,CAAC,CAAC;AACrE,WAAS,IAAI,QAAQ,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC5C,UAAM,KAAK,QAAQ,CAAC;AACpB,QAAI,QAAQ,CAAC,KAAK,GAAG;AACnB,cAAQ,CAAC,IAAI,IAAI,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,QAAQ,IAAI,CAAC,GAAG,GAAG,OAAO,GAAG,QAAQ,CAAC;AAAA,IAC1F,OAAO;AACL,cAAQ,CAAC,IAAI,IAAI,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,MAAM,QAAQ,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;AAAA,IACzF;AAAA,EACF;AAEA,WAAS,IAAI,QAAQ,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG;AAC3C,UAAM,IAAI,QAAQ,IAAI,CAAC;AACvB,UAAM,KAAK,QAAQ,CAAC;AACpB,QAAI,EAAE,UAAU,MAAM,SAAS,GAAG,UAAU,MAAM,OAAO;AACvD;AAAA,IACF;AACA,UAAM,KAAK,QAAQ,IAAI,CAAC;AACxB,QAAI,GAAG,SAAS,GAAG;AACjB,UAAI,EAAE,SAAS,IAAI;AACjB,cAAM,IAAI,GAAG;AACb,YAAI,KAAK,EAAE,UAAU,MAAM,KAAK;AAC9B,YAAE,QAAQ,MAAM;AAChB,aAAG,QAAQ,QAAQ,GAAG,MAAM,KAAK;AACjC,aAAG,QAAQ,MAAM;AACjB,eAAK;AAAA,QACP,OAAO;AACL,aAAG,QAAQ,MAAM;AACjB,aAAG,OAAO,EAAE;AACZ,YAAE,QAAQ,MAAM;AAChB,YAAE,QAAQ;AACV,kBAAQ,IAAI,CAAC,IAAI;AACjB,kBAAQ,IAAI,CAAC,IAAI;AACjB,kBAAQ,EAAE;AACV,kBAAQ,CAAC;AACT,cAAI,KAAK,GAAG;AACV,kBAAM,MAAM,QAAQ,IAAI,CAAC;AACzB,gBAAI,IAAI,SAAS,IAAI;AACnB,kBAAI,OAAO;AAAA,YACb,OAAO;AACL,kBAAI,QAAQ;AAAA,YACd;AAAA,UACF;AACA;AAAA,QACF;AAAA,MACF,OAAO;AACL,cAAM,IAAI,GAAG;AACb,YAAI,KAAK,EAAE,UAAU,MAAM,KAAK;AAC9B,YAAE,QAAQ,MAAM;AAChB,aAAG,QAAQ,QAAQ,GAAG,MAAM,KAAK;AACjC,aAAG,QAAQ,MAAM;AACjB,eAAK;AAAA,QACP,OAAO;AACL,YAAE,QAAQ,GAAG;AACb,aAAG,QAAQ,MAAM;AACjB,aAAG,OAAO,GAAG;AACb,aAAG,QAAQ,MAAM;AACjB,aAAG,OAAO;AACV,aAAG,QAAQ;AACX,kBAAQ,IAAI,CAAC,IAAI;AACjB,kBAAQ,IAAI,CAAC,IAAI;AACjB,kBAAQ,EAAE;AACV,kBAAQ,CAAC;AACT,kBAAQ,EAAE;AACV,cAAI,KAAK,GAAG;AACV,kBAAM,MAAM,QAAQ,IAAI,CAAC;AACzB,gBAAI,IAAI,SAAS,IAAI;AACnB,kBAAI,OAAO;AAAA,YACb,OAAO;AACL,kBAAI,QAAQ;AAAA,YACd;AAAA,UACF;AACA;AAAA,QACF;AAAA,MACF;AAAA,IACF,OAAO;AACL,UAAI,EAAE,UAAU,IAAI;AAClB,cAAM,IAAI,GAAG;AACb,YAAI,KAAK,EAAE,UAAU,MAAM,KAAK;AAC9B,YAAE,QAAQ,MAAM;AAChB,aAAG,OAAO,QAAQ,GAAG,MAAM,KAAK;AAChC,aAAG,QAAQ,MAAM;AACjB,eAAK;AAAA,QACP,OAAO;AACL,aAAG,QAAQ,MAAM;AACjB,aAAG,QAAQ,EAAE;AACb,YAAE,QAAQ,MAAM;AAChB,YAAE,OAAO;AACT,kBAAQ,IAAI,CAAC,IAAI;AACjB,kBAAQ,IAAI,CAAC,IAAI;AACjB,kBAAQ,EAAE;AACV,kBAAQ,CAAC;AACT,cAAI,KAAK,GAAG;AACV,kBAAM,MAAM,QAAQ,IAAI,CAAC;AACzB,gBAAI,IAAI,UAAU,IAAI;AACpB,kBAAI,QAAQ;AAAA,YACd,OAAO;AACL,kBAAI,OAAO;AAAA,YACb;AAAA,UACF;AACA;AAAA,QACF;AAAA,MACF,OAAO;AACL,cAAM,IAAI,GAAG;AACb,YAAI,KAAK,EAAE,UAAU,MAAM,KAAK;AAC9B,YAAE,QAAQ,MAAM;AAChB,aAAG,OAAO,QAAQ,GAAG,MAAM,KAAK;AAChC,aAAG,QAAQ,MAAM;AACjB,eAAK;AAAA,QACP,OAAO;AACL,YAAE,OAAO,GAAG;AACZ,aAAG,QAAQ,MAAM;AACjB,aAAG,QAAQ,GAAG;AACd,aAAG,QAAQ,MAAM;AACjB,aAAG,QAAQ;AACX,aAAG,OAAO;AACV,kBAAQ,IAAI,CAAC,IAAI;AACjB,kBAAQ,IAAI,CAAC,IAAI;AACjB,kBAAQ,EAAE;AACV,kBAAQ,CAAC;AACT,kBAAQ,EAAE;AACV,cAAI,KAAK,GAAG;AACV,kBAAM,MAAM,QAAQ,IAAI,CAAC;AACzB,gBAAI,IAAI,UAAU,IAAI;AACpB,kBAAI,QAAQ;AAAA,YACd,OAAO;AACL,kBAAI,OAAO;AAAA,YACb;AAAA,UACF;AACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,UAAQ,CAAC,EAAE,QAAQ,MAAM;AACzB,SAAO2P,UAAS,KAAK,MAAM,QAAQ,CAAC,CAAC;AACvC,CAAC;AAGD,IAAM,cAAc,UAAQ1P,MAAK,MAAM,UAAU,OAAO;AAIxD,IAAMA,QAAO,CAAC,MAAM,cAAc;AAChC,QAAM,QAAQ,KAAK,OAAO,QAAQ,EAAE;AACpC,MAAIyG,SAAQ;AACZ,SAAO;AAAA,IACL,CAAC,OAAO,QAAQ,GAAG,MAAMzG,MAAK,MAAM,SAAS;AAAA,IAC7C,MAAM,MAAM;AACV,MAAAyG;AACA,YAAM,QAAQ,MAAM;AACpB,UAAI,cAAc,UAAU,SAAS;AACnC,cAAM,SAAS;AAAA,MACjB,OAAO;AACL,cAAM,SAAS;AAAA,MACjB;AACA,cAAQ,MAAM,MAAM;AAAA,QAClB,KAAK,QACH;AACE,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,OAAOA;AAAA,UACT;AAAA,QACF;AAAA,QACF,KAAK,QACH;AACE,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,OAAO,MAAM;AAAA,UACf;AAAA,QACF;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF;AAiNA,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,QAAQ;AACtD,MAAI,CAACmI,KAAI,MAAM,GAAG,GAAG;AACnB,WAAO;AAAA,EACT;AACA,QAAM,MAAM,KAAK;AACjB,QAAM,MAAM;AACZ,MAAI,OAAO,KAAK;AAChB,QAAM,QAAQ,CAAC;AACf,SAAO,SAAS,QAAW;AACzB,UAAM,IAAI,IAAI,KAAK,KAAK,GAAG;AAC3B,UAAM,KAAK,IAAI;AACf,QAAI,OAAO,KAAK,KAAK,GAAG,GAAG;AACzB,aAAO;AAAA,IACT,WAAW,KAAK,GAAG;AACjB,aAAO,KAAK;AAAA,IACd,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AACA,MAAI,MAAM,WAAW,GAAG;AACtB,WAAO;AAAA,EACT;AACA,QAAM,SAAS,IAAI,MAAM,MAAM,MAAM;AACrC,MAAI,IAAI,MAAM,MAAM,SAAS,CAAC;AAC9B,SAAO,OAAO,SAAS,CAAC,IAAI,IAAI,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK;AACtF,WAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC1C,QAAI,MAAM,CAAC;AACX,QAAI,EAAE,SAAS,MAAM,IAAI,CAAC,GAAG;AAC3B,aAAO,CAAC,IAAI,IAAI,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,OAAO,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK;AAAA,IAC/E,OAAO;AACL,aAAO,CAAC,IAAI,IAAI,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,OAAO,IAAI,CAAC,GAAG,EAAE,KAAK;AAAA,IAC9E;AAAA,EACF;AAEA,MAAI,OAAO,OAAO,SAAS,CAAC;AAE5B,MAAI,EAAE,SAAS,UAAa,EAAE,UAAU,QAAW;AAEjD,UAAMlO,SAAQ,OAAO;AACrB,QAAI,EAAE;AACN,WAAO,EAAE,SAAS,MAAM;AACtB,aAAO,KAAK,CAAC;AACb,UAAI,EAAE;AAAA,IACR;AAEA,UAAM,IAAI,OAAOA,SAAQ,CAAC;AAC1B,WAAO,KAAK,IAAI,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC;AACvE,WAAOA,SAAQ,CAAC,EAAE,MAAM,EAAE;AAC1B,WAAOA,SAAQ,CAAC,EAAE,QAAQ,EAAE;AAE5B,aAAS,IAAI,OAAO,SAAS,GAAG,KAAKA,QAAO,EAAE,GAAG;AAC/C,UAAI,OAAO,CAAC;AACZ,aAAO,CAAC,IAAI,IAAI,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,OAAO,IAAI,CAAC,GAAG,EAAE,KAAK;AAAA,IAC9E;AACA,WAAOA,SAAQ,CAAC,EAAE,OAAO,OAAOA,MAAK;AAAA,EACvC;AAGA,MAAI,OAAO,OAAO,SAAS,CAAC;AAC5B,MAAI,EAAE,UAAU,MAAM,KAAK;AAEzB,UAAM,IAAI,OAAO,OAAO,SAAS,CAAC;AAClC,QAAI,EAAE,SAAS,GAAG;AAChB,QAAE,OAAO;AAAA,IACX,WAAW,EAAE,UAAU,GAAG;AACxB,QAAE,QAAQ;AAAA,IACZ;AACA,WAAO,IAAI;AACX,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,aAAO,CAAC,EAAE;AAAA,IACZ;AACA,WAAOgP,UAAS,KAAK,OAAO,CAAC,CAAC;AAAA,EAChC,OAAO;AACL,QAAI,EAAE,SAAS,UAAa,EAAE,UAAU,QAAW;AAEjD,UAAI,EAAE,SAAS,QAAW;AACxB,QAAAuX,MAAK,GAAG,EAAE,IAAI;AAAA,MAChB,WAAW,EAAE,UAAU,QAAW;AAChC,QAAAA,MAAK,GAAG,EAAE,KAAK;AAAA,MACjB;AAEA,QAAE,QAAQ,MAAM;AAChB,eAAS,IAAI,GAAG,IAAI,OAAO,SAAS,GAAG,EAAE,GAAG;AAC1C,eAAO,CAAC,EAAE;AAAA,MACZ;AACA,aAAOvX,UAAS,KAAK,OAAO,CAAC,CAAC;AAAA,IAChC,WAAW,OAAO,WAAW,GAAG;AAE9B,aAAOA,UAAS,KAAK,MAAS;AAAA,IAChC,OAAO;AAEL,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,eAAO,CAAC,EAAE;AAAA,MACZ;AACA,YAAM,SAAS,OAAO,OAAO,SAAS,CAAC;AACvC,qBAAe,MAAM;AAErB,UAAI,OAAO,SAAS,GAAG;AACrB,eAAO,OAAO;AAAA,MAChB,OAAO;AACL,eAAO,QAAQ;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AACA,SAAOA,UAAS,KAAK,OAAO,CAAC,CAAC;AAChC,CAAC;AAgJD,IAAM,iBAAiB,WAAS;AAC9B,MAAI,GAAG,GAAG,GAAG;AACb,WAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC1C,QAAI,MAAM,CAAC;AACX,QAAI,MAAM,GAAG;AACX,QAAE,QAAQ,MAAM;AAChB;AAAA,IACF;AACA,QAAI,MAAM,IAAI,CAAC;AACf,QAAI,EAAE,SAAS,GAAG;AAChB,UAAI,EAAE;AACN,UAAI,MAAM,UAAa,EAAE,UAAU,UAAa,EAAE,MAAM,UAAU,MAAM,KAAK;AAC3E,YAAI,EAAE,QAAQ,MAAM,CAAC;AACrB,YAAI,EAAE,QAAQ,MAAM,EAAE,KAAK;AAC3B,UAAE,QAAQ,EAAE;AACZ,UAAE,OAAO;AACT,UAAE,QAAQ;AACV,UAAE,QAAQ,EAAE;AACZ,UAAE,QAAQ,MAAM;AAChB,UAAE,QAAQ,MAAM;AAChB,UAAE,QAAQ,MAAM;AAChB,gBAAQ,CAAC;AACT,gBAAQ,CAAC;AACT,YAAI,IAAI,GAAG;AACT,gBAAM,KAAK,MAAM,IAAI,CAAC;AACtB,cAAI,GAAG,SAAS,GAAG;AACjB,eAAG,OAAO;AAAA,UACZ,OAAO;AACL,eAAG,QAAQ;AAAA,UACb;AAAA,QACF;AACA,cAAM,IAAI,CAAC,IAAI;AACf;AAAA,MACF,WAAW,MAAM,UAAa,EAAE,SAAS,UAAa,EAAE,KAAK,UAAU,MAAM,KAAK;AAChF,YAAI,EAAE,QAAQ,MAAM,CAAC;AACrB,YAAI,EAAE,OAAO,MAAM,EAAE,IAAI;AACzB,UAAE,QAAQ,EAAE;AACZ,UAAE,OAAO,EAAE;AACX,UAAE,OAAO;AACT,UAAE,QAAQ;AACV,UAAE,QAAQ,EAAE;AACZ,UAAE,QAAQ,MAAM;AAChB,UAAE,QAAQ,MAAM;AAChB,UAAE,QAAQ,MAAM;AAChB,gBAAQ,CAAC;AACT,gBAAQ,CAAC;AACT,gBAAQ,CAAC;AACT,YAAI,IAAI,GAAG;AACT,gBAAM,KAAK,MAAM,IAAI,CAAC;AACtB,cAAI,GAAG,SAAS,GAAG;AACjB,eAAG,OAAO;AAAA,UACZ,OAAO;AACL,eAAG,QAAQ;AAAA,UACb;AAAA,QACF;AACA,cAAM,IAAI,CAAC,IAAI;AACf;AAAA,MACF;AACA,UAAI,MAAM,UAAa,EAAE,UAAU,MAAM,OAAO;AAC9C,YAAI,EAAE,UAAU,MAAM,KAAK;AACzB,YAAE,QAAQ,MAAM;AAChB,YAAE,QAAQ,QAAQ,GAAG,MAAM,GAAG;AAC9B;AAAA,QACF,OAAO;AACL,YAAE,QAAQ,QAAQ,GAAG,MAAM,GAAG;AAC9B;AAAA,QACF;AAAA,MACF,WAAW,MAAM,QAAW;AAC1B,YAAI,MAAM,CAAC;AACX,UAAE,QAAQ,EAAE;AACZ,UAAE,OAAO;AACT,UAAE,QAAQ,EAAE;AACZ,UAAE,QAAQ,MAAM;AAChB,gBAAQ,CAAC;AACT,gBAAQ,CAAC;AACT,YAAI,IAAI,GAAG;AACT,gBAAM,KAAK,MAAM,IAAI,CAAC;AACtB,cAAI,GAAG,SAAS,GAAG;AACjB,eAAG,OAAO;AAAA,UACZ,OAAO;AACL,eAAG,QAAQ;AAAA,UACb;AAAA,QACF;AACA,cAAM,IAAI,CAAC,IAAI;AACf,cAAM,CAAC,IAAI;AACX,YAAI,IAAI,IAAI,MAAM,QAAQ;AACxB,gBAAM,IAAI,CAAC,IAAI;AAAA,QACjB,OAAO;AACL,gBAAM,KAAK,CAAC;AAAA,QACd;AACA,YAAI,IAAI;AAAA,MACV;AAAA,IACF,OAAO;AACL,UAAI,EAAE;AACN,UAAI,MAAM,UAAa,EAAE,SAAS,UAAa,EAAE,KAAK,UAAU,MAAM,KAAK;AACzE,YAAI,EAAE,OAAO,MAAM,CAAC;AACpB,YAAI,EAAE,OAAO,MAAM,EAAE,IAAI;AACzB,UAAE,OAAO,EAAE;AACX,UAAE,QAAQ;AACV,UAAE,OAAO;AACT,UAAE,QAAQ,EAAE;AACZ,UAAE,QAAQ,MAAM;AAChB,UAAE,QAAQ,MAAM;AAChB,UAAE,QAAQ,MAAM;AAChB,gBAAQ,CAAC;AACT,gBAAQ,CAAC;AACT,YAAI,IAAI,GAAG;AACT,gBAAM,KAAK,MAAM,IAAI,CAAC;AACtB,cAAI,GAAG,UAAU,GAAG;AAClB,eAAG,QAAQ;AAAA,UACb,OAAO;AACL,eAAG,OAAO;AAAA,UACZ;AAAA,QACF;AACA,cAAM,IAAI,CAAC,IAAI;AACf;AAAA,MACF,WAAW,MAAM,UAAa,EAAE,UAAU,UAAa,EAAE,MAAM,UAAU,MAAM,KAAK;AAClF,YAAI,EAAE,OAAO,MAAM,CAAC;AACpB,YAAI,EAAE,QAAQ,MAAM,EAAE,KAAK;AAC3B,UAAE,OAAO,EAAE;AACX,UAAE,QAAQ,EAAE;AACZ,UAAE,QAAQ;AACV,UAAE,OAAO;AACT,UAAE,QAAQ,EAAE;AACZ,UAAE,QAAQ,MAAM;AAChB,UAAE,QAAQ,MAAM;AAChB,UAAE,QAAQ,MAAM;AAChB,gBAAQ,CAAC;AACT,gBAAQ,CAAC;AACT,gBAAQ,CAAC;AACT,YAAI,IAAI,GAAG;AACT,gBAAM,KAAK,MAAM,IAAI,CAAC;AACtB,cAAI,GAAG,UAAU,GAAG;AAClB,eAAG,QAAQ;AAAA,UACb,OAAO;AACL,eAAG,OAAO;AAAA,UACZ;AAAA,QACF;AACA,cAAM,IAAI,CAAC,IAAI;AACf;AAAA,MACF;AACA,UAAI,MAAM,UAAa,EAAE,UAAU,MAAM,OAAO;AAC9C,YAAI,EAAE,UAAU,MAAM,KAAK;AACzB,YAAE,QAAQ,MAAM;AAChB,YAAE,OAAO,QAAQ,GAAG,MAAM,GAAG;AAC7B;AAAA,QACF,OAAO;AACL,YAAE,OAAO,QAAQ,GAAG,MAAM,GAAG;AAC7B;AAAA,QACF;AAAA,MACF,WAAW,MAAM,QAAW;AAC1B,YAAI,MAAM,CAAC;AACX,UAAE,OAAO,EAAE;AACX,UAAE,QAAQ;AACV,UAAE,QAAQ,EAAE;AACZ,UAAE,QAAQ,MAAM;AAChB,gBAAQ,CAAC;AACT,gBAAQ,CAAC;AACT,YAAI,IAAI,GAAG;AACT,gBAAM,KAAK,MAAM,IAAI,CAAC;AACtB,cAAI,GAAG,UAAU,GAAG;AAClB,eAAG,QAAQ;AAAA,UACb,OAAO;AACL,eAAG,OAAO;AAAA,UACZ;AAAA,QACF;AACA,cAAM,IAAI,CAAC,IAAI;AACf,cAAM,CAAC,IAAI;AACX,YAAI,IAAI,IAAI,MAAM,QAAQ;AACxB,gBAAM,IAAI,CAAC,IAAI;AAAA,QACjB,OAAO;AACL,gBAAM,KAAK,CAAC;AAAA,QACd;AACA,YAAI,IAAI;AAAA,MACV;AAAA,IACF;AAAA,EACF;AACF;;;ACt+BA,IAAMvM,UAAQA;AA+Ed,IAAM+jB,YAAWA;AA4CjB,IAAMtY,OAAMA;AAOZ,IAAMuY,UAAS;AAQf,IAAMnnB,QAAO;AAoGb,IAAMonB,eAAc;;;AC5QpB,IAAMxa,WAAsB,uBAAO,IAAI,kBAAkB;AAYzD,IAAM,iBAAiB;AAAA,EACrB,CAACA,QAAM,GAAG;AAAA,IACR,IAAI,OAAK;AAAA,EACX;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,KAAK,OAAO,GAAG,QAAQ,KAAKA,QAAM,CAAC,CAAC;AAAA,EACvD;AAAA,EACA,CAACnF,OAAQ,EAAE,MAAM;AACf,WAAO,YAAY,IAAI,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO;AAAA,EAC/D;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAOzH,MAAK,KAAK,OAAO;AAAA,EAC1B;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAM,WAAW,aAAW;AAC1B,QAAM,IAAI,OAAO,OAAO,cAAc;AACtC,IAAE,UAAU;AACZ,SAAO;AACT;AAMA,IAAM,cAAc,OAAK,YAAY,GAAG4M,QAAM;AAM9C,IAAMzJ,UAAQ,OAAK,SAASA,QAAQ,CAAC,CAAC;AAkBtC,IAAM4M,OAAmB,qBAAK,GAAG,CAAC,MAAMhQ,WAAU6O,KAAM,KAAK,SAAS7O,MAAK,IAAI,OAAO,SAASonB,QAAO,KAAK,SAASpnB,QAAO,IAAI,CAAC,CAAC;AAgCjI,IAAMmK,UAAsB,qBAAK,GAAG,CAAC,MAAM,cAAc;AACvD,QAAM,MAAMgd,UAAS,KAAK,OAAO;AACjC,MAAI,MAAM/jB,QAAM,GAAG;AACnB,aAAWpD,UAAS,MAAM;AACxB,QAAI,UAAUA,MAAK,GAAG;AACpB,YAAMgQ,KAAI,KAAKhQ,MAAK;AAAA,IACtB;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAqFD,IAAM8L,UAAsB,qBAAK,GAAG,CAAC,MAAM9L,WAAU,SAASqnB,aAAY,KAAK,SAASrnB,MAAK,CAAC,CAAC;AAgC/F,IAAMqM,SAAqB,qBAAK,GAAG,CAAC,MAAM,SAAS;AACjD,QAAM,MAAM8a,UAAS,KAAK,OAAO;AACjC,MAAI,MAAM/jB,QAAM,GAAG;AACnB,aAAWpD,UAAS,MAAM;AACxB,UAAMgQ,KAAIhQ,MAAK,EAAE,GAAG;AAAA,EACtB;AACA,aAAWA,UAAS,MAAM;AACxB,UAAMgQ,KAAIhQ,MAAK,EAAE,GAAG;AAAA,EACtB;AACA,SAAO;AACT,CAAC;;;ACtPD,IAAM,sBAAsB;AAG5B,IAAM,mBAAgC,uBAAO,IAAI,mBAAmB;AAGpE,IAAM,qBAAqB;AAAA,EACzB,IAAI,OAAK;AACX;AAGA,IAAM,kBAAN,MAAM,iBAAgB;AAAA,EACpB,CAAC,gBAAgB,IAAI;AAAA,EACrB,YAAY,YAAY,QAAQ;AAC9B,SAAK,aAAa;AAClB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,QAAQ;AACN,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,QAAQ2D,UAASsO,SAAQ,QAAQ,OAAO;AACtC,SAAK,WAAW,QAAQtO,UAASsO,SAAQ,QAAQ,KAAK;AAAA,EACxD;AAAA,EACA,MAAMjS,QAAO,OAAO;AAClB,SAAK,WAAW,MAAMA,QAAO,KAAK;AAAA,EACpC;AAAA,EACA,SAAS,OAAOiS,SAAQ;AACtB,SAAK,WAAW,SAAS,OAAOA,OAAM;AAAA,EACxC;AAAA,EACA,UAAU,OAAO;AACf,SAAK,WAAW,UAAU,KAAK;AAAA,EACjC;AAAA,EACA,SAAS,OAAO;AACd,SAAK,WAAW,SAAS,KAAK;AAAA,EAChC;AAAA,EACA,IAAI,GAAG;AACL,WAAO,IAAI,iBAAgB,MAAM,MAAM,KAAK,KAAK,MAAM,GAAG5G,MAAI,CAAC,CAAC,CAAC;AAAA,EACnE;AAAA,EACA,IAAIoC,QAAO;AACT,WAAO,IAAI,IAAI,MAAMA,MAAK;AAAA,EAC5B;AACF;AAGA,IAAM,MAAN,MAAM,KAAI;AAAA,EACR,OAAO;AAAA,EACP,CAAC,gBAAgB,IAAI;AAAA,EACrB,YAAYD,OAAMC,QAAO;AACvB,SAAK,OAAOD;AACZ,SAAK,QAAQC;AAAA,EACf;AAAA,EACA,QAAQ;AACN,WAAOjB,KAAI,KAAK,KAAK,MAAM,GAAG,KAAK,MAAM,MAAM,CAAC;AAAA,EAClD;AAAA,EACA,QAAQ7I,UAASsO,SAAQ,QAAQ,OAAO;AACtC,SAAK,KAAK,QAAQtO,UAASsO,SAAQ,QAAQ,KAAK;AAChD,SAAK,MAAM,QAAQtO,UAASsO,SAAQ,QAAQ,KAAK;AAAA,EACnD;AAAA,EACA,MAAMjS,QAAO,OAAO;AAClB,SAAK,KAAK,MAAMA,QAAO,KAAK;AAC5B,SAAK,MAAM,MAAMA,QAAO,KAAK;AAAA,EAC/B;AAAA,EACA,SAAS,OAAOiS,SAAQ;AACtB,SAAK,KAAK,SAAS,OAAOA,OAAM;AAChC,SAAK,MAAM,SAAS,OAAOA,OAAM;AAAA,EACnC;AAAA,EACA,UAAU,OAAO;AACf,SAAK,KAAK,UAAU,KAAK;AACzB,SAAK,MAAM,UAAU,KAAK;AAAA,EAC5B;AAAA,EACA,SAAS,OAAO;AACd,SAAK,KAAK,SAAS,KAAK;AACxB,SAAK,MAAM,SAAS,KAAK;AAAA,EAC3B;AAAA,EACA,IAAI,GAAG;AACL,WAAO,IAAI,gBAAgB,MAAM,MAAM,KAAK,KAAK,MAAM,GAAG5G,MAAI,CAAC,CAAC,CAAC;AAAA,EACnE;AAAA,EACA,IAAIoC,QAAO;AACT,WAAO,IAAI,KAAI,MAAMA,MAAK;AAAA,EAC5B;AACF;AACA,IAAM,QAAQ,UAAQ,YAAY,MAAM,gBAAgB,KAAK,SAAS,MAAM,KAAK;AACjF,IAAM,QAAN,MAAY;AAAA,EACV,CAAC,gBAAgB,IAAI;AAAA,EACrB,SAAS,oBAAI,IAAI;AAAA,EACjB,QAAQ;AACN,WAAO,KAAK,MAAM,MAAM,KAAK,KAAK,MAAM,CAAC;AAAA,EAC3C;AAAA,EACA,QAAQ,UAAU,SAAS,SAAS,OAAO;AACzC,SAAK,OAAO,IAAI,KAAK;AAAA,EACvB;AAAA,EACA,MAAM,QAAQ,OAAO;AACnB,SAAK,OAAO,OAAO,KAAK;AAAA,EAC1B;AAAA,EACA,SAAS,QAAQ,SAAS;AAAA,EAE1B;AAAA,EACA,UAAU,QAAQ;AAAA,EAElB;AAAA,EACA,SAAS,QAAQ;AAAA,EAEjB;AAAA,EACA,IAAI,GAAG;AACL,WAAO,IAAI,gBAAgB,MAAM,MAAM,KAAK,KAAK,MAAM,GAAGpC,MAAI,CAAC,CAAC,CAAC;AAAA,EACnE;AAAA,EACA,IAAIoC,QAAO;AACT,WAAO,IAAI,IAAI,MAAMA,MAAK;AAAA,EAC5B;AAAA,EACA,MAAM,WAAW,QAAQ;AACvB,WAAO,UAAU;AAAA,EACnB;AACF;AACA,IAAM,QAAN,MAAY;AAAA,EACV,CAAC,gBAAgB,IAAI;AAAA,EACrB,YAAYwE,SAAQ;AAClB,SAAK,SAASA;AAAA,EAChB;AAAA,EACA,QAAQ;AACN,WAAO,KAAK;AAAA,EACd;AAAA,EACA,QAAQ,UAAU,SAAS,SAAS,QAAQ;AAAA,EAE5C;AAAA,EACA,MAAM,QAAQ,QAAQ;AAAA,EAEtB;AAAA,EACA,SAAS,QAAQ,SAAS;AAAA,EAE1B;AAAA,EACA,UAAU,QAAQ;AAAA,EAElB;AAAA,EACA,SAAS,QAAQ;AAAA,EAEjB;AAAA,EACA,IAAI,GAAG;AACL,WAAO,IAAI,gBAAgB,MAAM,MAAM,KAAK,KAAK,MAAM,GAAG5G,MAAI,CAAC,CAAC,CAAC;AAAA,EACnE;AAAA,EACA,IAAIoC,QAAO;AACT,WAAO,IAAI,IAAI,MAAMA,MAAK;AAAA,EAC5B;AAAA,EACA,MAAM,WAAW,QAAQ;AACvB,WAAO,UAAU;AAAA,EACnB;AACF;AACA,IAAM,WAAN,MAAe;AAAA,EACb,CAAC,gBAAgB,IAAI;AAAA,EACrB,YAAY,KAAK;AACf,SAAK,MAAM;AAAA,EACb;AAAA,EACA,QAAQ;AACN,WAAO,KAAK,MAAM5C,KAAI,KAAK,GAAG,CAAC;AAAA,EACjC;AAAA,EACA,QAAQ,UAAU,SAAS,SAAS,OAAO;AACzC,SAAK,KAAK,KAAK+E,KAAI,KAAK/E,KAAI,KAAK,GAAG,GAAGmF,KAAI,KAAK,CAAC,CAAC,CAAC;AAAA,EACrD;AAAA,EACA,MAAM,QAAQ,OAAO;AACnB,SAAK,KAAK,KAAKJ,KAAI,KAAK/E,KAAI,KAAK,GAAG,GAAGiB,QAAO,KAAK,CAAC,CAAC,CAAC;AAAA,EACxD;AAAA,EACA,SAAS,QAAQ,SAAS;AAAA,EAE1B;AAAA,EACA,UAAU,QAAQ;AAAA,EAElB;AAAA,EACA,SAAS,QAAQ;AAAA,EAEjB;AAAA,EACA,IAAI,GAAG;AACL,WAAO,IAAI,gBAAgB,MAAM,MAAM,KAAK,KAAK,MAAM,GAAGT,MAAI,CAAC,CAAC,CAAC;AAAA,EACnE;AAAA,EACA,IAAIoC,QAAO;AACT,WAAO,IAAI,IAAI,MAAMA,MAAK;AAAA,EAC5B;AAAA,EACA,MAAM,WAAW,QAAQ;AACvB,WAAO,UAAU;AAAA,EACnB;AACF;AAGA,IAAM,cAAc,MAAM;AACxB,SAAO,IAAI,MAAM;AACnB;AAGA,IAAM,QAAqB,qBAAK,WAAW;AAG3C,IAAM,aAAa,CAAAwE,YAAU;AAC3B,SAAO,IAAI,MAAMA,OAAM;AACzB;AAGA,IAAM7E,QAAoB,4BAAY,0BAA0B,MAAM,WAAWuF,KAAI,CAAC;;;AChMtF,IAAMmS,YAAW;AAKjB,IAAM,oBAAoB;AAK1B,IAAM,uBAAuB;AAK7B,IAAMwC,eAAc;AAiBpB,IAAMlkB,UAAQ;AAAA,EACZ,MAAM0hB;AACR;AAQA,IAAM5U,WAAU,CAAC,MAAM,SAAS;AAC9B,SAAO;AAAA,IACL,MAAMoX;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AACF;AAOA,IAAM/V,SAAQ,CAAC,MAAM,eAAe;AAClC,SAAO,UAAU,YAAY/F,IAAG,IAAI,CAAC;AACvC;AAGA,IAAM,YAAY,CAAC,aAAa,aAAa;AAC3C,MAAI,aAAa;AACjB,MAAI,UAAU;AACd,SAAO,WAAW,OAAO,GAAG;AAC1B,UAAM9J,QAAOqJ,cAAa,OAAO;AACjC,YAAQrJ,MAAK,MAAM;AAAA,MACjB,KAAKojB,WACH;AACE,kBAAU1Y,cAAa,OAAO;AAC9B;AAAA,MACF;AAAA,MACF,KAAK,mBACH;AACE,qBAAa,WAAW,IAAI1K,MAAK,UAAU;AAC3C,kBAAU0K,cAAa,OAAO;AAC9B;AAAA,MACF;AAAA,MACF,KAAK,sBACH;AACE,qBAAa,iBAAiB,YAAY1K,MAAK,UAAU;AACzD,kBAAU0K,cAAa,OAAO;AAC9B;AAAA,MACF;AAAA,MACF,KAAKkb,cACH;AACE,kBAAU3b,SAAQjK,MAAK,KAAK,EAAEiK,SAAQjK,MAAK,MAAM,EAAE0K,cAAa,OAAO,CAAC,CAAC;AACzE;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AACA,SAAO;AACT;AAGA,IAAM,mBAAmB,CAAC,MAAM,SAAS;AACvC,MAAI,OAAO,MAAM,IAAI,GAAG;AACtB,WAAOgB;AAAA,EACT,OAAO;AACL,QAAI,MAAM,IAAI,GAAG;AACf,aAAO,iBAAiB,KAAK,MAAM,IAAI,EAAE,IAAI,iBAAiB,KAAK,OAAO,IAAI,CAAC;AAAA,IACjF,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAGA,IAAMma,SAAQ,UAAQ;AACpB,MAAI,OAAO,MAAMna,KAAI,GAAG;AACtB,WAAOhK,OAAQ;AAAA,EACjB,OAAO;AACL,QAAI,MAAM,IAAI,GAAG;AACf,aAAO,KAAKmkB,OAAM,KAAK,IAAI,GAAGlb,OAAMkb,OAAM,KAAK,KAAK,CAAC,CAAC;AAAA,IACxD,OAAO;AACL,aAAOpc,MAAO,IAAI;AAAA,IACpB;AAAA,EACF;AACF;AAGA,IAAM6D,QAAO,CAAC,UAAU,aAAa;AACnC,MAAI,OAAO,UAAU,QAAQ,GAAG;AAC9B,WAAO5L;AAAA,EACT;AACA,QAAM,iBAAiBmkB,OAAM,QAAQ;AACrC,QAAM,iBAAiBA,OAAM,QAAQ;AACrC,QAAM,QAAQ,KAAK,gBAAgBtX,YAAW,cAAc,GAAGrE,QAAOxI,SAAO,CAACmO,QAAO,eAAerB,SAAQqB,QAAO;AAAA,IACjH,MAAM;AAAA,IACN;AAAA,EACF,CAAC,CAAC,CAAC;AACH,QAAM,UAAU,KAAK,gBAAgBtB,YAAW,cAAc,GAAGrE,QAAOxI,SAAO,CAACmO,QAAO,eAAerB,SAAQqB,QAAO;AAAA,IACnH,MAAM;AAAA,IACN;AAAA,EACF,CAAC,CAAC,CAAC;AACH,SAAOrB,SAAQ,OAAO,OAAO;AAC/B;AAGA,IAAM0B,UAAsB,gBAAAzG,OAAK;AAAA,EAC/B,OAAA/H;AAAA,EACA,OAAAmO;AAAA,EACA,SAAArB;AAAA,EACA,MAAAlB;AACF,CAAC;;;AClID,IAAM,kBAAN,MAAsB;AAAA;AAAA;AAAA;AAAA,EAIpB,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA,EAIX,aAAa,MAAM,UAAU;AAC3B,QAAI,SAAS;AACb,QAAI;AACJ,SAAK,QAAQ,GAAG,QAAQ,KAAK,QAAQ,QAAQ,SAAS;AACpD,UAAI,KAAK,QAAQ,KAAK,EAAE,CAAC,KAAK,UAAU;AACtC,iBAAS,KAAK,QAAQ,KAAK;AAAA,MAC7B,OAAO;AACL;AAAA,MACF;AAAA,IACF;AACA,QAAI,QAAQ;AACV,aAAO,CAAC,EAAE,KAAK,IAAI;AAAA,IACrB,OAAO;AACL,YAAM,aAAa,CAAC;AACpB,eAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,mBAAW,KAAK,KAAK,QAAQ,CAAC,CAAC;AAAA,MACjC;AACA,iBAAW,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAClC,eAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAChD,mBAAW,KAAK,KAAK,QAAQ,CAAC,CAAC;AAAA,MACjC;AACA,WAAK,UAAU;AAAA,IACjB;AAAA,EACF;AACF;AAMA,IAAM,iBAAN,MAAqB;AAAA;AAAA;AAAA;AAAA,EAInB,UAAU;AAAA;AAAA;AAAA;AAAA,EAIV,QAAQ,IAAI,gBAAgB;AAAA,EAC5B,YAIA,wBAAwB;AACtB,SAAK,yBAAyB;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,OAAO;AACpB,UAAM,QAAQ,KAAK,MAAM;AACzB,SAAK,MAAM,UAAU,CAAC;AACtB,eAAW,CAAC,GAAG,KAAK,KAAK,OAAO;AAC9B,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAM,CAAC,EAAE;AAAA,MACX;AAAA,IACF;AACA,QAAI,KAAK,MAAM,QAAQ,WAAW,GAAG;AACnC,WAAK,UAAU;AAAA,IACjB,OAAO;AACL,WAAK,OAAO,KAAK;AAAA,IACnB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,QAAQ,GAAG;AAChB,QAAI,SAAS,KAAK,wBAAwB;AACxC,MAAAY,KAAI,MAAM,KAAK,eAAe,CAAC,GAAG,CAAC;AAAA,IACrC,OAAO;AACL,cAAQ,QAAQ,MAAM,EAAE,KAAK,MAAM,KAAK,eAAe,QAAQ,CAAC,CAAC;AAAA,IACnE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,OAAO;AACjB,WAAO,MAAM,iBAAiB,MAAM,YAAY,wBAAwB,IAAI,MAAM,YAAY,yBAAyB,IAAI;AAAA,EAC7H;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,MAAM,UAAU;AAC3B,SAAK,MAAM,aAAa,MAAM,QAAQ;AACtC,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,UAAU;AACf,WAAK,OAAO;AAAA,IACd;AAAA,EACF;AACF;AAMA,IAAM,mBAAgC,4BAA0B,uBAAO,IAAI,mCAAmC,GAAG,MAAM,IAAI,eAAe,IAAI,CAAC;AAM/I,IAAM,gBAAN,MAAoB;AAAA;AAAA;AAAA;AAAA,EAIlB,QAAQ,IAAI,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAK5B,WAAW;AAAA;AAAA;AAAA;AAAA,EAKX,aAAa,MAAM,UAAU;AAC3B,QAAI,KAAK,UAAU;AACjB,uBAAiB,aAAa,MAAM,QAAQ;AAAA,IAC9C,OAAO;AACL,WAAK,MAAM,aAAa,MAAM,QAAQ;AAAA,IACxC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,OAAO;AACjB,WAAO,MAAM,iBAAiB,MAAM,YAAY,wBAAwB,IAAI,MAAM,YAAY,yBAAyB,IAAI;AAAA,EAC7H;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,WAAO,KAAK,MAAM,QAAQ,SAAS,GAAG;AACpC,YAAM,QAAQ,KAAK,MAAM;AACzB,WAAK,MAAM,UAAU,CAAC;AACtB,iBAAW,CAAC,GAAG,KAAK,KAAK,OAAO;AAC9B,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAM,CAAC,EAAE;AAAA,QACX;AAAA,MACF;AAAA,IACF;AACA,SAAK,WAAW;AAAA,EAClB;AACF;AA4IA,IAAM,mBAAgC,4BAA0B,uBAAO,IAAI,kCAAkC,GAAG,MAAM,mBAAmB,gBAAgB,CAAC;AAG1J,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,cAAc,gBAAgB,MAAM,kBAAkB,SAAS,CAAC;;;AChRlH,IAAM,eAA4B,gBAAAlK,SAAQ,sBAAsB;AAEhE,IAAM,cAA2B,gBAAAA,SAAQ,qBAAqB;AAE9D,IAAM,iBAA8B,gBAAAA,SAAQ,wBAAwB;AAEpE,IAAM,gBAA6B,gBAAAA,SAAQ,uBAAuB;AAElE,IAAM,iBAA8B,uBAAqB,gBAAAmhB,WAAU,0BAAuC,4BAAY;AAAA,EACpH,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AACT,CAAC,CAAC,GAAG,aAAa,cAAc;AAKhC,IAAM,2BAA2B;AAKjC,IAAM,uBAAuB;AAK7B,IAAM,2BAA2B;AAKjC,IAAM,uBAAuB;AAAA,EAC3B,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AACA,IAAM,SAAS,OAAK;AAClB,QAAM,IAAI,MAAM,uBAAuB,KAAK,UAAU,CAAC,CAAC,qEAAqE;AAC/H;AACA,IAAM,gBAAgB;AAAA,EACpB,CAAC,aAAa,GAAG,CAAC,GAAG,MAAM7mB,WAAU;AACnC,WAAO,KAAK,GAAGA,MAAK;AAAA,EACtB;AAAA,EACA,CAAC,QAAQ,GAAG,CAAC,GAAG,MAAMA,WAAU;AAC9B,WAAO,KAAK,GAAG,YAAYA,MAAK,CAAC;AAAA,EACnC;AAAA,EACA,CAAC,yBAAyB,GAAG,CAAC,GAAG,MAAMA,WAAU;AAC/C,WAAO,KAAK,GAAGA,MAAK;AAAA,EACtB;AAAA,EACA,CAAC,eAAe,GAAG,CAAC,MAAM,MAAMA,WAAU;AACxC,SAAK,kBAAkB,KAAK,eAAe,KAAK,KAAK;AACrD,QAAI,cAAgB,KAAK,aAAa,KAAK,KAAK,cAAc,GAAG;AAC/D,aAAO,cAAc,KAAK,oBAAoB,CAAC;AAAA,IACjD,OAAO;AACL,aAAO,YAAYA,MAAK;AAAA,IAC1B;AAAA,EACF;AAAA,EACA,CAAC,QAAQ,GAAG,CAAC,MAAM,MAAMA,WAAU;AACjC,SAAK,GAAGA,MAAK;AACb,QAAI,KAAK,GAAG,GAAG;AACb,WAAK,UAAU,IAAI;AACnB,aAAO,KAAK,GAAG;AAAA,IACjB,OAAO;AACL,aAAO2S;AAAA,IACT;AAAA,EACF;AACF;AACA,IAAM,8BAA8B;AAAA,EAClC,CAAC,mBAAmB,GAAG,CAAC,MAAMoT,eAAc,KAAK,YAAY;AAC3D,SAAK,0BAA0B,QAAQ,KAAK;AAC5C,WAAO,cAAgBA,aAAY,IAAI,cAAc,QAAQ,KAAK,IAAI;AAAA,EACxE;AAAA,EACA,CAAC,SAAS,GAAG,CAAC,OAAO,eAAe,MAAM,aAAa;AACrD,UAAM,IAAI,MAAM,uEAAuE;AAAA,EACzF;AAAA,EACA,CAAC,WAAW,GAAG,CAAC,MAAMA,eAAc,KAAK,YAAY;AACnD,YAAQ,QAAQ,MAAMzgB,SAAQygB,aAAY,CAAC;AAC3C,WAAO;AAAA,EACT;AAAA,EACA,CAAC,YAAY,GAAG,CAAC,OAAO,eAAe,KAAK,aAAa;AACvD,WAAOrb,SAAU,SAAW,GAAG,MAAM,GAAG;AAAA,EAC1C;AACF;AAKA,IAAM,qBAAqB,UAAQ,yBAAyBC,SAAU,IAAI,GAAG,+BAA6B,2BAA2B,4BAA4B,yBAAyB,GAAG,CAAC,CAAC,YAAY8F,WAAU,MAAM;AACzN,QAAMpF,QAAM,oBAAI,IAAI;AACpB,aAAW,SAASoF,aAAY;AAC9B,eAAW,SAAS,OAAO;AACzB,MAAApF,MAAI,IAAI,MAAM,SAAS,KAAK;AAAA,IAC9B;AAAA,EACF;AACA,SAAO,gBAAgB,oBAAoB,WAAW,OAAOoF,WAAU,GAAGA,YAAW,KAAK,CAAC,GAAG,mBAAmBpF,KAAG;AACtH,GAAG,KAAK,CAAC;AAGT,IAAM,eAAN,MAAmB;AAAA,EACjB,CAAC,WAAW,IAAI;AAAA,EAChB,CAAC,kBAAkB,IAAI;AAAA,EACvB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,SAAS,IAAI,MAAM;AAAA,EACnB,YAAY;AAAA,EACZ,aAAa,IAAI,MAAM;AAAA,EACvB,WAAW;AAAA,EACX,SAAS,CAAC;AAAA,EACV,oBAAoB;AAAA,EACpB,mBAAmB;AAAA,EACnB,aAAa;AAAA,EACb,SAAS,CAAC,KAAK;AAAA,EACf,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,YAAYiF,UAAS,YAAY,eAAe;AAC9C,SAAK,gBAAgB;AACrB,SAAK,WAAWA;AAChB,SAAK,aAAa;AAClB,SAAK,cAAc,KAAK,YAAY,iBAAiB;AACrD,SAAK,aAAa,KAAK,YAAY,gBAAgB;AACnD,QAAI,eAAe,aAAa,GAAG;AACjC,YAAM,OAAO,KAAK,YAAY,mBAAmB;AACjD,mBAAa,aAAa,GAAG,IAAI;AACjC,kBAAY,aAAa,GAAG,IAAI;AAAA,IAClC;AACA,SAAK,UAAUzF,KAAM,KAAK,YAAY,eAAe,GAAG,SAAS;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK;AACH,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAOoH,SAAQ;AACb,SAAK,KAAK,OAAOA,OAAM,CAAC;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,WAAO,KAAK,IAAI,CAAC,GAAG7Q,YAAWA,OAAM;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe;AACb,WAAO,KAAK,IAAI,CAAC,OAAOA,YAAW;AACjC,UAAI6kB,QAAO7kB,OAAM,GAAG;AAClB,eAAO,MAAM;AAAA,MACf;AACA,aAAOA,QAAO;AAAA,IAChB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,WAAOiP,YAAW,IAAI;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,WAAO,KAAK,IAAI,WAAS,MAAM,KAAK,MAAM,YAAY,CAAC,CAAC;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc;AACZ,QAAI,KAAK,cAAc,MAAM;AAC3B,WAAK,YAAY,oBAAI,IAAI;AAAA,IAC3B;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,sBAAsB;AACpB,WAAO,KAAK,YAAY,uBAAuB;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY;AACV,WAAO,KAAK,IAAI,WAAS,MAAM,aAAa,CAAC;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,GAAG;AACL,WAAO,QAAQ,MAAM;AACnB,YAAMpP,YAAW,mBAAmB,KAAK,QAAQ;AACjD,WAAK,KAAK,SAAS,CAAC,OAAOG,YAAW;AACpC,2BAAmBH,WAAU,KAAK,MAAM,EAAE,OAAOG,OAAM,CAAC,CAAC;AAAA,MAC3D,CAAC,CAAC;AACF,aAAO,cAAcH,SAAQ;AAAA,IAC/B,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK,SAAS;AACZ,SAAK,OAAO,KAAK,OAAO;AACxB,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,WAAW;AAChB,WAAK,0BAA0B;AAAA,IACjC;AAAA,EACF;AAAA,EACA,QAAQ;AACN,WAAO,MAAM,CAAAiD,YAAU;AACrB,YAAM,KAAK,CAAAkO,UAAQlO,QAAO,QAAQkO,KAAI,CAAC;AACvC,WAAK,KAAK,SAAS,CAAC,OAAO,MAAM;AAC/B,YAAI,MAAM,eAAe,MAAM;AAC7B,aAAG,KAAK,UAAU;AAAA,QACpB,OAAO;AACL,gBAAM,YAAY,EAAE;AAAA,QACtB;AAAA,MACF,CAAC,CAAC;AACF,aAAO,KAAK,MAAM,KAAK,KAAK,SAAS,CAAC,OAAO,MAAM;AACjD,cAAM,eAAe,EAAE;AAAA,MACzB,CAAC,CAAC,CAAC;AAAA,IACL,GAAG,KAAK,GAAG;AAAA,EACb;AAAA,EACA,aAAa;AACX,WAAO,iBAAiB,CAAC,aAAa,iBAAiB;AACrD,YAAM,gBAAgB,YAAY,GAAG;AACrC,YAAM,kBAAkB,YAAY,aAAa;AACjD,YAAM,qBAAqB,aAAa;AACxC,YAAM,iBAAiB,KAAK,aAAa;AACzC,YAAM,mBAAmB,OAAO,iBAAiB,eAAe,cAAc;AAC9E,kBAAY,aAAa,gBAAgB;AACzC,YAAM,sBAAsB,YAAY,YAAY,mBAAmB;AACvE,YAAMb,SAAQ;AAAA,QAAKvC,MAAK,oBAAoB,mBAAmB;AAAA;AAAA,QAE/DqD,SAAQ,YAAY;AAAA,QAAGA,SAAQ,QAAQ;AAAA,MAAC;AACxC,aAAO,mBAAmBd,MAAK;AAAA,IACjC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO;AACL,WAAO,KAAK,MAAM,aAAa,KAAK,UAAU,CAAC;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa;AACX,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgBjB,UAAS;AACvB,WAAO,KAAK,MAAM,KAAK,KAAK,gBAAgB,UAAUA,QAAO,CAAC,CAAC,CAAC;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,UAAU;AACpB,QAAI,KAAK,eAAe,MAAM;AAC5B,eAAS,KAAK,UAAU;AAAA,IAC1B,OAAO;AACL,WAAK,WAAW,KAAK,QAAQ;AAAA,IAC/B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,eAAe,UAAU;AACvB,SAAK,aAAa,KAAK,WAAW,OAAO,OAAK,MAAM,QAAQ;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,eAAe;AACb,SAAK,YAAY,qBAAqB,KAAK,aAAa;AACxD,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB,UAAU;AAC7B,SAAK,aAAa,QAAQ,KAAK,YAAY,QAAQ;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,YAAY,UAAU;AACpB,QAAI,KAAK,WAAW,OAAO,IAAI,QAAQ,GAAG;AACxC,aAAO,KAAK,WAAW,OAAO,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC;AAAA,IAClD;AACA,WAAO,SAAS;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,UAAUtQ,QAAO;AAC3B,SAAK,aAAa,UAAU,KAAK,YAAY;AAAA,MAC3C,SAAS,KAAK;AAAA,MACd;AAAA,MACA,OAAAA;AAAA,IACF,CAAC;AACD,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,kBAAkB;AAChB,SAAK,UAAU6K,KAAM,KAAK,YAAY,eAAe,GAAG,SAAS;AACjE,SAAK,cAAc,KAAK,YAAY,iBAAiB;AACrD,SAAK,aAAa,KAAK,YAAY,gBAAgB;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAama,YAAW;AACtB,SAAK,aAAaA;AAClB,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAS,OAAO;AACd,SAAK,YAAY,EAAE,IAAI,KAAK;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,OAAO;AACjB,SAAK,YAAY,EAAE,OAAO,KAAK;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,4BAA4B;AAC1B,QAAI,UAAU;AACd,WAAO,SAAS;AACd,UAAI,mBAAmB;AACvB,YAAM,OAAO,WAAW,eAAe;AACvC,iBAAW,eAAe,IAAI;AAC9B,UAAI;AACF,eAAO,qBAAqB,0BAA0B;AACpD,6BAAmB,KAAK,OAAO,WAAW,IAAI,uBAAuB,KAAK,8BAA8B,KAAK,OAAO,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;AAAA,QACrI;AAAA,MACF,UAAE;AACA,aAAK,WAAW;AAChB,mBAAW,eAAe,IAAI;AAAA,MAChC;AAIA,UAAI,KAAK,OAAO,SAAS,KAAK,CAAC,KAAK,UAAU;AAC5C,aAAK,WAAW;AAChB,YAAI,qBAAqB,0BAA0B;AACjD,eAAK,0BAA0B;AAC/B,oBAAU;AAAA,QACZ,OAAO;AACL,oBAAU;AAAA,QACZ;AAAA,MACF,OAAO;AACL,kBAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,4BAA4B;AAC1B,SAAK,WAAW,aAAa,KAAK,KAAK,KAAK,YAAY,yBAAyB,CAAC;AAAA,EACpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,uBAAuBe,eAAc,MAAM;AACzC,QAAI,MAAM;AACV,WAAO,KAAK,OAAO,SAAS,GAAG;AAC7B,YAAM,UAAU,KAAK,OAAO,OAAO,GAAG,CAAC,EAAE,CAAC;AAE1C,YAAM,4BAA4B,QAAQ,IAAI,EAAE,MAAMA,eAAc,KAAK,OAAO;AAAA,IAClF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,gBAAgB;AACd,WAAO,CAACvW,SAAQ,KAAK,YAAY,uBAAuB,CAAC;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,oBAAoB7N,QAAO;AACzB,UAAM,QAAQ,KAAK,YAAY,uBAAuB;AACtD,SAAK,YAAY,yBAAyB,WAAa,OAAOA,MAAK,CAAC;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,0BAA0BA,QAAO;AAC/B,SAAK,oBAAoBA,MAAK;AAC9B,SAAK,iCAAiC;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,mCAAmC;AACjC,QAAI,KAAK,cAAc,QAAQ,KAAK,UAAU,SAAS,GAAG;AACxD,aAAO;AAAA,IACT;AACA,QAAI,OAAO;AACX,eAAW,SAAS,KAAK,WAAW;AAClC,YAAM,KAAK,gBAAgB,UAAU,KAAK,GAAG,CAAC,CAAC,CAAC;AAChD,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,uBAAuB;AACrB,QAAI,KAAK,iCAAiC,GAAG;AAC3C,YAAM,KAAK,KAAK,UAAU,OAAO;AACjC,WAAK,YAAY;AACjB,UAAIskB,UAAS;AACb,YAAM,OAAO,MAAM;AACjB,cAAM5gB,QAAO,GAAG,KAAK;AACrB,YAAI,CAACA,MAAK,MAAM;AACd,iBAAOqN,QAAOrN,MAAK,MAAM,MAAM,CAAC;AAAA,QAClC,OAAO;AACL,iBAAO,KAAK,MAAM;AAChB,YAAA4gB,UAAS;AAAA,UACX,CAAC;AAAA,QACH;AAAA,MACF;AACA,aAAO,UAAU;AAAA,QACf,OAAO,MAAM,CAACA;AAAA,QACd;AAAA,QACA,MAAM,MAAM;AAAA,QAEZ;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT;AAAA,EACA,gBAAgB7T,OAAM;AACpB,QAAI,eAAe,KAAK,aAAa,GAAG;AACtC,YAAM,OAAO,KAAK,YAAY,mBAAmB;AACjD,kBAAY,aAAa,IAAI,IAAI;AACjC,cAAQA,MAAK,MAAM;AAAA,QACjB,KAAK,YACH;AACE,yBAAe,aAAa,GAAG,IAAI;AACnC;AAAA,QACF;AAAA,QACF,KAAK,YACH;AACE,wBAAc,aAAa,GAAG,IAAI;AAClC;AAAA,QACF;AAAA,MACJ;AAAA,IACF;AACA,QAAIA,MAAK,SAAS,WAAW;AAC3B,YAAM,QAAQ,KAAK,YAAY,6BAA6B;AAC5D,UAAI,CAAC,kBAAkBA,MAAK,KAAK,KAAK,MAAM,SAAS,QAAQ;AAC3D,aAAK,IAAI,6CAA6CA,MAAK,OAAO,KAAK;AAAA,MACzE;AAAA,IACF;AAAA,EACF;AAAA,EACA,aAAaA,OAAM;AACjB,SAAK,aAAaA;AAClB,QAAI,eAAe,KAAK,aAAa,GAAG;AACtC,YAAM,OAAO,KAAK,YAAY,mBAAmB;AACjD,YAAM,kBAAkB,KAAK,GAAG,EAAE;AAClC,YAAM,iBAAgB,oBAAI,KAAK,GAAE,QAAQ;AACzC,qBAAe,aAAa,gBAAgB,iBAAiB,IAAI;AAAA,IACnE;AACA,SAAK,gBAAgBA,KAAI;AACzB,aAAS,IAAI,KAAK,WAAW,SAAS,GAAG,KAAK,GAAG,KAAK;AACpD,WAAK,WAAW,CAAC,EAAEA,KAAI;AAAA,IACzB;AAAA,EACF;AAAA,EACA,aAAa;AACX,WAAO,KAAK,YAAY,cAAc;AAAA,EACxC;AAAA,EACA,IAAI,SAASzQ,QAAO,kBAAkB;AACpC,UAAM+kB,YAAWvZ,QAAO,gBAAgB,IAAI,iBAAiB,QAAQ,KAAK,YAAY,eAAe;AACrG,UAAM,kBAAkB,KAAK,YAAY,sBAAsB;AAC/D,QAAIqV,aAAY,iBAAiBkE,SAAQ,GAAG;AAC1C;AAAA,IACF;AACA,UAAM,QAAQ,KAAK,YAAY,cAAc;AAC7C,UAAM,cAAc,KAAK,YAAY,qBAAqB;AAC1D,UAAM,UAAU,KAAK,WAAW;AAChC,UAAM,aAAa,KAAK,aAAa;AACrC,QAAInhB,MAAK,OAAO,IAAI,GAAG;AACrB,YAAM,eAAesF,KAAM,KAAK,YAAY,eAAe,GAAG,QAAQ;AACtE,YAAMrD,QAAO,IAAI,KAAK,aAAa,wBAAwB,CAAC;AAC5D,iBAAW,UAAU,SAAS;AAC5B,eAAO,IAAI;AAAA,UACT,SAAS,KAAK,GAAG;AAAA,UACjB,UAAAkf;AAAA,UACA;AAAA,UACA,OAAA/kB;AAAA,UACA,SAAS;AAAA,UACT;AAAA,UACA;AAAA,UACA,MAAA6F;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,8BAA8B,SAAS;AACrC,YAAQ,QAAQ,MAAM;AAAA,MACpB,KAAK,cACH;AACE,eAAO;AAAA,MACT;AAAA,MACF,KAAK,qBACH;AACE,aAAK,0BAA0B,QAAQ,KAAK;AAC5C,YAAI,KAAK,sBAAsB,MAAM;AACnC,eAAK,kBAAkB,cAAc,QAAQ,KAAK,CAAC;AACnD,eAAK,oBAAoB;AAAA,QAC3B;AACA,eAAO;AAAA,MACT;AAAA,MACF,KAAK,WACH;AACE,aAAK,oBAAoB;AACzB,aAAK,mBAAmB;AACxB,aAAK,eAAe,QAAQ,MAAM;AAClC,eAAO;AAAA,MACT;AAAA,MACF,KAAK,aACH;AACE,gBAAQ,QAAQ,MAAM,KAAK,eAAe,OAAOtG,QAAO8kB,WAAU,KAAK,eAAe,KAAK,gBAAgB,CAAC;AAC5G,eAAO;AAAA,MACT;AAAA,MACF,SACE;AACE,eAAO,OAAO,OAAO;AAAA,MACvB;AAAA,IACJ;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,eAAe,SAAS;AACtB,SAAK,YAAY,SAAS,IAAI;AAC9B,QAAI;AACF,UAAI/T,UAAS,cAAgB,KAAK,aAAa,KAAK,KAAK,cAAc,IAAI,cAAc,KAAK,oBAAoB,CAAC,IAAI;AACvH,aAAOA,YAAW,MAAM;AACtB,YAAI;AACF,gBAAM,MAAMA;AACZ,gBAAMG,QAAO,KAAK,QAAQ,GAAG;AAC7B,eAAK,gBAAgB,KAAK,KAAK,eAAe7R,QAAO,QAAQ,CAAC;AAC9D,gBAAMinB,gBAAe,KAAK,qBAAqB;AAC/C,cAAIA,kBAAiB,MAAM;AACzB,YAAAvV,UAASvH,SAAU8c,eAAc,MAAMpV,KAAI;AAAA,UAC7C,OAAO;AACL,gBAAI,KAAK,OAAO,WAAW,GAAG;AAE5B,mBAAK,aAAaA,KAAI;AAAA,YACxB,OAAO;AAIL,mBAAK,KAAK,OAAOA,KAAI,CAAC;AAAA,YACxB;AACA,YAAAH,UAAS;AAAA,UACX;AAAA,QACF,SAAS,GAAG;AACV,cAAI,SAAS,CAAC,GAAG;AACf,gBAAI,EAAE,QAAQ,UAAU;AACtB,kBAAI,oBAAoB,KAAK,aAAa,GAAG;AAC3C,qBAAK,KAAK2P,UAAS,CAAC;AACpB,qBAAK,KAAK,OAAO,QAAQ,CAAC;AAC1B,gBAAA3P,UAAS;AAAA,cACX,OAAO;AACL,gBAAAA,UAAS;AAAA,cACX;AAAA,YACF,WAAW,EAAE,QAAQ,UAAU;AAE7B,cAAAA,UAAS;AAAA,YACX;AAAA,UACF,OAAO;AACL,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,IACF,UAAE;AACA,WAAK,YAAY,UAAU,IAAI;AAAA,IACjC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAMA,SAAQ;AACZ,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,WAAW;AAChB,YAAM,OAAO,WAAW,eAAe;AACvC,iBAAW,eAAe,IAAI;AAC9B,UAAI;AACF,aAAK,eAAeA,OAAM;AAAA,MAC5B,UAAE;AACA,aAAK,WAAW;AAChB,mBAAW,eAAe,IAAI;AAK9B,YAAI,KAAK,OAAO,SAAS,GAAG;AAC1B,eAAK,0BAA0B;AAAA,QACjC;AAAA,MACF;AAAA,IACF,OAAO;AACL,WAAK,KAAK,OAAOA,OAAM,CAAC;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,UAAUA,SAAQ;AAChB,SAAK,KAAK,OAAOA,OAAM,CAAC;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,kBAAkB,iBAAiB,SAAS;AAC1C,UAAM,kBAAkBV,OAAM,iBAAiB,OAAO;AACtD,eAAW,eAAe,IAAI;AAC9B,SAAK,gBAAgB;AACrB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAcwU,eAAc,eAAe;AACzC,QAAI,gBAAgB;AACpB,UAAM,WAAW,CAAA9T,YAAU;AACzB,UAAI,CAAC,eAAe;AAClB,wBAAgB;AAChB,aAAK,KAAK,OAAOA,OAAM,CAAC;AAAA,MAC1B;AAAA,IACF;AACA,QAAI,cAAgB8T,aAAY,GAAG;AACjC,WAAK,oBAAoB;AAAA,IAC3B;AACA,QAAI;AACF,oBAAc,QAAQ;AAAA,IACxB,SAAS,GAAG;AACV,eAAS,UAAU,IAAI,CAAC,CAAC,CAAC;AAAA,IAC5B;AAAA,EACF;AAAA,EACA,UAAU,MAAM;AACd,SAAK,OAAO,KAAK,IAAI;AACrB,QAAI,KAAK,QAAQ,UAAU;AACzB,WAAK,OAAO,KAAK,IAAI;AAAA,IACvB;AACA,QAAI,KAAK,QAAQ,eAAe;AAC9B,WAAK,OAAO,KAAK,KAAK;AAAA,IACxB;AAAA,EACF;AAAA,EACA,WAAW;AACT,UAAM,OAAO,KAAK,OAAO,IAAI;AAC7B,QAAI,MAAM;AACR,UAAI,KAAK,QAAQ,YAAY,KAAK,QAAQ,eAAe;AACvD,aAAK,OAAO,IAAI;AAAA,MAClB;AACA,aAAO;AAAA,IACT;AACA;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,QAAI,QAAQ,KAAK,SAAS;AAC1B,WAAO,OAAO;AACZ,UAAI,MAAM,QAAQ,eAAe;AAC/B,eAAO;AAAA,MACT;AACA,cAAQ,KAAK,SAAS;AAAA,IACxB;AAAA,EACF;AAAA,EACA,kBAAkB;AAChB,QAAI,QAAQ,KAAK,SAAS;AAC1B,WAAO,OAAO;AACZ,UAAI,MAAM,QAAQ,iBAAiB,MAAM,QAAQ,UAAU;AACzD,eAAO;AAAA,MACT;AACA,cAAQ,KAAK,SAAS;AAAA,IACxB;AAAA,EACF;AAAA,EACA,CAAC,MAAM,EAAE,IAAI;AACX,WAAO1a,MAAM,YAAY,cAAc,GAAG,CAAA1H,aAAW;AACnD,UAAI;AACF,eAAO2I,WAAU3I,UAAS,EAAE;AAAA,MAC9B,SAAS,GAAG;AACV,gBAAQ,IAAI,CAAC;AACb,cAAM;AAAA,MACR;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,CAAC,MAAM,EAAE,IAAI;AACX,WAAOxC,MAAK,GAAG,IAAI;AAAA,EACrB;AAAA,EACA,CAAC,MAAM,EAAE,GAAG;AACV,WAAOA,MAAK,uBAAuB,CAAC;AAAA,EACtC;AAAA,EACA,CAAC,OAAO,EAAE,IAAI;AACZ,WAAO,YAAY,GAAG,KAAK;AAAA,EAC7B;AAAA,EACA,CAAC,MAAM,EAAE,IAAI;AACX,WAAO,YAAY,GAAG,KAAK;AAAA,EAC7B;AAAA,EACA,CAAC,OAAO,EAAE,IAAI;AACZ,UAAMnB,SAAQ,GAAG,GAAG;AACpB,UAAM,OAAO,KAAK,mBAAmB;AACrC,QAAI,SAAS,QAAW;AACtB,UAAI,EAAE,KAAK,OAAO,gBAAgB;AAEhC,eAAO,IAAI;AAAA,MACb;AAEA,aAAO,cAAc,KAAK,GAAG,EAAE,MAAM,MAAMA,MAAK;AAAA,IAClD,OAAO;AACL,YAAM,YAAYA,MAAK;AAAA,IACzB;AAAA,EACF;AAAA,EACA,CAAC,UAAU,EAAE,IAAI;AACf,UAAM,SAAS;AACf,UAAM,OAAO,KAAK,mBAAmB;AACrC,QAAI,SAAS,QAAW;AACtB,UAAI,EAAE,KAAK,OAAO,gBAAgB;AAEhC,eAAO,IAAI;AAAA,MACb;AAEA,aAAO,cAAc,KAAK,GAAG,EAAE,MAAM,MAAM,OAAO,EAAE;AAAA,IACtD,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,CAAC,UAAU,EAAE,IAAI;AACf,UAAM2B,SAAQ,GAAG;AACjB,UAAM,OAAO,KAAK,gBAAgB;AAClC,QAAI,SAAS,QAAW;AACtB,cAAQ,KAAK,KAAK;AAAA,QAChB,KAAK;AAAA,QACL,KAAK,2BACH;AACE,cAAI,EAAE,cAAgB,KAAK,aAAa,KAAK,KAAK,cAAc,IAAI;AAClE,mBAAO,KAAK,GAAGA,MAAK;AAAA,UACtB,OAAO;AACL,mBAAO,cAAc,cAAcA,MAAK,CAAC;AAAA,UAC3C;AAAA,QACF;AAAA,QACF,KAAK,UACH;AACE,cAAI,EAAE,cAAgB,KAAK,aAAa,KAAK,KAAK,cAAc,IAAI;AAClE,mBAAO,KAAK,GAAG,cAAcA,MAAK,CAAC;AAAA,UACrC,OAAO;AACL,mBAAO,cAAc,cAAcA,MAAK,CAAC;AAAA,UAC3C;AAAA,QACF;AAAA,QACF,KAAK,iBACH;AACE,eAAK,kBAAkB,KAAK,eAAe,KAAK,KAAK;AACrD,cAAI,cAAgB,KAAK,aAAa,KAAK,KAAK,cAAc,GAAG;AAC/D,mBAAO,cAAc,WAAaA,QAAO,KAAK,oBAAoB,CAAC,CAAC;AAAA,UACtE,OAAO;AACL,mBAAO,cAAcA,MAAK;AAAA,UAC5B;AAAA,QACF;AAAA,QACF,SACE;AACE,iBAAO,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,IACF,OAAO;AACL,YAAM,cAAcA,MAAK;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,CAAC,eAAe,EAAE,IAAI;AACpB,WAAO,GAAG,GAAG,MAAM2D,SAAQ,KAAK,aAAa,CAAC;AAAA,EAChD;AAAA,EACA,CAAC,SAAS,EAAE,IAAI;AACd,QAAI,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC,GAAG;AACvC,YAAM,SAAS,KAAK,SAAS;AAC7B,UAAI,QAAQ;AACV,gBAAQ,OAAO,KAAK;AAAA,UAClB,KAAK,UACH;AACE,mBAAO,OAAO,GAAG,EAAE;AAAA,UACrB;AAAA,UACF,KAAK,aACH;AACE,mBAAO,QAAQ,GAAG,IAAIoF,SAAU,GAAG,IAAI,OAAO,EAAE,CAAC;AAAA,UACnD;AAAA,UACF,KAAK,uBACH;AACE,mBAAO,QAAQ,GAAG,IAAI,iBAAiB,GAAG,IAAI;AAAA,cAC5C,WAAW,OAAO;AAAA,cAClB,WAAW,OAAO;AAAA,YACpB,CAAC,CAAC;AAAA,UACJ;AAAA,UACF,KAAK,aACH;AACE,mBAAO,QAAQ,GAAG,IAAI,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;AAAA,UACvD;AAAA,UACF,KAAK,SACH;AACE,mBAAO,QAAQ,GAAG,IAAIA,SAAU,GAAG,IAAI,OAAK;AAC1C,qBAAO,GAAG,CAAC;AACX,kBAAI,OAAO,GAAG,GAAG;AACf,uBAAO,UAAU;AAAA,kBACf,OAAO,OAAO;AAAA,kBACd,MAAM,OAAO;AAAA,kBACb,MAAM,OAAO;AAAA,gBACf,CAAC;AAAA,cACH;AACA,qBAAOiI;AAAA,YACT,CAAC,CAAC;AAAA,UACJ;AAAA,UACF,KAAK,eACH;AACE,iBAAK,UAAU,MAAM;AACrB;AAAA,UACF;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AACA,WAAO,oBAAoB,aAAWjI,SAAU,KAAK,gBAAgB,GAAG,EAAE,CAAC,GAAG,MAAM,QAAQ,GAAG,EAAE,CAAC,CAAC;AAAA,EACrG;AAAA,EACA,CAAC,YAAY,EAAE,IAAI;AACjB,WAAO,mBAAmB,GAAG,EAAE;AAAA,EACjC;AAAA,EACA,CAAC,uBAAuB,EAAE,IAAI;AAC5B,UAAM,cAAc,GAAG;AACvB,UAAM,kBAAkB,KAAK;AAC7B,UAAM,kBAAkB6G,OAAM,iBAAiB,WAAW;AAK1D,QAAI,cAAgB,eAAe,KAAK,KAAK,cAAc,GAAG;AAC5D,aAAO,cAAc,KAAK,oBAAoB,CAAC;AAAA,IACjD,OAAO;AAEL,WAAK,kBAAkB,KAAK,eAAe,WAAW;AACtD,UAAI,GAAG,IAAI;AAET,cAAM,cAAcvC,MAAK,iBAAiB,eAAe;AACzD,aAAK,UAAU,IAAI,YAAY,aAAa,EAAE,CAAC;AAC/C,eAAO,GAAG,GAAG,eAAe;AAAA,MAC9B,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA,EACA,CAAC,aAAa,EAAE,IAAI;AAClB,SAAK,UAAU,EAAE;AACjB,WAAO,GAAG;AAAA,EACZ;AAAA,EACA,CAAC,QAAQ,EAAE,IAAI;AACb,SAAK,UAAU,EAAE;AACjB,WAAO,GAAG;AAAA,EACZ;AAAA,EACA,CAAC,aAAa,EAAE,IAAI;AAClB,SAAK,UAAU,EAAE;AACjB,WAAO,GAAG;AAAA,EACZ;AAAA,EACA,CAAC,yBAAyB,EAAE,IAAI;AAC9B,SAAK,UAAU,EAAE;AACjB,WAAO,GAAG;AAAA,EACZ;AAAA,EACA,CAAC,QAAQ,EAAE,IAAI;AACb,SAAK,mBAAmB,GAAG;AAC3B,SAAK,cAAc,KAAK,eAAe,GAAG,EAAE;AAC5C,UAAM;AAAA,EACR;AAAA,EACA,CAAC,QAAQ,EAAE,IAAI;AACb,SAAK,aAAa;AAClB,UAAM;AAAA,EACR;AAAA,EACA,CAAC,QAAQ,EAAE,IAAI;AACb,UAAMlO,SAAQ,GAAG;AACjB,UAAM,OAAO,GAAG;AAChB,QAAIA,OAAM,GAAG;AACX,WAAK,UAAU,EAAE;AACjB,aAAO,KAAK;AAAA,IACd,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,CAAC,SAAS,EAAE,IAAI;AACd,WAAO,GAAG,OAAO;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,SAAS;AACf,QAAI,MAAM;AACV,SAAK,iBAAiB;AAEtB,WAAO,MAAM;AACX,WAAK,KAAK,gBAAgB,mBAAmB,GAAG;AAC9C,aAAK,YAAY,SAAS,MAAM,GAAG;AAAA,MACrC;AACA,UAAI,KAAK,OAAO,SAAS,GAAG;AAC1B,cAAM,KAAK,uBAAuB,KAAK,eAAe,GAAG;AAAA,MAC3D;AACA,UAAI,CAAC,KAAK,YAAY;AACpB,aAAK,kBAAkB;AACvB,cAAM,cAAc,KAAK,WAAW,YAAY,IAAI;AACpD,YAAI,gBAAgB,OAAO;AACzB,eAAK,aAAa;AAClB,eAAK,iBAAiB;AACtB,gBAAM,SAAS;AACf,gBAAM4J,SAAU,SAAW;AAAA,YACzB,UAAU;AAAA,UACZ,CAAC,GAAG,MAAM,MAAM;AAAA,QAClB;AAAA,MACF;AACA,UAAI;AACF,YAAI,EAAE,SAAS,QAAQ,EAAE,IAAI,OAAO,OAAO;AACzC,kBAAQ,IAAI,GAAG;AAEf,iBAAO,GAAG;AAAA,QACZ;AAGA,cAAM,KAAK,QAAQ,QAAQ,MAAM;AAC/B,cAAI,kBAAkB,IAAI6H,aAAY,EAAE,IAAI;AAC1C,mBAAO,WAAW,sCAAsC,IAAIA,aAAY,EAAE,EAAE,8BAA8B,aAAa,EAAE;AAAA,UAC3H;AAEA,iBAAO,KAAK,IAAI,GAAG,EAAE,GAAG;AAAA,QAC1B,GAAG,IAAI;AAAA,MACT,SAAS,GAAG;AACV,YAAI,SAAS,CAAC,GAAG;AACf,cAAI,EAAE,QAAQ,YAAY,EAAE,QAAQ,UAAU;AAC5C,kBAAM;AAAA,UACR;AACA,cAAI,EAAE,QAAQ,cAAc,EAAE,QAAQ,YAAY;AAChD,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,cAAI,cAAc,CAAC,GAAG;AACpB,kBAAM,cAAc,EAAE,KAAK;AAAA,UAC7B,WAAW,uBAAuB,CAAC,GAAG;AACpC,kBAAM,cAAc,WAAa,IAAI,CAAC,GAAG,UAAUnF,KAAM,CAAC,CAAC;AAAA,UAC7D,OAAO;AACL,kBAAM,cAAc,IAAI,CAAC,CAAC;AAAA,UAC5B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAM,MAAM;AACV,SAAK,0BAA0B;AAAA,EACjC;AACF;AAKA,IAAM,yBAAsC,4BAAY,0CAA0C,MAAM,mBAAmB,YAAY,MAAM,CAAC,CAAC;AAG/I,IAAM,aAAa,UAAQ;AACzB,QAAM,uBAAuBsX,cAAa,MAAM,eAAe;AAC/D,QAAM,OAAO7Z,KAAM,sBAAsB,UAAU;AACnD,SAAO,KAAK;AACd;AAGA,IAAM,gBAA6B,4BAA0B,uBAAO,IAAI,6BAA6B,GAAG,MAAM,WAAW,aAAW;AAClI,QAAM,YAAY,aAAa,IAAI,OAAO;AAC1C,aAAW,QAAQ,OAAO,EAAE,IAAI,SAAS;AAC3C,CAAC,CAAC;AASF,IAAM,eAA4B,4BAA0B,uBAAO,IAAI,4BAA4B,GAAG,MAAM,WAAW,CAAC;AAAA,EACtH;AAAA,EACA,OAAAlJ;AAAA,EACA,SAAAgC;AAAA,EACA,SAAA2M;AAAA,EACA,UAAAoW;AAAA,EACA;AACF,MAAM;AACJ,QAAM5V,QAAO,QAAQjG,KAAIlH,UAAS,cAAc,GAAGoN,WAAU,OAAO,CAAC;AACrE,QAAM,eAAe,IAAIlG,KAAIlH,UAAS,eAAe,GAAG,OAAKkH,KAAM,GAAG,QAAQ,CAAC;AAC/E,MAAIiG,MAAK,SAAS,UAAUA,MAAK,MAAM,SAAS,kBAAkB,aAAa,SAAS,QAAQ;AAC9F;AAAA,EACF;AACA,QAAM,aAAa,OAAO,YAAYzF,KAAM,aAAa,CAAArL,WAAS,iBAAiBA,MAAK,CAAC,CAAC;AAC1F,aAAW,gBAAgB,IAAIoQ,YAAWE,QAAO;AACjD,aAAW,iBAAiB,IAAIoW,UAAS;AACzC,MAAI/kB,WAAU,QAAQA,OAAM,SAAS,SAAS;AAC5C,eAAW,cAAc,IAAI,OAAOA,MAAK;AAAA,EAC3C;AACA,EAAAmP,MAAK,MAAM,MAAM,OAAO,OAAO,GAAG,aAAa,MAAM,uBAAuB,GAAG,UAAU;AAC3F,CAAC,CAAC;AAGF,IAAM,iBAA8B,4BAA0B,uBAAO,IAAI,gCAAgC,GAAG,MAAM,0BAA0B3F,MAAK,eAAe,YAAY,CAAC,CAAC;AAK9K,IAAM,iBAA8B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,YAAY;AACxF,SAAO,gBAAgBgI,KAAI,SAAS,OAAK,aAAa,CAAAf,UAAQ,QAAQ,GAAGA,KAAI,CAAC,CAAC,CAAC;AAClF,CAAC;AAGD,IAAM,8BAA2C,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,YAAY;AACrG,SAAO,SAAS,SAAS,aAAa,CAAAA,UAAQ,QAAQA,KAAI,CAAC,CAAC;AAC9D,CAAC;AAGD,IAAM,eAAe,CAAAzM,eAAa,iBAAiB,CAAA8W,aAAW;AAC5D,QAAM,cAAcA,SAAQ,aAAa;AACzC,QAAM,eAAeA,SAAQ;AAC7B,SAAO/R,SAAU,OAAO,CAAA/D,WAAS,sBAAsBA,QAAO,CAAAyL,UAAQ,iBAAiB,sBAAoB;AACzG,UAAM,UAAU,iBAAiB,aAAa;AAC9C,UAAM,WAAW,iBAAiB;AAClC,UAAM,YAAYpD,MAAO,SAAS,WAAW;AAC7C,UAAM,aAAaA,MAAK,UAAU,YAAY;AAC9C,UAAM,cAAcA,MAAO,aAAa,OAAO;AAC/C,qBAAiB,aAAauC,OAAQ,WAAW,iBAAiB,GAAG,GAAG,WAAW,CAAC;AACpF,WAAO,SAAS,iBAAiB5L,WAAUyM,KAAI,GAAG,UAAU,GAAG,KAAK,MAAM;AACxE,uBAAiB,aAAab,OAAQ,aAAa,iBAAiB,GAAG,GAAG,iBAAiB,aAAa,CAAC,CAAC;AAAA,IAC5G,CAAC,CAAC;AAAA,EACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAGD,IAAM,iBAAiB,UAAQ;AAC7B,QAAM,YAAY,gBAAgB,0BAA0BtF,MAAK,WAAW,CAAC;AAC7E,SAAO,UAAU,IAAI;AACvB;AAGA,IAAM,kBAA+B,uBAAO,IAAI,+BAA+B;AAG/E,IAAMlL,UAAsB,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,YAAY,YAAY,SAAS,MAAM,QAAQ,MAAM,WAAW,SAAS,OAAO,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,YAAY,eAAe,UAAU,CAAC,GAAG,MAAM,IAAI,EAAE,GAAG,CAAC,GAAG;AAAA,EACjP,QAAQI,MAAK,eAAe;AAAA,EAC5B,SAASwR;AACX,CAAC,GAAG,OAAO,GAAG;AAAA,EACZ,WAAW,OAAK,MAAM,kBAAkB,QAAQ,IAAI,IAAIxR,MAAK,CAAC;AAAA,EAC9D,WAAW,MAAM,QAAQ,KAAK;AAChC,CAAC,CAAC,CAAC;AACH,IAAM,aAAa,CAACqB,WAAU,OAAO,MAAM;AACzC,QAAM6C,QAAO7C,UAAS,KAAK;AAC3B,MAAI6C,MAAK,MAAM;AACb,WAAO,QAAQ,KAAK;AAAA,EACtB;AACA,SAAO,KAAKqF,SAAU,EAAErF,MAAK,OAAO,KAAK,GAAG,OAAK,IAAI,QAAQ,CAAC,IAAI,WAAW7C,WAAU,QAAQ,GAAG,CAAC,CAAC,CAAC;AACvG;AAGA,IAAM2H,UAAsB,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,YAAY;AACtF,QAAM,YAAY,SAAS,SAAS,CAAC,GAAG,MAAMkB,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI;AACpE,SAAO,YAAY,SAAS,MAAM,QAAQ,MAAMT,cAAa,QAAQ,EAAE,YAAY,CAACqH,SAAQ,GAAG,MAAMxF,SAAQwF,SAAQ,QAAQ,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM5G,MAAM,eAAe,UAAU,CAAC,GAAG,MAAMA,MAAM,UAAU,GAAG,CAAC,GAAG,OAAK,IAAIY,MAAK,CAAC,IAAImB,MAAK,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;AAC7U,CAAC;AAID,IAAM,kBAAkB,CAAA7J,WAAS;AAC/B,MAAI,MAAM,QAAQA,MAAK,KAAK,WAAWA,MAAK,GAAG;AAC7C,WAAO,CAACA,QAAO6J,MAAK,CAAC;AAAA,EACvB;AACA,QAAMnN,QAAO,OAAO,KAAKsD,MAAK;AAC9B,QAAMgC,SAAOtF,MAAK;AAClB,SAAO,CAACA,MAAK,IAAI,OAAKsD,OAAM,CAAC,CAAC,GAAG0I,MAAK,CAAA3I,YAAU;AAC9C,UAAM,MAAM,CAAC;AACb,aAAS,IAAI,GAAG,IAAIiC,QAAM,KAAK;AAC7B,UAAItF,MAAK,CAAC,CAAC,IAAIqD,QAAO,CAAC;AAAA,IACzB;AACA,WAAO;AAAA,EACT,CAAC,CAAC;AACJ;AACA,IAAM,cAAc,CAAC,SAAS,WAAW,YAAY;AACnD,QAAM,gBAAgB,CAAC;AACvB,aAAW2O,WAAU,SAAS;AAC5B,kBAAc,KAAKrB,QAAOqB,OAAM,CAAC;AAAA,EACnC;AACA,SAAOvH,SAAU,eAAe,eAAe,UAAU;AAAA,IACvD,aAAa,SAAS;AAAA,IACtB,UAAU,SAAS;AAAA,EACrB,CAAC,GAAG,aAAW;AACb,UAAM,SAAS0C,MAAK;AACpB,UAAM7H,SAAO,QAAQ;AACrB,UAAM,SAAS,IAAI,MAAMA,MAAI;AAC7B,UAAM,YAAY,IAAI,MAAMA,MAAI;AAChC,QAAI,UAAU;AACd,aAAS,IAAI,GAAG,IAAIA,QAAM,KAAK;AAC7B,YAAMqL,UAAS,QAAQ,CAAC;AACxB,UAAIA,QAAO,SAAS,QAAQ;AAC1B,eAAO,CAAC,IAAI3E,MAAK2E,QAAO,IAAI;AAC5B,kBAAU;AAAA,MACZ,OAAO;AACL,kBAAU,CAAC,IAAIA,QAAO;AACtB,eAAO,CAAC,IAAI;AAAA,MACd;AAAA,IACF;AACA,QAAI,SAAS;AACX,aAAO,UAAU,SAAS,SAASzP,MAAK,UAAU,MAAM,MAAM,CAAC,IAAIA,MAAK,MAAM;AAAA,IAChF,WAAW,SAAS,SAAS;AAC3B,aAAOwR;AAAA,IACT;AACA,WAAO,UAAU,SAAS,SAAS,QAAQ,UAAU,MAAM,SAAS,CAAC,IAAI,QAAQ,SAAS;AAAA,EAC5F,CAAC;AACH;AACA,IAAM,YAAY,CAAC,SAAS,WAAW,YAAY;AACjD,QAAM,gBAAgB,CAAC;AACvB,aAAWV,WAAU,SAAS;AAC5B,kBAAc,KAAKrB,QAAOqB,OAAM,CAAC;AAAA,EACnC;AACA,MAAI,SAAS,SAAS;AACpB,WAAO,eAAe,eAAe,UAAU;AAAA,MAC7C,aAAa,SAAS;AAAA,MACtB,UAAU,SAAS;AAAA,MACnB,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AACA,SAAO5G,MAAM,eAAe,eAAe,UAAU;AAAA,IACnD,aAAa,SAAS;AAAA,IACtB,UAAU,SAAS;AAAA,EACrB,CAAC,GAAG,aAAW,UAAU,SAAS,SAAS,UAAU,MAAM,OAAO,IAAI,OAAO;AAC/E;AAGA,IAAMyB,OAAM,CAAC,KAAK,YAAY;AAC5B,QAAM,CAAC,SAAS,SAAS,IAAI,gBAAgB,GAAG;AAChD,MAAI,SAAS,SAAS,YAAY;AAChC,WAAO,YAAY,SAAS,WAAW,OAAO;AAAA,EAChD,WAAW,SAAS,SAAS,UAAU;AACrC,WAAO,UAAU,SAAS,WAAW,OAAO;AAAA,EAC9C;AACA,SAAO,UAAU,SAAS,SAASzB,MAAM,eAAe,SAAS,UAAU,OAAO,GAAG,UAAU,KAAK,IAAI,eAAe,SAAS,UAAU,OAAO;AACnJ;AAGA,IAAM,UAAU,aAAW,SAAOyB,KAAI,KAAK,OAAO;AAGlD,IAAM,eAAe,CAAC,UAAU,YAAYzB,MAAMyB,KAAIlC,cAAa,QAAQ,EAAE,IAAI,IAAI,GAAG,OAAO,GAAGR,WAAU,CAAAgI,UAAQ,cAAcA,KAAI,IAAInG,MAAKmG,MAAK,EAAE,IAAIhF,MAAK,CAAC,CAAC;AAGjK,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM,KAAK;AAAA,EAC7D,QAAQ;AACV,GAAG,MAAM,IAAI,CAAC;AAGd,IAAM,kBAA+B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,YAAYN,KAAI,UAAU,MAAM,CAAC,GAAG,OAAO,CAAC;AAG3H,IAAM,iBAA8B,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,YAAY,iBAAiB,OAAK;AAChH,QAAM,yBAAyB,SAAS,aAAa,QAAQ,SAAS,aAAa,aAAa,EAAE,YAAY,sBAAsB;AACpI,MAAI,SAAS,SAAS;AACpB,WAAO/M,OAAQ,SAAS,MAAM,eAAe0Q,WAAU,EAAE,aAAW,yBAAyB,sBAAsB,MAAM,CAAC,GAAG,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,yBAAyB,MAAM,CAAC,GAAG,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,eAAeD,SAAQ,EAAE,aAAW,2BAA2B,MAAM,CAAC,GAAG,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,sBAAsB,CAAC,GAAG,OAAK,eAAe+V,WAAU,CAAC,CAAC,EAAE,aAAW,mBAAmB,MAAM,GAAG,CAAC,GAAG,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,sBAAsB,CAAC,CAAC;AAAA,EACpd;AACA,SAAOxmB,OAAQ,SAAS,MAAM,eAAe0Q,WAAU,EAAE,aAAW,yBAAyB,YAAY,MAAM,GAAG,CAAC,GAAG,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,IAAI,kBAAkB,MAAM,CAAC,GAAG,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,eAAeD,SAAQ,EAAE,aAAW,oBAAoB,MAAM,CAAC,GAAG,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,sBAAsB,CAAC,GAAG,OAAK,eAAe+V,WAAU,CAAC,CAAC,EAAE,aAAW,YAAY,MAAM,GAAG,CAAC,GAAG,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,sBAAsB,CAAC,CAAC;AAC9b,CAAC,CAAC;AAGF,IAAM,sBAAsB,CAAC,MAAM,GAAG,aAAa,QAAQ,MAAM;AAC/D,QAAMjZ,MAAK1C,cAAa,IAAI;AAC5B,QAAMgC,SAAQ,IAAI,MAAMU,IAAG,MAAM;AACjC,QAAM,KAAK,CAAC,GAAG,MAAM5C,SAAU,EAAE,GAAG,CAAC,GAAG,OAAK,KAAK,MAAMkC,OAAM,CAAC,IAAI,CAAC,CAAC;AACrE,SAAOsG,UAAS,2BAA2B5F,KAAI,IAAI,QAAQ,GAAG,QAAQV,MAAK,CAAC;AAC9E,CAAC;AACD,IAAM,wBAAwB,CAAC,MAAM,MAAM,QAAQ,MAAM;AACvD,QAAMU,MAAK1C,cAAa,IAAI;AAC5B,QAAMrF,SAAO+H,IAAG;AAChB,MAAI/H,WAAS,GAAG;AACd,WAAOoN;AAAA,EACT,WAAWpN,WAAS,GAAG;AACrB,WAAOmN,QAAO,EAAEpF,IAAG,CAAC,GAAG,CAAC,CAAC;AAAA,EAC3B;AACA,QAAM,UAAUA,IAAG,IAAI,CAAC;AACxB,QAAM,YAAY,IAAI,MAAM;AAC5B,QAAM4M,QAAO,OAAK,MAAM,QAAQ,SAAS,QAAQ,MAAM;AACrD,QAAI,UAAU,SAAS,GAAG;AACxB,YAAM,WAAW,UAAU,IAAI,OAAK,EAAE,EAAE,EAAE,OAAO,GAAG;AACpD,aAAO,QAAQ,UAAU,sBAAsB,UAAU,IAAI,OAAK,EAAE,EAAE,GAAG,QAAQ,CAAC;AAAA,IACpF;AACA,WAAOvH;AAAA,EACT,CAAC,IAAI,YAAY,QAAQ,CAAC,GAAG,OAAK;AAChC,QAAI,EAAE,QAAQ,WAAW;AACvB,gBAAU,KAAK,CAAC;AAChB,aAAOuH,MAAK,IAAI,CAAC;AAAA,IACnB,WAAW,EAAE,QAAQ,WAAW;AAC9B,aAAO,QAAQ,MAAM;AACnB,YAAI,UAAU,SAAS,GAAG;AACxB,gBAAM,WAAW,UAAU,IAAI,OAAK,EAAE,EAAE,EAAE,OAAO,GAAG;AACpD,iBAAO,QAAQ,UAAUxP,SAAU,sBAAsB,UAAU,IAAI,OAAK,EAAE,EAAE,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC;AAAA,QACxG;AACA,eAAOiI;AAAA,MACT,CAAC;AAAA,IACH,OAAO;AACL,aAAOuH,MAAK,IAAI,CAAC;AAAA,IACnB;AAAA,EACF,CAAC;AACD,SAAOA,MAAK,CAAC;AACf,CAAC;AAGD,IAAM,6BAA6B,CAAC,MAAM,GAAG,aAAa,QAAQ,MAAM;AACtE,QAAM5M,MAAK1C,cAAa,IAAI;AAC5B,QAAMrF,SAAO+H,IAAG;AAChB,MAAI/H,WAAS,GAAG;AACd,WAAOoN;AAAA,EACT,WAAWpN,WAAS,GAAG;AACrB,WAAOmN,QAAO,EAAEpF,IAAG,CAAC,GAAG,CAAC,CAAC;AAAA,EAC3B;AACA,SAAO,oBAAoB,aAAW;AACpC,UAAMrM,YAAW,mBAAmBmM,KAAM;AAC1C,QAAI,MAAM;AACV,UAAM,WAAW,CAAC;AAClB,UAAM,YAAY,CAAC;AACnB,UAAMqa,WAAU,WAAW,WAAS,kBAAkBna,KAAI,CAAC,GAAG,MAAM,KAAK,MAAM,KAAK,QAAQ,MAAM,SAAS,WAAWmF,QAAO,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG/H,SAAU,CAAA0H,UAAQ;AAC/J,cAAQA,MAAK,KAAK;AAAA,QAChB,KAAK,WACH;AACE,cAAI,SAAS,SAAS,GAAG;AACvB,kBAAM,WAAW,SAAS,IAAI,CAAAiD,aAAWA,SAAQ,EAAE,EAAE,OAAO,GAAG;AAC/D,kBAAM/C,aAAY,2BAA2B,UAAU,CAAA+C,aAAWA,SAAQ,IAAI,QAAQ;AACtF,mBAAO,QAAQ,UAAU,iBAAiB/C,YAAW;AAAA,cACnD,WAAW,CAAA3Q,WAASuR,UAAS,aAAajS,WAAU,MAAM,GAAG,UAAU,SAAWU,QAAOyQ,MAAK,KAAK,CAAC,CAAC;AAAA,cACrG,WAAW,MAAMc,UAAS,aAAajS,WAAU,MAAM,GAAG,UAAUmR,MAAK,KAAK,CAAC;AAAA,YACjF,CAAC,CAAC;AAAA,UACJ;AACA,iBAAOc,UAAS,aAAajS,WAAU,MAAM,GAAG,UAAUmR,MAAK,KAAK,CAAC;AAAA,QACvE;AAAA,QACF,SACE;AACE,cAAIA,MAAK,QAAQ,WAAW;AAC1B,qBAAS,KAAKA,KAAI;AAAA,UACpB;AACA,cAAI,MAAM,MAAM7M,QAAM;AACpB,gBAAI,SAAS,SAAS,GAAG;AACvB,oBAAM,WAAW,SAAS,IAAI,CAAA8P,aAAWA,SAAQ,EAAE,EAAE,OAAO,GAAG;AAC/D,oBAAM/C,aAAY,2BAA2B,UAAU,CAAA+C,aAAWA,SAAQ,IAAI,QAAQ;AACtF,qBAAO,gBAAgBpU,WAAU,QAAQ,UAAUqR,UAAS,CAAC;AAAA,YAC/D,OAAO;AACL,iCAAmBrR,WAAU,YAAY,QAAQ,CAAC;AAAA,YACpD;AAAA,UACF,OAAO;AACL,kBAAM,MAAM;AAAA,UACd;AACA,iBAAO0R;AAAA,QACT;AAAA,MACJ;AAAA,IACF,CAAC,CAAC,CAAC,GAAG,YAAYtH,MAAM,WAAS;AAC/B,YAAM,YAAY,MAAM;AACtB,kBAAU,KAAK,KAAK;AAAA,MACtB,CAAC;AACD,aAAO;AAAA,IACT,CAAC,CAAC,CAAC,CAAC;AACJ,WAAOX,SAAU+c,UAAS,CAAAtB,YAAU,iBAAiB,QAAQ,cAAcllB,SAAQ,CAAC,GAAG;AAAA,MACrF,WAAW,CAAAU,WAAS+I,SAAU,oBAAoByb,SAAQ,gBAAgB,QAAQ,GAAG,WAAS;AAC5F,cAAM/T,QAAO,eAAe,OAAO;AAAA,UACjC,UAAU;AAAA,QACZ,CAAC;AACD,YAAIA,MAAK,SAAS,UAAU,cAAcA,MAAK,KAAK,GAAG;AACrD,iBAAO,UAAU,SAAW,cAAczQ,MAAK,GAAGyQ,MAAK,MAAM,EAAE,CAAC;AAAA,QAClE,OAAO;AACL,iBAAO,UAAU,cAAczQ,MAAK,CAAC;AAAA,QACvC;AAAA,MACF,CAAC;AAAA,MACD,WAAW,UAAQ+I,SAAU,MAAM,MAAM,yBAAyB,WAAW,CAAAgd,OAAKA,GAAE,WAAW,CAAC,CAAC;AAAA,IACnG,CAAC,CAAC;AAAA,EACJ,CAAC;AACH,CAAC;AAGD,IAAM,cAAc,CAAC,MAAM,GAAG,GAAG,aAAa,QAAQ,MAAM;AAC1D,QAAMpa,MAAK1C,cAAa,IAAI;AAC5B,QAAMgC,SAAQ,IAAI,MAAMU,IAAG,MAAM;AACjC,QAAM,KAAK,CAAC,GAAG,MAAMjC,MAAM,EAAE,GAAG,CAAC,GAAG,OAAKuB,OAAM,CAAC,IAAI,CAAC;AACrD,SAAOsG,UAAS,mBAAmB5F,KAAI,GAAG,IAAI,QAAQ,GAAG,QAAQV,MAAK,CAAC;AACzE,CAAC;AAGD,IAAM,qBAAqB,CAAC,MAAM,GAAG,GAAG,aAAa,QAAQ,MAAM;AACjE,MAAI,IAAI;AACR,QAAMpK,YAAW,KAAK,OAAO,QAAQ,EAAE;AACvC,QAAM,WAAW,CAAC;AAClB,QAAM,SAASkI,SAAU,KAAK,MAAMlI,UAAS,KAAK,CAAC,GAAG,CAAA6C,UAAQA,MAAK,OAAOsN,QAAOjI,UAAW,WAAW+H,QAAO,MAAMC,QAAO,EAAErN,MAAK,OAAO,GAAG,CAAC,CAAC,GAAG,SAAO;AACtJ,YAAQ,IAAI,KAAK;AAAA,MACf,KAAK,WACH;AACE,iBAAS,KAAK,GAAG;AACjB,eAAO;AAAA,MACT;AAAA,MACF,KAAK,WACH;AACE,eAAO;AAAA,MACT;AAAA,MACF,KAAK;AACH,eAAO;AAAA,IACX;AAAA,EACF,CAAC,CAAC;AACF,QAAM,UAAU,CAAC;AACjB,WAAS8J,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,YAAQ,KAAK,MAAM;AAAA,EACrB;AACA,SAAOzE,SAAU,KAAK,2BAA2B,SAAS,UAAU,QAAQ,CAAC,GAAG,CAAA0H,UAAQ;AACtF,QAAI,SAAS,WAAW,GAAG;AACzB,aAAOA;AAAA,IACT;AACA,UAAM,WAAW,SAAS,IAAI,CAAAiD,aAAWA,SAAQ,EAAE,EAAE,OAAO,GAAG;AAC/D,UAAM/C,aAAY,mBAAmB,UAAU,GAAG,CAAA+C,aAAWA,SAAQ,IAAI,QAAQ;AACjF,QAAIjD,MAAK,SAAS,WAAW;AAC3B,aAAO,QAAQ,UAAU,iBAAiBE,YAAW;AAAA,QACnD,WAAW,CAAA3Q,WAAS,cAAc,SAAWyQ,MAAK,OAAOzQ,MAAK,CAAC;AAAA,QAC/D,WAAW,MAAMyQ;AAAA,MACnB,CAAC,CAAC;AAAA,IACJ;AACA,WAAO,QAAQ,UAAUE,UAAS;AAAA,EACpC,CAAC;AACH,CAAC;AAGD,IAAM,OAAO,UAAQ,iBAAiB,CAAC,OAAOlR,YAAW,QAAQ,WAAW,MAAM,OAAOA,QAAO,YAAY,CAAC,CAAC;AAG9G,IAAM,aAAa,UAAQ,sBAAsB,MAAM,WAAW;AAGlE,IAAM,uBAAoC,qBAAK,GAAG,CAAC,MAAMiB,aAAY,KAAK,QAAQ,MAAM,CAAAV,WAAS;AAC/F,QAAMiP,UAAS,eAAejP,MAAK;AACnC,UAAQiP,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAOvO,SAAQuO,QAAO,IAAI;AAAA,IAC5B;AAAA,IACF,KAAK,SACH;AACE,aAAO,UAAUA,QAAO,KAAK;AAAA,IAC/B;AAAA,EACJ;AACF,CAAC,CAAC,CAAC;AAGH,IAAM,aAAa,CAACqB,SAAQ,aAAa,oBAAoB,gBAAgB,SAAS;AACpF,QAAM,aAAa,qBAAqBA,SAAQ,aAAa,oBAAoB,aAAa;AAC9F,aAAW,OAAOA,OAAM;AACxB,SAAO;AACT;AAGA,IAAM,uBAAuB,CAACA,SAAQ,aAAa,oBAAoB,gBAAgB,SAAS;AAC9F,QAAM,UAAU5B,YAAa;AAC7B,QAAM,kBAAkB,YAAY,aAAa;AACjD,QAAM,iBAAiB,OAAO,iBAAiB,OAAO;AACtD,QAAM,aAAa,IAAI,aAAa,SAAS,gBAAgB,kBAAkB;AAC/E,QAAM,eAAe,aAAe,gBAAgB,cAAc;AAClE,QAAM,aAAa,WAAW;AAC9B,aAAW,QAAQ,cAAc4B,SAAQhG,MAAK,WAAW,GAAG,UAAU;AACtE,aAAW,YAAY,CAAAmG,UAAQ,WAAW,MAAMA,OAAM,UAAU,CAAC;AACjE,QAAM,cAAc,kBAAkB,OAAO,gBAAgB,KAAK,YAAY,YAAY,wBAAwB,GAAG,UAAU,MAAM,YAAY,MAAM,CAAC,CAAC;AACzJ,cAAY,IAAI,oBAAoB,UAAU;AAC9C,SAAO;AACT;AAGA,IAAM,wBAAwB,CAAC,MAAM,kBAAkB,iBAAiB,CAAC,aAAa,iBAAiB,QAAQ,WAAW,MAAM,aAAa,aAAa,cAAc,aAAa,CAAC,CAAC;AAGvL,IAAM,WAAwB,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU1C,OAAM,GAAG,YAAY,YAAY,SAAS,MAAM9E,cAAa,QAAQ,EAAE,OAAO,CAAC,KAAK,GAAG,MAAM6B,SAAQ,KAAK,GAAG,CAACkb,MAAKC,OAAM,EAAED,MAAKC,IAAG,CAAC,CAAC,GAAG,QAAQlY,KAAI,CAAC,GAAG,MAAMhF,SAAUS,OAAOuE,KAAI,GAAG,SAAOhF,SAAU,eAAe,UAAU,CAACuH,SAAQ,MAAMvH,SAAUuH,SAAQ,OAAKX,QAAO,KAAK,OAAK,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,MAAMzG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AAG7Y,IAAMY,aAAyB,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,YAAY,KAAK,eAAe,UAAU,CAAC,GAAG,MAAMmF,QAAO,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO,GAAGvF,MAAM,CAAA/I,WAASoJ,cAAapJ,QAAO,QAAQ,CAAC,CAAC,CAAC;AAG5M,IAAM,cAA2B,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,YAAYoI,SAAUe,WAAU,UAAU,GAAG;AAAA,EAC5H,aAAa,SAAS;AAAA,EACtB,UAAU,SAAS;AACrB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,MAAM,GAAG,WAAW,IAAI,SAAS,UAAUkH,QAAO,QAAQ,EAAE,IAAIxR,MAAK,EAAE,CAAC,CAAC;AAGrF,IAAM,UAAU,CAAA2L,SAAO;AACrB,QAAM,OAAOlC,cAAekC,IAAG;AAC/B,MAAI,CAAC,WAAW,IAAI,GAAG;AACrB,WAAO,QAAQ,MAAM,yBAAyB,yCAAyC,CAAC;AAAA,EAC1F;AACA,QAAM,OAAO/B,cAAa,IAAI;AAC9B,QAAM,UAAUqB,cAAa,IAAI;AACjC,QAAM,eAAe,SAAO,KAAK,WAAW,IAAI,CAAC,CAAC,GAAGkB,IAAG,IAAI,CAAC,CAAC,CAAC;AAC/D,SAAO,KAAK,aAAa,GAAG5C,SAAU,CAAAxJ,WAAQ,KAAKiK,OAAO,QAAQ,MAAM,GAAGT,SAAU,WAAS,oBAAoB,aAAW,KAAK,KAAKqI,eAAc,IAAI,CAAC,GAAGrI,SAAU,CAAAhJ,UAAQ,KAAK,SAAS,kBAAkB,CAAAuQ,YAAU,KAAKc,eAAcd,OAAM,CAAC,CAAC,GAAG5G,MAAM,eAAe,GAAGA,MAAM,CAAAjG,UAAQ,KAAKA,OAAMuG,SAAQjK,KAAI,CAAC,CAAC,GAAGyR,KAAI,CAAAgT,YAAU,KAAKA,SAAQ,OAAOxT,OAAM,CAACV,SAAQ,UAAU,KAAKA,SAAQiB,UAAS,KAAK,OAAO,KAAK,GAAGxI,SAAU,eAAeyb,SAAQ,OAAOjlB,QAAM,KAAK,CAAC,GAAG,MAAMwR,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGhI,SAAU,CAAAyb,YAAU,KAAK,QAAQ,KAAKC,QAASllB,MAAI,GAAGwJ,SAAU,YAAY,CAAC,CAAC,GAAG,YAAY,MAAM,KAAKyb,SAAQ,OAAOxT,OAAM,CAACV,SAAQ,UAAU,KAAKA,SAAQmB,SAAQ,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnrB;AAGA,IAAM,iBAAiB,CAAC+S,SAAQ,QAAQllB,WAAU,UAAU,CAAAmR,UAAQ,gBAAgBA,OAAM;AAAA,EACxF,WAAW,CAAAzQ,WAAS,KAAK0jB,QAAO,OAAO,CAAAwC,WAAS,CAACA,WAAU,IAAI,KAAK,kBAAkB5mB,WAAUU,MAAK,GAAG+Q,OAAM,IAAIC,OAAMkV,SAAQ,CAAC,CAAC,GAAGld,QAAO;AAAA,EAC5I,WAAW,CAAA3K,WAAS,KAAK,gBAAgBiB,WAAU,CAACjB,QAAO,MAAM,CAAC,GAAG0K,SAAU,CAAAkF,SAAOA,OAAM,KAAKhF,cAAeub,OAAM,GAAG,OAAOxT,OAAM,CAACV,SAAQ,UAAU,UAAU,SAASA,UAAS,KAAKA,SAAQmB,SAAQ,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIT,KAAI,CAAC;AAC7O,CAAC;AAGD,IAAM,eAA4B,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,UAAUjD,OAAM,GAAG,YAAY,YAAY,SAAS,MAAM9E,cAAa,QAAQ,EAAE,OAAO,CAAC,KAAK,GAAG,MAAM6B,SAAQ,KAAK,GAAG,CAACkb,MAAKC,OAAM,EAAED,MAAKC,IAAG,CAAC,CAAC,GAAGlY,KAAI,GAAG,MAAM,QAAQ,MAAM,KAAK,SAAS,CAACA,OAAM,GAAG,QAAQ,GAAGtC,MAAK,GAAG,CAAC,KAAK,MAAM,MAAM;AAC7S,UAAQ,IAAI,MAAM;AAAA,IAChB,KAAK,QACH;AACE,aAAOnB,MAAK,IAAI;AAAA,IAClB;AAAA,IACF,KAAK,QACH;AACE,aAAOA,MAAK,EAAE,IAAI,OAAO,MAAM,CAAC,CAAC;AAAA,IACnC;AAAA,EACJ;AACF,GAAG,OAAO,GAAGZ,MAAM,CAAA5C,YAAU;AAC3B,UAAQA,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,YAAM,IAAI,MAAM,6FAA6F;AAAA,IAC/G;AAAA,IACF,KAAK,QACH;AACE,aAAOA,QAAO;AAAA,IAChB;AAAA,EACJ;AACF,CAAC,CAAC,CAAC,CAAC,CAAC;AAGL,IAAM,qBAAqB,UAAQ,kBAAkB,CAAA9E,aAAW,MAAMoN,WAAUpN,UAAS,QAAQ,GAAG;AAAA,EAClG,QAAQ,MAAM;AAAA,EACd,QAAQ,CAAAgD,WAAS;AACf,YAAQA,OAAM,SAAS,MAAM;AAAA,MAC3B,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO+D,SAAU,UAAU/D,QAAO6J,SAAQ,GAAG,WAAS,YAAY,MAAM,KAAK,CAAC;AAAA,IAClF;AAAA,EACF;AACF,CAAC,CAAC;AAGF,IAAM,sBAAsB,iBAAe,UAAQ,kBAAkB,CAAA7M,aAAW,MAAMoN,WAAUpN,UAAS,QAAQ,GAAG;AAAA,EAClH,QAAQ,MAAM;AAAA,EACd,QAAQ,CAAAgD,WAAS;AACf,QAAIA,OAAM,SAAS,SAAS,eAAeA,OAAM,SAAS,gBAAgB,aAAa;AACrF,aAAO;AAAA,IACT;AACA,WAAO+D,SAAU,UAAU/D,QAAO4f,WAAU,WAAW,CAAC,GAAG,WAAS,YAAY,MAAM,KAAK,CAAC;AAAA,EAC9F;AACF,CAAC,CAAC;AAGF,IAAM,iBAAiB,cAAY,UAAQ,kBAAkB,CAAA5iB,aAAW,MAAMoN,WAAUpN,UAAS,QAAQ,GAAG;AAAA,EAC1G,QAAQ,MAAM,KAAK,QAAQ;AAAA,EAC3B,QAAQ,CAAAgD,WAAS;AACf,UAAM4K,SAAQ,SAAS,SAAS,aAAa,qBAAqB,SAAS,SAAS,eAAe,uBAAuB,oBAAoB,SAAS,WAAW;AAClK,YAAQ5K,OAAM,SAAS,MAAM;AAAA,MAC3B,KAAK;AACH,eAAO4K,OAAM,KAAK,kBAAkB,CAAC;AAAA,MACvC,KAAK;AACH,eAAOA,OAAM,KAAK,oBAAoB,CAAC;AAAA,MACzC,KAAK;AACH,eAAOA,OAAM,KAAK,oBAAoB5K,OAAM,SAAS,WAAW,CAAC,CAAC;AAAA,IACtE;AAAA,EACF;AACF,CAAC,CAAC;AAGF,IAAM,YAAY,OAAK+D,SAAU,UAAU,CAAC;AAG5C,IAAM,eAAe,CAAAuH,YAAUvH,SAAU,UAAU,GAAG,CAAA/D,WAAS,SAASA,MAAK,EAAEsL,OAAM,CAAC;AAGtF,IAAM,uBAAuB,UAAQ,kBAAkB,CAAAtO,aAAW,MAAMoN,WAAUpN,UAAS,QAAQ,GAAG;AAAA,EACpG,QAAQ,MAAM;AAAA,EACd,QAAQ,CAAAgD,WAAS;AACf,YAAQA,OAAM,SAAS,MAAM;AAAA,MAC3B,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO+D,SAAU,UAAU/D,QAAO8J,WAAU,GAAG,WAAS,YAAY,MAAM,KAAK,CAAC;AAAA,IACpF;AAAA,EACF;AACF,CAAC,CAAC;AAGF,IAAM,mBAAmB,CAAC,KAAKzQ,WAAU,mBAAmB,CAACmL,OAAO,KAAKnL,MAAK,CAAC,CAAC;AAGhF,IAAM,qBAAqB,YAAU,sBAAsB4K,cAAe,MAAM,CAAC;AAGjF,IAAM,wBAAwB,YAAU,0BAA0B,qBAAqB,CAAAgF,SAAO,KAAKA,MAAKvD,OAAM,MAAM,CAAC,CAAC;AAGtH,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAMmG,SAAQ,kBAAkB,UAAU,GAAG,CAAA7L,WAAS+D,SAAU,YAAY,MAAM/D,MAAK,GAAG6L,IAAG,GAAG,CAAC7L,QAAOyL,UAAS,WAAWzL,QAAOyL,KAAI,CAAC,CAAC;AAG7K,IAAM0N,YAAwB,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAY,aAAa,MAAM,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AAG1I,IAAM,eAA4B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,GAAG,YAAYnV,SAAQ,eAAe,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,CAAC,IAAI,OAAO,YAAY,IAAI,IAAI;AAAA,EAC3K,WAAW;AAAA,EACX,WAAW,CAAC,IAAI,OAAO,SAAS,aAAa,SAAW,IAAI,EAAE,IAAI,WAAa,IAAI,EAAE;AACvF,CAAC,GAAG,OAAO,CAAC,CAAC;AAGb,IAAM,gBAA6B,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,YAAY,KAAK,eAAe,UAAU,CAAC,GAAG,MAAM,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;AAG/J,IAAM,kBAAkB,CAAA3K,WAAS,0BAA0B,iBAAiBgQ,KAAI,UAAUhQ,MAAK,CAAC;AAGhG,IAAM,2BAA2B,CAAAA,WAAS,0BAA0B,iBAAiBgQ,KAAI,mBAAmBhQ,MAAK,CAAC;AAGlH,IAAM,mBAAmB,UAAQ,UAAU,YAAU0K,SAAU,UAAU,QAAQ+F,WAAY,GAAG,WAAS,KAAK,MAAM,YAAY,KAAK,GAAGpF,MAAM,CAAArL,WAAS,CAAC,YAAY,CAAAsQ,aAAW,WAAW,OAAO,cAAcA,QAAO,CAAC,CAAC,GAAGtQ,MAAK,CAAC,CAAC,CAAC,CAAC;AAGpO,IAAM,aAA0B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAY,eAAe,MAAM,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AAG9I,IAAM,iBAA8B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAY,eAAe,MAAM,MAAM,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC;AAG7I,IAAM,kBAA+B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAY,eAAe,MAAM,MAAM,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC;AAG9I,IAAM,iBAA8B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,GAAG,YAAYqL,MAAMyB,KAAI,CAAC,MAAM,IAAI,GAAG;AAAA,EACtH,aAAa,SAAS,aAAa,IAAI;AAAA,EACvC,UAAU,SAAS;AACrB,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;AAG1B,IAAM,yBAAyB,CAAAwE,YAAU;AACvC,MAAIA,YAAWlO,SAAO;AACpB,WAAOuP;AAAA,EACT;AACA,SAAO,KAAK,cAAcjI,SAAU,CAAAqb,kBAAgB;AAClD,UAAM,sBAAsBxU,OAAMwU,eAAczU,OAAM;AACtD,UAAM,qBAAqBtC,MAAK,qBAAqB+W,aAAY;AACjE,WAAO,KAAK,mBAAmBzU,OAAM,GAAG4B,UAAS,aAAa,MAAM,mBAAmB,kBAAkB,CAAC,CAAC,GAAGR,OAAM;AAAA,EACtH,CAAC,GAAG,eAAe;AACrB;AAKA,IAAM,uBAAuB,CAAC,UAAU,WAAW,UAAQ,QAAQ,MAAM;AACvE,UAAQ,KAAK,MAAM,MAAM;AAAA,IACvB,KAAK,UACH;AACE,aAAOC;AAAA,IACT;AAAA,IACF,KAAK,WACH;AACE,YAAM,gBAAgB,KAAK,MAAM;AACjC,YAAMrB,UAAS,KAAK,MAAM;AAC1B,YAAM,aAAa,MAAM,KAAK,cAAc,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC,EAAE,IAAI,SAAO,cAAc,IAAI,GAAG,CAAC;AAC3G,WAAK,QAAQ;AAAA,QACX,MAAM;AAAA,QACN,SAAS,KAAK,MAAM;AAAA,QACpB,MAAM;AAAA,QACN,QAAAA;AAAA,MACF;AACA,aAAO,aAAa,QAAQ,IAAI,KAAK,YAAY,kBAAkB,SAAO,KAAKA,QAAO,GAAG,EAAE,MAAM,CAAC,CAAC,GAAG5G,SAAU,aAAW,KAAK,eAAe,OAAO,GAAG,IAAI,UAAU,GAAG,UAAU,MAAM,QAAQ,CAAC,CAAC,CAAC,IAAI,WAAW,QAAQ,IAAI,KAAK,oBAAoB,YAAY,SAAO,KAAK4G,QAAO,GAAG,EAAE,MAAM,CAAC,GAAG,KAAK,GAAG5G,SAAU,aAAW,KAAK,eAAe,SAAS;AAAA,QAC/V,UAAU;AAAA,MACZ,CAAC,GAAG,IAAI,UAAU,GAAG,UAAU,MAAM,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,YAAY,SAAS,aAAa,SAAO,KAAK4G,QAAO,GAAG,EAAE,MAAM,CAAC,GAAG,KAAK,GAAG5G,SAAU,aAAW,KAAK,eAAe,SAAS;AAAA,QACjM,UAAU;AAAA,MACZ,CAAC,GAAG,IAAI,UAAU,GAAG,UAAU,MAAM,QAAQ,CAAC,CAAC,CAAC;AAAA,IAClD;AAAA,EACJ;AACF,CAAC;AAKD,IAAM,WAAwB,oBAAI,WAAW;AAG7C,IAAM,QAAQ;AAGd,IAAM,YAAY,CAAC,WAAW+F,gBAAiBpF,MAAM,gBAAgB,SAAO;AAAA,EAC1E,CAAC,WAAW,GAAG;AAAA,EACf,CAAC,oBAAoB,GAAG;AAAA,EACxB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,MAAM,CAAAyc,cAAY,gBAAgB,KAAK,UAAUA,SAAQ,GAAGpd,SAAU,CAAA/D,WAAS,KAAK,cAAc,IAAI,CAAAyL,UAAQ,WAAWzL,QAAOyL,KAAI,CAAC,GAAGe,KAAI,SAAO,sBAAsBxM,QAAO,GAAG,CAAC,GAAG2G,IAAG3G,MAAK,CAAC,CAAC,CAAC,CAAC;AAAA,EACnM,OAAO,CAAAyL,UAAQM,QAAO,qBAAqB,UAAUN,KAAI,EAAE,EAAE,CAAC;AAAA,EAC9D,cAAc,SAAOM,QAAO,cAAc,GAAG,EAAE,EAAE,CAAC;AACpD,EAAE;AAGF,IAAM,cAA2B,qBAAK,GAAG,CAACT,SAAQtL,WAAU;AAAA,EAAgBsL;AAAA;AAAA,EAE5E3J,OAAM6C,OAAO,UAAUxE,MAAK,CAAC;AAAC,CAAC;AAG/B,IAAM,WAAwB,qBAAK,GAAG,CAACsL,SAAQtL,WAAU,KAAKsL,SAAQ,YAAYtL,MAAK,GAAG,OAAO,CAAAyL,UAAQzL,OAAM,MAAMyL,KAAI,CAAC,CAAC,CAAC;AAK5H,IAAM,+BAA+B,aAAW,wBAAwB,SAAS;AAAA,EAC/E,QAAQR;AAAA,EACR,MAAMxO;AACR,CAAC;AAKD,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAMpD,WAAU0S,QAAO,eAAehI,SAAU,YAAY,IAAI,GAAG,cAAY4C,IAAG,YAAY,MAAMtN,MAAK,GAAG,QAAQ,CAAC,GAAG,cAAY,YAAY,MAAM,QAAQ,CAAC,CAAC,CAAC;AAGrN,IAAM,4BAAyC,qBAAK,GAAG,CAAC,MAAM,MAAM,gBAAgB,MAAM,OAAK,sBAAsB,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAejI,IAAM,sBAAmC,+CAA+BoN,KAAM;AAG9E,IAAM,oBAAiC,6CAA6BA,KAAM;AAK1E,IAAM,gBAAgB,CAAA+Y,YAAUzT,QAAO,OAAO,SAASyT,OAAM,CAAC,CAAC;AAG/D,IAAM,WAAW,CAAAA,aAAW;AAAA,EAC1B,CAAC,WAAW,GAAG;AAAA,EACf,IAAI,MAAMvb,cAAaub,OAAM,EAAE,OAAO,CAACthB,KAAI,UAAUqL,SAAQrL,KAAI,MAAM,GAAG,CAAC,GAAGuI,KAAM;AAAA,EACpF,OAAO,MAAM,KAAK,oBAAoB+Y,SAAQ,WAASxb,SAAQ,MAAM,MAAM,CAAC,GAAG,KAAK,CAAC;AAAA,EACrF,UAAU,MAAMU,MAAM,oBAAoB8a,SAAQ,WAAS,MAAM,SAAS,GAAG,KAAK,GAAGxb,QAAS;AAAA,EAC9F,YAAY,MAAM,yBAAyBwb,SAAQ,WAAS,MAAM,WAAW,CAAC;AAAA,EAC9E,MAAM,MAAM9a,MAAM,kBAAkB8a,SAAQ,WAAS,MAAM,KAAK,CAAC,GAAG,YAAYla,MAAK,YAAY,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,SAAS,YAAY;AACpI,YAAQ,QAAQ,MAAM;AAAA,MACpB,KAAK,QACH;AACE,eAAOmB,MAAK;AAAA,MACd;AAAA,MACF,KAAK,QACH;AACE,gBAAQ,QAAQ,MAAM;AAAA,UACpB,KAAK,QACH;AACE,mBAAOA,MAAK;AAAA,UACd;AAAA,UACF,KAAK,QACH;AACE,mBAAOnB,MAAK,YAAY,QAAQ,OAAO,QAAQ,OAAO;AAAA,cACpD,WAAW,CAAC,GAAG3J,WAAU,CAAC,GAAG,GAAGA,MAAK;AAAA,cACrC,WAAW;AAAA,YACb,CAAC,CAAC;AAAA,UACJ;AAAA,QACJ;AAAA,MACF;AAAA,IACJ;AAAA,EACF,CAAC,CAAC;AAAA,EACF,iBAAiB,CAAAgO,aAAW,yBAAyB6V,SAAQ,WAAS,MAAM,gBAAgB7V,QAAO,CAAC;AAAA,EACpG,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAgBA,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,OAAO,YAAY,eAAe,MAAM,OAAO;AAAA,EAC1F,WAAW,CAAC,QAAQ,UAAU5F,SAAU,OAAO,MAAM,GAAG,CAAA0H,UAAQ;AAC9D,YAAQA,MAAK,MAAM;AAAA,MACjB,KAAK,YACH;AACE,eAAO1H,SAAU,OAAO,WAAW,GAAG,MAAM,QAAQ,WAAW0H,OAAM,KAAK,CAAC;AAAA,MAC7E;AAAA,MACF,KAAK,YACH;AACE,eAAO,QAAQ,WAAWA,OAAM,KAAK;AAAA,MACvC;AAAA,IACJ;AAAA,EACF,CAAC;AAAA,EACD,YAAY,CAAC,QAAQ,UAAU1H,SAAU,OAAO,MAAM,GAAG,CAAA0H,UAAQ;AAC/D,YAAQA,MAAK,MAAM;AAAA,MACjB,KAAK,YACH;AACE,eAAO1H,SAAU,OAAO,WAAW,GAAG,MAAM,QAAQ,YAAY0H,OAAM,KAAK,CAAC;AAAA,MAC9E;AAAA,MACF,KAAK,YACH;AACE,eAAO,QAAQ,YAAYA,OAAM,KAAK;AAAA,MACxC;AAAA,IACJ;AAAA,EACF,CAAC;AACH,CAAC,CAAC;AAGF,IAAM,aAAa,UAAQ,oBAAoB,aAAW,YAAY,CAAA9B,aAAW5F,SAAU,WAAW,QAAQ,IAAI,CAAC,GAAG,WAAS,KAAK,QAAQO,MAAK,KAAK,CAAC,GAAG,YAAY,MAAM,KAAK,OAAO,gBAAgBqF,QAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGrN,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,SAAS,YAAY,mBAAiB,SAAS,MAAM,MAAM;AAAA,EAClG,YAAY,CAAC8B,OAAM3E,WAAU,gBAAgB2E,OAAM;AAAA,IACjD,WAAW,CAAAzQ,WAAS,KAAKsJ,MAAKwC,MAAK,GAAG,cAAc,CAAAwF,YAAU,SAAWtR,QAAOsR,OAAM,CAAC,CAAC;AAAA,IACxF,WAAW,CAAAjT,WAAS,KAAKyN,QAAO,iBAAiB,aAAa,GAAGH,IAAGtN,MAAK,CAAC;AAAA,EAC5E,CAAC;AAAA,EACD,aAAa,CAACoS,OAAM5E,UAAS,gBAAgB4E,OAAM;AAAA,IACjD,WAAW,CAAAzQ,WAAS,KAAKsJ,MAAKuC,KAAI,GAAG,cAAc,CAAAyF,YAAU,SAAWA,SAAQtR,MAAK,CAAC,CAAC;AAAA,IACvF,WAAW,CAAA3B,WAAS,KAAKwN,OAAM,iBAAiB,aAAa,GAAGF,IAAGtN,MAAK,CAAC;AAAA,EAC3E,CAAC;AACH,CAAC,CAAC,CAAC;AAGH,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,OAAO,YAAY,iBAAiB,CAAC,aAAa,iBAAiB;AACpH,QAAM,qBAAqB,aAAa;AACxC,QAAM,gBAAgBmL,MAAO,IAAI;AACjC,QAAM,YAAY,qBAAqB,MAAM,aAAa,oBAAoB,QAAQ,SAAS;AAC/F,QAAM,aAAa,qBAAqB,OAAO,aAAa,oBAAoB,QAAQ,UAAU;AAClG,SAAO,MAAM,QAAM;AACjB,cAAU,YAAY,MAAM,aAAa,WAAW,YAAY,QAAQ,WAAW,eAAe,EAAE,CAAC;AACrG,eAAW,YAAY,MAAM,aAAa,YAAY,WAAW,QAAQ,YAAY,eAAe,EAAE,CAAC;AACvG,cAAU,UAAU,IAAI;AACxB,eAAW,UAAU,KAAK;AAAA,EAC5B,GAAG+E,SAAQ,UAAU,GAAG,GAAG,WAAW,GAAG,CAAC;AAC5C,CAAC,CAAC;AACF,IAAM,eAAe,CAAC,QAAQ,OAAO,MAAM,IAAI,OAAO;AACpD,MAAI,cAAc,MAAM,KAAK,EAAE,EAAE,GAAG;AAClC,OAAG,KAAK,QAAQ,KAAK,CAAC;AAAA,EACxB;AACF;AAGA,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAMvK,eAAc,oBAAoB,aAAW,iBAAiB,QAAQ,IAAI,GAAG;AAAA,EACxH,WAAW,YAAU,iBAAiBA,YAAW;AAAA,IAC/C,WAAW,CAAAsN,YAAU,UAAU,WAAa,QAAQA,OAAM,CAAC;AAAA,IAC3D,WAAW,MAAM,UAAU,MAAM;AAAA,EACnC,CAAC;AAAA,EACD,WAAW,OAAK3F,IAAG3H,YAAW,CAAC;AACjC,CAAC,CAAC,CAAC;AAGH,IAAM,sBAAsB,CAAC,YAAYmH,SAAQ,YAAY,CAAAjI,QAAM6F,SAAUA,SAAU,WAAWqI,eAAc,UAAU,CAAC,GAAG,gBAAc,MAAM,QAAM;AACtJ,QAAM,SAASjG,KAAI,IAAI,OAAK,EAAE,UAAU,KAAK;AAC7C,QAAM,YAAY,MAAM;AACtB,QAAI,OAAO,MAAM,CAAApG,WAASA,WAAU,CAAC,GAAG;AACtC,cAAQ,QAAQ,OAAK,EAAE,CAAC;AACxB,SAAG,eAAe,UAAU,CAAC;AAAA,IAC/B;AAAA,EACF;AACA,aAAW,YAAY,CAAA0L,UAAQ;AAC7B,YAAQ,QAAQ,OAAK,EAAE,CAAC;AACxB,OAAGA,KAAI;AAAA,EACT,CAAC;AACD,QAAM,UAAUtF,KAAI,IAAI,CAAC,GAAG,MAAM;AAChC,UAAM,WAAW,CAAApG,WAAS;AACxB,aAAO,CAAC,IAAIA;AACZ,gBAAU;AAAA,IACZ;AACA,MAAE,UAAU,YAAY,QAAQ;AAChC,WAAO,MAAM,EAAE,UAAU,eAAe,QAAQ;AAAA,EAClD,CAAC;AACD,YAAU;AACV,SAAO,KAAK,MAAM;AAChB,YAAQ,QAAQ,OAAK,EAAE,CAAC;AAAA,EAC1B,CAAC;AACH,EAAE,GAAG,MAAM,QAAQ,MAAM;AACvB,QAAM,WAAWoG,KAAI,QAAQ,WAAS;AACpC,QAAI,CAAC,MAAM,MAAM,WAAW;AAC1B,aAAO,CAAC,KAAK;AAAA,IACf;AACA,WAAO,CAAC;AAAA,EACV,CAAC;AACD,SAAO,yBAAyB,UAAU,WAAS,SAAS,MAAM,SAAS,cAAcjI,GAAE,CAAC,CAAC;AAC/F,CAAC,CAAC,CAAC;AAWH,IAAM,iBAAiB,CAAC,MAAM,YAAY,eAAe,SAAS,MAAM,OAAO,GAAG,CAACiM,OAAMsB,UAAS1H,SAAU,yBAAyB,aAAW,KAAK,MAAMoG,MAAK,IAAI,SAASsB,KAAI,CAAC,CAAC,CAAC;AAGpL,IAAM,mBAAmB,CAAApS,WAAS,0BAA0B,iBAAiBgQ,KAAI,WAAWhQ,MAAK,CAAC;AAGlG,IAAM,iBAA8B,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,UAAU,CAAC,MAAM,MAAM,YAAY0K,SAAU,eAAe,MAAM,OAAO,GAAG,CAAAoG,UAAQ,eAAe,MAAM,SAASA,KAAI,CAAC,CAAC;;;ACh9D5L,IAAM,oBAAoB;AAG1B,IAAM,iBAA8B,uBAAO,IAAI,iBAAiB;AAGhE,IAAM1N,UAAQ;AAAA,EACZ,CAAC,cAAc,GAAG;AAAA,EAClB,aAAa;AAAA,EACb,WAAW;AACb;AAGA,IAAM+H,SAAO,CAAC,aAAa,cAAc;AACvC,MAAI,cAAc,WAAW;AAC3B,WAAO/H;AAAA,EACT;AACA,SAAO;AAAA,IACL,CAAC,cAAc,GAAG;AAAA,IAClB;AAAA,IACA;AAAA,EACF;AACF;AAoCA,IAAMmC,SAAO,UAAQ;AACnB,SAAO,OAAO,KAAK,YAAY,KAAK,WAAW;AACjD;AAUA,IAAM,QAAQ,uBAAqB;AACjC,SAAO4F,OAAK,mBAAmB,OAAO,iBAAiB;AACzD;;;AC7CA,IAAMA,SAAOA;AAQb,IAAM/H,UAAQA;AA2Dd,IAAMmC,SAAOA;AAmBb,IAAMwiB,SAAQ;;;AChHd,IAAM,qBAAqB;AAG3B,IAAM,kBAA+B,uBAAO,IAAI,kBAAkB;AAGlE,IAAM5c,SAAO,eAAa;AACxB,SAAO;AAAA,IACL,CAAC,eAAe,GAAG;AAAA,IACnB;AAAA,EACF;AACF;AAiGA,IAAM,QAAQ,UAAQ;AACpB,SAAO,KAAK,KAAK,WAAWzJ,OAAM,UAAU,MAAM0B,OAAO,CAAC,EAAE;AAC9D;AAGA,IAAM,MAAM,UAAQ;AAClB,SAAO,KAAK,KAAK,WAAW1B,OAAM,UAAU,MAAM0B,OAAO,CAAC,EAAE;AAC9D;;;AC5FA,IAAM+H,SAAOA;AAwCb,IAAMxI,SAAQ;AAQd,IAAMC,OAAM;;;ACzEZ,IAAM,cAAc;AAKpB,IAAMolB,WAAU;AAahB,IAAM,eAAe,cAAY;AAC/B,SAAO;AAAA,IACL,MAAM;AAAA,IACN,WAAW7c,OAAKK,IAAG,QAAQ,CAAC;AAAA,EAC9B;AACF;AAaA,IAAMya,UAAS,UAAQ;AACrB,SAAO,KAAK,SAAS+B;AACvB;;;ACfA,IAAMC,gBAAe;AAkBrB,IAAMhC,UAASA;;;AC1Bf,IAAM,oBAAoB;AAG1B,IAAM,iBAA8B,uBAAO,IAAI,iBAAiB;AAGhE,IAAM,0BAA0B;AAGhC,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAG5E,IAAM,mBAAmB;AAAA,EACvB,MAAM,OAAK;AAAA,EACX,KAAK,OAAK;AAAA,EACV,MAAM,OAAK;AACb;AACA,IAAM,yBAAyB;AAAA,EAC7B,MAAM,OAAK;AAAA,EACX,KAAK,OAAK;AAAA,EACV,MAAM,OAAK;AACb;AAGA,IAAM,eAAN,MAAmB;AAAA,EACjB,CAAC,cAAc,IAAI;AAAA,EACnB,YAAY,SAASxT,OAAM;AACzB,SAAK,UAAU;AACf,SAAK,OAAOA;AAAA,EACd;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,qBAAN,MAAyB;AAAA,EACvB,CAAC,oBAAoB,IAAI;AAAA,EACzB,YAAYyV,WAAU,KAAK;AACzB,SAAK,WAAWA;AAChB,SAAK,MAAM;AAAA,EACb;AAAA,EACA,QAAQ;AACN,WAAO7c,MAAMR,KAAI,KAAK,GAAG,GAAG,CAAAqZ,WAASA,OAAM,CAAC,CAAC;AAAA,EAC/C;AAAA,EACA,OAAO;AACL,WAAOxZ,SAAQG,KAAI,KAAK,GAAG,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM;AAC9C,cAAQ,QAAQ,MAAM;AAAA,QACpB,KAAK,QACH;AACE,iBAAO,SAAS,MAAM,uBAAuB,CAAC;AAAA,QAChD;AAAA,QACF,KAAK,QACH;AACE,iBAAO,QAAU,QAAQ,KAAK;AAAA,QAChC;AAAA,MACJ;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,QAAQ;AACN,WAAO+E,KAAI,KAAK,KAAK,CAACxC,MAAK,GAAG,KAAK,SAAS,OAAO,CAAC;AAAA,EACtD;AAAA,EACA,KAAK7J,QAAO;AACV,WAAO,KAAK8H,MAAMR,KAAI,KAAK,GAAG,GAAG,CAAAqZ,WAASA,OAAM,CAAC,CAAC,GAAGxZ,SAAQ,WAAS,KAAK6Z,oBAAmB7Z,SAAQ,SAAO,KAAK,QAAQ,MAAM,KAAK,SAAS,KAAK,KAAKnH,QAAO,KAAK,CAAC,GAAGmH,SAAQ,CAAC,CAAC+a,QAAO,KAAK,QAAQ,MAAMQ,QAAO,QAAQ,IAAI,KAAKrW,KAAI,KAAK,KAAK,CAAC3D,MAAK,GAAG,GAAGwZ,MAAK,CAAC,GAAGvS,UAAW/R,MAAKiM,MAAK,CAAC,CAAC,CAAC,IAAI,KAAKwC,KAAI,KAAK,KAAK,CAAC3D,MAAK,GAAG,GAAGwZ,MAAK,CAAC,GAAGvS,UAAWoK,OAAM,OAAO3a,OAAM,SAAS,SAAS,IAAI,GAAG,CAAC,CAAC,GAAG2K,IAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,EACxZ;AACF;AAGA,IAAM,gBAAgB,CAAC,SAASmF,UAAS,IAAI,aAAa,SAASA,KAAI;AAGvE,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,eAAe,MAAM,SAAO,KAAO,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AAGpG,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,MAAM,kBAAkB,MAAM,CAAC,KAAKqP,cAAazW,MAAM,EAAE,GAAG,GAAG,CAAA5I,WAAS,IAAIqf,WAAU,OAAOrf,MAAK,CAAC,CAAC,CAAC,CAAC;AAkIzJ,IAAM,SAAS,UAAQ,KAAK0I,OAAO,CAACiC,MAAK,GAAG,KAAK,OAAO,CAAC,GAAG/B,MAAM,SAAO,IAAI,mBAAmB,MAAM,GAAG,CAAC,CAAC;AA+K3G,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,MAAM,cAAc,KAAK,SAAS,CAAC,KAAK9H,QAAO,UAAUmH,SAAQ,KAAK,KAAK,KAAKnH,QAAO,KAAK,GAAG,CAAC,CAACkiB,QAAO,KAAK,QAAQ,MAAM;AAC/K,MAAIQ,QAAO,QAAQ,GAAG;AACpB,WAAO,QAAU,CAACR,QAAO,KAAK,QAAQ,CAAC;AAAA,EACzC;AACA,QAAM,YAAY,SAAS;AAC3B,QAAMhjB,SAAQ8C,OAAK4F,OAAK,KAAKxI,OAAM,SAAS,CAAC,CAAC;AAC9C,SAAO0I,MAAM,EAAE,KAAK5I,MAAK,GAAG,mBAAiB;AAC3C,UAAMqf,YAAW,OAAO,aAAa;AACrC,UAAM,WAAWnf,OAAM,SAAS;AAChC,UAAM,WAAW,MAAM,SAASmf,SAAQ;AACxC,UAAM,QAAQ,WAAW;AACzB,UAAM,SAAS,KAAK,IAAI,KAAK,IAAI,GAAGlf,KAAI,SAAS,IAAI,KAAK,GAAG,OAAO,gBAAgB;AACpF,UAAM,cAAcuI,OAAK,UAAU,MAAM;AACzC,WAAO,CAACsa,QAAO,KAAKwC,cAAa,WAAW,CAAC;AAAA,EAC/C,CAAC;AACH,CAAC,CAAC,CAAC;AA2FH,IAAM,SAAS,CAAAnG,cAAY,SAAS5J,UAAS,MAAM4J,SAAQ;AAe3D,IAAMqG,UAAS,CAAC,SAAS,MAAM,cAAc,SAAS,CAAC,KAAK,GAAG,UAAU,KAAO,MAAM,CAAC,EAAE,KAAK,GAAG,OAAOF,cAAaF,OAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AA6NlI,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAMG,cAAa,oBAAoB,MAAMA,WAAU,CAAC,GAAG,MAAM/mB,MAAK,CAAC,CAAC,CAAC;AAGrH,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAM+mB,WAAUxZ,aAAWhE,SAAQ,OAAOwd,SAAQ,GAAG,CAAAE,YAAU,YAAY,MAAM;AAAA,EACjI,WAAW,WAAS1Z,SAAO,OAAOtB,MAAK,CAAC;AAAA,EACxC,WAAW,CAAApN,WAAS,uBAAuB,MAAMooB,SAAQ1Z,UAAQ1O,MAAK;AACxE,CAAC,CAAC,CAAC;AAGH,IAAM,yBAAyB,CAAC,MAAMooB,SAAQ1Z,UAAQ1O,WAAU;AAC9D,SAAO,YAAYooB,QAAO,KAAKpoB,MAAK,GAAG;AAAA,IACrC,WAAW,MAAM,MAAMooB,QAAO,KAAK,CAAC;AAAA,IACpC,WAAW,OAAK,YAAY,MAAM;AAAA,MAChC,WAAW,WAAS1Z,SAAO,OAAOzC,MAAK,CAAC,CAAC;AAAA,MACzC,WAAW,CAAAjM,WAAS,uBAAuB,MAAMooB,SAAQ1Z,UAAQ1O,MAAK;AAAA,IACxE,CAAC;AAAA,EACH,CAAC;AACH;AAGA,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,MAAM,yBAAyB,MAAM,OAAK,KAAO,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAGpH,IAAM,2BAAwC,qBAAK,GAAG,CAAC,MAAM,MAAM0K,SAAQ,MAAM,OAAKA,SAAQ,EAAE,CAAC,GAAG,YAAU,SAAS,QAAU,CAAC,IAAIA,SAAQ,SAAS,GAAG,MAAM,yBAAyB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAGpM,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,MAAM,yBAAyB,MAAM,OAAK,KAAO,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAGpH,IAAM,2BAAwC,qBAAK,GAAG,CAAC,MAAM,MAAM,yBAAyB,MAAM,OAAK,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AAGpH,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,WAAW,mBAAmB,MAAM,QAAQ,CAAC,GAAG,MAAMvJ,MAAK,CAAC,CAAC,CAAC;AAG/G,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,kBAAkB,MAAM,CAAC,CAAC;AAGlF,IAAM,oBAAoB,CAAC,MAAM,MAAM;AACrC,SAAO,SAAS,MAAM,OAAK,IAAI,IAAIA,MAAK,CAAC,IAAIuJ,SAAQ,SAAS,GAAG,MAAM,kBAAkB,MAAM,IAAI,CAAC,CAAC,CAAC;AACxG;AAGA,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,QAAQgE,aAAWhE,SAAQ,OAAO,MAAM,GAAG,CAAA0d,YAAU,uBAAuB,MAAMA,SAAQ1Z,QAAM,CAAC,CAAC;AAGzJ,IAAM,yBAAyB,CAAC,MAAM0Z,SAAQ1Z,aAAW;AACvD,SAAO,SAAS,MAAM,OAAK,YAAY0Z,QAAO,KAAK,CAAC,GAAG;AAAA,IACrD,WAAW,MAAM,KAAKA,QAAO,KAAK,GAAG,OAAO1d,SAAQ,SAAOgE,SAAO,GAAG,GAAG,CAAC,CAAC;AAAA,IAC1E,WAAW,MAAM,uBAAuB,MAAM0Z,SAAQ1Z,QAAM;AAAA,EAC9D,CAAC,CAAC;AACJ;AAGA,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,MAAM,wBAAwB,MAAM,OAAK,KAAO,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAGlH,IAAM,0BAAuC,qBAAK,GAAG,CAAC,MAAM,MAAM,SAAS,MAAM,OAAKhE,SAAQ,EAAE,CAAC,GAAG,OAAK,IAAIvJ,MAAK,CAAC,IAAIuJ,SAAQ,SAAS,GAAG,MAAM,wBAAwB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAGpL,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,MAAM,wBAAwB,MAAM,OAAK,KAAO,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAGlH,IAAM,0BAAuC,qBAAK,GAAG,CAAC,MAAM,MAAM,wBAAwB,MAAM,OAAK,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AAGlH,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAMwd,cAAa,oBAAoB,MAAM,QAAQA,SAAQ,CAAC;AAG5G,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAM,SAASA,cAAaxd,SAAQ,OAAOwd,SAAQ,GAAG,CAAAE,YAAU,wBAAwB,MAAM,SAASA,OAAM,CAAC,CAAC;AAGjK,IAAM,0BAA0B,CAAC,MAAM,SAASA,YAAW,YAAYA,QAAO,KAAK,OAAO,GAAG;AAAA,EAC3F,WAAW,MAAM,MAAMA,QAAO,KAAK,CAAC;AAAA,EACpC,WAAW,MAAM1d,SAAQ,MAAM,OAAK,wBAAwB,MAAM,GAAG0d,OAAM,CAAC;AAC9E,CAAC;AAoBD,IAAMlQ,WAAuB,gBAAAiQ,QAAO,GAAG,OAAK,IAAI,CAAC;;;AC3yBjD,IAAM,YAAN,MAAgB;AAAA,EACd,UAAU,IAAI,MAAM;AAAA,EACpB,QAAQ;AAAA,EACR,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,UAAU,KAAK;AAAA,EAC7B;AAAA,EACA,OAAO,OAAK,YAAY,CAAAjkB,YAAU;AAChC,QAAI,KAAK,OAAO,GAAG;AACjB,YAAM,WAAW,MAAM;AACrB,YAAI,KAAK,QAAQ,GAAG;AAClB,gBAAM,gBAAgB,KAAK,QAAQ,UAAU,QAAM,OAAO,QAAQ;AAClE,cAAI,kBAAkB,IAAI;AACxB,iBAAK,QAAQ,OAAO,eAAe,CAAC;AAAA,UACtC;AACA,eAAK,SAAS;AACd,UAAAA,QAAO,QAAQ,CAAC,CAAC;AAAA,QACnB;AAAA,MACF;AACA,WAAK,QAAQ,KAAK,QAAQ;AAC1B,aAAOsJ,MAAK,KAAK,MAAM;AACrB,cAAM,gBAAgB,KAAK,QAAQ,UAAU,QAAM,OAAO,QAAQ;AAClE,YAAI,kBAAkB,IAAI;AACxB,eAAK,QAAQ,OAAO,eAAe,CAAC;AAAA,QACtC;AAAA,MACF,CAAC,CAAC;AAAA,IACJ;AACA,SAAK,SAAS;AACd,WAAOC,OAAM,QAAQ,CAAC,CAAC;AAAA,EACzB,CAAC;AAAA,EACD,UAAU,OAAK,iBAAiB,WAAS;AACvC,SAAK,SAAS;AACd,UAAM,YAAY,gBAAgB,EAAE,aAAa,MAAM;AACrD,WAAK,QAAQ,QAAQ,UAAQ,KAAK,CAAC;AAAA,IACrC,GAAG,MAAM,YAAY,yBAAyB,CAAC;AAC/C,WAAOkF;AAAA,EACT,CAAC;AAAA,EACD,cAAc,OAAK,UAAQ,oBAAoB,aAAWjI,SAAQ,QAAQ,KAAK,KAAK,CAAC,CAAC,GAAG,aAAW,SAAS,QAAQ,IAAI,GAAG,KAAK,QAAQ,OAAO,CAAC,CAAC,CAAC;AACrJ;AAGA,IAAM,sBAAsB,YAAU;AACpC,SAAO,IAAI,UAAU,MAAM;AAC7B;AAGA,IAAM,gBAAgB,aAAW,KAAK,MAAM,oBAAoB,OAAO,CAAC;AAGxE,IAAM,mBAAmB,UAAQ,iBAAiB,MAAM,aAAa;AAGrE,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,eAAeW,MAAI,iBAAiB,MAAM,UAAU,GAAG,CAAA6Y,WAASA,OAAM,CAAC,CAAC,CAAC;AAGpH,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM,eAAe;AAClE,QAAMpC,YAAW,OAAO,UAAU;AAClC,SAAOpX,SAAQ,QAAQ,GAAG,SAAOW,MAAI,iBAAiB+B,MAAK,CAAC,GAAG,CAAA9F,WAAS,CAAC,eAAe,eAAe,MAAMwa,WAAUxa,MAAK,GAAG,GAAG,GAAG,gBAAgBA,MAAK,CAAC,CAAC,CAAC;AAC/J,CAAC;AAGD,IAAM,qBAAqB,CAAC,MAAM,YAAY3E,WAAU;AACtD,QAAM,mBAAmB,SAAS,OAAO,UAAU,CAAC;AACpD,SAAO,KAAK,aAAa,GAAGwQ,KAAI,CAAAlS,cAAY,aAAa,MAAMA,SAAQ,CAAC,GAAGoK,MAAI,CAAApK,cAAYgL,MAAK,CAACtJ,SAAQ,kBAAkB1B,SAAQ,CAAC,CAAC,CAAC;AACxI;AAGA,IAAM,iBAAiB,CAAC,MAAM,YAAYqG,WAAU,oBAAoB,aAAW,KAAK6O,WAAU,CAAAD,WAASA,OAAM,iBAAiB,GAAGxL,SAAQ,UAAQ,mCAAmCpD,QAAO,CAAAmB,YAAU;AACvM,UAAQA,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAOwD,MAAK,mBAAmB,MAAM,YAAY,IAAI,CAAC;AAAA,IACxD;AAAA,IACF,KAAK,QACH;AACE,YAAM,CAACrJ,IAAG,IAAI6F,QAAO;AACrB,aAAO7F,OAAM,QAAQ,IAAIqJ,MAAK,mBAAmB,MAAM,YAAY,IAAI,CAAC,IAAImB,MAAK;AAAA,IACnF;AAAA,EACJ;AACF,CAAC,CAAC,GAAG1C,SAAQ,CAAAjC,YAAUwE,QAAOxE,OAAM,IAAI,WAAW,iGAAiG,IAAI,QAAQ,cAAcA,QAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGjM,IAAM,kBAAkB,CAAAnB,WAASsI,KAAItI,QAAO8F,MAAK,CAAC;AAGlD,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,iBAAiB,MAAM,CAAAiC,cAAY,EAAE,SAASA,SAAQ,CAAC,CAAC,CAAC;AAGjH,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAMA,cAAa3E,SAAQ,OAAO,gBAAc,KAAK,WAAW,MAAM,UAAU,GAAG,SAASA,SAAQ,WAAW,MAAM,GAAG2E,SAAQ,CAAC,CAAC,CAAC,CAAC;AAInL,IAAM,UAAuB,qBAAK,UAAQ,WAAW,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,YAAY,SAAS,UAAU,yBAAyB,SAAS,IAAI,IAAIhE,MAAI,kBAAkB,SAAS,IAAI,GAAG,QAAQ,CAAC;AAGjM,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM1E,WAAU,oBAAoB,aAAW+D,SAAQ/D,OAAM,KAAK8J,WAAU,GAAG,WAAS,KAAK,QAAQ,IAAI,GAAG,OAAO,CAAA2B,UAAQ,MAAM,MAAMA,KAAI,CAAC,GAAG,YAAYe,KAAI,WAAS,MAAM,aAAa,MAAM,YAAY,CAAA7C,aAAW,OAAOA,UAAS,MAAM,GAAG,CAAC,IAAIqC,QAAOD,QAAO,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGrU,IAAM,aAAa,UAAQ,UAAU,CAAA/L,WAAS,OAAO,MAAMA,MAAK,CAAC;AAGjE,IAAM,YAAY,WAASsE,MAAK,KAAK;AAGrC,IAAM,kBAAkB,WAAS,QAAQ,MAAMP,SAAQ,OAAOO,KAAI,CAAC;AACnE,IAAM,gBAA6B,uBAAO,IAAI,mCAAmC;AACjF,IAAM,MAAN,MAAU;AAAA,EACR,CAAC,aAAa,IAAI;AAAA,EAClB,YAAY,GAAG,IAAI;AACjB,SAAK,IAAI;AACT,SAAK,KAAK;AAAA,EACZ;AAAA,EACA,CAACvD,OAAM,EAAE,MAAM;AACb,QAAI,YAAY,MAAM,aAAa,GAAG;AACpC,UAAI,KAAK,IAAI;AACX,eAAO,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,MAC/B,OAAO;AACL,eAAO,OAAO,KAAK,GAAG,KAAK,CAAC;AAAA,MAC9B;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,CAAC,MAAQ,IAAI;AACX,WAAO,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC;AAAA,EAClC;AACF;AAGA,IAAM,kBAAkB,CAAC,GAAG,OAAO;AACjC,SAAO,KAAK,KAAK,MAAMtE,QAAM,CAAC,GAAGsH,SAAQ,gBAAgB,GAAGW,MAAI,SAAO,OAAK,KAAK,IAAI,aAAa,WAAS;AACzG,UAAM,SAAS,KAAK,OAAOR,MAAI,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC;AAC9C,QAAIoC,QAAO,MAAM,GAAG;AAClB,aAAO,KAAK,aAAa,GAAGkG,KAAI,CAAAlS,cAAY,KAAK,cAAc,EAAE,CAAC,CAAC,GAAG,aAAaA,SAAQ,GAAG,IAAI,CAAC,GAAGoK,MAAI,CAAApK,cAAY,CAACA,WAAU,KAAK,OAAO2O,KAAM,IAAI,IAAI,GAAG,EAAE,GAAG3O,SAAQ,CAAC,CAAC,CAAC,CAAC;AAAA,IACjL;AACA,WAAO,QAAQ,CAAC,OAAO,OAAO,KAAK,CAAC;AAAA,EACtC,CAAC,GAAGyJ,SAAQ,aAAa,GAAGA,SAAQ,CAAC,CAAC6G,QAAO,CAAC,MAAM,KAAK,eAAeA,MAAK,GAAGjE,IAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F;AAGA,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,CAAC,GAAG,CAAA2E,YAAUtH,SAAQsH,OAAM,CAAC,CAAC;AAGpH,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAMiW,cAAa,KAAK,MAAM,gBAAgBA,SAAQ,GAAG,UAAU,CAAC;AAGjH,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,eAAe;AAC5D,QAAM,YAAY,oBAAoB,mBAAmB,OAAK,EAAE,IAAI,UAAU,CAAC;AAC/E,SAAO,UAAU,IAAI;AACvB,CAAC;AAGD,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAMpG,cAAa,UAAU,MAAM;AAAA,EACvE,WAAW1U;AAAA,EACX,WAAWnB;AAAA,EACX,UAAA6V;AACF,CAAC,CAAC;AAGF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC9C,UAAAA;AAAA,EACA;AACF,MAAMnX,SAAQ,UAAU,MAAM;AAAA,EAC5B,WAAW,MAAM,SAAS,SAAS;AAAA,EACnC,WAAW;AAAA,EACX,UAAAmX;AACF,CAAC,CAAC,CAAC;AAGH,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM;AAAA,EACnD,UAAAA;AAAA,EACA;AACF,MAAMnX,SAAQ,UAAU,MAAM;AAAA,EAC5B,WAAW,MAAM,cAAc,SAAS;AAAA,EACxC,WAAW;AAAA,EACX,UAAAmX;AACF,CAAC,CAAC,CAAC;AAGH,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC5C,UAAAA;AAAA,EACA;AAAA,EACA;AACF,MAAM,YAAY,mBAAiB,eAAe,MAAM/O,eAAcuK,OAAMwE,SAAQ,CAAC,GAAG;AAAA,EACtF,WAAW,CAAC,QAAQ,UAAUpX,SAAQ,OAAO,MAAM,GAAG,CAAA0H,UAAQ;AAC5D,QAAIA,MAAK,SAAS,WAAW;AAC3B,aAAO1H,SAAQ,OAAO,WAAW,GAAG,MAAM4C,IAAG,iBAAiB,OAAO,aAAa,GAAG,UAAU8E,MAAK,KAAK,CAAC,CAAC;AAAA,IAC7G,OAAO;AACL,aAAO1H,SAAQ,iBAAiB,OAAO,aAAa,GAAG,MAAM,cAAc0H,MAAK,KAAK,CAAC;AAAA,IACxF;AAAA,EACF,CAAC;AAAA,EACD,YAAY,CAAC,QAAQ,UAAU1H,SAAQ,OAAO,MAAM,GAAG,CAAA0H,UAAQ;AAC7D,QAAIA,MAAK,SAAS,WAAW;AAC3B,aAAO1H,SAAQ,OAAO,WAAW,GAAG,MAAM4C,IAAG,iBAAiB,OAAO,aAAa,GAAG,UAAU,CAAC,CAAC;AAAA,IACnG,OAAO;AACL,aAAO5C,SAAQ,iBAAiB,OAAO,aAAa,GAAG,MAAM,cAAc0H,MAAK,KAAK,CAAC;AAAA,IACxF;AAAA,EACF,CAAC;AAAA,EACD,YAAY;AACd,CAAC,CAAC,CAAC;AAKH,IAAM,wBAAwB;AAG9B,IAAM,qBAAkC,uBAAO,IAAI,qBAAqB;AAGxE,IAAM,uBAAuB;AAAA,EAC3B,IAAI,OAAK;AACX;AAGA,IAAM,mBAAN,MAAuB;AAAA,EACrB,CAAC,kBAAkB,IAAI;AAAA,EACvB,CAAC,SAAS,IAAI;AAAA,EACd,YAAY,KAAK,UAAU;AACzB,SAAK,MAAM;AACX,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,OAAO,GAAG;AACR,WAAO,KAAK,aAAa,OAAK,QAAQ,EAAE,CAAC,CAAC,CAAC;AAAA,EAC7C;AAAA,EACA,aAAa,GAAG;AACd,WAAO,KAAK,SAAS,KAAK1H,SAAQG,KAAM,KAAK,GAAG,GAAG,CAAC,GAAGH,SAAQ,CAAC,CAAC,GAAG,CAAC,MAAM4C,IAAGsC,KAAI,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAAA,EACtG;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,mBAAmB,CAAA5P,WAAS,KAAK,MAAM,uBAAuBA,MAAK,CAAC;AAG1E,IAAM,yBAAyB,CAAAA,WAAS;AACtC,QAAM,MAAMqQ,YAAWrQ,MAAK;AAC5B,QAAM,MAAM,oBAAoB,CAAC;AACjC,SAAO,IAAI,iBAAiB,KAAK,IAAI,YAAY,CAAC,CAAC;AACrD;AAGA,IAAM,qCAAkD,qBAAK,GAAG,CAAC,MAAM,OAAO,KAAK,aAAa,CAAAA,WAAS;AACvG,QAAM,SAAS,GAAGA,MAAK;AACvB,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO,QAAQ,CAACA,QAAOA,MAAK,CAAC;AAAA,IAC/B;AAAA,IACF,KAAK,QACH;AACE,aAAOqL,MAAI,OAAO,OAAO,OAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IACtC;AAAA,EACJ;AACF,CAAC,CAAC;;;ACxRF,IAAM,kBAAkB;AAKxB,IAAM,UAAU;AAKhB,IAAM,WAAW;AAKjB,IAAM,iBAAiB;AAKvB,IAAM,YAAY;AAKlB,IAAM,aAAa;AAKnB,IAAM,gBAAgB;AAKtB,IAAMgd,eAAc;AAKpB,IAAM,kBAAkB;;;AC4CxB,IAAMjC,UAAS;AAsFf,IAAMkC,cAAa;AAUnB,IAAMxV,aAAY;AAkBlB,IAAM,cAAc;AA2BpB,IAAMyV,kBAAiB;AAsBvB,IAAMtd,QAAOA;AAgFb,IAAMob,QAAO;AAgBb,IAAMmC,SAAQ;;;ACpUd,IAAMC,cAAa,CAAAhM,aAAW,CAAC,MAAM,YAAY;AAC/C,QAAMnM,WAAUD,YAAW;AAC3B,QAAM4B,UAAS;AACf,MAAI+S,aAAYH,WAAUpI,SAAQ,WAAW;AAAA,IAC3C,SAAAnM;AAAA,IACA,UAAU;AAAA,IACV,OAAOmM,SAAQ;AAAA,EACjB,CAAC;AACD,MAAI,SAAS,WAAW;AACtB,IAAAuI,aAAYH,WAAUG,YAAW;AAAA,MAC/B,SAAA1U;AAAA,MACA,UAAU;AAAA,MACV,OAAO,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH;AACA,MAAI,SAAS,YAAY;AACvB,IAAA0U,aAAY,QAAQ,WAAWA,YAAW1U,QAAO;AAAA,EACnD;AACA,QAAM,eAAe,IAAI,aAAaA,UAASmU,QAAOO,YAAW1U,QAAO,GAAGmM,SAAQ,YAAY;AAC/F,QAAM,aAAa,aAAa;AAGhC,MAAI,eAAerP,OAAM;AACvB,eAAW,QAAQqP,SAAQ,SAASxK,SAAQ7E,MAAO,GAAG,YAAY;AAClE,iBAAa,YAAY,CAAAgF,UAAQ,WAAW,MAAMA,OAAM,YAAY,CAAC;AAAA,EACvE;AACA,cAAY,IAAIqK,SAAQ,cAAc,YAAY;AAClD,eAAa,MAAMxK,OAAM;AACzB,SAAO;AACT;AAGA,IAAM,oBAAoB,CAAAwK,aAAW,CAACxK,SAAQgC,YAAW;AACvD,QAAM,eAAewU,YAAWhM,QAAO,EAAExK,OAAM;AAC/C,MAAIgC,SAAQ;AACV,iBAAa,YAAY,CAAA7B,UAAQ;AAC/B,MAAA6B,QAAO7B,KAAI;AAAA,IACb,CAAC;AAAA,EACH;AACA,SAAO,CAACvN,KAAI,oBAAoB,kBAAkB4X,QAAO,EAAE,KAAK,cAAc,YAAY5X,OAAMuI,KAAM,CAAC,GAAG,kBAAkB,CAAAgF,UAAQ,gBAAgBzH,SAAQyH,KAAI,CAAC,IAAI,MAAM;AAC7K;AAGA,IAAM,gBAAgB,CAAAqK,aAAW,CAAAxK,YAAU;AACzC,QAAM,SAAS,kBAAkBwK,QAAO,EAAExK,OAAM;AAChD,MAAI,OAAO,SAAS,WAAW;AAC7B,UAAM,aAAa,OAAO,EAAE;AAAA,EAC9B,OAAO;AACL,WAAO,OAAO;AAAA,EAChB;AACF;AAGA,IAAM,sBAAsB,WAAS;AACnC,QAAM,QAAQ,MAAM;AACpB,QAAM,kBAAkB;AACxB,QAAM,QAAQ,IAAI,MAAM;AACxB,QAAM,kBAAkB;AACxB,QAAM,UAAU,UAAU,MAAM,GAAG,EAAE,EAAE;AACvC,QAAM,OAAO;AACb,SAAO,iBAAiB,OAAO;AAAA,IAC7B,MAAM;AAAA,MACJ,OAAO;AAAA,IACT;AAAA,IACA,OAAO;AAAA,MACL,OAAO;AAAA,IACT;AAAA,IACA,SAAS;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA,MAAM;AAAA,MACJ,OAAO;AAAA,IACT;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AACJ,eAAO,MAAM;AAAA,MACf;AAAA,IACF;AAAA,IACA,CAAC,iBAAiB,GAAG;AAAA,MACnB,MAAM;AACJ,eAAO,MAAM;AAAA,MACf;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAMA,IAAM,iBAA8B,uBAAO,IAAI,6BAA6B;AAE5E,IAAM,sBAAmC,uBAAO,IAAI,mCAAmC;AAEvF,IAAM,eAAe,CAAAtQ,WAAS;AAC5B,QAAM,QAAQ,MAAM;AACpB,QAAM,kBAAkB;AACxB,QAAM,QAAQ,IAAI,MAAM;AACxB,QAAM,kBAAkB;AACxB,QAAM,iBAAiB,aAAaA,MAAK;AACzC,MAAI,eAAe,SAAS,GAAG;AAC7B,UAAMD,QAAO,eAAe,CAAC;AAC7B,UAAM,OAAOA,MAAK,QAAQ,MAAM,GAAG,EAAE,CAAC;AACtC,UAAM,UAAUA,MAAK,QAAQ,UAAU,MAAM,KAAK,SAAS,CAAC;AAC5D,UAAM,QAAQ,OAAOC,MAAK;AAAA,EAC5B;AACA,QAAM,cAAc,IAAI;AACxB,QAAM,mBAAmB,IAAIA;AAC7B,QAAM,SAAS,MAAM;AACnB,WAAO;AAAA,MACL,KAAK;AAAA,MACL,OAAOA,OAAM,OAAO;AAAA,IACtB;AAAA,EACF;AACA,QAAM,WAAW,MAAM;AACrB,WAAO,SAAS,MAAM,OAAO,CAAC;AAAA,EAChC;AACA,QAAM,iBAAiB,IAAI,MAAM;AAC/B,WAAO,MAAM,OAAO;AAAA,EACtB;AACA,SAAO;AACT;AAIA,IAAM,WAAW,CAAAsQ,YAAU;AACzB,QAAM,KAAKA;AACX,UAAQ,GAAG,KAAK;AAAA,IACd,KAAK;AAAA,IACL,KAAK,WACH;AAEE,aAAO;AAAA,IACT;AAAA,IACF,KAAK,QACH;AACE,aAAO,SAAS,GAAG,IAAI;AAAA,IACzB;AAAA,IACF,KAAK,SACH;AACE,aAAO,YAAY,GAAG,KAAK;AAAA,IAC7B;AAAA,IACF,KAAK,QACH;AACE,aAAO,YAAY,GAAG,KAAK;AAAA,IAC7B;AAAA,IACF,KAAK,QACH;AAEE,aAAO,SAAS,uBAAuB,CAAC;AAAA,IAC1C;AAAA,EACJ;AACF;AAGA,IAAM,oBAAoB,CAAAwK,aAAW,CAAAxK,YAAU;AAC7C,QAAM,KAAK,SAASA,OAAM;AAC1B,MAAI,IAAI;AACN,WAAO;AAAA,EACT;AACA,QAAM,YAAY,IAAI,cAAc;AACpC,QAAM,eAAewW,YAAWhM,QAAO,EAAExK,SAAQ;AAAA,IAC/C;AAAA,EACF,CAAC;AACD,YAAU,MAAM;AAChB,QAAM,SAAS,aAAa,WAAW;AACvC,MAAI,QAAQ;AACV,WAAO;AAAA,EACT;AACA,QAAM,oBAAoB,YAAY;AACxC;AAGA,IAAM,mBAAmB,CAAAwK,aAAW,CAAAxK,YAAU,qBAAqBwK,QAAO,EAAExK,OAAM,EAAE,KAAK,YAAU;AACjG,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK,YACH;AACE,aAAO,OAAO;AAAA,IAChB;AAAA,IACF,KAAK,YACH;AACE,YAAM,aAAa,OAAO,EAAE;AAAA,IAC9B;AAAA,EACJ;AACF,CAAC;AAGD,IAAM,uBAAuB,CAAAwK,aAAW,CAAAxK,YAAU,IAAI,QAAQ,aAAW;AACvE,QAAM,KAAK,SAASA,OAAM;AAC1B,MAAI,IAAI;AACN,YAAQ,EAAE;AAAA,EACZ;AACA,EAAAwW,YAAWhM,QAAO,EAAExK,OAAM,EAAE,YAAY,CAAAG,UAAQ;AAC9C,YAAQA,KAAI;AAAA,EACd,CAAC;AACH,CAAC;AAGD,IAAM,cAAN,MAAkB;AAAA,EAChB,YAAYzO,UAASoiB,eAAcf,YAAW;AAC5C,SAAK,UAAUrhB;AACf,SAAK,eAAeoiB;AACpB,SAAK,YAAYf;AAAA,EACnB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM7Z,SAAO,aAAW,IAAI,YAAY,QAAQ,SAAS,QAAQ,cAAc,QAAQ,SAAS;AAGhG,IAAMsR,WAAU,MAAM,iBAAiB,CAAC,OAAOrb,YAAW,QAAQ,IAAI,YAAY,MAAM,YAAY,cAAc,GAAGA,QAAO,cAAc,MAAM,aAAa,CAAC,CAAC,CAAC;AAGhK,IAAM,sBAAmC,gBAAA+J,OAAO,cAAc,qBAAqB,cAAc;AAGjG,IAAM,iBAA8B,gBAAAA,OAAK;AAAA,EACvC,SAAsB,gBAAA/H,OAAM;AAAA,EAC5B,cAAc;AAAA,EACd,WAAwB,gBAAAA,QAAQ;AAClC,CAAC;AAGD,IAAM,kBAA+B,kCAAkB,cAAc;AAGrE,IAAM,mBAAgC,gBAAAqlB,YAAW,cAAc;AAG/D,IAAM,yBAAsC,iCAAiB,cAAc;AAG3E,IAAM,6BAA0C,qCAAqB,cAAc;AAGnF,IAAM,sBAAmC,8BAAc,cAAc;AAGrE,IAAM,0BAAuC,kCAAkB,cAAc;AAK7E,IAAM,cAAc,cAAY/d,SAAQ,aAAa,GAAG,CAAAzJ,cAAYyJ,SAAQ+R,SAAQ,GAAG,CAAAA,aAAW,oBAAoB,aAAWvJ,UAAS,KAAK,QAAQ,cAAc,SAAS,QAAM,kBAAkBuJ,QAAO,EAAE,aAAa,IAAIxb,SAAQ,CAAC,CAAC,GAAG,CAAAU,WAAS,kBAAkBV,WAAUU,MAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,cAAcV,SAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;;ACjPhU,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,aAAa,CAAC,CAAC;AAY3E,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM,OAAO,KAAK,aAAa,CAAAjB,WAAS;AACrF,QAAM,SAAS,GAAGA,MAAK;AACvB,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAO,QAAQ,CAAC,QAAQA,MAAK,CAAC;AAAA,IAChC;AAAA,IACF,KAAK,QACH;AACE,aAAOqL,MAAI,OAAO,OAAO,OAAK,CAAC,QAAQ,CAAC,CAAC;AAAA,IAC3C;AAAA,EACJ;AACF,CAAC,CAAC;;;ACRF,IAAM,QAAQ;AAad,IAAMiJ,gBAAe;AAkBrB,IAAM,QAAQ;AAWd,IAAM5T,UAAS;AASf,IAAMyX,QAAO;AAWb,IAAM,MAAM;AAUZ,IAAMhN,SAAO;;;AC1Fb,IAAM,iBAAiB;AAGvB,IAAM,cAA2B,uBAAO,IAAI,cAAc;AAG1D,IAAM,gBAAgB;AAAA,EACpB,MAAM,OAAK;AAAA,EACX,IAAI,OAAK;AAAA,EACT,OAAO,OAAK;AACd;AAGA,IAAM0F,SAAQ;AAAA,EACZ,CAAC,WAAW,GAAG;AAAA,EACf,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AA2BA,IAAM,UAAU,OAAK,YAAY,GAAG,WAAW;AAG/C,IAAM,UAAU,UAAQ;AACtB,SAAO,KAAK,SAAS;AACvB;AAOA,IAAM,UAAN,MAAc;AAAA,EACZ,YAAY,KAAK;AACf,SAAK,MAAM;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,iBAAiB6X,QAAO/hB,QAAO;AAC7B,WAAO,KAAK,aAAa,KAAK,KAAK,CAAA0E,UAAO;AACxC,YAAM,QAAQA,MAAI,IAAIqd,MAAK;AAC3B,UAAI,UAAU,QAAW;AACvB,cAAM,CAAC,SAAS,OAAO,IAAI;AAC3B,cAAMpT,UAAS,KAAK,SAAS5K,SAAU,CAAC,CAAC6G,QAAO,CAAC,MAAM,KAAK,eAAeA,MAAK,GAAGjE,IAAG,CAAC,CAAC,CAAC,GAAG,OAAO,UAAU;AAAA,UAC3G,WAAW,MAAMqF;AAAA,UACjB,WAAW,MAAM,sBAAsBhM,QAAO,OAAO;AAAA,QACvD,CAAC,CAAC,CAAC;AACH,eAAO,QAAU,CAAC2O,SAAQjK,KAAG,CAAC;AAAA,MAChC;AACA,aAAO,KAAKF,OAAO,CAAC,GAAGT,SAAU,eAAa,KAAK,aAAa,GAAGA,SAAU,CAAAzJ,cAAY,KAAKkK,OAAO,MAAMwH,KAAI,GAAGtH,MAAM,kBAAgB;AACtI,cAAM,WAAW,oBAAoB,aAAW,KAAK,UAAU,GAAGX,SAAU,gBAAc,KAAK,QAAQA,SAAU,UAAUge,QAAO,UAAU,GAAG,OAAK,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,MAAMhe,SAAU,CAAA0H,UAAQ;AACpM,kBAAQA,MAAK,MAAM;AAAA,YACjB,KAAK,YACH;AACE,qBAAO,KAAK,kBAAkBnR,WAAUmR,MAAK,EAAE,GAAGc,UAAS,WAAW,YAAYd,KAAI,CAAC,GAAGc,UAAS,UAAYd,MAAK,EAAE,CAAC,CAAC;AAAA,YAC1H;AAAA,YACF,KAAK,YACH;AACE,qBAAO,KAAKxC,KAAI,cAAc,CAAAwC,UAAQ,KAAK,WAAW,YAAYA,KAAI,GAAG,WAAWiT,QAAO,WAAW,OAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG3S,OAAM,CAAC,GAAGQ,UAAS5B,QAAO,WAAW,OAAK,IAAI,CAAC,CAAC,GAAG4B,UAAS,sBAAsBvM,QAAO,CAAAyL,UAAQ,KAAKvH,KAAM,YAAY,GAAGH,SAAU,CAAA/E,eAAaA,WAAUyM,KAAI,CAAC,CAAC,CAAC,CAAC,GAAGc,UAAS,gBAAgBjS,WAAUmR,MAAK,EAAE,CAAC,GAAG9E,IAAG8E,MAAK,GAAG,CAAC,CAAC,CAAC;AAAA,YACpW;AAAA,UACJ;AAAA,QACF,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,cAAM,WAAW,CAAC,KAAK,cAAcnR,SAAQ,GAAG,OAAO,gBAAgB;AAAA,UACrE,WAAW,MAAM0R;AAAA,UACjB,WAAW,MAAMrB,QAAO,WAAW,OAAK,IAAI,CAAC;AAAA,QAC/C,CAAC,CAAC,CAAC,GAAG,CAAAc,UAAQ,KAAKvH,KAAM,YAAY,GAAGH,SAAU,CAAA/E,eAAaA,WAAUyM,KAAI,CAAC,CAAC,CAAC;AAChF,eAAO,CAAC,UAAU,QAAQsW,MAAK,IAAIrd,QAAMA,MAAI,IAAIqd,QAAO,QAAQ,CAAC;AAAA,MACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACR,CAAC,GAAG/d,QAAS;AAAA,EACf;AACF;AACA,IAAM,cAAc,MAAMU,MAAM,iBAAiB,oBAAI,IAAI,CAAC,GAAG,SAAO,IAAI,QAAQ,GAAG,CAAC;AAGpF,IAAM,QAAQ,UAAQ,UAAU,CAAA1E,WAAS,eAAe,MAAMA,MAAK,CAAC;AAGpE,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAMA,WAAU+D,SAAU,YAAY,GAAG,aAAWA,SAAU,UAAU,MAAM/D,MAAK,GAAG,CAAA6e,SAAOA,KAAI,OAAO,CAAC,CAAC,CAAC;AACxJ,IAAM,YAAY,CAAC,MAAM7e,WAAU;AACjC,QAAM,KAAK;AACX,UAAQ,GAAG,MAAM;AAAA,IACf,KAAK,WACH;AACE,aAAO,KAAO,MAAM,aAAW,GAAG,EAAE,QAAQ,iBAAiB,GAAG,MAAMA,MAAK,CAAC,CAAC;AAAA,IAC/E;AAAA,IACF,KAAK,eACH;AACE,aAAO,KAAO,MAAM,aAAW,UAAU,CAAAA,WAAS,QAAQ,iBAAiB,GAAG,OAAOA,MAAK,CAAC,CAAC;AAAA,IAC9F;AAAA,IACF,KAAK,QACH;AACE,aAAO,KAAO,MAAM,aAAW,KAAK,QAAQ,iBAAiB,GAAG,OAAOA,MAAK,GAAG,iBAAiB;AAAA,QAC9F,WAAW,CAAAhF,WAAS,QAAQ,iBAAiB,GAAG,SAASA,MAAK,GAAGgF,MAAK;AAAA,QACtE,WAAW,CAAA3G,WAAS,QAAQ,iBAAiB,GAAG,SAASA,MAAK,GAAG2G,MAAK;AAAA,MACxE,CAAC,CAAC,CAAC;AAAA,IACL;AAAA,IACF,KAAK,SACH;AACE,aAAO,KAAO,MAAM,OAAK,KAAK,GAAG,OAAO,eAAeA,MAAK,CAAC,CAAC;AAAA,IAChE;AAAA,IACF,KAAK,cACH;AACE,aAAO,KAAO,MAAM,OAAK,GAAG,MAAM;AAAA,IACpC;AAAA,IACF,KAAK,aACH;AACE,aAAO,KAAO,MAAM,aAAW,KAAK,QAAQ,iBAAiB,GAAG,OAAOA,MAAK,GAAG+D,SAAU,SAAO,KAAK,QAAQ,iBAAiB,GAAG,QAAQ/D,MAAK,GAAG,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;AAAA,IACzK;AAAA,IACF,KAAK,UACH;AACE,aAAO,KAAO,MAAM,OAAK,YAAY,GAAG,QAAQA,MAAK,CAAC;AAAA,IACxD;AAAA,IACF,KAAK,WACH;AACE,aAAO,KAAO,MAAM,aAAW,QAAQ,iBAAiB,GAAG,SAAS,GAAGA,MAAK,CAAC;AAAA,IAC/E;AAAA,IACF,KAAK,WACH;AACE,aAAO,KAAO,MAAM,aAAW,KAAK,QAAQ,iBAAiB,GAAG,OAAOA,MAAK,GAAG8F,SAAQ,QAAQ,iBAAiB,GAAG,QAAQ9F,MAAK,GAAG,GAAG,IAAI,CAAC,CAAC;AAAA,IAC9I;AAAA,IACF,KAAK,cACH;AACE,aAAO,KAAO,MAAM,aAAW,KAAK,QAAQ,iBAAiB,GAAG,OAAOA,MAAK,GAAG,eAAe,QAAQ,iBAAiB,GAAG,QAAQA,MAAK,GAAG,GAAG,MAAM;AAAA,QACjJ,YAAY;AAAA,MACd,CAAC,CAAC,CAAC;AAAA,IACL;AAAA,EACJ;AACF;AAOA,IAAM6O,YAAwB,qBAAK,GAAG,CAAC,MAAM,cAAczV,OAAM,MAAM;AAAA,EACrE;AAAA,EACA,WAAW;AACb,CAAC,CAAC;AAGF,IAAM0V,iBAA6B,qBAAK,GAAG,CAAC,MAAM,cAAcgF,YAAW,MAAM;AAAA,EAC/E;AAAA,EACA,WAAW;AACb,CAAC,CAAC;AAGF,IAAM5H,OAAM,YAAUkB,WAAUlB,KAAM,MAAM,CAAC;AAG7C,IAAM+D,WAAU,CAAAjI,cAAY2I,eAAc,MAAMzE,KAAMlE,UAAS,CAAC,CAAC;AAGjE,IAAM,UAAU,UAAQtD,MAAI,MAAM,MAAMjI,OAAM,CAAC;AAG/C,IAAMO,WAAU,MAAM,kBAAkB,QAAU,CAAC;AAGnD,IAAM,cAAc,UAAQ;AAC1B,QAAMglB,eAAc,OAAO,OAAO9X,MAAK;AACvC,EAAA8X,aAAY,OAAO;AACnB,EAAAA,aAAY,QAAQ;AACpB,SAAOA;AACT;AAGA,IAAMxnB,QAAO,WAAS4S,WAAU5S,MAAO,KAAK,CAAC;AAG7C,IAAMoW,YAAW,CAAA5I,cAAY2I,eAAc,MAAMnW,MAAOwN,UAAS,CAAC,CAAC;AAGnE,IAAMoF,aAAY,CAAApS,WAAS,kBAAkB,UAAYA,MAAK,CAAC;AAG/D,IAAM2V,iBAAgB,CAAA3I,cAAY,kBAAkB,cAAgBA,SAAQ,CAAC;AAG7E,IAAMjE,YAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM3K,OAAM,MAAM;AAAA,EAC5D,WAAWoB;AAAA,EACX,WAAW;AACb,CAAC,CAAC;AAGF,IAAMwJ,WAAuB,qBAAK,GAAG,CAAC,MAAM,QAAQD,UAAQ,MAAMG,KAAI,GAAG,CAAC,CAAC;AAG3E,IAAM,QAAQ,UAAQ;AACpB,QAAM+d,SAAQ,OAAO,OAAO/X,MAAK;AACjC,EAAA+X,OAAM,OAAO;AACb,EAAAA,OAAM,QAAQ;AACd,SAAOA;AACT;AAGA,IAAMC,cAA0B,qBAAK,GAAG,CAAC,GAAG,MAAM;AAChD,QAAM,WAAW5X,OAAM,CAAC;AACxB,QAAM,MAAM,WAAW,IAAI;AAC3B,QAAMgB,UAAS,WAAW,IAAI;AAC9B,SAAO,kBAAkB5G,MAAM4G,SAAQ,CAAAd,aAAWhG,OAAK,KAAKgG,QAAO,CAAC,CAAC;AACvE,CAAC;AAGD,IAAM,oBAAoB,CAAAc,YAAU,kBAAkB5G,MAAM4G,SAAQ,MAAM7O,OAAM,CAAC,CAAC;AAGlF,SAAS,kBAAkB6O,SAAQ;AACjC,QAAM4W,cAAa,OAAO,OAAOhY,MAAK;AACtC,EAAAgY,YAAW,OAAO;AAClB,EAAAA,YAAW,SAAS5W;AACpB,SAAO4W;AACT;AAGA,IAAMC,mBAA+B,qBAAK,GAAG,CAAC,MAAM,KAAK9oB,WAAU,cAAc,MAAM,gBAAkB,KAAKA,MAAK,CAAC,CAAC;AAGrH,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACtD,QAAM+oB,WAAU,OAAO,OAAOlY,MAAK;AACnC,EAAAkY,SAAQ,OAAO;AACf,EAAAA,SAAQ,OAAO;AACf,EAAAA,SAAQ,IAAI;AACZ,SAAOA;AACT,CAAC;AAGD,IAAMC,uBAAmC,qBAAK,GAAG,CAAC,MAAM,KAAKhpB,WAAU,cAAc,MAAM,oBAAsB,KAAKA,MAAK,CAAC,CAAC;AAG7H,IAAMipB,yBAAwB,CAAC,MAAMjpB,WAAU,cAAc,sBAAwB,MAAMA,MAAK,CAAC;AAGjG,IAAMkpB,6BAA4B,CAAC,MAAMlpB,WAAU,cAAc,0BAA4B,MAAMA,MAAK,CAAC;AAGzG,IAAM,eAAe,CAAC,MAAM,MAAM,MAAM,kBAAkBqL,MAAM,MAAM,OAAKF,OAAK,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAG5F,IAAM,SAAS,UAAQ,aAAa+H,UAAS,UAAU,CAAAvM,WAAS,KAAK,MAAM,eAAeA,MAAK,CAAC,CAAC,GAAG,KAAK,CAAC;AAG1G,IAAM0E,QAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMX,UAAQ,MAAM,CAAA/G,aAAW,eAAe,EAAEA,QAAO,CAAC,CAAC,CAAC;AAGlG,IAAM2W,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM9E,UAAS,MAAM,WAAS+B,UAAS,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAGpG,IAAMkD,cAA0B,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC7C;AAAA,EACA;AACF,MAAM;AACJ,QAAM0O,QAAO,OAAO,OAAOtY,MAAK;AAChC,EAAAsY,MAAK,OAAO;AACZ,EAAAA,MAAK,QAAQ;AACb,EAAAA,MAAK,WAAW;AAChB,EAAAA,MAAK,WAAW;AAChB,SAAOA;AACT,CAAC;AAGD,IAAMppB,SAAqB,qBAAK,GAAG,CAAC,MAAM;AAAA,EACxC;AAAA,EACA;AACF,MAAM0a,YAAW,MAAM;AAAA,EACrB,WAAW,CAAA9Y,WAAS;AAClB,UAAM,mBAAmB8R,gBAAe9R,MAAK;AAC7C,YAAQ,iBAAiB,MAAM;AAAA,MAC7B,KAAK,QACH;AACE,eAAO,UAAU,iBAAiB,IAAI;AAAA,MACxC;AAAA,MACF,KAAK,SACH;AACE,eAAOoS,WAAU,iBAAiB,KAAK;AAAA,MACzC;AAAA,IACJ;AAAA,EACF;AAAA,EACA;AACF,CAAC,CAAC;AAGF,IAAMqV,WAAU,UAAQ,UAAU,CAAAziB,WAAS0E,MAAM,QAAU,eAAe,MAAM1E,MAAK,CAAC,GAAG,iBAAiB,CAAC;AAG3G,IAAM2B,SAAqB,qBAAK,GAAG,CAAC,MAAM,SAAS,WAAW,MAAM,MAAM,CAAC,GAAG,MAAM,KAAK,GAAGA,OAAQ,CAAC,CAAC,CAAC,CAAC;AAGxG,IAAMsS,YAAW,IAAI,WAAW;AAC9B,MAAI,QAAQ,OAAO,CAAC;AACpB,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAQtS,OAAM,OAAO,CAAC,CAAC,EAAE,KAAK;AAAA,EAChC;AACA,SAAO;AACT;AAGA,IAAM2S,SAAQ,UAAQzF,UAAS,MAAM,YAAU3C,KAAI,MAAM,CAAC;AAG1D,IAAMnE,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS8G,UAAS,MAAM,IAAI,CAAC;AAGxE,IAAM,cAAc,UAAQlN,OAAM3E,SAAQ,GAAG,IAAI;AAGjD,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM,MAAM0H,MAAI,MAAM,CAAA1H,aAAWwH,OAAK,MAAM,EAAEmB,WAAU3I,UAAS,IAAI,CAAC,CAAC,CAAC,CAAC;AAG3H,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,SAASka,SAAQ,MAAM;AACjE,QAAM,YAAY,OAAO,OAAOhN,MAAK;AACrC,YAAU,OAAO;AACjB,YAAU,QAAQ,OAAO,OAAOA,QAAO;AAAA,IACrC,MAAM;AAAA,MACJ,OAAOwX;AAAA,MACP,YAAY;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACL,OAAO1kB,SAAQ;AAAA,MACf,YAAY;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,MAAM;AAAA,MACJ,OAAO,CAAC,GAAG,MAAM2E,OAAQ,GAAG,CAAC;AAAA,IAC/B;AAAA,EACF,CAAC;AACD,YAAU,SAAS;AACnB,SAAO;AACT,CAAC,CAAC;AAGF,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,SAAS;AACxD,QAAMmE,YAAU,OAAO,OAAOoE,MAAK;AACnC,EAAApE,UAAQ,OAAO4b;AACf,EAAA5b,UAAQ,QAAQ;AAChB,EAAAA,UAAQ,SAAS,KAAK,MAAM,QAAQ,IAAI,CAAC;AACzC,EAAAA,UAAQ,OAAO,CAAC,GAAG,MAAMnE,OAAQ,GAAG,CAAC;AACrC,SAAOmE;AACT,CAAC;AAGD,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAMyb,cAAarK,SAAQ,MAAM;AACnE,QAAM,WAAW,IAAI;AACrB,SAAO,KAAK7J,SAAQ,UAAU;AAAA,IAC5B,OAAOkU,UAAS;AAAA,EAClB,CAAC,GAAGxd,UAAQ,SAAO,UAAU,MAAMwd,WAAU,UAAU,KAAK,KAAKrd,KAAI,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;AACzF,CAAC,CAAC;AAGF,IAAM,YAAY,CAAC,MAAMqd,WAAU,UAAU,UAAU;AACrD,SAAO,KAAK,MAAM1S,UAAS,WAAS,KAAK,YAAY0S,WAAU,UAAU,OAAO,KAAK,GAAGxd,UAAQ,SAAO,MAAM,UAAU,MAAMwd,WAAU,UAAU,KAAK,KAAKrd,KAAI,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACtL;AAGA,IAAM,cAAc,CAACqd,WAAU,UAAU,OAAO,UAAU;AACxD,SAAOW,YAAW,UAAU,KAAKtE,oBAAmB7Z,SAAU,SAAO,KAAKwd,UAAS,KAAK,KAAK,OAAO,KAAK,GAAGxd,SAAU,CAAC,CAAC+a,QAAO,GAAG,QAAQ,MAAMQ,QAAO,QAAQ,IAAI9kB,MAAO,KAAK,IAAI,KAAKmc,OAAM,OAAO3a,OAAM,SAAS,SAAS,IAAI,GAAG,CAAC,GAAG2K,IAAG;AAAA,IACzO,OAAAmY;AAAA,EACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT;AAGA,IAAM,SAAsB,qBAAK,GAAG,CAAC,GAAG,MAAM;AAC5C,QAAM,WAAWxU,OAAM,CAAC;AACxB,QAAM,MAAM,WAAW,IAAI;AAC3B,QAAMgB,UAAS,WAAW,IAAI;AAC9B,SAAO,cAAc5G,MAAM4G,SAAQ,CAAAd,aAAWhG,OAAK,KAAKgG,QAAO,CAAC,CAAC;AACnE,CAAC;AAGD,IAAM,gBAAgB,CAAAc,YAAU;AAC9B,SAAO,cAAc,KAAKA,SAAQ3E,IAAGlK,OAAM,CAAC,CAAC,CAAC;AAChD;AAGA,IAAM,gBAAgB,CAAA6O,YAAU;AAC9B,QAAM4K,UAAS,OAAO,OAAOhM,MAAK;AAClC,EAAAgM,QAAO,OAAO;AACd,EAAAA,QAAO,SAAS5K;AAChB,SAAO4K;AACT;AAGA,IAAMlW,SAAqB,8BAA4B,gBAAA0E,MAAoB,+BAA6B,0BAAU,GAAG,CAAC1E,QAAOyL,UAASzL,OAAM,MAAMyL,KAAI,CAAC,GAAG,CAAAzL,WAASwE,OAAK,OAAOxE,MAAK,CAAC,CAAC;AAGtL,IAAM,UAAU,SAAO;AACrB,SAAOkiB,YAAW,KAAK,GAAG;AAC5B;AAGA,IAAM7U,WAAuB,qBAAK,GAAG,CAAC,GAAG,MAAM;AAC7C,QAAM,WAAW/C,OAAM,CAAC;AACxB,QAAM,MAAM,WAAW,IAAI;AAC3B,QAAM,WAAW,WAAW,IAAI;AAChC,SAAO,kBAAkB,QAAU9F,OAAK,KAAK,QAAQ,CAAC,CAAC;AACzD,CAAC;AAGD,IAAM,iBAAiB,CAAAxH,aAAW;AAChC,SAAO,kBAAkB,QAAUA,QAAO,CAAC;AAC7C;AAGA,IAAMka,WAAU,CAAAlP,cAAY;AAC1B,QAAMkP,YAAU,OAAO,OAAOhN,MAAK;AACnC,EAAAgN,UAAQ,OAAO;AACf,EAAAA,UAAQ,WAAWlP;AACnB,SAAOkP;AACT;AAGA,IAAM7Y,QAAoB,qBAAK,GAAG,CAAC,GAAG,MAAM;AAC1C,QAAM,WAAWiM,OAAM,CAAC;AACxB,QAAM,MAAM,WAAW,IAAI;AAC3B,QAAMtC,YAAW,WAAW,IAAI;AAChC,SAAO,kBAAkB,KAAO,MAAMxD,OAAK,KAAKwD,UAAS,CAAC,CAAC,CAAC;AAC9D,CAAC;AAGD,IAAM,cAAc,CAAAA,cAAY;AAC9B,SAAO,kBAAkB,KAAOA,SAAQ,CAAC;AAC3C;AAGA,IAAMwE,OAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMzI,UAAQ,MAAM,CAAA/G,aAAW,kBAAkB2J,IAAG,EAAE3J,QAAO,GAAGA,QAAO,CAAC,CAAC,CAAC;AAGlH,IAAMya,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM5I,UAAS,MAAM,OAAK,kBAAkB9K,SAAU,EAAE,CAAC,GAAG,MAAMvJ,MAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAG3H,IAAMkd,iBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM5I,eAAc,MAAM,CAAA9T,WAAS,kBAAkB+I,SAAU,EAAE/I,MAAK,GAAG,MAAM,UAAYA,MAAK,CAAC,CAAC,CAAC,CAAC;AAGtJ,IAAM,YAAY,UAAQ;AACxB,SAAO,KAAK,UAAU,CAAAgF,WAAS,KAAK,MAAM,eAAeA,MAAK,CAAC,CAAC,GAAG+D,SAAU,CAAA/G,aAAW,KAAK8Y,SAAQ,GAAG,eAAe9Y,QAAO,CAAC,CAAC,CAAC;AACnI;AAGA,IAAM6O,OAAmB,qBAAK,GAAG,CAAC,MAAM,SAASqL,SAAQ,MAAM;AAC7D,QAAM,YAAY,OAAO,OAAOhN,MAAK;AACrC,YAAU,OAAO;AACjB,YAAU,QAAQ,OAAO,OAAOA,QAAO;AAAA,IACrC,MAAM;AAAA,MACJ,OAAOwX;AAAA,MACP,YAAY;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACL,OAAO1kB,SAAQ;AAAA,MACf,YAAY;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,MAAM;AAAA,MACJ,OAAO,CAAC,GAAG,MAAM,KAAK,GAAG2E,OAAQ,CAAC,CAAC;AAAA,IACrC;AAAA,EACF,CAAC;AACD,YAAU,SAAS;AACnB,SAAO;AACT,CAAC,CAAC;AAGF,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,SAAS;AACpD,QAAMmE,YAAU,OAAO,OAAOoE,MAAK;AACnC,EAAApE,UAAQ,OAAO4b;AACf,EAAA5b,UAAQ,QAAQ;AAChB,EAAAA,UAAQ,SAAS,KAAK,MAAM,QAAQ,IAAI,CAAC;AACzC,EAAAA,UAAQ,OAAO,CAAC,GAAG,MAAM;AACvB,WAAO,KAAK,GAAGnE,OAAQ,CAAC,CAAC;AAAA,EAC3B;AACA,SAAOmE;AACT,CAAC;AAGD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAMoR,SAAQ,MAAM;AACvE,QAAMwL,cAAa,OAAO,OAAOxY,MAAK;AACtC,EAAAwY,YAAW,OAAO;AAClB,EAAAA,YAAW,QAAQ;AACnB,EAAAA,YAAW,SAAS;AACpB,EAAAA,YAAW,OAAO;AAClB,SAAOA;AACT,CAAC,CAAC;AAGF,IAAM,eAAe,UAAQ;AAC3B,QAAM,MAAM,IAAI;AAChB,SAAO3e,UAAQme,YAAW,KAAK,IAAI,GAAG,CAAAllB,aAAWkH,KAAIlH,UAAS,GAAG,CAAC;AACpE;AAGA,IAAM,eAAe,UAAQ;AAC3B,QAAM,MAAM,IAAI;AAChB,SAAO+G,UAAQ,OAAO,KAAK,IAAI,GAAG,CAAA/G,aAAWkH,KAAIlH,UAAS,GAAG,CAAC;AAChE;AAOA,IAAM2d,YAAwB,qBAAK,UAAQ,QAAQ,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAY,aAAajW,MAAM,SAAS,QAAQ8H,KAAM,eAAe,MAAM,OAAO,GAAG,CAAArC,UAAQ,aAAa,CAAAsB,UAAQ,QAAQ,MAAMtB,OAAMsB,KAAI,CAAC,CAAC,IAAI,eAAe,MAAM,OAAO,GAAG,CAAAtB,UAAQkQ,gBAAe,MAAMlQ,KAAI,CAAC,CAAC,CAAC;AAG7R,IAAMkQ,kBAA8B,qBAAK,GAAG,CAAC,MAAMlQ,UAAS,QAAQ,eAAe3F,OAAK,SAAS2F,KAAI,CAAC,GAAG,IAAI,CAAC;AAI9G,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM4X,WAAU,kBAAkB,UAAU,GAAG,CAAA/hB,WAAS+D,SAAU,eAAege,QAAO/hB,MAAK,GAAG,CAAAhD,aAAW,mBAAmB,MAAMA,QAAO,CAAC,GAAG,CAACgD,QAAOyL,UAAS,WAAWzL,QAAOyL,KAAI,CAAC,CAAC;AACvO,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,OAAO;AAC5D,QAAM,aAAapD,MAAK,eAAe,cAAc,GAAG,YAAY;AACpE,QAAM,oBAAoBA,MAAK,GAAG,cAAc,eAAe,YAAY;AAC3E,QAAM,YAAYA,MAAO,eAAe,WAAW,GAAG,SAAS;AAC/D,QAAM,mBAAmBA,MAAO,GAAG,WAAW,eAAe,SAAS;AACtE,SAAO,kBAAkBtE,SAAU,mBAAmB,UAAU,GAAG,MAAM,eAAe,SAAS,CAAC,GAAG,MAAM,mBAAmB,MAAM,GAAG,OAAO,GAAG,MAAMA,SAAU,mBAAmB,iBAAiB,GAAG,MAAM,eAAe,gBAAgB,CAAC,CAAC;AACjP,CAAC;AAGD,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,WAAW,QAAQ,MAAM,IAAI,iBAAiB,MAAM,MAAM,IAAIsG,WAAU,MAAM,IAAI,mBAAmB,MAAM,MAAM,IAAI,mBAAmB,MAAM,MAAM,CAAC;;;ACpjBxM,IAAMnE,WAAsB,uBAAO,IAAI,oBAAoB;AAY3D,IAAM,mBAAmB;AAAA,EACvB,CAACA,QAAM,GAAGA;AAAA,EACV,CAAC,OAAO,QAAQ,IAAI;AAClB,QAAI3L,SAAO;AACX,QAAIQ,QAAO,KAAK;AAChB,WAAO;AAAA,MACL,OAAO;AACL,YAAIR,QAAM;AACR,iBAAO,KAAK,OAAO;AAAA,QACrB;AACA,YAAIQ,SAAQ,MAAM;AAChB,UAAAR,SAAO;AACP,iBAAO,KAAK,OAAO;AAAA,QACrB;AACA,cAAMlB,SAAQ0B,MAAK;AACnB,QAAAA,QAAOA,MAAK;AACZ,eAAO;AAAA,UACL,MAAAR;AAAA,UACA,OAAAlB;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAOA,QAAO;AACZ,YAAI,CAACkB,QAAM;AACT,UAAAA,SAAO;AAAA,QACT;AACA,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAAlB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAEA,IAAM,iBAAN,MAAqB;AAAA,EACnB,UAAU;AAAA,EACV,OAAO;AAAA,EACP,OAAO;AAAA,EACP,YAAYA,QAAO;AACjB,SAAK,QAAQA;AAAA,EACf;AACF;AAQA,IAAMoD,UAAQ,MAAM;AAClB,QAAM,OAAO,OAAO,OAAO,gBAAgB;AAC3C,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,OAAK,UAAU;AACf,SAAO;AACT;AA8BA,IAAMoM,WAAU,UAAQ,OAAO,IAAI,MAAM;AAQzC,IAAM,SAAS,UAAQ,KAAK;AAkD5B,IAAM7F,UAAsB,qBAAK,GAAG,CAAC,MAAM3J,WAAU;AACnD,QAAM,OAAO,IAAI,eAAeA,MAAK;AACrC,MAAI,KAAK,SAAS,QAAW;AAC3B,SAAK,OAAO;AAAA,EACd;AACA,MAAI,KAAK,SAAS,QAAW;AAC3B,SAAK,OAAO;AAAA,EACd,OAAO;AACL,SAAK,KAAK,OAAO;AACjB,SAAK,OAAO,KAAK;AACjB,SAAK,OAAO;AAAA,EACd;AACA,OAAK,WAAW;AAChB,SAAO;AACT,CAAC;AAOD,IAAM,QAAQ,UAAQ;AACpB,QAAM0B,QAAO,KAAK;AAClB,MAAIA,UAAS,QAAW;AACtB,IAAAoK,QAAO,MAAMpK,KAAI;AACjB,WAAOA,MAAK;AAAA,EACd;AACA,SAAO;AACT;AAmCA,IAAMoK,UAAS,CAAC,MAAM,SAAS;AAC7B,MAAI,KAAK,SAAS;AAChB;AAAA,EACF;AACA,OAAK,UAAU;AACf,MAAI,KAAK,SAAS,UAAa,KAAK,SAAS,QAAW;AACtD,SAAK,KAAK,OAAO,KAAK;AACtB,SAAK,KAAK,OAAO,KAAK;AAAA,EACxB,WAAW,KAAK,SAAS,QAAW;AAClC,SAAK,OAAO,KAAK;AACjB,SAAK,KAAK,OAAO;AAAA,EACnB,WAAW,KAAK,SAAS,QAAW;AAClC,SAAK,OAAO,KAAK;AACjB,SAAK,KAAK,OAAO;AAAA,EACnB,OAAO;AACL,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACd;AACA,MAAI,KAAK,UAAU,GAAG;AACpB,SAAK,WAAW;AAAA,EAClB;AACF;;;AC5PA,IAAMe,WAAsB,uBAAO,IAAI,qBAAqB;AAW5D,IAAM,oBAAiC,uBAAO,IAAI,mCAAmC;AAWrF,IAAM,oBAAoB;AAAA,EACxB,CAACA,QAAM,GAAGA;AAAA,EACV,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,MAAM,KAAK,KAAK,KAAK,EAAE,OAAO,QAAQ,EAAE;AAAA,EACjD;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AACA,IAAM1B,SAAO,CAAAme,cAAY;AACvB,QAAM,QAAQ,OAAO,OAAO,iBAAiB;AAC7C,QAAM,QAAQlmB,QAAM;AACpB,QAAM,WAAWkmB;AACjB,SAAO;AACT;AAQA,IAAM,UAAU,CAAAA,cAAYne,OAAKme,SAAQ;AAQzC,IAAM,YAAY,MAAMne,OAAK,MAAS;AAQtC,IAAMjL,UAAS,UAAQ,OAAS,KAAK,KAAK;AAQ1C,IAAMsP,WAAU,UAAQA,SAAU,KAAK,KAAK;AAmB5C,IAAM,WAAW,UAAQ,KAAK,aAAa,SAAY,WAAW,KAAK;AASvE,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAMxP,WAAU;AAClD,QAAM,cAAc,OAAS,KAAK,KAAK;AACvC,MAAI,KAAK,aAAa,UAAa,gBAAgB,KAAK,UAAU;AAChE,WAAO;AAAA,EACT;AACA,EAAA2J,QAAO3J,MAAK,EAAE,KAAK,KAAK;AACxB,SAAO;AACT,CAAC;AASD,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAMsD,YAAW;AACtD,QAAMd,YAAWc,QAAO,OAAO,QAAQ,EAAE;AACzC,MAAI+B;AACJ,MAAI,YAAYjC,OAAQ;AACxB,MAAI,WAAW;AACf,SAAO,aAAaiC,QAAO7C,UAAS,KAAK,MAAM,CAAC6C,MAAK,MAAM;AACzD,eAAW,MAAMA,MAAK,KAAK,EAAE,IAAI;AAAA,EACnC;AACA,SAAOA,SAAQ,QAAQ,CAACA,MAAK,MAAM;AACjC,gBAAYsG,SAAQtG,MAAK,KAAK,EAAE,SAAS;AACzC,IAAAA,QAAO7C,UAAS,KAAK;AAAA,EACvB;AACA,SAAOuJ,SAAQ,SAAS;AAC1B,CAAC;AAYD,IAAMsa,QAAoB,qBAAK,GAAG,CAAC,MAAM,QAAQ;AAC/C,MAAI7W,SAAU,KAAK,KAAK,GAAG;AACzB,WAAO;AAAA,EACT;AACA,SAAO,MAAM,KAAK,KAAK;AACzB,CAAC;AASD,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM;AACjD,MAAI,SAASpM,OAAQ;AACrB,MAAIsD,SAAQ;AACZ,SAAOA,SAAQ,GAAG;AAChB,UAAM,UAAU2f,MAAK,iBAAiB,EAAE,IAAI;AAC5C,QAAI,YAAY,mBAAmB;AACjC;AAAA,IACF;AACA,aAAS1a,SAAQ,OAAO,EAAE,MAAM;AAChC,IAAAjF,UAAS;AAAA,EACX;AACA,SAAOqF,SAAQ,MAAM;AACvB,CAAC;;;ACrJD,IAAM2Z,YAAW,CAAC,KAAKtT,OAAM,YAAY,qBAAqB,OAAO;AAAA,EACnE,MAAM;AAAA,EACN;AAAA,EACA,MAAAA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAGD,IAAM5Q,WAAU,CAAC,KAAKP,cAAa,OAAO;AAAA,EACxC,MAAM;AAAA,EACN;AAAA,EACA,UAAAA;AACF,CAAC;AAGD,IAAM,aAAa,CAACA,WAAUykB,cAAa,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,UAAAzkB;AAAA,EACA,UAAAykB;AACF,CAAC;AAGD,IAAM,eAA4B,uBAAO,IAAI,qBAAqB;AAYlE,IAAM,aAAN,MAAiB;AAAA,EACf,CAAC,YAAY,IAAI;AAAA,EACjB,WAAW;AAAA,EACX,OAAO;AAAA,EACP,YAAYjiB,UAAS;AACnB,SAAK,UAAUA;AAAA,EACjB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,KAAK,OAAO,GAAG,QAAQ,KAAK,KAAK,QAAQ,CAAC,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC;AAAA,EACxF;AAAA,EACA,CAACiE,OAAQ,EAAE,MAAM;AACf,QAAI,SAAS,MAAM;AACjB,aAAO;AAAA,IACT;AACA,WAAO,SAAS,IAAI,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO,KAAK,OAAO,KAAK,UAAU,KAAK,QAAQ,KAAK,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,EACpI;AACF;AAGA,IAAM,aAAa,CAAAjE,aAAW,IAAI,WAAWA,QAAO;AAGpD,IAAM,WAAW,OAAK,YAAY,GAAG,YAAY;AAUjD,IAAM,aAAN,MAAiB;AAAA,EACf,OAAO;AAAA,EACP,OAAO;AAAA,EACP,IAAI,KAAK;AACP,QAAI,QAAQ,KAAK,MAAM;AACrB,UAAI,KAAK,SAAS,QAAW;AAC3B,aAAK,OAAO;AACZ,aAAK,OAAO;AAAA,MACd,OAAO;AACL,cAAMD,YAAW,IAAI;AACrB,cAAM6B,QAAO,IAAI;AACjB,YAAIA,UAAS,QAAW;AACtB,cAAI,OAAO;AACX,cAAI7B,cAAa,QAAW;AAC1B,YAAAA,UAAS,OAAO6B;AAChB,YAAAA,MAAK,WAAW7B;AAAA,UAClB,OAAO;AACL,iBAAK,OAAO6B;AACZ,iBAAK,KAAK,WAAW;AAAA,UACvB;AAAA,QACF;AACA,aAAK,KAAK,OAAO;AACjB,YAAI,WAAW,KAAK;AACpB,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,MAAM,KAAK;AACjB,QAAI,QAAQ,QAAW;AACrB,YAAMA,QAAO,IAAI;AACjB,UAAIA,UAAS,QAAW;AACtB,YAAI,OAAO;AACX,aAAK,OAAOA;AACZ,aAAK,KAAK,WAAW;AAAA,MACvB,OAAO;AACL,aAAK,OAAO;AACZ,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAGA,IAAM,aAAa,MAAM,IAAI,WAAW;AAaxC,IAAM,iBAAiB,CAACgG,OAAKpL,OAAM,UAAU,UAAU,MAAM,YAAY;AAAA,EACvE,KAAAoL;AAAA,EACA,MAAApL;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAOA,IAAM,oBAAoB,MAAM,eAAemD,QAAM,GAAG,WAAW,GAAG,UAAU,GAAG+H,MAAO,KAAK,GAAG,GAAG,CAAC;AAGtG,IAAM,iBAAiB;AAGvB,IAAM,cAA2B,uBAAO,IAAI,cAAc;AAC1D,IAAM,gBAAgB;AAAA,EACpB,MAAM,OAAK;AAAA,EACX,QAAQ,OAAK;AAAA,EACb,QAAQ,OAAK;AACf;AAGA,IAAM,iBAAiB,aAAW;AAGlC,IAAM,iBAAiB,mBAAiB;AAAA,EACtC;AACF;AACA,IAAM,YAAN,MAAgB;AAAA,EACd,CAAC,WAAW,IAAI;AAAA,EAChB,YAAYme,WAAU3lB,UAAS2M,UAAS,QAAQ,YAAY;AAC1D,SAAK,WAAWgZ;AAChB,SAAK,UAAU3lB;AACf,SAAK,UAAU2M;AACf,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,aAAa,kBAAkB;AAAA,EACtC;AAAA,EACA,IAAI,KAAK;AACP,WAAOjF,MAAI,KAAK,UAAU,GAAG,GAAG,KAAK;AAAA,EACvC;AAAA,EACA,aAAa;AACX,WAAO,KAAK,MAAM,eAAe;AAAA,MAC/B,MAAM,KAAK,WAAW;AAAA,MACtB,QAAQ,KAAK,WAAW;AAAA,MACxB,MAAM9F,MAAK,KAAK,WAAW,GAAG;AAAA,IAChC,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,UAAU,KAAK;AACb,WAAO,QAAQ,MAAM,MAAMsF,MAAI,KAAK,WAAW,KAAK,GAAG,GAAG;AAAA,MACxD,QAAQ,MAAM;AACZ,cAAM,SAAS,WAAW,GAAG;AAC7B,aAAK,YAAY,MAAM;AACvB,aAAK,UAAU;AACf,eAAO,QAAQuC,MAAK,CAAC;AAAA,MACvB;AAAA,MACA,QAAQ,CAAApN,WAAS,KAAK,gBAAgBA,MAAK;AAAA,IAC7C,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,kBAAkB,KAAK;AACrB,WAAO,QAAQ,MAAM,MAAM6K,MAAI,KAAK,WAAW,KAAK,GAAG,GAAG;AAAA,MACxD,QAAQ,MAAM;AACZ,cAAM,SAAS,WAAW,GAAG;AAC7B,aAAK,YAAY,MAAM;AACvB,aAAK,UAAU;AACf,eAAO,QAAQuC,MAAK,CAAC;AAAA,MACvB;AAAA,MACA,QAAQ,CAAApN,WAAS,KAAK,gBAAgBA,QAAO,IAAI;AAAA,IACnD,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,SAAS,KAAK;AACZ,WAAO,KAAK,MAAM6O,KAAI,KAAK,WAAW,KAAK,GAAG,CAAC;AAAA,EACjD;AAAA,EACA,WAAW,KAAK;AACd,WAAO,KAAK,MAAM;AAChB,YAAMpG,UAASoC,MAAI,KAAK,WAAW,KAAK,GAAG;AAC3C,UAAIsC,QAAO1E,OAAM,GAAG;AAClB,gBAAQA,QAAO,MAAM,MAAM;AAAA,UACzB,KAAK,YACH;AACE,kBAAM,SAASA,QAAO,MAAM,WAAW;AACvC,mBAAOwD,MAAK,eAAe,MAAM,CAAC;AAAA,UACpC;AAAA,UACF,KAAK,WACH;AACE,mBAAOmB,MAAK;AAAA,UACd;AAAA,UACF,KAAK,cACH;AACE,kBAAM,SAAS3E,QAAO,MAAM,SAAS,WAAW;AAChD,mBAAOwD,MAAK,eAAe,MAAM,CAAC;AAAA,UACpC;AAAA,QACJ;AAAA,MACF;AACA,aAAOmB,MAAK;AAAA,IACd,CAAC;AAAA,EACH;AAAA,EACA,UAAU,KAAK;AACb,WAAO,QAAQ,MAAM;AACnB,YAAM,IAAI;AACV,UAAI,SAAS;AACb,UAAInM,YAAW;AACf,UAAIjB,SAAQ,eAAe6K,MAAI,KAAK,WAAW,KAAK,CAAC,CAAC;AACtD,UAAI7K,WAAU,QAAW;AACvB,QAAAiB,YAAWoP,YAAW,KAAK,OAAO;AAClC,iBAAS,WAAW,CAAC;AACrB,YAAIxB,KAAI,KAAK,WAAW,KAAK,CAAC,GAAG;AAC/B,UAAA7O,SAAQ,eAAe6K,MAAI,KAAK,WAAW,KAAK,CAAC,CAAC;AAAA,QACpD,OAAO;AACL,UAAA+E,KAAI,KAAK,WAAW,KAAK,GAAGpO,SAAQ,QAAQP,SAAQ,CAAC;AAAA,QACvD;AAAA,MACF;AACA,UAAIjB,WAAU,QAAW;AACvB,aAAK,YAAY,MAAM;AACvB,aAAK,UAAU;AACf,eAAOqL,MAAI,KAAK,cAAc,KAAKpK,SAAQ,GAAGwM,MAAK;AAAA,MACrD,OAAO;AACL,eAAO/C,SAAQ,KAAK,gBAAgB1K,MAAK,GAAG,MAAM;AAAA,UAChD,QAAQ,MAAM,KAAK,UAAU,GAAG;AAAA,UAChC,QAAQ,CAAAA,WAAS,QAAQwN,MAAKxN,MAAK,CAAC;AAAA,QACtC,CAAC,CAAC;AAAA,MACJ;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,WAAW,KAAK;AACd,WAAO,KAAK,MAAM;AAChB,MAAA8L,QAAO,KAAK,WAAW,KAAK,GAAG;AAAA,IACjC,CAAC;AAAA,EACH;AAAA,EACA,eAAe,KAAKoU,OAAM;AACxB,WAAO,KAAK,MAAM;AAChB,YAAMlgB,SAAQ6K,MAAI,KAAK,WAAW,KAAK,GAAG;AAC1C,UAAIsC,QAAOnN,MAAK,KAAKA,OAAM,MAAM,SAAS,YAAY;AACpD,YAAIA,OAAM,MAAM,KAAK,SAAS,WAAW;AACvC,cAAIkgB,MAAKlgB,OAAM,MAAM,KAAK,KAAK,GAAG;AAChC,YAAA8L,QAAO,KAAK,WAAW,KAAK,GAAG;AAAA,UACjC;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,gBAAgB;AACd,WAAO,KAAK,MAAM;AAChB,WAAK,WAAW,MAAM1I,QAAM;AAAA,IAC9B,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,KAAK;AACX,WAAO+S,WAAU,CAAAD,WAAS,QAAQ,MAAM;AACtC,YAAM,IAAI;AACV,YAAMjV,YAAWoP,YAAW,KAAK,OAAO;AACxC,UAAIrQ,SAAQ,eAAe6K,MAAI,KAAK,WAAW,KAAK,CAAC,CAAC;AACtD,UAAI7K,WAAU,QAAW;AACvB,YAAI6O,KAAI,KAAK,WAAW,KAAK,CAAC,GAAG;AAC/B,UAAA7O,SAAQ,eAAe6K,MAAI,KAAK,WAAW,KAAK,CAAC,CAAC;AAAA,QACpD,OAAO;AACL,UAAA+E,KAAI,KAAK,WAAW,KAAK,GAAGpO,SAAQ,WAAW,CAAC,GAAGP,SAAQ,CAAC;AAAA,QAC9D;AAAA,MACF;AACA,UAAIjB,WAAU,QAAW;AACvB,eAAO0S,QAAO,KAAK,cAAc,KAAKzR,SAAQ,CAAC;AAAA,MACjD,OAAO;AACL,gBAAQjB,OAAM,MAAM;AAAA,UAClB,KAAK,YACH;AACE,gBAAI,KAAK,WAAWkW,QAAOlW,OAAM,gBAAgB,GAAG;AAClD,oBAAM,QAAQ,eAAe6K,MAAI,KAAK,WAAW,KAAK,CAAC,CAAC;AACxD,kBAAI,OAAO,OAAO7K,MAAK,GAAG;AACxB,gBAAA8L,QAAO,KAAK,WAAW,KAAK,CAAC;AAAA,cAC/B;AACA,qBAAO4G,QAAO,KAAK,IAAI,GAAG,CAAC;AAAA,YAC7B;AAEA,mBAAO,KAAK,KAAK,cAAc,KAAKzR,SAAQ,GAAG,KAAK,MAAM;AACxD,oBAAMwC,WAAU,eAAeoH,MAAI,KAAK,WAAW,KAAK,CAAC,CAAC;AAC1D,kBAAI,OAAOpH,UAASzD,MAAK,GAAG;AAC1B,sBAAM,WAAW,WAAWiB,WAAUjB,MAAK;AAC3C,gBAAA4P,KAAI,KAAK,WAAW,KAAK,GAAG,QAAQ;AACpC,uBAAO;AAAA,cACT;AACA,qBAAO;AAAA,YACT,CAAC,GAAG8C,OAAM;AAAA,UACZ;AAAA,UACF,KAAK,WACH;AACE,mBAAO0T,QAAOpmB,OAAM,QAAQ;AAAA,UAC9B;AAAA,UACF,KAAK,cACH;AACE,mBAAOomB,QAAOpmB,OAAM,QAAQ;AAAA,UAC9B;AAAA,QACJ;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,IAAI,KAAKA,QAAO;AACd,WAAOmW,WAAU,CAAAD,WAAS,KAAK,MAAM;AACnC,YAAM,MAAMA,OAAM,wBAAwB;AAC1C,YAAM,IAAI;AACV,YAAM,eAAelC,SAAUhU,MAAK;AACpC,YAAM,WAAW0lB,UAAS,WAAW,CAAC,GAAG,cAAc,eAAe,GAAG,GAAG,MAAM,SAAS,OAAO,KAAK,WAAW,YAAY,CAAC,CAAC,CAAC;AACjI,MAAA9V,KAAI,KAAK,WAAW,KAAK,GAAG,QAAQ;AAAA,IACtC,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,OAAO;AACL,WAAO,KAAK,MAAM;AAChB,aAAOrK,MAAK,KAAK,WAAW,GAAG;AAAA,IACjC,CAAC;AAAA,EACH;AAAA,EACA,SAAS;AACP,WAAO,KAAK,MAAM;AAChB,YAAMjC,UAAS,CAAC;AAChB,iBAAW,SAAS,KAAK,WAAW,KAAK;AACvC,YAAI,MAAM,CAAC,EAAE,SAAS,cAAc,MAAM,CAAC,EAAE,KAAK,SAAS,WAAW;AACpE,UAAAA,QAAO,KAAK,MAAM,CAAC,EAAE,KAAK,KAAK;AAAA,QACjC;AAAA,MACF;AACA,aAAOA;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,WAAO,KAAK,MAAM;AAChB,YAAMA,UAAS,CAAC;AAChB,iBAAW,SAAS,KAAK,WAAW,KAAK;AACvC,YAAI,MAAM,CAAC,EAAE,SAAS,cAAc,MAAM,CAAC,EAAE,KAAK,SAAS,WAAW;AACpE,UAAAA,QAAO,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC;AAAA,QAC7C;AAAA,MACF;AACA,aAAOA;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,WAAO,KAAK,MAAM;AAChB,YAAMrD,QAAO,CAAC;AACd,iBAAW,SAAS,KAAK,WAAW,KAAK;AACvC,YAAI,MAAM,CAAC,EAAE,SAAS,cAAc,MAAM,CAAC,EAAE,KAAK,SAAS,WAAW;AACpE,UAAAA,MAAK,KAAK,MAAM,CAAC,CAAC;AAAA,QACpB;AAAA,MACF;AACA,aAAOA;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,gBAAgBD,QAAO,gBAAgB,OAAO;AAC5C,WAAOmW,WAAU,CAAAD,WAAS;AACxB,cAAQlW,OAAM,MAAM;AAAA,QAClB,KAAK,YACH;AACE,eAAK,YAAYA,OAAM,GAAG;AAC1B,eAAK,SAAS;AACd,cAAI,KAAK,WAAWkW,QAAOlW,OAAM,gBAAgB,GAAG;AAClD,YAAA8L,QAAO,KAAK,WAAW,KAAK9L,OAAM,IAAI,OAAO;AAC7C,mBAAO,QAAQoN,MAAK,CAAC;AAAA,UACvB;AACA,iBAAO/B,MAAIrL,OAAM,MAAMiM,KAAI;AAAA,QAC7B;AAAA,QACF,KAAK,WACH;AACE,eAAK,YAAYjM,OAAM,GAAG;AAC1B,eAAK,SAAS;AACd,cAAI,eAAe;AACjB,mBAAO,QAAQoN,MAAK,CAAC;AAAA,UACvB;AACA,iBAAO/B,MAAI+a,QAAOpmB,OAAM,QAAQ,GAAGiM,KAAI;AAAA,QACzC;AAAA,QACF,KAAK,cACH;AACE,eAAK,YAAYjM,OAAM,SAAS,GAAG;AACnC,eAAK,SAAS;AACd,cAAI,KAAK,WAAWkW,QAAOlW,OAAM,SAAS,gBAAgB,GAAG;AAC3D,gBAAI,eAAe;AACjB,qBAAO,QAAQoN,MAAK,CAAC;AAAA,YACvB;AACA,mBAAO/B,MAAI+a,QAAOpmB,OAAM,QAAQ,GAAGiM,KAAI;AAAA,UACzC;AACA,iBAAOZ,MAAIrL,OAAM,SAAS,MAAMiM,KAAI;AAAA,QACtC;AAAA,MACJ;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AACT,SAAK,WAAW,OAAO,KAAK,WAAW,OAAO;AAAA,EAChD;AAAA,EACA,YAAY;AACV,SAAK,WAAW,SAAS,KAAK,WAAW,SAAS;AAAA,EACpD;AAAA,EACA,YAAY,KAAK;AACf,UAAM,KAAK,WAAW,UAAU,GAAG;AACnC,QAAI,cAAc,KAAK,WAAW,UAAU,OAAO,IAAI,GAAG;AACxD,UAAIiO,QAAO;AACX,aAAOA,OAAM;AACX,cAAMqP,OAAMlD,MAAK,KAAK,WAAW,UAAU,iBAAiB;AAC5D,YAAIkD,SAAQ,mBAAmB;AAC7B,UAAArP,QAAO;AAAA,QACT,OAAO;AACL,eAAK,WAAW,KAAK,IAAIqP,IAAG;AAAA,QAC9B;AAAA,MACF;AACA,UAAI,SAAShkB,MAAK,KAAK,WAAW,GAAG;AACrC,MAAA2U,QAAO,SAAS,KAAK;AACrB,aAAOA,OAAM;AACX,cAAMqP,OAAM,KAAK,WAAW,KAAK,OAAO;AACxC,YAAIA,SAAQ,QAAW;AACrB,cAAI1a,KAAI,KAAK,WAAW,KAAK0a,KAAI,OAAO,GAAG;AACzC,YAAAzd,QAAO,KAAK,WAAW,KAAKyd,KAAI,OAAO;AACvC,qBAAS,SAAS;AAClB,YAAArP,QAAO,SAAS,KAAK;AAAA,UACvB;AAAA,QACF,OAAO;AACL,UAAAA,QAAO;AAAA,QACT;AAAA,MACF;AACA,MAAAtK,KAAM,KAAK,WAAW,UAAU,KAAK;AAAA,IACvC;AAAA,EACF;AAAA,EACA,WAAWsG,QAAO,kBAAkB;AAClC,WAAOA,OAAM,wBAAwB,IAAI;AAAA,EAC3C;AAAA,EACA,cAAc3S,QAAOtC,WAAU;AAC7B,WAAOkV,WAAU,CAAAD,WAAS,QAAQ,MAAM;AACtC,YAAM,MAAM3S;AACZ,aAAO,KAAK,KAAK,OAAOA,MAAK,GAAG,eAAe,KAAK,OAAO,GAAG,MAAMmH,SAAQ,CAAA0H,UAAQ;AAClF,cAAM,MAAM8D,OAAM,wBAAwB;AAC1C,cAAM,QAAQ,eAAe,GAAG;AAChC,cAAMlW,SAAQ0lB,UAAS,WAAW,GAAG,GAAGtT,OAAM,OAAO,MAAM,SAAS,OAAO,KAAK,WAAWA,KAAI,CAAC,CAAC,CAAC;AAClG,QAAAxC,KAAI,KAAK,WAAW,KAAK,KAAK5P,MAAK;AACnC,eAAOkT,UAAShS,MAAKD,WAAUmR,KAAI,GAAGA,KAAI;AAAA,MAC5C,CAAC,GAAG,YAAY,MAAMc,UAASJ,WAAU7R,SAAQ,GAAG,KAAK,MAAM;AAC7D,QAAA6K,QAAO,KAAK,WAAW,KAAK,GAAG;AAAA,MACjC,CAAC,CAAC,CAAC,CAAC;AAAA,IACN,CAAC,CAAC;AAAA,EACJ;AACF;AAgBA,IAAM,iBAAiB,CAACwd,WAAU,QAAQ,eAAe,IAAI,UAAUA,WAAUlmB,OAAQ,GAAGgK,OAAQ,QAAQ,CAAAgF,UAAQ,OAAO,WAAWA,KAAI,CAAC,CAAC;;;ACrf5I,IAAM,eAA4B,4BAA0B,uBAAO,IAAI,8BAA8B,GAAG,MAAM,mBAAmB,eAAe,OAAO,MAAM/G,MAAI,aAAa,GAAG,aAAW;AAAA,EAC1L,WAAW,IAAI,UAAU;AAAA,EACzB;AACF,EAAE,GAAG,MAAM,QAAQ,EAAE,CAAC,CAAC,CAAC;AAGxB,IAAM,sBAAmC,4BAA0B,uBAAO,IAAI,qCAAqC,GAAG,MAAM,mBAAmB,KAAK,CAAC;AAGrJ,IAAM,cAAc,CAAClI,UAAS,eAAeuH,SAAQ,SAAS,UAAU,IAAI,aAAa,QAAQ,UAAU,GAAG,QAAM,YAAY,CAAA7F,QAAM;AACpI,QAAM,QAAQ,IAAI,MAAM1B,UAAS,CAAC,CAAC;AACnC,SAAO,gBAAgB,qBAAqB,kBAAgB;AAC1D,QAAI,cAAc;AAChB,aAAO,gBAAgB,cAAc,CAAAmE,WAASoD,SAAQpD,OAAM,UAAU,KAAK,GAAG,WAAS;AACrF,gBAAQ,MAAM,MAAM;AAAA,UAClB,KAAK,QACH;AACE,kBAAM,KAAK,UAAU,UAAU;AAC/B,mBAAO,QAAQlE,SAAOsH,SAAQ,KAAK,cAAc,MAAM,KAAK,MAAM,CAAC,GAAG,CAAA0H,UAAQ;AAC5E,kBAAIA,MAAK,SAAS,aAAa,kBAAkBA,MAAK,KAAK,GAAG;AAC5D,sBAAM,KAAK,UAAU,UAAU;AAC/B,uBAAO1H,SAAQpD,OAAM,eAAe,OAAO,WAAS,MAAM,WAAW,MAAM,KAAK,MAAM,GAAG,MAAM,YAAY,OAAO,UAAU,CAAC;AAAA,cAC/H;AACA,qBAAO,SAAS,cAAc,MAAM,KAAK,MAAM,GAAG,KAAK,MAAM,MAAM,KAAK,UAAU,UAAU,CAAC,CAAC;AAAA,YAChG,CAAC,CAAC;AAAA,UACJ;AAAA,UACF,KAAK,SACH;AACE,kBAAM,MAAM,UAAU,UAAU;AAChC,mBAAO,QAAQ,OAAO,IAAI,UAAU;AAAA,cAClC,SAAS;AAAA,cACT,QAAQ,MAAM,MAAM;AAAA,cACpB,WAAW,MAAM,MAAM;AAAA,cACvB,SAASzC;AAAA,cACT,OAAO;AAAA,gBACL,WAAW;AAAA,cACb;AAAA,YACF,CAAC,CAAC,GAAG,oBAAoB,aAAW6F,SAAQ,KAAK,QAAQ,cAAc,MAAM,MAAM,MAAM,CAAC,CAAC,GAAG,CAAA0H,UAAQ;AACpG,oBAAM,MAAM,UAAU,UAAU;AAChC,qBAAOA;AAAA,YACT,CAAC,CAAC,CAAC;AAAA,UACL;AAAA,QACJ;AAAA,MACF,CAAC,CAAC;AAAA,IACJ;AACA,UAAM,YAAY,IAAI,UAAU;AAChC,cAAU,UAAU;AACpB,WAAO1H,SAAQ,aAAa,GAAG,SAAO,QAAQ,OAAO,IAAI,UAAU;AAAA,MACjE,SAAS;AAAA,MACT,QAAQ;AAAA,MACR;AAAA,MACA,SAAS7F;AAAA,MACT,OAAO;AAAA,QACL,WAAW;AAAA,MACb;AAAA,IACF,CAAC,CAAC,GAAG,SAAS,cAAc,GAAG,GAAG,KAAK,MAAM,UAAU,UAAU,CAAC,CAAC,CAAC,CAAC;AAAA,EACvE,CAAC;AACH,CAAC,CAAC;AAGF,IAAM,eAAe,CAAC1B,UAAS,WAAW;AACxC,SAAO,gBAAgB,qBAAqB,kBAAgB;AAC1D,QAAI,cAAc;AAChB,aAAO,gBAAgB,cAAc,CAAAmE,WAASoD,SAAQpD,OAAM,UAAUnE,QAAO,GAAG,WAAS;AACvF,gBAAQ,MAAM,MAAM;AAAA,UAClB,KAAK,QACH;AACE,mBAAOwP;AAAA,UACT;AAAA,UACF,KAAK,SACH;AACE,mBAAO,iBAAiB,MAAM,MAAM,QAAQ,MAAM;AAAA,UACpD;AAAA,QACJ;AAAA,MACF,CAAC,CAAC;AAAA,IACJ;AACA,WAAOA;AAAA,EACT,CAAC;AACH;AAGA,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,aAAa,gBAAgB,MAAM,qBAAqB,QAAQ,CAAC;AAGxH,IAAM,mBAAgC;AAAA,EAAK;AAAA;AAAA,EAE3C,CAAC,MAAMrL,WAAU,gBAAgB,MAAM,cAAcA,MAAK;AAAC;;;A/EvE3D,IAAMiL,gBAAeA;AAmFrB,IAAM2G,YAAW;AAajB,IAAM,gBAAgB;AAWtB,IAAM,0BAA0B;AAShC,IAAM5D,UAAS;AAQf,IAAM,iBAAiB;AASvB,IAAMrM,QAAO;AAcb,IAAM6D,OAAMA;AAYZ,IAAM0H,WAAU;AAahB,IAAMD,gBAAe;AAQrB,IAAMwC,aAAY;AAQlB,IAAMC,aAAYA;AASlB,IAAMK,SAAQA;AASd,IAAMtW,UAASA;AAQf,IAAMoJ,UAASA;AAQf,IAAMG,aAAYA;AAqBlB,IAAMwN,kBAAiB;AAMvB,IAAMrI,WAAU;AAShB,IAAM/N,QAAOA;AASb,IAAMkZ,YAAW;AASjB,IAAMnP,aAAYA;AASlB,IAAMG,WAASA;AAQf,IAAMqQ,gBAAe;AAQrB,IAAMpQ,eAAcA;AASpB,IAAMqQ,eAAc;AAQpB,IAAMG,aAAY;AASlB,IAAMC,mBAAkB;AAQxB,IAAM0B,aAAY;AAQlB,IAAMC,aAAYA;AAYlB,IAAM8B,eAAc;AAuBpB,IAAMC,iBAAgB;AAsBtB,IAAMjL,SAAQ;AAWd,IAAMC,eAAc;AAgBpB,IAAME,eAAc;AAoBpB,IAAMD,eAAc;AAMpB,IAAM9T,QAAOA;AAMb,IAAMoW,YAAW;AAMjB,IAAMxD,aAAY;AAMlB,IAAMuD,iBAAgB;AAMtB,IAAMzE,OAAMA;AAUZ,IAAM8D,cAAa;AAMnB,IAAMC,WAAU;AAMhB,IAAM3I,OAAMA;AAmBZ,IAAM8M,SAAQ;AAQd,IAAM3N,QAAOA;AAWb,IAAM/L,WAAU;AAMhB,IAAM2S,WAAU;AAQhB,IAAMyJ,eAAc;AAQpB,IAAMC,eAAc;AAMpB,IAAMG,WAAU;AAMhB,IAAM7Y,QAAO;AAMb,IAAM2N,QAAOA;AAMb,IAAMiP,YAAW;AAMjB,IAAMrM,UAAS;AAYf,IAAMC,YAAW;AAWjB,IAAMC,iBAAgB;AAatB,IAAMC,kBAAiB;AAQvB,IAAMC,WAAU;AAQhB,IAAMC,aAAY;AAQlB,IAAMC,kBAAiB;AAavB,IAAMC,mBAAkB;AAQxB,IAAMC,YAAW;AAQjB,IAAMC,aAAY;AASlB,IAAMrU,SAAQ;AASd,IAAMyV,cAAa;AAQnB,IAAMwB,UAAS;AAUf,IAAMC,gBAAe;AAQrB,IAAMwC,kBAAiB;AAQvB,IAAMqB,WAAU;AAWhB,IAAMH,SAAQ;AAQd,IAAM,SAAS;AAUf,IAAM,cAAc;AAQpB,IAAM,aAAa;AASnB,IAAM,mBAAmB;AAQzB,IAAM,aAAa;AASnB,IAAM,mBAAmB;AACzB,IAAMwC,QAAOA;AAUb,IAAMC,UAAS;AAaf,IAAMC,iBAAgB;AAYtB,IAAMC,cAAa;AAWnB,IAAMO,aAAY;AAkBlB,IAAMhL,kBAAiB;AASvB,IAAMwB,sBAAqB;AAkB3B,IAAMa,cAAa;AAMnB,IAAMhE,aAAYA;AAMlB,IAAMiG,iBAAgB;AAMtB,IAAMhG,iBAAgBA;AAMtB,IAAMiG,qBAAoB;AAM1B,IAAMrI,eAAc;AAMpB,IAAMyO,mBAAkB;AAMxB,IAAMC,uBAAsB;AAqB5B,IAAM/R,MAAKA;AAkBX,IAAMuH,UAAS;AAkBf,IAAMC,eAAc;AAgBpB,IAAMpC,UAASA;AASf,IAAMsF,QAAO;AASb,IAAMC,YAAW;AAMjB,IAAM5M,QAAMA;AASZ,IAAMC,YAAWA;AASjB,IAAM0H,WAAUA;AAQhB,IAAMsH,YAAW;AAajB,IAAMC,iBAAgB;AAStB,IAAMjS,SAAQA;AAQd,IAAMwS,UAAS;AA2Bf,IAAM3G,kBAAiB;AAyBvB,IAAMC,+BAA8B;AAoCpC,IAAMC,qBAAoB;AAiB1B,IAAMC,gBAAe;AAgBrB,IAAM2C,YAAW;AASjB,IAAMxV,WAAU;AAShB,IAAMwS,UAAS;AAMf,IAAMqH,sBAAqB;AAM3B,IAAMzD,kBAAiB;AAYvB,IAAMiF,wBAAuB;AAM7B,IAAMnW,SAAQ;AAQd,IAAMiW,aAAY;AAUlB,IAAMC,UAAS;AASf,IAAMgD,SAAQ;AASd,IAAMe,oBAAmB;AAazB,IAAMzL,oBAAmB;AASzB,IAAMsB,kBAAiB;AAQvB,IAAMlN,cAAa;AAQnB,IAAMmN,kBAAiB;AASvB,IAAMG,iBAAgB;AAUtB,IAAMK,iBAAgB;AAStB,IAAMC,oBAAmB;AAMzB,IAAM7G,WAAU;AAMhB,IAAMkH,eAAc;AA0BpB,IAAMW,QAAO;AAUb,IAAME,cAAa;AASnB,IAAMD,WAAU;AAShB,IAAME,UAAS;AAQf,IAAMC,cAAa;AAQnB,IAAMC,wBAAuB;AAS7B,IAAMC,aAAY;AASlB,IAAMC,mBAAkB;AASxB,IAAMkF,cAAa;AAanB,IAAMkB,cAAa;AAMnB,IAAM2B,mBAAkB;AAYxB,IAAMW,iBAAgB;AAQtB,IAAMC,0BAAyB;AAQ/B,IAAMP,yBAAwB;AAY9B,IAAM5K,SAAQ;AASd,IAAMC,aAAYA;AASlB,IAAMqK,mBAAkB;AASxB,IAAMD,aAAY;AAalB,IAAM9d,SAAQ;AASd,IAAM6a,SAAQA;AAQd,IAAMiB,SAAQ;AAQd,IAAMC,aAAY;AAqBlB,IAAM9b,WAAU;AAShB,IAAM+b,eAAc;AASpB,IAAMC,oBAAmB;AAczB,IAAMC,aAAY;AAalB,IAAMte,UAAS;AAUf,IAAM+V,sBAAqB;AAQ3B,IAAMsK,sBAAqB;AAS3B,IAAMC,4BAA2B;AAUjC,IAAMhd,WAAU;AAQhB,IAAM0S,eAAc;AAQpB,IAAMC,qBAAoB;AAS1B,IAAMkE,mBAAkB;AASxB,IAAMgB,WAAU;AAShB,IAAMC,kBAAiB;AASvB,IAAMC,wBAAuB;AAM7B,IAAMsB,mBAAkB;AAMxB,IAAMC,yBAAwB;AAM9B,IAAMC,oBAAmB;AAMzB,IAAMH,oBAAmB;AAMzB,IAAMI,kBAAiB;AAMvB,IAAMC,iBAAgB;AAQtB,IAAMuC,iBAAgB;AAUtB,IAAMzL,MAAKA;AAQX,IAAM/L,QAAOA;AAMb,IAAMiN,UAASA;AACf,IAAMqE,QAAO;AAmBb,IAAM7I,UAASA;AAMf,IAAMwB,QAAO;AAMb,IAAM6G,gBAAe;AASrB,IAAMxQ,UAASA;AAMf,IAAMkQ,OAAM;AASZ,IAAMlB,eAAc;AASpB,IAAMC,sBAAqB;AAS3B,IAAMC,gBAAe;AASrB,IAAMC,gBAAe;AAQrB,IAAM0H,UAAS;AAQf,IAAMC,gBAAe;AAQrB,IAAMW,QAAO;AAMb,IAAMC,cAAa;AASnB,IAAMC,gBAAe;AAQrB,IAAMC,WAAU;AAmBhB,IAAM3V,YAAUA;AAMhB,IAAMC,WAAUA;AAUhB,IAAMiR,WAAU;AAWhB,IAAMD,QAAO;AAiBb,IAAME,aAAY;AASlB,IAAMC,YAAW;AAUjB,IAAM6B,cAAa;AAMnB,IAAMxK,OAAMA;AASZ,IAAM+K,WAAU;AAQhB,IAAMC,aAAY;AAQlB,IAAMC,YAAW;AAQjB,IAAME,eAAc;AASpB,IAAMD,iBAAgB;AAYtB,IAAMnG,WAAU;AAkBhB,IAAMkB,WAAU;AAqBhB,IAAMc,QAAO;AAYb,IAAMiC,UAAS;AAWf,IAAMC,WAAU;AAchB,IAAM,eAAe;AASrB,IAAM,cAAc;AASpB,IAAM,oBAAoB;AAS1B,IAAM,cAAc;AASpB,IAAM,oBAAoB;AAW1B,IAAM,WAAW;AASjB,IAAMO,kBAAiB;AASvB,IAAM,eAAe;AAMrB,IAAM2D,aAAY;AAalB,IAAM,eAAe0E;AAQrB,IAAMlM,oBAAmB;AAMzB,IAAM,UAAU;AAMhB,IAAM,cAAc;AAMpB,IAAM,gBAAgB;AAMtB,IAAM,oBAAoB;AAS1B,IAAMyC,kBAAiB;AASvB,IAAM8B,gBAAe;AASrB,IAAMqC,mBAAkB;AAYxB,IAAMvY,aAAYA;AAQlB,IAAMgS,aAAYA;AAUlB,IAAMpZ,UAAQA;AAMd,IAAM0a,cAAa;AAMnB,IAAMC,oBAAmB;AAMzB,IAAMC,eAAc;AAcpB,IAAM/Z,OAAM;AAQZ,IAAMoZ,YAAW;AAQjB,IAAMJ,YAAW;AAQjB,IAAMG,WAAU;AAQhB,IAAME,cAAa;AAQnB,IAAMJ,YAAW;AAQjB,IAAMC,YAAW;AAQjB,IAAM+G,eAAc;AAQpB,IAAMlM,gBAAe;AAQrB,IAAMgF,kBAAiB;AAQvB,IAAMgI,8BAA6B;AAanC,IAAM1G,SAAQ;AASd,IAAMC,aAAY;AASlB,IAAMxM,UAASA;AASf,IAAMyM,cAAa;AASnB,IAAMC,iBAAgB;AAYtB,IAAMW,UAASA;AASf,IAAMC,cAAa;AAcnB,IAAMS,WAAUA;AAShB,IAAM,kBAAkB;AAMxB,IAAM,oBAAoB;AAM1B,IAAM,wBAAwB;AAM9B,IAAM,8BAA8B;AAYpC,IAAMqB,cAAa;AAQnB,IAAMzE,gBAAe;AAQrB,IAAMG,mBAAkB;AAQxB,IAAMuE,oBAAmB;AAQzB,IAAMzE,sBAAqB;AAQ3B,IAAMC,yBAAwB;AAQ9B,IAAMsB,gBAAe;AAMrB,IAAMkG,cAAa;AAYnB,IAAM,YAAY;AAQlB,IAAM5B,WAAU;AAoBhB,IAAMK,uBAAsB;AAQ5B,IAAMrF,iBAAgB;AAUtB,IAAM,UAAU;AAMhB,IAAM,cAAc;AASpB,IAAM,aAAa;AASnB,IAAM,iBAAiB;AAMvB,IAAM,UAAU;AAMhB,IAAM,cAAc;AAapB,IAAM2F,YAAWA;AASjB,IAAMG,gBAAe;AAMrB,IAAMzT,OAAM;AAMZ,IAAM4G,WAAU;AAMhB,IAAMF,YAAW;AAMjB,IAAMzG,WAAU;AAShB,IAAMqB,MAAkB,qBAAK,GAAG,CAAC,MAAM,SAASrB,SAAQ,MAAM,MAAM,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AASnF,IAAM4I,WAAU;AAMhB,IAAMmH,mBAAkB;AAMxB,IAAM/J,QAAOA;AAMb,IAAMsF,eAAc;AAMpB,IAAM,UAAU;AAMhB,IAAM,qBAAqB;AAM3B,IAAMkJ,uBAAsB;AAM5B,IAAME,sBAAqB;AAM3B,IAAMD,oBAAmB;AAUzB,IAAMtC,UAAS;AAMf,IAAMC,cAAa;AAMnB,IAAM2C,cAAa;AAMnB,IAAMC,oBAAmB;AAMzB,IAAMC,oBAAmB;AAQzB,IAAM9M,iBAAgB;AAQtB,IAAMF,uBAAsB;AAM5B,IAAM8B,eAAc;AAMpB,IAAMD,qBAAoB;AAM1B,IAAMgH,mBAAkB;AAMxB,IAAMC,aAAY;AAQlB,IAAM9D,aAAY;AAQlB,IAAMU,YAAW;AAYjB,IAAMC,kBAAiB;AAYvB,IAAMuF,WAAU;AAQhB,IAAM0B,YAAW;AAUjB,IAAMC,kBAAiB;AAQvB,IAAMP,kBAAiB;AAavB,IAAMjT,gBAAeA;AASrB,IAAMiN,sBAAqB;;;AgF77F3B,IAAM,YAAY,CAAC/I,SAAQ,WAAW,oBAAoB;AACxD,QAAM,QAAe,QAAQA,OAAM;AACnC,QAAM,YAAY,CAAAG,UAAQ,SAASA,OAAM,UAAQ;AAC/C,IAAO,YAAYoX,cAAa,MAAM,GAAG,CAAC,GAAG,MAAM;AACjD,cAAQ,KAAK,IAAI;AAAA,IACnB,CAAC;AAAA,EACH,CAAC,CAAC;AACF,WAAS,WAAW;AAClB,YAAQ,eAAe,UAAU,QAAQ;AACzC,YAAQ,eAAe,WAAW,QAAQ;AAC1C,IAAO,QAAQ,MAAM,gBAAgB,MAAM,GAAG,CAAC,CAAC;AAAA,EAClD;AACA,UAAQ,KAAK,UAAU,QAAQ;AAC/B,UAAQ,KAAK,WAAW,QAAQ;AAClC;AACA,IAAMA,gBAAe,CAAA3kB,QAAa6F,UAAc8d,QAAO,CAAAA,WAAS;AAC9D,MAAIA,OAAM,WAAW,GAAG;AACtB,WAAc7V;AAAA,EAChB;AACA,SAAa4V,gBAAeC,QAAO3jB,GAAE;AACvC,CAAC;AAUD,IAAM,UAAU;;;ACnChB,aAAwB;;;AC8BxB,IAAMgI,WAAsB,uBAAO,IAAI,mBAAmB;AAY1D,IAAM,kBAAkB;AAAA,EACtB,CAACA,QAAM,GAAGA;AAAA,EACV,CAAC,MAAM,IAAI;AACT,UAAM,aAAa,UAAU,IAAI;AACjC,WAAO,KAAK,KAAK,WAAW,KAAK,GAAG,QAAQ,OAAS,WAAW,KAAK,CAAC,CAAC;AAAA,EACzE;AAAA,EACA,CAACnF,OAAQ,EAAE,MAAM;AACf,WAAO,aAAa,IAAI,KAAKma,QAAO,MAAM,IAAI;AAAA,EAChD;AAAA,EACA,WAAW;AACT,WAAO4H,UAAS,IAAI;AAAA,EACtB;AAAA,EACA,SAAS;AACP,WAAOA,UAAS,IAAI;AAAA,EACtB;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAOA,UAAS,IAAI;AAAA,EACtB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAUA,IAAM,eAAe,OAAK,YAAY,GAAG5c,QAAM;AAW/C,IAAM1B,SAAO,CAACnL,QAAO0pB,WAAU;AAC7B,QAAM,IAAI,OAAO,OAAO,eAAe;AACvC,IAAE,QAAQ1pB;AACV,IAAE,QAAQ0pB;AACV,SAAO;AACT;AACA,IAAMzC,WAAuB,uBAAO,CAAC;AAErC,IAAM,WAAwB,uBAAO,EAAE;AACvC,IAAMvX,QAAoB,gBAAAvE,OAAK8b,UAAS,CAAC;AAgBzC,IAAM,YAAY,UAAQ;AACxB,MAAI,KAAK,eAAe,QAAW;AACjC,QAAI,KAAK,UAAUA,UAAS;AAC1B,WAAK,aAAavX;AAAA,IACpB,OAAO;AACL,YAAM,SAAS,GAAG,KAAK,KAAK;AAC5B,UAAI,QAAQ;AACZ,eAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,YAAI,OAAO,CAAC,MAAM,KAAK;AACrB;AAAA,QACF,OAAO;AACL;AAAA,QACF;AAAA,MACF;AACA,UAAI,UAAU,GAAG;AACf,aAAK,aAAa;AAAA,MACpB;AACA,YAAM1P,SAAQ,OAAO,OAAO,UAAU,GAAG,OAAO,SAAS,KAAK,CAAC;AAC/D,YAAM0pB,SAAQ,KAAK,QAAQ;AAC3B,WAAK,aAAave,OAAKnL,QAAO0pB,MAAK;AAAA,IACrC;AAAA,EACF;AACA,SAAO,KAAK;AACd;AAcA,IAAM,QAAQ,CAAC,MAAMA,WAAU;AAC7B,MAAIA,SAAQ,KAAK,OAAO;AACtB,WAAOve,OAAK,KAAK,QAAQ,YAAY,OAAOue,SAAQ,KAAK,KAAK,GAAGA,MAAK;AAAA,EACxE;AACA,MAAIA,SAAQ,KAAK,OAAO;AACtB,WAAOve,OAAK,KAAK,QAAQ,YAAY,OAAO,KAAK,QAAQue,MAAK,GAAGA,MAAK;AAAA,EACxE;AACA,SAAO;AACT;AAseA,IAAMC,eAA2B,qBAAO,CAAC,MAAM,SAAS;AACtD,MAAI,KAAK,QAAQ,KAAK,OAAO;AAC3B,WAAO,MAAM,MAAM,KAAK,KAAK,EAAE,UAAU,KAAK;AAAA,EAChD;AACA,MAAI,KAAK,QAAQ,KAAK,OAAO;AAC3B,WAAO,MAAM,MAAM,KAAK,KAAK,EAAE,UAAU,KAAK;AAAA,EAChD;AACA,SAAO,KAAK,UAAU,KAAK;AAC7B,CAAC;AAQD,IAAM9H,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS8H,aAAY,MAAM,IAAI,CAAC;AAyG3E,IAAMF,YAAW,OAAK;AACpB,QAAM,WAAW,EAAE,QAAQxC;AAC3B,QAAM,WAAW,WAAW,GAAG,EAAE,KAAK,GAAG,UAAU,CAAC,IAAI,GAAG,EAAE,KAAK;AAClE,MAAI2C;AACJ,MAAI7B;AACJ,MAAI,EAAE,SAAS,SAAS,QAAQ;AAC9B,IAAA6B,UAAS;AACT,IAAA7B,SAAQ,IAAI,OAAO,EAAE,QAAQ,SAAS,MAAM,IAAI;AAAA,EAClD,OAAO;AACL,UAAM,WAAW,SAAS,SAAS,EAAE;AACrC,QAAI,WAAW,SAAS,QAAQ;AAC9B,YAAM,QAAQ,WAAW,SAAS;AAClC,MAAA6B,UAAS,GAAG,QAAQ,GAAG,IAAI,OAAO,KAAK,CAAC;AACxC,MAAA7B,SAAQ;AAAA,IACV,OAAO;AACL,MAAAA,SAAQ,SAAS,MAAM,QAAQ;AAC/B,MAAA6B,UAAS,SAAS,MAAM,GAAG,QAAQ;AAAA,IACrC;AAAA,EACF;AACA,QAAMlE,YAAWqC,WAAU,KAAK6B,UAAS,GAAGA,OAAM,IAAI7B,MAAK;AAC3D,SAAO,WAAW,IAAIrC,SAAQ,KAAKA;AACrC;;;AC/wBA;AAAA;AAAA,qBAAAmE;AAAA,EAAA,aAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,gBAAAvU;AAAA,EAAA,qBAAAC;AAAA,EAAA,eAAA9R;AAAA,EAAA,WAAAkP;AAAA,EAAA,eAAA+D;AAAA,EAAA,eAAAoT;AAAA,EAAA;AAAA;AAAA;AAAA,qBAAArB;AAAA,EAAA,YAAAxnB;AAAA,EAAA,iBAAA4S;AAAA,EAAA,qBAAAuD;AAAA,EAAA,gBAAAC;AAAA,EAAA,iCAAA2R;AAAA,EAAA,eAAAxe;AAAA,EAAA,eAAAC;AAAA,EAAA,aAAAie;AAAA,EAAA,gBAAAqB;AAAA,EAAA,eAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,eAAArB;AAAA,EAAA,qBAAAsB;AAAA,EAAA,qBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,WAAAlf;AAAA,EAAA,gBAAAiP;AAAA,EAAA,aAAAva;AAAA,EAAA,kBAAA0a;AAAA,EAAA,eAAA2O;AAAA,EAAA,aAAA9gB;AAAA,EAAA,gBAAAsS;AAAA,EAAA,aAAAK;AAAA,EAAA,cAAAvM;AAAA,EAAA,kBAAA8b;AAAA,EAAA,mBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,eAAAlP;AAAA,EAAA,oBAAAmP;AAAA,EAAA,aAAApO;AAAA,EAAA,aAAA5V;AAAA,EAAA,cAAAkW;AAAA,EAAA,qBAAA+N;AAAA,EAAA,qBAAAC;AAAA,EAAA,eAAA1Z;AAAA,EAAA;AAAA,2BAAA2Z;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,mBAAAC;AAAA,EAAA;AAAA;AAAA,cAAAja;AAAA,EAAA,eAAAkD;AAAA,EAAA,sBAAAgX;AAAA,EAAA,eAAAnN;AAAA,EAAA,YAAA7Y;AAAA,EAAA,mBAAAimB;AAAA,EAAA,WAAA9X;AAAA,EAAA,gBAAAiL;AAAA,EAAA,qBAAAC;AAAA,EAAA,iBAAA6M;AAAA,EAAA,oBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,WAAA5Y;AAAA,EAAA,gBAAA6Y;AAAA,EAAA,sBAAArK;AAAA,EAAA,gBAAAM;AAAA,EAAA,kBAAA+H;AAAA;;;AC0EA,IAAM,oBAAoB,oBAAkB,cAAc,yBAAyB,cAAc,CAAC;AAGlG,IAAM,aAAa,CAAAvY,UAAQ,eAAe3F,OAAK,SAAS2F,KAAI,CAAC;AAG7D,IAAM,OAAO,CAAC,MAAM,YAAY,OAAO,SAAS,SAAS,QAAQqC,KAAI,eAAe,MAAM,OAAO,GAAG,CAAArC,UAAQ,aAAa,CAAAsB,UAAQ,QAAQ,MAAMtB,OAAMsB,KAAI,CAAC,CAAC,IAAI,eAAe,MAAM,OAAO,CAAC;AAG5L,IAAM,YAAY,CAAAwM,YAAU,cAAc,iBAAiBA,OAAM,CAAC;;;ADlDlE,IAAMiL,eAAc;AAsBpB,IAAMM,WAAU;AAShB,IAAMD,WAAU;AAQhB,IAAMJ,SAAQ;AAYd,IAAMC,kBAAiB;AAQvB,IAAMvU,YAAWA;AAQjB,IAAMC,iBAAgBA;AAStB,IAAM9R,WAAUA;AAQhB,IAAMkP,OAAMA;AAQZ,IAAM+D,WAAUA;AAShB,IAAMoT,WAAU;AAQhB,IAAM,SAASnB;AAQf,IAAM,gBAAgB;AAStB,IAAM,gBAAgB;AAWtB,IAAMF,eAAc;AAQpB,IAAMxnB,SAAOA;AAQb,IAAMoW,YAAWA;AAQjB,IAAMxD,aAAYA;AAQlB,IAAMuD,iBAAgBA;AAQtB,IAAM5M,YAAUA;AAQhB,IAAMC,YAAUA;AAQhB,IAAMie,SAAQ;AACd,IAAMqB,gBAAe;AASrB,IAAMG,UAAS;AAQf,IAAM/e,QAAMA;AAQZ,IAAMiP,YAAWA;AAUjB,IAAMva,UAAQA;AAUd,IAAM0a,cAAaA;AASnB,IAAM2O,WAAUA;AAShB,IAAM9gB,SAAQA;AAQd,IAAMsS,YAAWA;AASjB,IAAMK,SAAQA;AASd,IAAMvM,UAASA;AASf,IAAM+b,eAAc;AASpB,IAAMC,WAAU;AAUhB,IAAMlP,WAAU;AAMhB,IAAM6O,iBAAgB;AAMtB,IAAMtB,WAAUD;AAMhB,IAAMyB,eAAcvB;AAMpB,IAAMsB,iBAAgBrB;AAMtB,IAAMC,6BAA4BA;AAUlC,IAAMyB,gBAAe;AAQrB,IAAMpO,SAAQ;AAWd,IAAM5V,SAAQA;AAQd,IAAMkW,UAAS;AAQf,IAAMgO,iBAAgB;AAStB,IAAMD,iBAAgB;AAStB,IAAMzZ,WAAU;AAQhB,IAAM6C,WAAUA;AAShB,IAAMgX,kBAAiB;AASvB,IAAMnN,WAAUA;AAQhB,IAAM7Y,QAAOA;AASb,IAAMimB,eAAc;AAQpB,IAAM9X,OAAMA;AAQZ,IAAMiL,YAAWA;AAQjB,IAAMC,iBAAgBA;AAStB,IAAM6M,aAAY;AAUlB,IAAM1Y,OAAMA;AAUZ,IAAM6Y,YAAW;AAUjB,IAAMhC,cAAa;AAMnB,IAAM8B,gBAAe;AAMrB,IAAMC,gBAAe;AAMrB,IAAM,WAAW,CAAAlV,WAAS2U,eAAc,0BAA4B,iBAAiB7a,KAAI,UAAUkG,MAAK,CAAC,CAAC;AAQ1G,IAAM4U,qBAAoB;AAQ1B,IAAMN,cAAa;AAMnB,IAAM,qBAAqB,qBAAmBK,eAAc,sBAAwB,wBAAwB,eAAe,CAAC;AAM5H,IAAM,oBAAoB,oBAAkBA,eAAc,sBAAwB,qBAAqB,cAAc,CAAC;AAMtH,IAAM,kBAAkB,CAAAvjB,WAASujB,eAAc,SAASvjB,MAAK,IAAIoD,SAAUpD,QAAO,OAAK,sBAAwB,cAAc,CAAC,CAAC,IAAI,sBAAwB,cAAcA,MAAK,CAAC;AAM/K,IAAM,eAAe,eAAaujB,eAAc,sBAAwB,kBAAkB,SAAS,CAAC;AAUpG,IAAM/Z,QAAO;AAQb,IAAMia,aAAY;AAMlB,IAAM,kBAAkB,CAAAvqB,aAAWqqB,eAAc,sBAAwB,4BAA4BrqB,QAAO,CAAC;AAM7G,IAAM,4BAA4B,WAASqqB,eAAc,sBAAwB,+BAA+B,KAAK,CAAC;AAMtH,IAAMvJ,YAAWA;AAMjB,IAAMN,kBAAiBA;;;AEvnBvB,IAAM,mBAAmB;AAGzB,IAAM,gBAA6B,uBAAO,IAAI,gBAAgB;AAG9D,IAAM,mBAAmB;AAGzB,IAAM,gBAA6B,uBAAO,IAAI,gBAAgB;AAG9D,IAAM,yBAAyB;AAG/B,IAAM,sBAAmC,uBAAO,IAAI,sBAAsB;AAG1E,IAAM,wBAAwB;AAAA,EAC5B,IAAI,OAAK;AACX;AAGA,IAAM,kBAAkB;AAAA,EACtB,KAAK,OAAK;AACZ;AAGA,IAAM,kBAAkB;AAAA,EACtB,MAAM,OAAK;AACb;AAGA,IAAM,YAAN,MAAgB;AAAA,EACd,CAAC,aAAa,IAAI;AAAA,EAClB,CAAC,aAAa,IAAI;AAAA,EAClB,YACA,OACA,QACA,cACA,cACA,UAAU;AACR,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,WAAW;AACT,WAAO,KAAK,MAAM,SAAS;AAAA,EAC7B;AAAA,EACA,OAAO;AACL,WAAO,QAAQ,MAAM,SAAS,KAAK,WAAW,GAAG,MAAMlO,UAAS,CAAC;AAAA,EACnE;AAAA,EACA,aAAa;AACX,QAAIjI,KAAI,KAAK,YAAY,GAAG;AAC1B,aAAOuC,MAAK;AAAA,IACd;AACA,WAAOnB,MAAK,KAAK,MAAM,OAAO,IAAI/L,QAAO,KAAK,MAAM,IAAI,KAAK,SAAS,YAAY,CAAC;AAAA,EACrF;AAAA,EACA,UAAU;AACR,WAAOmL,MAAI,KAAK,KAAK,GAAG,CAAA9F,WAAQA,UAAQ,CAAC;AAAA,EAC3C;AAAA,EACA,SAAS;AACP,WAAO8F,MAAI,KAAK,KAAK,GAAG,CAAA9F,WAAQA,UAAQ,KAAK,SAAS,CAAC;AAAA,EACzD;AAAA,EACA,WAAW;AACT,WAAO,gBAAgB,iBAAiB,WAAS;AAC/C,WAAK,KAAK,cAAcqK,KAAI,IAAI,CAAC;AACjC,aAAO,KAAK,2BAA2B,cAAc,KAAK,MAAM,GAAG,OAAK,sBAAsB,GAAG,MAAM,GAAG,CAAC,GAAG,KAAK,GAAGsD,UAAS,KAAK,SAAS,SAAS,CAAC,GAAG,WAAW,gBAAgB,KAAK,cAAc,MAAM,CAAC,GAAGR,OAAM;AAAA,IAC1N,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,aAAa;AACX,WAAO,KAAK,MAAM7H,KAAI,KAAK,YAAY,CAAC;AAAA,EAC1C;AAAA,EACA,gBAAgB;AACd,WAAO,cAAc,KAAK,YAAY;AAAA,EACxC;AAAA,EACA,WAAW;AACT,WAAO,CAACA,KAAI,KAAK,YAAY;AAAA,EAC/B;AAAA,EACA,YAAY7K,QAAO;AACjB,QAAI6K,KAAI,KAAK,YAAY,GAAG;AAC1B,aAAO;AAAA,IACT;AACA,QAAI;AACJ,QAAI,KAAK,MAAM,OAAO,MAAM,GAAG;AAC7B,YAAM,QAAQ,KAAK,KAAK,QAAQwb,MAAO,iBAAiB,CAAC;AACzD,UAAI,UAAU,mBAAmB;AAC/B,+BAAuB,OAAOrmB,MAAK;AACnC,sBAAc;AAAA,MAChB,OAAO;AACL,sBAAc;AAAA,MAChB;AAAA,IACF,OAAO;AACL,oBAAc;AAAA,IAChB;AACA,QAAI,aAAa;AACf,aAAO;AAAA,IACT;AAEA,UAAM,YAAY,KAAK,MAAM,MAAMA,MAAK;AACxC,yBAAqB,KAAK,UAAU,KAAK,OAAO,KAAK,MAAM;AAC3D,WAAO;AAAA,EACT;AAAA,EACA,MAAMA,QAAO;AACX,WAAO,QAAQ,MAAM;AACnB,UAAI6K,KAAI,KAAK,YAAY,GAAG;AAC1B,eAAOiI;AAAA,MACT;AACA,UAAI;AACJ,UAAI,KAAK,MAAM,OAAO,MAAM,GAAG;AAC7B,cAAM,QAAQ,KAAK,KAAK,QAAQuT,MAAO,iBAAiB,CAAC;AACzD,YAAI,UAAU,mBAAmB;AAC/B,iCAAuB,OAAOrmB,MAAK;AACnC,wBAAc;AAAA,QAChB,OAAO;AACL,wBAAc;AAAA,QAChB;AAAA,MACF,OAAO;AACL,sBAAc;AAAA,MAChB;AACA,UAAI,aAAa;AACf,eAAO,QAAQ,IAAI;AAAA,MACrB;AAEA,YAAM,YAAY,KAAK,MAAM,MAAMA,MAAK;AACxC,2BAAqB,KAAK,UAAU,KAAK,OAAO,KAAK,MAAM;AAC3D,aAAO,YAAY,QAAQ,IAAI,IAAI,KAAK,SAAS,cAAc,CAACA,MAAK,GAAG,KAAK,OAAO,KAAK,QAAQ,KAAK,YAAY;AAAA,IACpH,CAAC;AAAA,EACH;AAAA,EACA,SAAS,UAAU;AACjB,WAAO,QAAQ,MAAM;AACnB,UAAI6K,KAAI,KAAK,YAAY,GAAG;AAC1B,eAAOiI;AAAA,MACT;AACA,YAAMxP,UAASsH,cAAa,QAAQ;AACpC,YAAM,UAAU,KAAK,MAAM,OAAO,MAAM,IAAIA,cAAa,YAAY,KAAK,QAAQtH,QAAO,MAAM,CAAC,IAAI;AACpG,YAAM,CAAC,WAAW,SAAS,IAAI,KAAKA,SAAQ,QAAQ,QAAQ,MAAM,CAAC;AACnE,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,cAAM,QAAQ,QAAQ,CAAC;AACvB,cAAM,OAAO,UAAU,CAAC;AACxB,+BAAuB,OAAO,IAAI;AAAA,MACpC;AACA,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO,QAAQ,IAAI;AAAA,MACrB;AAEA,YAAM,UAAU,KAAK,MAAM,SAAS,SAAS;AAC7C,2BAAqB,KAAK,UAAU,KAAK,OAAO,KAAK,MAAM;AAC3D,aAAO,QAAU,OAAO,IAAI,QAAQ,IAAI,IAAI,KAAK,SAAS,cAAc,SAAS,KAAK,OAAO,KAAK,QAAQ,KAAK,YAAY;AAAA,IAC7H,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,WAAO,iBAAiB,WAAS;AAC/B,UAAIuH,KAAI,KAAK,YAAY,GAAG;AAC1B,eAAOiI;AAAA,MACT;AACA,YAAM,OAAO,KAAK,MAAM,KAAK,iBAAiB;AAC9C,UAAI,SAAS,mBAAmB;AAC9B,aAAK,SAAS,wBAAwB,KAAK,OAAO,KAAK,MAAM;AAC7D,eAAO,QAAQ,IAAI;AAAA,MACrB,OAAO;AAKL,cAAM7R,YAAW,mBAAmB,MAAM,GAAG,CAAC;AAC9C,eAAO,KAAK,QAAQ,MAAM;AACxB,eAAK,KAAK,QAAQ,MAAQA,SAAQ,CAAC;AACnC,+BAAqB,KAAK,UAAU,KAAK,OAAO,KAAK,MAAM;AAC3D,iBAAO4J,KAAI,KAAK,YAAY,IAAIiI,aAAY,cAAc7R,SAAQ;AAAA,QACpE,CAAC,GAAG,YAAY,MAAM;AACpB,iBAAO,KAAK,MAAM,aAAa,KAAK,QAAQA,SAAQ,CAAC;AAAA,QACvD,CAAC,CAAC;AAAA,MACJ;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,WAAO,QAAQ,MAAM;AACnB,aAAO4J,KAAI,KAAK,YAAY,IAAIiI,aAAY,KAAK,MAAM;AACrD,cAAMxP,UAAS,KAAK,MAAM,SAAS,OAAO,iBAAiB;AAC3D,aAAK,SAAS,wBAAwB,KAAK,OAAO,KAAK,MAAM;AAC7D,eAAOsH,cAAetH,OAAM;AAAA,MAC9B,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,SAASqJ,MAAK;AACZ,WAAO,QAAQ,MAAM9B,KAAI,KAAK,YAAY,IAAIiI,aAAY,KAAK,MAAM;AACnE,YAAMxP,UAAS,KAAK,MAAM,SAASqJ,IAAG;AACtC,WAAK,SAAS,wBAAwB,KAAK,OAAO,KAAK,MAAM;AAC7D,aAAO/B,cAAetH,OAAM;AAAA,IAC9B,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,YAAYM,MAAK+I,MAAK;AACpB,WAAO,QAAQ,MAAM,kBAAkB,MAAM/I,MAAK+I,MAAKvJ,OAAQ,CAAC,CAAC;AAAA,EACnE;AACF;AAGA,IAAM,oBAAoB,CAAC,MAAMQ,MAAK+I,MAAK,QAAQ;AACjD,MAAIA,OAAM/I,MAAK;AACb,WAAO,QAAQ,GAAG;AAAA,EACpB;AACA,SAAO,KAAK,SAAS,MAAM+I,IAAG,GAAGjC,SAAQ,QAAM;AAC7C,UAAM,YAAY9G,OAAM,GAAG;AAC3B,QAAI,cAAc,GAAG;AACnB,aAAO,KAAK0nB,MAAK,IAAI,GAAGjgB,MAAI,OAAK,KAAK,KAAKzB,WAAU,EAAE,GAAGD,QAAO,CAAC,CAAC,CAAC,CAAC;AAAA,IACvE;AACA,QAAI,YAAY,GAAG;AACjB,aAAO,KAAK2hB,MAAK,IAAI,GAAG5gB,SAAQ,OAAK,kBAAkB,MAAM,YAAY,GAAGiC,OAAM,GAAG,SAAS,GAAG,KAAK,KAAK/C,WAAU,EAAE,GAAGD,QAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACxI;AACA,WAAO,QAAQ,KAAK,KAAKC,WAAU,EAAE,CAAC,CAAC;AAAA,EACzC,CAAC,CAAC;AACJ;AAYA,IAAM6c,WAAU,uBAAqB,KAAK,KAAK,MAAM,QAAU,iBAAiB,CAAC,GAAG/b,SAAQ,WAASS,OAAK,6BAA6B,KAAK,GAAG,qBAAqB,CAAC,CAAC,CAAC;AAGvK,IAAM,WAAW,uBAAqB,KAAK,KAAK,MAAM,QAAU,iBAAiB,CAAC,GAAGT,SAAQ,WAASS,OAAK,6BAA6B,KAAK,GAAG,iBAAiB,CAAC,CAAC,CAAC;AAGpK,IAAM,UAAU,uBAAqB,KAAK,KAAK,MAAM,QAAU,iBAAiB,CAAC,GAAGT,SAAQ,WAASS,OAAK,6BAA6B,KAAK,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAGlK,IAAMqb,aAAY,MAAM,KAAK,KAAK,MAAM,UAAY,CAAC,GAAG9b,SAAQ,WAASS,OAAK,6BAA6B,KAAK,GAAG,iBAAiB,CAAC,CAAC,CAAC;AAGvI,IAAMkF,cAAa,CAAC,OAAO,QAAQ,cAAc,cAAc,aAAa;AAC1E,SAAO,IAAI,UAAU,OAAO,QAAQ,cAAc,cAAc,QAAQ;AAC1E;AAGA,IAAMlF,SAAO,CAAC,OAAO,aAAa,KAAK,aAAa,GAAGE,MAAI,CAAApK,cAAYoP,YAAW,OAAO,UAAY,GAAGpP,WAAUkK,MAAO,KAAK,GAAG,QAAQ,CAAC,CAAC;AAG3I,IAAM,+BAAN,MAAmC;AAAA,EACjC,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,KAAK,KAAK;AACR,WAAOkb,MAAO,KAAK,SAAS,GAAG;AAAA,EACjC;AAAA,EACA,SAAS,OAAO;AACd,WAAO,SAAS,KAAK,SAAS,KAAK;AAAA,EACrC;AAAA,EACA,SAAS,UAAU;AACjB,WAAO,SAAW,KAAK,SAAS,QAAQ;AAAA,EAC1C;AAAA,EACA,MAAM,SAAS;AACb,WAAO,MAAQ,KAAK,SAAS,OAAO;AAAA,EACtC;AAAA,EACA,WAAW;AACT,WAAO,SAAW,KAAK,OAAO;AAAA,EAChC;AAAA,EACA,SAAS;AACP,WAAOnmB,QAAO,KAAK,OAAO;AAAA,EAC5B;AACF;AAGA,IAAM,+BAA+B,aAAW,IAAI,6BAA6B,OAAO;AAGxF,IAAMopB,YAAW,UAAQ,KAAK,SAAS;AAGvC,IAAM/jB,SAAO,UAAQ,KAAK,KAAK;AAG/B,IAAM,SAAS,UAAQ,KAAK,OAAO;AAGnC,IAAMiK,YAAU,UAAQ,KAAK,QAAQ;AAGrC,IAAM,aAAa,UAAQ,KAAK,WAAW;AAG3C,IAAM,gBAAgB,UAAQ,KAAK,cAAc;AAGjD,IAAM,WAAW,UAAQ,KAAK,SAAS;AAGvC,IAAM+b,SAAqB,qBAAK,GAAG,CAAC,MAAMvrB,WAAU,KAAK,MAAMA,MAAK,CAAC;AAMrE,IAAMwrB,YAAwB,qBAAK,GAAG,CAAC,MAAM,aAAa,KAAK,SAAS,QAAQ,CAAC;AAGjF,IAAMnF,QAAO,UAAQhb,MAAI,KAAK,SAAS,CAAC,GAAG3J,KAAI;AAG/C,IAAM4pB,QAAO,UAAQ,KAAK,KAAK;AAG/B,IAAM,UAAU,UAAQ,KAAK,QAAQ;AAGrC,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM3e,SAAQ,KAAK,SAASA,IAAG,CAAC;AAGvE,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM/I,MAAK+I,SAAQ,KAAK,YAAY/I,MAAK+I,IAAG,CAAC;AAGvF,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,YAAY,GAAG,CAAC,CAAC;AAOtE,IAAM,uBAAuB,MAAM,IAAI,qBAAqB;AAG5D,IAAM,mBAAmB,MAAM,IAAI,iBAAiB;AAGpD,IAAM,kBAAkB,MAAM,IAAI,gBAAgB;AAGlD,IAAM,uBAAN,MAA2B;AAAA,EACzB,CAAC,mBAAmB,IAAI;AAAA,EACxB,UAAU,UAAY;AAAA,EACtB,cAAc;AACZ,WAAOzM,QAAO,KAAK,OAAO;AAAA,EAC5B;AAAA,EACA,+BAA+B,QAAQ;AACrC,WAAO,CAACsP,SAAU,KAAK,OAAO,KAAK,CAACA,SAAU,MAAM,GAAG;AACrD,YAAM,QAAQ6W,MAAO,QAAQ,MAAM;AACnC,YAAM,SAASA,MAAO,KAAK,SAAS,MAAM;AAC1C,UAAI,OAAO,CAAC,GAAG;AACb,+BAAuB,OAAO,CAAC,GAAG,IAAI;AAAA,MACxC;AACA,6BAAuB,OAAO,OAAO,CAAC,CAAC;AAAA,IACzC;AAAA,EACF;AAAA,EACA,WAAW;AACT,WAAO,KAAK,SAAS3b,SAAQ,CAAA4F,aAAW,KAAK,KAAK,MAAM,cAAc,KAAK,OAAO,CAAC,GAAG5F,SAAQ,aAAW,2BAA2B,SAAS,CAAC,CAAC,GAAGzJ,WAAU,UAAU,MAAM,aAAa,KAAK,sBAAsBA,WAAUqP,QAAO,GAAGoC,OAAM,IAAIC,OAAM,KAAK,CAAC,CAAC,CAAC,CAAC;AAAA,EACnQ;AAAA,EACA,cAAc,UAAU,OAAO,QAAQ8Y,aAAY;AACjD,WAAO,iBAAiB,WAAS;AAC/B,YAAMxqB,YAAW,mBAAmB,MAAM,GAAG,CAAC;AAC9C,aAAO,KAAK,QAAQ,MAAM;AACxB,aAAK,YAAY,UAAUA,SAAQ;AACnC,aAAK,wBAAwB,OAAO,MAAM;AAC1C,6BAAqB,MAAM,OAAO,MAAM;AACxC,eAAO4J,KAAI4gB,WAAU,IAAI3Y,aAAY,cAAc7R,SAAQ;AAAA,MAC7D,CAAC,GAAG,YAAY,MAAM,KAAK,MAAM,KAAK,aAAaA,SAAQ,CAAC,CAAC,CAAC;AAAA,IAChE,CAAC;AAAA,EACH;AAAA,EACA,wBAAwB,OAAO,QAAQ;AACrC,QAAI,cAAc;AAClB,WAAO,gBAAgB,MAAM,SAAS,MAAM,OAAO,qBAAqB,MAAM,OAAO,IAAI,MAAM,SAAS,IAAI;AAC1G,YAAM,SAAS,KAAK,KAAK,SAASolB,MAAO,iBAAiB,CAAC;AAC3D,UAAI,WAAW,mBAAmB;AAChC,sBAAc;AAAA,MAChB,OAAO;AACL,cAAM,UAAU,MAAM,MAAM,OAAO,CAAC,CAAC;AACrC,YAAI,WAAW,OAAO,CAAC,GAAG;AACxB,iCAAuB,OAAO,CAAC,GAAG,IAAI;AAAA,QACxC,WAAW,CAAC,SAAS;AACnB,yBAAe,KAAK,SAAS,KAAK,cAAc,KAAK,OAAO,GAAG1a,SAAQ,MAAM,CAAC,CAAC;AAAA,QACjF;AACA,6BAAqB,MAAM,OAAO,MAAM;AAAA,MAC1C;AAAA,IACF;AAAA,EACF;AAAA,EACA,YAAY,UAAU1K,WAAU;AAC9B,UAAM,QAAQ,MAAM,KAAK,QAAQ;AACjC,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAMjB,SAAQ,MAAM,CAAC;AACrB,UAAI,MAAM,MAAM,SAAS,GAAG;AAC1B,aAAK,KAAK,SAAS,MAAQ,CAACA,QAAOiB,WAAU,IAAI,CAAC,CAAC;AAAA,MACrD,OAAO;AACL,aAAK,KAAK,SAAS,MAAQ,CAACjB,QAAOiB,WAAU,KAAK,CAAC,CAAC;AAAA,MACtD;AAAA,IACF;AAAA,EACF;AAAA,EACA,aAAaA,WAAU;AACrB,mBAAe,KAAK,SAAS,KAAK,cAAc,KAAK,OAAO,GAAGkJ,QAAO,CAAC,CAAC,EAAE,CAAC,MAAM,MAAMlJ,SAAQ,CAAC,CAAC;AAAA,EACnG;AACF;AAGA,IAAM,mBAAN,MAAuB;AAAA,EACrB,CAAC,mBAAmB,IAAI;AAAA,EACxB,cAAc;AACZ,WAAO;AAAA,EACT;AAAA,EACA,WAAW;AACT,WAAO0R;AAAA,EACT;AAAA,EACA,iCAAiC;AAAA,EAAC;AAAA,EAClC,cAAc,WAAW,QAAQ,SAAS,aAAa;AACrD,WAAO,QAAQ,KAAK;AAAA,EACtB;AAAA,EACA,wBAAwB,QAAQ,SAAS;AAAA,EAEzC;AACF;AAGA,IAAM,kBAAN,MAAsB;AAAA,EACpB,CAAC,mBAAmB,IAAI;AAAA,EACxB,cAAc;AACZ,WAAO;AAAA,EACT;AAAA,EACA,WAAW;AACT,WAAOA;AAAA,EACT;AAAA,EACA,iCAAiC;AAAA,EAAC;AAAA,EAClC,cAAc,UAAU,OAAO,QAAQ,aAAa;AAClD,WAAO,KAAK,MAAM;AAChB,WAAK,YAAY,OAAO,QAAQ;AAChC,2BAAqB,MAAM,OAAO,MAAM;AACxC,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,wBAAwB,QAAQ,SAAS;AAAA,EAEzC;AAAA,EACA,YAAY,OAAO,UAAU;AAC3B,UAAMnQ,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAI6C;AACJ,QAAI,WAAW;AACf,WAAO,EAAEA,QAAO7C,UAAS,KAAK,GAAG,QAAQ,UAAU;AACjD,UAAI,MAAM,SAAS,MAAM,GAAG;AAC1B;AAAA,MACF;AAEA,YAAM,KAAK,iBAAiB;AAC5B,iBAAW,MAAM,MAAM6C,MAAK,KAAK;AAAA,IACnC;AAAA,EACF;AACF;AAGA,IAAM,yBAAyB,CAACpE,WAAU,MAAM;AAC9C,SAAO,mBAAmBA,WAAU,QAAQ,CAAC,CAAC;AAChD;AAGA,IAAM,iBAAiB,CAAC,OAAOqM,QAAO;AACpC,SAAO,KAAK,OAAO,SAAWA,GAAE,CAAC;AACnC;AAGA,IAAM,gBAAgB,WAAS;AAC7B,SAAO,KAAK,OAAO,SAAS,OAAO,iBAAiB,CAAC;AACvD;AAGA,IAAM,cAAc,CAAC,OAAOX,SAAQ;AAClC,SAAO,KAAK,OAAO,SAASA,IAAG,CAAC;AAClC;AAGA,IAAM,eAAe,CAAC,OAAO,MAAM;AACjC,iBAAe,OAAO,KAAK,cAAc,KAAK,GAAGxC,QAAO,OAAK,MAAM,CAAC,CAAC,CAAC;AACxE;AAGA,IAAM,uBAAuB,CAAC,UAAU,OAAO,WAAW;AAExD,MAAI,cAAc;AAClB,SAAO,eAAe,MAAM,OAAO,MAAM,GAAG;AAC1C,UAAM,QAAQ,KAAK,QAAQkc,MAAO,iBAAiB,CAAC;AACpD,QAAI,UAAU,mBAAmB;AAC/B,YAAM,UAAU,MAAM,KAAK,iBAAiB;AAC5C,UAAI,YAAY,mBAAmB;AACjC,+BAAuB,OAAO,OAAO;AACrC,iBAAS,wBAAwB,OAAO,MAAM;AAAA,MAChD,OAAO;AACL,uBAAe,QAAQ,KAAK,cAAc,MAAM,GAAG1a,SAAQ,KAAK,CAAC,CAAC;AAAA,MACpE;AACA,oBAAc;AAAA,IAChB,OAAO;AACL,oBAAc;AAAA,IAChB;AAAA,EACF;AACA,MAAI,eAAe,MAAM,OAAO,MAAM,KAAK,CAAC6D,SAAU,MAAM,GAAG;AAC7D,aAAS,+BAA+B,MAAM;AAAA,EAChD;AACF;;;AC/eA,IAAM,iBAAiB,CAAC,cAAc,YAAY,iBAAe;AAC/D,MAAI,CAAC,YAAY,IAAI,YAAY,GAAG;AAClC,gBAAY,IAAI,cAAc,oBAAI,IAAI,CAAC;AAAA,EACzC;AACA,QAAMI,OAAM,YAAY,IAAI,YAAY;AACxC,EAAAA,KAAI,IAAI,OAAO;AACjB;AACA,IAAM,oBAAoB,CAAC,cAAc,YAAY,iBAAe;AAClE,MAAI,CAAC,YAAY,IAAI,YAAY,GAAG;AAClC;AAAA,EACF;AACA,QAAMA,OAAM,YAAY,IAAI,YAAY;AACxC,EAAAA,KAAI,OAAO,OAAO;AAClB,MAAIA,KAAI,SAAS,GAAG;AAClB,gBAAY,OAAO,YAAY;AAAA,EACjC;AACF;AAGA,IAAM6W,WAAU,uBAAqB,KAAK,KAAK,MAAM,kBAAkB,iBAAiB,CAAC,GAAG/b,SAAQ,kBAAgB,WAAW,cAAc,IAAIghB,sBAAqB,CAAC,CAAC,CAAC;AAwBzK,IAAMC,YAAW,UAAQ,KAAK,SAAS;AAevC,IAAM,YAAY,UAAQ,KAAK,UAAU;AAGzC,IAAM,oBAAoB,uBAAqB;AAC7C,iBAAe,iBAAiB;AAChC,MAAI,sBAAsB,GAAG;AAC3B,WAAO,IAAI,oBAAoB;AAAA,EACjC,WAAW,SAAS,iBAAiB,MAAM,mBAAmB;AAC5D,WAAO,IAAI,kBAAkB,iBAAiB;AAAA,EAChD,OAAO;AACL,WAAO,IAAI,iBAAiB,iBAAiB;AAAA,EAC/C;AACF;AAQA,IAAM,mBAAmB,CAAC,QAAQ,aAAa,aAAatgB,MAAI,aAAa,GAAG,CAAApK,cAAY,uBAAuB,QAAQ,aAAa,OAAO,UAAU,GAAG,UAAY,GAAGA,WAAUkK,MAAK,KAAK,GAAG,QAAQ,CAAC;AAG3M,IAAM,yBAAyB,CAAC,QAAQ,aAAa,cAAc,SAAS,cAAc,cAAc,aAAa;AACnH,SAAO,IAAI,iBAAiB,QAAQ,aAAa,cAAc,SAAS,cAAc,cAAc,QAAQ;AAC9G;AAGA,IAAM,mBAAN,MAAuB;AAAA,EACrB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,mBAAmB;AAAA,EACnB,YAAY,mBAAmB;AAC7B,SAAK,QAAQ,MAAM,KAAK;AAAA,MACtB,QAAQ;AAAA,IACV,CAAC;AACD,SAAK,cAAc,MAAM,KAAK;AAAA,MAC5B,QAAQ;AAAA,IACV,CAAC;AACD,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,UAAU;AACR,WAAO,KAAK,mBAAmB,KAAK;AAAA,EACtC;AAAA,EACA,SAAS;AACP,WAAO,KAAK,mBAAmB,KAAK,mBAAmB,KAAK;AAAA,EAC9D;AAAA,EACA,OAAO;AACL,WAAO,KAAK,iBAAiB,KAAK;AAAA,EACpC;AAAA,EACA,QAAQnL,QAAO;AACb,QAAI,KAAK,OAAO,GAAG;AACjB,aAAO;AAAA,IACT;AACA,QAAI,KAAK,oBAAoB,GAAG;AAC9B,YAAM,QAAQ,KAAK,iBAAiB,KAAK;AACzC,WAAK,MAAM,KAAK,IAAIA;AACpB,WAAK,YAAY,KAAK,IAAI,KAAK;AAC/B,WAAK,kBAAkB;AAAA,IACzB;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW,UAAU;AACnB,UAAMsC,SAAQsI,cAAa,QAAQ;AACnC,UAAM,IAAItI,OAAM;AAChB,UAAMiD,SAAO,KAAK,iBAAiB,KAAK;AACxC,UAAM,YAAY,KAAK,WAAWA;AAClC,UAAM,YAAY,KAAK,IAAI,GAAG,SAAS;AACvC,QAAI,cAAc,GAAG;AACnB,aAAOjD;AAAA,IACT;AACA,QAAI,gBAAgB;AACpB,UAAM,kBAAkB,KAAK,iBAAiB;AAC9C,WAAO,KAAK,mBAAmB,iBAAiB;AAC9C,YAAM,IAAIgK,WAAUhK,QAAO,eAAe;AAC1C,YAAM,QAAQ,KAAK,iBAAiB,KAAK;AACzC,WAAK,MAAM,KAAK,IAAI;AACpB,WAAK,YAAY,KAAK,IAAI,KAAK;AAC/B,WAAK,kBAAkB;AAAA,IACzB;AACA,WAAO,KAAKA,QAAO,aAAa;AAAA,EAClC;AAAA,EACA,QAAQ;AACN,QAAI,KAAK,qBAAqB,KAAK,gBAAgB;AACjD,YAAM,QAAQ,KAAK,mBAAmB,KAAK;AAC3C,WAAK,MAAM,KAAK,IAAI;AACpB,WAAK,YAAY,KAAK,IAAI;AAC1B,WAAK,oBAAoB;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,YAAY;AACV,SAAK,mBAAmB;AACxB,WAAO,IAAI,6BAA6B,MAAM,KAAK,gBAAgB,KAAK;AAAA,EAC1E;AACF;AACA,IAAM,+BAAN,MAAmC;AAAA,EACjC,YAAY,MAAM,iBAAiB,cAAc;AAC/C,SAAK,OAAO;AACZ,SAAK,kBAAkB;AACvB,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,UAAU;AACR,WAAO,KAAK,gBAAgB,KAAK,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,KAAK,mBAAmB,KAAK,KAAK;AAAA,EAC1H;AAAA,EACA,OAAO;AACL,QAAI,KAAK,cAAc;AACrB,aAAO;AAAA,IACT;AACA,WAAO,KAAK,KAAK,iBAAiB,KAAK,IAAI,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAAA,EAC7F;AAAA,EACA,KAAK,UAAU;AACb,QAAI,KAAK,cAAc;AACrB,aAAO;AAAA,IACT;AACA,SAAK,kBAAkB,KAAK,IAAI,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAChF,QAAI,KAAK,oBAAoB,KAAK,KAAK,gBAAgB;AACrD,YAAM,QAAQ,KAAK,kBAAkB,KAAK,KAAK;AAC/C,YAAM,OAAO,KAAK,KAAK,MAAM,KAAK;AAClC,WAAK,KAAK,YAAY,KAAK,KAAK;AAChC,UAAI,KAAK,KAAK,YAAY,KAAK,MAAM,GAAG;AACtC,aAAK,KAAK,MAAM,KAAK,IAAI;AACzB,aAAK,KAAK,oBAAoB;AAAA,MAChC;AACA,WAAK,mBAAmB;AACxB,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,GAAG;AACV,QAAI,KAAK,cAAc;AACrB,aAAOc,OAAM;AAAA,IACf;AACA,SAAK,kBAAkB,KAAK,IAAI,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAChF,UAAMmC,SAAO,KAAK,KAAK,iBAAiB,KAAK;AAC7C,UAAM,SAAS,KAAK,IAAI,GAAGA,MAAI;AAC/B,QAAI,UAAU,GAAG;AACf,aAAOnC,OAAM;AAAA,IACf;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,gBAAgB,KAAK,kBAAkB;AAC7C,WAAO,KAAK,oBAAoB,eAAe;AAC7C,YAAM,QAAQ,KAAK,kBAAkB,KAAK,KAAK;AAC/C,YAAM,IAAI,KAAK,KAAK,MAAM,KAAK;AAC/B,WAAK,KAAK,YAAY,KAAK,KAAK;AAChC,UAAI,KAAK,KAAK,YAAY,KAAK,MAAM,GAAG;AACtC,aAAK,KAAK,MAAM,KAAK,IAAI;AACzB,aAAK,KAAK,oBAAoB;AAAA,MAChC;AACA,cAAQ,KAAK,CAAC;AACd,WAAK,mBAAmB;AAAA,IAC1B;AACA,WAAOwH,cAAa,OAAO;AAAA,EAC7B;AAAA,EACA,cAAc;AACZ,QAAI,CAAC,KAAK,cAAc;AACtB,WAAK,eAAe;AACpB,WAAK,KAAK,mBAAmB;AAC7B,WAAK,kBAAkB,KAAK,IAAI,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAChF,aAAO,KAAK,oBAAoB,KAAK,KAAK,gBAAgB;AACxD,cAAM,QAAQ,KAAK,kBAAkB,KAAK,KAAK;AAC/C,aAAK,KAAK,YAAY,KAAK,KAAK;AAChC,YAAI,KAAK,KAAK,YAAY,KAAK,MAAM,GAAG;AACtC,eAAK,KAAK,MAAM,KAAK,IAAI;AACzB,eAAK,KAAK,oBAAoB;AAAA,QAChC;AACA,aAAK,mBAAmB;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AACF;AAGA,IAAM,oBAAN,MAAwB;AAAA,EACtB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,mBAAmB;AAAA,EACnB,YAAY,mBAAmB;AAC7B,SAAK,QAAQ,MAAM,KAAK;AAAA,MACtB,QAAQ;AAAA,IACV,CAAC;AACD,SAAK,OAAO,oBAAoB;AAChC,SAAK,cAAc,MAAM,KAAK;AAAA,MAC5B,QAAQ;AAAA,IACV,CAAC;AACD,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,UAAU;AACR,WAAO,KAAK,mBAAmB,KAAK;AAAA,EACtC;AAAA,EACA,SAAS;AACP,WAAO,KAAK,mBAAmB,KAAK,mBAAmB,KAAK;AAAA,EAC9D;AAAA,EACA,OAAO;AACL,WAAO,KAAK,iBAAiB,KAAK;AAAA,EACpC;AAAA,EACA,QAAQ5K,QAAO;AACb,QAAI,KAAK,OAAO,GAAG;AACjB,aAAO;AAAA,IACT;AACA,QAAI,KAAK,oBAAoB,GAAG;AAC9B,YAAM,QAAQ,KAAK,iBAAiB,KAAK;AACzC,WAAK,MAAM,KAAK,IAAIA;AACpB,WAAK,YAAY,KAAK,IAAI,KAAK;AAC/B,WAAK,kBAAkB;AAAA,IACzB;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW,UAAU;AACnB,UAAMsC,SAAQsI,cAAa,QAAQ;AACnC,UAAM,IAAItI,OAAM;AAChB,UAAMiD,SAAO,KAAK,iBAAiB,KAAK;AACxC,UAAM,YAAY,KAAK,WAAWA;AAClC,UAAM,YAAY,KAAK,IAAI,GAAG,SAAS;AACvC,QAAI,cAAc,GAAG;AACnB,aAAOjD;AAAA,IACT;AACA,QAAI,gBAAgB;AACpB,UAAM,kBAAkB,KAAK,iBAAiB;AAC9C,WAAO,KAAK,mBAAmB,iBAAiB;AAC9C,YAAM,OAAOgK,WAAUhK,QAAO,eAAe;AAC7C,YAAM,QAAQ,KAAK,iBAAiB,KAAK;AACzC,WAAK,MAAM,KAAK,IAAI;AACpB,WAAK,YAAY,KAAK,IAAI,KAAK;AAC/B,WAAK,kBAAkB;AAAA,IACzB;AACA,WAAO,KAAKA,QAAO,aAAa;AAAA,EAClC;AAAA,EACA,QAAQ;AACN,QAAI,KAAK,qBAAqB,KAAK,gBAAgB;AACjD,YAAM,QAAQ,KAAK,mBAAmB,KAAK;AAC3C,WAAK,MAAM,KAAK,IAAI;AACpB,WAAK,YAAY,KAAK,IAAI;AAC1B,WAAK,oBAAoB;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,YAAY;AACV,SAAK,mBAAmB;AACxB,WAAO,IAAI,8BAA8B,MAAM,KAAK,gBAAgB,KAAK;AAAA,EAC3E;AACF;AAGA,IAAM,gCAAN,MAAoC;AAAA,EAClC,YAAY,MAAM,iBAAiB,cAAc;AAC/C,SAAK,OAAO;AACZ,SAAK,kBAAkB;AACvB,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,UAAU;AACR,WAAO,KAAK,gBAAgB,KAAK,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,KAAK,mBAAmB,KAAK,KAAK;AAAA,EAC1H;AAAA,EACA,OAAO;AACL,QAAI,KAAK,cAAc;AACrB,aAAO;AAAA,IACT;AACA,WAAO,KAAK,KAAK,iBAAiB,KAAK,IAAI,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAAA,EAC7F;AAAA,EACA,KAAK,UAAU;AACb,QAAI,KAAK,cAAc;AACrB,aAAO;AAAA,IACT;AACA,SAAK,kBAAkB,KAAK,IAAI,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAChF,QAAI,KAAK,oBAAoB,KAAK,KAAK,gBAAgB;AACrD,YAAM,QAAQ,KAAK,kBAAkB,KAAK,KAAK;AAC/C,YAAM,OAAO,KAAK,KAAK,MAAM,KAAK;AAClC,WAAK,KAAK,YAAY,KAAK,KAAK;AAChC,UAAI,KAAK,KAAK,YAAY,KAAK,MAAM,GAAG;AACtC,aAAK,KAAK,MAAM,KAAK,IAAI;AACzB,aAAK,KAAK,oBAAoB;AAAA,MAChC;AACA,WAAK,mBAAmB;AACxB,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EACA,SAAS,GAAG;AACV,QAAI,KAAK,cAAc;AACrB,aAAOc,OAAM;AAAA,IACf;AACA,SAAK,kBAAkB,KAAK,IAAI,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAChF,UAAMmC,SAAO,KAAK,KAAK,iBAAiB,KAAK;AAC7C,UAAM,SAAS,KAAK,IAAI,GAAGA,MAAI;AAC/B,QAAI,UAAU,GAAG;AACf,aAAOnC,OAAM;AAAA,IACf;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,gBAAgB,KAAK,kBAAkB;AAC7C,WAAO,KAAK,oBAAoB,eAAe;AAC7C,YAAM,QAAQ,KAAK,kBAAkB,KAAK,KAAK;AAC/C,YAAM,OAAO,KAAK,KAAK,MAAM,KAAK;AAClC,WAAK,KAAK,YAAY,KAAK,KAAK;AAChC,UAAI,KAAK,KAAK,YAAY,KAAK,MAAM,GAAG;AACtC,aAAK,KAAK,MAAM,KAAK,IAAI;AACzB,aAAK,KAAK,oBAAoB;AAAA,MAChC;AACA,cAAQ,KAAK,IAAI;AACjB,WAAK,mBAAmB;AAAA,IAC1B;AACA,WAAOwH,cAAa,OAAO;AAAA,EAC7B;AAAA,EACA,cAAc;AACZ,QAAI,CAAC,KAAK,cAAc;AACtB,WAAK,eAAe;AACpB,WAAK,KAAK,mBAAmB;AAC7B,WAAK,kBAAkB,KAAK,IAAI,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAChF,aAAO,KAAK,oBAAoB,KAAK,KAAK,gBAAgB;AACxD,cAAM,QAAQ,KAAK,kBAAkB,KAAK,KAAK;AAC/C,aAAK,KAAK,YAAY,KAAK,KAAK;AAChC,YAAI,KAAK,KAAK,YAAY,KAAK,MAAM,GAAG;AACtC,eAAK,KAAK,MAAM,KAAK,IAAI;AACzB,eAAK,KAAK,oBAAoB;AAAA,QAChC;AACA,aAAK,mBAAmB;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AACF;AAGA,IAAM,sBAAN,MAA0B;AAAA,EACxB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,UAAU;AACR,WAAO,KAAK,gBAAgB;AAAA,EAC9B;AAAA,EACA,SAAS;AACP,WAAO,CAAC,KAAK,QAAQ;AAAA,EACvB;AAAA,EACA,OAAO;AACL,WAAO,KAAK,QAAQ,IAAI,IAAI;AAAA,EAC9B;AAAA,EACA,QAAQ5K,QAAO;AACb,QAAI,KAAK,OAAO,GAAG;AACjB,aAAO;AAAA,IACT;AACA,QAAI,KAAK,oBAAoB,GAAG;AAC9B,WAAK,QAAQA;AACb,WAAK,cAAc,KAAK;AACxB,WAAK,kBAAkB;AAAA,IACzB;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW,UAAU;AACnB,UAAMsC,SAAQsI,cAAa,QAAQ;AACnC,QAAI,QAAUtI,MAAK,GAAG;AACpB,aAAOA;AAAA,IACT;AACA,QAAI,KAAK,QAAQ,WAAWA,MAAK,CAAC,GAAG;AACnC,aAAO,KAAKA,QAAO,CAAC;AAAA,IACtB,OAAO;AACL,aAAOA;AAAA,IACT;AAAA,EACF;AAAA,EACA,QAAQ;AACN,QAAI,KAAK,OAAO,GAAG;AACjB,WAAK,cAAc;AACnB,WAAK,QAAQ;AAAA,IACf;AAAA,EACF;AAAA,EACA,YAAY;AACV,SAAK,mBAAmB;AACxB,WAAO,IAAI,gCAAgC,MAAM,KAAK,gBAAgB,KAAK;AAAA,EAC7E;AACF;AAGA,IAAM,kCAAN,MAAsC;AAAA,EACpC,YAAY,MAAM,iBAAiB,cAAc;AAC/C,SAAK,OAAO;AACZ,SAAK,kBAAkB;AACvB,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,UAAU;AACR,WAAO,KAAK,gBAAgB,KAAK,KAAK,gBAAgB,KAAK,KAAK,oBAAoB,KAAK,KAAK;AAAA,EAChG;AAAA,EACA,OAAO;AACL,WAAO,KAAK,QAAQ,IAAI,IAAI;AAAA,EAC9B;AAAA,EACA,KAAK,UAAU;AACb,QAAI,KAAK,QAAQ,GAAG;AAClB,aAAO;AAAA,IACT;AACA,UAAM,OAAO,KAAK,KAAK;AACvB,SAAK,KAAK,eAAe;AACzB,QAAI,KAAK,KAAK,gBAAgB,GAAG;AAC/B,WAAK,KAAK,QAAQ;AAAA,IACpB;AACA,SAAK,mBAAmB;AACxB,WAAO;AAAA,EACT;AAAA,EACA,SAAS,GAAG;AACV,QAAI,KAAK,QAAQ,KAAK,IAAI,GAAG;AAC3B,aAAOc,OAAM;AAAA,IACf;AACA,UAAM,IAAI,KAAK,KAAK;AACpB,SAAK,KAAK,eAAe;AACzB,QAAI,KAAK,KAAK,gBAAgB,GAAG;AAC/B,WAAK,KAAK,QAAQ;AAAA,IACpB;AACA,SAAK,mBAAmB;AACxB,WAAOoI,IAAG,CAAC;AAAA,EACb;AAAA,EACA,cAAc;AACZ,QAAI,CAAC,KAAK,cAAc;AACtB,WAAK,eAAe;AACpB,WAAK,KAAK,mBAAmB;AAC7B,UAAI,KAAK,oBAAoB,KAAK,KAAK,gBAAgB;AACrD,aAAK,KAAK,eAAe;AACzB,YAAI,KAAK,KAAK,gBAAgB,GAAG;AAC/B,eAAK,KAAK,QAAQ;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AA0JA,IAAM,mBAAN,MAAuB;AAAA,EACrB,CAAC,aAAa,IAAI;AAAA,EAClB,YAAY,QAAQ,aAAa,cAAc,SAAS,cAAc,cAAc,UAAU;AAC5F,SAAK,SAAS;AACd,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,WAAW;AACT,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,WAAW;AACT,WAAO,CAACX,KAAI,KAAK,YAAY;AAAA,EAC/B;AAAA,EACA,OAAO;AACL,WAAO,QAAQ,MAAMA,KAAI,KAAK,YAAY,IAAIiI,aAAY,QAAQ,KAAK,aAAa,KAAK,CAAC,CAAC;AAAA,EAC7F;AAAA,EACA,aAAa;AACX,QAAIjI,KAAI,KAAK,YAAY,GAAG;AAC1B,aAAOuC,MAAK;AAAA,IACd;AACA,WAAOnB,MAAK,KAAK,aAAa,KAAK,CAAC;AAAA,EACtC;AAAA,EACA,SAAS;AACP,WAAOZ,MAAI,KAAK,KAAK,GAAG,CAAA9F,WAAQA,WAAS,KAAK,SAAS,CAAC;AAAA,EAC1D;AAAA,EACA,UAAU;AACR,WAAO8F,MAAI,KAAK,KAAK,GAAG,CAAA9F,WAAQA,WAAS,CAAC;AAAA,EAC5C;AAAA,EACA,WAAW;AACT,WAAO,gBAAgB,iBAAiB,WAAS;AAC/C,MAAAqK,KAAI,KAAK,cAAc,IAAI;AAC3B,aAAO,KAAK,oBAAoB,mBAAmB,KAAK,OAAO,GAAG,OAAK,sBAAsB,GAAG,MAAM,GAAG,CAAC,GAAG,KAAK,GAAGsD,UAAS,KAAK,MAAM;AACvI,aAAK,YAAY,OAAO,KAAK,YAAY;AACzC,aAAK,aAAa,YAAY;AAC9B,aAAK,SAAS,yBAAyB,KAAK,QAAQ,KAAK,WAAW;AAAA,MACtE,CAAC,CAAC,GAAG,WAAW,gBAAgB,KAAK,cAAc,MAAM,CAAC,GAAGR,OAAM;AAAA,IACrE,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,aAAa;AACX,WAAO,KAAK,MAAM7H,KAAI,KAAK,YAAY,CAAC;AAAA,EAC1C;AAAA,EACA,gBAAgB;AACd,WAAO,cAAc,KAAK,YAAY;AAAA,EACxC;AAAA,EACA,OAAO;AACL,WAAO,iBAAiB,WAAS;AAC/B,UAAIA,KAAI,KAAK,YAAY,GAAG;AAC1B,eAAOiI;AAAA,MACT;AACA,YAAM,UAAUtD,SAAU,KAAK,OAAO,IAAI,KAAK,aAAa,KAAK,iBAAiB,IAAI;AACtF,UAAI,YAAY,mBAAmB;AACjC,cAAMvO,YAAW,mBAAmB,MAAM,GAAG,CAAC;AAC9C,eAAO,KAAK,QAAQ,MAAM;AACxB,eAAK,KAAK,SAAS,MAAMA,SAAQ,CAAC;AAClC,eAAK,KAAK,aAAa,eAAe,KAAK,cAAc,KAAK,OAAO,CAAC;AACtE,eAAK,SAAS,sBAAsB,KAAK,QAAQ,KAAK,aAAa,KAAK,cAAc,KAAK,OAAO;AAClG,iBAAO4J,KAAI,KAAK,YAAY,IAAIiI,aAAY,cAAc7R,SAAQ;AAAA,QACpE,CAAC,GAAG,YAAY,MAAM,KAAK,MAAM2qB,cAAa,KAAK,SAAS3qB,SAAQ,CAAC,CAAC,CAAC;AAAA,MACzE,OAAO;AACL,aAAK,SAAS,yBAAyB,KAAK,QAAQ,KAAK,WAAW;AACpE,eAAO,QAAQ,OAAO;AAAA,MACxB;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,WAAO,QAAQ,MAAM;AACnB,UAAI4J,KAAI,KAAK,YAAY,GAAG;AAC1B,eAAOiI;AAAA,MACT;AACA,YAAMxF,MAAKkC,SAAU,KAAK,OAAO,IAAI,0BAA0B,KAAK,YAAY,IAAIpM,OAAM;AAC1F,WAAK,SAAS,yBAAyB,KAAK,QAAQ,KAAK,WAAW;AACpE,aAAO,QAAQkK,GAAE;AAAA,IACnB,CAAC;AAAA,EACH;AAAA,EACA,SAASX,MAAK;AACZ,WAAO,QAAQ,MAAM;AACnB,UAAI9B,KAAI,KAAK,YAAY,GAAG;AAC1B,eAAOiI;AAAA,MACT;AACA,YAAMxF,MAAKkC,SAAU,KAAK,OAAO,IAAIqc,aAAY,KAAK,cAAclf,IAAG,IAAIvJ,OAAM;AACjF,WAAK,SAAS,yBAAyB,KAAK,QAAQ,KAAK,WAAW;AACpE,aAAO,QAAQkK,GAAE;AAAA,IACnB,CAAC;AAAA,EACH;AAAA,EACA,YAAY1J,MAAK+I,MAAK;AACpB,WAAO,QAAQ,MAAMmf,mBAAkB,MAAMloB,MAAK+I,MAAKvJ,OAAM,CAAC,CAAC;AAAA,EACjE;AACF;AAGA,IAAM0oB,qBAAoB,CAAC,MAAMloB,MAAK+I,MAAK,QAAQ;AACjD,MAAIA,OAAM/I,MAAK;AACb,WAAO,QAAQ,GAAG;AAAA,EACpB;AACA,SAAO,KAAK,KAAK,SAAS+I,IAAG,GAAGjC,SAAQ,QAAM;AAC5C,UAAM,YAAY9G,OAAM,GAAG;AAC3B,QAAI,cAAc,GAAG;AACnB,aAAO,KAAK,KAAK,KAAK,GAAGyH,MAAI,OAAK,KAAK,KAAKzB,WAAU,EAAE,GAAGD,QAAO,CAAC,CAAC,CAAC,CAAC;AAAA,IACxE;AACA,QAAI,YAAY,GAAG;AACjB,aAAO,KAAK,KAAK,KAAK,GAAGe,SAAQ,OAAKohB,mBAAkB,MAAM,YAAY,GAAGnf,OAAM,GAAG,SAAS,GAAG,KAAK,KAAK/C,WAAU,EAAE,GAAGD,QAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IACzI;AACA,WAAO,QAAQ,KAAK,KAAKC,WAAU,EAAE,CAAC,CAAC;AAAA,EACzC,CAAC,CAAC;AACJ;AAGA,IAAM,aAAN,MAAiB;AAAA,EACf,CAAC,aAAa,IAAI;AAAA,EAClB,YAAY,QAAQ,aAAajD,QAAO,cAAc,cAAc,UAAU;AAC5E,SAAK,SAAS;AACd,SAAK,cAAc;AACnB,SAAK,QAAQA;AACb,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,WAAW;AACT,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,QAAQ,MAAMkE,KAAI,KAAK,YAAY,IAAIiI,aAAY,KAAK,MAAM,KAAK,OAAO,KAAK,CAAC,CAAC;AAAA,EAC1F;AAAA,EACA,aAAa;AACX,QAAIjI,KAAI,KAAK,YAAY,GAAG;AAC1B,aAAOuC,MAAK;AAAA,IACd;AACA,WAAOnB,MAAK,KAAK,OAAO,KAAK,CAAC;AAAA,EAChC;AAAA,EACA,SAAS;AACP,WAAOZ,MAAI,KAAK,KAAK,GAAG,CAAA9F,WAAQA,WAAS,KAAK,SAAS,CAAC;AAAA,EAC1D;AAAA,EACA,UAAU;AACR,WAAO8F,MAAI,KAAK,KAAK,GAAG,CAAA9F,WAAQA,WAAS,CAAC;AAAA,EAC5C;AAAA,EACA,gBAAgB;AACd,WAAO,cAAc,KAAK,YAAY;AAAA,EACxC;AAAA,EACA,aAAa;AACX,WAAO,KAAK,MAAMsF,KAAI,KAAK,YAAY,CAAC;AAAA,EAC1C;AAAA,EACA,WAAW;AACT,WAAO,gBAAgB,iBAAiB,WAAS;AAC/C,WAAK,KAAK,cAAc+E,KAAI,IAAI,CAAC;AACjC,aAAO,KAAK,KAAK,MAAM,MAAM,cAAc,MAAM,GAAG,CAAC,CAAC,GAAGsD,UAAS,KAAK,SAAS,SAAS,CAAC,GAAG,WAAW,gBAAgB,KAAK,cAAc,MAAM,CAAC,GAAGR,OAAM;AAAA,IAC7J,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,QAAQ1S,QAAO;AACb,WAAO,QAAQ,MAAM;AACnB,UAAI6K,KAAI,KAAK,YAAY,GAAG;AAC1B,eAAOiI;AAAA,MACT;AACA,UAAI,KAAK,OAAO,QAAQ9S,MAAK,GAAG;AAC9B,aAAK,SAAS,0BAA0B,KAAK,QAAQ,KAAK,WAAW;AACrE,eAAO,QAAQ,IAAI;AAAA,MACrB;AACA,aAAO,KAAK,SAAS,cAAc,KAAK,QAAQ,KAAK,aAAawL,IAAGxL,MAAK,GAAG,KAAK,YAAY;AAAA,IAChG,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AACT,WAAO,CAAC6K,KAAI,KAAK,YAAY;AAAA,EAC/B;AAAA,EACA,YAAY7K,QAAO;AACjB,QAAI6K,KAAI,KAAK,YAAY,GAAG;AAC1B,aAAO;AAAA,IACT;AACA,QAAI,KAAK,OAAO,QAAQ7K,MAAK,GAAG;AAC9B,WAAK,SAAS,0BAA0B,KAAK,QAAQ,KAAK,WAAW;AACrE,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW,UAAU;AACnB,WAAO,QAAQ,MAAM;AACnB,UAAI6K,KAAI,KAAK,YAAY,GAAG;AAC1B,eAAOiI;AAAA,MACT;AACA,YAAM,UAAU,iBAAiB,KAAK,QAAQ,QAAQ;AACtD,WAAK,SAAS,0BAA0B,KAAK,QAAQ,KAAK,WAAW;AACrE,UAAI,QAAU,OAAO,GAAG;AACtB,eAAO,QAAQ,IAAI;AAAA,MACrB;AACA,aAAO,KAAK,SAAS,cAAc,KAAK,QAAQ,KAAK,aAAa,SAAS,KAAK,YAAY;AAAA,IAC9F,CAAC;AAAA,EACH;AAAA,EACA,YAAY;AACV,UAAM,UAAUK,KAAIrG,KAAI,CAAC,KAAK,MAAM,KAAK2D,WAAU,GAAG,iBAAiB,KAAK,QAAQ,KAAK,aAAa,KAAK,QAAQ,CAAC,CAAC,GAAG,CAAAyT,WAASA,OAAM,CAAC,EAAE,aAAa,MAAMA,OAAM,CAAC,EAAE,SAAS,CAAC,CAAC;AACjL,WAAO7Y,MAAI,eAAe,SAAS,CAAC6Y,QAAO9R,UAAS8R,OAAM,CAAC,EAAE,MAAM9R,KAAI,CAAC,GAAG,CAAA8R,WAASA,OAAM,CAAC,CAAC;AAAA,EAC9F;AAAA,EACA,MAAMlkB,QAAO;AACX,WAAO,KAAK,QAAQA,MAAK;AAAA,EAC3B;AAAA,EACA,SAAS,UAAU;AACjB,WAAO,KAAK,WAAW,QAAQ;AAAA,EACjC;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,aAAa,CAAC,QAAQ,aAAa0K,SAAQ,UAAU,GAAG,CAAA/D,WAAS0E,MAAI,aAAa,GAAG,CAAApK,cAAY,iBAAiB,QAAQ,oBAAI,IAAI,GAAG0F,QAAO1F,WAAUkK,MAAK,KAAK,GAAG,QAAQ,CAAC,CAAC;AAGnL,IAAM,mBAAmB,CAAC,QAAQ,aAAaxE,QAAO,cAAc,cAAc,aAAa;AAC7F,SAAO,IAAI,WAAW,QAAQ,aAAaA,QAAO,cAAc,cAAc,QAAQ;AACxF;AAGA,IAAM,WAAW,OAAK;AACpB,QAAM,UAAU,KAAK,KAAK,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAG,CAAC;AACrD,SAAO,KAAK,IAAI,KAAK,IAAI,GAAG,OAAO,GAAG,CAAC;AACzC;AAGA,IAAM,iBAAiB,CAAA2iB,cAAY;AACjC,MAAIA,aAAY,GAAG;AACjB,UAAM,+BAA+B,4CAA4CA,SAAQ,EAAE;AAAA,EAC7F;AACF;AAGA,IAAMyC,0BAAyB,CAAC9qB,WAAU,MAAM;AAC9C,qBAAmBA,WAAU,QAAQ,CAAC,CAAC;AACzC;AAGA,IAAM+qB,kBAAiB,CAAC,OAAO1e,QAAO;AACpC,SAAO,KAAK,OAAO,SAASA,GAAE,CAAC;AACjC;AAGA,IAAM,qBAAqB,WAAS;AAClC,SAAO,KAAK,OAAO,SAAS,OAAO,iBAAiB,CAAC;AACvD;AAGA,IAAM,4BAA4B,kBAAgB;AAChD,SAAO,aAAa,SAAS,OAAO,iBAAiB;AACvD;AAGA,IAAMue,eAAc,CAAC,cAAclf,SAAQ;AACzC,SAAO,aAAa,SAASA,IAAG;AAClC;AAGA,IAAM,mBAAmB,CAAC,QAAQW,QAAO;AACvC,SAAO,OAAO,WAAWA,GAAE;AAC7B;AAGA,IAAMse,gBAAe,CAAC,OAAO5rB,WAAU;AACrC,EAAAgsB,gBAAe,OAAO,KAAK,mBAAmB,KAAK,GAAG7hB,QAAO,UAAQ,SAASnK,MAAK,CAAC,CAAC;AACvF;AAqBA,IAAM0rB,wBAAN,MAA2B;AAAA,EACzB,aAAa,UAAY;AAAA,EACzB,WAAW;AACT,WAAOhhB,SAAQ,SAAS,CAAA4F,aAAW5F,SAAQ,KAAK,MAAM,mBAAmB,KAAK,UAAU,CAAC,GAAG,gBAAc,2BAA2B,YAAY,CAAC,CAAC,GAAGzJ,WAAUiK,KAAI,MAAMA,QAAO,KAAK,sBAAsBjK,WAAUqP,QAAO,GAAGoC,OAAM,IAAIC,OAAM,KAAK,CAAC,CAAC;AAAA,EACzP;AAAA,EACA,cAAc,QAAQ,aAAa,UAAU8Y,aAAY;AACvD,WAAO,iBAAiB,WAAS;AAC/B,YAAMxqB,YAAW,mBAAmB,MAAM,GAAG,CAAC;AAC9C,aAAO,KAAK,QAAQ,MAAM;AACxB,aAAK,YAAY,UAAUA,SAAQ;AACnC,aAAK,yBAAyB,QAAQ,WAAW;AACjD,aAAK,0BAA0B,QAAQ,WAAW;AAClD,eAAO4J,KAAI4gB,WAAU,IAAI3Y,aAAY,cAAc7R,SAAQ;AAAA,MAC7D,CAAC,GAAG,YAAY,MAAM,KAAK,MAAM,KAAK,aAAaA,SAAQ,CAAC,CAAC,CAAC;AAAA,IAChE,CAAC;AAAA,EACH;AAAA,EACA,yBAAyB,QAAQ,aAAa;AAC5C,QAAI,cAAc;AAClB,WAAO,eAAe,CAAC,OAAO,OAAO,GAAG;AACtC,YAAM,YAAY,KAAK,KAAK,YAAYolB,MAAK,iBAAiB,CAAC;AAC/D,UAAI,cAAc,mBAAmB;AACnC,sBAAc;AAAA,MAChB,OAAO;AACL,cAAM,YAAY,OAAO,QAAQ,UAAU,CAAC,CAAC;AAC7C,YAAI,aAAa,UAAU,CAAC,GAAG;AAC7B,UAAA0F,wBAAuB,UAAU,CAAC,GAAG,IAAI;AAAA,QAC3C,WAAW,CAAC,WAAW;AACrB,UAAAC,gBAAe,KAAK,YAAY,KAAK,mBAAmB,KAAK,UAAU,GAAGrgB,SAAQ,SAAS,CAAC,CAAC;AAAA,QAC/F;AACA,aAAK,0BAA0B,QAAQ,WAAW;AAAA,MACpD;AAAA,IACF;AAAA,EACF;AAAA,EACA,sBAAsB,QAAQ,aAAa,cAAc,SAAS;AAChE,WAAO,8BAA8B,MAAM,QAAQ,aAAa,cAAc,OAAO;AAAA,EACvF;AAAA,EACA,0BAA0B,QAAQ,aAAa;AAC7C,WAAO,kCAAkC,MAAM,QAAQ,WAAW;AAAA,EACpE;AAAA,EACA,YAAY,UAAU1K,WAAU;AAC9B,UAAMuB,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAI6C,QAAO7C,UAAS,KAAK;AACzB,QAAI,CAAC6C,MAAK,MAAM;AAEd,aAAO,GAAG;AACR,cAAMrF,SAAQqF,MAAK;AACnB,QAAAA,QAAO7C,UAAS,KAAK;AACrB,YAAI6C,MAAK,MAAM;AACb,eAAK,KAAK,YAAY,MAAM,CAACrF,QAAOiB,WAAU,IAAI,CAAC,CAAC;AACpD;AAAA,QACF;AACA,aAAK,KAAK,YAAY,MAAM,CAACjB,QAAOiB,WAAU,KAAK,CAAC,CAAC;AAAA,MACvD;AAAA,IACF;AAAA,EACF;AAAA,EACA,aAAaA,WAAU;AACrB,IAAA+qB,gBAAe,KAAK,YAAY,KAAK,mBAAmB,KAAK,UAAU,GAAG7hB,QAAO,CAAC,CAAC,GAAG,CAAC,MAAM,MAAMlJ,SAAQ,CAAC,CAAC;AAAA,EAC/G;AACF;AA+EA,IAAM,gCAAgC,CAAC,UAAU,QAAQ,aAAa,cAAc,YAAY;AAC9F,MAAI,cAAc;AAClB,SAAO,eAAe,CAAC,aAAa,QAAQ,GAAG;AAC7C,UAAM,SAAS,KAAK,SAASolB,MAAK,iBAAiB,CAAC;AACpD,QAAI,WAAW,mBAAmB;AAChC,WAAK,aAAa,kBAAkB,cAAc,OAAO,CAAC;AAC1D,UAAI7W,SAAU,OAAO,GAAG;AACtB,sBAAc;AAAA,MAChB,OAAO;AACL,aAAK,aAAa,eAAe,cAAc,OAAO,CAAC;AAAA,MACzD;AAAA,IACF,OAAO;AACL,YAAM,aAAa,aAAa,KAAK,iBAAiB;AACtD,UAAI,eAAe,mBAAmB;AACpC,QAAAwc,gBAAe,SAAS,KAAK,mBAAmB,OAAO,GAAGrgB,SAAQ,MAAM,CAAC,CAAC;AAAA,MAC5E,OAAO;AACL,QAAAogB,wBAAuB,QAAQ,UAAU;AACzC,iBAAS,yBAAyB,QAAQ,WAAW;AAAA,MACvD;AAAA,IACF;AAAA,EACF;AACF;AAGA,IAAM,oCAAoC,CAAC,UAAU,QAAQ,gBAAgB;AAC3E,aAAW,CAAC,cAAc,UAAU,KAAK,aAAa;AACpD,eAAW,WAAW,YAAY;AAChC,eAAS,sBAAsB,QAAQ,aAAa,cAAc,OAAO;AAAA,IAC3E;AAAA,EACF;AACF;;;ACljCA,IAAMtF,WAAUA;AA0EhB,IAAMkF,YAAWA;AA8CjB,IAAMM,aAAY;;;AC7HlB,IAAMC,iBAAgB;AAkHtB,IAAMzF,WAAUA;AAehB,IAAMlB,YAAW;AAejB,IAAM4G,WAAU;AAQhB,IAAM3F,aAAYA;AAQlB,IAAM8C,YAAWA;AAUjB,IAAM/jB,SAAOA;AAQb,IAAMiK,YAAUA;AAShB,IAAM4c,UAAS;AAQf,IAAMX,cAAa;AAUnB,IAAMY,iBAAgB;AAStB,IAAMV,YAAW;AAQjB,IAAMJ,SAAQA;AA4Bd,IAAMC,YAAWA;AASjB,IAAMnF,QAAOA;AASb,IAAMiF,QAAOA;AASb,IAAMgB,WAAU;AAQhB,IAAMC,YAAW;AAUjB,IAAMC,eAAc;AAUpB,IAAMC,SAAQ;;;ACpUd,IAAMC,eAAc;AAKpB,IAAM,WAAW;AAKjB,IAAMC,YAAW;;;ACNjB,IAAM,iCAAiC;AAGvC,IAAM,8BAA2C,uBAAO,IAAI,8BAA8B;AAG1F,IAAM9b,SAAQ;AAAA,EACZ,CAAC,2BAA2B,GAAG;AACjC;AAGA,IAAM,WAAW,OAAK;AACpB,QAAM,KAAK,OAAO,OAAOA,MAAK;AAC9B,KAAG,OAAO6b;AACV,SAAO;AACT;;;ACnBA,IAAM,oBAAoB;AAK1B,IAAM,4BAA4B;;;ACFlC,IAAM,qBAAkC,uBAAO,IAAI,4BAA4B;AAmB/E,IAAM,uBAAuB;AAAA,EAC3B,MAAM,OAAK;AAAA,EACX,QAAQ,OAAK;AAAA,EACb,SAAS,OAAK;AAAA,EACd,SAAS,OAAK;AAAA,EACd,SAAS,OAAK;AAAA,EACd,UAAU,OAAK;AAAA,EACf,UAAU,OAAK;AAAA,EACf,UAAU,OAAK;AAAA,EACf,WAAW,OAAK;AAClB;AAGA,IAAM,oBAAN,MAAwB;AAAA,EACtB,OAAO;AAAA,EACP,CAAC,kBAAkB,IAAI;AAAA,EACvB,YAAY,WAAW,QAAQ;AAC7B,SAAK,YAAY;AACjB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,OAAOta,OAAM;AACX,WAAOjL,WAAUiL,KAAI,IAAI,KAAK,OAAOA,MAAK,KAAK,IAAI,KAAK,UAAUA,MAAK,KAAK;AAAA,EAC9E;AACF;AAGA,IAAM,4BAAN,MAAgC;AAAA,EAC9B,OAAO;AAAA,EACP,CAAC,kBAAkB,IAAI;AAAA,EACvB,YAAYzM,YAAW;AACrB,SAAK,YAAYA;AAAA,EACnB;AACF;;;ACtDA,IAAM,qBAAqB;AAK3B,IAAM,6BAA6B;;;ACDnC,IAAM,gCAAgC;AAGtC,IAAM,6BAA0C,uBAAO,IAAI,6BAA6B;AAGxF,IAAM,+BAA+B;AAAA,EACnC,IAAI,OAAK;AACX;AAGA,IAAMkL,SAAQ;AAAA,EACZ,CAAC,0BAA0B,GAAG;AAChC;AAGA,IAAM,gBAAgB,mBAAiB;AACrC,QAAM,KAAK,OAAO,OAAOA,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,gBAAgB;AACnB,SAAO;AACT;;;ACzBA,IAAM,iBAAiB;AAKvB,IAAM,YAAY;AAKlB,IAAM,gBAAgB;AAKtB,IAAM,UAAU;AAKhB,IAAM,cAAc;AAKpB,IAAM+S,WAAU;AAKhB,IAAMgJ,WAAU;AAKhB,IAAMC,kBAAiB;AAKvB,IAAM,aAAa;AAKnB,IAAM,aAAa;AAKnB,IAAM,UAAU;AAKhB,IAAM,aAAa;AAKnB,IAAM,iBAAiB;AAKvB,IAAMC,cAAa;;;ACpDnB,IAAM,mBAAmB;AAGzB,IAAMC,iBAA6B,uBAAO,IAAI,gBAAgB;AAG9D,IAAMC,mBAAkB;AAAA,EACtB,MAAM,OAAK;AAAA,EACX,QAAQ,OAAK;AAAA,EACb,SAAS,OAAK;AAAA,EACd,SAAS,OAAK;AAAA,EACd,SAAS,OAAK;AAAA,EACd,UAAU,OAAK;AAAA,EACf,UAAU,OAAK;AACjB;AAGA,IAAMnc,SAAQ;AAAA,EACZ,CAACkc,cAAa,GAAGC;AAAA,EACjB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAmCA,IAAM,YAAY,OAAK,YAAY,GAAGD,cAAa,KAAK7T,UAAS,CAAC;AAGlE,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,YAAY;AAChE,QAAM,KAAK,OAAO,OAAOrI,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,UAAU,MAAM;AACnB,KAAG,YAAY;AACf,SAAO;AACT,CAAC;AAGD,IAAM4E,iBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACtD,QAAM,KAAK,OAAO,OAAO5E,MAAK;AAC9B,KAAG,OAAO+b;AACV,KAAG,UAAU;AACb,KAAG,IAAI,IAAI,kBAAkB5Y,UAAS,CAAC;AACvC,SAAO;AACT,CAAC;AAGD,IAAM,kBAAkB,UAAQ;AAC9B,SAAO6J,SAAQ,MAAM;AACnB,UAAM,UAAU,CAAC;AACjB,WAAOnT,UAAQ,OAAO,MAAM,sBAAsB,OAAO,CAAC,GAAG,CAAA1K,WAASgF,MAAK,MAAM,CAAC4F,cAAa,OAAO,GAAG5K,MAAK,CAAC,CAAC;AAAA,EAClH,CAAC;AACH;AAGA,IAAM,wBAAwB,aAAW,SAAS;AAAA,EAChD,SAAS,aAAW0K,UAAQ1F,MAAK,MAAM;AACrC,YAAQ,KAAK,OAAO;AAAA,EACtB,CAAC,GAAG,MAAM,sBAAsB,OAAO,CAAC;AAAA,EACxC,WAAW7D;AAAA,EACX,QAAQ;AACV,CAAC;AAMD,IAAM,gBAAgB,CAAC,UAAU,GAAG,MAAM;AACxC,QAAM,KAAK,OAAO,OAAO0P,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,gBAAgB;AACnB,KAAG,aAAa;AAChB,KAAG,SAAS,MAAM,cAAczD,MAAK,CAAC;AACtC,KAAG,SAAS,MAAM;AAClB,KAAG,QAAQ,MAAM;AACjB,KAAG,IAAI;AACP,SAAO;AACT;AAGA,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,GAAG,GAAG,MAAM;AAC5D,QAAM,KAAK,OAAO,OAAOyD,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,gBAAgB;AACnB,KAAG,aAAa;AAChB,KAAG,SAAS,MAAM,cAAczD,MAAK,CAAC;AACtC,KAAG,SAAS,MAAM;AAClB,KAAG,QAAQ,MAAM;AACjB,KAAG,IAAI;AACP,SAAO;AACT,CAAC;AAgBD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM7J,WAAU;AACvD,QAAM,KAAK,OAAO,OAAOsN,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,QAAQtN;AACX,KAAG,UAAU;AACb,SAAO;AACT,CAAC;AAGD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAMoC,eAAc;AAC7D,QAAM,KAAK,OAAO,OAAOkL,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,UAAU;AACb,KAAG,YAAYlL;AACf,SAAO;AACT,CAAC;AAGD,IAAMxE,SAAO,WAAS4S,WAAU5S,MAAO,KAAK,CAAC;AAM7C,IAAM4S,aAAY,CAAApS,WAAS2V,eAAc,MAAM3V,MAAK;AAGpD,IAAM2V,iBAAgB,CAAA3I,cAAY;AAChC,QAAM,KAAK,OAAO,OAAOkC,MAAK;AAC9B,KAAG,OAAO+S;AACV,KAAG,QAAQjV;AACX,SAAO;AACT;AAGA,IAAMjE,YAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAChD,QAAM,KAAK,OAAO,OAAOmG,MAAK;AAC9B,KAAG,OAAO+b;AACV,KAAG,UAAU;AACb,KAAG,IAAI,IAAI,kBAAkB,GAAG7Y,UAAS;AACzC,SAAO;AACT,CAAC;AAGD,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM,YAAY;AAC/D,QAAM,KAAK,OAAO,OAAOlD,MAAK;AAC9B,KAAG,OAAO+b;AACV,KAAG,UAAU;AACb,KAAG,IAAI,IAAI,kBAAkB,QAAQ,WAAW,QAAQ,SAAS;AACjE,SAAO;AACT,CAAC;AAGD,IAAM/D,cAAa,CAAA5W,YAAU;AAC3B,QAAM,KAAK,OAAO,OAAOpB,MAAK;AAC9B,KAAG,OAAOgc;AACV,KAAG,SAAS,MAAM5a;AAClB,SAAO;AACT;AAGA,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS;AAClD,QAAM,KAAK,OAAO,OAAOpB,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,OAAO,MAAM;AAChB,KAAG,QAAQ,MAAM;AACjB,SAAO;AACT,CAAC;AAGD,IAAMoc,kBAA8B,qBAAK,GAAG,CAAC,MAAM,QAAQ;AACzD,QAAM,KAAK,OAAO,OAAOpc,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,UAAU,MAAM;AACnB,KAAG,QAAQ;AACX,SAAO;AACT,CAAC;AAYD,IAAM,WAAW,aAAW,cAAc;AAAA,EACxC,SAAS,QAAQ;AAAA,EACjB,WAAW,CAAAlP,WAAS5B,OAAM0T,gBAAe9R,MAAK,GAAG;AAAA,IAC/C,QAAQ,QAAQ;AAAA,IAChB,SAASoS;AAAA,EACX,CAAC;AAAA,EACD,QAAQ,QAAQ;AAClB,CAAC;AAGD,IAAM,gBAAgB,aAAW;AAC/B,QAAM,KAAK,OAAO,OAAOlD,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,OAAO,QAAQ;AAClB,KAAG,OAAO,IAAI,kBAAkB,QAAQ,QAAQ,QAAQ,SAAS;AACjE,SAAO;AACT;AAGA,IAAMmD,WAAU,CAAAhU,WAASgF,MAAK,MAAMhF,MAAK;AAGzC,IAAM,aAAa,YAAU;AAC3B,QAAM,KAAK,OAAO,OAAO6Q,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,WAAW;AACd,SAAO;AACT;AAGA,IAAMgN,WAAU,CAAAlP,cAAY;AAC1B,QAAM,KAAK,OAAO,OAAOkC,MAAK;AAC9B,KAAG,OAAOic;AACV,KAAG,UAAUne;AACb,SAAO;AACT;AACA,IAAM3J,QAAO,CAAA2J,cAAY;AACvB,QAAM,KAAK,OAAO,OAAOkC,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,WAAWlC;AACd,SAAO;AACT;AAGA,IAAMgE,QAAoB,2BAAW,MAAM;AAG3C,IAAM,QAAQ,SAAO;AACnB,QAAM,KAAK,OAAO,OAAO9B,MAAK;AAC9B,KAAG,OAAO;AACV,KAAG,MAAM;AACT,SAAO;AACT;;;AClSA,IAAMmX,WAAU;AAKhB,IAAMkF,WAAU;AAKhB,IAAML,kBAAiB;AAKvB,IAAMM,WAAU;;;ACZhB,IAAM,qBAAkC,uBAAO,IAAI,qBAAqB;AASxE,IAAM,uBAAuB;AAAA,EAC3B,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAGA,IAAMtc,SAAQ;AAAA,EACZ,CAAC,kBAAkB,GAAG;AACxB;AAeA,IAAMuc,QAAO,MAAM;AACjB,QAAM,KAAK,OAAO,OAAOvc,MAAK;AAC9B,KAAG,OAAOmX;AACV,SAAO;AACT;AAGA,IAAM,OAAO,MAAM;AACjB,QAAM,KAAK,OAAO,OAAOnX,MAAK;AAC9B,KAAG,OAAOqc;AACV,SAAO;AACT;AAGA,IAAM,aAAa,CAAAjb,YAAU;AAC3B,QAAM,KAAK,OAAO,OAAOpB,MAAK;AAC9B,KAAG,OAAOgc;AACV,KAAG,SAAS5a;AACZ,SAAO;AACT;AAGA,IAAM,OAAO,CAAC,UAAU,UAAU,QAAQob,YAAW;AACnD,QAAM,KAAK,OAAO,OAAOxc,MAAK;AAC9B,KAAG,OAAOsc;AACV,KAAG,WAAW;AACd,KAAG,WAAW;AACd,KAAG,SAAS;AACZ,KAAG,SAASE;AACZ,SAAO;AACT;AAGA,IAAM,eAAe,UAAQ,KAAK,SAASR;AAG3C,IAAM5a,UAAS,UAAQ,aAAa,IAAI,IAAI,KAAK,SAASU;AAG1D,IAAM,2BAA2B,UAAQ,aAAa,IAAI,IAAIiG,QAAO,KAAK,MAAM,IAAI;;;AClEpF,IAAM,qBAAqB;AAK3B,IAAM,wBAAwB;AAK9B,IAAM,2BAA2B;AAKjC,IAAMsU,WAAU;AAUhB,IAAM,gBAAN,MAAoB;AAAA,EAClB,OAAO;AAAA,EACP,YAAY,eAAe,mBAAmB,QAAQ;AACpD,SAAK,gBAAgB;AACrB,SAAK,oBAAoB;AACzB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,MAAM,QAAQ;AACZ,UAAM,OAAO,KAAK,cAAc,MAAM,MAAM;AAC5C,UAAM,OAAO,KAAK,kBAAkB,MAAM,MAAM;AAChD,QAAI,SAAS,UAAa,SAAS,QAAW;AAC5C,aAAOzgB,SAAQ2F,MAAK,IAAI,GAAGA,MAAK,IAAI,GAAG,CAAC,OAAOkb,WAAU,KAAK,OAAOpa,UAASoa,MAAK,CAAC,CAAC;AAAA,IACvF,WAAW,SAAS,QAAW;AAC7B,aAAO;AAAA,IACT,WAAW,SAAS,QAAW;AAC7B,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,qBAAqB,QAAQ;AAC3B,WAAO;AAAA,EACT;AACF;AAQA,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,OAAO;AAAA,EACP,YAAY,kBAAkB,aAAa,UAAU,sBAAsB,qBAAqB,wBAAwB,QAAQ,QAAQ;AACtI,SAAK,mBAAmB;AACxB,SAAK,cAAc;AACnB,SAAK,WAAW;AAChB,SAAK,uBAAuB;AAC5B,SAAK,sBAAsB;AAC3B,SAAK,yBAAyB;AAC9B,SAAK,SAAS;AACd,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,MAAM,QAAQ;AACZ,UAAM,OAAO,KAAK,iBAAiB,MAAM,MAAM;AAC/C,UAAM,OAAO,CAAC,GAAG,KAAK,qBAAqB,IAAI,WAAS,UAAU,SAAY,MAAM,cAAc,MAAM,MAAM,IAAI,MAAS,GAAG,IAAI;AAClI,UAAM,SAAS,KAAK,OAAO,CAAC,KAAKjoB,UAAS;AACxC,UAAI,QAAQ,UAAaA,UAAS,QAAW;AAC3C,eAAOoH,SAAQ,KAAK2F,MAAK/M,KAAI,GAAG,CAAC,OAAOioB,WAAUpa,UAAS,OAAOoa,MAAK,CAAC;AAAA,MAC1E,WAAW,QAAQ,QAAW;AAC5B,eAAO;AAAA,MACT,WAAWjoB,UAAS,QAAW;AAC7B,eAAO+M,MAAK/M,KAAI;AAAA,MAClB,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,GAAG,MAAS;AACZ,WAAO,WAAW,SAAY,SAAS;AAAA,EACzC;AAAA,EACA,qBAAqB,OAAO;AAC1B,WAAO,IAAI,kBAAiB,KAAK,kBAAkB,KAAK,aAAa,KAAK,UAAU,CAAC,GAAG,KAAK,sBAAsB,KAAK,GAAG,KAAK,qBAAqB,KAAK,wBAAwB,KAAK,QAAQ,KAAK,MAAM;AAAA,EAC5M;AACF;AAQA,IAAM,sBAAN,MAAM,qBAAoB;AAAA,EACxB,OAAO;AAAA,EACP,YAAY,kBAAkB,UAAU,sBAAsB,cAAc,qBAAqB,wBAAwB,QAAQ;AAC/H,SAAK,mBAAmB;AACxB,SAAK,WAAW;AAChB,SAAK,uBAAuB;AAC5B,SAAK,eAAe;AACpB,SAAK,sBAAsB;AAC3B,SAAK,yBAAyB;AAC9B,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,MAAM,QAAQ;AACZ,UAAM,OAAO,KAAK,iBAAiB,MAAM,MAAM;AAC/C,UAAM,OAAO,CAAC,GAAG,KAAK,qBAAqB,IAAI,WAAS,UAAU,SAAY,MAAM,cAAc,MAAM,MAAM,IAAI,MAAS,GAAG,IAAI;AAClI,UAAM,SAAS,KAAK,OAAO,CAAC,KAAKA,UAAS;AACxC,UAAI,QAAQ,UAAaA,UAAS,QAAW;AAC3C,eAAOoH,SAAQ,KAAK2F,MAAK/M,KAAI,GAAG,CAAC,OAAOioB,WAAUpa,UAAS,OAAOoa,MAAK,CAAC;AAAA,MAC1E,WAAW,QAAQ,QAAW;AAC5B,eAAO;AAAA,MACT,WAAWjoB,UAAS,QAAW;AAC7B,eAAO+M,MAAK/M,KAAI;AAAA,MAClB,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,GAAG,MAAS;AACZ,WAAO,WAAW,SAAY,SAAS;AAAA,EACzC;AAAA,EACA,qBAAqB,OAAO;AAC1B,WAAO,IAAI,qBAAoB,KAAK,kBAAkB,KAAK,UAAU,CAAC,GAAG,KAAK,sBAAsB,KAAK,GAAG,KAAK,cAAc,KAAK,qBAAqB,KAAK,wBAAwB,KAAK,MAAM;AAAA,EACnM;AACF;AAGA,IAAMkoB,QAAN,MAAW;AAAA,EACT,OAAOL;AAAA,EACP,YAAYltB,QAAOqF,OAAM;AACvB,SAAK,QAAQrF;AACb,SAAK,OAAOqF;AAAA,EACd;AAAA,EACA,MAAM+M,OAAM;AACV,UAAM,SAAS,KAAK,KAAK,MAAMA,KAAI;AACnC,WAAO,WAAW,SAAY,SAAS;AAAA,EACzC;AAAA,EACA,qBAAqB,QAAQ;AAC3B,WAAO;AAAA,EACT;AACF;;;ACrJA,IAAM,YAAY;AAKlB,IAAM,iBAAiB;;;ACDvB,IAAM,+BAA+B;AAGrC,IAAM,4BAAyC,uBAAO,IAAI,4BAA4B;AAGtF,IAAM,8BAA8B;AAAA,EAClC,IAAI,OAAK;AACX;AAGA,IAAMvB,UAAQ;AAAA,EACZ,CAAC,yBAAyB,GAAG;AAC/B;AAGA,IAAM,SAAS,CAAA7Q,WAAS;AACtB,QAAM,KAAK,OAAO,OAAO6Q,OAAK;AAC9B,KAAG,OAAO;AACV,KAAG,QAAQ7Q;AACX,SAAO;AACT;AAGA,IAAM,aAAa,2BAAyB;AAC1C,QAAM,KAAK,OAAO,OAAO6Q,OAAK;AAC9B,KAAG,OAAO;AACV,KAAG,wBAAwB;AAC3B,SAAO;AACT;;;ACRA,IAAM,kBAAN,MAAM,iBAAgB;AAAA,EACpB,qBAAqB;AAAA,EACrB,aAAa;AAAA,EACb,sBAAsB;AAAA,EACtB,QAAQ;AAAA,EACR,aAAa,CAAC;AAAA,EACd,WAAW;AAAA,EACX,SAAS;AAAA,EACT,uBAAuB;AAAA,EACvB,YAAY,gBAAgB,aAAa,2BAA2B;AAClE,SAAK,kBAAkB;AACvB,SAAK,6BAA6B;AAClC,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,MAAM;AACJ,QAAI,SAAS;AACb,WAAO,WAAW,QAAW;AAC3B,UAAI,KAAK,eAAe,QAAW;AACjC,iBAAS,KAAK,oBAAoB;AAAA,MACpC,WAAW,KAAK,uBAAuB,QAAW;AAChD,iBAAS,KAAK,eAAe;AAAA,MAC/B,OAAO;AACL,YAAI;AACF,cAAI,KAAK,oBAAoB,QAAW;AACtC,qBAASuc,MAAK;AAAA,UAChB,OAAO;AACL,gBAAIlU,UAAS,KAAK,eAAe,GAAG;AAClC,mBAAK,kBAAkB2P,YAAW,KAAK,eAAe;AAAA,YACxD,OAAO;AACL,sBAAQ,KAAK,gBAAgB,MAAM;AAAA,gBACjC,KAAK,gBACH;AACE,2BAAS,KAAK,cAAc,KAAK,eAAe;AAChD;AAAA,gBACF;AAAA,gBACF,KAAK,WACH;AACE,wBAAM,cAAc,KAAK,gBAAgB;AAKzC,uBAAK,kBAAkB,KAAK,gBAAgB;AAC5C,sBAAI,KAAK,WAAW,QAAW;AAC7B,0BAAM,gBAAgB,KAAK;AAC3B,yBAAK,SAAS;AACd,0BAAM,UAAU,MAAMne,UAAQ,YAAY,UAAU,GAAG,MAAMmT,SAAQ,MAAM;AACzE,4BAAM,QAAQ,cAAc,IAAI;AAChC,8BAAQ,MAAM,MAAM;AAAA,wBAClB,KAAKmK,UACH;AACE,iCAAOjoB,OAAM,cAAc,QAAQ,GAAG;AAAA,4BACpC,WAAW,CAAA4B,WAAS,YAAY,MAAMA,MAAK;AAAA,4BAC3C,WAAW,CAAA3B,WAAS,YAAY,KAAKA,MAAK;AAAA,0BAC5C,CAAC;AAAA,wBACH;AAAA,wBACF,KAAKktB,UACH;AACE,iCAAOxiB,UAAQ,YAAY,KAAK,cAAc,QAAQ,CAAC,GAAG,MAAM,QAAQ,CAAC;AAAA,wBAC3E;AAAA,wBACF,KAAKmiB,iBACH;AACE,iCAAOnS,kBAAiB,MAAM,QAAQ;AAAA,4BACpC,WAAW,CAAA/Y,WAAS,YAAY,MAAMA,MAAK;AAAA,4BAC3C,WAAW,MAAM,QAAQ;AAAA,0BAC3B,CAAC;AAAA,wBACH;AAAA,wBACF,KAAKwrB,UACH;AACE,iCAAO,aAAa,OAAO,MAAM,QAAQ,GAAG,CAAAxrB,WAAS,YAAY,MAAMA,MAAK,CAAC;AAAA,wBAC/E;AAAA,sBACJ;AAAA,oBACF,CAAC,CAAC;AACF,6BAAS,WAAW+I,UAAQ2N,YAAW,QAAQ,CAAC,GAAG,WAASrT,MAAK,MAAM,KAAK,aAAa,CAAAoN,UAAQ1H,UAAQoI,WAAU,KAAK,GAAG,MAAM+K,SAAQ,MAAM;AAC7I,4BAAM5L,UAAS,KAAK,YAAYG,OAAM,aAAa;AACnD,6BAAOH,YAAW,SAAYA,UAASU;AAAA,oBACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,kBACR;AACA;AAAA,gBACF;AAAA,gBACF,KAAK,eACH;AACE,wBAAM,WAAW,IAAI,iBAAgB,KAAK,gBAAgB,MAAM,GAAG,KAAK,cAAc,CAAAV,YAAUjN,MAAK,MAAM;AACzG,0BAAM,gBAAgB,KAAK,wBAAwB,SAAY2N,QAAO,KAAK;AAC3E,yBAAK,sBAAsB,KAAK,eAAeO,UAASjB,OAAM,CAAC;AAAA,kBACjE,CAAC,CAAC;AACF,2BAAS,SAAS,KAAK;AACvB,wBAAM,UAAU,KAAK;AACrB,uBAAK,qBAAqB,IAAI,iBAAiB,UAAU,CAAAjS,WAAS,QAAQ,EAAEA,MAAK,GAAG,QAAW,CAAC,GAAG,CAAC,GAAG,MAAM,QAAQ,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,QAAQ,WAAW,GAAG,CAAC,GAAG,CAAAmD,aAAW,QAAQ,OAAOA,QAAO,GAAG,CAAAnD,WAAS,QAAQ,OAAOA,MAAK,CAAC;AAChP,uBAAK,sBAAsB;AAC3B,uBAAK,kBAAkB;AACvB;AAAA,gBACF;AAAA,gBACF,KAAK,SACH;AACE,uBAAK,WAAW,KAAK,gBAAgB;AACrC,uBAAK,kBAAkB,KAAK,uBAAuB,SAAY,SAAY2S;AAC3E,2BAAS,KAAK;AACd;AAAA,gBACF;AAAA,gBACF,KAAK,aACH;AACE,uBAAK,YAAY,KAAK,eAAe;AACrC;AAAA,gBACF;AAAA,gBACF,KAAKiR,UACH;AACE,2BAAS,KAAK,SAAS,KAAK,gBAAgB,MAAM,CAAC;AACnD;AAAA,gBACF;AAAA,gBACF,KAAKgJ,UACH;AACE,uBAAK,WAAW,KAAK,KAAK,gBAAgB,CAAC;AAC3C,uBAAK,kBAAkB,KAAK,gBAAgB;AAC5C;AAAA,gBACF;AAAA,gBACF,KAAKC,iBACH;AACE,wBAAM5a,UAAS,KAAK,iBAAiB,SAAY,KAAK,gBAAgB,OAAO,IAAI,KAAK,KAAK,gBAAgB,OAAO,GAAGuJ,SAAQ,KAAK,YAAY,CAAC;AAC/I,2BAAS,WAAWd,kBAAiBzI,SAAQ;AAAA,oBAC3C,WAAW,CAAAtQ,WAAS;AAClB,4BAAM,QAAQ,KAAK,SAASA,MAAK;AACjC,6BAAO,UAAU,UAAa,aAAa,KAAK,IAAI,MAAM,SAASgR;AAAA,oBACrE;AAAA,oBACA,WAAW,CAAA3S,WAAS;AAClB,4BAAM,QAAQ,KAAK,YAAYA,MAAK;AACpC,6BAAO,UAAU,UAAa,aAAa,KAAK,IAAI,MAAM,SAAS2S;AAAA,oBACrE;AAAA,kBACF,CAAC,CAAC;AACF;AAAA,gBACF;AAAA,gBACF,KAAK,YACH;AACE,wBAAM,gBAAgB,KAAK;AAC3B,wBAAM,WAAW,IAAI,iBAAgB,KAAK,gBAAgB,KAAK,GAAG,KAAK,cAAc,CAAAV,YAAU,KAAK,2BAA2BA,OAAM,CAAC;AACtI,2BAAS,SAAS;AAClB,uBAAK,SAAS;AACd,uBAAK,aAAa,CAAAG,UAAQ;AACxB,0BAAMH,UAAS,KAAK,YAAYG,OAAM,aAAa;AACnD,2BAAOH,YAAW,SAAYA,UAASU;AAAA,kBACzC,CAAC;AACD,uBAAK,kBAAkB,KAAK,gBAAgB,MAAM;AAClD;AAAA,gBACF;AAAA,gBACF,KAAK,YACH;AACE,wBAAM,cAAc,KAAK;AACzB,uBAAK,eAAe,KAAK,gBAAgB,QAAQ;AACjD,uBAAK,kBAAkB,KAAK,gBAAgB;AAC5C,uBAAK,aAAa,MAAM3N,MAAK,MAAM;AACjC,yBAAK,eAAe;AAAA,kBACtB,CAAC,CAAC;AACF;AAAA,gBACF;AAAA,gBACF,KAAK,SACH;AACE,wBAAM,OAAO,KAAK;AAClB,2BAAS,KAAK,KAAK,QAAQ,UAAU,aAAW;AAC9C,wBAAI;AACF,2BAAK,kBAAkB,KAAK,KAAK,OAAO;AAAA,oBAC1C,SAAS,OAAO;AACd,2BAAK,kBAAkB,KAAK,KAAK,OAAO6N,KAAI,KAAK,CAAC;AAAA,oBACpD;AACA,2BAAO;AAAA,kBACT,GAAG,CAAAT,UAAQ;AACT,0BAAM6B,UAAS,CAAA7B,UAAQ;AACrB,6BAAO,KAAK,KAAK,OAAOA,KAAI;AAAA,oBAC9B;AACA,yBAAK,kBAAkB6B,QAAO7B,KAAI;AAClC,2BAAO;AAAA,kBACT,CAAC;AACD;AAAA,gBACF;AAAA,gBACF,KAAK,YACH;AACE,2BAAS,KAAK,YAAY,KAAK,gBAAgB,SAAS,CAAC;AACzD;AAAA,gBACF;AAAA,gBACF,KAAK,gBACH;AACE,2BAAS,KAAK,YAAY,KAAK,gBAAgB,QAAQ;AACvD;AAAA,gBACF;AAAA,gBACF,KAAK0a,aACH;AACE,uBAAK,kBAAkB,KAAK,gBAAgB,QAAQ;AACpD;AAAA,gBACF;AAAA,gBACF,SACE;AAEE,uBAAK,gBAAgB;AAAA,gBACvB;AAAA,cACJ;AAAA,YACF;AAAA,UACF;AAAA,QACF,SAAS,OAAO;AACd,eAAK,kBAAkB/Y,WAAUlB,KAAM,KAAK,CAAC;AAAA,QAC/C;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,UAAU;AACR,WAAO,KAAK;AAAA,EACd;AAAA,EACA,UAAU;AACR,WAAO,KAAK;AAAA,EACd;AAAA,EACA,WAAWT,OAAM;AACf,SAAK,aAAaA;AAAA,EACpB;AAAA,EACA,2BAA2B;AACzB,SAAK,uBAAuB;AAAA,EAC9B;AAAA,EACA,yBAAyBzM,YAAW;AAClC,SAAK,uBAAuBA;AAAA,EAC9B;AAAA,EACA,iBAAiByM,OAAM;AACrB,UAAM,aAAa,CAAC;AACpB,QAAI/M,QAAO,KAAK,WAAW,IAAI;AAC/B,WAAOA,OAAM;AACX,UAAIA,MAAK,SAAS,yBAAyB;AACzC,mBAAW,KAAKA,MAAK,SAAS;AAAA,MAChC;AACA,MAAAA,QAAO,KAAK,WAAW,IAAI;AAAA,IAC7B;AACA,UAAM4M,UAAS,WAAW,WAAW,IAAIU,QAAO,cAAc,YAAYP,KAAI;AAC9E,SAAK,yBAAyBH,OAAM;AACpC,WAAOA;AAAA,EACT;AAAA,EACA,oBAAoB;AAClB,UAAM,UAAU,CAAC;AACjB,WAAO,KAAK,WAAW,WAAW,GAAG;AACnC,YAAM,OAAO,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC;AACvD,UAAI,KAAK,SAAS,mBAAmB;AACnC,eAAO;AAAA,MACT;AACA,cAAQ,KAAK,IAAI;AACjB,WAAK,WAAW,IAAI;AAAA,IACtB;AACA,WAAO;AAAA,EACT;AAAA,EACA,YAAYG,OAAM,MAAM;AACtB,UAAM,YAAY,KAAK;AACvB,SAAK,SAAS;AACd,QAAI,cAAc,QAAW;AAC3B,YAAMH,UAAS,UAAU,MAAMG,KAAI;AACnC,aAAOH;AAAA,IACT;AACA,WAAOU;AAAA,EACT;AAAA,EACA,MAAM,QAAQ;AACZ,QAAI,0BAA0B;AAC9B,UAAMhN,aAAY,KAAK;AACvB,QAAIA,eAAc,QAAW;AAC3B,gCAA0B,KAAKA,YAAWsR,UAASjS,MAAK,MAAM,KAAK,yBAAyB,CAAC,CAAC,CAAC;AAAA,IACjG;AACA,QAAI,YAAY;AAChB,UAAM,iBAAiB,KAAK,iBAAiB,MAAM;AACnD,QAAI,mBAAmB,QAAW;AAChC,kBAAY,KAAK,gBAAgBiS,UAASjS,MAAK,MAAM,KAAK,yBAAyB,CAAC,CAAC,CAAC;AAAA,IACxF;AACA,UAAM,oBAAoB,KAAK,uBAAuB,SAAY,SAAY,KAAK,mBAAmB,MAAM,MAAM;AAClH,QAAI,sBAAsB,UAAa,4BAA4B,UAAa,cAAc,QAAW;AACvG,aAAO;AAAA,IACT;AACA,WAAO;AAAA,MAAKoN,MAAK,UAAU,iBAAiB,CAAC;AAAA,MAAG5F,KAAI4F,MAAK,UAAU,uBAAuB,CAAC,CAAC;AAAA,MAAG5F,KAAI4F,MAAK,UAAU,SAAS,CAAC,CAAC;AAAA,MAAG/G,MAAI,CAAC,CAAC,CAAC,OAAOiiB,MAAK,GAAG,KAAK,MAAM,KAAK,OAAOpa,UAAWoa,MAAK,GAAGpa,UAAW,KAAK,CAAC,CAAC;AAAA,MAAGkM;AAAA;AAAA,MAErN1U,UAAQ,CAAA0H,UAAQyL,SAAQ,MAAMzL,KAAI,CAAC;AAAA,IAAC;AAAA,EACtC;AAAA,EACA,YAAYpS,QAAO;AACjB,QAAI,KAAK,WAAW,WAAW,GAAG;AAChC,WAAK,QAAQgU,SAAQhU,MAAK;AAC1B,WAAK,kBAAkB;AACvB,aAAOotB,MAAK;AAAA,IACd;AACA,UAAM1rB,QAAO,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC;AACvD,QAAIA,MAAK,SAAS,mBAAmB;AACnC,WAAK,WAAW,IAAI;AACpB,WAAK,kBAAkBA,MAAK,UAAU1B,MAAK;AAC3C,aAAO;AAAA,IACT;AACA,UAAM,aAAa,KAAK,kBAAkB;AAC1C,QAAI,KAAK,WAAW,WAAW,GAAG;AAChC,WAAK,aAAa,WAAW,QAAQ;AACrC,WAAK,QAAQgU,SAAQhU,MAAK;AAC1B,WAAK,kBAAkB;AACvB,aAAOotB,MAAK;AAAA,IACd;AACA,UAAM,kBAAkB,cAAc,WAAW,IAAI,OAAK,EAAE,SAAS,GAAGpZ,SAAQhU,MAAK,CAAC;AACtF,SAAK,yBAAyB,eAAe;AAC7C,UAAMiS,UAAS,KAAK,iBAAiBgF,UAASjS,MAAK,MAAM,KAAK,yBAAyB,CAAC,CAAC,GAAGoa,kBAAiB1U,UAAQ,MAAM1F,MAAK,MAAM,KAAK,YAAYhF,MAAK,CAAC,CAAC,CAAC;AAC/J,WAAO,WAAWiS,OAAM;AAAA,EAC1B;AAAA,EACA,SAAStQ,QAAO;AACd,QAAI,KAAK,WAAW,WAAW,GAAG;AAChC,WAAK,QAAQoS,WAAYpS,MAAK;AAC9B,WAAK,kBAAkB;AACvB,aAAOyrB,MAAK;AAAA,IACd;AACA,UAAM1rB,QAAO,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC;AACvD,QAAIA,MAAK,SAAS,mBAAmB;AACnC,WAAK,WAAW,IAAI;AACpB,WAAK,kBAAkBA,MAAK,OAAOC,MAAK;AACxC,aAAO;AAAA,IACT;AACA,UAAM,aAAa,KAAK,kBAAkB;AAC1C,QAAI,KAAK,WAAW,WAAW,GAAG;AAChC,WAAK,aAAa,WAAW,QAAQ;AACrC,WAAK,QAAQoS,WAAYpS,MAAK;AAC9B,WAAK,kBAAkB;AACvB,aAAOyrB,MAAK;AAAA,IACd;AACA,UAAM,kBAAkB,cAAc,WAAW,IAAI,OAAK,EAAE,SAAS,GAAGrZ,WAAYpS,MAAK,CAAC;AAC1F,SAAK,yBAAyB,eAAe;AAC7C,UAAMsQ,UAAS,KAAK,iBAAiBgF,UAASjS,MAAK,MAAM,KAAK,yBAAyB,CAAC,CAAC,GAAGoa,kBAAiB1U,UAAQ,MAAM1F,MAAK,MAAM,KAAK,SAASrD,MAAK,CAAC,CAAC,CAAC;AAC5J,WAAO,WAAWsQ,OAAM;AAAA,EAC1B;AAAA,EACA,sBAAsB;AACpB,SAAK,kBAAkB;AACvB,SAAK,QAAQ,KAAK;AAClB,SAAK,aAAa;AAClB,WAAOmb,MAAK;AAAA,EACd;AAAA,EACA,cAAc,YAAY;AACxB,UAAMnb,UAASmN,iBAAgB1E,kBAAiB,KAAK,QAAQ,WAAW,QAAQ,CAAC,GAAG;AAAA,MAClF,WAAW,CAAA/Y,WAASqD,MAAK,MAAM;AAC7B,aAAK,kBAAkB+O,WAAUpS,MAAK;AAAA,MACxC,CAAC;AAAA,MACD,WAAW,SAAOqD,MAAK,MAAM;AAC3B,aAAK,aAAa,CAAAoN,UAAQ,KAAK,QAAQ,WAAW,UAAU,KAAKA,KAAI,CAAC,CAAC;AACvE,aAAK,kBAAkB,MAAM,GAAG;AAAA,MAClC,CAAC;AAAA,IACH,CAAC,CAAC;AACF,WAAO,WAAWH,OAAM;AAAA,EAC1B;AAAA,EACA,QAAQA,SAAQ;AACd,QAAI,KAAK,iBAAiB,QAAW;AACnC,aAAOA;AAAA,IACT;AACA,WAAO,KAAKA,SAAQuJ,SAAQ,KAAK,YAAY,CAAC;AAAA,EAChD;AAAA,EACA,YAAYvE,WAAU;AACpB,SAAK,aAAaA,UAAS,SAAS;AACpC,SAAK,kBAAkBA,UAAS;AAAA,EAClC;AAAA,EACA,aAAa,GAAG;AACd,SAAK,WAAW,KAAK,IAAI,0BAA0B,CAAC,CAAC;AAAA,EACvD;AAAA,EACA,iBAAiB;AACf,UAAM,cAAc,KAAK;AACzB,YAAQ,YAAY,MAAM;AAAA,MACxB,KAAK,oBACH;AACE,eAAO,KAAK,cAAc,YAAY,eAAe,YAAY,mBAAmB,YAAY,QAAQ,WAAW;AAAA,MACrH;AAAA,MACF,KAAK,uBACH;AACE,eAAO,KAAK,iBAAiB,WAAW;AAAA,MAC1C;AAAA,MACF,KAAK,0BACH;AACE,eAAO,KAAK,oBAAoB,WAAW;AAAA,MAC7C;AAAA,MACF,KAAKiW,UACH;AACE,aAAK,WAAW,YAAY;AAC5B,aAAK,qBAAqB,YAAY;AACtC,eAAO,KAAK;AAAA,MACd;AAAA,IACJ;AAAA,EACF;AAAA,EACA,mBAAmB,aAAa;AAC9B,SAAK,kBAAkB;AACvB,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EACA,eAAe9a,OAAM;AACnB,UAAM,QAAQrS,OAAMqS,OAAM;AAAA,MACxB,WAAW,CAAAzQ,WAAS,KAAK,SAASA,MAAK;AAAA,MACvC,WAAW,CAAA3B,WAAS,KAAK,YAAYA,MAAK;AAAA,IAC5C,CAAC;AACD,SAAK,qBAAqB;AAC1B,WAAO,UAAU,SAAY2S,QAAOV,QAAO,KAAK;AAAA,EAClD;AAAA,EACA,iCAAiC,oBAAoB,YAAY;AAC/D,SAAK,aAAa,MAAM,KAAK,YAAYxC,SAAQ,eAAa,KAAKzK,MAAK,MAAM,UAAU,eAAe,CAAC,GAAG0F,UAAQ,iBAAe,gBAAgB,SAAY,cAAciI,KAAI,CAAC,GAAG;AAAA,MAClL,SAAS;AAAA,IACX,CAAC,CAAC,CAAC;AACH,UAAM,QAAQ,KAAK,iBAAiB5S,OAAM;AAAA,MACxC,WAAW,CAAA4B,WAAS,KAAK,SAASA,MAAK;AAAA,MACvC,WAAW,CAAA3B,WAAS,KAAK,YAAYA,MAAK;AAAA,IAC5C,CAAC,CAAC;AACF,SAAK,qBAAqB;AAC1B,WAAO;AAAA,EACT;AAAA,EACA,0BAA0B,kBAAkB,OAAO,UAAU;AAC3D,YAAQ,SAAS,MAAM;AAAA,MACrB,KAAK,oBACH;AACE,cAAM,gBAAgB,CAAC,oBAAoB,MAAM,KAAK,iBAAe,gBAAgB,MAAS;AAC9F,eAAO,CAAC,SAAS,eAAe,gBAAgB,CAAC,QAAW,GAAG,KAAK,IAAI,KAAK;AAAA,MAC/E;AAAA,MACF,KAAK,4BACH;AACE,cAAM,gBAAgB,CAAC,oBAAoB,MAAM,KAAK,iBAAe,gBAAgB,MAAS;AAC9F,eAAO,CAAC,SAAS,eAAe,gBAAgB,CAAC,GAAG,OAAO,MAAS,IAAI,KAAK;AAAA,MAC/E;AAAA,IACJ;AAAA,EACF;AAAA,EACA,cAAc,eAAe,mBAAmB,WAAW,aAAa;AACtE,WAAO,KAAK,eAAe,UAAU,aAAW;AAC9C,YAAM,wBAAwB,UAAU,OAAO;AAC/C,cAAQ,sBAAsB,MAAM;AAAA,QAClC,KAAK0sB,cACH;AACE;AAAA,QACF;AAAA,QACF,KAAK,UACH;AACE,eAAK,oBAAoB,eAAe,mBAAmB,sBAAsB,KAAK;AACtF;AAAA,QACF;AAAA,QACF,KAAKC,WACH;AACE,gBAAM,iBAAiB,kBAAkB,qBAAqB,WAAW;AACzE,eAAK,mBAAmB,cAAc;AACtC;AAAA,QACF;AAAA,MACJ;AACA,WAAK,qBAAqB,IAAIY,MAAO,SAAS,KAAK,kBAAkB;AACrE,aAAO;AAAA,IACT,GAAGxtB,OAAM;AAAA,MACP,WAAW,CAAA4B,WAAS;AAClB,cAAM,QAAQ,KAAK,yBAAyB,eAAe,mBAAmBA,MAAK;AACnF,eAAO,UAAU,SAAY,SAAY,yBAAyB,KAAK;AAAA,MACzE;AAAA,MACA,WAAW,eAAa;AACtB,aAAK,oBAAoB,eAAe,mBAAmB,SAAS;AACpE,eAAO;AAAA,MACT;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,oBAAoB,eAAe,mBAAmB,WAAW;AAC/D,UAAM,cAAc;AACpB,YAAQ,YAAY,MAAM;AAAA,MACxB,KAAK,uBACH;AACE,cAAM,iBAAiB,IAAI,iBAAiB,YAAY,kBAAkB,YAAY,aAAa,YAAY,aAAa,SAAY,YAAY,oBAAoB,YAAY,UAAU,SAAS,IAAI,WAAW,YAAY,sBAAsB,YAAY,qBAAqB,YAAY,wBAAwB,YAAY,QAAQ,YAAY,MAAM;AACnW,aAAK,sBAAsB,cAAc,MAAMqS,SAAQ,SAAS,CAAC;AACjE,aAAK,mBAAmB,cAAc;AACtC;AAAA,MACF;AAAA,MACF,KAAK,0BACH;AACE,cAAM,iBAAiB,IAAI,oBAAoB,YAAY,kBAAkB,YAAY,aAAa,SAAY,YAAY,oBAAoB,YAAY,UAAU,SAAS,IAAI,WAAW,YAAY,sBAAsB,YAAY,cAAc,YAAY,qBAAqB,YAAY,wBAAwB,YAAY,MAAM;AACnV,aAAK,sBAAsB,cAAc,MAAMA,SAAQ,SAAS,CAAC;AACjE,aAAK,mBAAmB,cAAc;AACtC;AAAA,MACF;AAAA,IACJ;AAAA,EACF;AAAA,EACA,yBAAyB,eAAe,mBAAmBrS,QAAO;AAChE,WAAO,KAAK,iCAAiCoS,WAAYpS,MAAK,GAAG,CAAAyQ,UAAQ,kBAAkB,MAAMA,KAAI,GAAG,CAAAA,UAAQ,cAAc,MAAMA,KAAI,CAAC;AAAA,EAC3I;AAAA,EACA,iBAAiB,aAAa;AAC5B,QAAI,YAAY,qBAAqB,WAAW,GAAG;AACjD,aAAO,KAAK,wBAAwB,WAAW;AAAA,IACjD;AACA,UAAM,cAAc,YAAY,qBAAqB,CAAC;AACtD,UAAM,oBAAoB,IAAI,iBAAiB,YAAY,kBAAkB,YAAY,aAAa,YAAY,UAAU,YAAY,qBAAqB,MAAM,CAAC,GAAG,YAAY,qBAAqB,YAAY,wBAAwB,YAAY,QAAQ,YAAY,MAAM;AAClR,QAAI,gBAAgB,QAAW;AAC7B,aAAO,KAAK,wBAAwB,iBAAiB;AAAA,IACvD;AACA,SAAK,mBAAmB,IAAI,cAAc,YAAY,eAAe,mBAAmB,YAAY,MAAM,CAAC;AAC3G,WAAO;AAAA,EACT;AAAA,EACA,wBAAwB,aAAa;AACnC,WAAO,KAAK,YAAY,kBAAkB,CAAAH,YAAU;AAClD,YAAM,qBAAqB,KAAK,wBAAwB,SAAYU,QAAO,KAAK;AAChF,WAAK,sBAAsB;AAC3B,aAAO,KAAK,KAAK,2BAA2B,kBAAkB,GAAGO,UAASjB,OAAM,CAAC;AAAA,IACnF,GAAG,aAAW;AACZ,UAAI,KAAK,wBAAwB,QAAW;AAC1C,cAAM,qBAAqB,KAAK;AAChC,aAAK,sBAAsB;AAC3B,eAAO,KAAK,KAAK,2BAA2B,kBAAkB,GAAG5G,MAAI,MAAM;AACzE,gBAAMmiB,iBAAgB,IAAI,iBAAgB,YAAY,YAAY,OAAO,GAAG,KAAK,cAAc,KAAK,0BAA0B;AAC9H,UAAAA,eAAc,SAAS,KAAK;AAC5B,gBAAM,CAACC,gBAAeC,sBAAqB,IAAI,KAAK,0BAA0B,OAAO,YAAY,sBAAsB,YAAY,OAAO,OAAO,OAAO,CAAC,CAAC;AAC1J,eAAK,qBAAqB,IAAI,cAAcF,gBAAe,IAAI,iBAAiB,YAAY,kBAAkB,YAAY,aAAa,YAAY,UAAUE,wBAAuB,YAAY,qBAAqB,YAAY,wBAAwB,YAAY,QAAQ,YAAY,MAAM,GAAG,YAAY,MAAM;AACpT,cAAIvgB,QAAOsgB,cAAa,GAAG;AACzB,iBAAK,qBAAqB,IAAIF,MAAOE,eAAc,OAAO,KAAK,kBAAkB;AAAA,UACnF;AACA,iBAAO;AAAA,QACT,CAAC,CAAC;AAAA,MACJ;AACA,YAAM,gBAAgB,IAAI,iBAAgB,YAAY,YAAY,OAAO,GAAG,KAAK,cAAc,KAAK,0BAA0B;AAC9H,oBAAc,SAAS,KAAK;AAC5B,YAAM,CAAC,eAAe,qBAAqB,IAAI,KAAK,0BAA0B,OAAO,YAAY,sBAAsB,YAAY,OAAO,OAAO,OAAO,CAAC,CAAC;AAC1J,WAAK,qBAAqB,IAAI,cAAc,eAAe,IAAI,iBAAiB,YAAY,kBAAkB,YAAY,aAAa,YAAY,UAAU,uBAAuB,YAAY,qBAAqB,YAAY,wBAAwB,YAAY,QAAQ,YAAY,MAAM,GAAG,YAAY,MAAM;AACpT,UAAItgB,QAAO,aAAa,GAAG;AACzB,aAAK,qBAAqB,IAAIogB,MAAO,cAAc,OAAO,KAAK,kBAAkB;AAAA,MACnF;AACA,aAAO;AAAA,IACT,GAAG,CAAAnb,UAAQ;AACT,UAAI,YAAY,qBAAqB,KAAK,CAAAub,iBAAeA,iBAAgB,MAAS,GAAG;AACnF,cAAMC,SAAQ,IAAI,oBAAoB,YAAY,kBAAkB,YAAY,UAAU,CAAC,QAAW,GAAG,YAAY,oBAAoB,GAAG,YAAY,iBAAiB,QAAQ,GAAG,YAAY,qBAAqB,YAAY,wBAAwB,YAAY,MAAM;AAC3Q,YAAI,KAAK,wBAAwB,QAAW;AAC1C,gBAAMC,sBAAqB,KAAK;AAChC,eAAK,sBAAsB;AAC3B,iBAAO,KAAK,KAAK,2BAA2BA,mBAAkB,GAAGxiB,MAAI,MAAM,KAAK,mBAAmBuiB,MAAK,CAAC,CAAC;AAAA,QAC5G;AACA,aAAK,mBAAmBA,MAAK;AAC7B,eAAO;AAAA,MACT;AACA,YAAM,qBAAqB,KAAK;AAChC,YAAM,QAAQ,KAAK,iCAAiC,KAAKxb,OAAM/G,MAAM,OAAK,YAAY,uBAAuB,YAAY,UAAU,CAAC,CAAC,CAAC,GAAG,MAAM,oBAAoB,CAAA+G,UAAQ,YAAY,iBAAiB,MAAMA,KAAI,CAAC;AACnN,aAAO,UAAU,SAAY;AAAA;AAAA,QAE7B,yBAAyB,KAAK;AAAA;AAAA,IAChC,CAAC;AAAA,EACH;AAAA,EACA,oBAAoB,aAAa;AAC/B,QAAI,YAAY,qBAAqB,WAAW,GAAG;AACjD,YAAM,YAAY,KAAK;AACvB,UAAI,cAAc,QAAW;AAC3B,aAAK,aAAa,MAAM4B,SAAU,SAAS,CAAC;AAAA,MAC9C;AACA,aAAO,KAAK,iCAAiC,YAAY,cAAc,MAAM,WAAW,CAAA5B,UAAQ,YAAY,iBAAiB,MAAMA,KAAI,CAAC;AAAA,IAC1I;AACA,UAAM,cAAc,YAAY,qBAAqB,CAAC;AACtD,UAAM,OAAO,YAAY,qBAAqB,MAAM,CAAC;AACrD,QAAI,gBAAgB,QAAW;AAC7B,YAAM,CAAC,eAAe,kBAAkB,IAAI,KAAK,0BAA0B,MAAM,MAAM,YAAY,OAAO,WAAW,KAAK,OAAO,CAAC,GAAG,SAAS,SAAS,SAAY,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAClL,WAAK,mBAAmB,IAAI,oBAAoB,YAAY,kBAAkB,YAAY,UAAU,oBAAoB,YAAY,cAAc,YAAY,qBAAqB,YAAY,wBAAwB,YAAY,MAAM,CAAC;AAC1O,UAAIjF,QAAO,aAAa,GAAG;AACzB,aAAK,WAAW,cAAc;AAC9B,eAAO,KAAK;AAAA,MACd;AACA,aAAO;AAAA,IACT;AACA,UAAM,oBAAoB,IAAI,oBAAoB,YAAY,kBAAkB,YAAY,UAAU,MAAM,YAAY,cAAc,YAAY,qBAAqB,YAAY,wBAAwB,YAAY,MAAM;AAC7N,SAAK,mBAAmB,IAAI,cAAc,YAAY,eAAe,mBAAmB,YAAY,MAAM,CAAC;AAC3G,WAAO;AAAA,EACT;AACF;AACA,IAAM,YAAY,CAAA8E,YAAUA,YAAW,SAAYA,UAASU;AAC5D,IAAM,gBAAgB,CAAC,YAAY,WAAW;AAC5C,SAAO,KAAKlD,SAAQ,YAAY,SAAO2C,MAAK,IAAI,MAAM,CAAC,CAAC,GAAG/G,MAAI,WAAS,KAAKyB,KAAI,KAAK,GAAG,UAAU,MAAM6F,KAAM,CAAC,CAAC,GAAGjI,UAAQ,CAAA0H,UAAQyL,SAAQ,MAAMzL,KAAI,CAAC,CAAC;AAC1J;AAKA,IAAM,eAAe,CAAC,GAAG,WAAW,cAAc;AAChD,QAAM,YAAY,CAAC,CAAC;AACpB,QAAM,OAAO,MAAM;AACjB,UAAM3O,WAAU,UAAU,IAAI;AAC9B,QAAIA,aAAY,UAAaA,SAAQ,aAAa,QAAW;AAC3D,aAAOkT,YAAW,+CAA+C;AAAA,IACnE;AACA,UAAM,QAAQlT,SAAQ,SAAS,IAAI;AACnC,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAKypB,UACH;AACE,cAAM,aAAazpB,SAAQ,OAAOA,SAAQ,SAAS,QAAQ,CAAC;AAC5D,YAAI,UAAU,WAAW,GAAG;AAC1B,cAAI,eAAe,QAAW;AAC5B,mBAAOoa,SAAQ,SAAS;AAAA,UAC1B;AACA,iBAAO,KAAK,YAAYnD,kBAAiB;AAAA,YACvC;AAAA,YACA;AAAA,UACF,CAAC,CAAC;AAAA,QACJ;AACA,YAAI,eAAe,QAAW;AAC5B,iBAAOmD,SAAQ,MAAM,KAAK,CAAC;AAAA,QAC7B;AACA,eAAO,KAAK,YAAYnD,kBAAiB;AAAA,UACvC;AAAA,UACA,WAAW,MAAM,KAAK;AAAA,QACxB,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAKsN,UACH;AACE,cAAM,aAAavkB,SAAQ,OAAOA,SAAQ,SAAS,QAAQ,CAAC;AAC5D,YAAI,UAAU,WAAW,GAAG;AAC1B,cAAI,eAAe,QAAW;AAC5B,mBAAOoa,SAAQ,SAAS;AAAA,UAC1B;AACA,iBAAO,KAAK,YAAYnD,kBAAiB;AAAA,YACvC;AAAA,YACA;AAAA,UACF,CAAC,CAAC;AAAA,QACJ;AACA,YAAI,eAAe,QAAW;AAC5B,iBAAOmD,SAAQ,MAAM,KAAK,CAAC;AAAA,QAC7B;AACA,eAAO,KAAK,YAAYnD,kBAAiB;AAAA,UACvC;AAAA,UACA,WAAW,MAAM,KAAK;AAAA,QACxB,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAKmS,iBACH;AACE,kBAAU,KAAKppB,QAAO;AACtB,eAAO,KAAKA,SAAQ,SAAS,MAAM,MAAM,GAAGgS,eAAc,CAAA9T,WAASkc,SAAQ,MAAM;AAC/E,gBAAM,aAAapa,SAAQ,OAAOsQ,WAAYpS,MAAK,CAAC;AACpD,iBAAO,eAAe,SAAYgR,QAAO;AAAA,QAC3C,CAAC,CAAC,GAAG+H,kBAAiB;AAAA,UACpB;AAAA,UACA,WAAW,MAAM,KAAK;AAAA,QACxB,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAKyS,UACH;AACE,kBAAU,KAAK1pB,QAAO;AACtB,kBAAU,KAAK,KAAK;AACpB,eAAOoa,SAAQ,MAAM,KAAK,CAAC;AAAA,MAC7B;AAAA,IACJ;AAAA,EACF;AACA,SAAO,KAAK;AACd;AAGA,IAAM,MAAM,UAAQ,KAAK,UAAU,IAAI,GAAGhB,OAAM;AAGhD,IAAM,YAAY,UAAQ;AACxB,QAAM2I,OAAM,CAAC,iBAAiB,eAAe7e,WAAU0N,mBAAkBrP,MAAK,MAAM,IAAI,gBAAgB,MAAM,QAAQ,QAAQ,CAAC,GAAG,UAAQ6Y,SAAQ,MAAM,KAAK,mBAAmB,KAAK,IAAI,GAAG,IAAI,GAAG5E,cAAa,eAAe,GAAG/F,UAASkT,QAAO,eAAe,CAAC,GAAGhT,SAAQgT,QAAO,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,MAAMhU,UAAS;AACrT,UAAM,WAAW,KAAK,MAAMA,KAAI;AAChC,QAAI,aAAa,QAAW;AAC1B,aAAOO;AAAA,IACT;AACA,WAAO0L,eAAc,UAAU,CAAA1c,WAAS2S,cAAe3N,QAAOoN,WAAYpS,MAAK,CAAC,CAAC;AAAA,EACnF,CAAC;AACD,SAAO0d,qBAAoB,aAAW3U,UAAQ/D,QAAO,YAAU,KAAKmG,KAAM,CAACqL,MAAK,QAAQ1H,WAAU,GAAGtF,OAAK,GAAGA,OAAK,CAAC,CAAC,GAAGT,UAAQ,CAAC,CAAC,OAAO,iBAAiB,aAAa,MAAM,KAAK6N,YAAW,QAAQiN,KAAI,iBAAiB,eAAe,KAAK,CAAC,CAAC,GAAG9a,UAAQ,WAAS,KAAK4J,cAAa,MAAMN,SAAU,eAAe,MAAM,CAAC,GAAGd,UAAS,QAAQkT,QAAO,eAAe,CAAC,CAAC,GAAGhT,SAAQkV,YAAW,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5Y;AAGA,IAAM,qBAAqB,CAAC,cAAc,SAAS;AACjD,QAAM,KAAK;AACX,UAAQ,GAAG,MAAM;AAAA,IACf,KAAKuE,iBACH;AACE,aAAO,KAAK,GAAG,QAAQniB,UAAQ,MAAM,mBAAmB,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;AAAA,IAC5E;AAAA,IACF,KAAKwiB,UACH;AAEE,aAAO,mBAAmB,KAAK,IAAI,GAAG,IAAI;AAAA,IAC5C;AAAA,IACF,KAAKlF,UACH;AACE,aAAOnK,SAAQ,MAAM,KAAK,QAAQ,CAAC;AAAA,IACrC;AAAA,IACF,KAAKsP,UACH;AACE,aAAO,aAAa,IAAI,MAAM,mBAAmB,KAAK,IAAI,GAAG,IAAI,GAAGpZ,UAAW;AAAA,IACjF;AAAA,EACJ;AACF;;;AChrBA,IAAMiU,WAAU;AAKhB,IAAM,WAAW;;;ACDjB,IAAM,yBAAyB;AAG/B,IAAM,sBAAmC,uBAAO,IAAI,sBAAsB;AAG1E,IAAMnX,UAAQ;AAAA,EACZ,CAAC,mBAAmB,GAAG;AAAA,IACrB,IAAI,OAAK;AAAA,IACT,KAAK,OAAK;AAAA,IACV,KAAK,OAAK;AAAA,IACV,IAAI,OAAK;AAAA,IACT,IAAI,OAAK;AAAA,EACX;AACF;AAWA,IAAMuc,QAAO,CAAAnb,YAAU;AACrB,QAAM,KAAK,OAAO,OAAOpB,OAAK;AAC9B,KAAG,OAAOmX;AACV,KAAG,SAAS/V;AACZ,SAAO;AACT;AAGA,IAAM,QAAQ,OAAK;AACjB,QAAM,KAAK,OAAO,OAAOpB,OAAK;AAC9B,KAAG,OAAO;AACV,KAAG,IAAI;AACP,SAAO;AACT;;;AC1CA,IAAM,kBAAkB;AAKxB,IAAM,eAAe;AAKrB,IAAM,gBAAgB;;;ACNtB,IAAM,sBAAsB;AAG5B,IAAM,mBAAgC,uBAAO,IAAI,mBAAmB;AAGpE,IAAMA,UAAQ;AAAA,EACZ,CAAC,gBAAgB,GAAG;AACtB;AAGA,IAAM,cAAc,CAACrD,OAAMC,WAAU;AACnC,QAAM,KAAK,OAAO,OAAOoD,OAAK;AAC9B,KAAG,OAAO;AACV,KAAG,OAAOrD;AACV,KAAG,QAAQC;AACX,SAAO;AACT;AAGA,IAAM,WAAW,OAAK;AACpB,QAAM,KAAK,OAAO,OAAOoD,OAAK;AAC9B,KAAG,OAAO;AACV,KAAG,IAAI;AACP,SAAO;AACT;AAGA,IAAM,YAAY,OAAK;AACrB,QAAM,KAAK,OAAO,OAAOA,OAAK;AAC9B,KAAG,OAAO;AACV,KAAG,IAAI;AACP,SAAO;AACT;;;ACrCA,IAAM,mBAAmB;AAKzB,IAAM,oBAAoB;;;ACD1B,IAAM,yBAAyB;AAG/B,IAAM,sBAAmC,uBAAO,IAAI,sBAAsB;AAG1E,IAAMA,UAAQ;AAAA,EACZ,CAAC,mBAAmB,GAAG;AACzB;AAGA,IAAM,eAAe,OAAK;AACxB,QAAM,KAAK,OAAO,OAAOA,OAAK;AAC9B,KAAG,OAAO;AACV,SAAO;AACT;AAGA,IAAM,gBAAgB,OAAK;AACzB,QAAM,KAAK,OAAO,OAAOA,OAAK;AAC9B,KAAG,OAAO;AACV,SAAO;AACT;AAYA,IAAM9Q,UAAqB,qBAAK,GAAG,CAAC,MAAM;AAAA,EACxC;AAAA,EACA;AACF,MAAM;AACJ,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK,kBACH;AACE,aAAO,eAAe;AAAA,IACxB;AAAA,IACF,KAAK,mBACH;AACE,aAAO,gBAAgB;AAAA,IACzB;AAAA,EACJ;AACF,CAAC;;;AC1CD,IAAM,iBAAiB;AAKvB,IAAM,gBAAgB;AAKtB,IAAM,iBAAiB;AAKvB,IAAM+tB,iBAAgB;AAatB,IAAM,aAAa,qBAAmB;AAAA,EACpC,MAAM;AAAA,EACN;AACF;AAGA,IAAM,YAAY,sBAAoB;AAAA,EACpC,MAAM;AAAA,EACN;AACF;AAGA,IAAM,aAAa,CAAAnsB,YAAU;AAAA,EAC3B,MAAM;AAAA,EACN,OAAAA;AACF;AAGA,IAAM,YAAY,CAAAT,YAAS;AAAA,EACzB,MAAM4sB;AAAA,EACN,MAAA5sB;AACF;AAGA,IAAM,+BAAN,MAAmC;AAAA,EACjC,YAAY,KAAK;AACf,SAAK,MAAM;AAAA,EACb;AAAA,EACA,YAAY;AACV,WAAOyJ,SAAQ0a,QAAO,KAAK,KAAK,WAAS,MAAM,SAAS,iBAAiB,CAACe,QAAO,MAAM,cAAc,GAAG,KAAK,IAAI,CAACzT,OAAM,KAAK,CAAC,CAAC;AAAA,EACjI;AAAA,EACA,QAAQ;AACN,WAAO6E,aAAY,CAAAlH,aAAW,KAAK,MAAMwC,WAAUxC,QAAO,CAAC,CAAC;AAAA,EAC9D;AAAA,EACA,KAAKtQ,QAAO;AACV,WAAO2K,SAAQ0a,QAAO,KAAK,KAAK,WAAS;AACvC,cAAQ,MAAM,MAAM;AAAA,QAClB,KAAK,gBACH;AACE,iBAAO,CAACe,QAAO,MAAM,cAAc,GAAG,KAAK;AAAA,QAC7C;AAAA,QACF,KAAK,eACH;AACE,iBAAO,CAAC3W,SAAQ,MAAM,iBAAiB,CAAAxO,cAAY+S,SAAQ/S,WAAUuM,MAAKxN,MAAK,CAAC,GAAG;AAAA,YACjF,SAAS;AAAA,UACX,CAAC,GAAG,UAAUA,MAAK,CAAC;AAAA,QACtB;AAAA,QACF,KAAK,gBACH;AACE,iBAAO,CAAC8S,YAAa,KAAK;AAAA,QAC5B;AAAA,QACF,KAAKgb,gBACH;AACE,iBAAO,CAAChb,YAAa,KAAK;AAAA,QAC5B;AAAA,MACJ;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,KAAK,SAAS;AACZ,WAAOpI,UAAQS,OAAO,GAAG,CAAAlK,cAAY0J,SAAQ0a,QAAO,KAAK,KAAK,WAAS;AACrE,cAAQ,MAAM,MAAM;AAAA,QAClB,KAAK,gBACH;AACE,iBAAO,CAACe,QAAO,MAAM,cAAc,GAAG,KAAK;AAAA,QAC7C;AAAA,QACF,KAAK,eACH;AACE,gBAAM,iBAAiB,MAAM,gBAAgB,CAAC;AAC9C,gBAAM,kBAAkB,MAAM,gBAAgB,MAAM,CAAC;AACrD,cAAI,mBAAmB,QAAW;AAChC,mBAAO,CAACpS,SAAQ,gBAAgBvG,OAAM,OAAO,CAAC,GAAG,gBAAgB,WAAW,IAAI,WAAWxM,SAAQ,IAAI,UAAU,eAAe,CAAC;AAAA,UACnI;AACA,gBAAM,IAAI,MAAM,oIAAoI;AAAA,QACtJ;AAAA,QACF,KAAK,gBACH;AACE,iBAAO,CAAC6R,YAAa,KAAK;AAAA,QAC5B;AAAA,QACF,KAAKgb,gBACH;AACE,iBAAO,CAAChb,YAAa,KAAK;AAAA,QAC5B;AAAA,MACJ;AAAA,IACF,CAAC,CAAC,CAAC;AAAA,EACL;AAAA,EACA,MAAMnR,QAAO;AACX,WAAOgJ,SAAQ0a,QAAO,KAAK,KAAK,WAAS;AACvC,cAAQ,MAAM,MAAM;AAAA,QAClB,KAAK,gBACH;AACE,iBAAO,CAACe,QAAO,MAAM,cAAc,GAAG,KAAK;AAAA,QAC7C;AAAA,QACF,KAAK,eACH;AACE,iBAAO,CAAC3W,SAAQ,MAAM,iBAAiB,CAAAxO,cAAY8S,WAAU9S,WAAUU,MAAK,GAAG;AAAA,YAC7E,SAAS;AAAA,UACX,CAAC,GAAG,WAAWA,MAAK,CAAC;AAAA,QACvB;AAAA,QACF,KAAK,gBACH;AACE,iBAAO,CAACmR,YAAa,KAAK;AAAA,QAC5B;AAAA,QACF,KAAKgb,gBACH;AACE,iBAAO,CAAChb,YAAa,KAAK;AAAA,QAC5B;AAAA,MACJ;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,OAAO;AACL,WAAO,KAAK,SAAS,CAAAnR,WAASoS,WAAY1I,MAAM1J,QAAO6L,KAAI,CAAC,GAAG,UAAQwG,SAAU,IAAI,GAAG,CAAA9S,WAAQC,MAAKsM,OAAMvM,MAAI,CAAC,CAAC;AAAA,EACnH;AAAA,EACA,SAASO,UAAS,WAAW4rB,SAAQ;AACnC,WAAO3iB,UAAQS,OAAO,GAAG,CAAAlK,cAAY0J,SAAQ0a,QAAO,KAAK,KAAK,WAAS;AACrE,cAAQ,MAAM,MAAM;AAAA,QAClB,KAAK,gBACH;AACE,iBAAO,CAACnS,UAASc,SAAQ,MAAM,gBAAgB,MAAM,GAAGyG,YAAW2L,QAAOnlB,SAAQ,GAAG;AAAA,YACnF,WAAWQ;AAAA,YACX,WAAW1B,OAAM;AAAA,cACf,QAAQstB;AAAA,cACR,SAAS;AAAA,YACX,CAAC;AAAA,UACH,CAAC,CAAC,GAAG,UAAU,CAACpsB,SAAQ,CAAC,CAAC;AAAA,QAC5B;AAAA,QACF,KAAK,eACH;AACE,iBAAO,CAACwZ,YAAW2L,QAAOnlB,SAAQ,GAAG;AAAA,YACnC,WAAWQ;AAAA,YACX,WAAW1B,OAAM;AAAA,cACf,QAAQstB;AAAA,cACR,SAAS;AAAA,YACX,CAAC;AAAA,UACH,CAAC,GAAG,UAAU,CAAC,GAAG,MAAM,iBAAiBpsB,SAAQ,CAAC,CAAC;AAAA,QACrD;AAAA,QACF,KAAK,gBACH;AACE,iBAAO,CAAC+S,SAAUvS,SAAQ,MAAM,KAAK,CAAC,GAAG,KAAK;AAAA,QAChD;AAAA,QACF,KAAKqsB,gBACH;AACE,iBAAO,CAAC9Z,SAAUqZ,QAAO,MAAM,IAAI,CAAC,GAAG,KAAK;AAAA,QAC9C;AAAA,MACJ;AAAA,IACF,CAAC,CAAC,CAAC;AAAA,EACL;AACF;AAGA,IAAMliB,SAAO,MAAM,KAAKA,OAAO,GAAGT,UAAQ,CAAAzJ,cAAYkK,OAAO,WAAWlK,SAAQ,CAAC,CAAC,GAAGoK,MAAI,SAAO,IAAI,6BAA6B,GAAG,CAAC,CAAC;;;AC5JtI,IAAMiC,MAAkB,qBAAK,GAAG,CAAC,MAAMtN,WAAUqL,MAAI,MAAM,MAAMrL,MAAK,CAAC;AAuBvE,IAAMwV,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAMC,eAAc,MAAM,CAAA9T,WAAS5B,OAAM0T,gBAAe9R,MAAK,GAAG;AAAA,EAC3G,QAAQ;AAAA,EACR,SAASoS;AACX,CAAC,CAAC,CAAC;AAGH,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,cAAc,MAAM,GAAG,MAAM,QAAQ,MAAM,MAAM,CAAC;AA8FtG,IAAM,QAAQ,UAAQ;AACpB,QAAM,UAAU,cAAc;AAAA,IAC5B,SAAS,MAAM;AAAA,IACf,WAAWA;AAAA,IACX,QAAQC;AAAA,EACV,CAAC;AACD,SAAO,OAAO,MAAM,OAAO;AAC7B;AAMA,IAAMiD,YAAwB,qBAAK,GAAG,CAAC,MAAMtR,eAAc,aAAa,MAAM,MAAMA,UAAS,CAAC;AAe9F,IAAMgF,YAAU,UAAQD,UAAQ,MAAM,QAAQ;AAG9C,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,YAAY,iBAAiB,MAAM;AAAA,EACjF,WAAW,CAAA/I,WAAS;AAClB,UAAMiP,UAAS6C,gBAAe9R,MAAK;AACnC,YAAQiP,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,eAAO,QAAQ,UAAUA,QAAO,IAAI;AAAA,MACtC;AAAA,MACF,KAAK,SACH;AACE,eAAOmD,WAAUnD,QAAO,KAAK;AAAA,MAC/B;AAAA,IACJ;AAAA,EACF;AAAA,EACA,WAAW,QAAQ;AACrB,CAAC,CAAC;AASF,IAAM,YAAY,CAAArN,WAASwqB,QAAOxqB,OAAM,SAASwQ,YAAW,UAAQrJ,UAAQ,MAAM,IAAI,GAAG,MAAM,UAAUnH,MAAK,CAAC,GAAGyQ,QAAO,CAAC;AAM1H,IAAM,mBAAmB,YAAU3I,MAAM4gB,WAAU,MAAM,GAAG,SAAS;AASrE,IAAM,YAAY,WAASpO,SAAQ,MAAM,kBAAkB,KAAK,CAAC;AAGjE,IAAM,oBAAoB,WAAS,KAAKgL,YAAWyC,MAAK,KAAK,CAAC,GAAG5gB,UAAQ3K,OAAM;AAAA,EAC7E,QAAQA,OAAQ;AAAA,IACd,WAAWgU;AAAA,IACX,WAAW;AAAA,EACb,CAAC;AAAA,EACD,SAAS,UAAQrJ,UAAQ,MAAM,IAAI,GAAG,MAAM,kBAAkB,KAAK,CAAC;AACtE,CAAC,CAAC,CAAC;AAGH,IAAM,kBAAkB,MAAM,SAAS;AAAA,EACrC,SAAS,CAAAnH,WAASmH,UAAQ,MAAMnH,MAAK,GAAG,MAAM,gBAAgB,CAAC;AAAA,EAC/D,WAAWpC;AAAA,EACX,QAAQ;AACV,CAAC;AAGD,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM8Q,YAAW,UAAU,MAAM;AAAA,EAC3E,OAAO4W,YAAW5W,OAAM;AAAA,EACxB,YAAY,cAAYmb,MAAKvP,SAAU,MAAM,QAAQ,CAAC;AAAA,EACtD,aAAa,gBAAcuP,MAAKvP,SAAU,MAAM,UAAU,CAAC;AAC7D,CAAC,CAAC;AAGF,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAM5c,cAAa,cAAc,MAAMmlB,QAAOnlB,SAAQ,CAAC,CAAC;AAG5G,IAAMoK,QAAmB,qBAAK,GAAG,CAAC,MAAM,MAAMX,UAAQ,MAAM,OAAK1F,MAAK,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAMlF,IAAMsV,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAMC,eAAc,MAAMlP,MAAM,CAAC,CAAC,CAAC;AAGhF,IAAMkP,iBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM9E,eAAc,MAAM,CAAA9T,WAASoS,WAAU,EAAEpS,MAAK,CAAC,CAAC,CAAC;AAGzG,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC/C,QAAM,SAAS,SAAS;AAAA,IACtB,SAAS,aAAW+I,UAAQ,MAAM,EAAE,OAAO,CAAC,GAAG,MAAM,MAAM;AAAA,IAC3D,WAAWvJ;AAAA,IACX,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,OAAO,MAAM,MAAM;AAC5B,CAAC;AAGD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACrD,QAAM,SAAS,cAAc;AAAA,IAC3B,SAAS,aAAW,KAAK0nB,YAAW,EAAE,OAAO,CAAC,GAAGne,UAAQ,KAAK,GAAGA,UAAQ,MAAM,MAAM,CAAC;AAAA,IACtF,WAAWqJ;AAAA,IACX,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,OAAO,MAAM,MAAM;AAC5B,CAAC;AAGD,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,KAAK9F,KAAI,WAAW,GAAG;AAClF,QAAM,QAAQ,OAAO,EAAEkG,gBAAesS,SAAQ,CAAC,GAAG,CAAAuH,WAASrC,UAASqC,MAAK,CAAC,CAAC;AAC3E,QAAM,cAAc,OAAO,EAAE7iB,OAAO,CAAC;AACrC,QAAM,cAAc,MAAM,OAAO,oBAAoB,OAAK,YAAY,OAAO,EAAEgP,eAAc,CAAC,CAAC,GAAG;AAClG,QAAM,OAAO,OAAO,EAAE,OAAO,IAAI,CAAC;AAClC,SAAO,EAAEO,kBAAiB,MAAM;AAAA,IAC9B,WAAW,CAAA/Y,WAAS4pB,OAAM,OAAOxX,WAAYpS,MAAK,CAAC;AAAA,IACnD,WAAW,CAAAiP,YAAU7Q,OAAM6Q,SAAQ;AAAA,MACjC,QAAQ,aAAW;AACjB,cAAM,OAAO,YAAY,CAAC;AAC1B,eAAOsC,UAAWH,eAAc,KAAKJ,KAAI,CAAC,GAAGD,QAAS6Y,OAAM,OAAOvX,SAAUxG,MAAK,OAAO,CAAC,CAAC,CAAC,CAAC;AAAA,MAC/F;AAAA,MACA,SAAS,aAAWS,KAAI,WAAWggB,IAAG;AACpC,cAAMhtB,YAAW,OAAOgtB,GAAE9iB,OAAO,CAAC;AAClC,cAAM,QAAQ,OAAO8iB,GAAE9iB,OAAO,CAAC;AAC/B,eAAO8iB,GAAEvb,QAAS6Y,OAAM,OAAOlgB,MAAM+a,QAAOnlB,SAAQ,GAAGwM,MAAK,CAAC,CAAC,CAAC;AAC/D,eAAOwgB,GAAEja,SAAU,OAAO,MAAM,GAAGd,UAAW,KAAKmM,qBAAoB,aAAW;AAAA,UAAKjN,MAAK,QAAQgU,QAAO,WAAW,CAAC,CAAC;AAAA,UAAGvK,WAAUzJ,MAAK,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAAA;AAAA,UAE9J1H,UAAU,CAAA0H,UAAQyL,SAAU,MAAMzL,KAAI,CAAC;AAAA,QAAC,CAAC,GAAGiM,eAAc,CAAA1c,WAASoS,WAAY,aAAapS,MAAK,CAAC,GAAGsX,cAAahY,SAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,GAAGsX,WAAU;AACzJ,eAAO0V,GAAE7H,QAAO,KAAK,CAAC;AAAA,MACxB,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC,GAAGlO,UAASnF,gBAAewF,WAAU;AACtC,SAAO;AACT,CAAC,GAAGlN,MAAM,WAAS;AACjB,QAAM,WAAW0iB,QAAOtT,YAAW9P,SAAU2gB,MAAK,KAAK,CAAC,GAAG;AAAA,IACzD,WAAWvX;AAAA,IACX,WAAWhU,OAAM;AAAA,MACf,QAAQ;AAAA,MACR,SAAS,aAAW2K,UAAQ,MAAM,OAAO,GAAG,MAAM,QAAQ;AAAA,IAC5D,CAAC;AAAA,EACH,CAAC,CAAC;AACF,SAAO;AACT,CAAC,GAAG0gB,aAAY,CAAC;AAGjB,IAAMxQ,YAAW,aAAW;AAC1B,SAAO,cAAY,aAAa,OAAO,EAAE,UAAU,SAAS;AAC9D;AAaA,IAAM,eAAe,CAAC;AAAA,EACpB,aAAa;AAAA,EACb;AAAA,EACA,gBAAgB,aAAa;AAC/B,MAAM,CAAC,UAAU,MAAM,KAAK3M,KAAI,WAAW,GAAG;AAC5C,QAAM,eAAe,gBAAgB,cAAc,OAAO,mBAAmB;AAC7E,QAAM1K,SAAQ,OAAO,EAAE4H,OAAO,CAAC;AAC/B,QAAM,cAAc,UAAU5H,MAAK;AACnC,QAAM,QAAQ,OAAO,EAAE4Q,gBAAesS,SAAQ,UAAU,GAAG,CAAAuH,WAASrC,UAASqC,MAAK,CAAC,CAAC;AACpF,QAAM,YAAY,OAAO,EAAE7Z,gBAAeqS,WAAU,GAAG,CAAAwH,WAASrC,UAASqC,MAAK,CAAC,CAAC;AAChF,QAAM,WAAW,OAAO,EAAE7iB,OAAKiC,MAAK,CAAC,CAAC;AACtC,QAAM,cAAc,OAAO,EAAEjC,OAAO,CAAC;AACrC,QAAM,eAAe,OAAO,EAAEgP,eAAc,YAAY,CAAC,GAAG;AAC5D,QAAM,OAAO,OAAO,EAAE,OAAO,QAAQ,CAAC;AACtC,QAAM,eAAe,CAAA+T,UAAQ,KAAKxjB,UAAUwjB,OAAMnuB,OAAM;AAAA,IACtD,QAAQ,CAAAmB,WAAQ8S,SAAU/H,MAAK/K,MAAI,CAAC;AAAA,IACpC,SAAS,aAAWoM,IAAKie,OAAM,OAAOvX,SAAUvG,OAAM,OAAO,CAAC,CAAC,GAAGL,MAAK,CAAC;AAAA,EAC1E,CAAC,CAAC,GAAG,YAAYD,OAAM,GAAGzC,UAAU,aAAW4G,QAAO,UAAU,MAAQ;AAAA,IACtE,QAAQ,MAAMrF,MAAK,QAAQ,KAAK;AAAA,IAChC,QAAQ,CAAAkiB,cAAYliB,MAAK,EAAEkiB,WAAU,QAAQ,KAAK,CAAC;AAAA,EACrD,CAAC,CAAC,CAAC,GAAG1Y,eAAgB,CAAA9T,WAAS4R,eAAc5R,MAAK,IAAIoS,WAAYpS,MAAK,IAAI,KAAK4pB,OAAM,OAAOxX,WAAYpS,MAAK,CAAC,GAAGuR,UAAWc,SAAU,aAAa,MAAM,CAAC,GAAGtB,OAAQ,CAAC,CAAC;AACxK,SAAO,EAAEgI,kBAAiB,MAAM;AAAA,IAC9B,WAAW,CAAA/Y,WAAS,KAAK4pB,OAAM,OAAOxX,WAAYpS,MAAK,CAAC,GAAGuR,UAAWc,SAAU,KAAK,CAAC,CAAC;AAAA,IACvF,WAAWjU,OAAM;AAAA,MACf,QAAQ,aAAW+b,UAASsK,QAAO,WAAW,GAAG,YAAY,YAAY,EAAEzT,KAAI,GAAG;AAAA,QAChF,YAAY,CAAC,GAAG,sBAAsBrF,IAAKwF,WAAU,iBAAiB,GAAG,KAAK;AAAA,QAC9E,aAAa,CAAC,GAAG,iBAAiBI,UAAWJ,WAAU,YAAY,GAAG,KAAKjI,MAAI,QAAQ,GAAGH,UAAU,MAAQ;AAAA,UAC1G,QAAQ,MAAM6gB,OAAM,OAAOvX,SAAUxG,MAAK,OAAO,CAAC,CAAC;AAAA,UACnD,QAAQ,CAAA2gB,cAAY5C,OAAM,OAAOvX,SAAUxG,MAAK,EAAE2gB,WAAU,OAAO,CAAC,CAAC,CAAC;AAAA,QACxE,CAAC,CAAC,GAAG7gB,IAAK,KAAK,CAAC,CAAC;AAAA,MACnB,CAAC;AAAA,MACD,SAAS,aAAWvN,QAAQ,eAAe;AAAA,QACzC,gBAAgB,MAAMkO,KAAI,WAAWggB,IAAG;AACtC,gBAAM,QAAQ,OAAOA,GAAE9iB,OAAO,CAAC;AAC/B,gBAAM,cAAc,KAAK,aAAa,OAAO,OAAO,GAAG,QAAQT,UAAU,CAAAwjB,UAAQvS,MAAK,aAAauS,KAAI,GAAG9H,QAAO,WAAW,CAAC,CAAC,GAAGvJ,OAAQ;AACzI,iBAAOoR,GAAEja,SAAU,OAAO,MAAM,GAAGd,UAAW,WAAW,GAAG,YAAY,CAAC,GAAGqF,WAAU;AACtF,iBAAO0V,GAAE7H,QAAO,KAAK,CAAC;AACtB,gBAAM,UAAU,OAAO6H,GAAEhI,QAAO,WAAW,CAAC;AAC5C,iBAAO,CAAC;AAAA,QACV,CAAC;AAAA,QACD,iBAAiB,MAAMhY,KAAI,WAAWggB,IAAG;AACvC,gBAAM,WAAW,OAAOA,GAAE9iB,OAAO,CAAC;AAClC,gBAAM,QAAQ,OAAO8iB,GAAE9iB,OAAO,CAAC;AAC/B,gBAAM,SAAS,OAAO8iB,GAAE1oB,OAAK,SAAS,CAAC;AACvC,iBAAO0oB,GAAE3C,MAAK,SAAS,GAAG5gB,UAAU,OAAKsJ,SAAU,GAAG,MAAM,CAAC,GAAGkM,MAAK,MAAM,UAAU,YAAY,CAAC;AAClG,iBAAO+N,GAAE1C,OAAM,WAAW,QAAQ,CAAC;AACnC,gBAAM,cAAc,KAAK,aAAa,OAAO,OAAO,GAAG,QAAQ7gB,UAAU,CAAAwjB,UAAQ,KAAK,aAAaA,KAAI,GAAGvS,MAAKyK,QAAO,WAAW,CAAC,GAAGzK,MAAKyK,QAAO,QAAQ,CAAC,CAAC,CAAC,GAAGvJ,OAAQ;AACvK,iBAAOoR,GAAEja,SAAU,OAAO,MAAM,GAAGd,UAAW,WAAW,GAAG,YAAY,CAAC,GAAGqF,WAAU;AACtF,iBAAO0V,GAAE7H,QAAO,KAAK,CAAC;AACtB,gBAAM,UAAU,OAAO6H,GAAEhI,QAAO,WAAW,CAAC;AAC5C,iBAAO,CAAC;AAAA,QACV,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC,GAAG,YAAY,QAAQ,GAAG1N,WAAU;AACrC,SAAO,CAAC,OAAOhV,MAAK;AACtB,CAAC,GAAG8H,MAAM,CAAC,CAAC,OAAO9H,MAAK,MAAM;AAC5B,QAAM,WAAW,KAAK+nB,MAAK,KAAK,GAAG3gB,UAAW8P,YAAW;AAAA,IACvD,WAAW1G;AAAA,IACX,WAAWhU,OAAM;AAAA,MACf,QAAQ;AAAA,MACR,SAAS,aAAW2K,UAAQ,MAAM,OAAO,GAAG,MAAM,QAAQ;AAAA,IAC5D,CAAC;AAAA,EACH,CAAC,GAAGqjB,OAAM;AACV,SAAO,WAAW,UAAUxqB,MAAK;AACnC,CAAC,GAAG6nB,aAAY;AAGhB,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,GAAG,YAAYxQ,UAAS,OAAO,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC;AAa9F,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,YAAYwQ,cAAa1gB,UAAUS,OAAO,GAAG,CAAA5H,WAAS;AAClG,QAAM,cAAc,UAAUA,MAAK;AACnC,SAAO8H,MAAMmB,KAAM,OAAO,OAAO,aAAa,IAAI,CAAC,GAAG,OAAO,OAAO,aAAa,QAAQ,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,MAAM;AACrH,UAAM,aAAa,CAAC4F,OAAM,OAAO,SAAS,CAAClR,QAAMktB,OAAMC,YAAW;AAChE,YAAMC,cAAa,cAAY;AAC7B,cAAM,KAAK;AACX,YAAI,GAAG,SAAStG,UAAW;AACzB,iBAAOhU,SAAU6U,YAAW3V,UAAWJ,WAAU,KAAK,GAAG,GAAG,MAAM,CAAC,CAAC;AAAA,QACtE;AACA,eAAOzH,MAAM+a,QAAS,KAAK,GAAGrmB,OAAQ;AAAA,UACpC,WAAW,CAAA4B,WAASknB,YAAW,GAAG,EAAE9U,WAAYpS,MAAK,CAAC,CAAC;AAAA,UACvD,WAAW5B,OAAM;AAAA,YACf,QAAQ,CAAAmB,WAAQ2nB,YAAW,GAAG,EAAE7U,SAAU9S,MAAI,CAAC,CAAC;AAAA,YAChD,SAAS,UAAQgS,UAAS,MAAM,IAAI,GAAG,GAAGmb,QAAO,GAAG,CAAC,CAAC,CAAC;AAAA,UACzD,CAAC;AAAA,QACH,CAAC,CAAC;AAAA,MACJ;AACA,aAAOtuB,OAAQqS,OAAM;AAAA,QACnB,WAAW,CAAAzQ,WAAS2sB,YAAWptB,OAAK6S,WAAYpS,MAAK,CAAC,CAAC;AAAA,QACvD,WAAW5B,OAAM;AAAA,UACf,QAAQ,OAAKuuB,YAAWptB,OAAK8S,SAAU,CAAC,CAAC,CAAC;AAAA,UAC1C,SAAS,UAAQA,SAAUtJ,UAAQ,MAAM,IAAI,GAAG,MAAMA,UAAQme,YAAWxQ,YAAW,IAAI,CAAC,GAAG,eAAa,GAAG+V,MAAK,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC;AAAA,QACvI,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AACA,UAAM,KAAK,WAAS;AAClB,cAAQ,MAAM,MAAM;AAAA,QAClB,KAAK,iBACH;AACE,gBAAM,WAAWrb,eAAc9H,MAAK,MAAM,IAAI,CAAC;AAC/C,gBAAM,YAAY8H,eAAc9H,MAAK,MAAM,KAAK,CAAC;AACjD,iBAAO8iB,QAAOjS,UAAS,UAAU,WAAW;AAAA,YAC1C,YAAY,CAAC,UAAU,OAAO5I,UAAWJ,WAAU,EAAE,GAAG,WAAW,UAAU,MAAM,OAAO,KAAK,EAAE,QAAQ,YAAY,aAAa,OAAK,SAAS,CAAC,CAAC,CAAC;AAAA,YACnJ,aAAa,CAAC,WAAW,OAAOI,UAAWJ,WAAU,EAAE,GAAG,WAAW,WAAW,MAAM,MAAM,KAAK,EAAE,QAAQ,aAAa,CAACtF,OAAMC,WAAU,YAAYA,QAAOD,KAAI,GAAG,OAAK,UAAU,CAAC,CAAC,CAAC;AAAA,UACvL,CAAC,CAAC;AAAA,QACJ;AAAA,QACF,KAAK,cACH;AACE,iBAAOugB,QAAO1iB,MAAM+G,MAAK,KAAK,GAAGrS,OAAQ;AAAA,YACvC,WAAW,CAAA4B,WAASknB,YAAW,MAAM,EAAE9U,WAAYpS,MAAK,CAAC,CAAC;AAAA,YAC1D,WAAW5B,OAAM;AAAA,cACf,QAAQ,CAAAmB,WAAQ2nB,YAAW,MAAM,EAAE7U,SAAU9S,MAAI,CAAC,CAAC;AAAA,cACnD,SAAS,UAAQwJ,UAAQ,MAAM,IAAI,GAAG,MAAM,GAAG,SAAS,MAAM,CAAC,CAAC,CAAC;AAAA,YACnE,CAAC;AAAA,UACH,CAAC,CAAC,CAAC;AAAA,QACL;AAAA,QACF,KAAK,eACH;AACE,iBAAOqjB,QAAO1iB,MAAM+G,MAAK,KAAK,GAAGrS,OAAQ;AAAA,YACvC,WAAW,CAAA4B,WAASknB,YAAW,MAAM,EAAE9U,WAAYpS,MAAK,CAAC,CAAC;AAAA,YAC1D,WAAW5B,OAAM;AAAA,cACf,QAAQ,CAAAmB,WAAQ2nB,YAAW,MAAM,EAAE7U,SAAU9S,MAAI,CAAC,CAAC;AAAA,cACnD,SAAS,UAAQwJ,UAAQ,MAAM,IAAI,GAAG,MAAM,GAAG,UAAU,MAAM,CAAC,CAAC,CAAC;AAAA,YACpE,CAAC;AAAA,UACH,CAAC,CAAC,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACF;AACA,WAAO,KAAKme,YAAWpc,SAAQ4L,YAAW,KAAK,GAAGA,YAAW,KAAK,GAAG,CAAC7K,OAAMC,WAAU,YAAYD,OAAMC,MAAK,CAAC,CAAC,GAAG/C,UAAQ,EAAE,GAAG,WAAWnH,MAAK,CAAC;AAAA,EAClJ,CAAC;AACH,CAAC,CAAC,CAAC;AASH,IAAM2X,aAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM1F,UAAS,MAAM,OAAK;AACtE,QAAM,EAAE,CAAC;AACX,CAAC,CAAC;AAGF,IAAM9G,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS8G,UAAS,MAAM,IAAI,CAAC;AAGxE,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,SAASqI,SAAQ,MAAM;AACtE,MAAI,mBAAmB;AACvB,QAAM,SAAS,SAAS;AAAA,IACtB,SAAS,aAAWnT,UAAQ,MAAM,OAAO,GAAG,MAAM,MAAM;AAAA,IACxD,WAAW,YAAU;AACnB,yBAAmB,iBAAiB,MAAM;AAC1C,aAAOqJ,WAAUlB,KAAI,gBAAgB,CAAC;AAAA,IACxC;AAAA,IACA,QAAQ;AAAA,EACV,CAAC;AACD,QAAM,SAAS,cAAc;AAAA,IAC3B,SAAS,aAAW,KAAK,MAAM,OAAO,GAAGnI,UAAQ,MAAM,MAAM,CAAC;AAAA,IAC9D,WAAW,CAAA/I,WAAS2R,WAAU3R,MAAK,KAAK,mBAAmBA,OAAM,MAAM,KAAK,OAAOA,OAAM,QAAQ,gBAAgB,IAAIR,OAAKQ,OAAM,OAAO,KAAK,IAAIoS,WAAUpS,MAAK;AAAA,IAC/J,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,OAAO,OAAO,OAAO,MAAM,MAAM,GAAG,IAAI,GAAG,MAAM;AAC1D,CAAC,CAAC;AAsBF,IAAM,WAAW,UAAQ+I,UAAQ,MAAM,MAAM,SAAS,IAAI,CAAC;AAS3D,IAAM,WAAW,UAAQ,IAAM,MAAM,IAAI,CAAC;AAG1C,IAAMmS,UAAS,CAAA5K,YAAU8b,QAAO1O,qBAAoB,aAAWhU,MAAMF,OAAO,GAAG,CAAAxE,WAAS,kBAAkB0X,eAAc,QAAQ3d,QAAOiG,MAAK,EAAEsL,OAAM,CAAC,GAAG,CAAAtQ,WAAS,MAAMgF,QAAOoN,WAAYpS,MAAK,CAAC,CAAC,GAAG,CAAC,GAAGyQ,UAAS,MAAMzL,QAAOyL,KAAI,CAAC,CAAC,CAAC,CAAC;AAGtO,IAAM,WAAW,YAAU,QAAQ,MAAM;AAGzC,IAAM,SAAS,UAAQ/G,MAAM8I,gBAAenP,MAAO,MAAM,IAAI,gBAAgB,MAAM,QAAQ,QAAQ,CAAC,GAAG,CAAC,MAAMoN,UAAS;AACrH,QAAM,WAAW,KAAK,MAAMA,KAAI;AAChC,SAAO,aAAa,SAAYO,QAAO;AACzC,CAAC,GAAG,UAAQkL,SAAU,MAAM,gBAAgB,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;AAG9D,IAAM,kBAAkB,CAAC,cAAc,SAAS;AAC9C,QAAM,QAAQ;AACd,UAAQ,MAAM,MAAM;AAAA,IAClB,KAAKmK,UACH;AACE,aAAOjoB,OAAQ,KAAK,QAAQ,GAAG;AAAA,QAC7B,WAAWgU;AAAA,QACX,WAAW,CAAA7S,WAAQ8S,SAAUxG,MAAKtM,MAAI,CAAC;AAAA,MACzC,CAAC;AAAA,IACH;AAAA,IACF,KAAKgsB,UACH;AACE,aAAOlZ,SAAUvG,OAAM,KAAK,QAAQ,CAAC,CAAC;AAAA,IACxC;AAAA,IACF,KAAKof,iBACH;AACE,aAAO,KAAK,MAAM,QAAQniB,UAAU,MAAM,gBAAgB,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;AAAA,IAC9E;AAAA,IACF,KAAKyiB,UACH;AACE,aAAO,aAAa,OAAO,MAAM,gBAAgB,KAAK,IAAI,GAAG,IAAI,GAAG,CAAAxrB,WAASoS,WAAYpS,MAAK,CAAC;AAAA,IACjG;AAAA,EACJ;AACF;AAGA,IAAM,UAAU,WAASkc,SAAQ,MAAM,gBAAgB,KAAK,CAAC;AAG7D,IAAM,kBAAkB,WAAS;AAC/B,SAAO,cAAc;AAAA,IACnB,SAAS,UAAQnT,UAAQme,YAAW0C,OAAM,OAAO9d,OAAM,IAAI,CAAC,CAAC,GAAG,MAAM,gBAAgB,KAAK,CAAC;AAAA,IAC5F,WAAW,CAAA9L,WAASknB,YAAW,KAAK0C,OAAM,OAAO/d,MAAKuG,WAAYpS,MAAK,CAAC,CAAC,CAAC,CAAC;AAAA,IAC3E,QAAQ,CAAAT,WAAQ2nB,YAAW,KAAK0C,OAAM,OAAO/d,MAAKwG,SAAU9S,MAAI,CAAC,CAAC,CAAC,CAAC;AAAA,EACtE,CAAC;AACH;AAGA,IAAM6sB,UAAS,aAAWpjB,UAAQke,YAAW,OAAO,CAAC;AAGrD,IAAMuC,gBAAe,UAAQ,cAAcvO,QAAO,IAAI,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC;AAMjF,IAAMyE,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,YAAY8J,cAAa1gB,UAAU/G,SAAU,GAAG,CAAAA,aAAW0H,MAAMgP,gBAAe,MAAM,OAAO,GAAG,CAAAvJ,UAAQmc,gBAAe,MAAMjd,KAAIrM,UAAS,SAASmN,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAG/M,IAAM,WAAW,IAAI,SAAS,WAAWlG,cAAa,IAAI,CAAC;AAG3D,IAAM,aAAa,UAAQ,iBAAiB,GAAG,KAAK,QAAQ,IAAI;AAGhE,IAAM,mBAAmB,CAAC,KAAK,KAAKtI,WAAU;AAC5C,SAAO,QAAQ,MAAMqQ,QAAS,KAAK,MAAM,KAAKrQ,QAAOgK,WAAY,GAAG,CAAC,CAAC,GAAG5B,UAAQ,MAAM,iBAAiB,MAAM,GAAG,KAAKpI,MAAK,CAAC,CAAC;AAC/H;AAGA,IAAMkK,OAAmB,qBAAK,UAAQ,UAAU,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAY,SAAS,aAAa,UAAU,MAAM;AAAA,EACvH,OAAO;AAAA,EACP,YAAY,WAAS,MAAM,CAAA8gB,WAASzP,SAAU,MAAMrR,KAAM,OAAO8gB,MAAK,CAAC,CAAC;AAAA,EACxE,aAAa,CAAAA,WAAS,MAAM,WAASzP,SAAU,MAAMrR,KAAM,OAAO8gB,MAAK,CAAC,CAAC;AAC3E,CAAC,IAAI5iB,UAAQ,MAAM,OAAKW,MAAI,MAAM,OAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAQ/C,IAAM6H,YAAwB,qBAAK,UAAQ,UAAU,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAY,SAAS,aAAa7H,MAAImB,KAAI,MAAM,MAAM;AAAA,EAChI,YAAY;AACd,CAAC,GAAG,CAAA0X,WAASA,OAAM,CAAC,CAAC,IAAIxZ,UAAQ,MAAM,MAAM,IAAI,CAAC;AAGlD,IAAM,yBAAsC,uBAAO,IAAI,iCAAiC;AAGxF,IAAM,mBAAmB,YAAU;AAAA,EACjC,MAAM;AAAA,EACN,CAAC,sBAAsB,GAAG;AAAA,EAC1B;AACF;AAGA,IAAM,qBAAqB,OAAK,YAAY,GAAG,sBAAsB;;;AC/mBrE,IAAM6jB,cAA0B,uBAAO,IAAI,aAAa;AAGxD,IAAMC,gBAAe;AAAA,EACnB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AAAA,EACT,KAAK,OAAK;AAAA,EACV,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAGA,IAAM,WAAN,MAAe;AAAA,EACb,CAACD,WAAU,IAAIC;AAAA,EACf,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,SAAS,OAAK,YAAY,GAAGD,WAAU;AAG7C,IAAM1Q,WAAU,CAAAlP,cAAY,IAAI,SAASkP,SAAU,MAAM,UAAUlP,UAAS,CAAC,CAAC,CAAC;AAM/E,IAAM,aAAa,MAAM,IAAI,SAAS,eAAevL,OAAM,CAAC,CAAC;AAG7D,IAAM,iBAAiB,SAAO,cAAc;AAAA,EAC1C,SAAS,CAAAd,WAAS,eAAe,KAAK,KAAKsH,WAAUtH,MAAK,CAAC,CAAC;AAAA,EAC5D,WAAWyR;AAAA,EACX,QAAQ,MAAMC,SAAU,GAAG;AAC7B,CAAC;AAGD,IAAM,cAAc,OAAK6J,SAAQ,MAAM,YAAY,gBAAgB,GAAGza,OAAM,CAAC,CAAC,CAAC;AAG/E,IAAM,kBAAkB,CAAC,GAAG,QAAQ,cAAc;AAAA,EAChD,SAAS,CAAAd,WAAS;AAChB,UAAM,CAAC,WAAW,SAAS,IAAI6J,SAAQ7J,QAAO,CAAC;AAC/C,QAAI,UAAU,SAAS,GAAG;AACxB,aAAO,gBAAgB,IAAI,UAAU,QAAQsH,WAAU,KAAK,SAAS,CAAC;AAAA,IACxE;AACA,QAAI,QAAQ,SAAS,GAAG;AACtB,aAAOoK,SAAUpK,WAAU,KAAK,SAAS,CAAC;AAAA,IAC5C;AACA,WAAOc,UAAU,MAAM,SAAS,GAAG,MAAMsJ,SAAUpK,WAAU,KAAK,SAAS,CAAC,CAAC;AAAA,EAC/E;AAAA,EACA,WAAWmK;AAAA,EACX,QAAQ,MAAMC,SAAU,GAAG;AAC7B,CAAC;AA+GD,IAAM,kBAAkB,UAAQ,IAAI,SAAS,KAAK,gBAAgB,UAAU,IAAI,CAAC,GAAG3I,MAAM,CAAC,CAACpH,SAAQ,CAAC,MAAM,CAAC,GAAG0G,SAAQ1G,OAAM,CAAC,CAAC,CAAC,CAAC;AAkDjI,IAAM2pB,SAAqB,oBAAI,SAAuB,sBAAsB,gCAAgB,CAAC,CAAC;AAuF9F,IAAMzsB,SAAO,OAAK,IAAI,SAASA,OAAO,CAAC,CAAC;AA6CxC,IAAM,OAAO,CAAC,GAAG,QAAQ,MAAM0c,SAAQ,MAAM,IAAI,SAAS,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC;AAGnF,IAAM,aAAa,CAAC,GAAG,QAAQ,MAAM;AACnC,MAAI,CAAC,OAAO,CAAC,GAAG;AACd,WAAO,WAAW,CAAC;AAAA,EACrB;AACA,SAAO,SAAS;AAAA,IACd,SAAS,CAAAta,WAAS;AAChB,YAAM,CAAC,OAAO,SAAS,IAAI,eAAe,GAAGA,QAAO,QAAQ,GAAG,GAAGA,OAAM,MAAM;AAC9E,UAAI,WAAW,SAAS,GAAG;AACzB,eAAO,KAAK,MAAM,SAAS,GAAG+J,IAAK,KAAK,CAAC;AAAA,MAC3C;AACA,aAAO,WAAW,OAAO,QAAQ,CAAC;AAAA,IACpC;AAAA,IACA,WAAWnM;AAAA,IACX,QAAQ,MAAM,WAAW,CAAC;AAAA,EAC5B,CAAC;AACH;AAGA,IAAM,iBAAiB,CAAC,GAAGmB,QAAO,QAAQ,GAAG,OAAOpC,YAAW;AAC7D,MAAI,UAAUA,SAAQ;AACpB,WAAO,CAAC,GAAGkD,OAAM,CAAC;AAAA,EACpB;AACA,QAAM,KAAK,EAAE,GAAG,KAAKd,QAAOgK,WAAY,KAAK,CAAC,CAAC;AAC/C,MAAI,OAAO,EAAE,GAAG;AACd,WAAO,eAAe,IAAIhK,QAAO,QAAQ,GAAG,QAAQ,GAAGpC,OAAM;AAAA,EAC/D;AACA,SAAO,CAAC,IAAI,KAAKoC,QAAO,KAAO,QAAQ,CAAC,CAAC,CAAC;AAC5C;AAGA,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,YAAY;AACvD,QAAM,aAAa,KAAK,UAAU,IAAI,GAAG,iBAAiB,YAAY;AAAA,IACpE,WAAW,WAAS,UAAU,QAAQ,UAAU,KAAK,CAAC;AAAA,IACtD,WAAW,CAAC,CAAC,WAAW,CAAC,MAAMub,SAAU,MAAM;AAC7C,YAAM,eAAe;AAAA,QACnB,KAAK,KAAK,WAAW1T,QAAO,UAAU,CAAC;AAAA,MACzC;AACA,YAAM,YAAY;AAAA,QAAKnF,MAAO,MAAM;AAClC,gBAAM,MAAM,aAAa;AACzB,uBAAa,MAAM5B,OAAM;AACzB,iBAAO;AAAA,QACT,CAAC;AAAA;AAAA;AAAA,QAGDsH,UAAU,CAAApI,WAAS,WAAWA,MAAK,CAAC;AAAA,MAAC;AACrC,YAAMmoB,eAAc,gBAAgB;AACpC,YAAM,mBAAmB,KAAK,WAAWvX,UAAWuX,YAAW,GAAG,OAAO,UAAU,QAAQ,UAAU,CAAC,CAAC,CAAC,CAAC;AACzG,aAAO/f,UAAU,gBAAgB,gBAAgB,GAAG,CAAC,CAAC,cAAc,EAAE,MAAM,KAAKsJ,SAAU,aAAa,GAAG,GAAGtJ,UAAU,UAAU,GAAGwI,UAAW,WAAW,YAAY,CAAC,GAAG5F,IAAK,EAAE,CAAC,CAAC;AAAA,IACtL,CAAC;AAAA,EACH,CAAC,CAAC;AACF,SAAO,IAAI,SAAS,UAAU;AAChC,CAAC;AAGD,IAAM,aAAa,CAAC,GAAG,QAAQ,MAAMuQ,SAAQ,MAAM,IAAI,SAAS,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC;AAG/F,IAAM,mBAAmB,CAAC,GAAG,QAAQ,MAAM;AACzC,MAAI,CAAC,OAAO,CAAC,GAAG;AACd,WAAO,WAAW,CAAC;AAAA,EACrB;AACA,SAAO,SAAS;AAAA,IACd,SAAS,CAAAta,WAAS,iBAAiB,EAAE,GAAGA,MAAK,GAAG,QAAQ,CAAC;AAAA,IACzD,WAAWpC;AAAA,IACX,QAAQ,MAAM,WAAW,CAAC;AAAA,EAC5B,CAAC;AACH;AAkBA,IAAM,aAAa,CAAC,GAAG,QAAQ,MAAM0c,SAAQ,MAAM,IAAI,SAAS,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC;AAG/F,IAAM,mBAAmB,CAAC,GAAG,QAAQ,MAAM;AACzC,MAAI,CAAC,OAAO,CAAC,GAAG;AACd,WAAO,WAAW,CAAC;AAAA,EACrB;AACA,SAAO,SAAS;AAAA,IACd,SAAS,CAAAta,WAAS,KAAKslB,YAAa,qBAAqB,GAAGtlB,QAAO,QAAQ,CAAC,CAAC,GAAGmH,UAAU,CAAC,CAAC,OAAO,SAAS,MAAM,KAAK,WAAW,MAAM;AAAA,MACtI,QAAQ,MAAM,iBAAiB,OAAO,QAAQ,CAAC;AAAA,MAC/C,QAAQ,cAAY,KAAK,MAAM,QAAQ,GAAG4C,IAAK,KAAK,CAAC;AAAA,IACvD,CAAC,CAAC,CAAC,CAAC;AAAA,IACJ,WAAWnM;AAAA,IACX,QAAQ,MAAM,WAAW,CAAC;AAAA,EAC5B,CAAC;AACH;AAGA,IAAM,uBAAuB,CAAC,GAAGmB,QAAO,QAAQ,MAAM,6BAA6B,GAAGA,QAAO,GAAGA,OAAM,QAAQ,QAAQ,CAAC;AAGvH,IAAM,+BAA+B,CAAC,GAAGA,QAAO,OAAOpC,SAAQ,QAAQ,MAAM;AAC3E,MAAI,UAAUA,SAAQ;AACpB,WAAO8T,SAAU,CAAC,GAAG5G,MAAK,CAAC,CAAC;AAAA,EAC9B;AACA,SAAO,KAAK,EAAE,GAAG,KAAK9K,QAAOgK,WAAY,KAAK,CAAC,CAAC,GAAG5B,UAAU,QAAM,OAAO,EAAE,IAAI,6BAA6B,IAAIpI,QAAO,QAAQ,GAAGpC,SAAQ,QAAQ,CAAC,IAAI8T,SAAU,CAAC,IAAI/H,MAAO,KAAK3J,QAAO,KAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClN;AAMA,IAAM,iBAAiB,CAAC,GAAG,MAAM,WAAW,GAAG,WAAW,CAAC;AA0H3D,IAAMoI,YAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,SAAS,MAAM;AAAA,EAC/D,WAAWvJ;AAAA,EACX,WAAW;AACb,CAAC,CAAC;AAGF,IAAMsO,WAAU,OAAK;AACnB,QAAMgY,WAAU,cAAc;AAAA,IAC5B,SAAS,CAAAlkB,WAAS,KAAKslB,YAAapZ,SAAUlM,QAAO,OAAK,EAAE,CAAC,GAAG;AAAA,MAC9D,SAAS;AAAA,IACX,CAAC,CAAC,GAAGmH,UAAU,MAAM+c,QAAO,CAAC;AAAA,IAC7B,WAAW1T;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,SAAS8U,QAAO;AAC7B;AAGA,IAAM,eAAe,OAAK;AACxB,QAAMA,WAAU,cAAc;AAAA,IAC5B,SAAS,CAAAlkB,WAAS,KAAKslB,YAAa,EAAEtlB,MAAK,CAAC,GAAGmH,UAAU,MAAM+c,QAAO,CAAC;AAAA,IACvE,WAAW1T;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,SAAS8U,QAAO;AAC7B;AAGA,IAAM,eAAe,OAAK;AACxB,QAAMA,WAAU,cAAc;AAAA,IAC5B,SAAS,CAAAlkB,WAAS,mBAAmB,GAAGA,QAAO,GAAGA,OAAM,QAAQkkB,QAAO;AAAA,IACvE,WAAW1T;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,SAAS8U,QAAO;AAC7B;AAGA,IAAM,qBAAqB,CAAC,GAAGlkB,QAAO,OAAOrD,SAAQ,SAAS;AAC5D,MAAI,UAAUA,SAAQ;AACpB,WAAO;AAAA,EACT;AACA,SAAO,KAAK2oB,YAAa,EAAE,KAAKtlB,QAAO+I,WAAY,KAAK,CAAC,CAAC,CAAC,GAAG5B,UAAU,UAAQ,OAAO,mBAAmB,GAAGnH,QAAO,QAAQ,GAAGrD,SAAQ,IAAI,IAAI,MAAM,KAAKqD,QAAO,KAAO,KAAK,CAAC,CAAC,CAAC,GAAGiS,UAAS,WAAS,KAAK,MAAM,KAAKjS,QAAO,KAAO,KAAK,CAAC,CAAC,GAAG2P,UAAW/R,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1Q;AAaA,IAAM,cAAc,aAAW,IAAI,SAAS,OAAO;AAGnD,IAAM0nB,cAAa,CAAA5W,YAAU,IAAI,SAAS4W,YAAa5W,OAAM,CAAC;AA6B9D,IAAMvQ,QAAO,MAAM,KAAK0L,MAAK,GAAGH,SAAQ,CAACxE,SAAQlF,WAAU,MAAMkF,SAAQ;AAAA,EACvE,QAAQ,MAAMwD,MAAO1I,MAAK;AAAA,EAC1B,QAAQ,MAAMkF;AAChB,CAAC,CAAC;AAMF,IAAMyC,QAAO,MAAM,eAAekC,MAAK,GAAG,CAAC,GAAG7J,WAAU,OAAS2H,MAAO3H,MAAK,GAAG,MAAM,CAAC,CAAC;AAMxF,IAAM8H,QAAmB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC5C,SAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAGA,MAAM,CAAC,CAAC,CAAC;AACrD,CAAC;AAgCD,IAAMyQ,YAAwB,qBAAK,GAAG,CAAC,MAAM,YAAY;AACvD,QAAMe,UAAS5O,KAAI,WAAW,GAAG;AAC/B,UAAM,SAAS,OAAO,EAAEwY,SAAQ,SAAS,YAAY,EAAE,CAAC;AACxD,UAAM,WAAW,OAAO,EAAE,iBAAiB,MAAM,CAAC;AAClD,UAAM,WAAW,OAAO,EAAE,iBAAiB,MAAM,CAAC;AAClD,UAAM,SAAS,SAAS,MAAM;AAC9B,UAAM,SAAS,KAAK,UAAU,OAAO,UAAU,IAAI,CAAC,GAAG,UAAU;AAAA,MAC/D,OAAO,KAAK,UAAU,OAAO,UAAU,QAAQ,KAAK,CAAC,CAAC;AAAA,MACtD,YAAY,QAAQ;AAAA,MACpB,aAAa,QAAQ;AAAA,IACvB,CAAC,CAAC;AACF,UAAM,eAAe,UAAU,QAAQ;AAAA,MACrC,OAAO;AAAA,MACP,YAAY,OAAK,MAAM,CAAArU,UAAQyL,SAAU,MAAMzL,KAAI,CAAC;AAAA,MACpD,aAAa,CAAAlR,WAAQksB,MAAKvP,SAAU,MAAM3c,MAAI,CAAC;AAAA,IACjD,CAAC;AACD,WAAO,IAAI,SAAS,YAAY;AAAA,EAClC,CAAC;AACD,SAAOkqB,cAAavO,OAAM;AAC5B,CAAC;AAoED,IAAMiK,OAAmB,+BAAe,GAAG,CAAC,KAAKxkB,WAAU,MAAMsJ,QAAOtJ,QAAO,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC;AAkBlG,IAAM,YAAY,UAAQ4W,UAAS,IAAI,IAAI,UAAU2P,YAAW,IAAI,CAAC,IAAI,KAAK;AAM9E,IAAMuC,gBAAe,CAAAnZ,YAAU;AAC7B,SAAO,IAAI,SAASmZ,cAAe,KAAKnZ,SAAQ5G,MAAM,UAAQ,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;AAClF;AAYA,IAAM6H,YAAwB,qBAAK,UAAQ,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAYzG,SAAQ,MAAM,MAAM,CAAC,GAAG,OAAO,IAAI,OAAO,CAAC;AAGhI,IAAMA,WAAuB,qBAAK,UAAQ,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,GAAG,YAAY,SAAS,aAAaqP,UAAS,MAAM;AAAA,EAC1H,OAAO;AAAA,EACP,YAAY/b,OAAQ;AAAA,IAClB,WAAW,CAAA4B,WAASyrB,MAAKrZ,WAAYpS,MAAK,CAAC;AAAA,IAC3C,WAAW,WAAS,MAAM5B,OAAQ;AAAA,MAChC,WAAWgU;AAAA,MACX,WAAW,YAAUC,SAAU,EAAE,OAAO,MAAM,CAAC;AAAA,IACjD,CAAC,CAAC;AAAA,EACJ,CAAC;AAAA,EACD,aAAajU,OAAQ;AAAA,IACnB,WAAW,CAAA4B,WAASyrB,MAAKrZ,WAAYpS,MAAK,CAAC;AAAA,IAC3C,WAAW,YAAU,MAAM5B,OAAQ;AAAA,MACjC,WAAWgU;AAAA,MACX,WAAW,WAASC,SAAU,EAAE,OAAO,MAAM,CAAC;AAAA,IAChD,CAAC,CAAC;AAAA,EACJ,CAAC;AACH,CAAC,IAAItJ,UAAQ,MAAM,OAAKW,MAAI,MAAM,QAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAUlD,IAAM,QAAqB,+BAAe,GAAG,CAAC,KAAK/I,WAAU,MAAMA,OAAM,MAAM;AAG/E,IAAM,WAAwB,gBAAAub,SAAQ,MAAM;AAC1C,QAAM,UAAU,CAAC;AACjB,SAAO,KAAK,eAAe,QAAQ,CAAC,GAAG,UAAUxS,KAAM,OAAO,UAAQ;AACpE,YAAQ,KAAK,OAAO,IAAI,CAAC;AAAA,EAC3B,CAAC,CAAC,GAAGA,MAAI,MAAM,QAAQ,KAAK,EAAE,CAAC,CAAC;AAClC,CAAC;;;ACn3BD,IAAM+hB,QAAOA;AAMb,IAAMqB,SAAQ;;;ACwDd,IAAMC,kBAAiB;;;ACmPvB,IAAMtG,UAAS;AA4Ff,IAAMlQ,WAAUA;AA6UhB,IAAMyW,UAAS;;;ACvvBf,IAAM,UAAU;AAKhB,IAAM,WAAW;AAKjB,IAAM,UAAU;AAKhB,IAAM,YAAY;;;ACZlB,IAAM,OAAO;AAAA,EACX,MAAM;AACR;AAGA,IAAM,QAAQ;AAAA,EACZ,MAAM;AACR;AAGA,IAAM,OAAO;AAAA,EACX,MAAM;AACR;AAGA,IAAM,SAAS;AAAA,EACb,MAAM;AACR;AAGA,IAAMC,aAAY,CAAArrB,WAAS;AACzB,UAAQA,QAAO;AAAA,IACb,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAOA;AAAA,EACX;AACF;;;ACeA,IAAMsrB,QAAO;;;AC/Cb,IAAM,aAAN,MAAiB;AAAA,EACf,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAYvF,WAAU;AACpB,SAAK,WAAWA;AAChB,SAAK,QAAQ,MAAM,KAAK;AAAA,MACtB,QAAQA;AAAA,IACV,GAAG,cAAc;AAAA,EACnB;AAAA,EACA,OAAO;AACL,WAAO,aAAa,KAAK,MAAM,KAAK,OAAO,CAAC;AAAA,EAC9C;AAAA,EACA,aAAa;AACX,QAAI,KAAK,SAAS,GAAG;AACnB,aAAO;AAAA,IACT;AACA,UAAM,QAAQ,KAAK,YAAY,IAAI,KAAK,MAAM,SAAS,IAAI,KAAK,UAAU;AAC1E,WAAO,KAAK,MAAM,KAAK,KAAK;AAAA,EAC9B;AAAA,EACA,IAAItpB,QAAO;AACT,SAAK,MAAM,KAAK,OAAO,IAAIA;AAC3B,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,WAAW;AACT,QAAI,KAAK,OAAO,GAAG;AACjB,WAAK,UAAU;AACf,WAAK,MAAM,KAAK,OAAO,IAAI;AAAA,IAC7B;AAAA,EACF;AAAA,EACA,UAAU;AACR,UAAM,QAAQ,KAAK,UAAU,KAAK;AAClC,UAAM,WAAW,QAAQ,IAAI,CAAC,GAAG,KAAK,MAAM,MAAM,KAAK,WAAW,OAAO,KAAK,QAAQ,GAAG,GAAG,KAAK,MAAM,MAAM,GAAG,KAAK,OAAO,CAAC,IAAI,KAAK,MAAM,MAAM,OAAO,KAAK,OAAO;AACrK,WAAO4K,cAAa,QAAQ;AAAA,EAC9B;AAAA,EACA,YAAY;AACV,QAAI,KAAK,OAAO,KAAK,UAAU;AAC7B,WAAK,QAAQ;AAAA,IACf;AACA,SAAK,WAAW,KAAK,UAAU,KAAK,KAAK;AAAA,EAC3C;AAAA,EACA,YAAY;AACV,SAAK,QAAQ;AACb,QAAI,KAAK,UAAU,GAAG;AACpB,WAAK,WAAW;AAAA,IAClB,OAAO;AACL,WAAK,UAAU,KAAK,WAAW;AAAA,IACjC;AAAA,EACF;AACF;;;AClDA,IAAM,iBAAiB;AAKvB,IAAM,cAAc;AAKpB,IAAM,aAAa;AASnB,IAAM,aAAa;AAAA,EACjB,MAAM;AACR;AAGA,IAAM,WAAW,YAAU;AAAA,EACzB,MAAM;AAAA,EACN;AACF;AAGA,IAAM,UAAU,YAAU;AAAA,EACxB,MAAM;AAAA,EACN;AACF;;;AC5BA,IAAMO,SAAO,CAAA2jB,UAAQ;AACnB,QAAM,MAAM;AAAA,IACV,MAAMxhB,KAAI;AACR,aAAO,KAAK0G,SAAQ1G,GAAE,CAAC;AAAA,IACzB;AAAA,IACA,IAAI,QAAQ;AACV,aAAO,KAAKuF,KAAI,MAAM,CAAC;AAAA,IACzB;AAAA,IACA,WAAW,SAAS;AAClB,aAAO,KAAK8D,YAAW,OAAO,CAAC;AAAA,IACjC;AAAA,IACA,KAAKvE,OAAM;AACT,aAAO,KAAKyL,SAAQ,MAAM7K,SAAQZ,OAAM;AAAA,QACtC,WAAWnG;AAAA,QACX,WAAWT;AAAA,MACb,CAAC,CAAC,CAAC;AAAA,IACL;AAAA,IACA,MAAM;AACJ,aAAO,KAAKrK,MAAKiM,MAAK,CAAC,CAAC;AAAA,IAC1B;AAAA,IACA,KAAK,GAAG;AACN,aAAO,KAAKjM,MAAK8K,MAAK,CAAC,CAAC,CAAC;AAAA,IAC3B;AAAA,IACA,WAAWgG,SAAQ;AACjB,aAAO,KAAKe,SAAUf,SAAQ;AAAA,QAC5B,WAAWhG;AAAA,QACX,WAAWT;AAAA,MACb,CAAC,CAAC;AAAA,IACJ;AAAA,IACA,gBAAgByG,SAAQ;AACtB,aAAO,KAAK,KAAKA,SAAQqI,UAASrO,KAAI,CAAC,CAAC;AAAA,IAC1C;AAAA,IACA,KAAKtK,QAAO;AACV,aAAO,KAAKoS,WAAU,KAAKpS,QAAO0J,MAAIY,KAAI,CAAC,CAAC,CAAC;AAAA,IAC/C;AAAA,IACA,OAAOjM,QAAO;AACZ,aAAO,KAAKgU,SAAQxI,IAAGxL,MAAK,CAAC,CAAC;AAAA,IAChC;AAAA,EACF;AACA,SAAO,OAAO,OAAO8uB,OAAM,GAAG;AAChC;;;AC1CA,IAAM,gBAA6B,uBAAO,IAAI,uBAAuB;AAarE,IAAM,yBAAyB;AAK/B,IAAM,wBAAwB;AAO9B,IAAM,oBAAoB,qBAAmB;AAAA,EAC3C,MAAM;AAAA,EACN;AACF;AAGA,IAAM,mBAAmB,CAAC9uB,QAAO,oBAAoB;AAAA,EACnD,MAAM;AAAA,EACN,OAAAA;AAAA,EACA;AACF;AAGA,IAAM,oBAAoB,CAAC,SAAS,WAAW;AAC7C,SAAO,UAAQ;AACb,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK,wBACH;AACE,eAAO,QAAQ,KAAK,cAAc;AAAA,MACpC;AAAA,MACF,KAAK,uBACH;AACE,eAAO,OAAO,KAAK,OAAO,KAAK,cAAc;AAAA,MAC/C;AAAA,IACJ;AAAA,EACF;AACF;AAGA,IAAM,kBAAkB;AAAA,EACtB,IAAI,OAAK;AACX;AAGA,IAAMmL,SAAO,MAAM,KAAKA,OAAO,GAAGT,UAAQ,CAAAzJ,cAAYkK,OAAO,kBAAkBlK,SAAQ,CAAC,CAAC,GAAGoK,MAAI,UAAQ;AAAA,EACtG,CAAC,aAAa,GAAG;AAAA,EACjB;AACF,EAAE,CAAC;AAGH,IAAMkgB,SAAqB,qBAAK,GAAG,CAAC,MAAMvrB,WAAU;AAClD,SAAO0K,UAAQS,OAAO,GAAG,CAAAlK,cAAY0J,SAAQ0a,QAAO,KAAK,KAAK,WAAS,KAAK,OAAO,kBAAkB,oBAAkB,CAACnS,UAASc,SAAQ,gBAAgB,MAAM,GAAGoS,QAAOnlB,SAAQ,CAAC,GAAG,iBAAiBjB,QAAOiB,SAAQ,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAACyJ,UAAQ0b,QAAO,cAAc,GAAG,MAAM,KAAK,MAAMmF,OAAMvrB,MAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9T,CAAC;AAGD,IAAMsrB,QAAO,UAAQ5gB,UAAQS,OAAO,GAAG,CAAAlK,cAAY0J,SAAQ0a,QAAO,KAAK,KAAK,WAAS,KAAK,OAAO,kBAAkB,oBAAkB,CAAC3a,UAAQ0b,QAAO,cAAc,GAAG,MAAMkF,MAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAACtrB,QAAO,mBAAmB,CAACsN,IAAG0G,SAAQ,gBAAgB,MAAM,GAAGhU,MAAK,GAAG,kBAAkBiB,SAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;ACzEzS,IAAMisB,WAAU;AAKhB,IAAM,UAAU;AAKhB,IAAM,SAAS;AASf,IAAM,OAAO,eAAa;AAAA,EACxB,MAAMA;AAAA,EACN;AACF;AAGA,IAAM,OAAO,CAAAvrB,YAAU;AAAA,EACrB,MAAM;AAAA,EACN,OAAAA;AACF;AAGA,IAAMiB,OAAM,aAAW;AAAA,EACrB,MAAM;AAAA,EACN;AACF;;;ACjCA,IAAMA,OAAM,MAAMzB,MAAKiM,MAAK,CAAC;AAG7B,IAAM2G,aAAY,CAAApS,WAAS2Y,UAASvG,WAAYpS,MAAK,GAAGsK,KAAI;;;ACJ5D,IAAM,kBAAkB;AAKxB,IAAM,kBAAkB;AASxB,IAAM,cAAc;AAAA,EAClB,MAAM;AACR;AAGA,IAAM,cAAc;AAAA,EAClB,MAAM;AACR;;;ACrBA,IAAM,gBAAgB;AAKtB,IAAM,iBAAiB;AAKvB,IAAM,eAAe;AAKrB,IAAM,eAAe;AAKrB,IAAM,gBAAgB;AAetB,IAAM,YAAY;AAAA,EAChB,MAAM;AACR;AAGA,IAAM,aAAa;AAAA,EACjB,MAAM;AACR;AAGA,IAAM,WAAW;AAAA,EACf,MAAM;AACR;AAGA,IAAM,WAAW,iBAAe;AAAA,EAC9B,MAAM;AAAA,EACN;AACF;AAGA,IAAM,YAAY,gBAAc;AAAA,EAC9B,MAAM;AAAA,EACN;AACF;;;AC3DA,IAAM8iB,gBAAe;AAKrB,IAAMC,gBAAe;AAKrB,IAAMC,iBAAgB;AAWtB,IAAMC,YAAW;AAAA,EACf,MAAMH;AACR;AAGA,IAAMI,YAAW,iBAAe;AAAA,EAC9B,MAAMH;AAAA,EACN;AACF;AAGA,IAAMI,aAAY,gBAAc;AAAA,EAC9B,MAAMH;AAAA,EACN;AACF;;;AC7BA,IAAM,gBAAgB;AAGtB,IAAM,aAA0B,uBAAO,IAAI,aAAa;AAGxD,IAAM,eAAe;AAAA,EACnB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAGA,IAAM,WAAN,MAAe;AAAA,EACb,CAAC,UAAU,IAAI;AAAA,EACf,YAAY7c,OAAM;AAChB,SAAK,OAAOA;AAAA,EACd;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM9P,SAAQ,CAAAA,WAAS,IAAI,SAAS0R,SAAQ1R,MAAK,CAAC;AASlD,IAAMpB,QAAO,UAAQ2c,SAAQ,MAAM,KAAK,IAAI;AAG5C,IAAMjb,OAAmB,oBAAI,SAAuB,gBAAAzB,MAAqB,gBAAAiM,MAAK,CAAC,CAAC;AAMhF,IAAM2G,cAAY,CAAApS,WAAS,IAAI,SAASoS,WAAY,KAAKpS,QAAO0J,MAAMY,KAAI,CAAC,CAAC,CAAC;AAe7E,IAAM,WAAW,UAAQwO,YAAW,MAAM;AAAA,EACxC,WAAW,CAAA9Y,WAAS,MAAQ+R,iBAAgB/R,MAAK,GAAG;AAAA,IAClD,QAAQ,MAAMiB;AAAA,IACd,QAAQmR;AAAA,EACV,CAAC;AAAA,EACD,WAAWzR;AACb,CAAC;AAwBD,IAAMvC,UAAqB,qBAAK,GAAG,CAAC,MAAM;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AACF,MAAMA,OAAQ,KAAK,MAAM;AAAA,EACvB,WAAW,CAAA4B,WAAS,MAAQ+R,iBAAgB/R,MAAK,GAAG;AAAA,IAClD,QAAQ;AAAA,IACR,QAAQ;AAAA,EACV,CAAC;AAAA,EACD;AACF,CAAC,CAAC;AAmBF,IAAM6J,MAAK,CAAAxL,WAAS,IAAI,SAASgU,SAAQxI,IAAKxL,MAAK,CAAC,CAAC;;;ACjFrD,IAAM,kBAAkB;AAGxB,IAAMqvB,gBAA4B,uBAAO,IAAI,eAAe;AAG5D,IAAM,iBAAiB;AAAA,EACrB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAGA,IAAM,aAAN,MAAiB;AAAA,EACf,CAACA,aAAY,IAAI;AAAA,EACjB,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,WAAW,OAAK,YAAY,GAAGA,aAAY,KAAKnW,UAAS,CAAC;AAGhE,IAAM,mBAAmB;AAGzB,IAAM,aAAa,UAAQ,OAAO,iBAAiB,IAAI,CAAC;AAGxD,IAAM,mBAAmB,UAAQ;AAC/B,QAAM,cAAc,OAAK,SAAS;AAAA,IAChC,SAAS,CAAA3V,WAAS;AAChB,YAAM8B,QAAOuE,WAAU,GAAGrG,MAAK;AAC/B,aAAOmH,UAAU,MAAMrF,KAAI,GAAG,MAAM,YAAYA,KAAI,CAAC;AAAA,IACvD;AAAA,IACA,WAAWlE;AAAA,IACX,QAAQ,MAAMwR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,OAAO2c,WAAU,IAAI,GAAG,YAAYlsB,OAAQ,CAAC,CAAC,CAAC;AACvE;AAGA,IAAM+Q,kBAAiB,CAAC,SAAS,YAAY0I,QAAO1I,gBAAiB,SAAS,OAAO,CAAC;AAGtF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS,gBAAgB,MAAM,MAAM+D,QAAS,CAAC;AAG7F,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAMgQ,cAAa9d,WAAU,sBAAsB,MAAM,MAAM8d,SAAQ,GAAG,OAAKnoB,OAAM,GAAG;AAAA,EAC1I,QAAQqN;AAAA,EACR,SAASnB;AACX,CAAC,CAAC,CAAC;AAGH,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAM,MAAMic,cAAa;AAC3E,QAAMQ,SAAQ5b,KAAI,CAAC3B,OAAO,GAAGA,OAAO,WAAW,GAAGA,OAAO/H,OAAQ,CAAC,GAAGglB,QAAOF,SAAQ,GAAG/c,OAAO,KAAK,GAAGA,OAAO,KAAK,CAAC,CAAC;AACpH,SAAO,KAAK0d,YAAWH,MAAK,GAAGhe,UAAQ,CAAC,CAAC,SAAS,eAAe,eAAe,gBAAgB,UAAU,YAAY,MAAM;AAC1H,UAAM,kBAAkB,cAAc;AAAA,MACpC,SAAS,CAAAnH,WAASmH,UAAUme,YAAa,KAAK,SAAS0C,OAAM,KAAKhoB,MAAK,CAAC,GAAG2c,MAAO,MAAM,WAAW3c,MAAK,CAAC,CAAC,CAAC,GAAG,MAAM,eAAe;AAAA,MACnI,WAAW,CAAA5B,WAASknB,YAAa0C,OAAM,SAAS,KAAK5pB,MAAK,CAAC,CAAC;AAAA,MAC5D,QAAQ,MAAMknB,YAAa0C,OAAM,SAAS3oB,KAAI,WAAW,CAAC,CAAC;AAAA,IAC7D,CAAC;AACD,UAAM,kBAAkB,KAAK0iB,WAAU,eAAeliB,OAAQ,CAAC,GAAGsH,UAAU,eAAa;AACvF,UAAI,WAAW,SAAS,GAAG;AACzB,eAAO,KAAKkF,KAAI,UAAU,IAAI,GAAGsD,UAAWc,SAAU,KAAK,MAAM,SAAS,GAAGtJ,UAAU,MAAM,eAAe,CAAC,CAAC,CAAC,CAAC;AAAA,MAClH;AACA,aAAO,KAAK4gB,MAAO,OAAO,GAAGjgB,MAAM,YAAU;AAC3C,gBAAQ,OAAO,MAAM;AAAA,UACnB,KAAK6hB,UACH;AACE,mBAAO,KAAKrE,YAAajZ,KAAI,UAAU,IAAI,CAAC,GAAGsD,UAAW,MAAM,OAAO,QAAQ,CAAC,GAAGA,UAAW2V,YAAahe,MAAI,YAAY,CAAC,CAAC,GAAGH,UAAU,UAAQ,OAAOiI,QAAS,eAAe,CAAC;AAAA,UACpL;AAAA,UACF,KAAK,SACH;AACE,mBAAOoB,WAAY,OAAO,KAAK;AAAA,UACjC;AAAA,UACF,KAAK,QACH;AACE,gBAAI,OAAO,OAAO,SAAS,iBAAiB;AAC1C,qBAAO,KAAKlJ,MAAI,QAAQ,GAAGQ,MAAM,UAAQ,OAAOwd,YAAa,KAAKjZ,KAAI,eAAe,WAAW,GAAGsD,UAAWtD,KAAI,cAAc,IAAI,CAAC,CAAC,CAAC,IAAI,KAAKiZ,YAAa,KAAKjZ,KAAI,eAAe,WAAW,GAAGsD,UAAWtD,KAAI,cAAc,IAAI,CAAC,CAAC,CAAC,GAAGlF,UAAU,MAAM,eAAe,CAAC,CAAC,GAAGqjB,OAAQ;AAAA,YACxR;AACA,mBAAO,KAAKne,KAAI,eAAe,OAAO,MAAM,GAAGsD,UAAWtD,KAAI,cAAc,IAAI,CAAC,GAAGiZ,WAAY;AAAA,UAClG;AAAA,QACJ;AAAA,MACF,CAAC,CAAC;AAAA,IACJ,CAAC,GAAGkF,OAAQ;AACZ,UAAMrrB,WAAU,WAAS,eAAe,KAAK,KAAK;AAClD,UAAM,sBAAsB,CAAC,WAAW,eAAeiE,WAAU;AAC/D,YAAM,WAAW,KAAKiJ,KAAI,UAAU,KAAK,GAAGsD,UAAWtD,KAAI,cAAc,KAAK,CAAC,GAAGsD,UAAW,KAAK,iBAAiB,aAAa,UAAY,IAAI,CAAC,GAAG,iBAAiB,KAAOoF,QAAO3R,MAAK,CAAC,CAAC,CAAC;AAC3L,YAAM,aAAa,CAAC,WAAW,GAAG,MAAM,KAAKiJ,KAAI,eAAejF,SAAU,SAAS,CAAC,GAAGuI,UAAW7H,MAAMR,MAAI,aAAa,GAAG,YAAU;AACpI,gBAAQ,OAAO,MAAM;AAAA,UACnB,KAAK,iBACH;AACE,mBAAO,KAAKiC,KAAI,CAACjC,MAAI,QAAQ,GAAG,UAAU,KAAKnI,SAAQuJ,MAAO,CAAC,CAAC,GAAGqM,QAAO3R,MAAK,CAAC,CAAC,CAAC,GAAG0E,MAAM,CAAC,CAAC,aAAakkB,YAAWC,cAAa,MAAM;AACtI,oBAAM,UAAU,KAAK,GAAG,MAAQ;AAAA,gBAC9B,QAAQ,MAAMhkB,IAAGiC,OAAM,CAAC,CAAC;AAAA,gBACzB,QAAQ,CAAAgiB,OAAKtkB,MAAOsC,OAAM,CAAC,GAAGD,MAAKiiB,EAAC,CAAC;AAAA,cACvC,CAAC,CAAC;AACF,kBAAI,aAAa;AACf,uBAAO,KAAK,MAAM,OAAO,GAAG/kB,UAAU,MAAM,oBAAoB6kB,YAAWC,gBAAe7oB,MAAK,CAAC,CAAC;AAAA,cACnG;AACA,qBAAO,oBAAoB4oB,YAAWC,gBAAe7oB,MAAK;AAAA,YAC5D,CAAC,GAAGonB,OAAQ;AAAA,UACd;AAAA,UACF,KAAK,iBACH;AACE,mBAAO,KAAKljB,MAAI,QAAQ,GAAGQ,MAAM,iBAAe,cAAc,MAAMG,IAAGiC,OAAM,CAAC,CAAC,CAAC,IAAIkF,KAAM,GAAGob,OAAQ;AAAA,UACvG;AAAA,QACJ;AAAA,MACF,CAAC,CAAC,GAAGA,OAAQ;AACb,aAAOA,QAASjS,UAAS7Q,MAAK,SAAS,GAAGA,MAAK,aAAa,GAAG;AAAA,QAC7D,YAAY,CAAC,UAAU,MAAM,KAAK6H,WAAU,aAAa,GAAGI,UAAW,KAAK2K,SAAU,MAAM,QAAQ,GAAGxS,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,WAAW,WAAW,GAAG+B,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,QACpK,aAAa,CAAC,cAAc,MAAMsN,kBAAiBmD,SAAU,MAAM,YAAY,GAAG;AAAA,UAChF,WAAW,CAAAlc,WAAS5B,OAAM0T,gBAAe9R,MAAK,GAAG;AAAA,YAC/C,QAAQ,MAAM,KAAK,SAAS4pB,OAAM3oB,KAAI,WAAW,CAAC,GAAGyV,aAAYnF,UAAW,KAAKjI,MAAK,SAAS,GAAGI,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,WAAW,WAAW,GAAG+B,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,YAC/J,SAAS,CAAAzL,WAAS,KAAK,SAAS4pB,OAAM,KAAK5pB,MAAK,CAAC,GAAG0W,aAAYnF,UAAW,KAAKjI,MAAK,SAAS,GAAGI,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,WAAW,WAAW,GAAG+B,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,UAChK,CAAC;AAAA,UACD,WAAW,OAAK,KAAK,SAASme,OAAM3oB,KAAI,WAAW,CAAC,GAAGyV,aAAYnF,UAAW,KAAKjI,MAAK,SAAS,GAAGI,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,WAAW,WAAW,GAAGY,MAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,QACtK,CAAC;AAAA,MACH,CAAC,CAAC;AAAA,IACJ;AACA,WAAOmf,cAAa,KAAK,MAAMkE,YAAW,OAAO,eAAe,GAAG,KAAO/W,aAAYrF,UAAW,KAAK,iBAAiB,aAAa,UAAY,IAAI,CAAC,GAAG,iBAAiB,KAAOqF,aAAY7N,UAAU,eAAa,KAAK6N,YAAW7V,SAAQ0K,MAAK,CAAC,CAAC,GAAG1C,UAAU,mBAAiB,KAAK/D,QAAO0E,MAAM,CAAA1E,WAAS,IAAI,WAAW,oBAAoB,WAAW,eAAeA,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,EACzX,CAAC,CAAC;AACJ,CAAC;AAGD,IAAM2G,MAAkB,qBAAK,GAAG,CAAC,MAAMtN,WAAUqL,MAAI,MAAM,MAAMrL,MAAK,CAAC;AAGvE,IAAM,SAAS,CAAC,UAAU,eAAe,OAAOkV,aAAY,QAAM;AAChE,WAAS,EAAE;AACX,SAAO9H,MAAK;AACd,GAAG,YAAY;AAGf,IAAM4H,eAAc,CAAC,UAAU,eAAe,OAAO,KAAKb,gBAAiBsS,SAAQ,YAAY,GAAG,WAASkF,UAAS,KAAK,CAAC,GAAGjhB,UAAU,YAAU,KAAK+R,SAAQ,GAAG/R,UAAU,CAAA+R,aAAW,KAAK,SAAStR,OAAO,OAAK,KAAK,SAAW,CAAC,GAAGT,UAAU,CAAA4gB,UAAQC,OAAQ,QAAQD,KAAI,CAAC,GAAG5Y,SAAQgc,gBAAejS,QAAO,CAAC,EAAE,KAAK,CAAArK,UAAQ;AAC1T,MAAIjL,WAAUiL,KAAI,GAAG;AACnB,QAAI,CAACmB,eAAcnB,MAAK,KAAK,GAAG;AAC9B,YAAMuB,QAAOvB,MAAK,KAAK;AAAA,IACzB;AAAA,EACF;AACF,CAAC,CAAC,CAAC,GAAG/G,MAAM,MAAM;AAChB,QAAM6O,QAAO,KAAKoR,MAAO,MAAM,GAAG5gB,UAAUxJ,KAAI,GAAGnB,QAAQ;AAAA,IACzD,WAAW,gBAAc,KAAK8oB,YAAa8C,UAAS,MAAM,CAAC,GAAGzY,UAAW,MAAQ,YAAY;AAAA,MAC3F,QAAQ,MAAMP;AAAA,MACd,QAAQxR;AAAA,IACV,CAAC,CAAC,CAAC;AAAA,IACH,WAAW,CAAAmB,WAAS,KAAK,MAAMA,MAAK,GAAGoI,UAAU,MAAMwP,KAAI,CAAC;AAAA,EAC9D,CAAC,GAAG6T,OAAQ;AACZ,SAAO7T;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGkR,eAAgBsE,YAAW;AAGnC,IAAM,iBAAiB,CAAC,UAAU,eAAe,OAAO,KAAKvb,gBAAiBsS,SAAQ,YAAY,GAAG,WAASkF,UAAS,KAAK,CAAC,GAAGjhB,UAAU,YAAU,KAAK+R,SAAQ,GAAG/R,UAAU,CAAA+R,aAAW,KAAKzX,MAAO,MAAM,SAASmG,OAAO,OAAK,KAAK,SAAW,CAAC,GAAGT,UAAU,CAAA4gB,UAAQC,OAAQ,QAAQD,KAAI,CAAC,GAAG5Y,SAAQgc,gBAAejS,QAAO,CAAC,EAAE,KAAK,CAAArK,UAAQ;AAC1U,MAAIjL,WAAUiL,KAAI,GAAG;AACnB,QAAI,CAACmB,eAAcnB,MAAK,KAAK,GAAG;AAC9B,YAAMuB,QAAOvB,MAAK,KAAK;AAAA,IACzB;AAAA,EACF;AACF,CAAC,CAAC,CAAC,CAAC,GAAG/G,MAAMtL,OAAM;AAAA,EACjB,QAAQ,cAAY;AAClB,UAAMma,QAAO,KAAKoR,MAAO,MAAM,GAAG5gB,UAAUxJ,KAAI,GAAGnB,QAAQ;AAAA,MACzD,WAAW,gBAAcmT,UAAW2V,YAAa8C,UAAS,MAAM,CAAC,GAAG,MAAQ,YAAY;AAAA,QACtF,QAAQ,MAAMhZ;AAAA,QACd,QAAQxR;AAAA,MACV,CAAC,CAAC;AAAA,MACF,WAAW,CAAAmB,WAAS,KAAK,MAAMA,MAAK,GAAGoI,UAAU,MAAMwP,KAAI,CAAC;AAAA,IAC9D,CAAC,GAAG6T,OAAQ;AACZ,WAAO,KAAK2B,aAAYxV,KAAI,GAAGjD,UAAS,QAAQ,CAAC;AAAA,EACnD;AAAA,EACA,SAAS,YAAU8W,QAAO,KAAKpC,UAAS,MAAM,GAAGre,IAAK,MAAM,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG8d,aAAY;AAGrB,IAAMlW,eAAc,CAAC,UAAU,eAAe,OAAO,eAAe,CAAA4Z,UAAQ,MAAQ,SAASA,KAAI,GAAG;AAAA,EAClG,QAAQ,MAAMthB,MAAKmF,KAAM;AAAA,EACzB,QAAQlF;AACV,CAAC,GAAG,YAAY;AAGhB,IAAM,cAAc,CAAC,UAAU,eAAe,OAAO,KAAK0G,gBAAiBsS,SAAQ,YAAY,GAAG,WAASkF,UAAS,KAAK,CAAC,GAAGjhB,UAAU,YAAU,KAAK+R,SAAQ,GAAG/R,UAAU,CAAA+R,aAAW,KAAK,SAAStR,OAAO,OAAK,KAAK,SAAW,CAAC,GAAGT,UAAU,CAAA4gB,UAAQC,OAAQ,QAAQD,KAAI,CAAC,GAAG5Y,SAAQgc,gBAAejS,QAAO,CAAC,EAAE,KAAK,CAAArK,UAAQ;AAC1T,MAAIjL,WAAUiL,KAAI,GAAG;AACnB,QAAI,CAACmB,eAAcnB,MAAK,KAAK,GAAG;AAC9B,YAAMuB,QAAOvB,MAAK,KAAK;AAAA,IACzB;AAAA,EACF;AACF,CAAC,CAAC,CAAC,GAAGc,UAAW/H,OAAO,KAAK,CAAC,GAAGT,UAAU,SAAO,KAAKG,MAAI,GAAG,GAAGQ,MAAM,CAAA4a,YAAUA,UAASrjB,KAAM,IAAI,KAAK0oB,MAAO,MAAM,GAAG5gB,UAAUxJ,KAAI,GAAGO,SAAU,MAAM,KAAKmO,KAAI,KAAK,IAAI,GAAGsD,UAAWyY,UAAS,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG9O,SAAQnS,UAAQ,uBAAuB,CAAC;AAG/P,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAMmT,SAAQ,MAAM;AACrE,QAAM,YAAY,SAAO,SAAS;AAAA,IAChC,SAAS,CAAAta,WAAS;AAChB,YAAM,WAAW,IAAI,SAASA,OAAM;AACpC,UAAI,YAAY,GAAG;AACjB,cAAM,CAAC,IAAI,EAAE,IAAI,KAAKA,QAAO4I,SAAQ,IAAI,IAAI,MAAM,CAAC;AACpD,eAAO7G,SAAQ,KAAK,KAAKsE,WAAU,EAAE,CAAC,GAAG,EAAE;AAAA,MAC7C;AACA,aAAO,UAAU,KAAK,KAAKA,WAAUrG,MAAK,CAAC,CAAC;AAAA,IAC9C;AAAA,IACA,WAAWpC;AAAA,IACX,QAAQ,MAAMmE,SAAQ,KAAKlC,OAAQ,CAAC;AAAA,EACtC,CAAC;AACD,QAAMkC,WAAU,CAAC,QAAQ,aAAa,OAAO4N,UAAW,MAAM,QAAQ,GAAG,gBAAgB,CAAC,GAAGoc,WAAU,EAAE,MAAM,CAAC,CAAC;AACjH,SAAO,IAAI,WAAW,KAAKA,WAAU,IAAI,GAAG,aAAa,UAAUlsB,OAAQ,CAAC,CAAC,CAAC,CAAC;AACjF,CAAC,CAAC;AAGF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,GAAG,eAAe,KAAK,MAAM,kBAAkB,GAAG,UAAU,GAAGiI,MAAM,CAAA6Y,WAASA,OAAM,IAAI,WAAS,YAAYyL,WAAU,OAAO;AAAA,EAC1K,UAAU;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGN,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM,eAAe,KAAK,MAAM,yBAAyB,UAAU,GAAGtkB,MAAM,CAAA4G,YAAU,YAAYvH,UAAQmS,QAAO5K,OAAM,GAAG0d,UAAS,CAAC,CAAC,CAAC,CAAC;AAGtL,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,GAAG,eAAejlB,UAAU+b,SAAU,UAAU,GAAG,YAAU,KAAK3Z,KAAI,MAAM,KAAK;AAAA,EACrI,QAAQ;AACV,GAAG,MAAMmf,WAAU,MAAM,CAAC,CAAC,GAAG9Y,KAAM,MAAMoF,YAAW,oBAAoB,MAAM,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAG1F,IAAM,2BAAwC,qBAAK,GAAG,CAAC,MAAM,eAAelN,MAAMukB,UAAS,MAAM,UAAU,GAAG3D,UAAS,CAAC;AAGxH,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,YAAY;AACrD,MAAI,QAAQ,aAAa,aAAa;AACpC,WAAO,gBAAgB,IAAI;AAAA,EAC7B,WAAW,QAAQ,aAAa,YAAY;AAC1C,WAAO,eAAe,MAAM,QAAQ,QAAQ;AAAA,EAC9C,WAAW,QAAQ,aAAa,WAAW;AACzC,WAAO,cAAc,MAAM,QAAQ,QAAQ;AAAA,EAC7C;AACA,QAAM,QAAQ,kBAAkB,MAAM,OAAO;AAC7C,SAAO,IAAI,WAAWb,cAAe/f,MAAM,OAAO,CAAA2iB,WAAS;AACzD,UAAMvG,WAAU,KAAKoB,YAAayC,MAAO0C,MAAK,CAAC,GAAGtjB,UAAU3K,OAAQ;AAAA,MAClE,WAAW,CAAA4B,WAAS,KAAK+R,iBAAgB/R,MAAK,GAAG,MAAQ;AAAA,QACvD,QAAQ,MAAMgR;AAAA,QACd,QAAQoB;AAAA,MACV,CAAC,CAAC;AAAA,MACF,WAAW,CAAA/T,WAAS0K,UAAU,MAAMc,IAAGxL,MAAK,CAAC,GAAG,MAAMynB,QAAO;AAAA,IAC/D,CAAC,CAAC,CAAC;AACH,WAAOA;AAAA,EACT,CAAC,CAAC,CAAC;AACL,CAAC;AAGD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,YAAY;AAC3D,MAAI,QAAQ,aAAa,YAAY;AACnC,WAAO,qBAAqB,MAAM,QAAQ,QAAQ;AAAA,EACpD,WAAW,QAAQ,aAAa,WAAW;AACzC,WAAO,oBAAoB,MAAM,QAAQ,QAAQ;AAAA,EACnD;AACA,QAAM,QAAQoI,SAAQ,MAAM,OAAO;AACnC,SAAO,IAAI,WAAWzE,cAAe/f,MAAM,OAAO,CAAA2iB,WAAS;AACzD,UAAMvG,WAAU,KAAKoB,YAAayC,MAAO0C,MAAK,CAAC,GAAGtjB,UAAU3K,QAAQ;AAAA,MAClE,OAAO,MAAM4S;AAAA,MACb,WAAWoB;AAAA,MACX,WAAW,CAAA/T,WAAS,KAAK,MAAMA,MAAK,GAAG0K,UAAU,MAAM+c,QAAO,CAAC;AAAA,IACjE,CAAC,CAAC,CAAC;AACH,WAAOA;AAAA,EACT,CAAC,CAAC,CAAC;AACL,CAAC;AACD,IAAM,uBAAoC,qBAAK,GAAG,CAAC,MAAM6B,cAAa;AACpE,QAAM,QAAQnV,gBAAiBoR,UAAS+D,SAAQ,GAAG,CAAA0E,WAASrC,UAASqC,MAAK,CAAC;AAC3E,SAAO,IAAI,WAAW,aAAa,OAAOsB,WAAU,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAMhG,cAAa;AACnE,QAAM,QAAQnV,gBAAiBgY,SAAU7C,SAAQ,GAAG,CAAA0E,WAASrC,UAASqC,MAAK,CAAC;AAC5E,SAAO,IAAI,WAAW,aAAa,OAAOsB,WAAU,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAMhG,cAAa;AAC9D,QAAM,QAAQnV,gBAAiBoR,UAAS+D,SAAQ,GAAG,CAAA0E,WAASrC,UAASqC,MAAK,CAAC;AAC3E,SAAO,IAAI,WAAW,aAAa,OAAOsB,WAAU,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACxE,CAAC;AACD,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAMhG,cAAa;AAC7D,QAAM,QAAQnV,gBAAiBgY,SAAU7C,SAAQ,GAAG,CAAA0E,WAASrC,UAASqC,MAAK,CAAC;AAC5E,SAAO,IAAI,WAAW,aAAa,OAAOsB,WAAU,KAAK,MAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9E,CAAC;AACD,IAAM,kBAAkB,UAAQ;AAC9B,QAAM,QAAQO,SAAQ,MAAM;AAAA,IAC1B,UAAU;AAAA,EACZ,CAAC;AACD,SAAO,IAAI,WAAWzE,cAAe/f,MAAM,OAAO,CAAA2iB,WAAS;AACzD,UAAMvG,WAAU,KAAKoB,YAAayC,MAAO0C,MAAK,CAAC,GAAGtjB,UAAU3K,QAAQ;AAAA,MAClE,OAAO,MAAM4S;AAAA,MACb,WAAWoB;AAAA,MACX,WAAW,CAAA/T,WAAS0K,UAAU,MAAM1K,MAAK,GAAG,MAAMynB,QAAO;AAAA,IAC3D,CAAC,CAAC,CAAC;AACH,WAAOA;AAAA,EACT,CAAC,CAAC,CAAC;AACL;AAGA,IAAM,eAAe,CAAC5K,SAAQ,kBAAkB;AAC9C,QAAM,WAAW,CAAC,OAAO,QAAQ;AAC/B,UAAM,YAAY,CAAAyO,UAAQ,KAAKzgB,MAAI,GAAG,GAAGsI,KAAMiT,OAAM,GAAGlT,UAAW/H,OAAO,CAAC,GAAGT,UAAU,CAAAzJ,cAAY,KAAKsqB,OAAQ,OAAO,CAACD,OAAMrqB,SAAQ,CAAC,GAAGiS,UAAWtD,KAAI,KAAK3O,SAAQ,CAAC,GAAGiS,UAAWkT,QAAOnlB,SAAQ,CAAC,CAAC,CAAC,GAAGyR,SAAQmW,WAAY;AAC/N,WAAO,cAAc;AAAA,MACnB,SAAS,CAAAtlB,WAAS,KAAK4H,OAAO,GAAGT,UAAU,CAAAzJ,cAAY,KAAKsqB,OAAQ,OAAO,CAACjpB,OAAMiB,MAAK,GAAGtC,SAAQ,CAAC,GAAGyJ,UAAU,WAAS,KAAKkF,KAAI,KAAK3O,SAAQ,GAAGif,MAAO,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGxN,SAAQmW,aAAcne,UAAU,MAAM,SAAS,OAAO,GAAG,CAAC,CAAC;AAAA,MACtO,WAAW,WAAS,UAAUqJ,YAAY,KAAK,CAAC;AAAA,MAChD,QAAQ,MAAM,UAAUnR,IAAK;AAAA,IAC/B,CAAC;AAAA,EACH;AACA,QAAM,WAAW,WAAS;AACxB,UAAM6kB,WAAU,KAAKoB,YAAayC,MAAO,KAAK,CAAC,GAAG5gB,UAAU,CAAC,CAAC4gB,OAAMrqB,SAAQ,MAAMiS,UAAW2V,YAAa7U,SAAU/S,WAAU,MAAM,CAAC,GAAGlB,QAAQurB,OAAM;AAAA,MACpJ,OAAO,MAAM3Y;AAAA,MACb,WAAWoB;AAAA,MACX,WAAW,CAAA/T,WAAS,KAAK,MAAMA,MAAK,GAAG0K,UAAU,MAAM+c,QAAO,CAAC;AAAA,IACjE,CAAC,CAAC,CAAC,CAAC;AACJ,WAAOA;AAAA,EACT;AACA,SAAO2D,cAAe,KAAKvO,SAAQnS,UAAU,WAAS,KAAKS,OAAO,GAAGgI,KAAM,CAAAxQ,WAASqR,SAAUrR,QAAO,MAAM,CAAC,GAAG+H,UAAU,CAAA/H,WAAS,KAAKwI,OAAOxI,MAAK,GAAG+H,UAAU,SAAO,KAAK,eAAe,OAAO,SAAS,OAAO,GAAG,CAAC,GAAG,WAAa6N,WAAU,CAAC,GAAGjL,IAAK,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChR;AAGA,IAAMkI,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAMC,eAAc,MAAM,CAAA9T,WAAS5B,OAAM0T,gBAAe9R,MAAK,GAAG;AAAA,EAC3G,QAAQ;AAAA,EACR,SAASoS;AACX,CAAC,CAAC,CAAC;AAGH,IAAM0B,iBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,IAAI,WAAW,KAAK6Z,WAAU,IAAI,GAAG7Z,eAAgB,CAAA9T,WAAS2tB,WAAU,EAAE3tB,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAG5I,IAAMiU,aAAyB,qBAAK,GAAG,CAAC,MAAM,OAAO,KAAK,MAAMJ,UAAS,WAAS,KAAK,GAAG,KAAK,GAAG,UAAU,MAAMrU,OAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAGjI,IAAM0U,kBAA8B,qBAAK,GAAG,CAAC,MAAM,OAAO,KAAK,MAAMJ,eAAc,CAAA9T,WAAS,KAAK,GAAGA,MAAK,GAAG,UAAU,MAAMoS,YAAUpS,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAGhJ,IAAMoU,YAAwB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAMP,UAAS,MAAM,OAAK;AACxE,MAAI,UAAU,KAAK,EAAE,MAAM,MAAM,GAAG;AAClC,WAAO,EAAE,CAAC;AAAA,EACZ;AACA,SAAOrU,OAAK,CAAC;AACf,CAAC,CAAC;AAGF,IAAM6U,aAAyB,qBAAK,GAAG,CAAC,MAAM,UAAUR,UAAS,MAAM,OAAK;AAC1E,QAAMvV,QAAO,OAAO,KAAK,KAAK;AAC9B,MAAI,UAAU,KAAKA,MAAK,SAAS,EAAE,MAAM,CAAC,GAAG;AAC3C,WAAO,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC;AAAA,EAC3B;AACA,SAAOkB,OAAK,CAAC;AACf,CAAC,CAAC;AAGF,IAAM,UAAU,UAAQ,KAAK,MAAM,YAAY,CAAC,GAAG,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AAGtE,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACpD,QAAM,SAAS,CAAA+J,UAAQ,cAAc;AAAA,IACnC,SAAS,CAAA3H,WAAS;AAChB,YAAM,CAAC,SAAS,QAAQ,IAAIqI,QAAOrI,QAAO,CAAC2H,OAAM9H,OAAQ,CAAC,GAAG,CAAC,CAACqF,SAAQ,OAAO,GAAG,WAAW;AAC1F,YAAI0E,QAAO1E,OAAM,KAAK,EAAEA,QAAO,OAAO,MAAM,GAAG;AAC7C,iBAAO,CAACwD,MAAO,MAAM,GAAG,OAAO;AAAA,QACjC;AACA,eAAO,CAACA,MAAO,MAAM,GAAG,KAAK,SAAStC,QAAO,MAAM,CAAC,CAAC;AAAA,MACvD,CAAC;AACD,aAAOe,UAAU,MAAM,QAAQ,GAAG,MAAM,OAAO,OAAO,CAAC;AAAA,IACzD;AAAA,IACA,WAAWqJ;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,OAAO,OAAOliB,MAAK,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC;AAGD,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC1D,QAAM,SAAS,CAAAlC,UAAQ,cAAc;AAAA,IACnC,SAAS,CAAA3H,WAAS,KAAKA,QAAOqI,SAAS,CAACV,OAAM9H,OAAQ,CAAC,GAAG,CAAC,CAACqF,SAAQ,OAAO,GAAG,WAAW;AACvF,UAAI0E,QAAO1E,OAAM,GAAG;AAClB,eAAO,KAAK,EAAEA,QAAO,OAAO,MAAM,GAAG4C,MAAM,UAAQ,OAAO,CAACY,MAAO,MAAM,GAAG,OAAO,IAAI,CAACA,MAAO,MAAM,GAAG,KAAK,SAAStC,QAAO,MAAM,CAAC,CAAC,CAAC,CAAC;AAAA,MACxI;AACA,aAAOqK,SAAU,CAAC/H,MAAO,MAAM,GAAG,KAAK,SAAStC,QAAO,MAAM,CAAC,CAAC,CAAC;AAAA,IAClE,CAAC,GAAGkf,aAAcne,UAAU,CAAC,CAAC,SAAS,QAAQ,MAAM,KAAK,MAAM,QAAQ,GAAGA,UAAU,MAAM,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AAAA,IAC7G,WAAWqJ;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,OAAO,OAAOliB,MAAK,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC;AAGD,IAAM,SAAS,UAAQ,KAAK,MAAM,UAAU5B,GAAE,CAAC;AAG/C,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,MAAM,cAAc,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC;AACnF,IAAM,SAAS,CAAAyG,YAAUuD,UAAWX,QAAO5C,OAAM,GAAG,OAAK,EAAE,SAAS,SAASwL,eAActc,MAAO,EAAE,KAAK,CAAC;AAG1G,IAAM+O,WAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,GAAG,MAAM;AACzD,QAAM,WAAW,CAAC,SAAS,UAAU,KAAK2Y,YAAayC,MAAO,KAAK,CAAC,GAAGpY,UAAW,cAAc;AAAA,IAC9F,SAAS,CAAA3P,WAASmH,UAAUme,YAAa,KAAK,SAAS0C,OAAMvX,SAAUzQ,MAAK,CAAC,CAAC,CAAC,GAAG,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,IAChH,WAAW,CAAA5B,WAASknB,YAAa0C,OAAM,SAASxX,WAAY,KAAKpS,QAAO0J,MAAMY,KAAM,CAAC,CAAC,CAAC,CAAC;AAAA,IACxF,QAAQ,MAAMvB,UAAUme,YAAa0C,OAAM,SAASpqB,MAAOiM,MAAK,CAAC,CAAC,CAAC,GAAG,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,EACtG,CAAC,CAAC,CAAC;AACH,SAAO,IAAI,WAAWge,cAAend,KAAI,WAAW,GAAG;AACrD,UAAMT,QAAO,OAAO,EAAErC,OAAO,CAAC;AAC9B,UAAMsC,SAAQ,OAAO,EAAEtC,OAAO,CAAC;AAC/B,UAAM,SAAS,OAAO,EAAEA,OAAO,CAAC;AAChC,UAAM,SAAS,OAAO,EAAEA,OAAO,CAAC;AAChC,WAAO,EAAEmkB,WAAU,IAAI,GAAG,UAAU,UAAU,GAAG,OAAO,SAAS9hB,OAAM,MAAM,CAAC,GAAG,WAAa+K,WAAU;AACxG,WAAO,EAAE+W,WAAU,IAAI,GAAG,UAAU,UAAU,GAAG,OAAO,SAAS7hB,QAAO,MAAM,CAAC,GAAG,WAAa8K,WAAU;AACzG,UAAM,WAAW;AAAA,MAAK;AAAA,MAAQgT,OAAM,MAAM;AAAA;AAAA,MAE1CrY,UAAW,KAAKoY,MAAO9d,KAAI,GAAG9C,UAAU,CAAA0H,UAAQyL,SAAU,MAAMzL,KAAI,CAAC,CAAC,CAAC;AAAA,IAAC;AACxE,UAAM,YAAY;AAAA,MAAK;AAAA,MAAQmZ,OAAM,MAAM;AAAA;AAAA,MAE3CrY,UAAW,KAAKoY,MAAO7d,MAAK,GAAG/C,UAAU,CAAA0H,UAAQyL,SAAU,MAAMzL,KAAI,CAAC,CAAC,CAAC;AAAA,IAAC;AACzE,WAAOkd,WAAU,aAAa,GAAG,CAAAQ,OAAKplB,UAAU,EAAEolB,IAAG,UAAU,SAAS,GAAG,MAAM,CAAC,CAAC;AAAA,EACrF,CAAC,CAAC,CAAC;AACL,CAAC;AAGD,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,GAAG,MAAM;AAC/D,QAAM,WAAW,CAAC,SAAS,UAAU5c,UAAW2V,YAAayC,MAAO,KAAK,CAAC,GAAG,cAAc;AAAA,IACzF,SAAS,CAAA/nB,WAASmH,UAAUme,YAAa,KAAK,SAAS0C,OAAMjpB,OAAMiB,MAAK,CAAC,CAAC,CAAC,GAAG,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,IAC5G,WAAW,CAAA5B,WAASknB,YAAa0C,OAAM,SAASxX,YAAYpS,MAAK,CAAC,CAAC;AAAA,IACnE,QAAQ,MAAMknB,YAAa0C,OAAM,SAAS3oB,IAAK,CAAC;AAAA,EAClD,CAAC,CAAC;AACF,SAAO,IAAI,WAAW,KAAKkK,KAAI,CAAC3B,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAGA,OAAO,CAAC,CAAC,GAAGgI,KAAM,CAAC,CAAC3F,OAAM,GAAG,MAAM,MAAM,KAAK8hB,WAAU,IAAI,GAAG,OAAO,SAAS9hB,OAAM,MAAM,CAAC,GAAG,WAAa+K,WAAU,CAAC,GAAGpF,KAAM,CAAC,CAAC,GAAG1F,QAAO,IAAI,MAAM,MAAM,KAAK6hB,WAAU,IAAI,GAAG,OAAO,SAAS7hB,QAAO,MAAM,CAAC,GAAG,WAAa8K,WAAU,CAAC,GAAGlN,MAAM,CAAC,CAACmC,OAAMC,QAAO,QAAQ,MAAM,MAAM;AACnV,UAAM,WAAW,KAAK,QAAQ8d,OAAM,MAAM,GAAGrY,UAAW,KAAKoY,MAAO9d,KAAI,GAAG9C,UAAUxJ,KAAI,CAAC,CAAC,CAAC;AAC5F,UAAM,YAAY,KAAK,QAAQqqB,OAAM,MAAM,GAAGrY,UAAW,KAAKoY,MAAO7d,MAAK,GAAG/C,UAAUxJ,KAAI,CAAC,CAAC,CAAC;AAC9F,WAAOouB,WAAU,kBAAkB,GAAG,CAAAQ,OAAKplB,UAAU,EAAEolB,IAAG,UAAU,SAAS,GAAG,MAAM,CAAC,CAAC;AAAA,EAC1F,CAAC,GAAG1E,aAAc,CAAC;AACrB,CAAC;AAGD,IAAM2E,UAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS,IAAI,WAAW,KAAKT,WAAU,IAAI,GAAGpc,UAAWoc,WAAU,IAAI,CAAC,CAAC,CAAC,CAAC;AAGtH,IAAMU,aAAY,aAAWnS,SAAQ,MAAM,KAAK,SAASjS,QAAOxI,SAAO,CAAC,GAAG,MAAM2sB,QAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAG/F,IAAM,QAAqB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAM,UAAU,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAGlG,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAM,UAAU,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAG/F,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,SAASrlB,UAAQ,MAAM,MAAM,IAAI,CAAC;AAGjF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM,KAAK,MAAMA,UAAQ,OAAK,KAAK,MAAMW,MAAI,OAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGjH,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAMyW,cAAa,KAAK3W,OAAO,GAAGT,UAAU,CAAAnH,WAASub,YAAW,aAAW,KAAK3T,OAAO,GAAGE,MAAM,aAAW;AAChJ,QAAM,UAAU,CAAAH,UAAQ,KAAKoS,OAAMwE,SAAQ,GAAGxU,IAAKpC,KAAI,GAAGiN,OAAM,SAAS9M,MAAM,WAAS,SAAS,SAAS,KAAK,CAAC,CAAC,CAAC;AAClH,QAAM,WAAW,cAAc;AAAA,IAC7B,SAAS,CAAA9H,WAAS,MAAQ2H,MAAO3H,MAAK,GAAG;AAAA,MACvC,QAAQ,MAAM;AAAA,MACd,QAAQ,CAAA2H,UAAQR,UAAUme,YAAa0C,OAAM,SAAS,KAAK/f,IAAGN,KAAI,CAAC,CAAC,CAAC,GAAG,MAAM,QAAQ;AAAA,IACxF,CAAC;AAAA,IACD,WAAW,CAAAvJ,WAASknB,YAAa0C,OAAM,SAAS,KAAK5pB,MAAK,CAAC,CAAC;AAAA,IAC5D,QAAQ,MAAMknB,YAAa0C,OAAM,SAAS3oB,KAAI,WAAW,CAAC,CAAC;AAAA,EAC7D,CAAC;AACD,QAAM,WAAW,WAAS;AACxB,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK,gBACH;AACE,eAAO,KAAK0oB,MAAO,OAAO,GAAGjgB,MAAM,YAAU;AAC3C,kBAAQ,OAAO,MAAM;AAAA,YACnB,KAAK6hB,UACH;AACE,qBAAOa,QAAS,QAAQ,OAAO,QAAQ,CAAC;AAAA,YAC1C;AAAA,YACF,KAAK,SACH;AACE,qBAAOha,WAAY,OAAO,KAAK;AAAA,YACjC;AAAA,YACF,KAAK,QACH;AACE,qBAAOpB;AAAA,YACT;AAAA,UACJ;AAAA,QACF,CAAC,GAAGob,OAAQ;AAAA,MACd;AAAA,MACF,KAAK,aACH;AACE,eAAOA,QAASjS,UAAS7Q,MAAK,MAAM,KAAK,GAAGqgB,MAAO,OAAO,GAAG;AAAA,UAC3D,YAAY,CAAC,UAAU,cAAcvrB,OAAQ,UAAU;AAAA,YACrD,WAAW,CAAA4B,WAAS,KAAKmR,WAAU,SAAS,GAAGxF,IAAKyG,WAAYpS,MAAK,CAAC,CAAC;AAAA,YACvE,WAAW,CAAAW,WAAS0R,SAAU,KAAK,MAAM1R,MAAK,GAAGoI,UAAU,MAAM,SAAS,QAAQ,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,UACjG,CAAC;AAAA,UACD,aAAa,CAAC,WAAWlH,cAAazD,OAAQ,WAAW;AAAA,YACvD,WAAW,CAAA4B,WAAS,KAAKmR,WAAUtP,SAAQ,GAAG8J,IAAKyG,WAAYpS,MAAK,CAAC,CAAC;AAAA,YACtE,WAAW,YAAU;AACnB,sBAAQ,OAAO,MAAM;AAAA,gBACnB,KAAKurB,UACH;AACE,yBAAO,KAAKpa,WAAUtP,SAAQ,GAAG0P,UAAW,QAAQ,OAAO,QAAQ,CAAC,CAAC;AAAA,gBACvE;AAAA,gBACF,KAAK,SACH;AACE,yBAAO,KAAKJ,WAAUtP,SAAQ,GAAG8J,IAAKyG,WAAY,OAAO,KAAK,CAAC,CAAC;AAAA,gBAClE;AAAA,gBACF,KAAK,QACH;AACE,yBAAO,KAAK9I,MAAKzH,SAAQ,GAAG6H,MAAM,CAAA/I,WAAS,KAAK,MAAMA,MAAK,GAAG4Q,UAAWP,KAAM,CAAC,CAAC,CAAC;AAAA,gBACpF;AAAA,cACJ;AAAA,YACF;AAAA,UACF,CAAC;AAAA,QACH,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAK,YACH;AACE,eAAO,KAAK1H,MAAK,MAAM,KAAK,GAAGI,MAAM,YAAU;AAC7C,kBAAQ,OAAO,MAAM;AAAA,YACnB,KAAK6hB,UACH;AACE,qBAAOa,QAAS,QAAQ,OAAO,QAAQ,CAAC;AAAA,YAC1C;AAAA,YACF,KAAK,SACH;AACE,qBAAOha,WAAY,OAAO,KAAK;AAAA,YACjC;AAAA,YACF,KAAK,QACH;AACE,qBAAOpB;AAAA,YACT;AAAA,UACJ;AAAA,QACF,CAAC,GAAGob,OAAQ;AAAA,MACd;AAAA,IACJ;AAAA,EACF;AACA,QAAM,kBAAkB,KAAK,UAAYxqB,MAAK,GAAG,OAAO,QAAQ,GAAG,KAAOgV,aAAYjL,IAAK,KAAK,SAAS,UAAU,GAAG,WAAW/J,MAAK,CAAC,CAAC,GAAG6nB,aAAc;AACzJ,SAAO,IAAI,WAAW,KAAKkE,WAAU,IAAI,GAAG,OAAO,eAAe,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,GAAGvB,OAAM,CAAC;AAGd,IAAMlb,OAAM,YAAUgW,YAAWhW,KAAM,MAAM,CAAC;AAG9C,IAAM+D,WAAU,CAAAjI,cAAYka,YAAWjS,SAAUjI,SAAQ,CAAC;AAG1D,IAAMgI,cAAa,aAAWkS,YAAWlS,YAAa,OAAO,CAAC;AAG9D,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,YAAY,KAAKxL,OAAO,GAAGT,UAAU,CAAAzJ,cAAY,KAAK,MAAM,uBAAuB;AAAA,EACrI,YAAY,QAAQ;AAAA,EACpB,QAAQ,OAAKyJ,UAAU0b,QAAOnlB,SAAQ,GAAG,OAAK,EAAE,CAAC,CAAC;AACpD,CAAC,GAAGyJ,UAAU,CAAArF,UAAQ,KAAKyH,KAAIzB,KAAM,MAAQ,GAAG,QAAQ,OAAO,CAAC,GAAG,CAAAxG,QAAMwG,MAAMhG,OAAM,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,KAAKR,GAAE,GAAG,KAAK,CAAC,CAAC,CAAC,GAAGwG,MAAM,eAAe,GAAGX,UAAU,aAAW;AACzK,QAAM,CAAC,UAAU,MAAM,IAAImB,aAAY,SAAS,CAAC,oBAAI,IAAI,GAAGzI,OAAQ,CAAC,GAAG,CAAC,CAAC6sB,WAAUC,OAAM,GAAG,CAAC,SAAS,KAAK,MAAM,CAACD,UAAS,IAAI,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,KAAKC,SAAQvkB,SAAU,KAAK,CAAC,CAAC,CAAC;AACxL,SAAO,KAAKqI,SAAU/S,WAAU,OAAKoK,MAAM,QAAQ,OAAO,CAAC,GAAG,OAAK,SAAO,KAAK,EAAE,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGiC,IAAK,MAAM,KAAK,MAAM,CAAC,CAAC;AAClI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGP,IAAM,2BAA2B;AAAA,EAC/B,KAAK;AACP;AACA,IAAM,8BAA8B,MAAM;AACxC,QAAM7J,WAAU,yBAAyB;AACzC,2BAAyB,MAAMA,WAAU;AACzC,SAAOA;AACT;AAGA,IAAM,yBAAsC,qBAAK,GAAG,CAAC,MAAM,YAAY,+BAA+B,MAAM,QAAQ,YAAY,QAAQ,QAAQ,MAAMkP,KAAM,CAAC;AAC7J,IAAM,iCAA8C,qBAAK,GAAG,CAAC,MAAM,YAAY,QAAQzR,WAAS,KAAKiT,gBAAiBhJ,OAAO,oBAAI,IAAI,CAAC,GAAG,CAAC,KAAK,MAAM,KAAKN,MAAI,GAAG,GAAGH,UAAU,YAAU,KAAK,OAAO,OAAO,GAAG+E,SAAQkc,SAAQ,CAAC,CAAC,CAAC,CAAC,GAAGjhB,UAAU,eAAauD,KAAI,WAAW,GAAG;AAC5Q,QAAMsd,SAAQ,OAAK,KAAK,OAAO,CAAC,GAAG7gB,UAAU,mBAAiB,KAAKG,MAAI,SAAS,GAAGH,UAAU,YAAU,KAAK,OAAO,QAAQ,GAAGkB,SAASxI,OAAQ,GAAG,CAAC,KAAK,CAACyB,KAAI,KAAK,MAAM;AACtK,QAAI,cAAcA,GAAE,GAAG;AACrB,aAAO,KAAK0mB,OAAQ,OAAOvX,SAAU,CAAC,CAAC,GAAG0G,kBAAiB;AAAA,QACzD,WAAW,CAAA/Y;AAAA;AAAA;AAAA,UAGX4R,eAAc5R,MAAK,IAAIqS,SAAU,KAAK,KAAKrI,SAAU9G,GAAE,CAAC,CAAC,IAAIkP,WAAYpS,MAAK;AAAA;AAAA,QAC9E,WAAW,MAAMqS,SAAU,GAAG;AAAA,MAChC,CAAC,CAAC;AAAA,IACJ;AACA,WAAOA,SAAU,GAAG;AAAA,EACtB,CAAC,GAAGtJ,UAAU,CAAAyF,SAAO;AACnB,QAAI,WAAWA,IAAG,GAAG;AACnB,aAAO,KAAKmB,QAAO,WAAW,CAAAjG,UAAO;AACnC,mBAAWxG,OAAMsL,MAAK;AACpB,UAAA9E,MAAI,OAAOxG,GAAE;AAAA,QACf;AACA,eAAOwG;AAAA,MACT,CAAC,CAAC;AAAA,IACJ;AACA,WAAOsH;AAAA,EACT,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGD,OAAM;AACd,QAAM,aAAa,OAAO,EAAEyH,eAAc,CAAC,CAAC;AAC5C,QAAM,WAAW,OAAO,EAAEhP,OAAO,KAAKsb,SAAQ,UAAU,GAAG/b,UAAU,WAAS;AAC5E,UAAM7F,MAAK,4BAA4B;AACvC,WAAO,KAAKyM,QAAO,WAAW,CAAAjG,UAAOA,MAAI,IAAIxG,KAAI,KAAK,CAAC,GAAGyI,IAAK,CAACzI,KAAI,KAAK,CAAC,CAAC;AAAA,EAC7E,CAAC,CAAC,CAAC,CAAC;AACJ,QAAM,WAAW;AAAA;AAAA,IAEjB,WAAW,YAAY,CAAC,EAAE,KAAK+K,KAAI,UAAU;AAAA;AAAA,MAE7C6W,SAAQ,CAAC;AAAA,MAAGtT,KAAM,WAASoY,OAAQ,OAAO,OAAO,CAAC;AAAA,MAAG7gB,UAAU,WAAS;AACtE,cAAM7F,MAAK,4BAA4B;AACvC,eAAO,KAAKyM,QAAO,WAAW,CAAAjG,UAAOA,MAAI,IAAIxG,KAAI,KAAK,CAAC,GAAGyI,IAAK,CAACzI,KAAI,KAAK,CAAC,CAAC;AAAA,MAC7E,CAAC;AAAA,IAAC,CAAC,GAAGqO,UAAW,KAAKrI,MAAI,SAAS,GAAGH,UAAU,CAAAW,UAAO,KAAKT,cAAeS,MAAI,OAAO,CAAC,GAAGoE,SAAQ,WAAS,KAAK8b,OAAQ,OAAO,OAAO,GAAG1V,gBAAiB,CAAAlU,WAAS4R,eAAc5R,MAAK,IAAIsK,MAAO0G,KAAM,IAAIvF,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG8F,UAAWhS,OAAK,OAAO,CAAC,GAAGwR,OAAM,CAAC;AAAA;AAC5P,SAAO,EAAE,MAAM,iBAAiB6Y,MAAK,GAAG7Q,kBAAiB;AAAA,IACvD,WAAW,CAAA/Y,WAAS,SAASoS,WAAY,KAAKpS,QAAO0J,MAAMY,KAAM,CAAC,CAAC,CAAC;AAAA,IACpE,WAAW,MAAM,SAAS9K,MAAOiM,MAAK,CAAC,CAAC;AAAA,EAC1C,CAAC,GAAGmL,WAAU;AACd,SAAO,WAAW,YAAY,CAAC,EAAE5N,SAAUE,MAAI,QAAQ,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAM+iB,SAAQ,UAAQ,IAAI,WAAW,MAAQ0B,WAAU,IAAI,CAAC,CAAC;AAG7D,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAKzG,YAAW1d,OAAO,CAAC,GAAGT,UAAQ,oBAAkB,KAAKmS,QAAO,KAAK,MAAM,iBAAiB,MAAMlK,KAAM,GAAG8C,eAAgB,CAAA9T,WAASoS,WAAY,gBAAgBpS,MAAK,CAAC,GAAG4W,WAAU,CAAC,GAAG,WAAW,KAAK,MAAM4X,uBAAsB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAG/S,IAAMC,QAAoB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC7C,QAAMlW,QAAO,OAAK,SAAS;AAAA,IACzB,SAAS,CAAA3W,WAAS;AAChB,YAAM,UAAU,KAAKA,QAAO,KAAO,CAAC,CAAC;AACrC,YAAM,WAAW,KAAK,IAAI,GAAG,IAAIA,OAAM,MAAM;AAC7C,YAAM,OAAO,QAAQA,MAAK,KAAK,WAAW;AAC1C,UAAI,MAAM;AACR,eAAO2W,MAAK,QAAQ;AAAA,MACtB;AACA,aAAO,KAAK,MAAM,OAAO,GAAGhH,UAAW,gBAAgB,CAAC,CAAC;AAAA,IAC3D;AAAA,IACA,WAAW/R;AAAA,IACX,QAAQ,MAAMwR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,aAAapV,MAAK,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC;AAGD,IAAMmW,aAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAClD,MAAI,KAAK,GAAG;AACV,WAAO,eAAe;AAAA,EACxB;AACA,SAAOxS,SAAQ,MAAM;AACnB,UAAM,QAAQ,IAAI,WAAW,CAAC;AAC9B,UAAM,SAAS,SAAS;AAAA,MACtB,SAAS,CAAAta,WAAS;AAChB,cAAM,UAAU,KAAKA,QAAO6G,WAAY,UAAQ;AAC9C,gBAAM1I,QAAO,MAAM,KAAK;AACxB,gBAAM,IAAI,IAAI;AACd,iBAAOA;AAAA,QACT,CAAC,CAAC;AACF,eAAO,KAAK,MAAM,OAAO,GAAGgJ,UAAU,MAAM,MAAM,CAAC;AAAA,MACrD;AAAA,MACA,WAAWvJ;AAAA,MACX,QAAQ,MAAMwR;AAAA,IAChB,CAAC;AACD,WAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,aAAa,MAAM,CAAC,CAAC;AAAA,EACnE,CAAC;AACH,CAAC;AAGD,IAAMvY,aAAyB,qBAAK,GAAG,CAAC,MAAM,cAAcqZ,MAAKpZ,WAAU,MAAM,OAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;AAGxG,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,cAAc;AAChE,QAAMkD,QAAO,SAAS;AAAA,IACpB,SAAS,CAAA3W,WAAS,KAAKwT,WAAYxT,QAAO,SAAS,GAAG8H,MAAM,eAAe,GAAGA,MAAM,cAAY;AAC9F,YAAM,OAAO,QAAQ,QAAQ;AAC7B,UAAI,MAAM;AACR,eAAOwS,SAAU,MAAM3D,KAAI;AAAA,MAC7B;AACA,aAAO,KAAK,MAAM,QAAQ,GAAGhH,UAAW,gBAAgB,CAAC,CAAC;AAAA,IAC5D,CAAC,GAAG6a,OAAQ;AAAA,IACZ,WAAW5sB;AAAA,IACX,QAAQ,MAAMwR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,aAAapV,KAAI,CAAC,CAAC;AACjE,CAAC;AAGD,IAAMlD,aAAyB,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC1D,QAAMkD,QAAO,SAAS;AAAA,IACpB,SAAS,CAAA3W,WAAS;AAChB,YAAM,SAAS,UAAYA,QAAO,SAAS;AAC3C,UAAI,QAAQ,MAAM,GAAG;AACnB,eAAOsa,SAAU,MAAM3D,KAAI;AAAA,MAC7B;AACA,aAAOhH,UAAW,MAAM,MAAM,GAAG,gBAAgB,CAAC;AAAA,IACpD;AAAA,IACA,WAAW/R;AAAA,IACX,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,IAAI,WAAW,aAAamuB,WAAU,IAAI,GAAGpV,KAAI,CAAC;AAC3D,CAAC;AAGD,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,cAAc;AAChE,QAAMA,QAAO,SAAS;AAAA,IACpB,SAAS,CAAA3W,WAAS,KAAKyT,WAAYzT,QAAO,SAAS,GAAG8H,MAAM,eAAe,GAAGA,MAAM,cAAY;AAC9F,YAAM,OAAO,QAAQ,QAAQ;AAC7B,UAAI,MAAM;AACR,eAAOwS,SAAU,MAAM3D,KAAI;AAAA,MAC7B;AACA,aAAOhH,UAAW,MAAM,QAAQ,GAAG,gBAAgB,CAAC;AAAA,IACtD,CAAC,GAAG6a,OAAQ;AAAA,IACZ,WAAW5sB;AAAA,IACX,QAAQ,MAAMwR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,aAAa2c,WAAU,IAAI,GAAGpV,KAAI,CAAC;AAC3D,CAAC;AAGD,IAAMtJ,UAAS,UAAQ,KAAK,MAAMvF,MAAIoC,MAAK,GAAG+H,UAAS,WAASrK,OAAKqC,MAAK,KAAK,CAAC,CAAC,CAAC;AAGlF,IAAMpK,UAAqB,oBAAI,WAAyB,sBAAoB,gBAAAA,OAAQ,CAAC,CAAC;AAGtF,IAAM6T,YAAwB,qBAAK,GAAG,CAAC,MAAMtR,eAAc,IAAI,WAAW,KAAK2pB,WAAU,IAAI,GAAGrY,UAAWtR,UAAS,CAAC,CAAC,CAAC;AAGvH,IAAM2qB,gBAA4B,qBAAK,GAAG,CAAC,MAAM3qB,eAAc,IAAI,WAAW,aAAe2pB,WAAU,IAAI,GAAG3pB,UAAS,CAAC,CAAC;AAGzH,IAAMhC,WAAU,MAAMklB,YAAWllB,SAAU,CAAC;AAG5C,IAAM0S,eAAc,OAAK,KAAK1S,SAAQ,GAAG0H,MAAI,CAAC,CAAC;AAG/C,IAAMiL,qBAAoB,OAAK,KAAK3S,SAAQ,GAAG,oBAAoB,CAAC,CAAC;AAGrE,IAAM,oBAAoB,OAAK,KAAKA,SAAQ,GAAG+G,UAAQ,CAAC,CAAC;AAGzD,IAAM,UAAU,CAAAuH,YAAU2b,OAAM/E,YAAW5W,OAAM,CAAC;AAGlD,IAAM9Q,SAAO,WAAS,iBAAiBA,MAAO8K,MAAO,KAAK,CAAC,CAAC;AAG5D,IAAMsL,YAAW,CAAA5I,cAAY,iBAAiB4I,UAAW,MAAMtL,MAAO0C,UAAS,CAAC,CAAC,CAAC;AAGlF,IAAMoF,cAAY,CAAApS,WAASknB,YAAW9U,WAAYpS,MAAK,CAAC;AAGxD,IAAM2V,iBAAgB,CAAA3I,cAAYka,YAAWvR,eAAgB3I,SAAQ,CAAC;AAGtE,IAAMxE,UAAsB,qBAAK,GAAG,CAAC,MAAM,cAAc,UAAU,MAAMA,QAAS,SAAS,CAAC,CAAC;AAG7F,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACrD,QAAM+P,QAAO,CAAA1X,cAAY;AACvB,UAAM6C,QAAO7C,UAAS,KAAK;AAC3B,QAAI6C,MAAK,MAAM;AACb,aAAO,cAAc;AAAA,QACnB,SAAS,CAAA9B,WAAS2W,MAAK3W,OAAM,OAAO,QAAQ,EAAE,CAAC;AAAA,QAC/C,WAAWwQ;AAAA,QACX,QAAQC;AAAA,MACV,CAAC;AAAA,IACH,OAAO;AACL,aAAO,KAAK,EAAE3O,MAAK,KAAK,GAAGgG,MAAM,UAAQ,OAAO,KAAK,MAAMG,IAAGnG,MAAK,KAAK,CAAC,GAAGqF,UAAU,MAAMwP,MAAK1X,SAAQ,CAAC,CAAC,IAAI0X,MAAK1X,SAAQ,CAAC,GAAGurB,OAAQ;AAAA,IAC1I;AAAA,EACF;AACA,SAAO,IAAI,WAAWlQ,SAAU,MAAM,KAAKyR,WAAU,IAAI,GAAG,OAAOpV,MAAK9W,OAAQ,EAAE,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,CAAC;AAGD,IAAMgH,aAAyB,qBAAK,GAAG,CAAC,MAAM,OAAO,UAAU,MAAMA,WAAY,EAAE,CAAC,CAAC;AAGrF,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,OAAOyT,SAAQ,MAAM;AACvE,QAAM3D,QAAO,CAAA1X,cAAY;AACvB,UAAM6C,QAAO7C,UAAS,KAAK;AAC3B,QAAI6C,MAAK,MAAM;AACb,aAAO,cAAc;AAAA,QACnB,SAAS,CAAA9B,WAAS2W,MAAK3W,OAAM,OAAO,QAAQ,EAAE,CAAC;AAAA,QAC/C,WAAWwQ;AAAA,QACX,QAAQC;AAAA,MACV,CAAC;AAAA,IACH,OAAO;AACL,aAAO,KAAK,GAAG3O,MAAK,KAAK,GAAG,MAAQ;AAAA,QAClC,QAAQ,MAAML,MAAO,MAAMkV,MAAK1X,SAAQ,CAAC;AAAA,QACzC,QAAQ6I,MAAM,QAAMX,UAAU,MAAMc,IAAG,EAAE,CAAC,GAAG,MAAM0O,MAAK1X,SAAQ,CAAC,CAAC;AAAA,MACpE,CAAC,GAAGurB,OAAQ;AAAA,IACd;AAAA,EACF;AACA,SAAO,IAAI,WAAW,KAAKuB,WAAU,IAAI,GAAG,OAAOpV,MAAK9W,OAAQ,EAAE,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC;AAGF,IAAMiH,kBAA8B,qBAAK,GAAG,CAAC,MAAM,OAAO;AACxD,QAAM6P,QAAO,SAAS;AAAA,IACpB,SAAS,CAAA3W,WAAS;AAChB,YAAM,SAAS8G,gBAAiB9G,QAAO,EAAE;AACzC,UAAI,OAAO,WAAWA,OAAM,QAAQ;AAClC,eAAO,KAAK,MAAM,MAAM,GAAGmH,UAAU,MAAMwP,KAAI,CAAC;AAAA,MAClD;AACA,aAAO,MAAM,MAAM;AAAA,IACrB;AAAA,IACA,WAAW/Y;AAAA,IACX,QAAQ6S;AAAA,EACV,CAAC;AACD,SAAO,IAAI,WAAW,KAAKsb,WAAU,IAAI,GAAG,aAAapV,KAAI,CAAC,CAAC;AACjE,CAAC;AAGD,IAAM,uBAAoC,qBAAK,GAAG,CAAC,MAAM,OAAO2D,SAAQ,MAAM;AAC5E,QAAM3D,QAAO,CAAA1X,cAAY;AACvB,UAAM6C,QAAO7C,UAAS,KAAK;AAC3B,QAAI6C,MAAK,MAAM;AACb,aAAO,cAAc;AAAA,QACnB,SAAS,CAAA9B,WAAS2W,MAAK3W,OAAM,OAAO,QAAQ,EAAE,CAAC;AAAA,QAC/C,WAAWwQ;AAAA,QACX,QAAQC;AAAA,MACV,CAAC;AAAA,IACH,OAAO;AACL,aAAO+Z,QAAS,MAAQ,GAAG1oB,MAAK,KAAK,GAAG;AAAA,QACtC,QAAQ,MAAM2O,SAAUrB,KAAM;AAAA,QAC9B,QAAQtH,MAAM,QAAMX,UAAU,MAAMc,IAAG,EAAE,CAAC,GAAG,MAAM0O,MAAK1X,SAAQ,CAAC,CAAC;AAAA,MACpE,CAAC,CAAC;AAAA,IACJ;AAAA,EACF;AACA,SAAO,IAAI,WAAW,KAAK8sB,WAAU,IAAI,GAAG,aAAapV,MAAK9W,OAAQ,EAAE,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/F,CAAC,CAAC;AAGF,IAAM,YAAY,CAAAuC,eAAawO,gBAAexB,OAAQ,MAAMhN,UAAS;AAGrE,IAAM4qB,QAAoB,qBAAK,GAAG,CAAC,MAAM,cAAc;AACrD,QAAMrW,QAAO,SAAS;AAAA,IACpB,SAAS,CAAA3W,WAAS,MAAQ+G,WAAU/G,QAAO,SAAS,GAAG;AAAA,MACrD,QAAQ,MAAM2W;AAAA,MACd,QAAQ,OAAK,MAAM1O,IAAG,CAAC,CAAC;AAAA,IAC1B,CAAC;AAAA,IACD,WAAWrK;AAAA,IACX,QAAQ,MAAMwR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,OAAOpV,KAAI,CAAC,CAAC;AAC3D,CAAC;AAGD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC3D,QAAMA,QAAO,SAAS;AAAA,IACpB,SAAS,CAAA3W,WAAS,KAAK+G,WAAY/G,QAAO,SAAS,GAAG8H,MAAM,MAAQ;AAAA,MAClE,QAAQ,MAAM6O;AAAA,MACd,QAAQ,OAAK,MAAM1O,IAAG,CAAC,CAAC;AAAA,IAC1B,CAAC,CAAC,GAAGuiB,OAAQ;AAAA,IACb,WAAW5sB;AAAA,IACX,QAAQ,MAAMwR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,OAAOpV,KAAI,CAAC,CAAC;AAC3D,CAAC;AAGD,IAAMxP,YAAuB,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,YAAY,CAAC,MAAM,GAAG,YAAY;AAC7F,QAAM,aAAa,SAAS,cAAc;AAC1C,MAAI,SAAS,QAAQ;AACnB,WAAO,iBAAiB,SAAS,aAAa,MAAM,uBAAuB,MAAM,GAAG,YAAY,CAAC,GAAG,OAAK,uBAAuB,MAAM,GAAG,YAAY,CAAC,CAAC;AAAA,EACzJ;AACA,SAAO,iBAAiB,SAAS,aAAa,MAAM,IAAI,WAAW,UAAU4kB,WAAU,IAAI,GAAG,CAAAhiB,QAAM,KAAKA,KAAIjC,KAAM,OAAKikB,WAAU,EAAE,CAAC,CAAC,CAAC,GAAG1jB,QAAO+G,OAAQ,CAACnF,OAAMC,WAAU,KAAKD,OAAM0F,UAAWzF,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAK,IAAI,WAAW,KAAK6hB,WAAU,IAAI,GAAG,UAAU,UAAU,GAAG,SAAS,SAAOA,WAAU,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AAC7T,CAAC;AAGD,IAAM,mBAAmB,CAAC,aAAa7e,aAAYgW,aAAY;AAC7D,UAAQ,aAAa;AAAA,IACnB,KAAK;AACH,aAAOhW,YAAW;AAAA,IACpB,KAAK;AACH,aAAOgW,SAAQ,OAAO,gBAAgB;AAAA,IACxC;AACE,aAAO,cAAc,IAAIA,SAAQ,WAAW,IAAIhW,YAAW;AAAA,EAC/D;AACF;AACA,IAAM,yBAAsC,qBAAK,GAAG,CAAC,MAAM,GAAG,YAAY,MAAM,IAAI,WAAW,KAAK6e,WAAU,IAAI,GAAG,UAAU,UAAU,GAAG,SAAS,SAAOA,WAAU,EAAE,GAAG,CAAC,GAAG;AAAA,EAC7K,aAAa;AAAA,EACb,eAAe,cAAc;AAAA,EAC7B;AACF,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAM3kB,YAAuB,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,YAAYD,UAAQ,MAAM,UAAU,OAAO,CAAC;AAGhH,IAAM,gBAAgB,UAAQ;AAC5B,QAAMC,YAAU,cAAc;AAAA,IAC5B,SAAS,CAAA1G,YAAUyG,UAAU,WAAWzG,OAAM,GAAG,MAAM0G,SAAO;AAAA,IAC9D,WAAWoJ;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,OAAO3kB,SAAO,CAAC,CAAC;AAC9D;AAGA,IAAM,gBAA6B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,YAAY,SAAS,YAAYD,UAAQ,MAAM,OAAKme,YAAW,CAAC,GAAG;AAAA,EAC3I,aAAa,QAAQ;AACvB,CAAC,IAAI,iBAAiB,SAAS,aAAa,MAAM,oBAAoB,MAAM,QAAQ,GAAG,OAAK,IAAI,WAAW,KAAKyG,WAAU,IAAI,GAAG,UAAU,UAAU,GAAG,gBAAgB,UAAU,CAAC,GAAG,OAAO9jB,GAAE,CAAC,CAAC,CAAC,CAAC;AAGnM,IAAM,oBAAoB,UAAQ;AAChC,QAAM,eAAe,CAAClJ,QAAO,SAAS;AACpC,UAAM,CAAC,QAAQ,IAAI,IAAI,KAAKA,QAAO,WAAW,CAAA8P,UAAQ,CAAC,UAAUA,KAAI,CAAC,CAAC;AACvE,UAAM/M,QAAO,KAAK3D,MAAO,IAAI,GAAG,MAAQ;AAAA,MACtC,QAAQ,MAAM;AAAA,MACd,QAAQ3B,OAAQ;AAAA,QACd,WAAW,CAAA4B,WAAS,MAAQ+R,iBAAgB/R,MAAK,GAAG;AAAA,UAClD,QAAQ,MAAMgR;AAAA,UACd,QAAQoB;AAAA,QACV,CAAC;AAAA,QACD,WAAW,MAAMpB;AAAA,MACnB,CAAC;AAAA,IACH,CAAC,CAAC;AACF,WAAO,KAAK,MAAM,KAAK,QAAQvI,WAAY,CAAAgI,UAAQ,UAAUA,KAAI,IAAInG,MAAOmG,MAAK,KAAK,IAAIhF,MAAK,CAAC,CAAC,CAAC,GAAG1C,UAAU,MAAMrF,KAAI,CAAC;AAAA,EAC5H;AACA,QAAMoiB,WAAU,cAAc;AAAA,IAC5B,SAAS,CAAAnlB,WAAS,aAAaA,QAAOmlB,QAAO;AAAA,IAC7C,WAAW,CAAA9lB,WAASoS,WAAYpS,MAAK;AAAA,IACrC,QAAQ,MAAMgR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,OAAO7H,QAAO,CAAC,CAAC;AAC9D;AAGA,IAAM,mBAAmB,UAAQ,KAAK,MAAMpc,MAAIT,aAAc,GAAG,aAAa;AAG9E,IAAM,cAAc,UAAQ,cAAc,kBAAkB,KAAK,MAAMS,MAAI,CAAAigB,UAAQA,MAAK,IAAI,CAAC,CAAC,CAAC;AAG/F,IAAMpT,WAAU,UAAQ,IAAI,WAAW,SAASoX,WAAU,IAAI,CAAC,CAAC;AAGhE,IAAM,oBAAoB,CAAC,UAAU7tB,aAAY,KAAK0S,gBAAiBnP,MAAO,MAAM,SAAS,OAAO,aAAa,EAAE,CAAC,GAAG,CAAAxC,cAAYA,UAAS,SAASnB,SAAQ,YAAYmB,UAAS,OAAO,CAAC,IAAImQ,KAAM,GAAGtH,MAAM,CAAA7I,cAAY,mBAAmB,KAAK0c,YAAW;AAAA,EAC1P,KAAK,YAAY1c,UAAS,KAAK;AAAA,EAC/B,OAAO,YAAUyJ,MAAOxK,SAAQ,MAAM,CAAC;AACzC,CAAC,GAAGiJ,UAAU,YAAU,OAAO,OAAOvJ,MAAOiM,MAAK,CAAC,IAAI4G,SAAU,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGoX,aAAY;AAGhG,IAAMsE,eAAc,aAAW,IAAI,WAAW,OAAO;AAGrD,IAAMJ,aAAY,YAAU;AAC1B,MAAI,aAAa,QAAQ;AACvB,WAAO,OAAO;AAAA,EAChB,WAAWpW,UAAS,MAAM,GAAG;AAC3B,WAAOoW,WAAUzG,YAAW,MAAM,CAAC;AAAA,EACrC,OAAO;AACL,UAAM,IAAI,UAAU,oBAAoB;AAAA,EAC1C;AACF;AAGA,IAAMlC,aAAY,CAAArkB,WAAS,IAAI,WAAW,QAAQA,MAAK,IAAIqQ,QAAS,MAAMrQ,MAAK,CAAC;AAGhF,IAAM,kBAAkB,CAAC,QAAQ,YAAY;AAC3C,MAAI,SAAS,QAAQ;AACnB,UAAM2P,UAAS5G,MAAM4gB,WAAU,MAAM,GAAG,cAAc;AACtD,WAAO,QAAQ,WAAW5gB,MAAM4G,SAAQgF,UAAS0U,UAAW,MAAM,CAAC,CAAC,IAAI1Z;AAAA,EAC1E;AACA,QAAM,SAASvH,UAAQmS,QAAOoP,WAAU,MAAM,CAAC,GAAG,cAAc;AAChE,SAAO,SAAS,WAAWhV,UAAS,QAAQ0U,UAAW,MAAM,CAAC,IAAI;AACpE;AAGA,IAAM,iBAAiB,CAAC,OAAO,YAAY,KAAKL,MAAO,KAAK,GAAG7V,eAAgB,CAAA9T,WAAS,KAAK8pB,YAAW,KAAK,GAAG/gB,UAAU,CAAA+gB,gBAAcA,eAAclY,eAAc5R,MAAK,IAAIiB,KAAM,IAAImR,WAAYpS,MAAK,CAAC,CAAC,CAAC,GAAG,yBAAyB,SAAS,WAAWsV,UAAS0U,UAAS,KAAK,CAAC,IAAI,QAAQ;AAG/R,IAAM,aAAa,IAAI1nB,YAAW,KAAK2G,eAAa3G,OAAM,GAAGyG,UAAQic,UAAS,CAAC;AAG/E,IAAMkC,cAAa,CAAA5W,YAAU,KAAKA,SAAQqI,UAAWrO,KAAM,GAAG,gBAAgB;AAG9E,IAAM,mBAAmB,CAAAgG,YAAU,IAAI,WAAW8b,QAAShuB,QAAQkS,SAAQ;AAAA,EACzE,WAAW,MAAQ;AAAA,IACjB,QAAQ,MAAMU;AAAA,IACd,QAAQxR;AAAA,EACV,CAAC;AAAA,EACD,WAAW,OAAK,MAAMqK,IAAG,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AAGH,IAAM,aAAa,CAAC,QAAQ,YAAY;AACtC,QAAM,eAAe,SAAS,gBAAgB;AAC9C,MAAI,SAAS,QAAQ;AACnB,UAAMyG,UAAS5G,MAAM4gB,WAAU,MAAM,GAAG,WAAS0D,WAAU,OAAO;AAAA,MAChE;AAAA,MACA,UAAU;AAAA,IACZ,CAAC,CAAC;AACF,WAAO,QAAQ,WAAWtkB,MAAM4G,SAAQgF,UAAS0U,UAAW,MAAM,CAAC,CAAC,IAAI1Z;AAAA,EAC1E;AACA,QAAM,SAASvH,UAAQmS,QAAOoP,WAAU,MAAM,CAAC,GAAG,WAAS0D,WAAU,OAAO;AAAA,IAC1E;AAAA,EACF,CAAC,CAAC;AACF,SAAO,SAAS,WAAW1Y,UAAS,QAAQ0U,UAAW,MAAM,CAAC,IAAI;AACpE;AAGA,IAAM/gB,iBAAe,cAAYiT,SAAQ,MAAM,QAAQ,QAAQ,IAAI8I,WAAU,QAAQ,IAAI,oBAAoB,SAAS,OAAO,QAAQ,EAAE,CAAC,CAAC;AAGzI,IAAM,qBAAqB,CAAA1U,YAAU,KAAKA,SAAQ5G,MAAMT,cAAY,GAAGmjB,OAAM;AAG7E,IAAM,sBAAsB,CAACvrB,WAAU,eAAe,qBAAqB;AACzE,SAAO,KAAKwC,MAAO,MAAM;AACvB,QAAI,UAAU,CAAC;AACf,UAAMkV,QAAO,CAAA1X,cAAY,KAAKwC,MAAO,MAAM;AACzC,UAAIK,QAAO7C,UAAS,KAAK;AACzB,UAAI,iBAAiB,GAAG;AACtB,YAAI6C,MAAK,MAAM;AACb,iBAAOsN;AAAA,QACT;AACA,eAAO,KAAK,MAAMnH,IAAGnG,MAAK,KAAK,CAAC,GAAGqF,UAAU,MAAMwP,MAAK1X,SAAQ,CAAC,CAAC;AAAA,MACpE;AACA,gBAAU,CAAC;AACX,UAAIkE,SAAQ;AACZ,aAAOrB,MAAK,SAAS,OAAO;AAC1B,gBAAQ,KAAKA,MAAK,KAAK;AACvB,QAAAqB,SAAQA,SAAQ;AAChB,YAAIA,UAAS,cAAc;AACzB;AAAA,QACF;AACA,QAAArB,QAAO7C,UAAS,KAAK;AAAA,MACvB;AACA,UAAIkE,SAAQ,GAAG;AACb,eAAO,KAAK,MAAM,gBAAgB,OAAO,CAAC,GAAGgE,UAAU,MAAMwP,MAAK1X,SAAQ,CAAC,CAAC;AAAA,MAC9E;AACA,aAAOmQ;AAAA,IACT,CAAC,GAAGob,OAAQ;AACZ,WAAO,IAAI,WAAW7T,MAAK1X,SAAQ,CAAC;AAAA,EACtC,CAAC,GAAGurB,OAAM;AACZ;AAGA,IAAMyC,YAAW,CAAAve,YAAU,KAAKA,SAAQ5G,MAAM,uBAAuB,GAAG+f,aAAY;AAGpF,IAAMuE,aAAY,CAAC,OAAO,YAAY,KAAKnD,aAAY,OAAO,GAAG,SAAS,gBAAgB,gBAAgB,GAAG/W,eAAgB,CAAA9T,WAAS,KAAK8pB,YAAW,KAAK,GAAG/gB,UAAU,CAAA+gB,gBAAcA,eAAclY,eAAc5R,MAAK,IAAIiB,KAAM,IAAImR,WAAYpS,MAAK,CAAC,CAAC,CAAC,GAAG,yBAAyB,SAAS,WAAWsV,UAAS0U,UAAS,KAAK,CAAC,IAAI,QAAQ;AAG7U,IAAM,eAAe,CAAAzD,cAAY,KAAKE,QAAOF,SAAQ,GAAG7c,MAAM,CAAA+c,YAAU,mBAAmBA,QAAO,KAAK,MAAM,CAAC,CAAC,GAAG2F,OAAM;AAGxH,IAAM,qBAAqB,CAACpf,WAAUlN,aAAY2pB,cAAa/f,MAAM8I,gBAAiBnP,MAAO,MAAM2J,UAAS,EAAE,UAAU,CAAC,GAAG,YAAUtN,SAAQ,MAAM,OAAO,OAAO,CAAC,CAAC,GAAG,YAAU,mBAAmBqJ,UAAUwU,YAAW;AAAA,EACvN,KAAK,MAAM,OAAO,KAAK;AAAA,EACvB,OAAO,YAAUjT,MAAOxK,SAAQ,MAAM,CAAC;AACzC,CAAC,GAAG,CAAC;AAAA,EACH,MAAAP;AAAA,EACA,OAAAlB;AACF,MAAMkB,SAAOC,MAAOiM,MAAK,CAAC,IAAI4G,SAAUhU,MAAK,CAAC,CAAC,CAAC,CAAC;AAGjD,IAAM,yBAAyB,CAAC2O,WAAUlN,UAAS,YAAY,SAAS2pB,cAAa/f,MAAM8I,gBAAiBnP,MAAO,MAAM2J,UAAS,EAAE,UAAU;AAAA,EAC5I,MAAM;AACR,CAAC,CAAC,GAAG,YAAUtN,SAAQ,MAAM,OAAO,OAAO,CAAC,CAAC,GAAG,YAAUmU,UAAS0C,SAAQ,0BAA0B,QAAQzW,UAAS,SAAS,CAAC,GAAG,WAAS,SAAS,OAAO,KAAK,IAAI2B,UAAQjC,OAAK,KAAK,CAAC,CAAC,CAAC;AAC1L,IAAM,4BAA4B,CAAC,QAAQM,UAAS8D,WAAS;AAC3D,QAAMnD,UAAS,IAAI,YAAYmD,MAAI;AACnC,SAAO,eAAe,GAAG,YAAUmF,UAAUwU,YAAW;AAAA,IACtD,KAAK,MAAM,OAAO,KAAK,IAAI,WAAW9c,SAAQ,QAAQA,QAAO,aAAa,MAAM,CAAC;AAAA,IACjF,OAAO,YAAUX,SAAQ,MAAM;AAAA,EACjC,CAAC,GAAG,CAAC;AAAA,IACH,MAAAP;AAAA,IACA,OAAAlB;AAAA,EACF,MAAM;AACJ,QAAIkB,QAAM;AACR,aAAOC,MAAO;AAAA,QACZ,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AACA,UAAM,YAAY,SAASnB,OAAM;AACjC,WAAOgU,SAAU,CAAChU,QAAO,aAAaoC,QAAO,aAAagL,MAAK,IAAInB,MAAO,SAAS,CAAC,CAAC;AAAA,EACvF,CAAC,CAAC;AACJ;AAGA,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACxD,QAAM,uBAAuB,CAAC,OAAO3J,WAAU;AAC7C,QAAI,QAAQA,MAAK,GAAG;AAClB,aAAO,CAAC,OAAOc,OAAQ,CAAC;AAAA,IAC1B;AACA,UAAM,UAAU,CAAC;AACjB,QAAI,OAAO;AACX,QAAI,QAAQ;AACZ,QAAI,MAAM;AACV,QAAI,gBAAgBA,OAAQ;AAC5B,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK,QACH;AACE,cAAM8gB,SAAQ,MAAM;AACpB,cAAMA,OAAM,CAAC;AACb,YAAIhK,QAAO;AACX,eAAOA,SAAQ,QAAQ5X,OAAM,QAAQ;AACnC,gBAAMiB,SAAQ+I,WAAYhK,QAAO,KAAK;AACtC,gBAAM,aAAa,EAAEiB,MAAK;AAC1B,cAAI,CAAC,OAAO,KAAK,UAAU,GAAG;AAC5B,kBAAMktB,iBAAgBvM,OAAM,CAAC;AAC7B,kBAAM,kBAAkB,gBAAgB,MAAM,KAAK5hB,MAAK,EAAE,MAAM,MAAM,KAAK,CAAC;AAC5E,kBAAM,QAAQuH,mBAAkB4mB,gBAAe,eAAe;AAC9D,oBAAQ,KAAK,CAAC,KAAK,KAAK,CAAC;AACzB,kBAAM;AACN,mBAAO;AACP,YAAAvW,QAAO;AAAA,UACT;AACA,kBAAQ,QAAQ;AAAA,QAClB;AACA,YAAIA,OAAM;AACR,0BAAgBgK,OAAM,CAAC;AAAA,QACzB;AACA;AAAA,MACF;AAAA,MACF,KAAK,QACH;AACE,cAAM,EAAE5X,WAAYhK,QAAO,KAAK,CAAC;AACjC,gBAAQ,QAAQ;AAChB;AAAA,MACF;AAAA,IACJ;AACA,WAAO,QAAQA,OAAM,QAAQ;AAC3B,YAAMiB,SAAQ+I,WAAYhK,QAAO,KAAK;AACtC,YAAM,aAAa,EAAEiB,MAAK;AAC1B,UAAI,CAAC,OAAO,KAAK,UAAU,GAAG;AAC5B,gBAAQ,KAAK,CAAC,KAAK,gBAAgB,MAAM,KAAKjB,MAAK,EAAE,MAAM,MAAM,KAAK,CAAC,CAAC,CAAC;AACzE,cAAM;AACN,eAAO;AAAA,MACT;AACA,cAAQ,QAAQ;AAAA,IAClB;AACA,UAAM,gBAAgBsH,WAAU,eAAe,gBAAgB,MAAM,KAAKtH,MAAK,EAAE,MAAM,MAAM,KAAK,CAAC,CAAC;AACpG,UAAM,SAAS,gBAAgB,OAAO;AACtC,WAAO,CAAC2J,MAAO,CAAC,KAAK,aAAa,CAAC,GAAG,MAAM;AAAA,EAC9C;AACA,QAAM,gBAAgB,WAAS,cAAc;AAAA,IAC3C,SAAS,CAAA1I,WAAS;AAChB,YAAM,CAAC,cAAc,MAAM,IAAI,qBAAqB,OAAOA,MAAK;AAChE,aAAO,QAAQ,MAAM,IAAI,cAAc,YAAY,IAAImH,UAAU,MAAM,MAAM,GAAG,MAAM,cAAc,YAAY,CAAC;AAAA,IACnH;AAAA,IACA,WAAW,CAAA/I,WAAS,MAAQ,OAAO;AAAA,MACjC,QAAQ,MAAMoS,WAAYpS,MAAK;AAAA,MAC/B,QAAQ,YAAU+I,UAAU,MAAMc,IAAG,MAAM,CAAC,GAAG,MAAMuI,WAAYpS,MAAK,CAAC;AAAA,IACzE,CAAC;AAAA,IACD,QAAQ,CAAAT,WAAQ,MAAQ,OAAO;AAAA,MAC7B,QAAQ,MAAM,WAAWA,MAAI;AAAA,MAC7B,QAAQ,YAAUwJ,UAAU,MAAMc,IAAG,MAAM,CAAC,GAAG,MAAM,WAAWtK,MAAI,CAAC;AAAA,IACvE,CAAC;AAAA,EACH,CAAC;AACD,SAAO,IAAI,WAAW,aAAaouB,WAAU,IAAI,GAAG,cAAcliB,MAAK,CAAC,CAAC,CAAC;AAC5E,CAAC;AAGD,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,cAAc,KAAK,MAAM,QAAQ,SAAS,GAAG,MAAM,CAAC;AAGhG,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,WAAW0U,cAAa,gBAAgB,MAAM,YAAY,SAAS,GAAG6M,QAAO7M,SAAQ,CAAC,CAAC;AAGzI,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM7P,YAAW;AACtD,QAAM,SAAS,WAAS,KAAKoU,MAAO,KAAK,GAAGhb,MAAM,MAAQ;AAAA,IACxD,QAAQ,MAAM,SAAS;AAAA,MACrB,SAAS,CAAA9H,WAASmH,UAAU,MAAMnH,MAAK,GAAG,MAAM,OAAO,KAAK,CAAC;AAAA,MAC7D,WAAWpC;AAAA,MACX,QAAQ,MAAMwR;AAAA,IAChB,CAAC;AAAA,IACD,QAAQ5S,OAAQ;AAAA,MACd,WAAWgU;AAAA,MACX,WAAW,MAAMpB;AAAA,IACnB,CAAC;AAAA,EACH,CAAC,CAAC,GAAGob,OAAQ;AACb,SAAO,IAAI,WAAW,KAAKxV,YAAWtG,OAAM,GAAG5G,MAAM,WAAS,KAAKikB,WAAU,IAAI,GAAG,OAAO,OAAO,KAAK,CAAC,CAAC,CAAC,GAAGlE,aAAc,CAAC;AAC9H,CAAC;AAGD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAMtJ,cAAa,KAAK,MAAM,SAASxE,OAAMwE,SAAQ,CAAC,CAAC,CAAC;AAGhG,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM7gB,cAAa;AAChE,QAAM,SAAS,KAAKolB,MAAKplB,SAAQ,GAAGoK,MAAM,MAAQ;AAAA,IAChD,QAAQ,MAAM,SAAS;AAAA,MACrB,SAAS,CAAA9H,WAAS,KAAK,MAAMA,MAAK,GAAGmH,UAAU,MAAM,MAAM,CAAC;AAAA,MAC5D,WAAWvJ;AAAA,MACX,QAAQ,MAAMwR;AAAA,IAChB,CAAC;AAAA,IACD,QAAQ,CAAAV,YAAU8b,QAAShuB,QAAQkS,SAAQ;AAAA,MACzC,WAAW9Q;AAAA,MACX,WAAW,MAAMwR;AAAA,IACnB,CAAC,CAAC;AAAA,EACJ,CAAC,CAAC,GAAGob,OAAQ;AACb,SAAO,IAAI,WAAW,KAAKuB,WAAU,IAAI,GAAG,OAAO,MAAM,CAAC,CAAC;AAC7D,CAAC;AAGD,IAAM,iBAAiB,MAAM,IAAI,WAAW,gBAAgB,CAAC;AAG7D,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAM,eAAe,MAAMpX,SAAQ/M,OAAK,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;AAGpH,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,MAAM,YAAY;AACnE,QAAM,WAAW,aAAW,cAAc;AAAA,IACxC,SAAS,CAAAnL,WAAS0K,UAAUme,YAAa0C,OAAM,SAAS/f,IAAKxL,MAAK,CAAC,CAAC,GAAG,MAAM,SAAS,OAAO,CAAC;AAAA,IAC9F,WAAW,CAAA2B,WAASknB,YAAa0C,OAAM,SAASxX,YAAYpS,MAAK,CAAC,CAAC;AAAA,IACnE,QAAQ,MAAMknB,YAAa0C,OAAM,SAAS3oB,IAAK,CAAC;AAAA,EAClD,CAAC;AACD,SAAO,IAAI,WAAWwoB,cAAe,KAAKjgB,OAAO,GAAGqB,KAAMrB,OAAO,CAAC,GAAGgI,KAAM,CAAC,CAAC3F,KAAI,MAAM,KAAK8hB,WAAU,IAAI,GAAG,UAAU,UAAU,GAAG,OAAO,SAAS9hB,KAAI,CAAC,GAAG,WAAa+K,WAAU,CAAC,GAAGpF,KAAM,CAAC,CAAC,GAAG1F,MAAK,MAAM,KAAK6hB,WAAU,IAAI,GAAG,UAAU,UAAU,GAAG,OAAO,SAAS7hB,MAAK,CAAC,GAAG,WAAa8K,WAAU,CAAC,GAAGlN,MAAM,CAAC,CAACmC,OAAMC,MAAK,MAAM;AACrU,UAAMga,WAAU,CAAC,UAAU,cAAc,cAAc;AAAA,MACrD,SAAS,UAAQ;AACf,YAAI,QAAQ,CAAC,UAAU;AACrB,iBAAO,KAAKoB,YAAayC,MAAO9d,KAAI,CAAC,GAAG9C,UAAU3K,QAAQ;AAAA,YACxD,OAAO,MAAM,YAAY4S,QAAS8U,SAAQ,MAAM,SAAS;AAAA,YACzD,WAAW1T;AAAA,YACX,WAAW,CAAAzR,WAAS,KAAK,MAAMA,MAAK,GAAGoI,UAAU,MAAM+c,SAAQ,UAAU,SAAS,CAAC,CAAC;AAAA,UACtF,CAAC,CAAC,CAAC;AAAA,QACL;AACA,YAAI,CAAC,QAAQ,CAAC,WAAW;AACvB,iBAAO,KAAKoB,YAAayC,MAAO7d,MAAK,CAAC,GAAG/C,UAAU3K,QAAQ;AAAA,YACzD,OAAO,MAAM,WAAW4S,QAAS8U,SAAQ,UAAU,IAAI;AAAA,YACvD,WAAW1T;AAAA,YACX,WAAW,CAAAzR,WAAS,KAAK,MAAMA,MAAK,GAAGoI,UAAU,MAAM+c,SAAQ,UAAU,SAAS,CAAC,CAAC;AAAA,UACtF,CAAC,CAAC,CAAC;AAAA,QACL;AACA,eAAOA,SAAQ,UAAU,SAAS;AAAA,MACpC;AAAA,MACA,WAAW1T;AAAA,MACX,QAAQ,MAAMpB;AAAA,IAChB,CAAC;AACD,WAAO,KAAK2c,WAAU,OAAO,GAAG,UAAU,UAAU,GAAG,OAAO7H,SAAQ,OAAO,KAAK,CAAC,CAAC;AAAA,EACtF,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;AAGD,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,YAAY,IAAI,WAAW,KAAK6H,WAAU,IAAI,GAAG,aAAazR,SAAU,MAAM;AAC5H,QAAM,SAAS,aAAW,cAAc;AAAA,IACtC,SAAS,CAAAvb,WAAS;AAChB,YAAM,UAAU,CAAC;AACjB,UAAI,aAAa;AACjB,iBAAW,UAAUA,QAAO;AAC1B,YAAI,YAAY;AACd,uBAAa;AACb,kBAAQ,KAAK,MAAM;AAAA,QACrB,OAAO;AACL,kBAAQ,KAAK,OAAO;AACpB,kBAAQ,KAAK,MAAM;AAAA,QACrB;AAAA,MACF;AACA,aAAO,KAAK,MAAM,gBAAgB,OAAO,CAAC,GAAGoI,UAAU,MAAM,OAAO,UAAU,CAAC,CAAC;AAAA,IAClF;AAAA,IACA,WAAWqJ;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,SAAO,OAAO,IAAI;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC;AAGL,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM;AAAA,EACrD,KAAA/P;AAAA,EACA;AAAA,EACA,OAAAD;AACF,MAAM,KAAKwI,OAAKxI,MAAK,GAAGotB,QAAO,KAAK,MAAM,YAAY,MAAM,CAAC,CAAC,GAAGA,QAAO5kB,OAAKvI,IAAG,CAAC,CAAC,CAAC;AAGnF,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAMkf,cAAa,KAAK,MAAM4O,eAAcpT,OAAMwE,SAAQ,CAAC,CAAC,CAAC;AAG1G,IAAM4O,iBAA6B,qBAAK,GAAG,CAAC,MAAMze,YAAW,IAAI,WAAW,KAAKqd,WAAU,IAAI,GAAG,cAAgBrd,OAAM,CAAC,CAAC,CAAC;AAG3H,IAAMke,yBAAqC,qBAAK,GAAG,CAAC,MAAMlvB,cAAa,IAAI,WAAW,KAAKquB,WAAU,IAAI,GAAG,sBAAwBruB,SAAQ,CAAC,CAAC,CAAC;AAG/I,IAAMmY,WAAU,CAACpZ,QAAOqF,UAAS8iB,QAAOnoB,QAAO,OAAKiM,MAAO,CAAC,GAAG5G,MAAK,CAAC,CAAC,CAAC,CAAC;AAGxE,IAAM8F,SAAO,IAAImC,QAAO1C,eAAa0C,GAAE;AAGvC,IAAMjC,QAAmB,qBAAK,GAAG,CAAC,MAAM,MAAM,IAAI,WAAW,KAAKikB,WAAU,IAAI,GAAG,OAAOjkB,KAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAGrG,IAAMC,YAAwB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM;AACpD,QAAM,cAAc,CAAAwkB,OAAK,SAAS;AAAA,IAChC,SAAS,CAAAvsB,WAAS;AAChB,YAAM,CAAC,OAAOjB,MAAK,IAAIgJ,UAAW/H,QAAOusB,IAAG,CAAC;AAC7C,aAAOplB,UAAU,MAAMpI,MAAK,GAAG,MAAM,YAAY,KAAK,CAAC;AAAA,IACzD;AAAA,IACA,WAAWnB;AAAA,IACX,QAAQ,MAAMwR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC;AAGD,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAMzR,SAAQ,MAAM;AACxE,QAAM,cAAc,CAAAiS,OAAK,SAAS;AAAA,IAChC,SAAS,CAAAvsB,WAAS,KAAKsa,SAAU,MAAM;AACrC,YAAM,UAAU,CAAC;AACjB,YAAMiR,QAAO,YAAU9pB,MAAO,MAAM;AAClC,gBAAQ,KAAK,MAAM;AAAA,MACrB,CAAC;AACD,aAAO,KAAKzB,QAAOqI,SAASkkB,IAAG,CAACA,IAAG,MAAM,KAAK,EAAEA,IAAG,CAAC,GAAGplB,UAAU,CAAC,CAAColB,IAAGlI,EAAC,MAAM,KAAKkH,MAAKlH,EAAC,GAAGta,IAAKwiB,EAAC,CAAC,CAAC,CAAC,CAAC,GAAG/vB,QAAQ;AAAA,QAC9G,WAAW,WAAS;AAClB,cAAI,QAAQ,WAAW,GAAG;AACxB,mBAAOmT,UAAW,MAAM,gBAAgB,OAAO,CAAC,GAAG/R,OAAO,KAAK,CAAC;AAAA,UAClE;AACA,iBAAOA,OAAO,KAAK;AAAA,QACrB;AAAA,QACA,WAAW,CAAA2uB,OAAKplB,UAAU,MAAM,gBAAgB,OAAO,CAAC,GAAG,MAAM,YAAYolB,EAAC,CAAC;AAAA,MACjF,CAAC,CAAC;AAAA,IACJ,CAAC,GAAG/B,OAAQ;AAAA,IACZ,WAAW5sB;AAAA,IACX,QAAQ,MAAMwR;AAAA,EAChB,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,aAAa,YAAY,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC;AAGF,IAAMtc,WAAuB,qBAAK,GAAG,CAAC,MAAM,YAAY,KAAK,MAAMsH,UAAS,QAAQ,SAAS,GAAGjP,MAAI,QAAQ,SAAS,CAAC,CAAC;AAGvH,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,IAAI,WAAW,KAAKikB,WAAU,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAGpG,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM,IAAI,WAAW,KAAKA,WAAU,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AAGhH,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM,eAAe,OAAK1kB,cAAe,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAGzG,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM,UAAUF,SAAU,CAAC,CAAC,CAAC,CAAC;AAG5F,IAAM,uBAAoC,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM,oBAAoB,CAAC,GAAG,eAAe,QAAQ,CAAC,CAAC;AAG3H,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM,oBAAoB,OAAK,KAAK,EAAE,CAAC,GAAGW,MAAMT,aAAc,CAAC,CAAC,GAAG,eAAe,QAAQ,CAAC,CAAC;AAG3J,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC5D,QAAMsP,QAAO,CAAA1X,cAAY;AACvB,UAAM6C,QAAO7C,UAAS,KAAK;AAC3B,QAAI6C,MAAK,MAAM;AACb,aAAO,cAAc;AAAA,QACnB,SAAS,UAAQ6U,MAAK,KAAK,OAAO,QAAQ,EAAE,CAAC;AAAA,QAC7C,WAAWnG;AAAA,QACX,QAAQC;AAAA,MACV,CAAC;AAAA,IACH,OAAO;AACL,YAAMhU,SAAQqF,MAAK;AACnB,aAAO0oB,QAAS1iB,MAAM,EAAErL,MAAK,GAAG,QAAM0K,UAAU,MAAMc,IAAG,EAAE,CAAC,GAAG,MAAM0O,MAAK1X,SAAQ,CAAC,CAAC,CAAC;AAAA,IACvF;AAAA,EACF;AACA,SAAO,IAAI,WAAW,KAAK8sB,WAAU,IAAI,GAAG,OAAOzR,SAAU,MAAM3D,MAAK9W,OAAQ,EAAE,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,CAAC;AAGD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,IAAI,WAAW,KAAKksB,WAAU,IAAI,GAAG,UAAU,UAAU,GAAG,gBAAgB,GAAG,CAAC,GAAG,OAAO9jB,GAAE,CAAC,CAAC,CAAC;AAGzJ,IAAM8O,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,IAAI,WAAW,KAAKgV,WAAU,IAAI,GAAGhV,UAAW,CAAC,CAAC,CAAC,CAAC;AAGvG,IAAMC,iBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,IAAI,WAAW,KAAK+U,WAAU,IAAI,GAAG/U,eAAgB,CAAC,CAAC,CAAC,CAAC;AAGjH,IAAMjS,SAAqB,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,YAAYqoB,WAAU,MAAM,MAAM;AAAA,EACxG,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,cAAc,SAAS;AACzB,CAAC,CAAC;AAGF,IAAM/V,YAAwB,qBAAK,UAAQ,OAAO,YAAY,KAAK,CAAC,GAAG,CAAC,SAAS,YAAYjQ,UAAQC,eAAa,OAAO,GAAG,OAAO,CAAC;AAGpI,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,SAAS+lB,WAAU,MAAM,MAAM;AAAA,EAC7E,QAAQnjB;AAAA,EACR,SAASC;AACX,CAAC,CAAC;AAGF,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAMnF,OAAMslB,OAAM,IAAI,CAAC,CAAC,CAAC;AAGrF,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAKA,OAAM,IAAI,GAAGtlB,OAAM,IAAI,CAAC,CAAC;AAGtF,IAAMqoB,aAAyB,qBAAK,GAAG,CAAC,MAAM,OAAO,YAAY;AAC/D,QAAM,WAAW,QAAQ,eAAe/B,WAAU,QAAQ,YAAY,IAAIC;AAC1E,QAAMxsB,WAAU,eAAa,CAAA+P,UAAQ,aAAa,CAAC,UAAUA,KAAI;AAAA;AAAA,IAEjEgb,MAAKvP,SAAU,MAAMzL,KAAI,CAAC;AAAA,MAAIqc,OAAM,CAAArc,UAAQyL,SAAU,MAAMzL,KAAI,CAAC;AACjE,SAAO,IAAI,WAAW,UAAYkd,WAAUjkB,MAAI,MAAM,QAAQ,MAAM,CAAC,GAAG;AAAA,IACtE,OAAOikB,WAAUjkB,MAAI,OAAO,QAAQ,OAAO,CAAC;AAAA,IAC5C,YAAYhJ,SAAQ,SAAS,SAAS,YAAY,SAAS,SAAS,MAAM;AAAA,IAC1E,aAAaA,SAAQ,SAAS,SAAS,YAAY,SAAS,SAAS,OAAO;AAAA,EAC9E,CAAC,CAAC;AACJ,CAAC;AAGD,IAAMuuB,YAAW,UAAQpL,KAAI,MAAM,QAAU;AAG7C,IAAMzK,SAAqB,gBAAA8N,YAAW9N,MAAO;AAG7C,IAAMtZ,WAAuB,qBAAK,GAAG,CAAC,MAAM,YAAY,KAAK,MAAMgU,eAAc,CAAA9T,WAASknB,YAAW,KAAK,QAAQlnB,MAAK,GAAGuR,UAAWa,WAAYpS,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAG5J,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,YAAY,IAAI,WAAW,KAAK2tB,WAAU,IAAI,GAAG,aAAe,CAAAld,UAAQ,UAAUA,KAAI,IAAI,QAAQ,IAAIO,KAAM,CAAC,CAAC,CAAC;AAG1J,IAAMsI,SAAQ,UAAQ,KAAK,MAAMC,WAAU,QAAQ,CAAC;AAGpD,IAAMA,aAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM,IAAI,WAAW,KAAKoU,WAAU,IAAI,GAAGpU,WAAY,CAAC,CAAC,CAAC,CAAC;AAGzG,IAAMxM,WAAsB,qBAAK,GAAG,CAAC,MAAM,SAAS,IAAI,WAAW,KAAK4gB,WAAU,IAAI,GAAG5gB,QAAS,MAAM4gB,WAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAG5H,IAAMuB,gBAA4B,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAMxlB,MAAImC,KAAI,GAAGkB,SAAO,MAAM,KAAK,KAAK,GAAGrD,MAAIoC,MAAK,CAAC,CAAC,CAAC,CAAC;AAGvH,IAAM0N,cAA0B,qBAAK,GAAG,CAAC,MAAM,UAAU,KAAK,MAAMzM,SAAO,MAAM6I,UAAS,KAAK,CAAC,CAAC,CAAC;AAGlG,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,YAAY,KAAK,MAAM,mBAAmB,MAAM/L,IAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAGjH,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAMlJ,WAAU,KAAK,MAAM,oBAAoB,MAAM,IAAI,WAAW,MAAMA,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAGtI,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAM,WAAW;AACjE,QAAM,SAAS,SAAS;AAAA,IACtB,SAAS,CAAAiB,WAAS;AAChB,UAAI,QAAQA,MAAK,GAAG;AAClB,eAAOsa,SAAU,MAAM,MAAM;AAAA,MAC/B;AACA,aAAO,KAAK,MAAMta,MAAK,GAAG2P,UAAW,gBAAgB,CAAC,CAAC;AAAA,IACzD;AAAA,IACA,WAAW/R;AAAA,IACX,QAAQ,MAAM0c,SAAU,MAAMyR,WAAU,OAAO,CAAC,CAAC;AAAA,EACnD,CAAC;AACD,SAAO,IAAI,WAAW,KAAKA,WAAU,IAAI,GAAG,OAAO,MAAM,CAAC,CAAC;AAC7D,CAAC;AAGD,IAAMlU,iBAA6B,qBAAK,GAAG,CAAC,MAAMpb,WAAU,KAAK,MAAM0O,SAAO,MAAM1J,MAAKhF,MAAK,CAAC,CAAC,CAAC;AAGjG,IAAM,WAAW,CAAC,GAAG,MAAM,cAAc,GAAG,CAAA8vB,OAAK;AAC/C,QAAM,OAAO,EAAEA,EAAC;AAChB,SAAO,CAACtkB,IAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;AAC9B,CAAC;AAGD,IAAM,gBAAgB,CAAC,GAAG,MAAM;AAC9B,QAAM0O,QAAO,CAAA4V,OAAK;AAChB,UAAM,OAAO,EAAEA,EAAC;AAChB,WAAO,MAAQ,KAAK,CAAC,GAAG;AAAA,MACtB,QAAQ,MAAM5c,UAAW,MAAM,KAAK,CAAC,CAAC,GAAGP,KAAM;AAAA,MAC/C,QAAQ,CAAAmd,OAAKplB,UAAU,MAAM,KAAK,CAAC,CAAC,GAAG,MAAMwP,MAAK4V,EAAC,CAAC;AAAA,IACtD,CAAC;AAAA,EACH;AACA,SAAO,IAAI,WAAWjS,SAAU,MAAM3D,MAAK,CAAC,CAAC,CAAC;AAChD;AAGA,IAAM,sBAAsB,CAAC,GAAG,MAAM;AACpC,QAAMA,QAAO,CAAA4V,OAAK/B,QAAS1iB,MAAM,EAAEykB,EAAC,GAAG,CAAC,CAACxtB,QAAOmG,OAAM,MAAM,MAAQA,SAAQ;AAAA,IAC1E,QAAQ,MAAMyK,UAAW,MAAM5Q,MAAK,GAAGqQ,KAAM;AAAA,IAC7C,QAAQ,CAAAmd,OAAKplB,UAAU,MAAMpI,MAAK,GAAG,MAAM4X,MAAK4V,EAAC,CAAC;AAAA,EACpD,CAAC,CAAC,CAAC;AACH,SAAO,IAAI,WAAWjS,SAAU,MAAM3D,MAAK,CAAC,CAAC,CAAC;AAChD;AAGA,IAAM,iBAAiB,CAAC,GAAG,MAAM,oBAAoB,GAAG,CAAA4V,OAAK,KAAK,EAAEA,EAAC,GAAGzkB,MAAM,CAAC,CAAC,GAAGykB,EAAC,MAAM,CAACtkB,IAAG,CAAC,GAAGskB,EAAC,CAAC,CAAC,CAAC;AAGtG,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,SAAS;AAChD,QAAM5C,WAAU;AAChB,QAAM4D,WAAU;AAChB,QAAMC,UAAS;AACf,SAAO,KAAK5lB,OAAO,GAAGT,UAAU,CAAAzJ,cAAY,KAAKkK,OAAO,GAAGE,MAAM,aAAW;AAC1E,UAAM,WAAW,SAAS,gBAAgB,IAAI,GAAG;AAAA,MAC/C,WAAW,WAAS6H,UAAW2V,YAAa1nB,MAAOF,WAAU,KAAK,CAAC,GAAGE,OAAO,KAAK,CAAC;AAAA,MACnF,WAAW,CAAC,CAAC,GAAG,SAAS,MAAM;AAC7B,cAAM+Y,QAAO,cAAc;AAAA,UACzB,SAAS,cAAYxP,UAAUme,YAAa0C,OAAM,SAAS;AAAA,YACzD,MAAM2B;AAAA,YACN;AAAA,UACF,CAAC,CAAC,GAAG,MAAMhT,KAAI;AAAA,UACf,WAAW,CAAAvY,WAASuR,UAAW2V,YAAa0C,OAAM,SAAS;AAAA,YACzD,MAAMuF;AAAA,YACN,OAAAnvB;AAAA,UACF,CAAC,CAAC,GAAGoS,WAAYpS,MAAK,CAAC;AAAA,UACvB,QAAQ,OAAKuR,UAAW2V,YAAa0C,OAAM,SAAS;AAAA,YAClD,MAAMwF;AAAA,UACR,CAAC,CAAC,GAAGpe,KAAM;AAAA,QACb,CAAC;AACD,eAAO,YAAc,KAAKkW,YAAa7U,SAAU/S,WAAU,CAAC,CAAC,GAAGiS,UAAW2V,YAAa,KAAK,SAAS0C,OAAM;AAAA,UAC1G,MAAM2B;AAAA,UACN,UAAU;AAAA,QACZ,CAAC,CAAC,CAAC,CAAC,GAAGha,UAAWgH,KAAI,CAAC,CAAC;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,UAAM,WAAW,KAAKoR,MAAO,OAAO,GAAGjgB,MAAM,YAAU;AACrD,cAAQ,OAAO,MAAM;AAAA,QACnB,KAAK6hB,UACH;AACE,iBAAO,KAAK,MAAM,OAAO,QAAQ,GAAGxiB,UAAU,MAAM,QAAQ,CAAC;AAAA,QAC/D;AAAA,QACF,KAAKomB,UACH;AACE,iBAAO/c,WAAY,OAAO,KAAK;AAAA,QACjC;AAAA,QACF,KAAKgd,SACH;AACE,iBAAOpe;AAAA,QACT;AAAA,MACJ;AAAA,IACF,CAAC,GAAGob,OAAQ;AACZ,WAAO,KAAK,MAAM1P,eAAc,CAAA1c,WAASoS,WAAY9S,WAAUU,MAAK,CAAC,GAAG6jB,KAAI,QAAQ,GAAGjN,aAAYrF,UAAWkT,QAAOnlB,SAAQ,CAAC,GAAGoK,MAAM,OAAK,CAAC,GAAG,IAAI,WAAW,QAAQ,CAAC,CAAC,CAAC;AAAA,EAC5K,CAAC,CAAC,CAAC,GAAGV,QAAS;AACjB,CAAC;AAGD,IAAMc,aAAyB,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,YAAY,CAAC,MAAM,WAAW,YAAY,gBAAgB,MAAM,OAAKuI,SAAU,UAAU,CAAC,IAAIxG,MAAK,CAAC,IAAIC,OAAM,CAAC,CAAC,GAAG,OAAO,CAAC;AAG1L,IAAM,kBAA+B,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,YAAY,CAAC,MAAM,WAAW,YAAY,KAAK,oBAAoB,MAAM,SAAS,GAAG,gBAAgB;AAAA,EACxK,MAAM;AAAA,EACN,YAAY,SAAS,cAAc;AAAA,EACnC,QAAQ1N,OAAM;AAAA,IACZ,QAAQ,MAAMiU,SAAU,OAAK,MAAM,CAAC;AAAA,IACpC,SAAS,MAAMA,SAAU,OAAK,MAAM,CAAC;AAAA,EACvC,CAAC;AACH,CAAC,GAAGtJ,UAAU,CAAC,CAAC,QAAQ,MAAM,MAAMsJ,SAAU,CAAC5J,WAAU,kBAAkBulB,WAAU,QAAQ;AAAA,EAC3F,UAAU;AACZ,CAAC,CAAC,GAAG,OAAK5vB,OAAM,GAAG;AAAA,EACjB,QAAQkM;AAAA,EACR,SAASmB;AACX,CAAC,CAAC,GAAGhD,WAAU,kBAAkBulB,WAAU,QAAQ;AAAA,EACjD,UAAU;AACZ,CAAC,CAAC,GAAG,OAAK5vB,OAAM,GAAG;AAAA,EACjB,QAAQqN;AAAA,EACR,SAASnB;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGP,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,SAAS,IAAI,WAAW,KAAKqjB,WAAU,IAAI,GAAG,aAAa,UAAY,IAAI,CAAC,CAAC,CAAC,CAAC;AAG/H,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,YAAY,IAAI,WAAW,KAAKA,WAAU,IAAI,GAAG,OAAO,OAAO,CAAC,CAAC,CAAC;AAGzH,IAAM,2BAAwC,qBAAK,GAAG,CAAC,MAAM,SAAS,IAAI,WAAW,KAAKA,WAAU,IAAI,GAAG,aAAa,IAAI,CAAC,CAAC,CAAC;AAG/H,IAAM3jB,WAAuB,qBAAK,GAAG,CAAC,MAAMrI,YAAW,IAAI,WAAW4P,UAAW,MAAM5P,OAAM,GAAGgsB,WAAU,IAAI,CAAC,CAAC,CAAC;AAGjH,IAAMrC,kBAA8B,qBAAK,GAAG,CAAC,MAAMtpB,aAAY,IAAI,WAAW,KAAK2rB,WAAU,IAAI,GAAGrC,gBAAiBtpB,QAAO,CAAC,CAAC,CAAC;AAG/H,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM+kB,WAAU,IAAI,WAAW0C,cAAe,KAAKtB,OAAMpB,MAAK,GAAGrd,MAAM,SAAO,KAAKikB,WAAU,IAAI,GAAGrC,gBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGzK,IAAMxR,kBAA8B,qBAAK,GAAG,CAAC,MAAM,KAAK,aAAaC,sBAAqB,MAAM,KAAK1H,SAAU,QAAQ,CAAC,CAAC;AAGzH,IAAM0H,wBAAoC,qBAAK,GAAG,CAAC,MAAM,KAAKzJ,YAAW,qBAAqB,MAAM,KAAK4W,YAAW5W,OAAM,CAAC,CAAC;AAG5H,IAAM,uBAAoC,qBAAK,GAAG,CAAC,MAAM,KAAK,WAAW,kBAAkB,SAAOvH,UAAQ,QAAQ,CAAAyG,aAAW,KAAK,MAAM8b,gBAAejd,KAAI,KAAK,KAAKmB,QAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAGjL,IAAMqJ,mBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM,kBAAkB,SAAO,KAAK,MAAMyS,gBAAe,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAGtH,IAAM+D,oBAAgC,qBAAK,GAAG,CAAC,MAAMtI;AAAA;AAAA,EAErD,KAAK,MAAM,aAAa,KAAK/kB,SAAU,GAAG2E,OAAQogB,MAAK,CAAC,CAAC,CAAC;AAAA,CAAC;AAG3D,IAAMuI,SAAQ,CAACrtB,MAAK+I,MAAK,YAAY,qBAAqBkR,SAAQ,MAAM;AACtE,MAAIja,OAAM+I,MAAK;AACb,WAAOvJ;AAAA,EACT;AACA,QAAM,KAAK,CAACQ,MAAK+I,MAAKukB,eAAc;AAClC,UAAM,YAAYvkB,OAAM/I,OAAM;AAC9B,QAAI,YAAYstB,YAAW;AACzB,aAAO,KAAK,MAAM,MAAQttB,MAAKA,OAAMstB,aAAY,CAAC,CAAC,GAAGxmB,UAAU,MAAM,GAAG9G,OAAMstB,YAAWvkB,MAAKukB,UAAS,CAAC,CAAC;AAAA,IAC5G;AACA,WAAO,MAAM,MAAQttB,MAAKA,OAAM,YAAY,CAAC,CAAC;AAAA,EAChD;AACA,SAAO,IAAI,WAAW,GAAGA,MAAK+I,MAAK,SAAS,CAAC;AAC/C,CAAC;AAGD,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,MAAMkR,SAAQ,MAAM;AAC9D,QAAM,SAAS,KAAK,IAAI,GAAG,CAAC;AAC5B,QAAM4J,WAAU,eAAe,IAAI,gBAAgB,MAAM,GAAG,MAAM;AAClE,SAAO,IAAI,WAAW,KAAK6H,WAAU,IAAI,GAAG,OAAO7H,QAAO,CAAC,CAAC;AAC9D,CAAC,CAAC;AAGF,IAAM,iBAAiB,CAAC,WAAW,WAAW,cAAc;AAAA,EAC1D,SAAS,CAAAnlB,WAAS;AAChB,QAAIA,OAAM,WAAW,UAAU,UAAU,QAAQ,GAAG;AAClD,aAAOoI,UAAU,MAAMpI,MAAK,GAAG,MAAM,eAAe,WAAW,MAAM,CAAC;AAAA,IACxE;AACA,QAAIA,OAAM,SAAS,GAAG;AACpB,YAAM2B,UAAS,CAAC;AAChB,UAAI,SAAS;AACb,UAAI,QAAQ;AACZ,aAAO,QAAQ3B,OAAM,QAAQ;AAC3B,eAAO,QAAQA,OAAM,UAAU,WAAW,QAAW;AACnD,mBAAS,UAAU,MAAM,KAAKA,QAAOgK,WAAY,KAAK,CAAC,CAAC;AACxD,kBAAQ,QAAQ;AAAA,QAClB;AACA,YAAI,WAAW,QAAW;AACxB,UAAArI,QAAO,KAAK,MAAM;AAClB,mBAAS;AAAA,QACX;AAAA,MACF;AACA,aAAOyG,UAAU,SAAS,GAAGzG,OAAM,GAAG,MAAM,eAAe,WAAW,MAAM,CAAC;AAAA,IAC/E;AACA,WAAO4Z,SAAU,MAAM,eAAe,WAAW,MAAM,CAAC;AAAA,EAC1D;AAAA,EACA,WAAW,CAAAlc,WAASuR,UAAW,UAAU,eAAe,GAAGa,WAAYpS,MAAK,CAAC;AAAA,EAC7E,QAAQ,MAAM,UAAU,eAAe;AACzC,CAAC;AAGD,IAAM,kBAAN,MAAsB;AAAA,EACpB,UAAU,CAAC;AAAA,EACX,MAAM;AAAA,EACN,YAAY,GAAG;AACb,SAAK,IAAI;AAAA,EACX;AAAA,EACA,UAAU;AACR,WAAO,KAAK,QAAQ;AAAA,EACtB;AAAA,EACA,MAAM,MAAM;AACV,SAAK,QAAQ,KAAK,IAAI;AACtB,SAAK,OAAO;AACZ,QAAI,KAAK,QAAQ,KAAK,GAAG;AACvB,YAAM,SAAS,gBAAgB,KAAK,OAAO;AAC3C,WAAK,UAAU,CAAC;AAChB,WAAK,MAAM;AACX,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EACA,iBAAiB;AACf,QAAI,KAAK,QAAQ,GAAG;AAClB,aAAO,MAAM,gBAAgB,KAAK,OAAO,CAAC;AAAA,IAC5C;AACA,WAAOgR;AAAA,EACT;AACF;AAGA,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,OAAO,KAAK,MAAM,gBAAgB,IAAI,QAAQ,CAAC,CAAC;AAGhG,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,IAAI,MAAM,IAAI,WAAW6C,UAAW8Z,WAAU,IAAI,GAAG,WAAS,MAAQ,GAAG,KAAK,GAAG;AAAA,EACnI,QAAQ,MAAMvb,WAAYlB,KAAM,EAAE,KAAK,CAAC,CAAC;AAAA,EACzC,QAAQ1R;AACV,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAMgb,UAAsB,qBAAK,GAAG,CAAC,MAAM+L,cAAa9d,WAAU,aAAa,MAAM8d,SAAQ,GAAG,OAAKnoB,OAAM,GAAG;AAAA,EAC5G,QAAQqN;AAAA,EACR,SAASnB;AACX,CAAC,CAAC,CAAC;AAGH,IAAM,eAAe,CAAAgG,YAAU,mBAAmB,KAAKA,SAAQqI,UAAWrO,KAAM,CAAC,CAAC;AAGlF,IAAM,oBAAoB,CAAAgG,YAAU,wBAAwB,KAAKA,SAAQqI,UAAWrO,KAAM,CAAC,CAAC;AAG5F,IAAM,0BAA0B,CAAAgG,YAAU,kBAAkBA,SAAQ,CAAAA,YAAU,KAAK5G,MAAM4G,SAAQ,CAAA3P,WAAS2J,MAAO,CAAC3J,QAAO2P,OAAM,CAAC,CAAC,GAAGuD,UAAW,MAAQ;AAAA,EACrJ,QAAQ,MAAMxB,SAAU5G,MAAK,CAAC;AAAA,EAC9B,QAAQjM;AACV,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAM,qBAAqB,CAAA8Q,YAAU,wBAAwB,KAAKA,SAAQ5G,MAAMG,GAAE,CAAC,CAAC;AAGpF,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM0c,cAAa,WAAW,MAAMA,WAAU;AAAA,EACvF,WAAW,OAAKza,OAAM,CAAC;AAAA,EACvB,YAAYD;AACd,CAAC,CAAC;AAGF,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM0a,cAAa9d,WAAU,mBAAmB,MAAM8d,WAAU;AAAA,EAC3G,WAAW,OAAKjc,MAAO,CAAC;AAAA,EACxB,YAAYmB;AACd,CAAC,GAAG,QAAQ,CAAC;AAGb,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM8a,WAAU,YAAY;AAC3E,QAAM,WAAW,KAAKE,QAAOF,SAAQ,GAAG7c,MAAM,CAAA+c,YAAU;AACtD,UAAM,OAAO,CAAA7kB,WAAS,MAAQ7B,MAAO6B,MAAK,GAAG;AAAA,MAC3C,QAAQ,MAAM2W;AAAA,MACd,QAAQ,OAAKhH,UAAW,MAAM1H,IAAG,QAAQ,UAAU,CAAC,CAAC,CAAC,GAAGiH,MAAK,KAAKlP,QAAO,KAAO,CAAC,CAAC,GAAG,CAAC,CAAC;AAAA,IAC1F,CAAC;AACD,UAAMkP,QAAO,CAAClP,QAAO,MAAM;AACzB,YAAM,UAAU,KAAK6kB,QAAO,KAAK,CAAC,GAAG9a,IAAK,KAAK,MAAM9B,IAAG,QAAQ,UAAU,CAAC,CAAC,CAAC,GAAGd,UAAU,MAAM+H,MAAKlP,QAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACjH,YAAM,QAAQ,KAAK6kB,QAAO,KAAK,GAAGnN,QAASvQ,UAAU,OAAK,KAAK0d,QAAO,MAAM,GAAG/c,MAAM,MAAM,KAAK,MAAMG,IAAG,QAAQ,WAAW,CAAC,CAAC,CAAC,GAAG0H,UAAW,KAAK3P,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7J,aAAO,KAAK,SAASmL,QAAS,MAAM,KAAK,GAAGqf,OAAQ;AAAA,IACtD;AACA,UAAM7T,QAAO,SAAS;AAAA,MACpB,SAAS;AAAA,MACT,WAAW/Y;AAAA,MACX,QAAQ,MAAMwR;AAAA,IAChB,CAAC;AACD,WAAOuH;AAAA,EACT,CAAC,GAAG6T,OAAQ;AACZ,SAAO,IAAI,WAAW,KAAKuB,WAAU,IAAI,GAAG,OAAO,QAAQ,CAAC,CAAC;AAC/D,CAAC;AAGD,IAAM,cAAc,CAAAtvB,WAAS,IAAI,WAAW,SAAS,MAAMwL,IAAGxL,MAAK,CAAC,CAAC,CAAC;AAGtE,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAMkoB,WAAU,YAAY;AACnE,SAAO,KAAKE,QAAOF,SAAQ,GAAG7c,MAAM,CAAA+c,YAAU;AAC5C,UAAM,iBAAiB,KAAKA,QAAO,KAAK,GAAGnN,QAAS5P,MAAM,QAAQ,UAAU,CAAC;AAC7E,UAAMoc,WAAU,KAAK,MAAMpc,MAAI,QAAQ,SAAS,GAAGikB,UAAS;AAC5D,UAAMpV,QAAO6T,QAAShuB,QAAQqoB,QAAO,KAAK,MAAM,GAAG;AAAA,MACjD,WAAW,MAAMzV;AAAA,MACjB,WAAW,MAAM,KAAK8U,UAASvU,UAAW,KAAK,gBAAgB7H,MAAM,OAAK,KAAK,MAAMG,IAAG,CAAC,CAAC,GAAGd,UAAU,MAAMwP,KAAI,CAAC,CAAC,GAAG6T,OAAQ,CAAC,CAAC;AAAA,IAClI,CAAC,CAAC;AACF,WAAO,IAAI,WAAW,KAAKtG,UAASvU,UAAWgH,KAAI,CAAC,CAAC;AAAA,EACvD,CAAC,GAAG6T,OAAM;AACZ,CAAC;AAGD,IAAM,qBAAqB,CAAC/tB,QAAOkoB,cAAa,yBAAyBlU,SAAUhU,MAAK,GAAGkoB,SAAQ;AAGnG,IAAM,2BAA2B,CAACjW,SAAQiW,cAAaxd,UAAQme,YAAWrc,KAAMyF,SAAQmW,QAAOF,SAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGE,OAAM,MAAM2H,QAAO/b,UAAQ,CAAC,GAAG,aAAa,GAAG,OAAK2G,aAAYyN,QAAO,KAAK,CAAC,GAAG;AAAA,EAC/L,WAAWpU;AAAA,EACX,WAAW,MAAM3I,MAAM4G,SAAQ,WAAShG,MAAO,CAAC,OAAO,KAAK,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAMsQ,SAAqB,qBAAK,GAAG,CAAC,MAAM2L,cAAa6F,QAAO1iB,MAAM+c,QAAOF,SAAQ,GAAG,CAAAE,YAAU;AAC9F,QAAMlO,QAAO1E,UAAS,MAAM,WAASuY,QAAOpT,aAAYyN,QAAO,KAAK,KAAK,GAAG;AAAA,IAC1E,WAAW,MAAMjnB,MAAO,KAAK;AAAA,IAC7B,WAAW,MAAM6S,SAAU,KAAKkG,OAAM/G,KAAI,MAAMiV,QAAO,MAAM,CAAC,CAAC,CAAC;AAAA,EAClE,CAAC,CAAC,CAAC;AACH,SAAOlO;AACT,CAAC,CAAC,CAAC;AAGH,IAAMsL,OAAmB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK8J,WAAU,IAAI,GAAG,aAAa,UAAY,IAAI,CAAC,GAAG,QAAU,CAAC;AAGnH,IAAM,aAAa,UAAQ,KAAK,MAAM9J,KAAI,WAAW,CAAC,CAAC;AAGvD,IAAM,WAAW,UAAQ,KAAK,MAAMA,KAAI,KAAK,CAAC;AAG9C,IAAM2L,YAAW,UAAQ,KAAK,MAAM3L,KAAIoI,MAAO,CAAC;AAGhD,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,KAAK,MAAM,mBAAmB,GAAG,WAAW,CAAC,GAAG/Q,OAAQ,CAAC;AAG9G,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,KAAK,MAAM,yBAAyB,GAAG,WAAW,CAAC,GAAGA,OAAQ,CAAC;AAG1H,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,KAAK,MAAM,mBAAmB,GAAG,WAAW,CAAC,CAAC,CAAC;AAG1G,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,KAAK,MAAM,yBAAyB,GAAG,WAAW,CAAC,CAAC,CAAC;AAGtH,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,MAAM,KAAK,MAAM,mBAAmB,GAAG,MAAM,CAAC,GAAGA,OAAQ,CAAC;AAGpH,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,MAAM,KAAK,MAAM,yBAAyB,GAAG,MAAM,CAAC,GAAGA,OAAQ,CAAC;AAGhI,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,MAAM,KAAK,MAAMuU,WAAU,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAG7G,IAAM,2BAAwC,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,MAAM,KAAK,MAAMA,WAAU,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAGzH,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM5L,KAAI/V,SAAU,CAAC,CAAC,CAAC,CAAC;AAGlF,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM+V,KAAI,aAAa,CAAC,CAAC,CAAC,CAAC;AAG1F,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM4L,WAAU,aAAa,CAAC,CAAC,CAAC,CAAC;AAGtG,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAMA,WAAU3hB,SAAU,CAAC,CAAC,CAAC,CAAC;AAG9F,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM+V,KAAI,aAAa,CAAC,CAAC,CAAC,CAAC;AAG1F,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM4L,WAAU,aAAa,CAAC,CAAC,CAAC,CAAC;AAGtG,IAAM,UAAU,UAAQ,KAAK,MAAM5L,KAAI9jB,MAAK,CAAC,CAAC;AAG9C,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,WAAW,KAAK,MAAM,aAAa,MAAM,CAAC,CAAC;AAG7F,IAAM,sBAAmC,qBAAK,GAAG,CAAC,MAAM,WAAW,KAAK,MAAM,mBAAmB,MAAM,CAAC,CAAC;AAGzG,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,UAAU,KAAK,MAAM,mBAAmB,KAAK,GAAGmb,OAAQ,CAAC;AAG1G,IAAM,6BAA0C,qBAAK,GAAG,CAAC,MAAM,UAAU;AACvE,QAAM,SAAS,cAAc;AAAA,IAC3B,SAAS,CAAAtZ,WAASmH,UAAUme,YAAa2C,UAAS,OAAOngB,KAAM9H,QAAOyQ,QAAS,CAAC,CAAC,GAAG,MAAM,MAAM;AAAA,IAChG,WAAW,CAAArS,WAASknB,YAAa0C,OAAQ,OAAOxX,WAAY1I,MAAM1J,QAAOsK,KAAM,CAAC,CAAC,CAAC;AAAA,IAClF,QAAQ,MAAM4c,YAAa0C,OAAQ,OAAOpqB,MAAOiM,MAAK,CAAC,CAAC,CAAC;AAAA,EAC3D,CAAC;AACD,SAAO,KAAK,OAAOkiB,WAAU,IAAI,GAAG,MAAM,GAAG,OAAS,WAAa5c,OAAM;AAC3E,CAAC;AAGD,IAAM,qBAAkC,qBAAK,GAAG,CAAC,MAAM,UAAU;AAC/D,QAAM,SAAS,cAAc;AAAA,IAC3B,SAAS,CAAAnP,WAASmH,UAAU,MAAMpI,OAAMiB,MAAK,CAAC,GAAG,MAAM,MAAM;AAAA,IAC7D,WAAW,CAAA5B,WAAS,MAAMoS,YAAYpS,MAAK,CAAC;AAAA,IAC5C,QAAQ,MAAM,MAAMiB,IAAK;AAAA,EAC3B,CAAC;AACD,SAAO,KAAK,OAAO0sB,WAAU,IAAI,GAAG,MAAM,GAAG,aAAa,CAAAhE,UAAQC,OAAQ,OAAOD,KAAI,CAAC,GAAG,OAAS,WAAa5Y,OAAM;AACvH,CAAC;AAGD,IAAM,UAAU,UAAQ,KAAK,MAAM8S,KAAIta,MAAK,CAAC,CAAC;AAG9C,IAAMkmB,aAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK9B,WAAU,IAAI,GAAG,aAAa,UAAY,IAAI,CAAC,GAAG,OAAS,SAAW,CAAC;AAGnI,IAAM,SAAS,UAAQ,KAAK,MAAM9J,KAAIsB,IAAG,CAAC;AAG1C,IAAM,OAAoB,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,KAAK,MAAM,WAAW,GAAG,CAACgJ,IAAG,MAAM9b,SAAU,EAAE8b,IAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAGzG,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM,iBAAiB,CAAC,IAAI,MAAM9b,SAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAGjH,IAAM,mBAAgC,qBAAK,GAAG,CAAC,MAAM,MAAM,KAAK,MAAM,eAAe5G,MAAK,GAAG,CAAC3E,SAAQ,MAAM;AAC1G,UAAQA,QAAO,MAAM;AAAA,IACnB,KAAK,QACH;AACE,aAAOuL,SAAU,CAAC/H,MAAO,CAAC,GAAG,CAAC,CAAC;AAAA,IACjC;AAAA,IACF,KAAK,QACH;AACE,aAAO,KAAK,EAAExD,QAAO,OAAO,CAAC,GAAG4C,MAAM,OAAK,CAACY,MAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,IAC5D;AAAA,EACJ;AACF,CAAC,CAAC,CAAC;AAGH,IAAMic,YAAwB,qBAAK,GAAG,CAAC,MAAMA,cAAa9d,WAAU,aAAa,MAAM8d,WAAU;AAAA,EAC/F,WAAWjc;AAAA,EACX,YAAYmB;AACd,CAAC,GAAG,QAAQ,CAAC;AAGb,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM8a,WAAU,YAAY;AACrE,QAAMhO,QAAO,CAACkO,SAAQ5lB,cAAa;AACjC,UAAM6C,QAAO7C,UAAS,KAAK;AAC3B,QAAI6C,MAAK,MAAM;AACb,aAAO,cAAc;AAAA,QACnB,SAAS,CAAA/C,WAAS4X,MAAKkO,SAAQ9lB,OAAM,OAAO,QAAQ,EAAE,CAAC;AAAA,QACvD,WAAWyR;AAAA,QACX,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AACA,WAAOga,QAASpT,aAAYyN,QAAO,KAAK/iB,MAAK,KAAK,GAAG;AAAA,MACnD,WAAW,MAAM,KAAK+iB,QAAO,KAAK,GAAGnN,QAAS5P,MAAM,OAAK,KAAK,MAAMF,MAAO,QAAQ,UAAU9F,MAAK,KAAK,GAAG,QAAQ,WAAW,CAAC,CAAC,CAAC,GAAGqF,UAAU,MAAMwP,MAAKkO,SAAQ5lB,SAAQ,CAAC,CAAC,CAAC,GAAG4Q,SAAUgV,QAAO,MAAM,CAAC,CAAC;AAAA,MACvM,WAAW,MAAMpU,SAAU,KAAK,MAAMxI,IAAG,QAAQ,UAAUnG,MAAK,KAAK,CAAC,CAAC,GAAGqF,UAAU,MAAMwP,MAAKkO,SAAQ5lB,SAAQ,CAAC,CAAC,CAAC;AAAA,IACpH,CAAC,CAAC;AAAA,EACJ;AACA,SAAO,IAAI,WAAW,KAAKqmB,YAAaT,QAAOF,SAAQ,CAAC,GAAGxd,UAAU,CAAA0d,YAAU,KAAKkH,WAAU,IAAI,GAAG,OAAOpV,MAAKkO,SAAQhlB,OAAQ,EAAE,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5J,CAAC;AAGD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,GAAG,MAAM,IAAI,WAAW,KAAK,MAAMoI,IAAG,CAAC,CAAC,GAAGd,UAAU,MAAM4kB,WAAU,KAAK,MAAM,eAAe,GAAG,CAACQ,IAAG,MAAM,KAAK,EAAEA,IAAG,CAAC,GAAGzkB,MAAM,CAAAykB,OAAK,CAACA,IAAGA,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGlM,IAAMjT,UAAS,CAAA5K,YAAU,IAAI,WAAWgF,UAAW4F,QAAS,KAAK5K,SAAQ5G,MAAMG,GAAE,CAAC,CAAC,GAAGmH,KAAM,CAAC;AAG7F,IAAM1G,QAAO,UAAQ,KAAK,MAAMqO,UAASrO,KAAM,GAAG,WAAW,MAAMmB,MAAK,CAAC,CAAC;AAG1E,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,aAAa,KAAK,MAAM/B,MAAI,UAAU,QAAQ,CAAC,CAAC,CAAC;AAGhG,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,UAAU,oBAAoB,MAAM,MAAQ;AAAA,EACzF,QAAQ,MAAMkM,UAAW,KAAK;AAAA,EAC9B,QAAQvD;AACV,CAAC,CAAC,CAAC;AAGH,IAAMmY,WAAuB,qBAAK,GAAG,CAAC,MAAM,cAAc,YAAY,MAAM,WAAW,CAAC,CAAC;AAGzF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,WAAW,aAAa;AACtE,MAAI,aAAa,KAAK,YAAY,GAAG;AACnC,WAAOtZ,KAAIe,0BAAyB,uEAAuE,CAAC;AAAA,EAC9G;AACA,SAAO,IAAI,WAAWiK,SAAU,MAAM;AACpC,UAAM,QAAQ,IAAI,WAAW,SAAS;AACtC,UAAM,kBAAkB,CAAC,WAAW,eAAe;AACjD,UAAI,YAAY,WAAW;AACzB,cAAM,QAAQ,MAAM,QAAQ;AAC5B,cAAMwT,UAAS,QAAQ,KAAK,IAAIjuB,OAAQ,IAAIoI,IAAG,KAAK;AACpD,eAAO,KAAK,MAAM6lB,OAAM,GAAG3mB,UAAU,MAAM,UAAU,CAAC;AAAA,MACxD;AACA,YAAM,gBAAgB,aAAa,YAAY,aAAa;AAC5D,UAAI,kBAAkB,WAAW;AAC/B,eAAO;AAAA,MACT;AACA,YAAM,YAAY,aAAa,gBAAgB,YAAY;AAC3D,YAAM,YAAY,KAAK,MAAM,QAAQ,GAAG,UAAY,SAAS,CAAC;AAC9D,YAAM,SAAS,QAAQ,SAAS,IAAItH,OAAQ,IAAIoI,IAAG,SAAS;AAC5D,aAAO,KAAK,MAAM,MAAM,GAAGd,UAAU,MAAM,UAAU,CAAC;AAAA,IACxD;AACA,UAAM,SAAS,eAAa,cAAc;AAAA,MACxC,SAAS,CAAAnH,WAASmH,UAAU,MAAMN,WAAY7G,QAAO,CAAC,SAAS,UAAU;AACvE,cAAM,IAAI,OAAO;AACjB,cAAM,eAAe,YAAY,QAAQ;AACzC,YAAI,eAAe,cAAc,eAAe,aAAa,WAAW,GAAG;AACzE,iBAAO6J,MAAK;AAAA,QACd;AACA,eAAOnB,MAAO,MAAM,QAAQ,CAAC;AAAA,MAC/B,CAAC,CAAC,GAAG,MAAM,OAAO,YAAY1I,OAAM,MAAM,CAAC;AAAA,MAC3C,WAAW,CAAA5B,WAAS,gBAAgB,WAAWoS,WAAYpS,MAAK,CAAC;AAAA,MACjE,QAAQ,MAAM,gBAAgB,WAAWgR,KAAM;AAAA,IACjD,CAAC;AACD,WAAO,KAAK2c,WAAU,IAAI,GAAG,OAAO,OAAO,CAAC,CAAC,CAAC;AAAA,EAChD,CAAC,CAAC;AACJ,CAAC;AAGD,IAAM3uB,SAAqB,qBAAK,GAAG,CAAC,MAAM,cAAc;AACtD,QAAMA,SAAQ,CAAC,WAAW4C,WAAU;AAClC,UAAM,CAACjB,QAAO,SAAS,IAAI,KAAK,WAAWsH,WAAUrG,MAAK,GAAG,WAAW,SAAS,CAAC;AAClF,QAAI,QAAQjB,MAAK,KAAK,QAAQ,SAAS,GAAG;AACxC,aAAO4X,MAAK,KAAK5X,QAAOsH,WAAU,KAAK,WAAW,KAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,IAChE;AACA,WAAO,KAAK,MAAM4B,IAAGlJ,MAAK,CAAC,GAAGoI,UAAU,MAAM/J,OAAMyC,OAAQ,GAAG,KAAK,WAAW,KAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,EAC7F;AACA,QAAM8W,QAAO,eAAa,SAAS;AAAA,IACjC,SAAS,CAAA3W,WAAS5C,OAAM,WAAW4C,MAAK;AAAA,IACxC,WAAWpC;AAAA,IACX,QAAQ,MAAM;AACZ,UAAI,QAAQ,SAAS,GAAG;AACtB,eAAOwR;AAAA,MACT;AACA,UAAI1F,QAAO,KAAK,WAAW3C,WAAU,SAAS,CAAC,CAAC,GAAG;AACjD,eAAO4I,UAAW,MAAM1H,IAAG,SAAS,CAAC,GAAGmH,KAAM;AAAA,MAChD;AACA,aAAOO,UAAWvS,OAAMyC,OAAQ,GAAG,SAAS,GAAGuP,KAAM;AAAA,IACvD;AAAA,EACF,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,OAAOpV,MAAK9W,OAAQ,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC;AAGD,IAAM,eAA4B,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC7D,QAAMiC,QAAO,CAAC,UAAU,mBAAmB,cAAc;AAAA,IACvD,SAAS,gBAAc;AACrB,UAAIjD;AACJ,YAAM,CAAC,OAAO,eAAe,IAAI,KAAK,YAAYwJ,QAAO,CAAC,KAAK,UAAU,UAAU,MAAMxI,OAAQ,CAAC,CAAC,GAAG,cAAc,GAAG,CAAC,CAACkuB,QAAOC,gBAAe,GAAG,MAAM;AACtJ,cAAM,eAAe,KAAKD,QAAO3nB,QAAO,CAAC,CAAC;AAC1C,YAAI4nB,mBAAkB,UAAU,UAAU,OAAO,GAAG,KAAK,WAAWjlB,WAAYilB,gBAAe,CAAC,CAAC,GAAG;AAClG,cAAIA,mBAAkB,MAAM,UAAU,QAAQ;AAC5C,gBAAInvB,YAAW,QAAW;AACxB,cAAAA,UAAS,CAAC;AAAA,YACZ;AACA,YAAAA,QAAO,KAAK,KAAK,cAAc,KAAO,aAAa,SAAS,UAAU,MAAM,CAAC,CAAC;AAC9E,mBAAO,CAACgB,OAAQ,GAAG,CAAC;AAAA,UACtB;AACA,iBAAO,CAAC,cAAcmuB,mBAAkB,CAAC;AAAA,QAC3C;AACA,eAAO,CAAC,cAAc,OAAO,GAAG,KAAK,WAAWjlB,WAAY,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AAAA,MAC1E,CAAC,CAAC;AACF,YAAM,SAASlK,YAAW,SAAYgB,OAAQ,IAAI,gBAAgBhB,OAAM;AACxE,aAAOsI,UAAU,MAAM,MAAM,GAAG,MAAMrF,MAAK,WAAW,KAAK,IAAI4G,MAAO,KAAK,IAAImB,MAAK,GAAG,eAAe,CAAC;AAAA,IACzG;AAAA,IACA,WAAW,CAAAzL,WAAS,MAAQ,UAAU;AAAA,MACpC,QAAQ,MAAMoS,WAAYpS,MAAK;AAAA,MAC/B,QAAQ,CAAAW,WAAS4Q,UAAW,MAAM1H,IAAGlJ,MAAK,CAAC,GAAGyR,WAAYpS,MAAK,CAAC;AAAA,IAClE,CAAC;AAAA,IACD,QAAQ,CAAAT,WAAQ,MAAQ,UAAU;AAAA,MAChC,QAAQ,MAAM8S,SAAU9S,MAAI;AAAA,MAC5B,QAAQ,CAAAoB,WAAS4Q,UAAW,MAAM1H,IAAGlJ,MAAK,CAAC,GAAG0R,SAAU9S,MAAI,CAAC;AAAA,IAC/D,CAAC;AAAA,EACH,CAAC;AACD,SAAO,IAAI,WAAW,KAAKouB,WAAU,IAAI,GAAG,OAAOjqB,MAAK+H,MAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC;AAGD,IAAM,aAAa,UAAQyQ,SAAQ,MAAM;AACvC,MAAI,gBAAgB;AACpB,MAAI,UAAU;AACd,QAAM,kBAAkB,CAAAvb,WAAS;AAC/B,UAAM,eAAe,CAAC;AACtB,IAAA+I,KAAM/I,QAAO,SAAO;AAClB,UAAI,IAAI,WAAW,GAAG;AACpB,YAAI,OAAO;AACX,YAAI,YAAY,IAAI,QAAQ,IAAI;AAChC,YAAI,YAAY,IAAI,QAAQ,IAAI;AAChC,YAAI,SAAS;AACX,cAAI,cAAc,GAAG;AACnB,yBAAa,KAAK,aAAa;AAC/B,4BAAgB;AAChB,mBAAO;AACP,wBAAY,IAAI,QAAQ,MAAM,IAAI;AAAA,UACpC,OAAO;AACL,4BAAgB,gBAAgB;AAAA,UAClC;AACA,oBAAU;AAAA,QACZ;AACA,eAAO,cAAc,MAAM,cAAc,IAAI;AAC3C,cAAI,cAAc,MAAM,cAAc,MAAM,YAAY,WAAW;AACjE,gBAAI,cAAc,WAAW,GAAG;AAC9B,2BAAa,KAAK,IAAI,UAAU,MAAM,SAAS,CAAC;AAAA,YAClD,OAAO;AACL,2BAAa,KAAK,gBAAgB,IAAI,UAAU,MAAM,SAAS,CAAC;AAChE,8BAAgB;AAAA,YAClB;AACA,mBAAO,YAAY;AACnB,wBAAY,IAAI,QAAQ,MAAM,IAAI;AAAA,UACpC,OAAO;AACL,gBAAI,IAAI,WAAW,YAAY,GAAG;AAChC,wBAAU;AACV,0BAAY;AAAA,YACd,OAAO;AACL,kBAAI,cAAc,YAAY,GAAG;AAC/B,oBAAI,cAAc,WAAW,GAAG;AAC9B,+BAAa,KAAK,IAAI,UAAU,MAAM,SAAS,CAAC;AAAA,gBAClD,OAAO;AACL,kCAAgB,gBAAgB,IAAI,UAAU,MAAM,SAAS;AAC7D,+BAAa,KAAK,aAAa;AAC/B,kCAAgB;AAAA,gBAClB;AACA,uBAAO,YAAY;AACnB,4BAAY,IAAI,QAAQ,MAAM,IAAI;AAClC,4BAAY,IAAI,QAAQ,MAAM,IAAI;AAAA,cACpC,OAAO;AACL,4BAAY,IAAI,QAAQ,MAAM,YAAY,CAAC;AAAA,cAC7C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,YAAI,SAAS;AACX,0BAAgB,gBAAgB,IAAI,UAAU,MAAM,IAAI,SAAS,CAAC;AAAA,QACpE,OAAO;AACL,0BAAgB,gBAAgB,IAAI,UAAU,MAAM,IAAI,MAAM;AAAA,QAChE;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO,gBAAgB,YAAY;AAAA,EACrC;AACA,QAAM4X,QAAO,cAAc;AAAA,IACzB,SAAS,CAAA3W,WAAS;AAChB,YAAM,MAAM,gBAAgBA,MAAK;AACjC,aAAO,QAAQ,GAAG,IAAI2W,QAAOxP,UAAU,MAAM,GAAG,GAAG,MAAMwP,KAAI;AAAA,IAC/D;AAAA,IACA,WAAW,CAAAvY,WAAS,cAAc,WAAW,IAAIoS,WAAYpS,MAAK,IAAI+I,UAAU,MAAMc,IAAG,aAAa,CAAC,GAAG,MAAMuI,WAAYpS,MAAK,CAAC;AAAA,IAClI,QAAQ,CAAAT,WAAQ,cAAc,WAAW,IAAI8S,SAAU9S,MAAI,IAAIwJ,UAAU,MAAMc,IAAG,aAAa,CAAC,GAAG,MAAMwI,SAAU9S,MAAI,CAAC;AAAA,EAC1H,CAAC;AACD,SAAO,IAAI,WAAW,OAAOouB,WAAU,IAAI,GAAGpV,KAAI,CAAC;AACrD,CAAC;AAGD,IAAMlG,YAAU,CAAAhU,WAAS2mB,WAAUnb,IAAGxL,MAAK,CAAC;AAG5C,IAAMgF,QAAO,CAAA2J,cAAYkP,SAAQ,MAAM8I,WAAUnb,IAAGmD,UAAS,CAAC,CAAC,CAAC;AAGhE,IAAMkP,WAAU,YAAU,IAAI,WAAWA,SAAU,MAAMyR,WAAU,OAAO,CAAC,CAAC,CAAC;AAG7E,IAAMhE,QAAoB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAC7C,MAAI,CAAC,OAAO,UAAU,CAAC,GAAG;AACxB,WAAOzY,KAAIe,0BAAyB,GAAG,CAAC,qBAAqB,CAAC;AAAA,EAChE;AACA,QAAMsG,QAAO,CAAAsX,OAAK,SAAS;AAAA,IACzB,SAAS,CAAAjuB,WAAS;AAChB,YAAM,QAAQ,KAAKA,QAAO,KAAO,KAAK,IAAIiuB,IAAG,OAAO,iBAAiB,CAAC,CAAC;AACvE,YAAM,WAAW,KAAK,IAAI,GAAGA,KAAI,MAAM,MAAM;AAC7C,YAAM,OAAO,WAAW;AACxB,UAAI,MAAM;AACR,eAAO,KAAK,MAAM,KAAK,GAAG9mB,UAAU,MAAMwP,MAAK,QAAQ,CAAC,CAAC;AAAA,MAC3D;AACA,aAAO,MAAM,KAAK;AAAA,IACpB;AAAA,IACA,WAAW/Y;AAAA,IACX,QAAQ6S;AAAA,EACV,CAAC;AACD,SAAO,IAAI,WAAW,KAAKsb,WAAU,IAAI,GAAG,aAAa,IAAI,IAAIpV,MAAK,CAAC,IAAIvH,KAAM,CAAC,CAAC;AACrF,CAAC;AAGD,IAAM8e,aAAyB,qBAAK,GAAG,CAAC,MAAM,MAAM;AAClD,MAAI,KAAK,GAAG;AACV,WAAOruB;AAAA,EACT;AACA,SAAO,IAAI,WAAW,KAAK4Q,SAAU,IAAI,WAAW,CAAC,CAAC,GAAG3I,MAAM,WAAS;AACtE,UAAM,SAAS,SAAS;AAAA,MACtB,SAAS,CAAA9H,WAAS;AAChB,mBAAW,WAAWA,QAAO;AAC3B,gBAAM,IAAI,OAAO;AAAA,QACnB;AACA,eAAO;AAAA,MACT;AAAA,MACA,WAAWpC;AAAA,MACX,QAAQ,MAAM,KAAK,MAAM,MAAM,QAAQ,CAAC,GAAG+R,UAAWP,KAAM,CAAC;AAAA,IAC/D,CAAC;AACD,WAAO,KAAK2c,WAAU,IAAI,GAAG,OAAO,MAAM,CAAC;AAAA,EAC7C,CAAC,GAAGvB,OAAQ,CAAC;AACf,CAAC;AAGD,IAAM/P,aAAyB,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC1D,QAAM9D,QAAO,SAAS;AAAA,IACpB,SAAS,CAAA3W,WAAS;AAChB,YAAM,QAAQ,KAAKA,QAAO,UAAY,OAAK,CAAC,UAAU,CAAC,CAAC,CAAC;AACzD,YAAM2H,QAAO,KAAK3H,QAAO,KAAO,MAAM,MAAM,GAAG,KAAO,CAAC,CAAC;AACxD,UAAI,QAAQ2H,KAAI,GAAG;AACjB,eAAO,KAAK,MAAM,KAAK,GAAGR,UAAU,MAAMwP,KAAI,CAAC;AAAA,MACjD;AACA,aAAO,MAAM,KAAK,OAAOtQ,WAAUsB,KAAI,CAAC,CAAC;AAAA,IAC3C;AAAA,IACA,WAAW/J;AAAA,IACX,QAAQ6S;AAAA,EACV,CAAC;AACD,SAAO,IAAI,WAAW,KAAKsb,WAAU,IAAI,GAAG,aAAapV,KAAI,CAAC,CAAC;AACjE,CAAC;AAGD,IAAM,kBAA+B,qBAAK,GAAG,CAAC,MAAM,cAAc;AAChE,QAAMA,QAAO,CAAA1X,cAAY;AACvB,UAAM6C,QAAO7C,UAAS,KAAK;AAC3B,QAAI6C,MAAK,MAAM;AACb,aAAO,cAAc;AAAA,QACnB,SAAS,UAAQ6U,MAAK,KAAK,OAAO,QAAQ,EAAE,CAAC;AAAA,QAC7C,WAAWnG;AAAA,QACX,QAAQC;AAAA,MACV,CAAC;AAAA,IACH;AACA,WAAO,KAAK,UAAU3O,MAAK,KAAK,GAAGgG,MAAM,UAAQ,OAAO,MAAMG,IAAGnG,MAAK,KAAK,CAAC,IAAI,KAAK,MAAMmG,IAAGnG,MAAK,KAAK,CAAC,GAAGqF,UAAU,MAAMwP,MAAK1X,SAAQ,CAAC,CAAC,CAAC,GAAGurB,OAAQ;AAAA,EACzJ;AACA,SAAO,IAAI,WAAW,KAAKuB,WAAU,IAAI,GAAG,OAAOpV,MAAK9W,OAAQ,EAAE,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC;AAGD,IAAM6a,aAAyB,qBAAK,GAAG,CAAC,MAAM,cAAc;AAC1D,QAAM/D,QAAO,SAAS;AAAA,IACpB,SAAS,CAAA3W,WAAS;AAChB,YAAM,QAAQ,KAAKA,QAAO,UAAY,SAAS,CAAC;AAChD,YAAM,OAAO,MAAM,WAAWA,OAAM;AACpC,UAAI,MAAM;AACR,eAAO,KAAK,MAAM,KAAK,GAAGmH,UAAU,MAAMwP,KAAI,CAAC;AAAA,MACjD;AACA,aAAO,MAAM,KAAK;AAAA,IACpB;AAAA,IACA,WAAW/Y;AAAA,IACX,QAAQ6S;AAAA,EACV,CAAC;AACD,SAAO,IAAI,WAAW,KAAKsb,WAAU,IAAI,GAAG,aAAapV,KAAI,CAAC,CAAC;AACjE,CAAC;AAGD,IAAM/G,OAAmB,qBAAK,GAAG,CAAC,MAAM,MAAM,oBAAoB,MAAM,OAAK7F,IAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAG3F,IAAM4Q,WAAuB,qBAAK,GAAG,CAAC,MAAM;AAAA,EAC1C;AAAA,EACA;AACF,MAAM,KAAK,MAAME,UAAS,SAAS,GAAGjL,KAAI,SAAS,CAAC,CAAC;AAGrD,IAAMiL,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM5I,UAAS,MAAM,WAASqT,YAAW3V,UAAW,EAAE,KAAK,GAAG/R,MAAO,KAAK,CAAC,CAAC,CAAC,CAAC;AAG3H,IAAMkd,iBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM;AACtD,QAAMnE,QAAO,cAAc;AAAA,IACzB,SAAS,CAAA5X,WAASoI,UAAU,MAAMpI,MAAK,GAAG,MAAM4X,KAAI;AAAA,IACpD,WAAW,CAAAvY,WAASknB,YAAa3V,UAAW,EAAEvR,MAAK,GAAGoS,WAAYpS,MAAK,CAAC,CAAC;AAAA,IACzE,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2tB,WAAU,IAAI,GAAG,OAAOpV,KAAI,CAAC,CAAC;AAC3D,CAAC;AAGD,IAAM,UAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK2O,YAAW/b,KAAI,CAAC2Z,SAAQ,CAAC,GAAGtb,OAAO,CAAC,CAAC,CAAC,GAAGT,UAAQ,CAAC,CAAC,OAAOzJ,SAAQ,MAAM;AAChI,QAAMwM,SAAQ,YAAYkiB,WAAU,OAAO;AAAA,IACzC,cAAc;AAAA,EAChB,CAAC,CAAC;AACF,QAAMzV,QAAO,cAAc;AAAA,IACzB,SAAS,aAAW,KAAK2O,YAAa0C,OAAQ,OAAOjpB,OAAM,OAAO,CAAC,CAAC,GAAG,iBAAiB;AAAA,MACtF,WAAW,MAAMoI,UAAU,MAAM,OAAO,GAAG,MAAM,gBAAgB,CAAC;AAAA,MAClE,WAAW,MAAMA,UAAU,MAAM,OAAO,GAAG,MAAMwP,KAAI;AAAA,IACvD,CAAC,CAAC;AAAA,IACF,WAAW,CAAAvY,WAAS,KAAKknB,YAAa0C,OAAQ,OAAOxX,YAAYpS,MAAK,CAAC,CAAC,GAAG,iBAAiB;AAAA,MAC1F,WAAW,MAAMoS,WAAYpS,MAAK;AAAA,MAClC,WAAW,MAAMoS,WAAYpS,MAAK;AAAA,IACpC,CAAC,CAAC;AAAA,IACF,QAAQ,MAAM,KAAKknB,YAAa0C,OAAQ,OAAO3oB,IAAK,CAAC,GAAG,iBAAiB;AAAA,MACvE,WAAW,MAAM+P;AAAA,MACjB,WAAW,MAAMA;AAAA,IACnB,CAAC,CAAC;AAAA,EACJ,CAAC;AACD,SAAO,KAAK,IAAI,WAAW,KAAK,OAAO2c,WAAU,IAAI,GAAGpV,KAAI,GAAGjD,UAAW/D,UAAWmF,YAAWkT,OAAQ,OAAO3oB,IAAK,CAAC,GAAGwjB,QAAOnlB,SAAQ,CAAC,CAAC,CAAC,CAAC,GAAGqH,OAAM,QAAQ,KAAKkd,KAAI/X,QAAO,IAAI,GAAGwJ,UAAW/D,UAAWyY,UAAS,KAAK,GAAG3X,SAAU/S,WAAU,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5P,CAAC,CAAC,CAAC;AAGH,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,YAAY,eAAe,MAAM;AAAA,EAC5E,GAAG;AAAA,EACH,MAAM,CAAAqB,WAAS0R,SAAU,QAAQ,KAAK1R,MAAK,CAAC;AAC9C,CAAC,CAAC;AAGF,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,YAAY;AAC7D,MAAI,QAAQ,aAAa,WAAW;AAClC,WAAO,sBAAsB,MAAM,QAAQ,MAAM,QAAQ,OAAO,QAAQ,UAAU,QAAQ,SAAS,CAAC;AAAA,EACtG;AACA,SAAO,oBAAoB,MAAM,QAAQ,MAAM,QAAQ,OAAO,QAAQ,UAAU,QAAQ,SAAS,CAAC;AACpG,CAAC;AACD,IAAM,wBAAwB,CAAC,MAAM,MAAM,OAAOwf,WAAU,UAAU;AACpE,QAAM5H,QAAO,CAAC,QAAQ,oBAAoB,cAAc;AAAA,IACtD,SAAS,CAAA3W,WAAS,KAAK,KAAKA,MAAK,GAAGiJ,KAAM+X,kBAAiB,GAAGlZ,MAAM,CAAC,CAAC,QAAQkZ,kBAAiB,MAAM;AACnG,YAAMmN,WAAUnN,qBAAoB;AACpC,YAAM,SAASmN,WAAU,SAAS5P,SAAQ;AAC1C,YAAMgF,OAAM,SAAS,SAAS;AAC9B,YAAMna,OAAM,QAAQ,QAAQ,IAAI,OAAO,oBAAoB,QAAQ;AACnE,YAAM,YAAYma,OAAM,IAAIna,OAAM,KAAK,IAAIma,MAAKna,IAAG;AACnD,UAAI,UAAU,WAAW;AACvB,eAAO,KAAK,MAAMpJ,MAAK,GAAGmH,UAAU,MAAMwP,MAAK,YAAY,QAAQqK,kBAAiB,CAAC,CAAC;AAAA,MACxF;AACA,aAAOrK,MAAK,QAAQ,eAAe;AAAA,IACrC,CAAC,GAAG6T,OAAQ;AAAA,IACZ,WAAWha;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,QAAM,YAAY,KAAK4R,oBAAmBlZ,MAAM,CAAAkZ,uBAAqBrK,MAAK,OAAOqK,kBAAiB,CAAC,GAAGwJ,OAAQ;AAC9G,SAAO,IAAI,WAAW,KAAKuB,WAAU,IAAI,GAAG,aAAa,SAAS,CAAC,CAAC;AACtE;AACA,IAAM,sBAAsB,CAAC,MAAM,QAAQ,OAAOxN,WAAU,UAAU;AACpE,QAAM5H,QAAO,CAAC,QAAQ,oBAAoB,cAAc;AAAA,IACtD,SAAS,CAAA3W,WAAS,KAAK,OAAOA,MAAK,GAAGiJ,KAAM+X,kBAAiB,GAAGlZ,MAAM,CAAC,CAAC,QAAQkZ,kBAAiB,MAAM;AACrG,YAAMmN,WAAUnN,qBAAoB;AACpC,YAAM,SAASmN,WAAU,SAAS5P,SAAQ;AAC1C,YAAMgF,OAAM,SAAS,SAAS;AAC9B,YAAMna,OAAM,QAAQ,QAAQ,IAAI,OAAO,oBAAoB,QAAQ;AACnE,YAAM,YAAYma,OAAM,IAAIna,OAAM,KAAK,IAAIma,MAAKna,IAAG;AACnD,YAAM,YAAY,YAAY;AAC9B,YAAM,aAAa,aAAa,IAAI,IAAI,CAAC,YAAY;AACrD,YAAMlK,SAAQ,OAAO,KAAK,IAAI,GAAG,aAAa,SAASqf,SAAQ,CAAC,CAAC;AACjE,UAAIU,aAAY/f,QAAO,IAAI,GAAG;AAC5B,eAAO,KAAKomB,YAAavL,OAAM7a,MAAK,CAAC,GAAGyQ,UAAW,MAAM3P,MAAK,CAAC,GAAGmH,UAAU,MAAMwP,MAAK,WAAWqK,kBAAiB,CAAC,CAAC;AAAA,MACvH;AACA,aAAO7Z,UAAU,MAAMnH,MAAK,GAAG,MAAM2W,MAAK,WAAWqK,kBAAiB,CAAC;AAAA,IACzE,CAAC,GAAGwJ,OAAQ;AAAA,IACZ,WAAWha;AAAA,IACX,QAAQ,MAAMpB;AAAA,EAChB,CAAC;AACD,QAAM,YAAY,KAAK4R,oBAAmBlZ,MAAM,CAAAkZ,uBAAqBrK,MAAK,OAAOqK,kBAAiB,CAAC,GAAGwJ,OAAQ;AAC9G,SAAO,IAAI,WAAW,KAAKuB,WAAU,IAAI,GAAG,aAAa,SAAS,CAAC,CAAC;AACtE;AAGA,IAAM,OAAO,cAAY,mBAAmB,QAAQX,QAAO,QAAQ,CAAC;AAGpE,IAAMjsB,WAAuB,qBAAK,GAAG,CAAC,MAAMof,cAAa,KAAK6P,QAAO,IAAI,GAAGtmB,MAAMoT,aAAc;AAAA,EAC9F,WAAW,MAAMrR,MAAK;AAAA,EACtB,UAAA0U;AACF,CAAC,CAAC,GAAG0O,SAAQ,CAAC;AAGd,IAAM/R,eAA2B,qBAAK,GAAG,CAAC,MAAM,OAAOqD,cAAa,KAAK,MAAMnD,WAAUmD,WAAUvK,UAAS,KAAK,CAAC,CAAC,CAAC;AAGpH,IAAMmH,oBAAgC,qBAAK,GAAG,CAAC,MAAM/c,QAAOmgB,cAAa,KAAK6P,QAAO,IAAI,GAAGtmB,MAAMqT,kBAAmB;AAAA,EACnH,WAAW,MAAMrT,MAAM1J,OAAM,GAAGsK,KAAM;AAAA,EACtC,UAAA6V;AACF,CAAC,CAAC,GAAG0O,SAAQ,CAAC;AAGd,IAAM7R,aAAyB,qBAAK,GAAG,CAAC,MAAMmD,WAAU,SAAS;AAC/D,QAAM,gBAAgBjO,kBAAiB,gBAAgB;AACvD,SAAO,KAAK,MAAM6K,kBAAiB,MAAM7L,KAAM,aAAa,GAAGiP,SAAQ,GAAGjM,gBAAe,CAAAlU,WAAS2R,WAAU3R,MAAK,KAAKmS,oBAAmBnS,OAAM,MAAM,KAAKA,OAAM,OAAO,YAAY,UAAaA,OAAM,OAAO,YAAY,mBAAmBsK,MAAO,IAAI,IAAImB,MAAK,CAAC,CAAC;AACpQ,CAAC;AAGD,IAAMwiB,YAAwB,qBAAK,GAAG,CAAC,MAAMtG,cAAa,KAAKnV,gBAAiBsS,SAAU6C,SAAQ,GAAG,YAAUqC,UAAW,MAAM,CAAC,GAAGxY,KAAM,YAAU,KAAK,MAAM,oBAAoB,MAAM,GAAGoF,WAAU,CAAC,CAAC,CAAC;AAGzM,IAAMoZ,UAAS,UAAQtmB,MAAM,OAASikB,WAAU,IAAI,CAAC,GAAG,UAAQ,KAAK,MAAMhV,UAAWrO,KAAM,GAAGvB,UAAU3K,OAAM;AAAA,EAC7G,QAAQ,MAAMoB,MAAOiM,MAAK,CAAC;AAAA,EAC3B,SAAS4G;AACX,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAM6b,WAAuB,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,YAAY1c,KAAMgB,gBAAiB,SAAS,aAAa,cAAcqS,WAAU,IAAI,SAAS,aAAa,aAAajB,UAAS,QAAQ,YAAY,CAAC,IAAI,SAAS,aAAa,YAAY4G,SAAU,QAAQ,YAAY,CAAC,IAAI1F,SAAQ,SAAS,YAAY,CAAC,GAAG,WAASkF,UAAS,KAAK,CAAC,GAAG,WAASpT,YAAW,mBAAmB,MAAM,KAAK,CAAC,CAAC,CAAC;AAGpZ,IAAM,oBAAiC,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,YAAYpF,KAAMgB,gBAAiBsS,SAAQ,SAAS,YAAY,CAAC,GAAG,WAASkF,UAAS,KAAK,CAAC,GAAG,WAASpT,YAAW,2BAA2B,MAAM,KAAK,CAAC,CAAC,CAAC;AAG1O,IAAM,mBAAmB,YAAU;AACjC,MAAI;AACJ,MAAI5R;AACJ,SAAO,IAAI,eAAe;AAAA,IACxB,MAAM,YAAY;AAChB,MAAAA,SAAQ,QAAQwE,OAAO,CAAC;AACxB,aAAO,KAAKwmB,QAAO,MAAM,GAAG,IAAIhrB,MAAK,GAAG,SAASwM,KAAM,CAAA7Q,WAAS0C,MAAO,MAAM;AAC3E,QAAAqG,KAAM/I,QAAO,OAAK;AAChB,qBAAW,QAAQ,CAAC;AAAA,QACtB,CAAC;AAAA,MACH,CAAC,CAAC,GAAG+b,eAAgB,MAAM,MAAM1X,QAAOgM,KAAM,CAAC,GAAGqD,WAAY;AAAA,QAC5D,QAAQ,MAAMhR,MAAO,MAAM;AACzB,qBAAW,MAAM;AAAA,QACnB,CAAC;AAAA,QACD,QAAQ,WAASA,MAAO,MAAM;AAC5B,qBAAW,MAAM,MAAM,KAAK;AAAA,QAC9B,CAAC;AAAA,MACH,CAAC,GAAG0N,OAAM;AAAA,IACZ;AAAA,IACA,OAAO;AACL,aAAO,WAAW,IAAI;AAAA,IACxB;AAAA,IACA,SAAS;AACP,aAAO,WAAW,MAAM/L,QAAOgM,KAAM,CAAC;AAAA,IACxC;AAAA,EACF,CAAC;AACH;AAGA,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS;AACrD,QAAM,aAAakL,SAAU,MAAM;AACjC,UAAM,YAAY;AAAA,MAChB,KAAKza,OAAQ;AAAA,IACf;AACA,UAAM,eAAe;AAAA,MACnB,KAAK;AAAA,IACP;AACA,UAAMhB,UAASyb,SAAU,MAAM;AAC7B,YAAM,WAAW,UAAU;AAC3B,UAAI,QAAQ,QAAQ,GAAG;AACrB,eAAO,SAAS;AAAA,UACd,SAAS,CAAAta,WAAS,KAAK,MAAMA,MAAK,GAAGmH,UAAU,MAAMtI,OAAM,CAAC;AAAA,UAC5D,WAAWjB;AAAA,UACX,QAAQ;AAAA,QACV,CAAC;AAAA,MACH;AACA,gBAAU,MAAMiC,OAAQ;AACxB,aAAO,KAAK,WAAW,QAAQ,GAAGsH,UAAU,MAAMtI,OAAM,CAAC;AAAA,IAC3D,CAAC;AACD,UAAM,eAAe,CAAAE,WAAS;AAC5B,YAAM,WAAW,UAAU;AAC3B,YAAM,eAAesH,WAAU,UAAUO,QAAS7H,QAAO,CAAAA,WAASA,OAAM,WAAW,CAAC,CAAC;AACrF,gBAAU,MAAM;AAChB,aAAO;AAAA,IACT;AACA,UAAM,iBAAiB,SAAS;AAAA,MAC9B,SAAS,CAAAiB,WAASmH,UAAU,MAAMnH,MAAK,GAAG,MAAM,cAAc;AAAA,MAC9D,WAAWpC;AAAA,MACX,QAAQ,CAAAD,WAAQgS,UAAWlO,MAAO,MAAM;AACtC,qBAAa,MAAM;AAAA,MACrB,CAAC,GAAG,WAAW9D,MAAI,CAAC;AAAA,IACtB,CAAC;AACD,UAAM,aAAa,KAAK,MAAM,WAAa,iBAAiBwJ,UAAU,CAAC,CAAC,UAAU,CAAC,MAAM,KAAKsJ,SAAU,CAAC,aAAa,KAAK,aAAa,QAAQ,CAAC,CAAC,GAAGtJ,UAAU,CAAC,CAACxJ,QAAM,YAAY,MAAM;AACvL,YAAM,cAAcA,UAAQ,QAAQ,YAAY,IAAIyR,QAAS;AAC7D,aAAO,KAAK,MAAMnH,IAAG,CAAC,CAAC,GAAGd,UAAU,MAAM,WAAW,CAAC;AAAA,IACxD,CAAC,CAAC,CAAC,CAAC;AACJ,WAAO,KAAK4kB,WAAU,IAAI,GAAG,OAAO,cAAc,GAAG,OAAOltB,OAAM,GAAG,aAAa,UAAU,CAAC;AAAA,EAC/F,CAAC;AACD,SAAO,IAAI,WAAW,UAAU;AAClC,CAAC;AAGD,IAAM+lB,UAAS,CAAC,GAAG,MAAM,YAAY,GAAG,CAAA2H,OAAK,KAAK,EAAEA,EAAC,GAAG,IAAM,CAAC,CAAC,GAAGA,EAAC,MAAM,CAACtkB,IAAG,CAAC,GAAGskB,EAAC,CAAC,CAAC,CAAC;AAGtF,IAAM,cAAc,CAAC,GAAG,MAAM;AAC5B,QAAM5V,QAAO,CAAA4V,OAAK,MAAQ,EAAEA,EAAC,GAAG;AAAA,IAC9B,QAAQ,MAAMnd;AAAA,IACd,QAAQ,CAAC,CAACrQ,QAAOwtB,EAAC,MAAMplB,UAAU,MAAMpI,MAAK,GAAG,MAAM4X,MAAK4V,EAAC,CAAC;AAAA,EAC/D,CAAC;AACD,SAAO,IAAI,WAAWjS,SAAU,MAAM3D,MAAK,CAAC,CAAC,CAAC;AAChD;AAGA,IAAM,oBAAoB,CAAC,GAAG,MAAM2D,SAAQ,MAAM;AAChD,QAAM3D,QAAO,CAAA4V,OAAK/B,QAAS1iB,MAAM,EAAEykB,EAAC,GAAG,MAAQ;AAAA,IAC7C,QAAQ,MAAMnd;AAAA,IACd,QAAQ,CAAC,CAACrQ,QAAOwtB,EAAC,MAAMplB,UAAU,MAAMpI,MAAK,GAAG,MAAM4X,MAAK4V,EAAC,CAAC;AAAA,EAC/D,CAAC,CAAC,CAAC;AACH,SAAO,IAAI,WAAW5V,MAAK,CAAC,CAAC;AAC/B,CAAC;AAGD,IAAM,eAAe,CAAC,GAAG,MAAM,kBAAkB,GAAG,CAAA4V,OAAK,KAAK,EAAEA,EAAC,GAAGzkB,MAAM,IAAM,CAAC,CAAC,GAAGykB,EAAC,MAAM,CAACtkB,IAAG,CAAC,GAAGskB,EAAC,CAAC,CAAC,CAAC,CAAC;AAGzG,IAAMnd,QAAoB,gBAAAqB,UAAQ,MAAM;AAGxC,IAAM+Z,UAAS,CAAA9b,YAAUtH,UAAQke,YAAW5W,OAAM,CAAC;AAGnD,IAAMmZ,gBAAe,CAAAnZ,YAAUtH,UAAQkS,QAAO5K,OAAM,CAAC;AAGrD,IAAM0N,iBAA6B,qBAAK,GAAG,CAAC,MAAM,KAAK,MAAM,KAAK,MAAMnF,iBAAgB,CAAA7W,aAAW,KAAKA,UAASqM,KAAI,KAAK,EAAE,KAAKrM,UAAS2I,WAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAG9J,IAAM4T,QAAoB,qBAAK,GAAG,CAAC,MAAM,cAAc,KAAK,MAAMC,YAAWnb,MAAO,SAAS,CAAC,CAAC,CAAC;AAGhG,IAAM,WAAW,CAAC2J,WAAU,OAAO,eAAe,EAAE,EAAE3J,MAAO2J,SAAQ,CAAC;AAGtE,IAAM,iBAA8B,qBAAK,GAAG,CAAC,MAAM,OAAO,KAAKka,YAAW,IAAI,GAAGne,UAAQ,OAAK,KAAK,GAAG,CAAC,GAAG,UAAU,MAAMtH,OAAK,CAAC,CAAC,CAAC,CAAC;AAGnI,IAAM+c,cAA0B,qBAAK,GAAG,CAAC,MAAMlO,YAAW,KAAK4W,YAAW5W,OAAM,GAAGvH,UAAQ,UAAQ,OAAO,OAAOtH,OAAK,CAAC,CAAC;AAGxH,IAAMke,YAAwB,qBAAK,GAAG,CAAC,MAAM,MAAM,YAAY,IAAI,WAAWA,UAAWgO,WAAU,IAAI,GAAG,MAAM,OAAO,CAAC,CAAC;AAGzH,IAAM9iB,OAAmB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAMC,UAAQ,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAG9F,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAMA,UAAQ,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;AAGxG,IAAM,SAAsB,qBAAK,GAAG,CAAC,MAAM,YAAY,WAAW,MAAM;AAAA,EACtE,OAAO,QAAQ;AAAA,EACf,QAAQ,OAAK,CAAC,GAAG,QAAQ,YAAY;AAAA,EACrC,SAAS,QAAM,CAAC,QAAQ,aAAa,EAAE;AAAA,EACvC,QAAQ,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE;AAC3B,CAAC,CAAC;AAGF,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,OAAO,gBAAgB,WAAW,MAAM;AAAA,EACrF;AAAA,EACA,QAAQ;AAAA,EACR,SAAS,MAAM;AAAA,EACf,QAAQ,OAAK;AACf,CAAC,CAAC;AAGF,IAAM,cAA2B,qBAAK,GAAG,CAAC,MAAM,OAAO,iBAAiB,WAAW,MAAM;AAAA,EACvF;AAAA,EACA,QAAQ,MAAM;AAAA,EACd,SAAS;AAAA,EACT,QAAQ,CAAC,GAAG,OAAO;AACrB,CAAC,CAAC;AAGF,IAAM,oBAAiC,qBAAK,GAAG,CAAC,MAAM,YAAY,sBAAsB,MAAM;AAAA,EAC5F,OAAO,QAAQ;AAAA,EACf,QAAQ,OAAK,CAAC,GAAG,QAAQ,YAAY;AAAA,EACrC,SAAS,QAAM,CAAC,QAAQ,aAAa,EAAE;AAAA,EACvC,QAAQ,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE;AAAA,EACzB,OAAO,QAAQ;AACjB,CAAC,CAAC;AAGF,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAM,YAAY,sBAAsB,MAAM;AAAA,EAChG,OAAO,QAAQ;AAAA,EACf,QAAQ;AAAA,EACR,SAAS,MAAM,QAAQ;AAAA,EACvB,QAAQ,OAAK;AAAA,EACb,OAAO,QAAQ;AACjB,CAAC,CAAC;AAGF,IAAM,yBAAsC,qBAAK,GAAG,CAAC,MAAM,YAAY,sBAAsB,MAAM;AAAA,EACjG,OAAO,QAAQ;AAAA,EACf,QAAQ,MAAM,QAAQ;AAAA,EACtB,SAAS;AAAA,EACT,QAAQ,CAAC,GAAG,OAAO;AAAA,EACnB,OAAO,QAAQ;AACjB,CAAC,CAAC;AAGF,IAAM,wBAAqC,qBAAK,GAAG,CAAC,MAAM,YAAY;AACpE,QAAM,OAAO,CAAC,OAAO,UAAU,cAAc;AAC3C,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK,eACH;AACE,eAAO,KAAK,UAAU1M,QAAQ;AAAA,UAC5B,WAAWoB;AAAA,UACX,WAAW,eAAa6S,SAAU,CAAC3I,KAAM,WAAW,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AAAA,QACrG,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAK,gBACH;AACE,eAAO,KAAK,WAAWtL,QAAQ;AAAA,UAC7B,WAAWoB;AAAA,UACX,WAAW,gBAAc6S,SAAU,CAAC3I,KAAM,YAAY,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,QAAQ,QAAQ,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC;AAAA,QAC3G,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAK,cACH;AACE,eAAO,KAAK,OAAO,QAAQ,GAAGmB,KAAM,OAAO,SAAS,GAAG;AAAA,UACrD,YAAY;AAAA,QACd,CAAC,GAAGmO,aAAY;AAAA,UACd,WAAW,WAAS3G,SAAU7S,MAAO8K,MAAO,KAAK,CAAC,CAAC;AAAA,UACnD,WAAW,CAAC,CAAC,YAAY,WAAW,MAAM;AACxC,gBAAIkB,QAAO,UAAU,KAAKA,QAAO,WAAW,GAAG;AAC7C,kBAAI,QAAQ,WAAW,KAAK,KAAK,QAAQ,YAAY,KAAK,GAAG;AAC3D,uBAAO,KAAK,UAAU,UAAU,SAAS;AAAA,cAC3C;AACA,kBAAI,QAAQ,WAAW,KAAK,GAAG;AAC7B,uBAAO,KAAK,SAAS,YAAY,KAAK,GAAG,UAAU,SAAS;AAAA,cAC9D;AACA,kBAAI,QAAQ,YAAY,KAAK,GAAG;AAC9B,uBAAO,KAAK,UAAU,WAAW,KAAK,GAAG,UAAU,SAAS;AAAA,cAC9D;AACA,qBAAO6G,SAAUA,SAAU1L,QAAM,WAAW,OAAO,YAAY,KAAK,CAAC,CAAC;AAAA,YACxE;AACA,gBAAI6E,QAAO,UAAU,KAAKF,QAAO,WAAW,GAAG;AAC7C,kBAAI,QAAQ,WAAW,KAAK,GAAG;AAC7B,uBAAO,KAAK,WAAW,UAAU,SAAS;AAAA,cAC5C;AACA,qBAAO+G,SAAUA,SAAU,CAAC,KAAK,WAAW,OAAO3I,KAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;AAAA,YAC5G;AACA,gBAAI4B,QAAO,UAAU,KAAKE,QAAO,WAAW,GAAG;AAC7C,kBAAI,QAAQ,YAAY,KAAK,GAAG;AAC9B,uBAAO,KAAK,YAAY,UAAU,SAAS;AAAA,cAC7C;AACA,qBAAO6G,SAAUA,SAAU,CAAC,KAAK,YAAY,OAAO3I,KAAM,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,QAAQ,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;AAAA,YACjH;AACA,mBAAO2I,SAAU7S,MAAOiM,MAAK,CAAC,CAAC;AAAA,UACjC;AAAA,QACF,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAK,cACH;AACE,eAAOuN,aAAY,UAAU;AAAA,UAC3B,WAAW,MAAQ;AAAA,YACjB,QAAQ,MAAM3G,SAAUA,SAAU,CAAC,KAAK,MAAM,YAAY3I,KAAM,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,QAAQ,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;AAAA,YACrH,QAAQ,WAAS2I,SAAU7S,MAAO8K,MAAO,KAAK,CAAC,CAAC;AAAA,UAClD,CAAC;AAAA,UACD,WAAW,eAAa,QAAQ,SAAS,IAAI,KAAK,SAAS,MAAM,UAAU,GAAG,UAAU,SAAS,IAAI+H,SAAUA,SAAU1L,QAAM,WAAW,MAAM,UAAU,CAAC,CAAC;AAAA,QAC9J,CAAC;AAAA,MACH;AAAA,MACF,KAAK,eACH;AACE,eAAOqS,aAAY,WAAW;AAAA,UAC5B,WAAW,MAAQ;AAAA,YACjB,QAAQ,MAAM3G,SAAUA,SAAU,CAAC3I,KAAM,MAAM,WAAW,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;AAAA,YAC1G,QAAQ,WAAS2I,SAAU7S,MAAO8K,MAAO,KAAK,CAAC,CAAC;AAAA,UAClD,CAAC;AAAA,UACD,WAAW,gBAAc,QAAQ,UAAU,IAAI,KAAK,UAAU,MAAM,SAAS,GAAG,UAAU,SAAS,IAAI+H,SAAUA,SAAU1L,QAAM,MAAM,WAAW,UAAU,CAAC,CAAC;AAAA,QAChK,CAAC;AAAA,MACH;AAAA,IACJ;AAAA,EACF;AACA,QAAMA,UAAQ,CAAC,WAAW,eAAe;AACvC,UAAM,UAAU,CAAChG,QAAO,UAAU,QAAQA,OAAM,SAAS;AACzD,UAAM,UAAU,CAAC;AACjB,QAAI,QAAQ;AACZ,QAAI,YAAY;AAChB,QAAI,aAAa;AACjB,QAAI,YAAY,KAAK,WAAWgK,WAAY,SAAS,CAAC;AACtD,QAAI,aAAa,KAAK,YAAYA,WAAY,UAAU,CAAC;AACzD,QAAI,KAAK,UAAU,CAAC;AACpB,QAAI,IAAI,UAAU,CAAC;AACnB,QAAI,KAAK,WAAW,CAAC;AACrB,QAAI,KAAK,WAAW,CAAC;AACrB,QAAI4N,QAAO;AACX,WAAOA,OAAM;AACX,YAAM,UAAU,QAAQ,MAAM,IAAI,EAAE;AACpC,UAAI,YAAY,GAAG;AACjB,gBAAQ,KAAK,CAAC,IAAI,QAAQ,OAAO,GAAG,EAAE,CAAC,CAAC;AACxC,YAAI,QAAQ,WAAW,SAAS,KAAK,QAAQ,YAAY,UAAU,GAAG;AACpE,sBAAY,YAAY;AACxB,uBAAa,aAAa;AAC1B,sBAAY,KAAK,WAAW5N,WAAY,SAAS,CAAC;AAClD,uBAAa,KAAK,YAAYA,WAAY,UAAU,CAAC;AACrD,eAAK,UAAU,CAAC;AAChB,cAAI,UAAU,CAAC;AACf,eAAK,WAAW,CAAC;AACjB,eAAK,WAAW,CAAC;AAAA,QACnB,WAAW,QAAQ,WAAW,SAAS,GAAG;AACxC,kBAAQ,UAAU,KAAK,WAAW,KAAO,YAAY,CAAC,CAAC,CAAC;AACxD,UAAA4N,QAAO;AAAA,QACT,WAAW,QAAQ,YAAY,UAAU,GAAG;AAC1C,kBAAQ,SAAS,KAAK,YAAY,KAAO,aAAa,CAAC,CAAC,CAAC;AACzD,UAAAA,QAAO;AAAA,QACT,OAAO;AACL,kBAAQ;AACR,UAAAA,QAAO;AAAA,QACT;AAAA,MACF,WAAW,UAAU,GAAG;AACtB,gBAAQ,KAAK,CAAC,IAAI,QAAQ,OAAO,CAAC,CAAC,CAAC;AACpC,YAAI,QAAQ,WAAW,SAAS,GAAG;AACjC,sBAAY,YAAY;AACxB,sBAAY,KAAK,WAAW5N,WAAY,SAAS,CAAC;AAClD,eAAK,UAAU,CAAC;AAChB,cAAI,UAAU,CAAC;AAAA,QACjB,OAAO;AACL,gBAAM,eAAe,CAAC;AACtB,uBAAa,KAAK,UAAU;AAC5B,iBAAO,QAAQ,YAAY,UAAU,GAAG;AACtC,yBAAa,aAAa;AAC1B,yBAAa,KAAK,YAAYA,WAAY,UAAU,CAAC;AACrD,yBAAa,KAAK,UAAU;AAAA,UAC9B;AACA,kBAAQ,SAAS,gBAAgB,YAAY,CAAC;AAC9C,UAAA4N,QAAO;AAAA,QACT;AAAA,MACF,OAAO;AACL,gBAAQ,KAAK,CAAC,IAAI,QAAQ,QAAQ,EAAE,CAAC,CAAC;AACtC,YAAI,QAAQ,YAAY,UAAU,GAAG;AACnC,uBAAa,aAAa;AAC1B,uBAAa,KAAK,YAAY5N,WAAY,UAAU,CAAC;AACrD,eAAK,WAAW,CAAC;AACjB,eAAK,WAAW,CAAC;AAAA,QACnB,OAAO;AACL,gBAAM,cAAc,CAAC;AACrB,sBAAY,KAAK,SAAS;AAC1B,iBAAO,QAAQ,WAAW,SAAS,GAAG;AACpC,wBAAY,YAAY;AACxB,wBAAY,KAAK,WAAWA,WAAY,SAAS,CAAC;AAClD,wBAAY,KAAK,SAAS;AAAA,UAC5B;AACA,kBAAQ,UAAU,gBAAgB,WAAW,CAAC;AAC9C,UAAA4N,QAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AACA,WAAO,CAAC,gBAAgB,OAAO,GAAG,KAAK;AAAA,EACzC;AACA,SAAO,cAAc,MAAM,QAAQ,OAAO,UAAU,IAAI;AAC1D,CAAC;AAGD,IAAM,aAA0B,qBAAK,GAAG,CAAC,MAAM,YAAY;AACzD,QAAM,OAAO,CAAC,OAAO,UAAU,cAAc;AAC3C,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK,eACH;AACE,eAAOS,aAAY,UAAU;AAAA,UAC3B,WAAW,WAAS3G,SAAU7S,MAAO,KAAK,CAAC;AAAA,UAC3C,WAAW,eAAa6S,SAAUA,SAAU,CAAC3I,KAAM,WAAW,QAAQ,MAAM,GAAG,SAAS,CAAC,CAAC;AAAA,QAC5F,CAAC;AAAA,MACH;AAAA,MACF,KAAK,gBACH;AACE,eAAOsP,aAAY,WAAW;AAAA,UAC5B,WAAW,WAAS3G,SAAU7S,MAAO,KAAK,CAAC;AAAA,UAC3C,WAAW,gBAAc6S,SAAUA,SAAU,CAAC3I,KAAM,YAAY,QAAQ,OAAO,GAAG,UAAU,CAAC,CAAC;AAAA,QAChG,CAAC;AAAA,MACH;AAAA,MACF,KAAK,cACH;AACE,eAAO,KAAK,OAAO,QAAQ,GAAGmB,KAAM,OAAO,SAAS,GAAG;AAAA,UACrD,YAAY;AAAA,QACd,CAAC,GAAGmO,aAAY;AAAA,UACd,WAAW,WAAS3G,SAAU7S,MAAO8K,MAAO,KAAK,CAAC,CAAC;AAAA,UACnD,WAAW,CAAC,CAAC,YAAY,WAAW,MAAM;AACxC,gBAAIkB,QAAO,UAAU,KAAKA,QAAO,WAAW,GAAG;AAC7C,kBAAI,QAAQ,WAAW,KAAK,KAAK,QAAQ,YAAY,KAAK,GAAG;AAC3D,uBAAO,KAAK,UAAU,UAAU,SAAS;AAAA,cAC3C;AACA,kBAAI,QAAQ,WAAW,KAAK,GAAG;AAC7B,uBAAO,KAAK,SAAS,YAAY,KAAK,GAAG,UAAU,SAAS;AAAA,cAC9D;AACA,kBAAI,QAAQ,YAAY,KAAK,GAAG;AAC9B,uBAAO,KAAK,UAAU,WAAW,KAAK,GAAG,UAAU,SAAS;AAAA,cAC9D;AACA,qBAAO6G,SAAUA,SAAUxH,MAAI,WAAW,OAAO,YAAY,OAAO,QAAQ,MAAM,CAAC,CAAC;AAAA,YACtF;AACA,gBAAIW,QAAO,UAAU,KAAKF,QAAO,WAAW,GAAG;AAC7C,qBAAO+G,SAAUA,SAAU,CAAC3I,KAAM,WAAW,OAAO,QAAQ,MAAM,GAAG,SAAS,CAAC,CAAC;AAAA,YAClF;AACA,gBAAI4B,QAAO,UAAU,KAAKE,QAAO,WAAW,GAAG;AAC7C,qBAAO6G,SAAUA,SAAU,CAAC3I,KAAM,YAAY,OAAO,QAAQ,OAAO,GAAG,UAAU,CAAC,CAAC;AAAA,YACrF;AACA,mBAAO2I,SAAU7S,MAAOiM,MAAK,CAAC,CAAC;AAAA,UACjC;AAAA,QACF,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAK,cACH;AACE,eAAOuN,aAAY,UAAU;AAAA,UAC3B,WAAW,MAAQ;AAAA,YACjB,QAAQ,MAAM3G,SAAUA,SAAU,CAAC3I,KAAM,MAAM,YAAY,QAAQ,OAAO,GAAG,UAAU,CAAC,CAAC;AAAA,YACzF,QAAQ,WAAS2I,SAAU7S,MAAO8K,MAAO,KAAK,CAAC,CAAC;AAAA,UAClD,CAAC;AAAA,UACD,WAAW,eAAa;AACtB,gBAAI,QAAQ,SAAS,GAAG;AACtB,qBAAO,KAAK,SAAS,MAAM,UAAU,GAAG,UAAU,SAAS;AAAA,YAC7D;AACA,gBAAI,QAAQ,MAAM,UAAU,GAAG;AAC7B,qBAAO,KAAK,UAAU,SAAS,GAAG,UAAU,SAAS;AAAA,YACvD;AACA,mBAAO+H,SAAUA,SAAUxH,MAAI,WAAW,MAAM,YAAY,QAAQ,MAAM,CAAC,CAAC;AAAA,UAC9E;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MACF,KAAK,eACH;AACE,eAAOmO,aAAY,WAAW;AAAA,UAC5B,WAAW,MAAQ;AAAA,YACjB,QAAQ,MAAM3G,SAAUA,SAAU,CAAC3I,KAAM,MAAM,WAAW,QAAQ,MAAM,GAAG,SAAS,CAAC,CAAC;AAAA,YACtF,QAAQ,WAAS2I,SAAU7S,MAAO8K,MAAO,KAAK,CAAC,CAAC;AAAA,UAClD,CAAC;AAAA,UACD,WAAW,gBAAc;AACvB,gBAAI,QAAQ,UAAU,GAAG;AACvB,qBAAO,KAAK,UAAU,MAAM,SAAS,GAAG,UAAU,SAAS;AAAA,YAC7D;AACA,gBAAI,QAAQ,MAAM,SAAS,GAAG;AAC5B,qBAAO,KAAK,SAAS,UAAU,GAAG,UAAU,SAAS;AAAA,YACvD;AACA,mBAAO+H,SAAUA,SAAUxH,MAAI,MAAM,WAAW,YAAY,QAAQ,MAAM,CAAC,CAAC;AAAA,UAC9E;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACJ;AAAA,EACF;AACA,QAAMA,QAAM,CAAC,WAAW,YAAY,MAAM;AACxC,UAAM,CAAC,QAAQoE,OAAM,IAAI,UAAU,WAAW,YAAY,CAAC;AAC3D,YAAQA,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,YAAI,QAAQA,QAAO,IAAI,GAAG;AACxB,iBAAO,CAAC,QAAQ,QAAQ;AAAA,QAC1B;AACA,eAAO,CAAC,QAAQ,UAAUA,QAAO,IAAI,CAAC;AAAA,MACxC;AAAA,MACF,KAAK,SACH;AACE,YAAI,QAAQA,QAAO,KAAK,GAAG;AACzB,iBAAO,CAAC,QAAQ,QAAQ;AAAA,QAC1B;AACA,eAAO,CAAC,QAAQ,SAASA,QAAO,KAAK,CAAC;AAAA,MACxC;AAAA,IACJ;AAAA,EACF;AACA,SAAO,cAAc,MAAM,QAAQ,OAAO,UAAU,IAAI;AAC1D,CAAC;AAGD,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAM,cAAc,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAG1G,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM;AAC5D,QAAM,eAAe,UAAQ,KAAK,MAAMlG,UAAU,CAAApI,WAAS,QAAQA,MAAK,IAAI,aAAa,IAAI,IAAI0R,SAAU1R,MAAK,CAAC,CAAC;AAClH,SAAO,KAAKqvB,QAAO,IAAI,GAAGtmB,MAAM,YAAY,GAAGmB,KAAM,KAAKmlB,QAAO,IAAI,GAAGtmB,MAAM,YAAY,CAAC,CAAC,GAAGX,UAAU,CAAC,CAAC8C,OAAMC,MAAK,MAAM,KAAK,iBAAiBqO,UAAStO,OAAMC,QAAO;AAAA,IACtK,YAAY,CAAC,UAAU,eAAe,KAAKoQ,SAAU,MAAM,QAAQ,GAAGpR,SAAUxB,MAAK,UAAU,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;AAAA,IACzH,aAAa,CAAC,WAAW,cAAc,KAAK4S,SAAU,MAAM,SAAS,GAAGpR,SAAUxB,MAAK,SAAS,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;AAAA,EAC7H,CAAC,CAAC,GAAGP,UAAQ,CAAC,CAAC,GAAG,GAAG,SAAS,MAAM,KAAKme,YAAW1d,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,GAAGT,UAAQ,YAAU,KAAKic,WAAU,YAAY,KAAK,GAAGtb,KAAM,QAAM,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,KAAK,GAAGA,KAAM,OAAK,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG0kB,QAAO,KAAK,mBAAmBviB,KAAI,GAAG,YAAY,mBAAmBC,MAAK,CAAC,GAAG,oBAAoB1N,OAAM;AAAA,IACxU,QAAQ,eAAa,KAAKslB,QAAO,QAAQ,CAAC,CAAC,GAAG,WAAW,MAAM,CAAC,KAAK,WAAWha,KAAM,OAAK,EAAE,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,WAAW,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC;AAAA,IACtJ,SAAS,gBAAc,KAAKga,QAAO,QAAQ,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,YAAYha,KAAM,QAAM,EAAE,YAAY,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,WAAW,UAAU,CAAC,CAAC,CAAC,CAAC;AAAA,EAC3J,CAAC,CAAC,GAAGX,UAAQic,UAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGgL,OAAM,CAAC,GAAGnB,SAAQ;AACnD,CAAC;AAGD,IAAMpd,WAAuB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAM,cAAc,MAAM,CAAC,QAAQ,YAAY;AACvG,MAAI,OAAO,SAAS,QAAQ,QAAQ;AAClC,WAAO,CAAC,KAAK,QAAQ,KAAO,QAAQ,MAAM,CAAC,GAAG5F,MAAK,KAAK,QAAQ,KAAO,QAAQ,MAAM,CAAC,CAAC,CAAC;AAAA,EAC1F;AACA,SAAO,CAAC,QAAQC,OAAM,KAAK,SAAS,KAAO,OAAO,MAAM,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC;AAGH,IAAMyF,YAAwB,qBAAK,GAAG,CAAC,MAAM,SAAS,KAAK,MAAM,cAAc,MAAM,CAAC,QAAQ,YAAY;AACxG,MAAI,OAAO,SAAS,QAAQ,QAAQ;AAClC,WAAO,CAAC,SAAS1F,MAAK,KAAK,QAAQ,KAAO,QAAQ,MAAM,CAAC,CAAC,CAAC;AAAA,EAC7D;AACA,SAAO,CAAC,KAAK,SAAS,KAAO,OAAO,MAAM,CAAC,GAAGC,OAAM,KAAK,SAAS,KAAO,OAAO,MAAM,CAAC,CAAC,CAAC;AAC3F,CAAC,CAAC,CAAC;AAGH,IAAMhB,YAAuB,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM,KAAK,MAAM,cAAc,MAAM,CAAC,WAAW,eAAe,UAAU,WAAW,YAAY,CAAC,CAAC,CAAC,CAAC;AAGvJ,IAAM,gBAA6B,qBAAK,GAAG,CAAC,MAAM,MAAM,MAAM;AAC5D,QAAM,OAAO,CAAC,OAAO,UAAU,cAAc;AAC3C,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAKsiB,eACH;AACE,eAAO,KAAK,OAAO,QAAQ,GAAGviB,KAAM,OAAO,SAAS,GAAG;AAAA,UACrD,YAAY;AAAA,QACd,CAAC,GAAGmO,aAAY;AAAA,UACd,WAAW,WAAS3G,SAAU7S,MAAO8K,MAAO,KAAK,CAAC,CAAC;AAAA,UACnD,WAAW,CAAC,CAAC,YAAY,WAAW,MAAM;AACxC,gBAAIkB,QAAO,UAAU,KAAKA,QAAO,WAAW,GAAG;AAC7C,kBAAI,QAAQ,WAAW,KAAK,KAAK,QAAQ,YAAY,KAAK,GAAG;AAC3D,uBAAO,KAAK+hB,WAAY,UAAU,SAAS;AAAA,cAC7C;AACA,kBAAI,QAAQ,WAAW,KAAK,GAAG;AAC7B,uBAAO,KAAKC,UAAW,YAAY,KAAK,GAAG,UAAU,SAAS;AAAA,cAChE;AACA,kBAAI,QAAQ,YAAY,KAAK,GAAG;AAC9B,uBAAO,KAAKC,WAAY,WAAW,KAAK,GAAG,UAAU,SAAS;AAAA,cAChE;AACA,qBAAOpb,SAAUA,SAAUxH,MAAI,WAAW,OAAO,YAAY,KAAK,CAAC,CAAC;AAAA,YACtE;AACA,mBAAOwH,SAAU7S,MAAOiM,MAAK,CAAC,CAAC;AAAA,UACjC;AAAA,QACF,CAAC,CAAC;AAAA,MACJ;AAAA,MACF,KAAK4hB,eACH;AACE,eAAOrU,aAAY,UAAU;AAAA,UAC3B,WAAW,WAAS3G,SAAU7S,MAAO,KAAK,CAAC;AAAA,UAC3C,WAAW,eAAa;AACtB,gBAAI,QAAQ,SAAS,GAAG;AACtB,qBAAO,KAAKguB,UAAW,MAAM,UAAU,GAAG,UAAU,SAAS;AAAA,YAC/D;AACA,gBAAI,QAAQ,MAAM,UAAU,GAAG;AAC7B,qBAAO,KAAKC,WAAY,SAAS,GAAG,UAAU,SAAS;AAAA,YACzD;AACA,mBAAOpb,SAAUA,SAAUxH,MAAI,WAAW,MAAM,UAAU,CAAC,CAAC;AAAA,UAC9D;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MACF,KAAKyiB,gBACH;AACE,eAAOtU,aAAY,WAAW;AAAA,UAC5B,WAAW,WAAS3G,SAAU7S,MAAO,KAAK,CAAC;AAAA,UAC3C,WAAW,gBAAc;AACvB,gBAAI,QAAQ,UAAU,GAAG;AACvB,qBAAO,KAAKiuB,WAAY,MAAM,SAAS,GAAG,UAAU,SAAS;AAAA,YAC/D;AACA,gBAAI,QAAQ,MAAM,SAAS,GAAG;AAC5B,qBAAO,KAAKD,UAAW,UAAU,GAAG,UAAU,SAAS;AAAA,YACzD;AACA,mBAAOnb,SAAUA,SAAUxH,MAAI,MAAM,WAAW,UAAU,CAAC,CAAC;AAAA,UAC9D;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACJ;AAAA,EACF;AACA,QAAMA,QAAM,CAAC,WAAW,eAAe;AACrC,UAAM,CAAC,QAAQoE,OAAM,IAAI,EAAE,WAAW,UAAU;AAChD,YAAQA,QAAO,MAAM;AAAA,MACnB,KAAK,QACH;AACE,YAAI,QAAQA,QAAO,IAAI,GAAG;AACxB,iBAAO,CAAC,QAAQse,SAAU;AAAA,QAC5B;AACA,eAAO,CAAC,QAAQE,WAAYxe,QAAO,IAAI,CAAC;AAAA,MAC1C;AAAA,MACF,KAAK,SACH;AACE,YAAI,QAAQA,QAAO,KAAK,GAAG;AACzB,iBAAO,CAAC,QAAQse,SAAU;AAAA,QAC5B;AACA,eAAO,CAAC,QAAQC,UAAWve,QAAO,KAAK,CAAC;AAAA,MAC1C;AAAA,IACJ;AAAA,EACF;AACA,SAAO,KAAK,MAAM,cAAc,MAAMse,WAAY,IAAI,CAAC;AACzD,CAAC;AAGD,IAAM,eAAe,UAAQ,KAAK,MAAM5jB,UAAS,GAAG,CAAC,OAAO,MAAM,CAAC,QAAQ,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AAG1F,IAAM,cAAc,UAAQ;AAC1B,QAAMmc,WAAU,CAAAvc,UAAQ,cAAc;AAAA,IACpC,SAAS,CAAA3H,WAAS;AAChB,YAAM,CAAC,SAASjB,MAAK,IAAIgJ,UAAW/H,QAAO2H,OAAM,CAAC,MAAM,SAAS,CAACe,MAAO,IAAI,GAAG,KAAK,MAAM,IAAM,OAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAClH,YAAM,SAAS7B,WAAY9H,QAAO,CAAAmG,YAAU0E,QAAO1E,OAAM,IAAIwD,MAAO,CAACxD,QAAO,MAAM,CAAC,GAAGwD,MAAOxD,QAAO,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI2E,MAAK,CAAC;AACxH,aAAO1C,UAAU,MAAM,MAAM,GAAG,MAAM+c,SAAQ,OAAO,CAAC;AAAA,IACxD;AAAA,IACA,WAAW1T;AAAA,IACX,QAAQ,MAAM,MAAQ7I,OAAM;AAAA,MAC1B,QAAQ,MAAMyH;AAAA,MACd,QAAQ,CAAA3S,WAASkT,UAAW,MAAM1H,IAAG,CAACxL,QAAOoN,MAAK,CAAC,CAAC,CAAC,GAAGuF,KAAM;AAAA,IAChE,CAAC;AAAA,EACH,CAAC;AACD,SAAO,IAAI,WAAW,KAAK2c,WAAU,IAAI,GAAG,aAAa7H,SAAQra,MAAK,CAAC,CAAC,CAAC,CAAC;AAC5E;AAGA,IAAM,kBAAkB,UAAQ,KAAK,MAAM9B,UAAS8B,MAAK,GAAG,CAAC,MAAM,SAAS,CAACnB,MAAO,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;AAGzG,IAAM,yBAAyB,UAAQ,KAAK,YAAY,gBAAgB,IAAI,CAAC,GAAGZ,MAAI,CAAC,CAAC,CAAC,MAAM,IAAI,GAAGhG,KAAI,MAAM,CAAC,MAAM,MAAM,KAAKA,OAAM,IAAM,CAAA6e,WAASA,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGjK,IAAM,YAAY,CAAC,QAAQ,SAAS,MAAM;AACxC,MAAI,OAAO,SAAS,QAAQ,QAAQ;AAClC,WAAO,CAAC,KAAK,QAAQ,KAAO,QAAQ,MAAM,GAAGzX,SAAU,SAAS,CAAC,CAAC,GAAGe,MAAK,KAAK,QAAQ,KAAO,QAAQ,MAAM,CAAC,CAAC,CAAC;AAAA,EACjH;AACA,SAAO,CAAC,KAAK,QAAQf,SAAU,KAAK,SAAS,KAAO,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,GAAGgB,OAAM,KAAK,SAAS,KAAO,OAAO,MAAM,CAAC,CAAC,CAAC;AACvH;AAKA,IAAMyG,MAAkB,gBAAAF,UAAQ,CAAC,CAAC;AAGlC,IAAM7L,QAAoB,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,UAAU,CAAC,MAAM,KAAK,GAAG,YAAYuC,UAAQ,MAAM,OAAKW,MAAI,EAAE,CAAC,GAAG,QAAM;AAAA,EAChI,GAAG;AAAA,EACH,CAAC,GAAG,GAAG;AACT,EAAE,GAAG,OAAO,CAAC;AAGb,IAAM+J,UAAsB,qBAAK,GAAG,CAAC,MAAM,QAAQ/J,MAAI,MAAM,QAAM;AAAA,EACjE,CAAC,GAAG,GAAG;AACT,EAAE,CAAC;AAGH,IAAMoO,QAAoB,qBAAK,GAAG,CAAC,MAAM,KAAK,MAAMpO,MAAI,MAAM,QAAM;AAAA,EAClE,GAAG;AAAA,EACH,CAAC,GAAG,GAAG,EAAE,CAAC;AACZ,EAAE,CAAC;AAcH,IAAM,aAA0B,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,WAAW,YAAYwS,SAAQ,MAAM;AAC1G,QAAM,UAAU,IAAI,YAAY,QAAQ;AACxC,SAAOxS,MAAI,MAAM,OAAK,QAAQ,OAAO,CAAC,CAAC;AACzC,CAAC,CAAC;AAGF,IAAM,aAAa,UAAQwS,SAAQ,MAAM;AACvC,QAAM,UAAU,IAAI,YAAY;AAChC,SAAOxS,MAAI,MAAM,OAAK,QAAQ,OAAO,CAAC,CAAC;AACzC,CAAC;;;AC57FD;AAAA;AAAA,sBAAAumB;AAAA,EAAA,WAAA9kB;AAAA,EAAA,aAAAF;AAAA,EAAA,eAAAilB;AAAA,EAAA,aAAAvvB;AAAA,EAAA,YAAAkF;AAAA,EAAA,YAAArG;AAAA,EAAA,eAAAkjB;AAAA,EAAA,eAAAxS;AAAA,EAAA,eAAAigB;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAArL;AAAA,EAAA,WAAArb;AAAA,EAAA,kBAAA2mB;AAAA,EAAA,iBAAAjO;AAAA,EAAA,cAAAC;AAAA,EAAA,cAAAtW;AAAA,EAAA,cAAAjF;AAAA,EAAA,cAAAiG;AAAA,EAAA,gBAAAujB;AAAA,EAAA,iBAAAhO;AAAA,EAAA,cAAA9H;AAAA,EAAA,cAAAwH;AAAA,EAAA,cAAAE;AAAA,EAAA,eAAA7P;AAAA,EAAA,eAAA6J;AAAA,EAAA,YAAA7Y;AAAA,EAAA,cAAA+oB;AAAA,EAAA,gBAAAjO;AAAA,EAAA,mBAAAoS;AAAA,EAAA,uBAAAC;AAAA,EAAA,WAAA3lB;AAAA,EAAA,eAAAC;AAAA;AASA,IAAMmlB,gBAAe;AAwBrB,IAAM9kB,OAAMA;AAQZ,IAAMF,SAAQA;AAQd,IAAMilB,WAAU;AAQhB,IAAMvvB,SAAQA;AAQd,IAAMkF,QAAO;AAQb,IAAMrG,SAAOA;AAQb,IAAMuM,UAASA;AAQf,IAAMokB,WAAU;AAQhB,IAAMpL,YAAW;AAmBjB,IAAMqL,YAAW;AASjB,IAAM1mB,QAAMA;AAUZ,IAAM2mB,cAAa;AAUnB,IAAMjO,aAAY;AASlB,IAAMC,UAAS;AAUf,IAAMtV,WAASA;AAUf,IAAMujB,YAAW;AASjB,IAAMxpB,UAAS;AAQf,IAAMwb,aAAY;AASlB,IAAM9H,UAAS;AAQf,IAAMwH,UAAS;AAQf,IAAM9R,WAAUA;AAQhB,IAAMgS,UAASA;AAQf,IAAM7P,YAAUA;AAQhB,IAAM6J,WAAUA;AAQhB,IAAM7Y,QAAOA;AAQb,IAAMqf,WAAUA;AAkBhB,IAAM0J,UAAS;AASf,IAAMjO,YAAW;AASjB,IAAMoS,eAAc;AAQpB,IAAMC,mBAAkB;AASxB,IAAM3lB,QAAMA;AASZ,IAAMC,YAAUA;;;AC9ThB;AAAA;AAAA,4BAAA2lB;AAAA,EAAA,iBAAAzL;AAAA,EAAA,kBAAA0L;AAAA,EAAA,sBAAAC;AAAA,EAAA,YAAAnnB;AAAA,EAAA,kBAAAonB;AAAA,EAAA,aAAAvyB;AAAA;AAUA,IAAMoyB,sBAAqB;AAoB3B,IAAME,kBAAiB;AAMvB,IAAMnnB,SAAOA;AAMb,IAAMwb,aAAY;AAMlB,IAAM0L,cAAa;AAMnB,IAAMryB,SAAQ;AAMd,IAAMuyB,cAAa;;;AC+MnB,IAAM,sBAAsB;AAAA,EAC1B,GAAGjM;AAAA,EACH,SAAS;AACP,WAAOnlB,MAAK,IAAI;AAAA,EAClB;AAAA,EACA,WAAW;AACT,WAAO,GAAG,KAAK,IAAI,KAAK,KAAK,OAAO;AAAA,EACtC;AACF;;;ACjQA,IAAM,mBAAmB;AAGzB,IAAM,gBAA6B,uBAAO,IAAI,gBAAgB;AAG9D,IAAM,kBAAkB;AAAA,EACtB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAGA,IAAM,YAAY,OAAK,YAAY,GAAG,aAAa;AAGnD,IAAM,WAAwB,qBAAK,UAAQ,UAAU,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,YAAYuJ,UAAQ,KAAK,SAAS,CAAC,CAAC,KAAK,KAAK,MAAM,EAAE,KAAK,YAAYilB,WAAU,OAAO;AAAA,EAC/J,UAAU;AACZ,CAAC,CAAC,CAAC,GAAG;AAAA,EACJ,aAAa;AAAA,EACb,YAAY,SAAS,cAAc;AACrC,CAAC,CAAC;AAqBF,IAAMxkB,SAAO,CAAAqnB,cAAY;AAAA,EACvB,CAAC,aAAa,GAAG;AAAA,EACjB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA,EACA,SAAAA;AACF;AAKA,IAAM,UAAuB,qBAAK,UAAQ,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,YAAYrnB,OAAKigB,cAAand,KAAI,WAAW,GAAG;AACrH,QAAM,UAAU,OAAO,EAAE9C,OAAO,CAAC;AACjC,QAAM,SAAS,OAAO,EAAEgJ,gBAAesS,SAAQ,SAAS,cAAc,EAAE,GAAG,WAASkF,UAAS,KAAK,CAAC,CAAC;AACpG,QAAM,MAAM,OAAO,EAAExgB,OAAO,oBAAI,IAAI,CAAC,CAAC;AACtC,QAAM6E,OAAM,OAAO,EAAE,oBAAoB,MAAM,CAAC,GAAG,+BAA+B,SAAS,cAAc,IAAI,CAAC,CAAC,KAAKhQ,MAAK,MAAM0K,UAAU0b,QAAO,OAAO,GAAG,CAAAsB,OAAKA,GAAE,KAAK1nB,MAAK,CAAC,GAAG,CAAAoS,UAAQmZ,OAAM,QAAQnZ,KAAI,CAAC,CAAC;AAC3M,SAAO,EAAE4B,SAAU,SAAS,CAAC,KAAK,MAAM,KAAKnJ,MAAI,GAAG,GAAGQ,MAAM,CAAAA,UAAO,aAAaA,MAAI,IAAI,GAAG,CAAC,CAAC,GAAGX,UAAU,MAAM;AAAA,IAC/G,QAAQ,MAAMA,UAAUsF,MAAK,CAAC,CAAC,OAAO,KAAK,MAAMkD,UAAS5B,QAAO,KAAK,CAAAjG,UAAOA,MAAI,IAAI,KAAK,KAAK,CAAC,GAAG,KAAKkgB,OAAM,QAAQvX,SAAU,CAAC,KAAK,WAAW,OAAO,CAAA5B,UAAQ,IAAI,SAAS,KAAKA,OAAM/G,MAAM,CAAA6Y,WAAS1Y,IAAG0Y,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG5W,IAAG,OAAK,MAAM,KAAK,CAAC,CAAC,CAAC;AAAA,IAClP,QAAQ,WAAS0G,SAAQ,OAAK,MAAM,KAAK;AAAA,EAC3C,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,SAAO,kBAAkB2b,WAAU,QAAQ;AAAA,IACzC,UAAU;AAAA,EACZ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC;AAGJ,IAAM,mBAAgC,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,YAAY,CAAC,MAAM,GAAG,YAAY;AACtG,MAAI,SAAS,KAAK;AAChB,WAAO,SAAS,WAAW,MAAM,QAAQ,KAAK;AAAA,MAC5C,YAAY,QAAQ;AAAA,IACtB,CAAC,GAAG,CAAC,GAAG,MAAM,oBAAoB,GAAG,CAAC,CAAC;AAAA,EACzC;AACA,SAAO,iBAAiB,SAAS,aAAa,MAAM,oBAAoB,MAAM,CAAC,GAAG,OAAK,SAAS,YAAYjlB,UAAQ,MAAM,OAAKme,YAAW,EAAE,CAAC,CAAC,GAAG;AAAA,IAC/I,aAAa;AAAA,EACf,CAAC,IAAI,aAAa,MAAM,GAAG,CAAC,CAAC;AAC/B,CAAC;AAGD,IAAM,aAA0B,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,UAAU,CAAC,MAAM,KAAK,GAAG,YAAY,iBAAiB,MAAM,OAAKxd,MAAM,EAAE,CAAC,GAAG,QAAM;AAAA,EACjJ,GAAG;AAAA,EACH,CAAC,GAAG,GAAG;AACT,EAAE,GAAG,OAAO,CAAC;AACb,IAAM,aAAa,CAAC,SAAS,MAAM,IAAI,WAAW,SAAS,CAAC;AAC5D,IAAM,aAAN,MAAiB;AAAA,EACf,CAAC6gB,cAAa,IAAI;AAAA,IAChB,MAAM,OAAK;AAAA,EACb;AAAA,EACA,YAAY,SAAS,GAAG;AACtB,SAAK,UAAU;AACf,SAAK,IAAI;AAAA,EACX;AAAA,EACA,WAAW;AACT,WAAO5C,UAAS,KAAK,OAAO;AAAA,EAC9B;AAAA,EACA,OAAO;AACL,WAAO/jB,OAAK,KAAK,OAAO;AAAA,EAC1B;AAAA,EACA,aAAa;AACX,WAAO,KAAK,QAAQ,WAAW;AAAA,EACjC;AAAA,EACA,gBAAgB;AACd,WAAO8mB,eAAc,KAAK,OAAO;AAAA,EACnC;AAAA,EACA,WAAW;AACT,WAAO,KAAK,QAAQ,SAAS;AAAA,EAC/B;AAAA,EACA,aAAa;AACX,WAAOZ,YAAW,KAAK,OAAO;AAAA,EAChC;AAAA,EACA,WAAW;AACT,WAAOE,UAAS,KAAK,OAAO;AAAA,EAC9B;AAAA,EACA,SAAS;AACP,WAAOS,QAAO,KAAK,OAAO;AAAA,EAC5B;AAAA,EACA,UAAU;AACR,WAAO5c,UAAQ,KAAK,OAAO;AAAA,EAC7B;AAAA,EACA,OAAO;AACL,WAAO,KAAK8b,MAAK,KAAK,OAAO,GAAGjgB,MAAM,OAAK,KAAK,EAAE,CAAC,CAAC,CAAC;AAAA,EACvD;AAAA,EACA,UAAU;AACR,WAAO,KAAKihB,SAAQ,KAAK,OAAO,GAAGjhB,MAAMA,KAAM,OAAK,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAAA,EACjE;AAAA,EACA,SAASsB,MAAK;AACZ,WAAO,KAAK4f,UAAS,KAAK,SAAS5f,IAAG,GAAGtB,MAAMA,KAAM,OAAK,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAAA,EACvE;AAAA,EACA,YAAYzH,MAAK+I,MAAK;AACpB,WAAO,KAAK6f,aAAY,KAAK,SAAS5oB,MAAK+I,IAAG,GAAGtB,MAAMA,KAAM,OAAK,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAAA,EAC/E;AAAA,EACA,MAAM,GAAG;AACP,WAAO,KAAKohB,OAAM,KAAK,SAAS,CAAC,GAAGphB,MAAMA,KAAM,OAAK,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAAA,EAClE;AAAA,EACA,OAAO;AACL,WAAO,KAAKgb,MAAK,KAAK,OAAO,GAAGhb,MAAM,IAAM,OAAK,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAAA,EAC9D;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAGA,IAAM,aAA0B,qBAAK,UAAQ,OAAO,KAAK,CAAC,MAAM,YAAY,CAAC,MAAM,GAAG,YAAY;AAChG,QAAM6O,QAAO,CAAC7O,OAAK,eAAe,cAAc;AAAA,IAC9C,SAAS,CAAA9H,WAASmH,UAAUme,YAAapZ,SAAQ,gBAAgBlM,QAAO,CAAC,GAAG,CAAC,CAAC,KAAKD,OAAM,MAAM;AAC7F,YAAM,aAAa+H,MAAI,IAAI,GAAG;AAC9B,UAAI,eAAe,QAAW;AAC5B,eAAO,KAAKob,SAAQ,SAAS,cAAc,EAAE,GAAG/b,UAAU,CAAA+nB,gBAAc,KAAKztB,MAAK,MAAM;AACtF,UAAAqG,MAAI,IAAI,KAAKonB,WAAU;AAAA,QACzB,CAAC,GAAGvf,UAASqY,OAAM,YAAY/f,IAAK,CAAC,KAAKinB,WAAU,CAAC,CAAC,CAAC,GAAGvf,UAAS,KAAKqY,OAAMkH,aAAYnwB,OAAMgB,OAAM,CAAC,GAAGuS,gBAAe,CAAAlU,WAAS6R,mBAAkB7R,MAAK,IAAIsK,MAAK0G,KAAI,IAAIvF,MAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,MACvL;AACA,aAAOyI,gBAAe0V,OAAM,YAAYjpB,OAAMgB,OAAM,CAAC,GAAG,CAAA3B,WAAS6R,mBAAkB7R,MAAK,IAAIsK,MAAK0G,KAAI,IAAIvF,MAAK,CAAC;AAAA,IACjH,GAAG;AAAA,MACD,SAAS;AAAA,IACX,CAAC,CAAC,GAAG,MAAM8M,MAAK7O,OAAK,UAAU,CAAC;AAAA,IAChC,WAAW,CAAA1J,WAASknB,YAAa0C,OAAM,YAAYxX,YAAUpS,MAAK,CAAC,CAAC;AAAA,IACpE,QAAQ,MAAM,KAAKknB,YAAa,KAAKpZ,SAAQpE,MAAI,QAAQ,GAAG,CAAC,CAAC,GAAG,UAAU,MAAM,KAAKkgB,OAAM,YAAY3oB,IAAG,GAAGiT,gBAAe,CAAAlU,WAAS6R,mBAAkB7R,MAAK,IAAIsK,MAAK0G,KAAI,IAAIvF,MAAK,CAAC,CAAC,GAAG;AAAA,MACtL,SAAS;AAAA,IACX,CAAC,GAAG8F,UAASqY,OAAM,YAAY3oB,IAAG,CAAC,CAAC,CAAC,CAAC;AAAA,EACxC,CAAC;AACD,SAAOuI,OAAKigB,cAAa,KAAKpmB,MAAK,MAAM,oBAAI,IAAI,CAAC,GAAG0F,UAAU,CAAAW,UAAO,KAAK8I,gBAAeqS,WAAU,GAAG,WAASmF,UAAS,KAAK,CAAC,GAAGjhB,UAAU,WAAS,KAAK,MAAM4kB,YAAW,OAAOpV,MAAK7O,OAAK,KAAK,CAAC,GAAG,OAAO,WAAWkN,aAAYjL,IAAG,YAAYqiB,WAAU,OAAO;AAAA,IACjQ,UAAU;AAAA,EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC;AAOD,IAAM,kBAA+B,qBAAK,GAAG,CAAC,UAAU,MAAM;AAC5D,QAAM,UAAU,CAAC;AACjB,QAAMntB,YAAW,SAAS,OAAO,QAAQ,EAAE;AAC3C,QAAM6I,QAAM,oBAAI,IAAI;AACpB,MAAIhG;AACJ,UAAQA,QAAO7C,UAAS,KAAK,MAAM,CAAC6C,MAAK,MAAM;AAC7C,UAAMrF,SAAQqF,MAAK;AACnB,UAAM,MAAM,EAAErF,MAAK;AACnB,QAAIqL,MAAI,IAAI,GAAG,GAAG;AAChB,YAAM,eAAeA,MAAI,IAAI,GAAG;AAChC,mBAAa,KAAKrL,MAAK;AAAA,IACzB,OAAO;AACL,YAAM,eAAe,CAACA,MAAK;AAC3B,cAAQ,KAAK,CAAC,KAAK,YAAY,CAAC;AAChC,MAAAqL,MAAI,IAAI,KAAK,YAAY;AAAA,IAC3B;AAAA,EACF;AACA,SAAO,gBAAgB,QAAQ,IAAI,CAAA6Y,WAAS,CAACA,OAAM,CAAC,GAAG,gBAAgBA,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC;;;ACzMD,IAAMrX,WAAsB,uBAAO,IAAI,uBAAuB;AAY9D,IAAM,sBAAsB;AAAA,EAC1B,CAACA,QAAM,GAAGA;AAAA,EACV,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,MAAM,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,OAAO,QAAQ,EAAE;AAAA,EAClE;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;;;ACxCA;AAAA;AAAA,0BAAA6lB;AAAA,EAAA,UAAAxe;AAAA,EAAA,oBAAAmb;AAAA,EAAA,kBAAAsD;AAAA,EAAA,wBAAAC;AAAA,EAAA,sBAAAze;AAAA,EAAA,iBAAA0e;AAAA,EAAA,uBAAAC;AAAA,EAAA,6BAAAC;AAAA,EAAA,UAAAzlB;AAAA,EAAA,aAAA0lB;AAAA,EAAA,mBAAAhe;AAAA,EAAA,sBAAAie;AAAA,EAAA,mBAAA/d;AAAA,EAAA,mBAAAge;AAAA,EAAA,YAAA/qB;AAAA,EAAA,kBAAAgrB;AAAA,EAAA,cAAA/d;AAAA,EAAA,mBAAAge;AAAA,EAAA,iBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,gCAAAC;AAAA,EAAA,cAAApxB;AAAA,EAAA,oBAAAqxB;AAAA,EAAA,gBAAAje;AAAA,EAAA,qBAAAC;AAAA,EAAA,iBAAAG;AAAA,EAAA,sBAAAC;AAAA,EAAA,gBAAAE;AAAA,EAAA,iBAAAC;AAAA,EAAA,eAAA0d;AAAA,EAAA,mBAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,cAAA3vB;AAAA,EAAA,kBAAA4vB;AAAA,EAAA,eAAA3jB;AAAA,EAAA,qBAAA4jB;AAAA,EAAA,cAAA/D;AAAA,EAAA,iBAAAC;AAAA,EAAA,eAAArsB;AAAA,EAAA,mBAAA0S;AAAA,EAAA,yBAAAC;AAAA,EAAA,yBAAAyd;AAAA,EAAA,aAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,kBAAAvxB;AAAA,EAAA,WAAAgQ;AAAA,EAAA,kBAAA8D;AAAA,EAAA,eAAAC;AAAA,EAAA,uBAAAyd;AAAA,EAAA,8BAAAC;AAAA,EAAA,aAAA1G;AAAA,EAAA,iBAAA2G;AAAA,EAAA,YAAAnE;AAAA,EAAA,iBAAAC;AAAA,EAAA,iBAAAtZ;AAAA,EAAA,uBAAAyd;AAAA,EAAA,iBAAAxd;AAAA,EAAA,uBAAAyd;AAAA,EAAA,cAAA7jB;AAAA,EAAA,aAAAxN;AAAA,EAAA,kBAAAsxB;AAAA,EAAA,gBAAAzd;AAAA,EAAA,oBAAAqZ;AAAA,EAAA,eAAAqE;AAAA,EAAA,YAAAxzB;AAAA,EAAA,iBAAA4S;AAAA,EAAA,qBAAAuD;AAAA,EAAA,gBAAAC;AAAA,EAAA,cAAApN;AAAA,EAAA,oBAAAyqB;AAAA,EAAA,iBAAAxqB;AAAA,EAAA,uBAAAyqB;AAAA,EAAA,sBAAAxqB;AAAA,EAAA,4BAAAyqB;AAAA,EAAA,iBAAAnvB;AAAA,EAAA,YAAA4qB;AAAA,EAAA,kBAAAwE;AAAA,EAAA,eAAArqB;AAAA,EAAA,eAAAC;AAAA,EAAA,qBAAAqqB;AAAA,EAAA,qBAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,eAAAld;AAAA,EAAA,yBAAAmd;AAAA,EAAA,mBAAA3F;AAAA,EAAA,iBAAA/I;AAAA,EAAA,uBAAA2O;AAAA,EAAA,sBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,kBAAA3M;AAAA,EAAA,wBAAA4M;AAAA,EAAA,oBAAA7qB;AAAA,EAAA,0BAAA8qB;AAAA,EAAA,2BAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,gBAAApF;AAAA,EAAA,iBAAAb;AAAA,EAAA,0BAAAkG;AAAA,EAAA,8BAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,eAAA1D;AAAA,EAAA,qBAAA2D;AAAA,EAAA,iBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,qBAAAhG;AAAA,EAAA,6BAAAP;AAAA,EAAA,mBAAAwG;AAAA,EAAA,0BAAAC;AAAA,EAAA,eAAAxd;AAAA,EAAA,WAAAK;AAAA,EAAA,YAAAtO;AAAA,EAAA,WAAAE;AAAA,EAAA,gBAAAC;AAAA,EAAA,sBAAAurB;AAAA,EAAA,eAAA7jB;AAAA,EAAA,iBAAA8jB;AAAA,EAAA,uBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,4BAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,gBAAA9c;AAAA,EAAA,qBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,aAAAlS;AAAA,EAAA,gBAAAsS;AAAA,EAAA,mBAAAyc;AAAA,EAAA,iBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,iBAAA5G;AAAA,EAAA,gBAAAC;AAAA,EAAA,aAAA7V;AAAA,EAAA,cAAAsS;AAAA,EAAA,eAAA5rB;AAAA,EAAA,aAAAwZ;AAAA,EAAA,iBAAAC;AAAA,EAAA,cAAAxM;AAAA,EAAA,oBAAAmiB;AAAA,EAAA,kBAAA1V;AAAA,EAAA,qBAAAqc;AAAA,EAAA,0BAAAC;AAAA,EAAA,2BAAAC;AAAA,EAAA,qBAAAtc;AAAA,EAAA,gBAAA3R;AAAA,EAAA,qBAAAkuB;AAAA,EAAA,2BAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,iBAAApsB;AAAA,EAAA,uBAAAqsB;AAAA,EAAA,YAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,gCAAAC;AAAA,EAAA,eAAAvsB;AAAA,EAAA,sBAAAshB;AAAA,EAAA,oBAAAkL;AAAA,EAAA,sBAAA1c;AAAA,EAAA,4BAAAC;AAAA,EAAA,4BAAA0c;AAAA,EAAA,wBAAApH;AAAA,EAAA,aAAAC;AAAA,EAAA,eAAAoH;AAAA,EAAA,mBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,cAAApc;AAAA,EAAA,oBAAAqc;AAAA,EAAA,yBAAAC;AAAA,EAAA,+BAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,gCAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,aAAA1c;AAAA,EAAA,WAAAiJ;AAAA,EAAA,kBAAA0T;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAAhI;AAAA,EAAA,eAAAiI;AAAA,EAAA,qBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,2BAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,gCAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,6BAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,6BAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,2BAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,kCAAAC;AAAA,EAAA,0BAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,iBAAApJ;AAAA,EAAA,cAAAqJ;AAAA,EAAA,YAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,wBAAAC;AAAA,EAAA,gBAAA3S;AAAA,EAAA,oBAAA4S;AAAA,EAAA,cAAAje;AAAA,EAAA,eAAAsP;AAAA,EAAA,mBAAA4O;AAAA,EAAA,YAAA9uB;AAAA,EAAA,kBAAA+uB;AAAA,EAAA,kBAAAC;AAAA,EAAA,aAAAt6B;AAAA,EAAA,kBAAAu6B;AAAA,EAAA,oBAAAC;AAAA,EAAA,eAAAnnB;AAAA,EAAA,eAAA6J;AAAA,EAAA,YAAA7Y;AAAA,EAAA,YAAAsmB;AAAA,EAAA,iBAAAmG;AAAA,EAAA,iBAAAzT;AAAA,EAAA,uBAAAod;AAAA,EAAA,iBAAAnd;AAAA,EAAA,WAAA9K;AAAA,EAAA,eAAA+K;AAAA,EAAA,gBAAAE;AAAA,EAAA,qBAAAC;AAAA,EAAA,eAAAgd;AAAA,EAAA,gBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,eAAA94B;AAAA,EAAA,mBAAA+b;AAAA,EAAA,wBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,iBAAA2Q;AAAA,EAAA,gBAAAM;AAAA,EAAA,cAAA+B;AAAA,EAAA,eAAA9B;AAAA,EAAA,yBAAA4L;AAAA,EAAA,wBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,cAAAxT;AAAA,EAAA,mBAAAyT;AAAA,EAAA,yBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,YAAAnpB;AAAA,EAAA,cAAAob;AAAA,EAAA,oBAAA3C;AAAA,EAAA,qBAAAzL;AAAA,EAAA,YAAAO;AAAA,EAAA,gBAAA6b;AAAA,EAAA,sBAAAC;AAAA,EAAA,kBAAA7b;AAAA,EAAA,gBAAAmB;AAAA,EAAA,WAAA9U;AAAA,EAAA,cAAAyvB;AAAA,EAAA,kBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,6BAAAC;AAAA,EAAA,8BAAAC;AAAA,EAAA,6BAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,eAAAvpB;AAAA,EAAA,gBAAAF;AAAA,EAAA,eAAAzG;AAAA,EAAA,qBAAAmwB;AAAA,EAAA,oBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,8BAAAC;AAAA;AAUA,IAAM3N,gBAAeA;AA2DrB,IAAMqD,oBAAmB;AASzB,IAAMC,cAAa;AAQnB,IAAMC,oBAAmB;AASzB,IAAMze,kBAAiBA;AAkBvB,IAAM0e,aAAY;AAUlB,IAAMC,mBAAkB;AAmBxB,IAAMC,yBAAwB;AAQ9B,IAAMzlB,MAAKA;AACX,IAAM0lB,UAAS;AAWf,IAAMhe,eAAcA;AAWpB,IAAMie,kBAAiB;AAWvB,IAAM/d,eAAcA;AAWpB,IAAMge,eAAc;AAUpB,IAAME,eAAc;AAUpB,IAAMC,aAAY;AAUlB,IAAMC,oBAAmB;AAYzB,IAAMC,qBAAoB;AAY1B,IAAMC,4BAA2B;AAYjC,IAAMpxB,UAAS;AAUf,IAAMqxB,gBAAe;AASrB,IAAMje,YAAWA;AAUjB,IAAMC,iBAAgBA;AAStB,IAAMG,aAAYA;AASlB,IAAMG,YAAWA;AASjB,IAAMC,aAAYA;AAUlB,IAAMH,kBAAiBA;AAUvB,IAAM6d,WAAU;AAUhB,IAAMC,eAAc;AAUpB,IAAMC,qBAAoB;AAS1B,IAAM3vB,UAAS;AASf,IAAM4vB,cAAa;AAenB,IAAM3jB,WAAUA;AAYhB,IAAM4jB,iBAAgB;AAUtB,IAAM/D,UAASA;AAQf,IAAMC,aAAYA;AAYlB,IAAMgE,SAAQ;AAYd,IAAMC,aAAY;AAalB,IAAMC,cAAa;AAYnB,IAAMC,aAAY;AAgBlB,IAAMC,YAAW;AAQjB,IAAMvhB,OAAMA;AAQZ,IAAM+D,WAAUA;AAQhB,IAAMD,cAAaA;AAUnB,IAAM0d,mBAAkB;AAaxB,IAAMC,0BAAyB;AAS/B,IAAM1G,SAAQA;AAUd,IAAM2G,aAAY;AAQlB,IAAMnE,QAAOA;AAUb,IAAMC,aAAYA;AASlB,IAAMtZ,aAAYA;AASlB,IAAMyd,mBAAkB;AASxB,IAAMxd,aAAYA;AASlB,IAAMyd,mBAAkB;AAYxB,IAAM7jB,UAASA;AAQf,IAAMxN,UAAQA;AAQd,IAAM6T,YAAWA;AAQjB,IAAMqZ,gBAAeA;AAQrB,IAAM3sB,WAAUA;AAQhB,IAAM0S,eAAcA;AAQpB,IAAMC,qBAAoBA;AAQ1B,IAAMyd,qBAAoB;AAQ1B,IAAMY,WAAU;AAQhB,IAAMxzB,SAAOA;AAQb,IAAMoW,YAAWA;AAQjB,IAAMxD,cAAYA;AAQlB,IAAMuD,iBAAgBA;AAQtB,IAAMnN,WAASA;AAQf,IAAMyqB,gBAAe;AAQrB,IAAMxqB,aAAYA;AAQlB,IAAMyqB,mBAAkB;AASxB,IAAMxqB,kBAAiBA;AASvB,IAAMyqB,wBAAuB;AAS7B,IAAMnvB,aAAY;AASlB,IAAM4qB,QAAOA;AASb,IAAMwE,cAAa;AASnB,IAAMrqB,YAAUA;AAShB,IAAMC,YAAUA;AAShB,IAAMqqB,iBAAgB;AAStB,IAAMC,iBAAgB;AActB,IAAMC,qBAAoB;AAS1B,IAAMC,oBAAmB;AASzB,IAAMC,eAAc;AAQpB,IAAMld,WAAUA;AAQhB,IAAMmd,qBAAoB;AAQ1B,IAAM3F,eAAcA;AAQpB,IAAMJ,aAAYA;AAQlB,IAAM3I,aAAYA;AASlB,IAAM2O,mBAAkB;AASxB,IAAMC,kBAAiB;AAQvB,IAAMC,cAAa;AASnB,IAAM3M,cAAaA;AASnB,IAAM4M,oBAAmB;AASzB,IAAMG,cAAa;AAQnB,IAAMhrB,iBAAeA;AAQrB,IAAM8qB,sBAAqB;AAQ3B,IAAMC,uBAAsB;AAU5B,IAAMnF,YAAWA;AAUjB,IAAMb,aAAYA;AAUlB,IAAMkG,sBAAqB;AAW3B,IAAMC,0BAAyB;AAU/B,IAAMC,gBAAe;AASrB,IAAMC,mBAAkB;AAQxB,IAAMC,WAAU;AAuChB,IAAMC,cAAa;AAQnB,IAAM1D,WAAU;AAShB,IAAM2D,iBAAgB;AAYtB,IAAMC,aAAY;AAelB,IAAMC,YAAW;AAUjB,IAAMC,oBAAmB;AAQzB,IAAMC,YAAW;AAWjB,IAAMC,cAAa;AAcnB,IAAMC,kBAAiB;AAQvB,IAAME,eAAc;AAQpB,IAAMC,sBAAqB;AAS3B,IAAMF,kBAAiB;AAcvB,IAAMhG,iBAAgBA;AAYtB,IAAMP,yBAAwBA;AAS9B,IAAM/W,WAAUA;AAQhB,IAAMjO,SAAOA;AAQb,IAAME,QAAMA;AAQZ,IAAMC,YAAWA;AASjB,IAAMurB,kBAAiB;AASvB,IAAM7jB,WAAUA;AAQhB,IAAM8jB,aAAY;AAQlB,IAAMC,mBAAkB;AASxB,IAAMC,aAAY;AASlB,IAAMC,kBAAiB;AASvB,IAAMC,wBAAuB;AAS7B,IAAMC,mBAAkB;AAQxB,IAAMC,aAAY;AAQlB,IAAM9c,YAAWA;AAQjB,IAAMC,iBAAgBA;AAWtB,IAAMjS,UAAQA;AAUd,IAAMsS,YAAWA;AAYjB,IAAM+V,aAAYA;AASlB,IAAM0G,eAAc;AASpB,IAAMC,aAAY;AASlB,IAAMC,cAAa;AASnB,IAAM3G,YAAWA;AAQjB,IAAM7V,SAAQA;AAYd,IAAMtZ,WAAUA;AAQhB,IAAM4rB,UAAS;AASf,IAAMpS,SAAQA;AASd,IAAMC,aAAYA;AAUlB,IAAMxM,WAASA;AAUf,IAAMmiB,gBAAeA;AAUrB,IAAM1V,cAAaA;AAQnB,IAAMqc,iBAAgB;AAQtB,IAAMC,sBAAqB;AAQ3B,IAAMC,uBAAsB;AAQ5B,IAAMtc,iBAAgBA;AAUtB,IAAM3R,YAAW;AAUjB,IAAMkuB,iBAAgB;AAUtB,IAAMC,uBAAsB;AAU5B,IAAMC,kBAAiB;AAWvB,IAAMpsB,aAAYA;AASlB,IAAMqsB,mBAAkB;AAWxB,IAAMC,QAAO;AAUb,IAAMC,eAAc;AAQpB,IAAMC,sBAAqB;AAS3B,IAAMC,4BAA2B;AAQjC,IAAMvsB,WAAUA;AAShB,IAAMshB,kBAAiBA;AAQvB,IAAMkL,gBAAe;AASrB,IAAM1c,kBAAiBA;AASvB,IAAMC,wBAAuBA;AAS7B,IAAM0c,wBAAuB;AAS7B,IAAM5d,mBAAkBA;AASxB,IAAMwW,oBAAmBA;AAQzB,IAAMC,SAAQA;AASd,IAAMoH,WAAU;AAQhB,IAAMC,eAAc;AASpB,IAAMC,mBAAkB;AASxB,IAAMpc,UAASA;AASf,IAAMqc,gBAAe;AASrB,IAAMC,qBAAoB;AAS1B,IAAMC,2BAA0B;AAShC,IAAMC,sBAAqB;AAS3B,IAAMC,4BAA2B;AAUjC,IAAMC,gBAAe;AAYrB,IAAMC,kBAAiB;AAiBvB,IAAMC,sBAAqB;AAQ3B,IAAMC,eAAc;AAWpB,IAAMC,cAAa;AAenB,IAAM1c,SAAQA;AAQd,IAAMiJ,OAAMA;AAQZ,IAAM0T,cAAa;AAQnB,IAAMC,YAAW;AAQjB,IAAMhI,YAAWA;AASjB,IAAMiI,WAAU;AAQhB,IAAMC,iBAAgB;AAStB,IAAMC,iBAAgB;AAStB,IAAMC,uBAAsB;AAS5B,IAAMC,gBAAe;AASrB,IAAMC,sBAAqB;AAU3B,IAAMC,sBAAqB;AAU3B,IAAMC,4BAA2B;AASjC,IAAMC,cAAa;AASnB,IAAMC,mBAAkB;AASxB,IAAMC,yBAAwB;AAS9B,IAAMC,oBAAmB;AASzB,IAAMC,mBAAkB;AASxB,IAAMC,yBAAwB;AAS9B,IAAMC,WAAU;AAShB,IAAMC,iBAAgB;AAStB,IAAMC,uBAAsB;AAS5B,IAAMC,gBAAe;AASrB,IAAMC,8BAA6B;AASnC,IAAMC,sBAAqB;AAS3B,IAAMC,WAAU;AAMhB,IAAMpJ,aAAYA;AAQlB,IAAMqJ,UAAS;AASf,IAAMC,QAAO;AASb,IAAMC,cAAa;AAWnB,IAAMC,cAAa;AAWnB,IAAMC,oBAAmB;AAQzB,IAAM3S,YAAWA;AAUjB,IAAM4S,gBAAe;AAQrB,IAAMje,UAASA;AAoBf,IAAMsP,WAAUA;AAQhB,IAAM4O,eAAc;AAQpB,IAAM9uB,QAAOA;AAQb,IAAM+uB,cAAa;AAQnB,IAAMC,cAAa;AAoBnB,IAAMt6B,SAAQA;AAQd,IAAMw6B,gBAAe;AASrB,IAAMD,cAAa;AAQnB,IAAMlnB,YAAUA;AAQhB,IAAMhP,SAAOA;AAQb,IAAM6Y,YAAUA;AAQhB,IAAMyN,QAAOA;AAQb,IAAMmG,aAAYA;AASlB,IAAMzT,aAAYA;AASlB,IAAMod,mBAAkB;AASxB,IAAMnd,aAAYA;AAQlB,IAAM9K,OAAMA;AASZ,IAAM+K,WAAUA;AAQhB,IAAME,YAAWA;AASjB,IAAMC,iBAAgBA;AAStB,IAAMgd,WAAU;AAkBhB,IAAMC,YAAW;AAkBjB,IAAMC,kBAAiB;AAQvB,IAAMC,QAAO;AAQb,IAAM94B,WAAUA;AAShB,IAAM+b,eAAcA;AASpB,IAAMC,oBAAmBA;AASzB,IAAMC,aAAYA;AASlB,IAAMiR,YAAWA;AAWjB,IAAM+B,UAASA;AAWf,IAAM9B,WAAUA;AAWhB,IAAM4L,qBAAoB;AAU1B,IAAMC,oBAAmB;AAQzB,IAAMC,aAAY;AAQlB,IAAMxT,UAASA;AAQf,IAAMyT,eAAc;AASpB,IAAMC,qBAAoB;AAS1B,IAAMC,gBAAe;AAQrB,IAAMnpB,QAAOA;AAQb,IAAMob,UAASA;AAQf,IAAM3C,gBAAeA;AAQrB,IAAMzL,iBAAgBA;AAStB,IAAMO,QAAOA;AASb,IAAM6b,YAAW;AASjB,IAAMC,kBAAiB;AASvB,IAAM7b,cAAaA;AAQnB,IAAMmB,YAAWA;AAWjB,IAAM9U,QAAMA;AAWZ,IAAMiwB,cAAa;AAYnB,IAAMR,UAAS;AAYf,IAAMC,cAAa;AAYnB,IAAMC,eAAc;AAgBpB,IAAMC,qBAAoB;AAe1B,IAAMC,yBAAwB;AAe9B,IAAMC,0BAAyB;AAgB/B,IAAMC,yBAAwB;AAY9B,IAAMC,cAAa;AAcnB,IAAME,aAAY;AAclB,IAAMC,iBAAgB;AAWtB,IAAMvpB,WAAUA;AAWhB,IAAMF,YAAWA;AAWjB,IAAMzG,YAAUA;AAWhB,IAAMmwB,iBAAgB;AAQtB,IAAME,eAAc;AASpB,IAAMC,mBAAkB;AAQxB,IAAMC,0BAAyB;AAQ/B,IAAMH,gBAAe;AAUrB,IAAM3oB,MAAKA;AAQX,IAAM/L,QAAOA;AAQb,IAAMgrB,cAAa;AAMnB,IAAM/d,UAASA;AACf,IAAMqE,QAAOA;AAYb,IAAM5W,cAAa;AAQnB,IAAM6xB,cAAa;;;ACj0FnB,IAAM7nB,WAAsB,uBAAO,IAAI,kBAAkB;AAYzD,IAAM,iBAAiB;AAAA,EACrB,CAACA,QAAM,GAAGA;AAAA,EACV,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,KAAK,IAAI,GAAG,QAAQ,KAAK,kBAAkB,CAAC,CAAC;AAAA,EAChE;AAAA,EACA,CAACnF,OAAQ,EAAE,MAAM;AACf,WAAO,YAAY,IAAI,KAAK,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,EACzD;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,KAAK,KAAK,OAAO,QAAQ,EAAE;AAAA,EACpC;AAAA,EACA,WAAW;AACT,WAAO,SAAS,KAAK,OAAO,CAAC;AAAA,EAC/B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,KAAK;AAAA,MACL,QAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AACF;AAWA,IAAM,cAAc,OAAK,YAAY,GAAGmF,QAAM;;;ACvD9C,IAAMowB,kBAAiB;AAAA,EACrB,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AAAA,EACT,IAAI,OAAK;AACX;AAMA,IAAM,QAAN,MAAY;AAAA;AAAA;AAAA;AAAA,EAIV,CAAC5N,aAAY,IAAI4N;AAAA;AAAA;AAAA;AAAA,EAKjB,OAAO;AACL,WAAO,cAAc,MAAM,SAAS;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,UAAU;AACZ,WAAO3N,WAAU,KAAK,SAAS,CAAC;AAAA,EAClC;AACF;;;ACwcA,IAAM,KAAK;AACX,IAAM,KAAK;AA6CX,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,YAAY,GAAG,WAAW,OAAO;AAC/B,SAAK,IAAI;AACT,SAAK,WAAW;AAChB,SAAK,QAAQ;AACb,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,OAAO;AACL,QAAI,KAAK,MAAM;AACb,aAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,IACF;AACA,UAAM3sB,SAAQ,KAAK;AACnB,WAAO,CAAC,KAAK,QAAQ,CAAC,YAAY,KAAK,EAAE,KAAK,KAAK,CAAC,GAAG;AACrD,WAAK,QAAQ,KAAK,QAAQ;AAAA,IAC5B;AACA,QAAIC,OAAM,KAAK;AACf,QAAI,CAAC,KAAK,MAAM;AACd,YAAM,OAAO,KAAK,EAAE,KAAK,KAAK;AAC9B,WAAK,QAAQ,KAAK,QAAQ;AAC1B,UAAI,CAAC,KAAK,QAAQ,aAAa,MAAM,KAAK,EAAE,KAAK,KAAK,CAAC,GAAG;AACxD,aAAK,QAAQ,KAAK,QAAQ;AAAA,MAC5B;AACA,UAAI,CAAC,KAAK,UAAU;AAClB,QAAAA,OAAM,KAAK;AAAA,MACb;AAAA,IACF;AACA,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO,KAAK,EAAE,UAAUD,QAAOC,IAAG;AAAA,IACpC;AAAA,EACF;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,IAAI,eAAc,KAAK,GAAG,KAAK,QAAQ;AAAA,EAChD;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,SAAS,KAAK;AAAA,EAC5B;AACF;AAMA,IAAM,cAAc,UAAQ;AAC1B,QAAM,OAAO,KAAK,WAAW,CAAC;AAC9B,SAAO,SAAS,MAAM,SAAS;AACjC;AAMA,IAAM,eAAe,CAAC,OAAO,UAAU,MAAM,WAAW,CAAC,MAAM,MAAM,MAAM,WAAW,CAAC,MAAM;;;ACtkB7F,IAAMs6B,oBAAmB;AAkEzB,IAAM,qBAAN,MAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQvB,QAAQ,UAAU,SAAS,SAAS,QAAQ;AAAA,EAE5C;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,QAAQ,QAAQ;AAAA,EAEtB;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,QAAQ,SAAS;AAAA,EAE1B;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU,QAAQ;AAAA,EAElB;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,QAAQ;AAAA,EAEjB;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,GAAG;AACL,WAAO,IAAI,gBAAgB,MAAM,MAAM7xB,MAAI,KAAK,MAAM,GAAG,CAAC,CAAC;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA,EAKA,IAAIoC,QAAO;AACT,WAAO,IAAI,IAAI,MAAMA,MAAK;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAW,QAAQ;AACvB,WAAO,UAAU;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKA,CAACyvB,iBAAgB,IAAI;AACvB;;;ACpIA,IAAM,0BAA0B;AAKhC,IAAM,uBAAoC,uBAAO,IAAI,uBAAuB;AAW5E,IAAM,qBAAN,MAAyB;AAAA,EACvB,CAAC,oBAAoB,IAAI;AAAA,EACzB,YAAY,YAAY,KAAK,SAAShtB,WAAS;AAC7C,SAAK,aAAa;AAClB,SAAK,MAAM;AACX,SAAK,UAAU;AACf,SAAK,UAAUA;AAAA,EACjB;AAAA,EACA,CAAC,MAAM,IAAI;AACT,WAAO,KAAK,KAAK,uBAAuB,GAAG,QAAQ,KAAK,KAAK,UAAU,CAAC,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,CAAC;AAAA,EACpG;AAAA,EACA,CAACxI,OAAQ,EAAE,MAAM;AACf,WAAO,iBAAiB,IAAI,KAAK,KAAK,eAAe,KAAK,cAAc,OAAO,KAAK,KAAK,KAAK,GAAG;AAAA,EACnG;AACF;AAKA,IAAM,mBAAmB,OAAK,YAAY,GAAG,oBAAoB;AAKjE,IAAMyD,SAAO,CAAC,YAAY,KAAK,SAAS+E,cAAY;AAClD,SAAO,IAAI,mBAAmB,YAAY,KAAK,SAASA,SAAO;AACjE;AAKA,IAAMitB,WAAU,CAAC,QAAQ,YAAY;AACnC,MAAI3uB,QAAO,MAAM,KAAKA,QAAO,OAAO,GAAG;AACrC,WAAOhB,MAAK,OAAO,OAAO,QAAQ,IAAI;AAAA,EACxC;AACA,MAAIiB,SAAQ,MAAM,KAAKA,SAAQ,OAAO,GAAG;AACvC,WAAOhB,OAAM,KAAK,OAAO,OAAO7D,WAAU,QAAQ,KAAK,CAAC,CAAC;AAAA,EAC3D;AACA,MAAI6E,SAAQ,MAAM,KAAKD,QAAO,OAAO,GAAG;AACtC,WAAO;AAAA,EACT;AACA,MAAIA,QAAO,MAAM,KAAKC,SAAQ,OAAO,GAAG;AACtC,WAAO;AAAA,EACT;AACA,QAAM,IAAI,MAAM,gGAAgG;AAClH;AAKA,IAAM,SAAsB,gBAAAtD,OAAK,UAAuB,oBAAI,GAAgB,gBAAAqC,MAAK,CAAC,GAAG2vB,QAAO;;;ACtE5F,IAAM,0BAAuC,uBAAO,IAAI,0BAA0B;AAalF,IAAM,wBAAN,MAA4B;AAAA,EAC1B,CAAC,uBAAuB,IAAI;AAAA,EAC5B,YAAY9xB,OAAK;AACf,SAAK,MAAMA;AAAA,EACb;AACF;AAeA,IAAMF,SAAO,CAAAE,UAAO;AAClB,SAAO,IAAI,sBAAsBA,KAAG;AACtC;AAKA,IAAM,YAAyB,qBAAK,GAAG,CAAC,MAAM,KAAKrL,WAAUmL,OAAK,KAAK,IAAI,IAAI,KAAKnL,MAAK,CAAC,CAAC;AAK3F,IAAMsR,UAAsB,qBAAK,GAAG,CAAC,MAAM,KAAK,MAAM;AACpD,MAAItR,SAAQ,KAAK,IAAI,IAAI,GAAG;AAC5B,MAAIA,WAAU,QAAW;AACvB,IAAAA,SAAQ,IAAI;AAAA,EACd;AACA,SAAO,KAAK,MAAM,UAAU,KAAK,EAAEA,MAAK,CAAC,CAAC;AAC5C,CAAC;AAQD,IAAM6K,QAAmB,qBAAK,GAAG,CAAC,MAAM,QAAQ;AAC9C,QAAM7K,SAAQ,KAAK,IAAI,IAAI,GAAG;AAC9B,MAAIA,WAAU,QAAW;AACvB,WAAO,IAAI;AAAA,EACb;AACA,SAAOA;AACT,CAAC;AAOD,IAAM,WAAwB,qBAAK,GAAG,CAAC,MAAM,KAAKA,WAAUsR,QAAO,MAAM,KAAK,OAAK,IAAI,QAAQ,GAAGtR,MAAK,CAAC,CAAC;;;AC5DzG,IAAM,wBAAqC,uBAAO,IAAI,wBAAwB;AAkB9E,IAAM,kBAAN,MAAsB;AAAA,EACpB,CAAC,qBAAqB,IAAI;AAAA,EAC1B,YAAY,KAAK;AACf,SAAK,MAAM;AAAA,EACb;AAAA,EACA,IAAI,KAAK;AACP,WAAOqL,MAAIR,MAAI,KAAK,GAAG,GAAGA,MAAM,GAAG,CAAC;AAAA,EACtC;AAAA,EACA,SAAS,KAAK7K,QAAO;AACnB,WAAOsR,QAAO,KAAK,KAAK,SAAS,KAAKtR,MAAK,CAAC;AAAA,EAC9C;AAAA,EACA,mBAAmB;AACjB,WAAO,eAAe,CAAAuJ,gBAAcmB,SAAQ,KAAK,IAAI,MAAM,GAAG,CAAAkG,YAAU;AACtE,cAAQA,QAAO,MAAM;AAAA,QACnB,KAAK,QACH;AACE,iBAAO,QAAQxN,QAAM+hB,MAAK,CAAC;AAAA,QAC7B;AAAA,QACF,KAAK,SACH;AACE,iBAAO,KAAKvU,QAAO,OAAO,kBAAkB,SAAO,KAAK,MAAM/F,KAAM,GAAG,CAAC,CAAC,GAAGQ,MAAI,OAAOjI,QAAM+hB,MAAK,GAAG,CAAC,GAAG,MAAM9Y,OAAM,GAAG,CAAC,CAAC,CAAC,GAAGhB,MAAIlB,QAAO,WAAS,CAAC,OAAO,MAAM,GAAG,GAAGZ,YAAW,EAAE,CAAC,CAAC,CAAC;AAAA,QACxL;AAAA,MACJ;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AACF;;;AC7DA,IAAM,kCAAkC;AAKxC,IAAM,oCAAoC;AAK1C,IAAM,iCAAiC;AAevC,IAAM5G,SAAQ;AAAA,EACZ,MAAM;AACR;AASA,IAAMnB,WAAU,WAAS;AACvB,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,EACF;AACF;AAOA,IAAMN,QAAO;AAAA,EACX,MAAM;AACR;AAGA,IAAM,UAAU,UAAQ;AACtB,SAAO,KAAK,SAAS;AACvB;AAGA,IAAM,YAAY,UAAQ;AACxB,SAAO,KAAK,SAAS;AACvB;;;ACpDA,IAAM,wBAAwB;AAK9B,IAAM,0BAA0B;AAKhC,IAAM,uBAAuB;AA0B7B,IAAMM,WAAU,WAAS;AACvB,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,EACF;AACF;AAQA,IAAMN,SAAO;AAAA,EACX,MAAM;AACR;AAGA,IAAMk8B,WAAU,UAAQ;AACtB,SAAO,KAAK,SAAS;AACvB;AAGA,IAAMC,aAAY,UAAQ;AACxB,SAAO,KAAK,SAAS;AACvB;;;AC7DA,IAAM,iBAA8B,uBAAO,IAAI,iBAAiB;AAqBhE,IAAM,WAAN,MAAe;AAAA,EACb,CAAC,cAAc,IAAI;AAAA,EACnB,YAAY,UAAU;AACpB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,QAAQprB,SAAQ;AACd,WAAO,oBAAoB,iBAAiB3J,OAAM,KAAK,QAAQ,CAAC,EAAE2J,OAAM;AAAA,EAC1E;AACF;;;ACuCA,IAAM,WAAW,CAAC,SAAS,YAAY;AAAA,EACrC;AAAA,EACA;AACF;AAaA,IAAM,UAAU;AAQhB,IAAM,mBAAmB;AAGzB,IAAM,gBAAN,MAAoB;AAAA,EAClB,CAAC,WAAW,IAAI;AAAA,EAChB,YAAY,YAAY,MAAM,aAAa,cAAc,uBAAuB;AAC9E,SAAK,aAAa;AAClB,SAAK,OAAO;AACZ,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,wBAAwB;AAC7B,SAAK,oBAAoB5G,MAAIR,KAAI,KAAK,UAAU,GAAG,UAAQ,KAAK,OAAO;AACvE,SAAK,mBAAmBQ,MAAIR,KAAI,KAAK,UAAU,GAAG,UAAQ,OAAO,KAAK,UAAU,GAAO,CAAC;AAAA,EAC1F;AAAA;AAAA;AAAA;AAAA,EAKA,0BAA0B;AACxB,WAAOyB,WAAU,KAAK,UAAU,EAAE;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,yBAAyB;AACvB,WAAO,OAAOA,WAAU,KAAK,UAAU,EAAE,UAAU,GAAO;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,OAAO;AACL,WAAOjB,MAAIR,KAAI,KAAK,UAAU,GAAG,UAAQ+E,KAAI,KAAK,YAAY,IAAI,CAAC;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,SAAS;AACf,WAAOsD,UAAS,KAAK,YAAY,GAAG,KAAK,IAAI,MAAM,OAAO,CAAC;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,eAAe;AACnB,UAAM4O,YAAW,OAAO,aAAa;AACrC,WAAOpX,SAAQ,aAAa,GAAG,CAAAzJ,cAAY,KAAKokB,QAAO,KAAK,YAAY,UAAQ;AAC9E,YAAMziB,OAAM,KAAK,UAAU,SAASkf,SAAQ;AAC5C,UAAIlf,OAAM,KAAK,SAAS;AACtB,eAAO,CAAC,MAAM,SAAS,KAAK,SAAS,KAAK,KAAK,QAAQ+I,SAAQ,CAAC/I,MAAK3B,SAAQ,CAAC,CAAC,CAAC,CAAC;AAAA,MACnF;AACA,aAAO,CAAC,OAAO,IAAI;AAAA,IACrB,CAAC,GAAGyJ,SAAQ,iBAAe,cAAc,KAAK,KAAK,aAAa,GAAGwI,UAAS,cAAcjS,SAAQ,CAAC,CAAC,IAAI,KAAK,gBAAgBA,WAAU,MAAM,GAAGyR,OAAM,CAAC,CAAC,CAAC;AAAA,EAC3J;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,WAAOrH,MAAIR,KAAI,KAAK,UAAU,GAAG,UAAQQ,KAAM,KAAK,QAAQ,OAAK,EAAE,CAAC,CAAC,CAAC;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,eAAe;AACpB,UAAMyW,YAAW,OAAO,aAAa;AACrC,WAAO5O,UAAS,KAAK,YAAY,GAAG,KAAK,IAAI,OAAK,IAAI,SAAS4O,SAAQ,CAAC,CAAC;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,eAAe;AACxB,UAAMA,YAAW,OAAO,aAAa;AACrC,WAAO,CAAA7P,YAAU,eAAeA,SAAQ,KAAK,OAAO6P,SAAQ,GAAG;AAAA,MAC7D,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB;AACjB,WAAO,KAAK,YAAY,iBAAiB;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,SAAS;AACP,WAAOpX,SAAQ,KAAK,iBAAiB,GAAG,CAAAyb,YAAU,KAAKA,SAAQva,QAAOxI,QAAM,GAAG,CAACiI,OAAK,UAAU,KAAK,MAAM,OAAO,GAAGX,SAAQ,CAAAtJ,YAAU;AACpI,UAAI6kB,QAAO7kB,OAAM,GAAG;AAClB,eAAO,QAAQwO,KAAMvE,OAAK,MAAM,GAAG,GAAGjK,OAAM,CAAC;AAAA,MAC/C;AACA,UAAI8kB,aAAY9kB,OAAM,GAAG;AACvB,eAAO,QAAQwO,KAAMvE,OAAK,MAAM,GAAG,GAAGjK,OAAM,CAAC;AAAA,MAC/C;AACA,aAAOD,MAAK,MAAM;AAAA,IACpB,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,EACP;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe;AACb,WAAO,iBAAiB,KAAK,cAAc,UAAQi8B,SAAQ,IAAI,IAAInxB,MAAK,KAAK,KAAK,KAAK,QAAQ,KAAK,WAAW,OAAO,GAAG,MAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG8G,gBAAe,MAAM1H,MAAI,WAAS7J,SAAQ,KAAK,CAAC,CAAC,CAAC,IAAI4L,MAAK,CAAC;AAAA,EAC5M;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc;AACZ,WAAO,iBAAiB,KAAK,cAAc,iBAAe;AACxD,UAAIgwB,SAAQ,WAAW,GAAG;AACxB,eAAOnxB,MAAK,QAAQ/K,MAAI,CAAC;AAAA,MAC3B;AACA,UAAIm8B,WAAU,WAAW,GAAG;AAC1B,eAAOpxB,MAAK,KAAK,eAAe,YAAY,KAAK,GAAGqB,IAAGpM,MAAI,CAAC,CAAC;AAAA,MAC/D;AACA,aAAOkM,MAAK;AAAA,IACd,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY;AACV,WAAO,KAAK,KAAK,OAAO,GAAGZ,KAAI,KAAK,KAAK,QAAQ,KAAK8Q,OAAQ,OAAO,CAAC,CAAC,GAAGpK,UAAS,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGxI,SAAQ,CAAC,CAAC2G,QAAOnG,KAAI,MAAM,OAAOmG,QAAOnG,KAAI,IAAI,QAAQmG,MAAK,IAAIlQ,MAAK,MAAM,CAAC,CAAC;AAAA,EACvL;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB;AACf,WAAO,KAAK,KAAK,sBAAsB,GAAG+R,UAAS,KAAK,KAAK,UAAU,GAAGzG,SAAQ,KAAK,KAAK,KAAK,QAAQ6Q,OAAQ,OAAO,EAAE,CAAC,CAAC,GAAGpK,UAAS,KAAK,UAAU,CAAC,CAAC,GAAG,MAAM,GAAG,aAAa,UAAU,SAAS,GAAG,UAAU,CAAC,GAAGA,UAAS,KAAK,qBAAqB,CAAC,CAAC;AAAA,EAC7P;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,wBAAwB;AACtB,WAAO,iBAAiB,KAAK,uBAAuB,0BAAwB;AAC1E,UAAI,QAAU,oBAAoB,GAAG;AACnC,eAAOjH,MAAK,KAAK,KAAK,KAAK,QAAQ,KAAK,WAAW,gBAAgB,GAAGiH,UAAStD,KAAI,KAAK,uBAAuB1O,KAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG6R,gBAAe,MAAM1H,MAAI,WAAS7J,SAAU,KAAK,CAAC,CAAC,CAAC;AAAA,MACpM;AACA,aAAO4L,MAAK;AAAA,IACd,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB;AACrB,WAAO,iBAAiB,KAAK,uBAAuB,0BAAwB;AAC1E,UAAI,UAAY,oBAAoB,GAAG;AACrC,eAAOnB,MAAK,KAAK,eAAe,qBAAqB,KAAK,GAAGqB,IAAG3K,MAAK,CAAC,CAAC;AAAA,MACzE;AACA,aAAOyK,MAAK;AAAA,IACd,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,GAAG;AACL,WAAO,KAAK,KAAK,eAAe,GAAG8F,UAAS,KAAKmS,QAAO,KAAK,YAAY,UAAQ;AAC/E,YAAMziB,OAAM,EAAE,KAAK,OAAO;AAC1B,YAAM06B,UAAS,KAAK,KAAK,QAAQpxB,MAAK,KAAK,OAAOyB,UAAS,OAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,UAAI,WAAW2vB,OAAM,GAAG;AACtB,cAAM,CAAC,SAASr8B,SAAQ,IAAI8J,cAAauyB,OAAM;AAC/C,YAAI,WAAW16B,MAAK;AAClB,iBAAO,CAACqJ,MAAK,CAACrJ,MAAK3B,SAAQ,CAAC,GAAG,SAAS,SAASmL,cAAakxB,OAAM,CAAC,CAAC;AAAA,QACxE;AAAA,MACF;AACA,aAAO,CAAClwB,MAAK,GAAG,SAASxK,MAAK,KAAK,MAAM,CAAC;AAAA,IAC5C,CAAC,GAAG8H,SAAQ,CAAAjC,YAAU;AACpB,cAAQA,QAAO,MAAM;AAAA,QACnB,KAAK,QACH;AACE,iBAAOkK;AAAA,QACT;AAAA,QACF,KAAK,QACH;AACE,gBAAM,CAAC/P,MAAK3B,SAAQ,IAAIwH,QAAO;AAC/B,iBAAO,KAAK,gBAAgBxH,WAAU,MAAM,GAAGiS,UAAS,SAAS,CAAC,GAAGA,UAAS,KAAK,IAAI,MAAMtQ,IAAG,CAAC,CAAC;AAAA,QACpG;AAAA,MACJ;AAAA,IACF,CAAC,CAAC,CAAC,CAAC;AAAA,EACN;AACF;;;ACzSA,IAAM,kBAA+B,uBAAO,IAAI,kBAAkB;AAgBlE,IAAM,YAAN,MAAgB;AAAA,EACd,CAAC,eAAe,IAAI;AAAA,EACpB,YAAY,UAAU;AACpB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,OAAO;AACL,WAAO,YAAY,KAAK,QAAQ;AAAA,EAClC;AAAA,EACA,SAAS2C,QAAM;AACb,WAAO,CAAA0M,YAAU,gBAAgB,KAAK,UAAU1M,MAAI,EAAE0M,OAAM;AAAA,EAC9D;AACF;;;ACrCA,yBAAA;ACAA,mBAAA;ACCA,8BAAA;ACDA,IAAAsrB,2BAAA;ACAA,SAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEO,SAAA,YAAqB,OAAiB;AAC1C,QAAM,MAAM,IAAI,OAAO,KAAA;AACvB,QAAM,IAAI,KAAK,KAAA;AAEf,SAAO;AAAA;AAGH,SAAA,WAAoB,MAAwC;AAChE,SAAO,gBAAgB,UAAU,MAAM,IAAI,IAAA;AAAA;AAGvC,SAAA,QAAiB,UAA4B;AACjD,SAAO,MAAM,IAAI,QAAA,KAAa,CAAA;AAAA;AAdjC,IAAM;AAAN,IAAA,gBAAAC,OAAA;EAAA,6BAAA;AAAM,YAAQ,oBAAI,QAAA;EAAA;AAAA,CAAA;ACAlB,IA2BO;AA3BP,IAAA,iBAAAA,OAAA;EAAA,gCAAA;AA2BO,eAAA,cAAuB,MAAM;MACjC,YACU,MACP,SACD;AACC,cAAM,OAAA;AAHC,aAAA,OAAA;AAIP,eAAO,eAAe,MAAM,WAAW,SAAA;MAAA;IAAA;EAAA;AAAA,CAAA;ACjC7C,IAsBO;AAtBP,IAAA,0BAAAA,OAAA;EAAA,yCAAA;AAAA,mBAAA;AAsBO,uBAAA,cAAwC,SAAS;MACrD,YAImB,KAChB,SACD;AACC,cAAM,QAAW,WAAW,OAAO,GAAA,CAAA;AAHnB,aAAA,MAAA;MAAA;IAAA;EAAA;AAAA,CAAA;AC3BtB,IAUO;AAVP,IAAA,gCAAAA,OAAA;EAAA,+CAAA;AAAA,mBAAA;AAUO,6BAAA,cAAqC,SAAS;MAClD,YAAY,SAAkB;AAC3B,cAAM,QAAW,OAAA;MAAA;IAAA;EAAA;AAAA,CAAA;ARDhB,SAAA,WAAyC,QAAoB;AACjE,SAAO,OAAO,WAAW,aAAa,SAAS;AAAA;AAO3C,SAAA,eAA4C,QAA8B;AAC9E,SAAO,OAAO,WAAW,cAAc,WAAW;AAAA;AAG9C,SAAA,QAAiBj6B,QAAe,MAAgC;AACpE,QAAM,QAAQA,OAAM,QAAQ,IAAA;AAC5B,MAAI,SAAS,GAAG;AACb,WAAO,CAACA,QAAO,EAAA;EAAA;AAGlB,SAAO,CAACA,OAAM,OAAO,GAAG,KAAA,GAAQA,OAAM,OAAO,QAAQ,CAAA,CAAA;AAAA;AAKjD,SAAA8N,OAAe9N,QAA2B,SAAS,GAAmB;AAC1E,SAAO,YAAYA,MAAA,KAAUA,OAAM,SAAS,SAASA,OAAM,MAAA,IAAU;AAAA;AAMjE,SAAA2H,MAAc3H,QAAgB,SAAS,GAAG;AAC9C,MAAI,YAAYA,MAAA,KAAUA,OAAM,SAAS,QAAQ;AAC9C,WAAOA,OAAMA,OAAM,SAAS,IAAI,MAAA;EAAA;AAAA;AAMtC,SAAA,YAAqBA,QAAgC;AAClD,SAAO,CAAC,EAAEA,UAAS,OAAOA,OAAM,WAAW;AAAA;AAGvC,SAAA,mBAA4BA,SAAQ,IAAI,WAAU,MAAM,YAAY,MAAgB;AACxF,SAAOA,OAAM,MAAM,SAAA,EAAW,OAAO,CAAC,QAAQ,SAAS;AACpD,UAAM,cAAc,WAAU,KAAK,KAAA,IAAS;AAC5C,QAAI,aAAa;AACd,aAAO,KAAK,WAAA;IAAA;AAEf,WAAO;EAAA,GACP,CAAA,CAAA;AAAA;AAKC,SAAA,uBACJA,QACA,UACI;AACJ,SAAO,mBAAmBA,QAAO,IAAA,EAAM,IAAI,CAAC,SAAS,SAAS,IAAA,CAAA;AAAA;AAG1D,SAAA,aAAsB,MAAuB;AACjD,aAAO,2BAAO,MAAM,yBAAA;AAAA;AAMhB,SAAAoG,QAAmB,QAAsB,MAAsB;AACnE,MAAI,MAAM,QAAQ,MAAA,GAAS;AACxB,QAAI,CAAC,OAAO,SAAS,IAAA,GAAO;AACzB,aAAO,KAAK,IAAA;IAAA;EAAA,OAEX;AACJ,WAAO,IAAI,IAAA;EAAA;AAEd,SAAO;AAAA;AAMH,SAAA,UAAsB,QAAa,MAAwB;AAC/D,MAAI,MAAM,QAAQ,MAAA,KAAW,CAAC,OAAO,SAAS,IAAA,GAAO;AAClD,WAAO,KAAK,IAAA;EAAA;AAGf,SAAO;AAAA;AAGH,SAAAmC,SAAmB,QAAsB,MAAY;AACzD,MAAI,MAAM,QAAQ,MAAA,GAAS;AACxB,UAAM,QAAQ,OAAO,QAAQ,IAAA;AAC7B,QAAI,SAAS,GAAG;AACb,aAAO,OAAO,OAAO,CAAA;IAAA;EAAA,OAEpB;AACJ,WAAO,OAAO,IAAA;EAAA;AAEjB,SAAO;AAAA;AAOH,SAAA,QAAoB,QAAsB;AAC9C,SAAO,MAAM,QAAQ,MAAA,IAAU,SAAS,CAAC,MAAA;AAAA;AAGrC,SAAA,cAA0B,QAA2B;AACzD,SAAO,QAAQ,MAAA,EAAQ,IAAI,MAAA;AAAA;AAGvB,SAAA,SAAkB,QAAmC,QAAQ,GAAG;AACpE,MAAI,UAAU,MAAM;AACjB,WAAO;EAAA;AAGV,QAAM,MAAM,SAAS,QAAQ,EAAA;AAC7B,SAAO,MAAM,GAAA,IAAO,QAAQ;AAAA;AAGxB,SAAA,cAA0BvI,QAAY,QAAgB;AAC1D,QAAM,SAAc,CAAA;AACpB,WAAS,IAAI,GAAGoJ,OAAMpJ,OAAM,QAAQ,IAAIoJ,MAAK,KAAK;AAC/C,WAAO,KAAK,QAAQpJ,OAAM,CAAA,CAAA;EAAA;AAE7B,SAAO;AAAA;AAGH,SAAA,eAAwBA,QAAkC;AAC9D,UAAQ,MAAM,QAAQA,MAAA,IAAS,OAAO,OAAOA,MAAA,IAASA,QAAO,SAAS,OAAA;AAAA;AAMlE,SAAA2N,MAAc,QAA6B,YAAsB;AACrE,SAAO,OAAO,OACX,CAAA,GACA,GAAG,WAAW,IAAI,CAAC,aAAc,YAAY,SAAS,EAAA,CAAG,QAAA,GAAW,OAAO,QAAA,EAAA,IAAc,CAAA,CAAA,CAAA;AAAA;AAIxF,SAAAzO,OAAeqf,YAAW,GAAkB;AAChD,SAAO,IAAI,QAAQ,CAAC5gB,WAAS,WAAWA,QAAM4gB,SAAA,CAAA;AAAA;AA7JjD,IAGa;AAHb,IAKa;AALb,IAiHa;AAjHb,IAAA,YAAA0b,OAAA;EAAA,0BAAA;AAGa,WAAO;AAEP,WAAiC,MAAM;IAAA;AA4GvC,qBAAiB,OAAO,UAAU,SAAS,KAAK,KAAK,OAAO,UAAU,QAAA;EAAA;AAAA,CAAA;ASpG5E,SAAA,WAA0Bj6B,QAAU4G,UAAoC,KAAmB;AAC/F,MAAIA,SAAO5G,MAAA,GAAQ;AAChB,WAAOA;EAAA;AAEV,SAAO,UAAU,SAAS,IAAI,MAAM;AAAA;AAOhC,SAAA,iBACJA,QACAiF,OACoB;AACpB,QAAM,OAAO,WAAWjF,MAAA,IAAS,WAAW,OAAOA;AAEnD,SACG,wBAAwB,KAAK,IAAA,MAC5B,CAACiF,SAAQ,CAACA,MAAK,SAAS,IAAA;AAAA;AAmBxB,SAAA,kBAA6CjF,QAAgC;AACjF,SAAO,CAAC,CAACA,UAAS,eAAeA,MAAA,MAAW;AAAA;AAGxC,SAAA,eAAwBA,QAAmC;AAC/D,SAAO,OAAOA,WAAU;AAAA;AAxD3B,IAoBa;AApBb,IAoCa;AApCb,IAwCa;AAxCb,IA4Ca;AA5Cb,IA2Da;AA3Db,IAAA,wBAAAi6B,OAAA;EAAA,sCAAA;AACA,cAAA;AACA,kBAAA;AAkBa,kBAAmD,CAACj6B,WAA+B;AAC7F,aAAO,MAAM,QAAQA,MAAA;IAAA;AAeX,mBAAgD,CAACA,WAA2B;AACtF,aAAO,OAAOA,WAAU;IAAA;AAGd,wBAAuD,CAACA,WAA6B;AAC/F,aAAO,MAAM,QAAQA,MAAA,KAAUA,OAAM,MAAM,YAAA;IAAA;AAGjC,gCAAwE,CAClFA,WAC8B;AAC9B,aAAO,aAAaA,MAAA,KAAW,MAAM,QAAQA,MAAA,KAAUA,OAAM,MAAM,YAAA;IAAA;AAYzD,sBAA+D,CACzEA,WAC+B;AAC/B,UAAIA,UAAS,QAAQ,0BAA0B,SAAS,OAAOA,MAAA,GAAQ;AACpE,eAAO;MAAA;AAEV,aAAO,MAAM,QAAQA,MAAA,KAAU,OAAOA,WAAU,YAAY,OAAOA,OAAM,WAAW;IAAA;EAAA;AAAA,CAAA;ACjEvF,IAIY;AAJZ,IAAA,kBAAAi6B,OAAA;EAAA,gCAAA;AAIY,gBAAL,kBAAK,eAAL;AACJ,iBAAA,WAAA,SAAA,IAAA,CAAA,IAAA;AACA,iBAAA,WAAA,OAAA,IAAA,CAAA,IAAA;AACA,iBAAA,WAAA,WAAA,IAAY,EAAA,IAAZ;AACA,iBAAA,WAAA,SAAA,IAAU,GAAA,IAAV;AAJS,aAAA;IAAA,GAAA,aAAA,CAAA,CAAA;EAAA;AAAA,CAAA;ACJZ,IAEO;AAFP,IAAA,0BAAAA,OAAA;EAAA,wCAAA;AAEO,uBAAA,MAA8D;MAClE,YACmB,QACA,QACjB;AAFiB,aAAA,SAAA;AACA,aAAA,SAAA;MAAA;MAGnB,YAAsC;AACnC,eAAO,IAAI,iBAAiB,KAAK,OAAO,SAAS,MAAA,GAAS,KAAK,OAAO,SAAS,MAAA,CAAA;MAAA;IAAA;EAAA;AAAA,CAAA;ACTrF,IAAO;AAAP,IAoDO;AApDP,IAAA,mBAAAA,OAAA;EAAA,iCAAA;AAAO,iBAAA,MAAoB;MAKxB,YACG,QACA,YACD;AAPQ,aAAA,UAAoB,CAAA;AAc9B,aAAA,QAAQ,CAAC,MAA8C,WAAuB;AAC3E,eAAK,aAAA;AAEL,cAAI,CAAC,KAAK,QAAQ,MAAM,CAAC,KAAK,UAAU,KAAK,SAAS,KAAK,OAAO,KAAK,KAAA,CAAA,CAAA,GAAU;AAC9E,mBAAO;UAAA;AAGV,iBAAO,KAAK,WAAW,QAAQ,KAAK,eAAA,CAAA,MAAsB;QAAA;AAb1D,aAAK,UAAU,MAAM,QAAQ,MAAA,IAAU,SAAS,CAAC,MAAA;AACjD,YAAI,YAAY;AACb,eAAK,aAAa;QAAA;MAAA;MAed,WAAW,QAAWz9B,SAAiC;AAC9D,cAAM,IAAI,MAAM,uCAAA;MAAA;MAGT,eAAe;AACtB,aAAK,QAAQ,SAAS;MAAA;MAGf,iBAAiB;AACxB,eAAO,KAAK;MAAA;MAGL,SAAS,KAAa,OAAe,MAAe;AAC3D,cAAM,UAAU,QAAQ,IAAI,KAAK,IAAA;AACjC,YAAI,SAAS;AACV,eAAK,UAAU,OAAO,OAAA;QAAA;AAGzB,eAAO,CAAC,CAAC;MAAA;MAGF,UAAU,QAAgB,SAAmB;AACpD,aAAK,QAAQ,KAAK,GAAG,QAAQ,MAAM,CAAA,CAAA;MAAA;IAAA;AAIlC,uBAAA,cAAkC,WAAc;MAC1C,SAAS,KAAa,OAAe,MAAwB;AACpE,eAAO,aAAa,KAAK,OAAO,IAAA,CAAA,KAAU,MAAM,SAAS,KAAK,OAAO,IAAA;MAAA;MAG9D,UAAU,OAAe,SAAmB;AACnD,YAAI,QAAQ,KAAK,QAAQ,SAAS,GAAG;AAClC,gBAAM,UAAU,OAAO,OAAA;QAAA;MAAA;IAAA;EAAA;AAAA,CAAA;AClDzB,SAAA,wBACD,SACc;AACjB,QAAM,UAAU,QAAQ,IAAA;AACxB,QAAMM,UAA2B,OAAO,OACrC,eAAA,EAAE,QAAA,GAAY,cAAA,GACd,GAAG,QAAQ,OAAO,CAAC,MAAM,OAAO,MAAM,YAAY,CAAA,CAAA;AAGrD,EAAAA,QAAO,UAAUA,QAAO,WAAW;AACnC,EAAAA,QAAO,UAAUA,QAAO,YAAY;AAEpC,SAAOA;AAAA;AArBV,IAEM;AAFN,IAAA,0BAAAm9B,OAAA;EAAA,wCAAA;AAEM,qBAAoD;MACvD,QAAQ;MACR,wBAAwB;MACxB,QAAQ,CAAA;MACR,SAAS;IAAA;EAAA;AAAA,CAAA;ACKL,SAAA,kBACJ,SACA,WAAqB,CAAA,GACZ;AACT,MAAI,CAAC,kBAA2B,OAAA,GAAU;AACvC,WAAO;EAAA;AAGV,SAAO,OAAO,KAAK,OAAA,EAAS,OAAO,CAAC,WAAoB,QAAgB;AACrE,UAAMx9B,SAAuB,QAAQ,GAAA;AAErC,QAAI,WAAWA,MAAA,GAAQ;AACpB,gBAAS,KAAKA,MAAA;IAAA,WACN,iBAAiBA,QAAO,CAAC,SAAA,CAAA,GAAa;AAC9C,gBAAS,KAAK,MAAM,MAAMA,MAAA;IAAA,OACtB;AACJ,gBAAS,KAAK,GAAA;IAAA;AAGjB,WAAO;EAAA,GACP,QAAA;AAAA;AAGC,SAAA,mBACJ,MACA,mBAAmB,GACnB,aAAa,OACJ;AACT,QAAM,UAAoB,CAAA;AAE1B,WAAS,IAAI,GAAG2M,OAAM,mBAAmB,IAAI,KAAK,SAAS,kBAAkB,IAAIA,MAAK,KAAK;AACxF,QAAI,gBAAgB,SAAS,OAAO,KAAK,CAAA,CAAA,GAAK;AAC3C,cAAQ,KAAK,OAAO,KAAK,CAAA,CAAA,CAAA;IAAA;EAAA;AAI/B,oBAAkB,wBAAwB,IAAA,GAAO,OAAA;AACjD,MAAI,CAAC,YAAY;AACd,YAAQ,KAAK,GAAG,sBAAsB,IAAA,CAAA;EAAA;AAGzC,SAAO;AAAA;AAGV,SAAA,sBAA+B,MAAkB;AAC9C,QAAM,sBAAsB,OAAOzB,MAAK,IAAA,MAAU;AAClD,SAAO,WAAWA,MAAK,MAAM,sBAAsB,IAAI,CAAA,GAAI,aAAa,CAAA,CAAA;AAAA;AAOpE,SAAA,wBAAiC,MAAkC;AACvE,QAAM,sBAAsB,eAAeA,MAAK,IAAA,CAAA;AAChD,SAAO,WAAWA,MAAK,MAAM,sBAAsB,IAAI,CAAA,GAAI,iBAAA;AAAA;AAOvD,SAAA,yBACJ,MACA,cAAc,MACqB;AACnC,QAAM,WAAW,WAAWA,MAAK,IAAA,CAAA;AACjC,SAAO,eAAe,eAAe,QAAA,IAAY,WAAW;AAAA;AA9E/D,IAAA,oBAAAsyB,OAAA;EAAA,kCAAA;AAAA,0BAAA;AAOA,cAAA;AAEA,kBAAA;EAAA;AAAA,CAAA;ACJO,SAAA,eACJ,SACA,SACD;AACC,SAAO,QAAO,QAAQ,QAAQ,QAAQ,MAAA;AAAA;AAGlC,SAAA,oBACJ,QACA,WACA,OACA,OAAO,MACL;AACF,UAAQ,KAAA,EAAO,QAAQ,CAAC,SAAS;AAC9B,aAAS,QAAQ,mBAAmB,MAAM,IAAA,GAAO,IAAI,GAAG7wB,OAAM,MAAM,QAAQ,IAAIA,MAAK,KAAK;AACvF,YAAM,OAAO,CAAC,SAAS,MAAM;AAC1B,YAAI,IAAI,UAAUA,MAAK;AACpB;QAAA;AAEH,eAAO,MAAM,IAAI,MAAA;MAAA;AAGpB,gBAAQ,KAAK,CAAC,EAAE,OAAA7M,OAAA,MAAYA,OAAM,MAAM,MAAA,CAAA;IAAA;EAAA,CAAA;AAI9C,SAAO;AAAA;AA/BV,IAAA,mBAAA09B,OAAA;EAAA,iCAAA;AAGA,cAAA;EAAA;AAAA,CAAA;ACHA,IAAA,gBAAA,CAAA;AAAAx8B,UAAA,eAAA;EAAA,WAAA,MAAA;EAAA,kBAAA,MAAA;EAAA,YAAA,MAAA;EAAA,MAAA,MAAA;EAAA,MAAA,MAAA;EAAA,kBAAA,MAAA;EAAA,QAAA,MAAA2I;EAAA,mBAAA,MAAA;EAAA,SAAA,MAAA;EAAA,YAAA,MAAA;EAAA,UAAA,MAAA;EAAA,eAAA,MAAA;EAAA,gBAAA,MAAA;EAAA,gBAAA,MAAA;EAAA,sBAAA,MAAA;EAAA,OAAA,MAAAlH;EAAA,aAAA,MAAA;EAAA,gBAAA,MAAA;EAAA,iBAAA,MAAA;EAAA,mBAAA,MAAA;EAAA,kBAAA,MAAA;EAAA,cAAA,MAAA;EAAA,mBAAA,MAAA;EAAA,2BAAA,MAAA;EAAA,YAAA,MAAA;EAAA,OAAA,MAAA4O;EAAA,cAAA,MAAA;EAAA,wBAAA,MAAA;EAAA,oBAAA,MAAA;EAAA,WAAA,MAAA;EAAA,gBAAA,MAAA;EAAA,MAAA,MAAAnG;EAAA,gBAAA,MAAA;EAAA,qBAAA,MAAA;EAAA,MAAA,MAAAgG;EAAA,eAAA,MAAA;EAAA,QAAA,MAAApF;EAAA,SAAA,MAAA;EAAA,oBAAA,MAAA;EAAA,0BAAA,MAAA;EAAA,yBAAA,MAAA;AAAA,CAAA;AAAA,IAAA,aAAA0xB,OAAA;EAAA,2BAAA;AAAA,0BAAA;AACA,oBAAA;AACA,4BAAA;AACA,qBAAA;AACA,4BAAA;AACA,sBAAA;AACA,qBAAA;AACA,cAAA;EAAA;AAAA,CAAA;ACPA,IAAA,wBAAA,CAAA;AAAAx8B,UAAA,uBAAA;EAAA,kBAAA,MAAA;EAAA,qBAAA,MAAA;EAAA,qBAAA,MAAA;EAAA,iBAAA,MAAA;AAAA,CAAA;AAqBO,SAAA,gBAAyB,QAAsD;AACnF,UAAQ,QAAA;IAAA,KACA;AACF,aAAO,oBAAA;IAAA,KACL;AACF,aAAO,oBAAA;EAAA;AAGb,QAAM,WAAW,CAAC,aAAa,uBAAA;AAE/B,SAAO;IACJ;IACA,QAAQ;IACR,SAAAS;IACA;EAAA;AAAA;AAIC,SAAA,sBAAoD;AACxD,QAAM,WAAW,CAAC,aAAa,WAAA;AAE/B,SAAO;IACJ;IACA,QAAQ;IACR,SAAAA;IACA,OAAO,MAAM;AACV,aAAO,aAAa,KAAK,KAAK,KAAA,CAAA;IAAA;EAAA;AAAA;AAKhC,SAAA,sBAAoD;AACxD,QAAM,WAAW,CAAC,aAAa,sBAAA;AAE/B,SAAO;IACJ;IACA,QAAQ;IACR,SAAAA;IACA;EAAA;AAAA;AAIN,SAAA,iBAA0B,OAAuB;AAC9C,SAAO,8CAA8C,KAAK,OAAO,KAAA,CAAA;AAAA;AAhEpE,IAGY;AAHZ,IASMA;AATN,IAiBM;AAjBN,IAAA,qBAAA+7B,OAAA;EAAA,mCAAA;AAAA,eAAA;AAGY,uBAAL,kBAAK,sBAAL;AACJ,wBAAA,MAAA,IAAO;AACP,wBAAA,SAAA,IAAU;AACV,wBAAA,cAAA,IAAe;AAHN,aAAA;IAAA,GAAA,oBAAA,CAAA,CAAA;AAMN,IAAA/7B,WAA0C,CAAC,EAAE,SAAA,GAAY,OAAOP,QAAMC,WAAS;AAClF,UAAI,aAAa,OAAqB,iBAAiB,KAAA,GAAQ;AAC5D,eAAOD,OAAK,OAAO,KAAK,OAAA,CAAA;MAAA;AAG3B,MAAAC,OAAK,KAAA;IAAA;AAGF,aAAwC,CAAC,SAAS;AACrD,aAAO,KAAK,KAAA,MAAW;IAAA;EAAA;AAAA,CAAA;ACHnB,SAAA,mBAA4B,QAAiB,MAA4B;AAC7E,QAAMwkB,WAAU,IAAI,cAAc,MAAA;AAClC,QAAM,SAAS,SAAS,sBAAsB;AAE9C,qBAAmB,IAAA,EAAM,QAAQ,CAAC,SAAS;AACxC,UAAM,UAAU,KAAK,QAAQ,QAAQ,EAAA;AAErC,IAAAA,SAAQ,MAAM,KAAK,OAAA;AAClB,KAAA,eAAe,KAAK,OAAA,IAAWA,SAAQ,UAAUA,SAAQ,OAAO,KAAK,OAAA;EAAA,CAAA;AAGzE,SAAOA;AAAA;AA1BV,IAGO;AAHP,IAWM;AAXN,IAYM;AAZN,IAaM;AAbN,IAAA,oBAAA6X,OAAA;EAAA,sCAAA;AACA,eAAA;AAEO,oBAAA,MAA4C;MAKhD,YAA4B,QAAiB;AAAjB,aAAA,SAAA;AAJrB,aAAA,QAAkB,CAAA;AAClB,aAAA,QAAkB,CAAA;AAClB,aAAA,UAAoB,CAAA;MAAA;IAAA;AAKxB,oBAAgB;AAChB,0BAAsB;AACtB,qBAAiB;EAAA;AAAA,CAAA;ACbvB,IAAA,eAAA,CAAA;AAAAx8B,UAAA,cAAA;EAAA,gBAAA,MAAA;EAAA,eAAA,MAAA;EAAA,wBAAA,MAAA;EAAA,cAAA,MAAA;EAAA,aAAA,MAAA;EAAA,2BAAA,MAAA;EAAA,2BAAA,MAAA;AAAA,CAAA;AAYO,SAAA,cAAuB,SAAoC;AAC/D,SAAO;IACJ,UAAU;IACV,QAAQ;IACR,QAAA;EAAA;AAAA;AAIC,SAAA,uBAAgC,OAAkC;AACtE,SAAO;IACJ,UAAU;IACV,QAAQ;IACR,SAAS;AACN,YAAM,OAAO,UAAU,WAAW,IAAI,uBAAuB,KAAA,IAAS;IAAA;EAAA;AAAA;AAKxE,SAAA,0BAAmC,UAAoB,WAAU,OAA2B;AAChG,SAAO;IACJ;IACA,QAAQ;IACR,OAAO,MAAM;AACV,aAAO,WAAU,OAAO,IAAA,EAAM,KAAA,IAAS;IAAA;EAAA;AAAA;AAKzC,SAAA,0BAAmC,UAAqC;AAC5E,SAAO;IACJ;IACA,QAAQ;IACR,OAAOoB,SAAQ;AACZ,aAAOA;IAAA;EAAA;AAAA;AAKT,SAAA,aAAyB,MAA+C;AAC5E,SAAO,KAAK,WAAW;AAAA;AAGnB,SAAA,YAAwB,MAA2C;AACvE,SAAO,KAAK,WAAW,WAAW,CAAC,KAAK,SAAS;AAAA;AAvDpD,IAGa;AAHb,IAAA,YAAAo7B,OAAA;EAAA,0BAAA;AAAA,kCAAA;AAGa,qBAAqB,CAAA;EAAA;AAAA,CAAA;ACHlC,IAAA,gBAAA,CAAA;AAAAx8B,UAAA,eAAA;EAAA,+BAAA,MAAA;EAAA,4BAAA,MAAA;EAAA,6BAAA,MAAA;EAAA,cAAA,MAAA;EAAA,WAAA,MAAA;EAAA,sBAAA,MAAA;EAAA,qBAAA,MAAA;AAAA,CAAA;AAkCO,SAAA,qBAA8B,MAA0B,YAAsB;AAClF,QAAM,EAAE,WAAW,SAAS,MAAA,IAAU,gBAAgB,IAAA;AAEtD,MAAI,CAAC,WAAW;AACb,WAAO,uBAAuB,0BAAA;EAAA;AAGjC,MAAI,CAAC,MAAM,SAAS;AACjB,WAAO,uBAAuB,8BAA8B,KAAK,UAAU,IAAA,CAAA;EAAA;AAG9E,UAAQ,KAAK,GAAG,UAAA;AAEhB,MAAI,QAAQ,KAAK,iBAAA,GAAoB;AAClC,WAAO,uBAAuB,6BAAA;EAAA;AAGjC,SAAO,UAAU,WAAW,OAAA;AAAA;AAGxB,SAAA,UAAmB,MAAiB,YAAgD;AACxF,QAAM,WAAqB,CAAC,SAAS,IAAI,IAAA,IAAQ,GAAG,UAAA;AAEpD,SAAO;IACJ;IACA,QAAQ;IACR,OAAO,MAA4B;AAChC,aAAO,mBAAmB,SAAS,KAAsB,IAAA;IAAA;EAAA;AAAA;AAK3D,SAAA,oBAA6BuC,QAA0C;AAC3E,SAAO,MAAM,QAAQA,MAAA,KAAUA,OAAM,MAAM,CAAC,SAAS,kBAAkB,IAAI,IAAA,CAAA;AAAA;AAG9E,SAAA,gBAAyBA,QAAe;AACrC,MAAI;AACJ,MAAI,UAAoB,CAAA;AACxB,MAAI,QAAQ,EAAE,WAAW,OAAO,SAAS,KAAA;AAEzC,EAAAA,OACI,QAAQ,YAAY,EAAA,EACpB,MAAM,EAAA,EACN,QAAQ,CAAC,SAAS;AAChB,QAAI,YAAY,IAAA,GAAO;AACpB,kBAAY;AACZ,YAAM,YAAY;IAAA,OACd;AACJ,YAAM,UAAU,MAAM,WAAW,cAAe,QAAQ,QAAQ,MAAA,IAAU,IAAI,IAAA,EAAA;IAAA;EAAA,CAAA;AAIvF,SAAO;IACJ;IACA;IACA;EAAA;AAAA;AAIN,SAAA,YAAqB,WAA4C;AAC9D,SAAO,cAAc,OAAsB,cAAc;AAAA;AAG5D,SAAA,cAAuBkF,SAAyB;AAC7C,SAAO,YAAY,KAAKA,OAAA,KAAW,kBAAkB,IAAIA,QAAO,OAAO,CAAA,CAAA;AAAA;AAG1E,SAAA,kBAA2BA,SAAyB;AACjD,MAAI,UAAU,KAAKA,OAAA,GAAS;AACzB,WAAOA,QAAO,QAAQ,GAAA,IAAO;EAAA;AAGhC,SAAOA,YAAW;AAAA;AA3GrB,IAMa;AANb,IAOa;AAPb,IAQa;AARb,IAaY;AAbZ,IA6BM;AA7BN,IAAA,aAAA+0B,OAAA;EAAA,2BAAA;AACA,sBAAA;AAEA,eAAA;AACA,cAAA;AAEa,oCAAgC;AAChC,iCAA6B;AAC7B,kCAA8B;AAK/B,mBAAL,kBAAK,kBAAL;AACJ,oBAAA,SAAA,IAAU;AACV,oBAAA,OAAA,IAAQ;AACR,oBAAA,kBAAA,IAAmB;AACnB,oBAAA,cAAA,IAAe;AACf,oBAAA,WAAA,IAAY;AACZ,oBAAA,OAAA,IAAQ;AACR,oBAAA,WAAA,IAAY;AAPH,aAAA;IAAA,GAAA,gBAAA,CAAA,CAAA;AAgBN,wBAAiC,oBAAI,IAAI;MAC5C;MACA,GAAG,cAAc,OAAO,OAAO,YAAA,CAAA;IAAA,CAAA;EAAA;AAAA,CAAA;ACc3B,SAAA,iBAA0B,MAA0B;AACxD,QAAMn9B,UAAS,IAAI,WAAA;AAEnB,aAAW,QAAQ,aAAa,IAAA,GAAO;AACpC,IAAAA,QAAO,SAAS,KAAK,MAAM,OAAO,KAAK,GAAA,GAAM,KAAK,KAAA;EAAA;AAGrD,SAAOA;AAAA;AAGH,SAAA,gBAAyB,MAAc,KAA8B;AACzE,MAAIL,SAAuB;AAC3B,QAAMsD,UAAmB,CAAA;AACzB,QAAM,SAAgC,oBAAI,IAAA;AAE1C,aAAW,QAAQ,aAAa,MAAM,GAAA,GAAM;AACzC,QAAI,KAAK,QAAQ,KAAK;AACnB;IAAA;AAGH,IAAAA,QAAO,KAAMtD,SAAQ,KAAK,KAAA;AAE1B,QAAI,CAAC,OAAO,IAAI,KAAK,IAAA,GAAO;AACzB,aAAO,IAAI,KAAK,MAAM,CAAA,CAAA;IAAA;AAGzB,WAAO,IAAI,KAAK,IAAA,EAAO,KAAKA,MAAA;EAAA;AAG/B,SAAO;IACJ;IACA,OAAO,MAAM,KAAK,OAAO,KAAA,CAAA;IACzB;IACA,OAAAA;IACA,QAAAsD;EAAA;AAAA;AAIN,SAAA,eAAwB,UAA0B;AAC/C,SAAO,SAAS,QAAQ,YAAY,EAAA;AAAA;AAGvC,UAAA,aAAuB,MAAc,eAA8B,MAAM;AACtE,QAAM,QAAQ,KAAK,MAAM,IAAA;AAEzB,WAAS,IAAI,GAAGqJ,OAAM,MAAM,SAAS,GAAG,IAAIA,QAAO;AAChD,UAAM,OAAO,eAAe,MAAM,GAAA,CAAA;AAElC,QAAI3M,SAAQ,MAAM,GAAA;AAClB,QAAI,MAAM;AAEV,QAAIA,OAAM,SAAS,IAAA,GAAO;AACvB,YAAM,OAAO,QAAQA,QAAO,IAAA;AAC5B,YAAM,KAAK,CAAA;AACX,MAAAA,SAAQ,KAAK,CAAA;IAAA;AAGhB,UAAM,EAAE,MAAM,KAAK,OAAAA,OAAA;EAAA;AAAA;AAtGzB,IAGO;AAHP,IAAA,kBAAAw9B,OAAA;EAAA,oCAAA;AACA,eAAA;AAEO,iBAAA,MAA8C;MAA9C,cAHP;AAIU,aAAA,QAAkB,CAAA;AAClB,aAAA,SAA+C,uBAAO,OAAO,IAAA;MAAA;MAAA,IAIzD,MAAoB;AAC5B,YAAI,CAAC,KAAK,MAAM;AACb,eAAK,OAAO,KAAK,MAAM,OAAO,CAAC1wB,MAAmB,SAAiB;AAChE,mBAAO,OAAO,OAAOA,MAAK,KAAK,OAAO,IAAA,CAAA;UAAA,GACtC,CAAA,CAAA;QAAA;AAGN,eAAO,KAAK;MAAA;MAGR,QAAQ,MAA4B;AACxC,YAAI,EAAE,QAAQ,KAAK,SAAS;AACzB,gBAAM,SAAS5B,MAAK,KAAK,KAAA;AACzB,eAAK,OAAO,IAAA,IAAQ,SAAS,OAAO,OAAO,KAAK,OAAO,MAAA,CAAA,IAAW,CAAA;AAElE,eAAK,MAAM,KAAK,IAAA;QAAA;AAGnB,eAAO,KAAK,OAAO,IAAA;MAAA;MAGf,SAAS,MAAc,KAAalL,QAAe;AACvD,cAAMsD,UAAS,KAAK,QAAQ,IAAA;AAE5B,YAAI,CAACA,QAAO,eAAe,GAAA,GAAM;AAC9B,UAAAA,QAAO,GAAA,IAAOtD;QAAA,WACN,MAAM,QAAQsD,QAAO,GAAA,CAAA,GAAO;AACnC,UAAAA,QAAO,GAAA,EAAkB,KAAKtD,MAAA;QAAA,OAC3B;AACJ,UAAAsD,QAAO,GAAA,IAAO,CAACA,QAAO,GAAA,GAAgBtD,MAAA;QAAA;AAGzC,aAAK,OAAO;MAAA;IAAA;EAAA;AAAA,CAAA;AC5BlB,SAAA,cACG2G,QACA,UACmB;AACnB,MAAI,OAAOA,WAAU,YAAY,eAAe,eAAeA,MAAA,GAAQ;AACpE,WAAOA;EAAA;AAEV,SAAO;AAAA;AAGV,SAAA,cACG,KACA3G,QACAy9B,UACA92B,QACmB;AACnB,QAAM,WAAqB,CAAC,UAAU,KAAKA,MAAA,EAAA;AAE3C,MAAI82B,UAAQ;AACT,aAAS,KAAK,OAAA;EAAA;AAGjB,WAAS,KAAK,KAAKz9B,MAAA;AAEnB,SAAO;IACJ;IACA,QAAQ;IACR,OAAO,MAAsB;AAC1B,aAAO;IAAA;EAAA;AAAA;AAKhB,SAAA,cAAuB,KAAa2G,QAAqD;AACtF,QAAM,WAAqB,CAAC,UAAU,UAAU,iBAAiB,aAAa,GAAA;AAE9E,MAAIA,QAAO;AACR,aAAS,OAAO,GAAG,GAAG,KAAKA,MAAA,EAAA;EAAA;AAG9B,SAAO;IACJ;IACA,QAAQ;IACR,OAAO,MAAM;AACV,aAAO,gBAAgB,MAAM,GAAA;IAAA;EAAA;AAAA;AAKtC,SAAA,eAAwBA,QAAuD;AAC5E,QAAM,WAAW,CAAC,UAAU,UAAU,iBAAiB,QAAA;AAEvD,MAAIA,QAAO;AACR,aAAS,KAAK,KAAKA,MAAA,EAAA;EAAA;AAGtB,SAAO;IACJ;IACA,QAAQ;IACR,OAAO,MAAc;AAClB,aAAO,iBAAiB,IAAA;IAAA;EAAA;AAAA;AAKlB,SAAA,iBAAuE;AACnF,SAAO;IACJ,UAA8B,KAAa3G,WAAkB,MAAiB;AAC3E,aAAO,KAAK,SACT,cACG,KACAA,QACA,KAAK,CAAA,MAAO,MACZ;QAAc,KAAK,CAAA;QAAI;;MAAA,CAAA,GAE1B,yBAAyB,SAAA,CAAA;IAAA;IAI/B,UAA8B,KAAa2G,QAAwB;AAChE,aAAO,KAAK,SACT,cAAc,KAAK,cAAcA,QAAO,MAAA,CAAA,GACxC,yBAAyB,SAAA,CAAA;IAAA;IAI/B,cAAkC,MAAiB;AAChD,aAAO,KAAK,SACT,eAAe,cAAc,KAAK,CAAA,GAAI,MAAA,CAAA,GACtC,yBAAyB,SAAA,CAAA;IAAA;EAAA;AAAA;AAtGrC,IAMY;AANZ,IAAA,cAAA62B,OAAA;EAAA,4BAAA;AACA,oBAAA;AAGA,eAAA;AAEY,qBAAL,kBAAK,oBAAL;AACJ,sBAAA,QAAA,IAAS;AACT,sBAAA,QAAA,IAAS;AACT,sBAAA,OAAA,IAAQ;AACR,sBAAA,UAAA,IAAW;AAJF,aAAA;IAAA,GAAA,kBAAA,CAAA,CAAA;EAAA;AAAA,CAAA;AC0CL,SAAA,oBAA6B,QAAgC;AACjE,SAAO,IAAI,UAAA,EAAY,MAAM,GAAG,MAAA;AAAA;AAGnC,SAAA,UAAmB,MAA0B;AAC1C,QAAM,QAA6B,oBAAI,IAAA;AACvC,QAAM,UAAiC,CAAA;AAEvC,yBAAuB,MAAM,CAACj6B,WAAU;AACrC,UAAM,CAAC,MAAM,MAAM,OAAA,IAAWA,OAAM,MAAM,IAAA;AAC1C,UAAM,IAAI,IAAA;AACT,KAAA,QAAQ,IAAA,IAAQ,QAAQ,IAAA,KAAS,CAAA,GAAI,KAAK;MACxC,MAAM,SAAS,IAAA;MACf;MACA;IAAA,CAAA;EAAA,CAAA;AAIN,SAAO;IACJ;IACA;EAAA;AAAA;AAIS,SAAA,eAAqC;AACjD,SAAO;IACJ,KAAyB,YAAmC;AACzD,YAAM,OAAO,yBAAyB,SAAA;AACtC,YAAM,UAAU,mBAAmB,SAAA;AAEnC,iBAAWkF,WAAU,mBAAmB;AACrC,YAAI,QAAQ,SAASA,OAAA,GAAS;AAC3B,iBAAO,KAAK,SACT,uBAAuB,qBAAqBA,OAAA,qBAAA,GAC5C,IAAA;QAAA;MAAA;AAKT,UAAI,OAAO,eAAe,UAAU;AACjC,qBAAa,iBAAA,EAAmB,MAAM,UAAA;MAAA;AAGzC,YAAM,WAAW,CAAC,QAAQ,UAAU,MAAM,eAAe,GAAG,SAAS,GAAG,UAAA;AAExE,aAAO,KAAK,SACT;QACG;QACA,QAAQ;QACR,OAAO,QAAQ;AACZ,iBAAO,UAAU,MAAA;QAAA;MAAA,GAGvB,IAAA;IAAA;EAAA;AAAA;AArGZ,IAaM;AAbN,IAeM;AAfN,IAAA;AAAA,IAyBA;AAzBA,IAAA,YAAA+0B,OAAA;EAAA,0BAAA;AAEA,eAAA;AASA,cAAA;AAEM,wBAAoB,CAAC,IAAA;AAErB,YAAQ,OAAO,WAAA;AAUrB,gBAAA,MAAwC;MAAxC,cAzBA;AA0BY,aAAA,EAAA,IAAmB,CAAA;MAAA;MAAA,GAAnB,KAAA,OAEP,OAAO,SAAA,IAAY;AAClB,mBAAW,SAAS,KAAK,KAAA,GAAQ;AAC9B,gBAAM;QAAA;MAAA;MAIZ,OAAO,KAAe;AACnB,YAAI,UAAU,KAAK,KAAA,EAAO,KAAK,SAAS,KAAK,GAAG,cAAc,KAAK,IAAA,GAAO,GAAA;AAC1E,eAAO;MAAA;MAGV,SAAS,OAAiB;AACvB,aAAK,KAAA,EAAO,KAAK,GAAG,cAAc,OAAO,IAAA,CAAA;AACzC,eAAO;MAAA;IAAA;EAAA;AAAA,CAAA;ACzCb,IAAA,gBAAA,CAAA;AAAAx8B,UAAA,eAAA;EAAA,WAAA,MAAA;EAAA,cAAA,MAAA;EAAA,WAAA,MAAA;AAAA,CAAA;AAiBO,SAAA,UAAmB,MAAwB,YAAsB;AACrE,QAAM,WAAqB,CAAC,OAAA;AAC5B,MAAI,iBAAiB,IAAA,GAAO;AACzB,aAAS,KAAK,KAAK,IAAA,EAAA;EAAA;AAEtB,WAAS,KAAK,GAAG,UAAA;AAEjB,SAAO,0BAA0B,QAAA;AAAA;AAG7B,SAAA,aAAsB,MAAyC;AACnE,MAAI,iBAAiB,IAAA,GAAO;AACzB,WAAO;EAAA;AAGV,UAAQ,OAAO,MAAA;IAAA,KACP;IAAA,KACA;AACF,aAAO;EAAA;AAGb;AAAA;AAGH,SAAA,iBAA0B,MAA0C;AACjE,SAAO,WAAW,SAAS,IAAA;AAAA;AA1C9B,IAGY;AAHZ,IAWM;AAXN,IAAA,aAAAw8B,OAAA;EAAA,2BAAA;AAAA,cAAA;AAGY,gBAAL,kBAAK,eAAL;AACJ,iBAAA,OAAA,IAAQ;AACR,iBAAA,MAAA,IAAO;AACP,iBAAA,MAAA,IAAO;AACP,iBAAA,OAAA,IAAQ;AACR,iBAAA,MAAA,IAAO;AALE,aAAA;IAAA,GAAA,aAAA,CAAA,CAAA;AAQN,iBAAa,MAAM,KAAK,OAAO,OAAO,SAAA,CAAA;EAAA;AAAA,CAAA;AvBW5C,SAAA,YAAqB;AAClB,aAAO,aAAAp9B,SAAM,YAAA;AAAA;AAWhB,SAAA,eACG,IACA,QACA,SACqB;AACrB,MAAI,CAAC,UAAU,CAAC,OAAO,MAAA,EAAQ,QAAQ,OAAO,EAAA,GAAK;AAChD,WAAO,CAAC,UACH,KACA,CAAC,YAAY,SAAS;AACnB,SAAG,SAAS,GAAG,IAAA;AACf,cAAQ,SAAS,GAAG,IAAA;IAAA;EAAA;AAI/B,SAAO,CAAC,YAAY,SAAS;AAC1B,OAAG,MAAM,OAAA,IAAW,QAAQ,GAAG,IAAA;AAC/B,QAAI,SAAS;AACV,cAAQ,SAAS,GAAG,IAAA;IAAA;EAAA;AAAA;AAK7B,SAAA,gBACG,MACA,eACA,EAAE,WAAW,gBAAA,GACN;AACP,MAAI,OAAO,SAAS,UAAU;AAC3B,WAAO;EAAA;AAEV,QAAM,iBAAkB,iBAAiB,cAAc,aAAc;AAErE,MAAI,eAAe,WAAW,eAAA,GAAkB;AAC7C,WAAO,eAAe,OAAO,gBAAgB,SAAS,CAAA;EAAA;AAGzD,SAAO,kBAAkB;AAAA;AAGrB,SAAA,aACJ,OACA,SACA,aACA,eAAe,UAAA,GACF;AACb,QAAM,cAAe,SAAS,IAAI,KAAA,OAAa;AAE/C,QAAM,UAA0B,CAAA;AAChC,QAAM,gBACH,OAAO,YAAY,WAAW,aAAa,OAAO,OAAA,IAAW;AAChE,QAAM,MAAM,gBAAgB,WAAW,SAAS,YAAA,GAAe,eAAe,YAAA;AAE9E,SAAOqS,MAAK,WAAA;AAEZ,WAAA,QAAiB,MAAc,SAAkB;AAC9C,WAAO9I,QACJ,SACA,aAAa,OAAO,IAAI,QAAQ,UAAU,IAAA,GAAO,SAAS,YAAA,CAAA;EAAA;AAIhE,WAAA8I,MAAc,OAAgB;AAC3B,UAAM,aAAc,SAAS,IAAI,KAAA,OAAa;AAC9C,UAAM,SAAS,iBAAiB,eAAe,eAAe,UAAA,KAAgB;AAC9E,UAAM,OAAO,eAAe,cAAc,GAAG,WAAA,IAAe,UAAA,IAAc,MAAA;AAE1E,WAAO,OAAO,OAAO,gBAAgB,SAAQ,MAAM;MAChD;MACA;MACA;MACA,MAAAA;IAAA,CAAA;EAAA;AAAA;AAxGT,IAAA,kBAAA+qB,OAAA;EAAA,0BAAA;AACA,eAAA;AAWA,iBAAAp9B,QAAM,WAAW,IAAI,CAACJ,WAAe,OAAO,gBAAgBA,MAAA,IAASA,OAAM,SAAS,GAAA;AACpF,iBAAAI,QAAM,WAAW,IAAI,CAACJ,WAAkB;AACrC,UAAI,OAAO,SAASA,MAAA,GAAQ;AACzB,eAAOA,OAAM,SAAS,MAAA;MAAA;AAEzB,aAAO,eAAeA,MAAA;IAAA;EAAA;AAAA,CAAA;AwBjBzB,IAYO;AAZP,IAYO;AAZP,IAAA,2BAAAw9B,OAAA;EAAA,2CAAA;AACA,mBAAA;AACA,oBAAA;AAUO,yBAAA,MAAwB;MAG5B,YAAoB,WAAW,eAAe;AAA1B,aAAA,WAAA;AAFZ,aAAA,SAAgD,oBAAI,IAAA;MAAA;MAIpD,aAAa,MAAwB;AAC1C,eAAO,KAAK,OAAO,IAAI,IAAA;MAAA;MAGlB,eAAe,MAAwC;AAC5D,cAAM,OAAO,mBAAkB,QAAQ,KAAK,SAAS,CAAA,CAAA;AACrD,cAAM,SAAS,aAAa,KAAK,UAAU,IAAA;AAE3C,eAAO;UACJ;UACA;UACA;QAAA;MAAA;MAIN,KAAK,MAAwC;AAC1C,cAAM,WAAW,KAAK,eAAe,IAAA;AACrC,iBAAS,OAAO,2CAA2C,KAAK,QAAA;AAEhE,aAAK,OAAO,IAAI,MAAM,QAAA;AAEtB,eAAO;MAAA;MAGV,MAAM,KAAe;AAClB,mBAAW,CAAC,MAAM,EAAE,OAAA,CAAA,KAAa,MAAM,KAAK,KAAK,OAAO,QAAA,CAAA,GAAY;AACjE,cAAI,SAAS,IAAI,MAAM;AACpB,mBAAO,KAAK,aAAa,GAAA;AACzB,mBACG,8FAAA;UAAA,OAEC;AACJ,mBAAO,KACJ,gFACA,IAAI,OAAA;UAAA;AAIV,eAAK,SAAS,IAAA;QAAA;AAGjB,YAAI,KAAK,OAAO,SAAS,GAAG;AACzB,gBAAM,IAAI,MAAM,0CAA0C,KAAK,OAAO,IAAA,EAAA;QAAA;MAAA;MAI5E,SAAS,MAAwB;AAC9B,cAAM,WAAW,KAAK,aAAa,IAAA;AACnC,YAAI,UAAU;AACX,eAAK,OAAO,OAAO,IAAA;QAAA;MAAA;MAIzB,QAAQ,MAAwC;AAC7C,cAAM,WAAW,KAAK,aAAa,IAAA;AACnC,YAAI,CAAC,UAAU;AACZ,gBAAM,IAAI,SAAS,QAAW,uDAAA;QAAA;AAEjC,iBAAS,OAAO,eAAA;AAEhB,eAAO;MAAA;MAAA,OAGH,QAAQ,OAAO,SAAS;AAC5B,eAAO,QAAQ,IAAA,IAAQ,EAAE,mBAAkB,OAAA;MAAA;IAAA;AArE1C,wBAAA;AAAA,sBAwEW,UAAU;EAAA;AAAA,CAAA;ArBuL5B,SAAA,cAA0B,MAAwB,UAAoB;AACnE,SAAO;IACJ,QAAQnsB,OAAM,KAAK,QAAA,KAAa;IAChC;EAAA;AAAA;AAIN,SAAA,gBAAyB,QAAkB,QAAsB;AAC9D,SAAO,CAAC,QAAe;AACpB,WAAO,sCAAsC,GAAA;AAC7C,WAAO,KAAK,OAAO,KAAK,OAAO,IAAI,KAAA,GAAQ,OAAA,CAAA;EAAA;AAAA;AAIjD,SAAA,eACG,QACA,MACA,QACA,QACD;AACC,SAAO,CAACjP,YAAmB;AACxB,WAAO,wBAAwB,MAAMA,OAAA;AACrC,WAAO,MAAMA,OAAA;AACb,WAAO,KAAKA,OAAA;EAAA;AAAA;AAlSlB,IAiBO;AAjBP,IAAA,0BAAAo7B,OAAA;EAAA,0CAAA;AACA,mBAAA;AAGA,cAAA;AASA,eAAA;AAEA,6BAAA;AAEO,uBAAA,MAAoD;MAyBxD,YACW,WACA,YACA,UACT;AAHS,aAAA,YAAA;AACA,aAAA,aAAA;AACA,aAAA,WAAA;AA3BH,aAAA,SAAuB,QAAQ,QAAA;AAC/B,aAAA,SAAS,IAAI,kBAAA;MAAA;MAAA,IAGV,SAAS;AACjB,eAAO,KAAK,UAAU;MAAA;MAAA,IAGd,MAAM;AACd,eAAO,KAAK,QAAQ,KAAK,UAAU;MAAA;MAAA,IAG3B,IAAI,KAAa;AACzB,aAAK,OAAO;MAAA;MAAA,IAGJ,MAAM;AACd,eAAO,KAAK,UAAU;MAAA;MAAA,IAGd,gBAAgB;AACxB,eAAO,KAAK,UAAU;MAAA;MASlB,QAAQ;AACZ,eAAO;MAAA;MAGH,KAAQ,MAAoC;AAChD,aAAK,OAAO,KAAK,IAAA;AAEjB,eAAQ,KAAK,SAAS,KAAK,OAAO,KAAK,MAAM,KAAK,YAAY,IAAA,CAAA;MAAA;MAGnD,YAAe,MAA2C;AAAA,eAAA,QAAA,MAAA,MAAA,aAAA;AACrE,gBAAM,qBAAqB,MAAM,KAAK,WAAW,KAAA;AACjD,gBAAM,kBAAkB,MAAM,KAAK,OAAO,SAAS,IAAA;AAEnD,cAAI;AACD,kBAAM,EAAE,OAAA,IAAW,KAAK,OAAO,QAAQ,IAAA;AACvC,mBAAQ,MAAO,YAAY,IAAA,IACtB,KAAK,iBAAiB,MAAM,MAAA,IAC5B,KAAK,kBAAkB,MAAM,MAAA;UAAA,SAC5B,GAAP;AACC,kBAAM,KAAK,iBAAiB,MAAM,CAAA;UAAA,UAAA;AAElC,4BAAA;AACA,+BAAA;UAAA;QAAA,CAAA;MAAA;MAIE,iBAAoB,MAAwB,GAAU;AAC3D,cAAM,WACH,aAAa,WAAW,OAAO,OAAO,GAAG,EAAE,KAAA,CAAA,IAAU,IAAI,SAAS,MAAM,KAAK,OAAO,CAAA,CAAA;AAEvF,aAAK,SAAS,QAAQ,QAAA;AACtB,aAAK,OAAO,MAAM,QAAA;AAElB,eAAO;MAAA;MAGI,kBAAqB,MAAuB,QAAsB;AAAA,eAAA,QAAA,MAAA,MAAA,aAAA;AAC7E,gBAAM,OAAO,KAAK,SAAS,KACxB,cACA,CAAC,GAAG,KAAK,QAAA,GACT,cAAc,MAAM,KAAK,QAAA,CAAA;AAG5B,gBAAM,MAAM,MAAM,KAAK,YACpB,MACA,KAAK,QACL,MACA,KAAK,eACL,OAAO,KAAK,OAAA,CAAA;AAEf,gBAAM,gBAAgB,MAAM,KAAK,eAAe,MAAM,MAAM,KAAK,OAAO,KAAK,QAAA,CAAA;AAE7E,iBAAO,6CAA6C,KAAK,MAAA;AAEzD,cAAI,aAAa,IAAA,GAAO;AACrB,mBAAO,eAAe,KAAK,QAAQ,aAAA;UAAA;AAGtC,iBAAO,eAAe,KAAK,QAAQ,cAAc,UAAA,CAAA;QAAA,CAAA;MAAA;MAGtC,iBAAiB,MAAiB,QAAsB;AAAA,eAAA,QAAA,MAAA,MAAA,aAAA;AACnE,iBAAO,6DAAA;AACP,iBAAO,KAAK,OAAO,IAAA;QAAA,CAAA;MAAA;MAGd,eACL,MACA,MACA,QACA,QAC0B;AAC1B,cAAM,EAAE,UAAU,WAAW,QAAQ,OAAA,IAAW;AAEhD,eAAO,IAAI,QAAQ,CAACt8B,QAAMC,WAAS;AAChC,iBAAO,4DAA4D,QAAA;AAEnE,gBAAM,EAAE,MAAA,IAAU,KAAK,SAAS,KAC7B,cACA,EAAE,OAAO,UAAA,GACT,eAAA,eAAA,CAAA,GACM,cAAc,MAAM,IAAA,CAAA,GACpB,MAAA,CAAA;AAIT,cAAI,SAAS,KAAK,SAAS;AACxB,mBAAO,KAAK,gDAAA;AAEZ,mBAAO,KAAK,QACT,QACA,OACA,CAAC,cAAc;AACZ,qBAAO,KAAK,yCAAA;AACZ,qBAAO,8BAA8B,eAAe,SAAA,CAAA;AAEpD,cAAAD,OACG,IAAI,iBACD,MAAM,QAAQ,SAAA,IAAa,OAAO,OAAO,SAAA,IAAa,WACtD,OAAO,OAAO,MAAA,CAAA,CAAA;YAAA,GAIvBC,MAAA;UAAA;AAIN,cAAI,OAAO;AACR,mBAAO,KACJ,yDACA,UACA,OAAO,QACP,SAAA;AAEH,mBAAOA,OAAK,KAAA;UAAA;AAGf,iBAAO,KAAK,iCAAA;AACZ,UAAAD,OAAK,IAAI,iBAAiB,OAAO,OAAO,MAAA,GAAS,OAAO,OAAO,MAAA,CAAA,CAAA;QAAA,CAAA;MAAA;MAIvD,YACX,MACA,SACA,MACA,eACA,QAC2B;AAAA,eAAA,QAAA,MAAA,MAAA,aAAA;AAC3B,gBAAM,eAAe,OAAO,QAAQ,QAAA;AACpC,gBAAM,eAA6B,KAAK,SAAS,KAC9C,iBACA;YACG,KAAK,KAAK;YACV,KAAK,KAAK;YACV,aAAa;UAAA,GAEhB,cAAc,MAAM,KAAK,QAAA,CAAA;AAG5B,iBAAO,IAAI,QAAQ,CAACA,WAAS;AAC1B,kBAAM,SAAmB,CAAA;AACzB,kBAAM,SAAmB,CAAA;AAEzB,mBAAO,KAAK,SAAS,SAAS,IAAA;AAC9B,mBAAO,MAAM,YAAA;AAEb,gBAAI,YAAY,KAAK,aAAa,MAAM,IAAA;AACxC,gBAAI,WAAW;AACZ,qBAAOA,OAAK;gBACT;gBACA;gBACA,UAAU;gBACV;cAAA,CAAA;YAAA;AAIN,iBAAK,SAAS,KAAK,gBAAgB,QAAW,cAAA,eAAA,CAAA,GACxC,cAAc,MAAM,IAAA,CAAA,GADoB;cAE3C,KAAK,QAAQ;AACV,4BAAY,UAAU;cAAA;YAAA,CAAA,CAAA;AAI5B,kBAAM,UAAU,MAAM,SAAS,MAAM,YAAA;AAErC,oBAAQ,OAAQ,GACb,QACA,eAAe,QAAQ,UAAU,QAAQ,aAAa,KAAK,QAAA,CAAA,CAAA;AAE9D,oBAAQ,OAAQ,GACb,QACA,eAAe,QAAQ,UAAU,QAAQ,aAAa,KAAK,QAAA,CAAA,CAAA;AAG9D,oBAAQ,GAAG,SAAS,gBAAgB,QAAQ,MAAA,CAAA;AAE5C,gBAAI,eAAe;AAChB,qBAAO,6DAAA;AACP,4BAAc,SAAS,QAAQ,QAAS,QAAQ,QAAS,CAAC,GAAG,IAAA,CAAA;YAAA;AAGhE,iBAAK,SAAS,KAAK,eAAe,QAAW,cAAA,eAAA,CAAA,GACvC,cAAc,MAAM,IAAA,CAAA,GADmB;cAE1C;cACA,MAAM,UAAkB,QAAgB;AACrC,gBAAAA,OAAK;kBACF;kBACA;kBACA;kBACA,WAAW,aAAa;gBAAA,CAAA;cAAA;cAG9B,KAAK,QAAe;AACjB,oBAAI,QAAQ,QAAQ;AACjB;gBAAA;AAGH,4BAAY;AACZ,wBAAQ,KAAK,QAAA;cAAA;YAAA,CAAA,CAAA;UAAA,CAAA;QAAA,CAAA;MAAA;MAMjB,aAAgB,MAAwB,MAAgB;AAC7D,YAAI;AACJ,aAAK,SAAS,KAAK,gBAAgB,QAAW,cAAA,eAAA,CAAA,GACxC,cAAc,MAAM,IAAA,CAAA,GADoB;UAE3C,KAAK,QAAQ;AACV,wBAAY,UAAU;UAAA;QAAA,CAAA,CAAA;AAI5B,eAAO;MAAA;IAAA;EAAA;AAAA,CAAA;AsBvQb,IAAA,uBAAA,CAAA;AAAAF,UAAA,sBAAA;EAAA,aAAA,MAAA;AAAA,CAAA;AAAA,IAMO;AANP,IAAA,oBAAAw8B,OAAA;EAAA,oCAAA;AAGA,4BAAA;AAGO,kBAAA,MAA+C;MAMnD,YACU,SAAiB,OACjB,KACC,YACA,UACT;AAJQ,aAAA,SAAA;AACA,aAAA,MAAA;AACC,aAAA,aAAA;AACA,aAAA,WAAA;AATH,aAAA,SAAS,IAAI,iBAAiB,MAAM,KAAK,YAAY,KAAK,QAAA;MAAA;MAYlE,QAA2B;AACxB,eAAO,IAAI,iBAAiB,MAAM,KAAK,YAAY,KAAK,QAAA;MAAA;MAG3D,KAAQ,MAAoC;AACzC,eAAO,KAAK,OAAO,KAAK,IAAA;MAAA;IAAA;EAAA;AAAA,CAAA;ACnBvB,SAAA,aACJ,MACA,UACA,WAAqC,MACtC;AACC,QAAM,YAAY,CAAC,SAAY;AAC5B,aAAS,MAAM,IAAA;EAAA;AAGlB,QAAME,YAAU,CAAC,QAAqC;AACnD,SAAI,OAAA,OAAA,SAAA,IAAK,UAAS,MAAM;AACrB,eACG,eAAe,mBAAmB,4BAA4B,GAAA,IAAO,KACrE,MAAA;IAAA;EAAA;AAKT,WAAS,KAAK,WAAWA,SAAA;AAAA;AAG5B,SAAA,4BAAqC,KAAuB;AACzD,MAAI98B,OAAM,CAAC,SAAiB;AACzB,YAAQ,KACL,6DAA6D,IAAA,mCAAuC,IAAA,iDAAA;AAEvG,IAAAA,OAAM;EAAA;AAGT,SAAO,OAAO,OAAO,KAAK,OAAO,oBAAoB,IAAI,GAAA,EAAK,OAAO,mBAAmB,CAAA,CAAA,CAAA;AAExF,WAAA,kBAA2BkM,MAA4B,MAA0B;AAC9E,QAAI,QAAQ,KAAK;AACd,aAAOA;IAAA;AAGV,IAAAA,KAAI,IAAA,IAAQ;MACT,YAAY;MACZ,cAAc;MACd,MAAM;AACH,QAAAlM,KAAI,IAAA;AACJ,eAAO,IAAI,IAAI,IAAA;MAAA;IAAA;AAIrB,WAAOkM;EAAA;AAAA;AAlDb,IAAA,qBAAA0wB,OAAA;EAAA,6BAAA;AACA,4BAAA;AAEA,eAAA;EAAA;AAAA,CAAA;ACCO,SAAA,2BAAoC,WAAmB,MAA0B;AACrF,SAAO,cAAc,CAAC,aAAgC;AACnD,QAAI,CAAC,aAAa,SAAA,GAAY;AAC3B,YAAM,IAAI,MAAM,4CAA4C,SAAA,GAAA;IAAA;AAG/D,YAAS,QAAQ,UAAU,MAAM;EAAA,CAAA;AAAA;AAVvC,IAAA,gCAAAA,OAAA;EAAA,8CAAA;AAAA,eAAA;AAEA,cAAA;EAAA;AAAA,CAAA;ACGA,SAAA,aAAsB,MAAgB;AACnC,QAAM,WAAW,CAAC,YAAY,GAAG,IAAA;AACjC,MAAI,SAAS,CAAA,MAAO,QAAQ,SAAS,SAAS,IAAA,GAAO;AAClD,aAAS,CAAA,IAAK1xB,SAAO,UAAU,IAAA;EAAA;AAGlC,SAAO,0BAA0B,QAAA;AAAA;AAGrB,SAAA,mBAAoF;AAChG,SAAO;IACJ,WAA6B;AAC1B,aAAO,KAAK,SACT,aAAa,mBAAmB,WAAW,CAAA,CAAA,GAC3C,yBAAyB,SAAA,CAAA;IAAA;IAI/B,eAAmC,YAAY,YAAY;AACxD,aAAO,KAAK,SACT,aAAa,CAAC,MAAM,YAAY,YAAY,GAAG,mBAAmB,SAAA,CAAA,CAAA,GAClE,yBAAyB,SAAA,CAAA;IAAA;IAI/B,oBAAwC,YAAY;AACjD,aAAO,KAAK,SACT,aAAa,CAAC,MAAM,YAAY,GAAG,mBAAmB,SAAA,CAAA,CAAA,GACtD,yBAAyB,SAAA,CAAA;IAAA;EAAA;AAAA;AAjCrC,IAAA,gBAAA0xB,OAAA;EAAA,8BAAA;AAEA,eAAA;AACA,cAAA;EAAA;AAAA,CAAA;ACyCO,SAAA,kBAA2B,QAA8B;AAC7D,QAAM,SAAuB;IAC1B,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,MAAM;IACN,SAAS;MACN,SAAS;MACT,YAAY;MACZ,WAAW;IAAA;EAAA;AAGjB,SAAO,oBAAoB,QAAQ,SAAS,MAAA;AAAA;AAxD/C,IAGM;AAHN,IAAA,oBAAAA,OAAA;EAAA,oCAAA;AACA,eAAA;AAEM,cAAsC;MACzC,IAAI,WAAW,qCAAqC,CAAC,QAAQ,CAAC,QAAQ,MAAM,MAAA,MAAY;AACrF,eAAO,SAAS;AAChB,eAAO,SAAS;AAChB,eAAO,OAAO,CAAC,CAAC;MAAA,CAAA;MAEnB,IAAI,WAAW,qBAAqB,CAAC,QAAQ,CAAC,MAAA,MAAY;AACvD,cAAM,QAAQ,OAAO,MAAM,GAAA;AAC3B,cAAM,QAAQ,MAAM,IAAA;AAEpB,YAAI,CAAC,SAAS,CAAC,MAAM,SAAS,GAAA,GAAM;AACjC;QAAA;AAGH,eAAO,SAAS;UACb,OAAO,MAAM,OAAO,GAAG,MAAM,SAAS,CAAA;UACtC,MAAM,MAAM,KAAK,GAAA,EAAK,KAAA;QAAA;MAAA,CAAA;MAG5B,IAAI,WACD,8CACA,CAAC,QAAQ,CAAC9J,UAAS,YAAY,SAAA,MAAe;AAC3C,eAAO,QAAQ,UAAU,SAASA,UAAS,EAAA,KAAO;AAClD,eAAO,QAAQ,aAAa,SAAS,YAAY,EAAA,KAAO;AACxD,eAAO,QAAQ,YAAY,SAAS,WAAW,EAAA,KAAO;MAAA,CAAA;MAG5D,IAAI,WACD,0CACA,CAAC,QAAQ,CAACA,UAAS,OAAO,SAAA,MAAe;AACtC,eAAO,QAAQ,UAAU,SAASA,UAAS,EAAA,KAAO;AAClD,cAAMhtB,SAAQ,SAAS,OAAO,EAAA,KAAO;AACrC,YAAI,cAAc,KAAK;AACpB,iBAAO,QAAQ,YAAYA;QAAA,WACnB,cAAc,KAAK;AAC3B,iBAAO,QAAQ,aAAaA;QAAA;MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;ACvBjC,SAAA,WACJ,SACA,OACA,YACyB;AACzB,QAAM,WAAqB;IACxB;IACA;IACA;IACA,GAAG,cAAc,SAAS,IAAA;IAC1B,GAAG;IACH,GAAG;EAAA;AAGN,SAAO;IACJ;IACA,QAAQ;IACR,QAAQ;EAAA;AAAA;AAIC,SAAA,iBAAuC;AACnD,SAAO;IACJ,OAA2B,YAA+B,MAAiB;AACxE,YAAMrB,QAAO,yBAAyB,SAAA;AACtC,YAAM,OACH,2BAA2B,OAAA,KAC3B,WACG,QAAQ,OAAA,GACR,QAAQ,WAAW,KAAK,CAAA,GAAI,2BAA2B,CAAA,CAAA,CAAA,GACvD,CAAC,GAAG,WAAW,KAAK,CAAA,GAAI,aAAa,CAAA,CAAA,GAAK,GAAG,mBAAmB,WAAW,GAAG,IAAA,CAAA,CAAA;AAGpF,aAAO,KAAK,SAAS,MAAMA,KAAA;IAAA;EAAA;AAIjC,WAAA,2BAAoC,SAAmB;AACpD,WACG,CAAC,0BAA0B,OAAA,KAC3B,uBACG,6EAAA;EAAA;AAAA;AAxDZ,IAAA,cAAAm4B,OAAA;EAAA,4BAAA;AAGA,sBAAA;AACA,eAAA;AASA,cAAA;EAAA;AAAA,CAAA;ACPO,SAAA,eAAwB,UAAkBv4B,QAAoC;AAClF,QAAM,WAAW,CAAC,eAAe,QAAA;AACjC,MAAIA,QAAO;AACR,aAAS,KAAK,IAAA;EAAA;AAGjB,SAAO,0BAA0B,UAAU,IAAA;AAAA;AAZ9C,IAAA,mBAAAu4B,OAAA;EAAA,iCAAA;AAAA,cAAA;EAAA;AAAA,CAAA;ACcO,SAAA,UAAmB,MAAe,MAAc,MAAc;AAClE,QAAM,WAAW,OAAO,IAAA,EAAM,KAAA;AAC9B,MAAI;AAEJ,MAAK,SAAS,kBAAkB,KAAK,QAAA,GAAY;AAC9C,WAAO,IAAI,YAAY,MAAM,MAAM,OAAO,OAAO,CAAA,CAAA;EAAA;AAGpD,MAAK,SAAS,oBAAoB,KAAK,QAAA,GAAY;AAChD,WAAO,IAAI,YAAY,MAAM,MAAM,MAAM,OAAO,CAAA,CAAA;EAAA;AAGnD,MAAI,SAAS;AACb,QAAM,SAAS,SAAS,MAAM,GAAA;AAC9B,SAAO,OAAO,QAAQ;AACnB,UAAM,QAAQ,OAAO,MAAA;AACrB,QAAI,UAAU,MAAM;AACjB,eAAS,OAAO,KAAK,GAAA;AACrB;IAAA;EAAA;AAIN,SAAO,IAAI,YAAY,MAAM,MAAM,OAAO,KAAK,QAAA,GAAW,MAAA;AAAA;AApC7D,IAEO;AAFP,IAWM;AAXN,IAYM;AAZN,IAAA,mBAAAA,OAAA;EAAA,qCAAA;AAEO,kBAAA,MAAwC;MAC5C,YACmB,MACA,MACA,UACA,QACjB;AAJiB,aAAA,OAAA;AACA,aAAA,OAAA;AACA,aAAA,WAAA;AACA,aAAA,SAAA;MAAA;IAAA;AAIhB,wBAAoB;AACpB,0BAAsB;EAAA;AAAA,CAAA;ACN5B,SAAA,eAAwB,SAAmB;AACxC,SAAO,QAAQ,SAAS,WAAA;AAAA;AAGpB,SAAA,SAAkB,OAAO,OAAO,MAAc,YAA8C;AAChG,QAAM,WAAW,CAAC,QAAQ,GAAG,UAAA;AAC7B,MAAI,QAAQ,CAAC,eAAe,QAAA,GAAW;AACpC,aAAS,OAAO,GAAG,GAAG,WAAA;EAAA;AAGzB,SAAO;IACJ;IACA,QAAQ;IACR,OAAO,MAA0B;AAC9B,aAAO,UAAU,SAAS,SAAS,QAAA,GAAW,MAAM,IAAA;IAAA;EAAA;AAAA;AApB7D,IAIM;AAJN,IAAA,YAAAA,OAAA;EAAA,0BAAA;AACA,qBAAA;AAGM,kBAAc;EAAA;AAAA,CAAA;ACMb,SAAA,qBAA8B,YAAsB;AACxD,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACzC,UAAM,SAAS,eAAe,KAAK,WAAW,CAAA,CAAA;AAC9C,QAAI,QAAQ;AACT,aAAO,KAAK,OAAO,CAAA,CAAA;IAAA;EAAA;AAIzB,SAAO;AAAA;AAGH,SAAA,YAAqB,WAA6B;AACtD,SAAO,eAAe,KAAK,SAAA;AAAA;AAtB9B,IAQM;AARN,IAAA,kBAAAA,OAAA;EAAA,+BAAA;AAQM,qBAAiB;EAAA;AAAA,CAAA;ACRvB,IAKO;AALP,IAAA,mBAAAA,OAAA;EAAA,qCAAA;AAKO,kBAAA,MAAwC;MAAxC,cALP;AAMG,aAAA,UAAU;AACV,aAAA,YAAY;AACZ,aAAA,aAAa;AAEb,aAAA,QAA0D,CAAA;MAAA;IAAA;EAAA;AAAA,CAAA;ACkGtD,SAAA,cAAuB,SAAS,IAAgB;AACpD,QAAM,UAAS,mBAAmB,MAAA;AAElC,SAAO,CAAC,WAAmB,oBAAoB,IAAI,YAAA,GAAe,SAAQ,QAAQ,KAAA;AAAA;AA/GrF,IAKM;AALN,IA0CM;AA1CN,IA0EM;AA1EN,IAuFM;AAvFN,IAoGM;AApGN,IAAA,0BAAAA,OAAA;EAAA,0CAAA;AACA,oBAAA;AACA,qBAAA;AACA,eAAA;AAEM,iBAAa;MAChB,IAAI,WACD,kCACA,CAAC,QAAQ,CAAC,MAAM9J,UAAS,cAAc,EAAA,MAAQ;AAC5C,eAAO,MAAM,KAAK;UACf,MAAM,KAAK,KAAA;UACX,SAAS,SAASA,QAAA;UAClB,YAAY,YAAY,QAAQ,SAAS,EAAA,EAAI;UAC7C,WAAW,YAAY,QAAQ,SAAS,EAAA,EAAI;UAC5C,QAAQ;QAAA,CAAA;MAAA,CAAA;MAIjB,IAAI,WACD,iDACA,CAAC,QAAQ,CAAC,MAAM9J,SAAQ7B,MAAA,MAAW;AAChC,eAAO,MAAM,KAAK;UACf,MAAM,KAAK,KAAA;UACX,QAAQ,SAAS6B,OAAA;UACjB,OAAO,SAAS7B,MAAA;UAChB,QAAQ;QAAA,CAAA;MAAA,CAAA;MAIjB,IAAI,WACD,iDACA,CAAC,QAAQ,CAAC,SAASpC,QAAA,MAAa;AAC7B,cAAM,WAAW,UAAU,KAAKA,QAAA;AAChC,cAAM,UAAU,UAAU,KAAKA,QAAA;AAE/B,eAAO,UAAU,SAAS,OAAA;AAC1B,eAAO,aAAa,SAAS,YAAA,OAAA,SAAA,SAAW,CAAA,CAAA;AACxC,eAAO,YAAY,SAAS,WAAA,OAAA,SAAA,QAAU,CAAA,CAAA;MAAA,CAAA;IAAA;AAKzC,oBAAgB;MACnB,IAAI,WACD,uBACA,CAAC,QAAQ,CAAC,eAAe,eAAe,IAAA,MAAU;AAC/C,cAAM,aAAa,SAAS,aAAA;AAC5B,cAAM,YAAY,SAAS,aAAA;AAE3B,eAAO;AACP,eAAO,cAAc;AACrB,eAAO,aAAa;AAEpB,eAAO,MAAM,KAAK;UACf;UACA,SAAS,aAAa;UACtB;UACA;UACA,QAAQ;QAAA,CAAA;MAAA,CAAA;MAIjB,IAAI,WAAuB,eAAe,CAAC,QAAQ,CAAC,IAAA,MAAU;AAC3D,eAAO;AAEP,eAAO,MAAM,KAAK;UACf;UACA,OAAO;UACP,QAAQ;UACR,QAAQ;QAAA,CAAA;MAAA,CAAA;IAAA;AAKX,qBAAiB;MACpB,IAAI,WAAuB,SAAS,CAAC,QAAQ,CAAC,IAAA,MAAU;AACrD,eAAO;AACP,eAAO,MAAM,KAAK;UACf;UACA,SAAS;UACT,YAAY;UACZ,WAAW;UACX,QAAQ;QAAA,CAAA;MAAA,CAAA;IAAA;AAKX,uBAAmB;MACtB,IAAI,WAAuB,yBAAyB,CAAC,QAAQ,CAAC,SAAS,IAAA,MAAU;AAC9E,eAAO;AACP,eAAO,MAAM,KAAK;UACf;UACA,SAAS;UACT,YAAY;UACZ,WAAW;UACX,QAAQ;QAAA,CAAA;MAAA,CAAA;IAAA;AAKX,yBAAkE;MAAA;QACpE;;MAAA,GAAiB;MAAA;QACjB;;MAAA,GAAiB;MAAA;QACjB;;MAAA,GAAqB;MAAA;QACrB;;MAAA,GAAwB;MAAA;QACxB;;MAAA,GAAsB;IAAA;EAAA;AAAA,CAAA;AC5F1B,SAAA,YAAqB,QAAkB,QAAuB;AAC3D,SAAO,OAAO,OACX,CAAC,MAAM,OAAO,UAAU;AACrB,SAAK,KAAA,IAAS,OAAO,KAAA,KAAU;AAC/B,WAAO;EAAA,GAEV,uBAAO,OAAO,EAAE,MAAM,KAAA,CAAA,CAAA;AAAA;AAIrB,SAAA,2BACJ,WAAW,UACX,SAAS,mBACT,YAAY,IACb;AACC,QAAM,kBAAkB,cAAc,SAAA;AAEtC,SAAO,SAAU,QAA8B;AAC5C,UAAM7Y,OAAsC,mBACzC,QACA,MACA,cAAA,EACD,IAAI,SAAU,MAAM;AACnB,YAAM,aAAa,KAAK,KAAA,EAAO,MAAM,eAAA;AACrC,YAAM,cAA+B,YAClC,WAAW,CAAA,EAAG,KAAA,EAAO,MAAM,QAAA,GAC3B,MAAA;AAGH,UAAI,WAAW,SAAS,KAAK,CAAC,CAAC,WAAW,CAAA,EAAG,KAAA,GAAQ;AAClD,oBAAY,OAAO,gBAAgB,WAAW,CAAA,CAAA;MAAA;AAGjD,aAAO;IAAA,CAAA;AAGV,WAAO;MACJ,KAAAA;MACA,QAASA,KAAI,UAAUA,KAAI,CAAA,KAAO;MAClC,OAAOA,KAAI;IAAA;EAAA;AAAA;AApDpB,IAKa;AALb,IAOa;AAPb,IASa;AATb,IAWM;AAXN,IAAA,8BAAA0wB,OAAA;EAAA,8CAAA;AACA,eAAA;AACA,4BAAA;AACA,oBAAA;AAEa,qBAAiB;AAEjB,sBAAkB;AAElB,eAAW;AAElB,wBAAoB,CAAC,QAAQ,QAAQ,WAAW,QAAQ,eAAe,cAAA;EAAA;AAAA,CAAA;ACX7E,IAAA,eAAA,CAAA;AAAAx8B,UAAA,cAAA;EAAA,iBAAA,MAAA;EAAA,yBAAA,MAAA;AAAA,CAAA;AAMO,SAAA,gBAAyB,YAA0D;AACvF,MAAI,YAAY,qBAAqB,UAAA;AAErC,QAAM,WAAW,CAAC,MAAA;AAElB,MAAI,cAAc,IAAgB;AAC/B,gBAAY;AACZ,aAAS,KAAK,aAAA;EAAA;AAGjB,WAAS,KAAK,GAAG,UAAA;AAEjB,SACG,wBAAwB,QAAA,KAAa;IAClC;IACA,QAAQ;IACR,QAAQ,cAAc,SAAA;EAAA;AAAA;AAKxB,SAAA,wBAAiC,YAAyC;AAC9E,QAAM,QAAQ,WAAW,OAAO,WAAA;AAEhC,MAAI,MAAM,SAAS,GAAG;AACnB,WAAO,uBACJ,sDAAsD,MAAM,KAAK,GAAA,CAAA,EAAA;EAAA;AAIvE,MAAI,MAAM,UAAU,WAAW,SAAS,IAAA,GAAO;AAC5C,WAAO,uBACJ,gBAAgB,KAAA,8DAAA;EAAA;AAAA;AAtCzB,IAAA,YAAAw8B,OAAA;EAAA,0BAAA;AAEA,oBAAA;AACA,4BAAA;AACA,cAAA;EAAA;AAAA,CAAA;ACgEA,SAAA,aACG,QACA,UACmB;AACnB,QAAM,SAAmB,CAAA;AACzB,QAAM,YAAsB,CAAA;AAE5B,SAAO,KAAK,MAAA,EAAQ,QAAQ,CAAC,UAAU;AACpC,WAAO,KAAK,KAAA;AACZ,cAAU,KAAK,OAAO,OAAO,KAAA,CAAA,CAAA;EAAA,CAAA;AAGhC,SAAO,CAAC,QAAQ,UAAU,KAAK,QAAA,CAAA;AAAA;AAGlC,SAAA,YAAwCj6B,QAAmB;AACxD,SAAO,OAAO,KAAKA,MAAA,EAAO,OAAO,CAAC,KAAK,QAAQ;AAC5C,QAAI,EAAE,OAAO,iBAAiB;AAC3B,UAAI,GAAA,IAAOA,OAAM,GAAA;IAAA;AAEpB,WAAO;EAAA,GACP,CAAA,CAAA;AAAA;AAGC,SAAA,gBACJ,MAA+B,CAAA,GAC/B,aAAuB,CAAA,GACN;AACjB,QAAM,WAAW,WAAW,IAAI,UAAU,cAAc,QAAA;AACxD,QAAM,SACH,CAAC,iBAAiB,IAAI,MAAA,KAAW,IAAI,SAChC,IAAI,SACJ;IACG,MAAM;IACN,MAAM,IAAI,eAAe,QAAQ,QAAQ;IACzC,SAAS;IACT,MAAM;IACN,MAAM,IAAI,YAAY,OAAO;IAC7B,aAAa,IAAI,YAAY,QAAQ,QAAQ;IAC7C,cAAc,IAAI,YAAY,QAAQ,QAAQ;EAAA;AAGzD,QAAM,CAAC,QAAQ,SAAA,IAAa,aAAa,QAAQ,QAAA;AAEjD,QAAM,SAAmB,CAAA;AACzB,QAAM,UAAoB;IACvB,mBAAmB,cAAA,GAAiB,SAAA,GAAY,eAAA;IAChD,GAAG;EAAA;AAGN,QAAM,WAAgC,IAAY,KAAM,IAAY,WAAA,KAAgB,IAAI;AACxF,MAAI,UAAU;AACX,YAAQ,KAAK,eAAe,QAAA,EAAA;EAAA;AAG/B,MAAI,IAAI,QAAQ,IAAI,IAAI;AACrB,UAAM,gBAAgB,IAAI,cAAc,QAAQ,QAAQ;AACxD,WAAO,KAAK,GAAG,IAAI,QAAQ,EAAA,GAAK,aAAA,GAAgB,IAAI,MAAM,EAAA,EAAA;EAAA;AAG7D,MAAI,aAAa,IAAI,IAAA,GAAO;AACzB,YAAQ,KAAK,YAAY,SAAS,IAAI,IAAA,CAAA;EAAA;AAGzC,oBAAkB,YAAY,GAAA,GAAiB,OAAA;AAE/C,SAAO;IACJ;IACA;IACA,UAAU,CAAC,GAAG,SAAS,GAAG,MAAA;EAAA;AAAA;AAIzB,SAAA,QACJ,UACA,QACA,YACyB;AACzB,QAAM,UAAS,2BAA2B,UAAU,QAAQ,qBAAqB,UAAA,CAAA;AAEjF,SAAO;IACJ,UAAU,CAAC,OAAO,GAAG,UAAA;IACrB,QAAQ;IACR,QAAA;EAAA;AAAA;AAIS,SAAA,cAAoC;AAChD,SAAO;IACJ,OAA8C,MAAiB;AAC5D,YAAM8B,QAAO,yBAAyB,SAAA;AACtC,YAAM,UAAU,gBACb,wBAAwB,SAAA,GACxB,WAAW,UAAU,CAAA,GAAI,WAAA,CAAA;AAE5B,YAAM,OACH,2BAA2B,GAAG,IAAA,KAC9B,wBAAwB,QAAQ,QAAA,KAChC,cAAc,OAAA;AAEjB,aAAO,KAAK,SAAS,MAAMA,KAAA;IAAA;EAAA;AAIjC,WAAA,cAAuB,SAA2B;AAC/C,WAAO,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,QAAA;EAAA;AAG5D,WAAA,2BAAoC,MAAgB,IAAc;AAC/D,WACG,aAAa,IAAA,KACb,aAAa,EAAA,KACb,uBACG,uFAAA;EAAA;AAAA;AArLZ,IAuBK;AAvBL,IAAA,WAAAm4B,OAAA;EAAA,yBAAA;AAEA,oBAAA;AACA,kBAAA;AACA,gCAAA;AAMA,eAAA;AAUA,cAAA;AACA,cAAA;AAEK,qBAAL,kBAAK,oBAAL;AACG,sBAAA,gBAAA,UAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,WAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,UAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,GAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,MAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,QAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,MAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,IAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,UAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,WAAA,IAAA,CAAA,IAAA;AACA,sBAAA,gBAAA,SAAA,IAAA,EAAA,IAAA;AACA,sBAAA,gBAAA,WAAA,IAAA,EAAA,IAAA;AACA,sBAAA,gBAAA,YAAA,IAAA,EAAA,IAAA;AAbE,aAAA;IAAA,GAAA,kBAAA,CAAA,CAAA;EAAA;AAAA,CAAA;ACvBL,IAOO;AAPP,IAmBO;AAnBP,IAAA,oBAAAA,OAAA;EAAA,sCAAA;AAOO,2BAAA,MAAoD;MACxD,YACmB,QACA,OAAsB,MACtB,MACjB;AAHiB,aAAA,SAAA;AACA,aAAA,OAAA;AACA,aAAA,OAAA;MAAA;MAGnB,WAAW;AACR,eAAO,GAAG,KAAK,IAAA,IAAQ,KAAK,MAAA;MAAA;IAAA;AAI3B,yBAAA,MAAgD;MAAhD,cAnBP;AAoBU,aAAA,YAA6B,CAAA;AAC7B,aAAA,SAAmB,CAAA;AACnB,aAAA,SAA4B;MAAA;MAAA,IAE/B,SAAS;AACV,eAAO,KAAK,UAAU,SAAS;MAAA;MAAA,IAG9B,SAAS;AACV,eAAO,KAAK;MAAA;MAGf,WAAW;AACR,YAAI,KAAK,UAAU,QAAQ;AACxB,iBAAO,cAAc,KAAK,UAAU,KAAK,IAAA,CAAA;QAAA;AAG5C,eAAO;MAAA;IAAA;EAAA;AAAA,CAAA;ACrCb,IAOO;AAPP,IAuBO;AAvBP,IAAA,mBAAAA,OAAA;EAAA,qCAAA;AAOO,kBAAA,MAAwC;MAAxC,cAPP;AAQU,aAAA,iBAAiB;UACrB,KAAK,CAAA;QAAA;AAED,aAAA,UAAU,CAAA;AACV,aAAA,UAAoB,CAAA;AACpB,aAAA,QAAkB,CAAA;AAClB,aAAA,YAAmC,CAAA;AACnC,aAAA,aAAoC,CAAA;AACpC,aAAA,UAA6B;UACjC,SAAS;UACT,WAAW;UACX,YAAY;QAAA;MAAA;IAAA;AAIX,wBAAA,MAAoD;MAApD,cAvBP;AAwBG,aAAA,SAAS;AACT,aAAA,OAAO;UACJ,OAAO;UACP,QAAQ;QAAA;AAEX,aAAA,SAAS;UACN,OAAO;UACP,QAAQ;QAAA;AAEX,aAAA,UAAU;MAAA;MAEV,WAAW;AACR,eAAO,KAAK;MAAA;IAAA;EAAA;AAAA,CAAA;AC7BlB,SAAA,wBACG,gBACgC;AAChC,SAAQ,eAAe,UAAU,eAAe,WAAW;IACxD,aAAa;IACb,UAAU;IACV,aAAa;IACb,YAAY;IACZ,QAAQ,EAAE,OAAO,GAAG,OAAO,EAAA;IAC3B,OAAO,EAAE,OAAO,GAAG,OAAO,EAAA;EAAA;AAAA;AAIhC,SAAA,cAAuB,QAAgB;AACpC,QAAM92B,SAAQ,YAAY,KAAK,MAAA;AAC/B,QAAM,QAAQ,eAAe,KAAK,MAAA;AAElC,SAAO;IACJ,OAAO,SAAUA,UAASA,OAAM,CAAA,KAAO,GAAA;IACvC,OAAO,SAAU,SAAS,MAAM,CAAA,KAAO,GAAA;EAAA;AAAA;AA1B7C,IA8Ba;AA9Bb,IAAA,4BAAA82B,OAAA;EAAA,4CAAA;AAKA,eAAA;AAyBa,kCACV;MACG,IAAI,iBACD,kEACA,CAAC,QAAQ,CAAC,QAAQ92B,MAAA,MAAW;AAC1B,cAAM,MAAM,OAAO,YAAA;AACnB,cAAM,cAAc,wBAAwB,OAAO,cAAA;AAEnD,eAAO,OAAO,aAAa,EAAA,CAAG,GAAA,GAAM,SAASA,MAAA,EAAA,CAAA;MAAA,CAAA;MAGnD,IAAI,iBACD,gFACA,CAAC,QAAQ,CAAC,QAAQA,MAAA,MAAW;AAC1B,cAAM,MAAM,OAAO,YAAA;AACnB,cAAM,cAAc,wBAAwB,OAAO,cAAA;AAEnD,eAAO,OAAO,aAAa,EAAA,CAAG,GAAA,GAAM,SAASA,MAAA,EAAA,CAAA;MAAA,CAAA;MAGnD,IAAI,iBACD,qDACA,CAAC,QAAQ,CAAC,OAAO,QAAQ,UAAA,MAAgB;AACtC,cAAM,UAAU,wBAAwB,OAAO,cAAA;AAC/C,gBAAQ,QAAQ,cAAc,KAAA;AAC9B,gBAAQ,SAAS,cAAc,MAAA;AAC/B,gBAAQ,aAAa,SAAS,UAAA;MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;AC3BnC,SAAA,oBACJ,SACA,QACoB;AACpB,SAAO,oBAAoB,EAAE,gBAAgB,IAAI,qBAAA,EAAA,GAA+B,UAAS,MAAA;AAAA;AAjC5F,IAIM;AAJN,IAoCO;AApCP,IAAA,6BAAA82B,OAAA;EAAA,6CAAA;AACA,eAAA;AACA,8BAAA;AAEM,eACH;MACG,IAAI,iBAAiB,oBAAoB,CAAC,QAAQ,CAAC,IAAA,MAAU;AAC1D,eAAO,eAAe,IAAI,KAAK,KAAK,KAAA,CAAA;AACpC,eAAO;MAAA,CAAA;MAEV,GAAG;MACH,IAAI,iBACD,CAAC,oCAAoC,qBAAA,GACrC,CAAC,QAAQ,CAAC,cAAA,MAAoB;AAC1B,eAAO,eAA4C,iBAAiB;MAAA,CAAA;MAG3E,IAAI,iBACD,CAAC,6CAA6C,qBAAA,GAC9C,CAAC,QAAQ,CAAC92B,QAAOif,UAAS,GAAA,MAAS;AAC/B,eAAO,eAA4C,kBAAkB;UACnE,OAAO,SAASjf,MAAA;UAChB,SAAAif;UACA;QAAA;MAAA,CAAA;IAAA;AAaR,2BAAA,MAAqD;MAArD,cApCP;AAqCmB,aAAA,MAAgB,CAAA;MAAA;IAAA;EAAA;AAAA,CAAA;AC0B5B,SAAA,qBAA8B,QAAgB,QAAgB;AAClE,QAAM,YAAY,oBAAoB,IAAI,kBAAA,GAAqB,cAAc,CAAC,QAAQ,MAAA,CAAA;AAEtF,SAAO,UAAU,WAAW;AAAA;AAlE/B,IAMM;AANN,IAOM;AAPN,IAQM;AARN,IAUM;AAVN,IAqCM;AArCN,IAmDa;AAnDb,IAuDa;AAvDb,IAAA,kBAAA6X,OAAA;EAAA,kCAAA;AACA,qBAAA;AAEA,eAAA;AACA,+BAAA;AAEM,wBAAoB;AACpB,oBAAgB;AAChB,mBAAe;AAEf,eAAoC;MACvC,IAAI,WAAW,mBAAmB,CAAC,QAAQ,CAAC,MAAM,YAAY,SAAA,MAAe;AAC1E,eAAO,MAAM,KAAK,IAAA;AAElB,YAAI,YAAY;AACb,iBAAO,WAAW,IAAA,IAAQ,WAAW;QAAA;AAGxC,YAAI,WAAW;AACZ,iBAAO,UAAU,IAAA,IAAQ,UAAU;QAAA;MAAA,CAAA;MAGzC,IAAI,WAAW,eAAe,CAAC,QAAQ,CAAC9J,UAAS,EAAE,YAAY,EAAE,SAAA,MAAe;AAC7E,YAAI,eAAe,UAAa,cAAc,QAAW;AACtD,iBAAO,QAAQ,UAAU,CAACA,YAAW;AACrC,iBAAO,QAAQ,aAAa,CAAC,cAAc;AAC3C,iBAAO,QAAQ,YAAY,CAAC,aAAa;AACzC,iBAAO;QAAA;AAEV,eAAO;MAAA,CAAA;MAEV,IAAI,WAAW,cAAc,CAAC,QAAQ,CAAC,QAAQ,IAAA,MAAU;AACtD,QAAA/pB,QAAO,OAAO,OAAO,IAAA;AACrB,QAAAA,QAAO,WAAW,WAAW,OAAO,UAAU,OAAO,SAAS,IAAA;MAAA,CAAA;IAAA;AAI9D,mBAA+C;MAClD,IAAI,WAAW,iBAAiB,CAAC,QAAQ,CAAC,MAAA,MAAY,MAAM,OAAO,SAAS,OAAA;MAC5E,IAAI,WAAW,kBAAkB,CAAC,QAAQ,CAAC,OAAA,MAAa,MAAM,OAAO,UAAU,QAAA;MAC/E,IAAI,WACD,oDACA,CAAC,QAAQ,CAAC,WAAW,YAAY,aAAa,YAAA,MAAkB;AAC7D,eAAO,OAAO,QAAQ;AACtB,eAAO,KAAK,QAAQ;AACpB,eAAO,OAAO,SAAS;AACvB,eAAO,KAAK,SAAS;MAAA,CAAA;IAAA;AAKjB,sBAAkD,CAAC,QAAQ,WAAW;AAChF,aAAO,oBAAoB,IAAI,YAAA,GAAe,UAAS,CAAC,QAAQ,MAAA,CAAA;IAAA;AAGtD,sBAAkD,CAAC,QAAQ,WAAW;AAChF,aAAO,OAAO,OACX,IAAI,YAAA,GACJ,gBAAgB,QAAQ,MAAA,GACxB,oBAAoC,QAAQ,MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;AC3DlD,IAMM;AANN,IA8Ba;AA9Bb,IAsCa;AAtCb,IAAA,mBAAA6zB,OAAA;EAAA,mCAAA;AACA,sBAAA;AAEA,eAAA;AACA,oBAAA;AAEM,eAAqC;MACxC,IAAI,WAAW,yBAAyB,CAAC7X,UAAS,CAAC,SAAA,MAAe;AAC/D,QAAAA,SAAQ,OAAO,KAAK,SAAA;MAAA,CAAA;MAEvB,IAAI,WAAW,iDAAiD,CAACA,UAAS,CAAC,QAAQ,IAAA,MAAU;AAC1F,QAAAA,SAAQ,UAAU,KAAK,IAAI,qBAAqB,QAAQ,IAAA,CAAA;MAAA,CAAA;MAE3D,IAAI,WACD,0DACA,CAACA,UAAS,CAAC,QAAQ,MAAM,SAAA,MAAe;AACrC,QAAAA,SAAQ,UAAU,KAAK,IAAI,qBAAqB,QAAQ,MAAM,EAAE,UAAA,CAAA,CAAA;MAAA,CAAA;MAGtE,IAAI,WAAW,yBAAyB,CAACA,UAAS,CAAC,MAAA,MAAY;AAC5D,QAAAA,SAAQ,UAAU,KAAK,IAAI,qBAAqB,QAAQ,IAAA,CAAA;MAAA,CAAA;MAE3D,IAAI,WAAW,oCAAoC,CAACA,UAAS,CAAC,MAAA,MAAY;AACvE,QAAAA,SAAQ,SAAS;MAAA,CAAA;IAAA;AAOV,uBAAoD,CAAC,QAAQ,WAAW;AAClF,aAAO,OAAO,OAAO,iBAAiB,QAAQ,MAAA,GAAS,gBAAgB,QAAQ,MAAA,CAAA;IAAA;AAOrE,uBAAoD,CAAC,WAAW;AAC1E,aAAO,oBAAoB,IAAI,mBAAA,GAAsB,UAAS,MAAA;IAAA;EAAA;AAAA,CAAA;ACjC1D,SAAA,UAAmB,YAA2D;AAClF,MAAI,CAAC,WAAW,QAAQ;AACrB,WAAO,uBAAuB,wCAAA;EAAA;AAGjC,SAAO;IACJ,UAAU,CAAC,SAAS,GAAG,UAAA;IACvB,QAAQ;IACR,OAAO,QAAQ,QAAqB;AACjC,YAAMrd,UAAQ,iBAAiB,QAAQ,MAAA;AACvC,UAAIA,QAAM,QAAQ;AACf,cAAM,IAAI,iBAAiBA,OAAA;MAAA;AAG9B,aAAOA;IAAA;EAAA;AAAA;AApBhB,IAAA,aAAAk1B,OAAA;EAAA,2BAAA;AACA,4BAAA;AACA,qBAAA;AAEA,cAAA;EAAA;AAAA,CAAA;ACMA,SAAA,qBAA8B,OAAe,QAAgBp8B,SAAsC;AAChG,QAAM,UAAUA,QAAO,SAAS,SAAA;AAChC,QAAM,MAAMA,QAAO,SAAS,KAAA,KAAU,cAAc,KAAK,KAAA;AACzD,QAAM,iBAAiB,CAACA,QAAO,SAAS,KAAA;AAExC,SAAO;IACJ;IACA;IACA,QAAQ,CAAC;IACT,KAAK,CAAC;IACN;IACA;IACA;EAAA;AAAA;AAtBN,IA0BM;AA1BN,IAmEa;AAnEb,IA6Ea;AA7Eb,IAAA,kBAAAo8B,OAAA;EAAA,kCAAA;AAOA,eAAA;AACA,+BAAA;AAkBM,eAAoC;MACvC,IAAI,WAAW,qBAAqB,CAAC,QAAQ,CAAC,IAAA,MAAU;AACrD,eAAO,OAAO;MAAA,CAAA;MAEjB,IAAI,WAAW,uCAAuC,CAAC,QAAQ,CAAC,KAAA,MAAW;AACxE,eAAO,MAAM,cAAA,eAAA,CAAA,GACN,OAAO,OAAO,CAAA,CAAA,GADR;UAEV;QAAA,CAAA;MAAA,CAAA;MAGN,IAAI,WAAW,qCAAqC,CAAC,QAAQ,CAAC,OAAO,QAAQ,IAAA,MAAU;AACpF,eAAO,OAAO,KAAK,qBAAqB,OAAO,QAAQ,IAAA,CAAA;MAAA,CAAA;MAE1D,IAAI,WACD,4EACA,CAAC,QAAQ,CAAC,OAAO,QAAQ,UAAA,MAAgB;AACtC,eAAO,SAAS,cAAA,eAAA,CAAA,GACT,OAAO,UAAU,CAAA,CAAA,GADR;UAEb;UACA;UACA;QAAA,CAAA;MAAA,CAAA;MAIT,IAAI,WACD,gDACA,CAAC,QAAQ,CAAC,OAAO,QAAQ,MAAM,EAAA,MAAQ;AACpC,eAAO,SAAS;UACb,MAAM;YACH;YACA;UAAA;UAEH,MAAM;YACH;YACA;UAAA;QAAA;MAAA,CAAA;IAAA;AAOF,sBAAkD,CAAC,QAAQ,WAAW;AAChF,YAAM,aAAa,gBAAgB,QAAQ,MAAA;AAC3C,YAAM,iBAAiB,oBAA8C,QAAQ,MAAA;AAE7E,aAAO,eAAA,eAAA,CAAA,GACD,UAAA,GACA,cAAA;IAAA;AAII,sBAAkD,CAAC,QAAQ,WAAW;AAChF,aAAO,oBAAoB,EAAE,QAAQ,CAAA,EAAA,GAAM,UAAS,CAAC,QAAQ,MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;AC9EhE,IAAA,eAAA,CAAA;AAAAx8B,UAAA,cAAA;EAAA,cAAA,MAAA;EAAA,UAAA,MAAA;AAAA,CAAA;AAOO,SAAA,aAAsB,MAAe,CAAA,GAAI,YAA8C;AAC3F,EAAA2I,QAAO,YAAY,QAAA;AACnB,SAAO,SAAS,KAAK,UAAA;AAAA;AAGjB,SAAA,SAAkB,MAAe,CAAA,GAAI,YAA8C;AACvF,QAAM,WAAW,CAAC,QAAQ,GAAG,UAAA;AAC7B,MAAI,IAAI,QAAQ;AACb,aAAS,OAAO,GAAG,GAAG,IAAI,MAAA;EAAA;AAE7B,MAAI,IAAI,QAAQ;AACb,aAAS,OAAO,GAAG,GAAG,IAAI,MAAA;EAAA;AAG7B,EAAAmC,SAAO,UAAU,IAAA;AACjB,EAAAnC,QAAO,UAAU,WAAA;AACjB,EAAAA,QAAO,UAAU,aAAA;AAEjB,SAAO;IACJ;IACA,QAAQ;IACR,QAAA;EAAA;AAAA;AA5BN,IAAA,YAAA6zB,OAAA;EAAA,0BAAA;AACA,oBAAA;AAEA,eAAA;EAAA;AAAA,CAAA;ACEe,SAAA,eAAoD;AAChE,SAAO;IACJ,aAA+B;AAC5B,YAAM,WAAW,CAAC,QAAQ,GAAG,mBAAmB,WAAW,CAAA,CAAA;AAC3D,UAAI,CAAC,SAAS,SAAS,UAAA,GAAa;AACjC,iBAAS,OAAO,GAAG,GAAG,UAAA;MAAA;AAGzB,aAAO,KAAK,SACT,0BAA0B,QAAA,GAC1B,yBAAyB,SAAA,CAAA;IAAA;IAI/B,OAAyB;AACtB,YAAM,WAAW,CAAC,QAAQ,GAAG,mBAAmB,WAAW,CAAA,CAAA;AAC3D,aAAO,KAAK,SACT,0BAA0B,QAAA,GAC1B,yBAAyB,SAAA,CAAA;IAAA;EAAA;AAAA;AAvBrC,IAAA,YAAAA,OAAA;EAAA,0BAAA;AAEA,eAAA;AACA,cAAA;EAAA;AAAA,CAAA;ACHA,IAEa;AAFb,IAIO;AAJP,IAAA,yBAAAA,OAAA;EAAA,2CAAA;AAEa,oBAAgB;AAEtB,wBAAA,MAAoD;MAGxD,YACU,MACA,OACA,aACR;AAHQ,aAAA,OAAA;AACA,aAAA,QAAA;AACA,aAAA,cAAA;AAEP,YAAY,QAAQ,gBAAhB,KAA6B;AAC9B,gBAAM,SAAS,cAAc,KAAK,IAAA,KAAS,CAAC,MAAM,MAAM,IAAA;AACxD,eAAK,OAAO,OAAO,CAAA,KAAM;AACzB,eAAK,OAAO,OAAO,CAAA,KAAM;QAAA;MAAA;IAAA;EAAA;AAAA,CAAA;ACwBlC,SAAA,YAAqB,MAAc;AAChC,QAAM,CAAC,IAAI,IAAA,IAAQ,KAAK,MAAM,IAAA;AAE9B,SAAO;IACJ,MAAM,QAAQ;IACd;EAAA;AAAA;AAIN,SAAA,QACG,QACA,QACAn7B,UAC2B;AAC3B,SAAO,CAAC,GAAG,MAAA,GAAS,MAAA,IAAUA,QAAA;AAAA;AAGjC,SAAA,UAAmB,WAAgC,QAA+B;AAC/E,SAAO,OAAO,IAAI,CAAC,MAAM,QAAO,QAAQ,GAAG,CAAC,QAAQ,SAASsH,QAAO,OAAO,YAAY,IAAA,CAAA,CAAA;AAAA;AA6H1F,SAAA,UAAmB,QAAsB,SAAiB;AACvD,QAAM,WAAU,QAAQ,KAAA;AACxB,UAAQ,KAAA;IAAA,KACA,SAAQ,OAAO,CAAA;AACjB,aAAO,KAAK,SAAQ,OAAO,CAAA,GAAI,SAAQ,OAAO,CAAA,GAAI,SAAQ,OAAO,CAAA,CAAA;IAAA,KAC/D,SAAQ,OAAO,CAAA;AACjB,aAAO,KAAK,KAA0B,SAAQ,OAAO,CAAA,GAAI,SAAQ,OAAO,CAAA,CAAA;IAAA;AAExE;EAAA;AAGN,WAAA,KAAc,OAAe,YAAoB,MAAc;AAC5D,UAAM,MAAM,GAAG,KAAA,GAAQ,UAAA;AACvB,UAAMtH,WAAU,SAAQ,IAAI,GAAA;AAE5B,QAAIA,UAAS;AACV,MAAAA,SAAQ,QAAQ,IAAA;IAAA;AAGnB,QAAI,QAAQ,QAAQ,QAAQ,MAAM;AAC/B,aAAO,MAAM,KAAK,IAAI,kBAAkB,KAAK,QAAQ,SAAS,EAAA,GAAK,OAAO,UAAA,CAAA;IAAA;EAAA;AAAA;AA1MnF,IAMO;AANP,IA4DM;AA5DN,IAiKa;AAjKb,IAAA,qBAAAm7B,OAAA;EAAA,uCAAA;AACA,eAAA;AACA,2BAAA;AAIO,oBAAA,MAA4C;MAA5C,cANP;AAOU,aAAA,YAAY,CAAA;AACZ,aAAA,aAAa,CAAA;AACb,aAAA,UAAU,CAAA;AACV,aAAA,UAAU,CAAA;AACV,aAAA,UAAU;AACV,aAAA,WAAW,CAAA;AACX,aAAA,UAAU,CAAA;AACV,aAAA,QAAQ,CAAA;AACR,aAAA,SAAS,CAAA;AACT,aAAA,QAAQ;AACR,aAAA,SAAS;AACT,aAAA,UAAU;AACV,aAAA,WAAW;AACX,aAAA,WAAW;AAEX,aAAA,UAAU,MAAM;AACpB,iBAAO,CAAC,KAAK,MAAM;QAAA;MAAA;IAAA;AAqCnB,eAAyC,IAAI,IAAI;MACpD,QAAO,KAA0B,KAA2B,CAAC,QAAQ,SAClE7zB,QAAO,OAAO,SAAS,IAAA,CAAA;MAE1B,QAAO,KAA0B,KAA6B,CAAC,QAAQ,SACpEA,QAAO,OAAO,SAAS,IAAA,CAAA;MAE1B,QAAO,KAA0B,KAA8B,CAAC,QAAQ,SACrEA,QAAO,OAAO,UAAU,IAAA,CAAA;MAG3B,QACG,KACA,KACA,CAAC,QAAQ,SAASA,QAAO,OAAO,SAAS,IAAA,KAASA,QAAO,OAAO,QAAQ,IAAA,CAAA;MAE3E,QACG,KACA,KACA,CAAC,QAAQ,SACNA,QAAO,OAAO,SAAS,IAAA,KACvBA,QAAO,OAAO,QAAQ,IAAA,KACtBA,QAAO,OAAO,UAAU,IAAA,CAAA;MAG9B,QACG,KACA,KACA,CAAC,QAAQ,SAASA,QAAO,OAAO,SAAS,IAAA,KAASA,QAAO,OAAO,QAAQ,IAAA,CAAA;MAG3E,QACG,KACA,KACA,CAAC,QAAQ,SAASA,QAAO,OAAO,UAAU,IAAA,KAASA,QAAO,OAAO,QAAQ,IAAA,CAAA;MAE5E,QACG,KACA,KACA,CAAC,QAAQ,SAASA,QAAO,OAAO,UAAU,IAAA,KAASA,QAAO,OAAO,QAAQ,IAAA,CAAA;MAG5E,QAAO,KAA6B,KAA0B,CAAC,QAAQ,SAAS;AAC7E,QAAAA,QAAO,OAAO,SAAS,YAAY,IAAA,CAAA;MAAA,CAAA;MAEtC,QAAO,KAA6B,KAA8B,CAAC,QAAQ,SAAS;AACjF,cAAM,UAAU,YAAY,IAAA;AAC5B,QAAAA,QAAO,OAAO,SAAS,OAAA;AACvB,QAAAA,QAAO,OAAO,UAAU,QAAQ,EAAA;MAAA,CAAA;MAEnC,QAAO,KAA6B,KAA6B,CAAC,SAAS,UAAU;AAClF,QAAAA,QAAQ,QAAQ,UAAU,QAAQ,WAAW,CAAA,GAAK,KAAA;MAAA,CAAA;MAGrD,QAAO,KAA+B,KAA+B,CAAC,QAAQ,SAC3EA,QAAO,OAAO,WAAW,IAAA,CAAA;MAG5B,GAAG;QAAU;QAA2B;QAA2B;;MAAA;MACnE,GAAG;QACA;QACA;QACA;;MAAA;MAEH,GAAG;QACA;QACA;QACA;QACA;;MAAA;MAGH;QACG;QACA,CAAC,QAAQ,SAAS;AACf,gBAAM,WAAW;AACjB,gBAAM,YAAY;AAClB,gBAAM,aAAa;AACnB,gBAAM,cAAc;AACpB,gBAAM,mBAAmB;AACzB,cAAI;AAEJ,wBAAc,SAAS,KAAK,IAAA;AAC5B,iBAAO,QAAS,eAAe,CAAC,YAAY,CAAA,KAAO;AAEnD,wBAAc,UAAU,KAAK,IAAA;AAC7B,iBAAO,SAAU,eAAe,CAAC,YAAY,CAAA,KAAO;AAEpD,wBAAc,WAAW,KAAK,IAAA;AAC9B,iBAAO,UAAU,eAAe,YAAY,CAAA;AAE5C,wBAAc,YAAY,KAAK,IAAA;AAC/B,iBAAO,WAAW,eAAe,YAAY,CAAA;AAE7C,wBAAc,iBAAiB,KAAK,IAAA;AACpC,iBAAO,UAAW,eAAe,YAAY,CAAA,KAAO,OAAO;AAE3D,iBAAO,WAAW,gBAAgB,KAAK,IAAA;QAAA;MAAA;IAAA,CAAA;AAKnC,yBAAqB,SAAU,MAA4B;AACrE,YAAM,QAAQ,KAAK,MAAM,IAAA;AACzB,YAAMvI,UAAS,IAAI,cAAA;AAEnB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,KAAK;AACxC,YAAI,OAAO,MAAM,GAAA,EAAK,KAAA;AAEtB,YAAI,CAAC,MAAM;AACR;QAAA;AAGH,YAAI,KAAK,OAAO,CAAA,MAAO,KAA6B;AACjD,kBAAQ,QAAQ,MAAM,GAAA,KAAQ;QAAA;AAGjC,kBAAUA,SAAQ,IAAA;MAAA;AAGrB,aAAOA;IAAA;EAAA;AAAA,CAAA;AC7KH,SAAA,WAAoB,YAAgD;AACxE,QAAM,WAAW;IACd;IACA;IACA;IACA;IACA;IACA,GAAG,WAAW,OAAO,CAAC,QAAQ,CAAC,eAAe,SAAS,GAAA,CAAA;EAAA;AAG1D,SAAO;IACJ,QAAQ;IACR;IACA,OAAO,MAAc;AAClB,aAAO,mBAAmB,IAAA;IAAA;EAAA;AAAA;AApBnC,IAIM;AAJN,IAAA,cAAAo8B,OAAA;EAAA,4BAAA;AACA,uBAAA;AAGM,qBAAiB,CAAC,UAAU,IAAA;EAAA;AAAA,CAAA;ACUlC,SAAA,gBACG,QAAQ,GACR,QAAQ,GACRjsB,SAAyB,GACzB,QAAQ,IACR,YAAY,MACE;AACd,SAAO,OAAO,eACX;IACG;IACA;IACA,OAAAA;IACA;IACA;EAAA,GAEH,YACA;IACG,QAAQ;AACL,aAAO,GAAG,KAAK,KAAA,IAAS,KAAK,KAAA,IAAS,KAAK,KAAA;IAAA;IAE9C,cAAc;IACd,YAAY;EAAA,CAAA;AAAA;AAKrB,SAAA,uBAAgC;AAC7B,SAAO,gBAAgB,GAAG,GAAG,GAAG,IAAI,KAAA;AAAA;AAGxB,SAAA,kBAAwC;AACpD,SAAO;IACJ,UAA4B;AACzB,aAAO,KAAK,SAAS;QAClB,UAAU,CAAC,WAAA;QACX,QAAQ;QACR,QAAQ;QACR,QAAQ,QAAQ,OAAOrQ,QAAMC,QAAM;AAChC,cAAI,OAAO,aAAa,IAAqB;AAC1C,mBAAOD,OAAK,OAAO,KAAK,aAAA,CAAA;UAAA;AAG3B,UAAAC,OAAK,KAAA;QAAA;MAAA,CAAA;IAAA;EAAA;AAAA;AAyBpB,SAAA,cAAuB,QAAgB;AACpC,MAAI,WAAW,eAAe;AAC3B,WAAO,qBAAA;EAAA;AAGV,SAAO,oBAAoB,gBAAgB,GAAG,GAAG,GAAG,MAAA,GAAS,UAAS,MAAA;AAAA;AAtFzE,IAYM;AAZN,IA+DM;AA/DN,IAAA,eAAAq8B,OAAA;EAAA,6BAAA;AAEA,eAAA;AAUM,oBAAgB;AAmDhB,eAAuC;MAC1C,IAAI,WACD,+CACA,CAAC,QAAQ,CAAC,OAAO,OAAOjsB,QAAO,QAAQ,EAAA,MAAQ;AAC5C,eAAO,OACJ,QACA,gBAAgB,SAAS,KAAA,GAAQ,SAAS,KAAA,GAAQ,SAASA,MAAA,GAAQ,KAAA,CAAA;MAAA,CAAA;MAI5E,IAAI,WACD,qCACA,CAAC,QAAQ,CAAC,OAAO,OAAOA,QAAO,QAAQ,EAAA,MAAQ;AAC5C,eAAO,OAAO,QAAQ,gBAAgB,SAAS,KAAA,GAAQ,SAAS,KAAA,GAAQA,QAAO,KAAA,CAAA;MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;AC5ExF,IAAA,yBAAA,CAAA;AAAAvQ,UAAA,wBAAA;EAAA,cAAA,MAAA;AAAA,CAAA;AAAA,IAyBO;AAzBP,IAAA,sBAAAw8B,OAAA;EAAA,8BAAA;AACA,uBAAA;AACA,kCAAA;AACA,kBAAA;AACA,gBAAA;AACA,gBAAA;AACA,cAAA;AACA,qBAAA;AACA,cAAA;AACA,aAAA;AACA,eAAA;AACA,cAAA;AACA,cAAA;AACA,gBAAA;AACA,cAAA;AACA,iBAAA;AAEA,eAAA;AAQO,mBAAA,MAA4C;MAChD,YAAoB,WAA8B;AAA9B,aAAA,YAAA;MAAA;MAEV,SAAY,MAAwB,MAAiC;AAC5E,cAAM,QAAQ,KAAK,UAAU,MAAA;AAC7B,cAAMn8B,WAAU,MAAM,KAAK,IAAA;AAE3B,YAAI,MAAM;AACP,uBAAa,MAAMA,UAAS,IAAA;QAAA;AAG/B,eAAO,OAAO,OAAO,MAAM;UACxB,MAAM,EAAE,OAAOA,SAAQ,KAAK,KAAKA,QAAA,EAAA;UACjC,OAAO,EAAE,OAAOA,SAAQ,MAAM,KAAKA,QAAA,EAAA;UACnC,WAAW,EAAE,OAAO,MAAA;QAAA,CAAA;MAAA;MAI1B,IAAI,OAA0B;AAC3B,eAAO,KAAK,SACT,0BAA0B,CAAC,OAAO,GAAG,QAAQ,KAAA,CAAA,CAAA,GAC7C,yBAAyB,SAAA,CAAA;MAAA;MAI/B,IAAI,WAAsD;AACvD,cAAMgE,QAAO,yBAAyB,SAAA;AAEtC,YAAI,OAAO,cAAc,UAAU;AAChC,iBAAO,KAAK,SAAS,2BAA2B,WAAW,KAAK,SAAA,GAAYA,KAAA;QAAA;AAG/E,YAAI,QAAO,aAAA,OAAA,SAAA,UAAW,UAAS,UAAU;AACtC,iBAAO,KAAK,SACT,2BACG,UAAU,MACT,UAAU,QAAQ,KAAK,aAAc,MAAA,GAEzCA,KAAA;QAAA;AAIN,eAAO,KAAK,SACT,uBAAuB,wDAAA,GACvBA,KAAA;MAAA;MAIN,WAAW,MAAcJ,QAA0B;AAChD,eAAO,KAAK,SACT,eAAe,MAAMA,WAAU,IAAA,GAC/B,yBAAyB,SAAA,CAAA;MAAA;MAI/B,KAAK,MAA0B;AAC5B,eAAO,KAAK,SACT,SAAS,SAAS,MAAM,KAAK,UAAU,KAAK,mBAAmB,SAAA,CAAA,GAC/D,yBAAyB,SAAA,CAAA;MAAA;MAI/B,QAAQ;AACL,eAAO,KAAK,SACT,UAAU,mBAAmB,SAAA,CAAA,GAC7B,yBAAyB,SAAA,CAAA;MAAA;MAI/B,YAAY,QAAgB,QAAgB;AACzC,YAAI,EAAE,aAAa,MAAA,KAAW,aAAa,MAAA,IAAU;AAClD,iBAAO,KAAK,SACT,uBACG,2FAAA,CAAA;QAAA;AAKT,eAAO,KAAK,SACT,UAAU,CAAC,QAAQ,QAAQ,GAAG,mBAAmB,SAAA,CAAA,CAAA,GACjD,yBAAyB,WAAW,KAAA,CAAA;MAAA;MAI1C,cAAc5C,UAAwB;AACnC,aAAK,UAAU,gBAAgBA;AAC/B,eAAO;MAAA;MAGV,OAAO;AACJ,cAAM,OAAO,SACV;UACG,QAAQ,WAAW,UAAU,CAAA,GAAI,YAAA;UACjC,QAAQ,WAAW,UAAU,CAAA,GAAI,YAAA;QAAA,GAEpC,mBAAmB,SAAA,CAAA;AAGtB,eAAO,KAAK,SAAS,MAAM,yBAAyB,SAAA,CAAA;MAAA;MAGvD,QAAQ;AACL,eAAO,KAAK,SACT,0BAA0B,CAAC,SAAS,GAAG,mBAAmB,SAAA,CAAA,CAAA,GAC1D,yBAAyB,SAAA,CAAA;MAAA;MAI/B,SAAS;AACN,eAAO,KAAK,SACT,WAAW,mBAAmB,SAAA,CAAA,GAC9B,yBAAyB,SAAA,CAAA;MAAA;IAAA;AAKlC,WAAO,OACJ,aAAa,WACb,iBAAA,GACA,eAAA,GACA,eAAA,GACA,aAAA,GACA,YAAA,GACA,aAAA,GACA,gBAAA,CAAA;EAAA;AAAA,CAAA;ArDrJH,IAAA,oBAAA,CAAA;AAAArB,UAAA,mBAAA;EAAA,WAAA,MAAA;AAAA,CAAA;AAAA,IASM;AATN,IAuBO;AAvBP,IAAA,iBAAAw8B,OAAA;EAAA,iCAAA;AAAA,eAAA;AAEA,oBAAA;AAOM,2BAA4C,MAAM;AACrD,UAAI34B,MAAK;AACT,aAAO,MAAM;AACV,QAAAA;AACA,cAAM,EAAE,SAAAxD,UAAS,MAAAH,OAAA,QAAS,wCAAA;AAE1B,eAAO;UACJ,SAAAG;UACA,MAAAH;UACA,IAAA2D;QAAA;MAAA;IAAA,GAAA;AAKF,gBAAA,MAAgB;MAKpB,YAAoB,cAAc,GAAG;AAAjB,aAAA,cAAA;AAJZ,aAAA,SAAS,aAAa,IAAI,WAAA;AAC1B,aAAA,UAA2B,CAAA;AAC3B,aAAA,UAA2B,CAAA;AAGhC,aAAK,OAAO,+BAA+B,WAAA;MAAA;MAGtC,WAAW;AAChB,YAAI,CAAC,KAAK,QAAQ,UAAU,KAAK,QAAQ,UAAU,KAAK,aAAa;AAClE,eAAK,OACF,kEACA,KAAK,QAAQ,QACb,KAAK,QAAQ,QACb,KAAK,WAAA;AAER;QAAA;AAGH,cAAM,OAAO8E,QAAO,KAAK,SAAS,KAAK,QAAQ,MAAA,CAAA;AAC/C,aAAK,OAAO,oBAAoB,KAAK,EAAA;AACrC,aAAK,KAAK,MAAM;AACb,eAAK,OAAO,kBAAkB,KAAK,EAAA;AACnC,UAAAmC,SAAO,KAAK,SAAS,IAAA;AACrB,eAAK,SAAA;QAAA,CAAA;MAAA;MAIX,OAA0C;AACvC,cAAM,EAAE,SAAAzK,UAAS,IAAAwD,IAAA,IAAO8E,QAAO,KAAK,SAAS,oBAAA,CAAA;AAC7C,aAAK,OAAO,oBAAoB9E,GAAA;AAEhC,aAAK,SAAA;AAEL,eAAOxD;MAAA;IAAA;EAAA;AAAA,CAAA;AsD1Db,IAAA,sBAAA,CAAA;AAAAL,UAAA,qBAAA;EAAA,gBAAA,MAAA;AAAA,CAAA;AAgCO,SAAA,eAAwB,SAAmB,YAA0C;AACzF,SAAO,0BAA0B,CAAC,SAAS,GAAG,YAAY,GAAG,OAAA,CAAA;AAAA;AAjChE,IAAA,mBAAAw8B,OAAA;EAAA,iCAAA;AAAA,cAAA;EAAA;AAAA,CAAA;ACiBO,SAAA,sBAA+B,QAAgB/8B,OAAyC;AAC5F,SAAO;IACJ;IACA,MAAAA;IACA,SAAS;EAAA;AAAA;AAIR,SAAA,sBAA+B,QAA2C;AAC9E,SAAO;IACJ;IACA,MAAM;IACN,SAAS;EAAA;AAAA;AA7Bf,IAOO;AAPP,IAAA,2BAAA+8B,OAAA;EAAA,6CAAA;AAOO,0BAAA,MAA6D;MAA7D,cAPP;AAQG,aAAA,MAAkC,CAAA;AAClC,aAAA,WAA+D,CAAA;AAC/D,aAAA,SAAqC,CAAA;MAAA;MAAA,IAEjC,UAAmB;AACpB,eAAO,CAAC,KAAK,OAAO;MAAA;IAAA;EAAA;AAAA,CAAA;ACsBnB,SAAA,uBAAgC,MAAc,iBAAqC;AACvF,SAAO,oBAAoB,KAAmB,iBAAiB,KAAK,IAAA;AAAA;AApCvE,IASM;AATN,IAUM;AAVN,IAYM;AAZN,IA4Ba;AA5Bb,IAAA,2BAAAA,OAAA;EAAA,2CAAA;AACA,6BAAA;AAMA,eAAA;AAEM,yBAAqB;AACrB,uBAAmB;AAEnB,eAAiD;MACpD,IAAI,WAAW,oBAAoB,CAAC,QAAQ,CAAC,QAAQ/8B,KAAA,MAAU;AAC5D,cAAM,WAAW,sBAAsB,QAAQA,KAAA;AAE/C,eAAO,IAAI,KAAK,QAAA;AAChB,eAAO,SAAS,MAAA,IAAU;MAAA,CAAA;MAE7B,IAAI,WAAW,kBAAkB,CAAC,QAAQ,CAAC,MAAA,MAAY;AACpD,cAAM,WAAW,sBAAsB,MAAA;AAEvC,eAAO,OAAO,KAAK,QAAA;AACnB,eAAO,IAAI,KAAK,QAAA;AAChB,eAAO,SAAS,MAAA,IAAU;MAAA,CAAA;IAAA;AAInB,2BAAoE,CAC9E,QACA,WACE;AACF,aAAO,oBAAoB,IAAI,oBAAA,GAAuB,UAAS,CAAC,QAAQ,MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;AChC3E,IAOO;AAPP,IAAA,qBAAA+8B,OAAA;EAAA,uCAAA;AAOO,0BAAA,MAAmD;MAAnD,cAPP;AAQU,aAAA,MAAgB,CAAA;AAChB,aAAA,WAAiD,CAAA;AACjD,aAAA,UAAkB;AAClB,aAAA,WAAoB;MAAA;MAE3B,KACGp8B,SACA,UACA,MACA,QACA,OACD;AACC,YAAIA,YAAW,KAAgC;AAC5C,eAAK,WAAW;AAChB,eAAK,UAAU;QAAA;AAGlB,aAAK,IAAI,KAAK,IAAA;AACd,aAAK,SAAS,IAAA,IAAQ;UACnB,SAASA,YAAW;UACpB,gBAAgBA,YAAW;UAC3B;UACA;UACA;QAAA;MAAA;IAAA;EAAA;AAAA,CAAA;ACZT,SAAA,aAAsBmC,QAAgB;AACnC,SAAOA,SAAQA,OAAM,OAAO,CAAA,IAAK;AAAA;AAG7B,SAAA,mBAA4B,QAA+B;AAC/D,SAAO,oBAAoB,IAAI,oBAAA,GAAuB,UAAS,MAAA;AAAA;AAxBlE,IAIM;AAJN,IAAA,oBAAAi6B,OAAA;EAAA,oCAAA;AACA,uBAAA;AACA,eAAA;AAEM,eAA6C;MAChD,IAAI,WACD,2EACA,CAAC,QAAQ,CAAC/5B,UAAS,MAAM,QAAQ,KAAA,MAAW;AACzC,eAAO,KAAK,aAAaA,QAAA,GAAU,MAAM,MAAM,QAAQ,KAAA;MAAA,CAAA;MAG7D,IAAI,WACD,0CACA,CAAC,QAAQ,CAACA,UAAS,MAAM,QAAQ,KAAA,MAAW;AACzC,eAAO,KAAK,aAAaA,QAAA,GAAU,OAAO,MAAM,QAAQ,KAAA;MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;ACdjE,IAAA,iBAAA,CAAA;AAAAzC,UAAA,gBAAA;EAAA,iBAAA,MAAA;EAAA,YAAA,MAAA;EAAA,6BAAA,MAAA;EAAA,kBAAA,MAAA;EAAA,oBAAA,MAAA;AAAA,CAAA;AAOO,SAAA,4BAAqC,UAAoB;AAC7D,QAAM,iBAAiB,CAAC,MAAM,MAAM,UAAA;AACpC,SAAO,SAAS,KAAK,CAAC,YAAY,eAAe,SAAS,OAAA,CAAA;AAAA;AAGtD,SAAA,WACJ,YACqD;AACrD,QAAM,WAAW,4BAA4B,UAAA;AAC7C,QAAM,WAAW,CAAC,UAAU,GAAG,UAAA;AAE/B,MAAI,SAAS,WAAW,GAAG;AACxB,aAAS,KAAK,IAAA;EAAA;AAGjB,MAAI,CAAC,SAAS,SAAS,IAAA,GAAO;AAC3B,aAAS,OAAO,GAAG,GAAG,IAAA;EAAA;AAGzB,SAAO;IACJ,QAAQ;IACR;IACA,OAAO,QAAQ,QAAQ;AACpB,UAAI,UAAU;AACX,eAAO,qBAAqB,QAAQ,MAAA,EAAQ,IAAI,CAAA;MAAA;AAGnD,aAAO,mBAAmB,MAAA;IAAA;EAAA;AAAA;AAK5B,SAAA,kBAAsD;AAC1D,QAAM,UAAS;AAEf,SAAO;IACJ,QAAQ;IACR,UAAU,CAAC,UAAU,IAAA;IACrB,QAAA;EAAA;AAAA;AAIC,SAAA,mBACJ,UACA,cAAc,OACsB;AACpC,SAAO;IACJ,QAAQ;IACR,UAAU,CAAC,UAAU,MAAM,cAAc,OAAO,MAAM,GAAG,QAAA;IACzD,OAAO,QAAQ,QAAQ;AACpB,aAAO,qBAAqB,QAAQ,MAAA;IAAA;IAEvC,QAAQ,EAAE,UAAU,OAAA,GAAU,OAAOE,QAAMC,QAAM;AAC9C,UAAI,CAAC,uBAAuB,OAAO,KAAA,GAAQ,QAAA,GAAW;AACnD,eAAOA,OAAK,KAAA;MAAA;AAGf,MAAAD,OAAK,MAAA;IAAA;EAAA;AAAA;AAKP,SAAA,iBACJ,QACA,cAAc,OACuB;AACrC,QAAM,OAA6C;IAChD,QAAQ;IACR,UAAU,CAAC,UAAU,MAAM,cAAc,OAAO,MAAM,MAAA;IACtD,OAAO,QAAQ,QAAQ;AACpB,aAAO,qBAAqB,QAAQ,MAAA,EAAQ,SAAS,MAAA;IAAA;IAExD,QAAQ,EAAE,UAAU,QAAQ,OAAA,GAAU,OAAO,GAAGC,QAAM;AACnD,UAAI,CAAC,uBAAuB,OAAO,KAAA,GAAQ,QAAA,GAAW;AACnD,eAAOA,OAAK,KAAA;MAAA;AAGf,YAAM,IAAI,iBACP,KAAK,OAAO,eAAe,MAAA,GAAS,eAAe,MAAA,CAAA,GACnD,OAAO,KAAA,CAAA;IAAA;EAAA;AAKhB,SAAO;AAAA;AA3FV,IAAA,cAAAq8B,OAAA;EAAA,4BAAA;AAEA,4BAAA;AACA,6BAAA;AACA,sBAAA;AACA,eAAA;EAAA;AAAA,CAAA;ACLA,IAGa;AAHb,IAAA,mBAAAA,OAAA;EAAA,qCAAA;AAGa,uBAAmB,CAAC,SAA2B;AACzD,aAAO,KACH,MAAM,KAAA,EACN,IAAI,CAAC,SAAS,KAAK,KAAA,CAAA,EACnB,OAAO,CAAC,SAAS,CAAC,CAAC,IAAA;IAAA;EAAA;AAAA,CAAA;ACP1B,IAAA,uBAAA,CAAA;AAAAx8B,UAAA,sBAAA;EAAA,iBAAA,MAAA;AAAA,CAAA;AAGO,SAAA,gBAAyB,OAAuC;AACpE,SAAO;IACJ,UAAU,CAAC,gBAAgB,GAAG,KAAA;IAC9B,QAAQ;IACR,QAAQ;EAAA;AAAA;AAPd,IAAA,oBAAAw8B,OAAA;EAAA,kCAAA;AACA,qBAAA;EAAA;AAAA,CAAA;ACDA,IAAA,gBAAA,CAAA;AAAAx8B,UAAA,eAAA;EAAA,iBAAA,MAAA;EAAA,WAAA,MAAA;AAAA,CAAA;AA+BA,SAAA,kBAA2B,SAAiB;AACzC,SAAO,sBAAsB,KAAK,OAAA;AAAA;AAG9B,SAAA,UACJ,MACA,WACA,YAC+B;AAC/B,QAAM,WAAW,CAAC,SAAS,GAAG,UAAA;AAE9B,eAAa,IAAA,KAAS,SAAS,KAAK,IAAA;AACpC,eAAa,SAAA,KAAc,SAAS,KAAK,SAAA;AAEzC,QAAM,SAAS,SAAS,KAAK,iBAAA;AAC7B,MAAI,QAAQ;AACT,WAAO,uBAAuB,gDAAA;EAAA;AAGjC,SAAO,0BAA0B,QAAA;AAAA;AAG7B,SAAA,gBACJ,MACA,WACA,YACD;AACC,EAAA2I,QAAO,YAAY,UAAA;AAEnB,SAAO,UAAU,MAAM,WAAW,UAAA;AAAA;AA5DrC,IAAA,aAAA6zB,OAAA;EAAA,2BAAA;AAAA,cAAA;AAEA,eAAA;EAAA;AAAA,CAAA;ACmCO,SAAA,iBAA0B,QAAgB,QAA6B;AAC3E,QAAM,SAAsB;IACzB,KAAK;IACL,QAAQ;IACR,UAAU,CAAA;IACV,MAAM,CAAA;IACN,SAAS,CAAA;IACT,SAAS,CAAA;EAAA;AAEZ,SAAO,oBAAoB,QAAQ,WAAS,CAAC,QAAQ,MAAA,CAAA;AAAA;AA9CxD,IAGM;AAHN,IAAA,mBAAAA,OAAA;EAAA,mCAAA;AACA,eAAA;AAEM,gBAAqC;MACxC,IAAI,WAAW,cAAc,CAAC,QAAQ,CAAC,MAAA,MAAY;AAChD,eAAO,SAAS;MAAA,CAAA;MAEnB,IAAI,WAAW,uCAAuC,CAAC,QAAQ,CAAC,MAAM,QAAA,MAAc;AACjF,eAAO,SAAS,KAAK;UAClB;UACA;QAAA,CAAA;MAAA,CAAA;MAGN,IAAI,WAAW,oCAAoC,CAAC,QAAQ,CAAC,MAAM,QAAA,MAAc;AAC9E,eAAO,KAAK,KAAK;UACd;UACA;QAAA,CAAA;MAAA,CAAA;MAGN,IAAI,WAAW,iCAAiC,CAAC,QAAQ,CAAC,QAAA,MAAc;AACrE,eAAO,QAAQ,KAAK;UACjB;QAAA,CAAA;MAAA,CAAA;MAGN,IAAI,WACD,0CACA,CAAC,QAAQ,CAAC,MAAM,IAAI,MAAM,QAAA,MAAc;AACrC,eAAO,QAAQ,KAAK;UACjB;UACA;UACA;UACA;QAAA,CAAA;MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;AC/BZ,IAAA,gBAAA,CAAA;AAAAx8B,UAAA,eAAA;EAAA,WAAA,MAAA;AAAA,CAAA;AAMA,SAAA,mBAA2B,SAAiB;AACzC,SAAO,sBAAsB,KAAK,OAAA;AAAA;AAG9B,SAAA,UACJ,QACA,QACA,YACoC;AACpC,QAAM,WAAW,CAAC,SAAS,GAAG,UAAA;AAC9B,MAAI,UAAU,QAAQ;AACnB,aAAS,KAAK,QAAQ,MAAA;EAAA;AAGzB,QAAM,SAAS,SAAS,KAAK,kBAAA;AAC7B,MAAI,QAAQ;AACT,WAAO,uBAAuB,gDAAA;EAAA;AAGjC,SAAO;IACJ;IACA,QAAQ;IACR,QAAQ;EAAA;AAAA;AA5Bd,IAAA,aAAAw8B,OAAA;EAAA,2BAAA;AACA,qBAAA;AAGA,cAAA;EAAA;AAAA,CAAA;ACKO,SAAA,gBAAyB,QAA4B;AACzD,SAAO,oBAAoB,EAAE,OAAO,CAAA,EAAA,GAAM,WAAS,MAAA;AAAA;AAVtD,IAGM;AAHN,IAAA,kBAAAA,OAAA;EAAA,kCAAA;AACA,eAAA;AAEM,gBAAoC;MACvC,IAAI,WAAW,2BAA2B,CAAC,QAAQ,CAAC,MAAM,EAAA,MAAQ;AAC/D,eAAO,MAAM,KAAK,EAAE,MAAM,GAAA,CAAA;MAAA,CAAA;IAAA;EAAA;AAAA,CAAA;ACLhC,IAAA,eAAA,CAAA;AAAAx8B,UAAA,cAAA;EAAA,UAAA,MAAA;AAAA,CAAA;AAKO,SAAA,SAAkB,MAAyB,IAAoC;AACnF,SAAO;IACJ,UAAU,CAAC,MAAM,MAAM,GAAG,QAAQ,IAAA,GAAO,EAAA;IACzC,QAAQ;IACR,QAAQ;EAAA;AAAA;AATd,IAAA,YAAAw8B,OAAA;EAAA,0BAAA;AACA,oBAAA;AAEA,eAAA;EAAA;AAAA,CAAA;ACHA,IAAA,eAAA,CAAA;AAAAx8B,UAAA,cAAA;EAAA,UAAA,MAAA;AAAA,CAAA;AAMO,SAAA,SACJ,QACA,QACA,YACuB;AACvB,QAAM,WAAqB,CAAC,QAAQ,GAAG,UAAA;AACvC,MAAI,UAAU,QAAQ;AACnB,aAAS,OAAO,GAAG,GAAG,QAAQ,MAAA;EAAA;AAGjC,SAAO;IACJ;IACA,QAAQ;IACR,OAAO,QAAQ,QAAoB;AAChC,aAAO,gBAAgB,QAAQ,MAAA;IAAA;IAElC,QAAQ,QAAQ,QAAQ,OAAOG,QAAM;AAClC,YAAM,YAAY,qBACf,eAAe,OAAO,MAAA,GACtB,eAAe,OAAO,MAAA,CAAA;AAEzB,UAAI,WAAW;AACZ,eAAOA,OAAK,IAAI,iBAAiB,SAAA,CAAA;MAAA;AAGpC,MAAAA,OAAK,MAAA;IAAA;EAAA;AAAA;AA/Bd,IAAA,YAAAq8B,OAAA;EAAA,0BAAA;AACA,4BAAA;AACA,oBAAA;AAEA,eAAA;EAAA;AAAA,CAAA;ACSO,SAAA,gBAAyB,MAAmC;AAChE,QAAM,UAAiD,CAAA;AAEvD,EAAA/tB,UAAQ,MAAM,CAAC,CAAC,IAAA,MAAW,QAAQ,IAAA,IAAQ,EAAE,KAAA,CAAA;AAE7C,SAAO,OAAO,OAAO,OAAA;AAAA;AAGjB,SAAA,uBAAgC,MAAgC;AACpE,QAAM,UAA8C,CAAA;AAEpD,EAAAA,UAAQ,MAAM,CAAC,CAAC,MAAM,KAAK,OAAA,MAAa;AACrC,QAAI,CAAC,QAAQ,eAAe,IAAA,GAAO;AAChC,cAAQ,IAAA,IAAQ;QACb;QACA,MAAM,EAAE,OAAO,IAAI,MAAM,GAAA;MAAA;IAAA;AAI/B,QAAI,WAAW,KAAK;AACjB,cAAQ,IAAA,EAAM,KAAK,QAAQ,QAAQ,WAAW,EAAA,CAAA,IAAuC;IAAA;EAAA,CAAA;AAI3F,SAAO,OAAO,OAAO,OAAA;AAAA;AAGxB,SAAAA,UAAiB,MAAcpN,UAAmC;AAC/D,yBAAuB,MAAM,CAAC,SAASA,SAAQ,KAAK,MAAM,KAAA,CAAA,CAAA;AAAA;AAzC7D,IAAA,wBAAAm7B,OAAA;EAAA,0CAAA;AAAA,eAAA;EAAA;AAAA,CAAA;ACAA,IAAA,iBAAA,CAAA;AAAAx8B,UAAA,gBAAA;EAAA,eAAA,MAAA;EAAA,gBAAA,MAAA;EAAA,iBAAA,MAAA;EAAA,YAAA,MAAA;EAAA,kBAAA,MAAA;AAAA,CAAA;AAIO,SAAA,cACJ,YACA,YACA,aAAuB,CAAA,GACJ;AACnB,SAAO,0BAA0B,CAAC,UAAU,OAAO,GAAG,YAAY,YAAY,UAAA,CAAA;AAAA;AAG1E,SAAA,eAAwB,SAAmC;AAC/D,QAAM,WAAW,CAAC,QAAA;AAClB,MAAI,SAAS;AACV,aAAS,KAAK,IAAA;EAAA;AAGjB,SAAO;IACJ;IACA,QAAQ;IACR,QAAQ,UAAU,yBAAyB;EAAA;AAAA;AAI1C,SAAA,gBAAyB,aAAuB,CAAA,GAAwB;AAC5E,QAAM,WAAW,CAAC,GAAG,UAAA;AACrB,MAAI,SAAS,CAAA,MAAO,aAAa;AAC9B,aAAS,QAAQ,WAAA;EAAA;AAGpB,SAAO,0BAA0B,QAAA;AAAA;AAG7B,SAAA,WAAoB,aAAuB,CAAA,GAAwB;AACvE,QAAM,WAAW,CAAC,GAAG,UAAA;AACrB,MAAI,SAAS,CAAA,MAAO,UAAU;AAC3B,aAAS,QAAQ,QAAA;EAAA;AAGpB,SAAO,0BAA0B,QAAA;AAAA;AAG7B,SAAA,iBAA0B,YAAoB;AAClD,SAAO,0BAA0B,CAAC,UAAU,UAAU,UAAA,CAAA;AAAA;AA5CzD,IAAA,cAAAw8B,OAAA;EAAA,4BAAA;AAAA,0BAAA;AAEA,cAAA;EAAA;AAAA,CAAA;ACFA,IAAA,qBAAA,CAAA;AAAAx8B,UAAA,oBAAA;EAAA,eAAA,MAAA;AAAA,CAAA;AAQO,SAAA,cACJ,MAAkB,CAAA,GAClB,YACkC;AAClC,QAAM,UAAU,gBAAqB,GAAA;AACrC,QAAM,WAAW,CAAC,SAAS,QAAQ,GAAG,QAAQ,UAAU,GAAG,UAAA;AAC3D,QAAM,UAAS,2BACZ,QAAQ,UACR,QAAQ,QACR,qBAAqB,QAAA,CAAA;AAGxB,SACG,wBAAwB,QAAA,KAAa;IAClC;IACA,QAAQ;IACR,QAAA;EAAA;AAAA;AAxBT,IAAA,kBAAAw8B,OAAA;EAAA,gCAAA;AACA,oBAAA;AACA,gCAAA;AAEA,cAAA;AACA,aAAA;EAAA;AAAA,CAAA;ACLA,IAAA,qBAAA,CAAA;AAAAx8B,UAAA,oBAAA;EAAA,kBAAA,MAAA;EAAA,mBAAA,MAAA;EAAA,eAAA,MAAA;EAAA,qBAAA,MAAA;AAAA,CAAA;AAGO,SAAA,iBAA0B,MAAc,MAAkC;AAC9E,SAAO,cAAc,CAAC,OAAO,MAAM,IAAA,CAAA;AAAA;AAG/B,SAAA,kBAA2B,YAA0C;AACzE,SAAO,cAAc,CAAC,QAAQ,GAAG,UAAA,CAAA;AAAA;AAG7B,SAAA,cAAuB,YAA0C;AACrE,QAAM,WAAW,CAAC,GAAG,UAAA;AACrB,MAAI,SAAS,CAAA,MAAO,aAAa;AAC9B,aAAS,QAAQ,WAAA;EAAA;AAGpB,SAAO,0BAA0B,QAAA;AAAA;AAG7B,SAAA,oBAA6B,YAA0C;AAC3E,SAAO,cAAc,CAAC,UAAU,GAAG,UAAA,CAAA;AAAA;AArBtC,IAAA,kBAAAw8B,OAAA;EAAA,gCAAA;AACA,cAAA;EAAA;AAAA,CAAA;ACqCA,SAAA,aAAsB,GAAW,GAAmB;AACjD,QAAM,SAAS,MAAM,CAAA;AACrB,QAAM,SAAS,MAAM,CAAA;AAErB,MAAI,WAAW,QAAQ;AACpB,WAAO,SAAS,IAAI;EAAA;AAGvB,SAAO,SAAS,OAAO,GAAG,CAAA,IAAK;AAAA;AAGlC,SAAA,OAAgB,GAAW,GAAW;AACnC,SAAO,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA;AAGpC,SAAA,QAAiBj6B,QAAe;AAC7B,SAAOA,OAAM,KAAA;AAAA;AAGhB,SAAA,SAAkBA,QAA2B;AAC1C,MAAI,OAAOA,WAAU,UAAU;AAC5B,WAAO,SAASA,OAAM,QAAQ,SAAS,EAAA,GAAK,EAAA,KAAO;EAAA;AAGtD,SAAO;AAAA;AA9DV,IAEO;AAFP,IASa;AATb,IAAA,eAAAi6B,OAAA;EAAA,iCAAA;AAEO,cAAA,MAAmC;MACvC,YACmB1wB,MACA,QACjB;AAFiB,aAAA,MAAAA;AACA,aAAA,SAAA;MAAA;IAAA;AAIT,mBAAe,SAAU,MAAc,aAAa,OAAO;AACrE,YAAM,OAAO,KAAK,MAAM,IAAA,EAAM,IAAI,OAAA,EAAS,OAAO,OAAA;AAElD,UAAI,CAAC,YAAY;AACd,aAAK,KAAK,SAAU,MAAM,MAAM;AAC7B,gBAAM,SAAS,KAAK,MAAM,GAAA;AAC1B,gBAAM,SAAS,KAAK,MAAM,GAAA;AAE1B,cAAI,OAAO,WAAW,KAAK,OAAO,WAAW,GAAG;AAC7C,mBAAO,aAAa,SAAS,OAAO,CAAA,CAAA,GAAK,SAAS,OAAO,CAAA,CAAA,CAAA;UAAA;AAG5D,mBAAS,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,QAAQ,OAAO,MAAA,GAAS,IAAI,GAAG,KAAK;AACrE,kBAAMkC,QAAO,OAAO,SAAS,OAAO,CAAA,CAAA,GAAK,SAAS,OAAO,CAAA,CAAA,CAAA;AAEzD,gBAAIA,OAAM;AACP,qBAAOA;YAAA;UAAA;AAIb,iBAAO;QAAA,CAAA;MAAA;AAIb,YAAM,SAAS,aAAa,KAAK,CAAA,IAAK,CAAC,GAAG,IAAA,EAAM,QAAA,EAAU,KAAK,CAAC,QAAQ,IAAI,QAAQ,GAAA,KAAQ,CAAA;AAE5F,aAAO,IAAI,QAAQ,MAAM,MAAA;IAAA;EAAA;AAAA,CAAA;ACnC5B,IAAA,cAAA,CAAA;AAAAhO,UAAA,aAAA;EAAA,qBAAA,MAAA;EAAA,YAAA,MAAA;EAAA,aAAA,MAAA;AAAA,CAAA;AAOO,SAAA,YAAqB,aAAuB,CAAA,GAA2B;AAC3E,QAAM,gBAAgB,WAAW,KAAK,CAACyH,YAAW,WAAW,KAAKA,OAAA,CAAA;AAElE,SAAO;IACJ,QAAQ;IACR,UAAU,CAAC,OAAO,MAAM,GAAG,UAAA;IAC3B,OAAO,MAAc;AAClB,aAAO,aAAa,MAAM,aAAA;IAAA;EAAA;AAAA;AAQ5B,SAAA,WAAoB,MAA4C;AACpE,SAAO;IACJ,QAAQ;IACR,UAAU,CAAC,OAAO,IAAA;IAClB,SAAS;AACN,aAAO,EAAE,KAAA;IAAA;EAAA;AAAA;AAQX,SAAA,oBACJ,MACA,YAC6B;AAC7B,SAAO;IACJ,QAAQ;IACR,UAAU,CAAC,OAAO,MAAM,MAAM,YAAY,IAAA;IAC1C,SAAS;AACN,aAAO,EAAE,KAAA;IAAA;EAAA;AAAA;AA3ClB,IAAA,WAAA+0B,OAAA;EAAA,yBAAA;AACA,iBAAA;EAAA;AAAA,CAAA;ACDA,IAAA,cAAAG,YAAA;EAAA,aAAA,SAAA,QAAA;AAAA,QAAM,EAAE,aAAA,aAAA,KAAgB,kBAAA,GAAAC,cAAA,oBAAA;AACxB,QAAM,EAAE,cAAA,cAAA,KAAiB,oBAAA,GAAAA,cAAA,sBAAA;AAEzB,QAAM,EAAE,WAAA,WAAA,KAAc,eAAA,GAAAA,cAAA,iBAAA;AACtB,QAAM,EAAE,wBAAA,wBAAA,KAA2B,UAAA,GAAAA,cAAA,YAAA;AACnC,QAAM;MACH,SAAA;MACA,aAAA;MACA,kBAAA;MACA,cAAA;MACA,2BAAA;MACA,YAAA;MACA,oBAAA;MACA,0BAAA;MACA,yBAAA;IAAA,KACC,WAAA,GAAAA,cAAA,aAAA;AACJ,QAAM,EAAE,gBAAA,gBAAA,KAAmB,iBAAA,GAAAA,cAAA,mBAAA;AAC3B,QAAM;MACH,YAAA;MACA,iBAAA;MACA,oBAAA;MACA,kBAAA;IAAA,KACC,YAAA,GAAAA,cAAA,cAAA;AACJ,QAAM,EAAE,iBAAA,iBAAA,KAAoB,kBAAA,GAAAA,cAAA,oBAAA;AAC5B,QAAM,EAAE,iBAAA,iBAAA,KAAoB,mBAAA,GAAAA,cAAA,qBAAA;AAC5B,QAAM,EAAE,WAAA,YAAW,iBAAA,iBAAA,KAAoB,WAAA,GAAAA,cAAA,aAAA;AACvC,QAAM,EAAE,sBAAA,uBAAsB,qBAAA,qBAAA,KAAwB,WAAA,GAAAA,cAAA,aAAA;AACtD,QAAM,EAAE,iBAAA,iBAAA,KAAoB,UAAA,GAAAA,cAAA,YAAA;AAC5B,QAAM,EAAE,WAAA,WAAA,KAAc,WAAA,GAAAA,cAAA,aAAA;AACtB,QAAM,EAAE,UAAA,UAAA,KAAa,UAAA,GAAAA,cAAA,YAAA;AACrB,QAAM,EAAE,UAAA,UAAA,KAAa,UAAA,GAAAA,cAAA,YAAA;AACrB,QAAM,EAAE,cAAA,cAAA,KAAiB,UAAA,GAAAA,cAAA,YAAA;AACzB,QAAM;MACH,eAAA;MACA,gBAAA;MACA,iBAAA;MACA,YAAA;MACA,kBAAA;IAAA,KACC,YAAA,GAAAA,cAAA,cAAA;AACJ,QAAM,EAAE,cAAA,eAAc,WAAA,WAAA,KAAc,WAAA,GAAAA,cAAA,aAAA;AACpC,QAAM,EAAE,eAAA,eAAA,KAAkB,gBAAA,GAAAA,cAAA,kBAAA;AAC1B,QAAM;MACH,kBAAA;MACA,mBAAA;MACA,eAAA;MACA,qBAAA;IAAA,KACC,gBAAA,GAAAA,cAAA,kBAAA;AACJ,QAAM,EAAE,qBAAA,sBAAqB,YAAA,aAAY,aAAA,aAAA,KAAgB,SAAA,GAAAA,cAAA,WAAA;AACzD,QAAM,EAAE,2BAAA,4BAA2B,2BAAA,2BAAA,KAA8B,UAAA,GAAAA,cAAA,YAAA;AAEjE,aAAAC,MAAa,SAAS,SAAS;AAC5B,WAAK,YAAY,IAAI,aAClB,QAAQ,QACR,QAAQ,SACR,IAAI,WAAU,QAAQ,sBAAA,GACtB,OAAA;AAGH,WAAK,WAAW,QAAQ;IAAA;AAG1B,KAAAA,MAAI,YAAY,OAAO,OAAO,cAAa,SAAA,GAAY,cAAcA;AAStE,IAAAA,MAAI,UAAU,eAAe,SAAU,SAAS;AAC7C,WAAK,UAAU,SAAS;AACxB,aAAO;IAAA;AAWV,IAAAA,MAAI,UAAU,MAAM,SAAU,MAAM79B,QAAO;AACxC,UAAI,UAAU,WAAW,KAAK,OAAO,SAAS,UAAU;AACrD,aAAK,UAAU,MAAM;MAAA,OACjB;AACH,SAAA,KAAK,UAAU,MAAM,KAAK,UAAU,OAAO,CAAA,GAAI,IAAA,IAAQA;MAAA;AAG3D,aAAO;IAAA;AAMV,IAAA69B,MAAI,UAAU,YAAY,SAAU,SAAS;AAC1C,aAAO,KAAK,SACT,eACG,yBAAwB,SAAA,KAAc,CAAA,GACrC,aAAY,OAAA,KAAY,WAAY,CAAA,CAAA,GAExC,0BAAyB,SAAA,CAAA;IAAA;AAI/B,aAAA,gBAAyB,KAAK,MAAM,UAAU,WAAW;AACtD,UAAI,OAAO,aAAa,UAAU;AAC/B,eAAO,wBAAuB,OAAO,GAAA,iCAAA;MAAA;AAGxC,aAAO,KAAK,UAAU,YAAW,WAAW,aAAA,GAAe,oBAAmB,SAAA,CAAA;IAAA;AAMjF,IAAAA,MAAI,UAAU,QAAQ,WAAY;AAC/B,aAAO,KAAK,SACT,gBAAgB,SAAS,YAAW,GAAG,SAAA,GACvC,0BAAyB,SAAA,CAAA;IAAA;AAO/B,IAAAA,MAAI,UAAU,SAAS,WAAY;AAChC,aAAO,KAAK,SACT,gBAAgB,UAAU,kBAAiB,GAAG,SAAA,GAC9C,0BAAyB,SAAA,CAAA;IAAA;AAY/B,IAAAA,MAAI,UAAU,KAAK,SAAU,MAAM,IAAI;AACpC,aAAO,KAAK,SAAS,UAAS,MAAM,EAAA,GAAK,0BAAyB,SAAA,CAAA;IAAA;AAQrE,IAAAA,MAAI,UAAU,oBAAoB,SAAU,MAAM;AAC/C,UAAI,MAAM;AACV,aAAO,KAAK,KAAK,WAAY;AAC1B,YAAI,KAAK,SAAU,KAAK,MAAM;AAC3B,cAAI,SAAS,KAAK,QAAQ,IAAA;QAAA,CAAA;MAAA,CAAA;IAAA;AAQnC,IAAAA,MAAI,UAAU,OAAO,SAAU,QAAQ,QAAQ,SAAS,MAAM;AAC3D,aAAO,KAAK,SACT,UACG,YAAW,QAAQ,aAAA,GACnB,YAAW,QAAQ,aAAA,GACnB,oBAAmB,SAAA,CAAA,GAEtB,0BAAyB,SAAA,CAAA;IAAA;AAc/B,IAAAA,MAAI,UAAU,QAAQ,SAAU,QAAQ,QAAQ;AAC7C,aAAO,KAAK,SACT,WACG,YAAW,QAAQ,aAAA,GACnB,YAAW,QAAQ,aAAA,GACnB,oBAAmB,SAAA,CAAA,GAEtB,0BAAyB,SAAA,CAAA;IAAA;AAW/B,IAAAA,MAAI,UAAU,SAAS,SAAU,SAAS;AACvC,cAAQ,KACL,sKAAA;AAEH,aAAO;IAAA;AAYV,IAAAA,MAAI,UAAU,OAAO,SAAU,SAAS,MAAM;AAC3C,aAAO,KAAK,SACT,aAAY,oBAAmB,SAAA,CAAA,GAC/B,0BAAyB,SAAA,CAAA;IAAA;AAQ/B,IAAAA,MAAI,UAAU,SAAS,WAAY;AAChC,aAAO,KAAK,SACT,2BAA0B,CAAC,UAAU,GAAG,oBAAmB,SAAA,CAAA,CAAA,GAC3D,0BAAyB,SAAA,CAAA;IAAA;AAO/B,IAAAA,MAAI,UAAU,QAAQ,SAAU,MAAM;AACnC,aAAO,KAAK,SACT,WAAU,cAAa,IAAA,GAAO,oBAAmB,SAAA,CAAA,GACjD,0BAAyB,SAAA,CAAA;IAAA;AAO/B,IAAAA,MAAI,UAAU,SAAS,SAAU,QAAQ;AACtC,YAAMx4B,QAAO,0BAAyB,SAAA;AAEtC,UAAI,OAAO,WAAW,UAAU;AAC7B,eAAO,KAAK,SAAS,wBAAuB,yBAAA,GAA4BA,KAAA;MAAA;AAG3E,aAAO,KAAK,SACT,2BAA0B,CAAC,UAAU,GAAG,oBAAmB,WAAW,GAAG,IAAA,GAAO,MAAA,CAAA,GAChFA,KAAA;IAAA;AAON,IAAAw4B,MAAI,UAAU,SAAS,SAAU,MAAM;AACpC,YAAM,OACH,OAAO,SAAS,WACX,YAAW,IAAA,IACX,wBAAuB,gCAAA;AAE/B,aAAO,KAAK,SAAS,MAAM,0BAAyB,SAAA,CAAA;IAAA;AAMvD,IAAAA,MAAI,UAAU,kBAAkB,SAAU,SAAS,YAAY;AAC5D,aAAO,KAAK,SACT,qBAAoB,SAAS,UAAA,GAC7B,0BAAyB,SAAA,CAAA;IAAA;AAO/B,IAAAA,MAAI,UAAU,oBAAoB,SAAU,YAAY,aAAa,MAAM;AACxE,aAAO,KAAK,SACT,kBAAiB,YAAY,OAAO,gBAAgB,YAAY,cAAc,KAAA,GAC9E,0BAAyB,SAAA,CAAA;IAAA;AAO/B,IAAAA,MAAI,UAAU,sBAAsB,SAAU,aAAa,aAAa,MAAM;AAC3E,aAAO,KAAK,SACT,oBAAmB,aAAa,OAAO,gBAAgB,YAAY,cAAc,KAAA,GACjF,0BAAyB,SAAA,CAAA;IAAA;AAU/B,IAAAA,MAAI,UAAU,SAAS,SAAU,SAAS,MAAM;AAC7C,aAAO,KAAK,SACT,YAAW,oBAAmB,SAAA,CAAA,GAC9B,0BAAyB,SAAA,CAAA;IAAA;AAS/B,IAAAA,MAAI,UAAU,cAAc,SAAU,MAAM;AACzC,aAAO,KAAK,SAAS,iBAAA,GAAmB,0BAAyB,SAAA,CAAA;IAAA;AAMpE,IAAAA,MAAI,UAAU,MAAM,SAAU,UAAU;AACrC,YAAM,qBAAqB,CAAC,MAAM,QAAQ,QAAA;AAC1C,YAAM,UAAU,CAAA,EAAG,MAAM,KAAK,qBAAqB,YAAY,UAAU,CAAA;AAEzE,eAAS,IAAI,GAAG,IAAI,QAAQ,UAAU,oBAAoB,KAAK;AAC5D,YAAI,CAAC,kBAAiB,QAAQ,CAAA,CAAA,GAAK;AAChC,kBAAQ,OAAO,GAAG,QAAQ,SAAS,CAAA;AACnC;QAAA;MAAA;AAIN,cAAQ,KAAK,GAAG,oBAAmB,WAAW,GAAG,IAAA,CAAA;AAEjD,UAAIx4B,QAAO,0BAAyB,SAAA;AAEpC,UAAI,CAAC,QAAQ,QAAQ;AAClB,eAAO,KAAK,SACT,wBAAuB,iDAAA,GACvBA,KAAA;MAAA;AAIN,aAAO,KAAK,SAAS,2BAA0B,SAAS,KAAK,QAAA,GAAWA,KAAA;IAAA;AAG3E,IAAAw4B,MAAI,UAAU,eAAe,SAAU,MAAM,MAAM,MAAM;AACtD,aAAO,KAAK,SAAS,kBAAiB,MAAM,IAAA,GAAO,0BAAyB,SAAA,CAAA;IAAA;AAG/E,IAAAA,MAAI,UAAU,kBAAkB,SAAU,MAAM,MAAM;AACnD,aAAO,KAAK,SACT,qBAAoB,oBAAmB,WAAW,IAAA,CAAA,GAClD,0BAAyB,SAAA,CAAA;IAAA;AAI/B,IAAAA,MAAI,UAAU,gBAAgB,SAAU,MAAM,MAAM;AACjD,aAAO,KAAK,SACT,mBAAkB,oBAAmB,WAAW,IAAA,CAAA,GAChD,0BAAyB,SAAA,CAAA;IAAA;AAI/B,IAAAA,MAAI,UAAU,YAAY,SAAU,SAAS,MAAM;AAChD,aAAO,KAAK,SACT,eAAc,oBAAmB,SAAA,CAAA,GACjC,0BAAyB,SAAA,CAAA;IAAA;AAI/B,IAAAA,MAAI,UAAU,aAAa,WAAY;AACpC,aAAO,KAAK,SACT,iBAAgB,oBAAmB,SAAA,CAAA,GACnC,0BAAyB,SAAA,CAAA;IAAA;AAO/B,IAAAA,MAAI,UAAU,YAAY,SAAU,YAAY,YAAY,MAAM;AAC/D,aAAO,KAAK,SACT,eAAc,YAAY,YAAY,oBAAmB,SAAA,CAAA,GACzD,0BAAyB,SAAA,CAAA;IAAA;AAO/B,IAAAA,MAAI,UAAU,eAAe,SAAU,YAAY,MAAM;AACtD,aAAO,KAAK,SAAS,kBAAiB,UAAA,GAAa,0BAAyB,SAAA,CAAA;IAAA;AAO/E,IAAAA,MAAI,UAAU,aAAa,SAAU,SAAS,MAAM;AACjD,aAAO,KAAK,SAAS,gBAAe,YAAY,IAAA,GAAO,0BAAyB,SAAA,CAAA;IAAA;AASnF,IAAAA,MAAI,UAAU,SAAS,SAAU,SAAS,MAAM;AAC7C,aAAO,KAAK,SACT,YAAW,oBAAmB,SAAA,CAAA,GAC9B,0BAAyB,SAAA,CAAA;IAAA;AAU/B,IAAAA,MAAI,UAAU,MAAM,SAAU,SAAS,MAAM;AAC1C,YAAM,UAAU,oBAAmB,SAAA;AAEnC,UAAI,QAAQ,CAAA,MAAO,OAAO;AACvB,gBAAQ,QAAQ,KAAA;MAAA;AAGnB,aAAO,KAAK,SAAS,2BAA0B,OAAA,GAAU,0BAAyB,SAAA,CAAA;IAAA;AAQrF,IAAAA,MAAI,UAAU,mBAAmB,SAAU,MAAM;AAC9C,aAAO,KAAK,SACT,2BAA0B,CAAC,oBAAA,CAAA,GAC3B,0BAAyB,SAAA,CAAA;IAAA;AAW/B,IAAAA,MAAI,UAAU,WAAW,SAAU,QAAQ,MAAM;AAC9C,YAAM,OAAO,cACV,EAAE,QAAQ,YAAW,QAAQ,aAAA,EAAA,GAC7B,oBAAmB,SAAA,CAAA;AAGtB,aAAO,KAAK,SAAS,MAAM,0BAAyB,SAAA,CAAA;IAAA;AAMvD,IAAAA,MAAI,UAAU,KAAK,SAAU,OAAO;AACjC,aAAO,KAAK,SACT,2BAA0B,CAAC,MAAM,MAAM,GAAG,SAAQ,KAAA,CAAA,CAAA,GAClD,0BAAyB,SAAA,CAAA;IAAA;AAU/B,IAAAA,MAAI,UAAU,cAAc,SAAU,OAAO;AAC1C,aAAO,KAAK,SACT,2BAA0B,CAAC,MAAM,YAAY,GAAG,SAAQ,KAAA,CAAA,CAAA,GACxD,0BAAyB,SAAA,CAAA;IAAA;AAa/B,IAAAA,MAAI,UAAU,UAAU,SAAU,SAAS,MAAM;AAC9C,aAAO,KAAK,SAAS,SAAS,SAAA;IAAA;AAGjC,IAAAA,MAAI,UAAU,gBAAgB,WAAY;AACvC,aAAO,KAAK,SAAS,UAAU,SAAA;IAAA;AAGlC,IAAAA,MAAI,UAAU,WAAW,SAAU,QAAQ,MAAM;AAC9C,UAAIx7B,WAAU,0BAAyB,IAAA;AACvC,UAAI,UAAU,CAAC,UAAA;AACf,UAAI,UAAU,KAAK,CAAA;AAEnB,UAAI,OAAO,YAAY,UAAU;AAC9B,eAAO,KAAK,SACT,wBAAuB,8DAAA,GACvBA,QAAA;MAAA;AAIN,UAAI,MAAM,QAAQ,OAAA,GAAU;AACzB,gBAAQ,KAAK,MAAM,SAAS,OAAA;MAAA;AAG/B,YAAM,OACH,WAAW,WAAW,2BAA0B,OAAA,IAAW,2BAA0B,OAAA;AAExF,aAAO,KAAK,SAAS,MAAMA,QAAA;IAAA;AAG9B,IAAAw7B,MAAI,UAAU,OAAO,SAAU,SAAS,MAAM;AAC3C,YAAM,OAAO,cAAa,OAAA,IACrB,wBACG,sGAAA,IAEH,2BAA0B,CAAC,QAAQ,GAAG,oBAAmB,SAAA,CAAA,CAAA;AAE9D,aAAO,KAAK,SAAS,MAAM,0BAAyB,SAAA,CAAA;IAAA;AAGvD,IAAAA,MAAI,UAAU,cAAc,WAAY;AACrC,aAAO,KAAK,SACT,iBAAgB,oBAAmB,WAAW,CAAA,CAAA,GAC9C,0BAAyB,SAAA,CAAA;IAAA;AAI/B,IAAAA,MAAI,UAAU,aAAa,SAAU,SAAS;AAC3C,YAAM,OAAO,CAAC,2BAA0B,OAAA,IACnC,wBACG,0EAAA,IAEH,gBAAe,SAAQ,OAAA,GAAU,oBAAmB,CAAA,EAAG,MAAM,KAAK,WAAW,CAAA,CAAA,CAAA;AAElF,aAAO,KAAK,SAAS,MAAM,0BAAyB,SAAA,CAAA;IAAA;AAGvD,IAAAA,MAAI,UAAU,WAAW,WAAY;AAClC,YAAM,WAAW,CAAC,aAAa,GAAG,oBAAmB,WAAW,IAAA,CAAA;AAChE,aAAO,KAAK,SACT,2BAA0B,UAAU,IAAA,GACpC,0BAAyB,SAAA,CAAA;IAAA;AAM/B,IAAAA,MAAI,UAAU,QAAQ,SAAU,MAAM,SAAS,MAAM;AAClD,YAAM,yBAAyB,qBAAoB,IAAA;AACnD,YAAM,YACF,0BAA0B,KAAK,KAAK,EAAA,KAAQ,YAAW,MAAM,aAAA,KAAiB;AAClF,YAAM,aAAa,oBAAmB,CAAA,EAAG,MAAM,KAAK,WAAW,yBAAyB,IAAI,CAAA,CAAA;AAE5F,aAAO,KAAK,SACT,sBAAqB,WAAW,UAAA,GAChC,0BAAyB,SAAA,CAAA;IAAA;AAI/B,IAAAA,MAAI,UAAU,OAAO,SAAU,MAAM;AAClC,YAAM,OAAO;QACV,UAAU,CAAA;QACV,QAAQ;QACR,SAAS;AACN,cAAI,OAAO,SAAS,YAAY;AAC7B,iBAAA;UAAA;QAAA;MAAA;AAKT,aAAO,KAAK,SAAS,IAAA;IAAA;AAQxB,IAAAA,MAAI,UAAU,aAAa,WAAY;AAGpC,aAAO;IAAA;AASV,IAAAA,MAAI,UAAU,cAAc,SAAU,WAAW,MAAM;AACpD,aAAO,KAAK,SACT,iBAAgB,SAAQ,YAAW,WAAW,4BAA2B,CAAA,CAAA,CAAA,CAAA,GACzE,0BAAyB,SAAA,CAAA;IAAA;AAI/B,IAAAA,MAAI,UAAU,cAAc,SAAU,WAAW,MAAM;AACpD,aAAO,KAAK,SACT,iBAAgB,YAAW,WAAW,aAAA,CAAA,GACtC,0BAAyB,SAAA,CAAA;IAAA;AAI/B,WAAO,UAAUA;EAAA;AAAA,CAAA;AChnBjB,cAAA;ACAA,eAAA;AAYO,IAAA,oBAAA,cAAgC,SAAS;EAC7C,YACmBx9B,SAChB,SACD;AACC,UAAM,QAAW,OAAA;AAHD,SAAA,SAAAA;EAAA;AAAA;ADZtB,eAAA;AEDA,eAAA;AAEO,IAAA,iBAAA,cAA6B,SAAS;EAC1C,YACU,MACS,QAChB,SACD;AACC,UAAM,MAAM,OAAA;AAJL,SAAA,OAAA;AACS,SAAA,SAAA;AAIhB,WAAO,eAAe,MAAM,WAAW,SAAA;EAAA;AAAA;AFN7C,wBAAA;AACA,8BAAA;AACA,mBAAA;AACA,WAAA;AACA,YAAA;AACA,UAAA;AACA,WAAA;AGNO,SAAA,YAAqB,QAAmC;AAC5D,MAAI,CAAC,QAAQ;AACV;EAAA;AAGH,QAAM,eAA+C;IAClD,MAAM;IACN,OAAO,OAAOsD,UAAS;AACpB,eAAA,OAAgB;AACb,QAAAA,SAAQ,KAAK,IAAI,eAAe,QAAW,SAAS,uBAAA,CAAA;MAAA;AAGvD,aAAO,iBAAiB,SAAS,IAAA;AAEjC,MAAAA,SAAQ,QAAQ,GAAG,SAAS,MAAM,OAAO,oBAAoB,SAAS,IAAA,CAAA;IAAA;EAAA;AAI5E,QAAM,gBAAiD;IACpD,MAAM;IACN,OAAO,OAAOA,UAAS;AACpB,UAAI,OAAO,SAAS;AACjB,QAAAA,SAAQ,KAAK,IAAI,eAAe,QAAW,SAAS,wBAAA,CAAA;MAAA;IAAA;EAAA;AAK7D,SAAO,CAAC,eAAe,YAAA;AAAA;AC1B1B,SAAA,eAAwB,KAAuB;AAC5C,SAAO,OAAO,QAAQ,YAAY,IAAI,KAAA,EAAO,YAAA,MAAkB;AAAA;AAGlE,SAAA,wBAAiC,KAAa0B,OAAc;AACzD,MAAI,CAAC,eAAe,GAAA,GAAM;AACvB;EAAA;AAGH,MAAI,CAAC,+BAA+B,KAAKA,KAAA,GAAO;AAC7C;EAAA;AAGH,QAAM,IAAI,eACP,QACA,UACA,qFAAA;AAAA;AAIN,SAAA,kBAA2B,KAAa,QAAgB;AACrD,MAAI,8BAA8B,KAAK,GAAA,GAAM;AAC1C,UAAM,IAAI,eACP,QACA,UACA,0FAAA;EAAA;AAIN,MAAI,WAAW,WAAW,WAAW,KAAK,GAAA,GAAM;AAC7C,UAAM,IAAI,eACP,QACA,UACA,+EAAA;EAAA;AAIN,MAAI,WAAW,UAAU,eAAe,KAAK,GAAA,GAAM;AAChD,UAAM,IAAI,eACP,QACA,UACA,kFAAA;EAAA;AAAA;AAKF,SAAA,4BAAqC;EACzC,8BAA8B;EAC9B,kBAAkB;AAAA,IACgB,CAAA,GAAmC;AACrE,SAAO;IACJ,MAAM;IACN,OAAO,MAAM1B,UAAS;AACnB,WAAK,QAAQ,CAACF,UAAS,UAAU;AAC9B,cAAM4B,QAAO,QAAQ,KAAK,SAAS,KAAK,QAAQ,CAAA,IAAK;AAErD,uCAA+B,wBAAwB5B,UAAS4B,KAAA;AAChE,2BAAmB,kBAAkB5B,UAASE,SAAQ,MAAA;MAAA,CAAA;AAGzD,aAAO;IAAA;EAAA;AAAA;ACjEhB,WAAA;AAGO,SAAA,6BACJ,eAC8B;AAC9B,QAAM,SAAS,cAAc,eAAe,IAAA;AAE5C,SAAO;IACJ,MAAM;IACN,OAAO,MAAM;AACV,aAAO,CAAC,GAAG,QAAQ,GAAG,IAAA;IAAA;EAAA;AAAA;A/ET/B,WAAA;AAGA,IAAMoX,aAAQ,mCAAA,EAAW;AAElB,SAAA,0BAAmC;EACvC,UAAU;EACV,QAAA9G,UAAS;AAAA,IAC6B,CAAA,GAAoC;AAC1E,WAAA,eAAwB;AACrB,QAAI,WAAW;AACf,UAAM,SAAS;MACZ,WAAO,mCAAA;MACP,kBAAc,mCAAA;MACd,UAAM,mCAAA;MACN,iBAAa,mCAAA;IAAA;AAGhB,UAAM,SAAS,QAAQ,KAAK;MACzB,YAAY,QAAQ8G,SAAQ,OAAO,aAAa;MAChD9G,YAAW,QAAQ8G,SAAQ,OAAO,YAAY;IAAA,CAAA;AAGjD,qBAAiB,SAAS,OAAO,OAAO,OAAO,YAAA;AAC/C,qBAAiB9G,SAAQ,OAAO,MAAM,OAAO,WAAA;AAE7C,WAAO;MACJ,MAAM,MAAc;AACjB,mBAAW;AACX,eAAO,MAAM,KAAA;MAAA;MAEhB,KAAK,MAAc;AAChB,mBAAW;AACX,eAAO,KAAK,KAAA;MAAA;MAAA,IAEX,WAAW;AACZ,eAAO;MAAA;MAEV;IAAA;EAAA;AAIN,WAAA,iBACG,MACA,OACAvR,UACD;AACC,QAAI,SAAS,OAAO;AACjB;IAAA;AAGF,KAAA,SAAS,OAAO,MAAM,UAAU,MAAM,QAAQ,KAAK,MAAMD,OAAM,IAAA,CAAA,GAAQ,KAAKC,SAAQ,IAAA;EAAA;AAGxF,SAAO;IACJ,MAAM;IACA,OAAO,IAAO,IAAoB;AAAA,aAAA,QAAA,MAAA,WAAA,WAA3B,OAAO,EAAE,SAAS,OAAAo7B,OAAA,GAAS;AA1D9C,YAAA,KAAA;AA2DS,cAAM,SAAS,aAAA;AAEf,YAAI,aAAa;AACjB,YAAI,aAAa,MAAM,MAAM,aAAa;AAE1C,SAAA,MAAA,QAAQ,WAAR,OAAA,SAAA,IAAgB,GAAG,QAAQ,UAAA;AAC3B,SAAA,KAAA,QAAQ,WAAR,OAAA,SAAA,GAAgB,GAAG,QAAQ,UAAA;AAC3B,gBAAQ,GAAG,SAAS,UAAA;AAEpB,gBAAQ,GAAG,SAAS,CAAC,SAAiB,OAAO,MAAM,IAAA,CAAA;AACnD,gBAAQ,GAAG,QAAQ,CAAC,SAAiB,OAAO,KAAK,IAAA,CAAA;AAEjD,YAAI;AACD,gBAAM,OAAO;AACb,cAAI,YAAY;AACb,kBAAMr7B,OAAM,EAAA;UAAA;AAEf,UAAAq7B,OAAM,OAAO,QAAA;QAAA,SACP,KAAP;AACC,UAAAA,OAAM,OAAO,UAAU,GAAA;QAAA;MAAA,CAAA;IAAA;EAAA;AAAA;AgF9EnC,eAAA;AAMA,SAAA,YAAqB,QAAoB;AACtC,SAAO,CAAC,EAAE,OAAO,YAAY,OAAO,OAAO;AAAA;AAG9C,SAAA,gBAAyB,QAAoB;AAC1C,SAAO,OAAO,OAAO,CAAC,GAAG,OAAO,QAAQ,GAAG,OAAO,MAAA,CAAA;AAAA;AAG9C,SAAA,sBACJC,aAAY,OACZ,UAAU,aACV,eAAuD,iBACxD;AACC,SAAO,CAAC,OAAmC,WAAuB;AAC/D,QAAK,CAACA,cAAa,SAAU,CAAC,QAAQ,MAAA,GAAS;AAC5C,aAAO;IAAA;AAGV,WAAO,aAAa,MAAA;EAAA;AAAA;AAInB,SAAA,qBACJ19B,SAC8B;AAC9B,SAAO;IACJ,MAAM;IACN,OAAO,MAAMsD,UAAS;AACnB,YAAM,QAAQtD,QAAO,KAAK,OAAO;QAC9B,QAAQsD,SAAQ;QAChB,QAAQA,SAAQ;QAChB,UAAUA,SAAQ;MAAA,CAAA;AAGrB,UAAI,OAAO,SAAS,KAAA,GAAQ;AACzB,eAAO,EAAE,OAAO,IAAI,SAAS,QAAW,MAAM,SAAS,OAAA,CAAA,EAAA;MAAA;AAG1D,aAAO;QACJ;MAAA;IAAA;EAAA;AAAA;AC5CZ,WAAA;AAEO,IAAA,cAAA,MAAkB;EAAlB,cAHP;AAIW,SAAA,UAAqD,oBAAI,IAAA;EAAA;EAE1D,IACJ,QACD;AACC,UAAM,UAAgC,CAAA;AAEtC,YAAQ,MAAA,EAAQ,QAAQ,CAAC,YAAW,WAAU,KAAK,QAAQ,IAAIgG,QAAO,SAAS,OAAA,CAAA,CAAA;AAE/E,WAAO,MAAM;AACV,cAAQ,QAAQ,CAAC,YAAW,KAAK,QAAQ,OAAO,OAAA,CAAA;IAAA;EAAA;EAI/C,KACJ,MACA,MACAhG,UACY;AACZ,QAAI,SAAS;AACb,UAAM,aAAa,OAAO,OAAO,OAAO,OAAOA,QAAA,CAAA;AAE/C,eAAW,UAAU,KAAK,SAAS;AAChC,UAAI,OAAO,SAAS,MAAM;AACvB,iBAAS,OAAO,OAAO,QAAQ,UAAA;MAAA;IAAA;AAIrC,WAAO;EAAA;AAAA;AC/Bb,WAAA;AAIO,SAAA,sBAA+B,UAAuD;AAC1F,QAAM,kBAAkB;AACxB,QAAM,kBAAkB,CAAC,YAAY,SAAS,SAAS,QAAQ,MAAA;AAE/D,QAAM,aAA6C;IAChD,MAAM;IACN,OAAO,OAAOA,UAAS;AAX7B,UAAA;AAYS,UAAI,CAACA,SAAQ,SAAS,SAAS,eAAA,GAAkB;AAC9C;MAAA;AAGH,OAAA,MAAAA,SAAQ,QAAQ,WAAhB,OAAA,SAAA,IAAwB,GAAG,QAAQ,CAACrB,WAAkB;AACnD,cAAM,UAAU,yCAAyC,KAAKA,OAAM,SAAS,MAAA,CAAA;AAC7E,YAAI,CAAC,SAAS;AACX;QAAA;AAGH,iBAAS;UACN,QAAQqB,SAAQ;UAChB,OAAO,mBAAmB,QAAQ,CAAA,CAAA;UAClC,UAAU,SAAS,QAAQ,CAAA,CAAA;UAC3B,WAAW,SAAS,QAAQ,CAAA,CAAA;UAC5B,OAAO,SAAS,QAAQ,CAAA,CAAA;QAAA,CAAA;MAAA,CAAA;IAAA;EAAA;AAMpC,QAAM,SAAwC;IAC3C,MAAM;IACN,OAAO,MAAMA,UAAS;AACnB,UAAI,CAAC,gBAAgB,SAASA,SAAQ,MAAA,GAAS;AAC5C,eAAO;MAAA;AAGV,aAAO,UAAU,MAAM,eAAA;IAAA;EAAA;AAI7B,SAAO,CAAC,QAAQ,UAAA;AAAA;AAGnB,SAAA,mBAA4BJ,QAAe;AACxC,SAAO,OAAOA,OAAM,YAAA,EAAc,MAAM,KAAK,CAAA,CAAA,KAAO;AAAA;AC/CvD,WAAA;AAGO,SAAA,mBACJ,cACiC;AACjC,QAAM,UAAU2N,MAAK,cAAc,CAAC,OAAO,KAAA,CAAA;AAE3C,SAAO;IACJ,MAAM;IACN,OAAO,MAAM;AACV,aAAO,eAAA,eAAA,CAAA,GAAK,OAAA,GAAY,IAAA;IAAA;EAAA;AAAA;ACP1B,SAAA,cAAuB;EAC3B;EACA,SAAS;EACT,SAAS;AAAA,GAC+E;AACxF,MAAI,QAAQ,GAAG;AACZ,WAAO;MACJ,MAAM;MACN,OAAO,OAAOvN,UAAS;AAbhC,YAAA,KAAA;AAcY,YAAIjB;AAEJ,iBAAA,OAAgB;AACb,UAAAA,YAAW,aAAaA,QAAA;AACxB,UAAAA,WAAU,WAAW,MAAM,KAAA;QAAA;AAG9B,iBAAAs7B,QAAgB;AArB5B,cAAA,KAAA;AAsBe,WAAA,MAAAr6B,SAAQ,QAAQ,WAAhB,OAAA,SAAA,IAAwB,IAAI,QAAQ,IAAA;AACpC,WAAA,MAAAA,SAAQ,QAAQ,WAAhB,OAAA,SAAA,IAAwB,IAAI,QAAQ,IAAA;AACpC,UAAAA,SAAQ,QAAQ,IAAI,QAAQq6B,KAAA;AAC5B,UAAAr6B,SAAQ,QAAQ,IAAI,SAASq6B,KAAA;AAC7B,UAAAt7B,YAAW,aAAaA,QAAA;QAAA;AAG3B,iBAAA,OAAgB;AACb,UAAAs7B,MAAA;AACA,UAAAr6B,SAAQ,KAAK,IAAI,eAAe,QAAW,WAAW,uBAAA,CAAA;QAAA;AAGzD,oBAAU,MAAAA,SAAQ,QAAQ,WAAhB,OAAA,SAAA,IAAwB,GAAG,QAAQ,IAAA;AAC7C,oBAAU,KAAAA,SAAQ,QAAQ,WAAhB,OAAA,SAAA,GAAwB,GAAG,QAAQ,IAAA;AAC7C,QAAAA,SAAQ,QAAQ,GAAG,QAAQq6B,KAAA;AAC3B,QAAAr6B,SAAQ,QAAQ,GAAG,SAASq6B,KAAA;AAE5B,aAAA;MAAA;IAAA;EAAA;AAAA;ACtCZ,cAAA;AAEO,SAAA,oBAA4D;AAChE,SAAO;IACJ,MAAM;IACN,OAAO,MAAM;AACV,YAAM,SAAmB,CAAA;AACzB,UAAI;AACJ,eAAAP,SAAgB,MAAgB;AAC5B,SAAA,SAAS,UAAU,CAAA,GAAI,KAAK,GAAG,IAAA;MAAA;AAGnC,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACnC,cAAM,QAAQ,KAAK,CAAA;AAEnB,YAAI,WAAW,KAAA,GAAQ;AACpB,UAAAA,SAAO,QAAQ,KAAA,CAAA;AACf;QAAA;AAGH,YAAI,UAAU,MAAM;AACjB,UAAAA,SACG,KAAK,MAAM,IAAI,CAAA,EAAG,QAAQ,CAAC,SAAU,WAAW,IAAA,KAAS,QAAQ,IAAA,KAAU,IAAA,CAAA;AAE9E;QAAA;AAGH,eAAO,KAAK,KAAA;MAAA;AAGf,aAAO,CAAC,SAAS,SAAS,CAAC,GAAG,QAAQ,MAAM,GAAG,OAAO,IAAI,MAAA,CAAA;IAAA;EAAA;AAAA;ACfnE,WAAA;AAGA,IAAM,MAAM,YAAA;AAmBL,SAAA,mBACJ,SACA,SACD;AACC,QAAM,UAAU,IAAI,YAAA;AACpB,QAAMp9B,UAAS,qBACX,YAAY,OAAO,YAAY,WAAW,EAAE,QAAA,IAAY,YAAa,CAAA,GACtE,OAAA;AAGH,MAAI,CAAC,aAAaA,QAAO,OAAA,GAAU;AAChC,UAAM,IAAQ,kBACXA,SACA,0DAAA;EAAA;AAIN,MAAI,MAAM,QAAQA,QAAO,MAAA,GAAS;AAC/B,YAAQ,IAAI,6BAA6BA,QAAO,MAAA,CAAA;EAAA;AAGnD,UAAQ,IAAI,4BAA4BA,QAAO,MAAA,CAAA;AAC/C,UAAQ,IAAI,kBAAA,CAAA;AACZ,UAAQ,IAAI,0BAA0BA,QAAO,UAAA,CAAA;AAC7C,EAAAA,QAAO,SAAS,QAAQ,IAAI,YAAYA,QAAO,KAAA,CAAA;AAC/C,EAAAA,QAAO,YAAY,QAAQ,IAAI,sBAAsBA,QAAO,QAAA,CAAA;AAC5D,EAAAA,QAAO,WAAW,QAAQ,IAAI,cAAcA,QAAO,OAAA,CAAA;AACnD,EAAAA,QAAO,gBAAgB,QAAQ,IAAI,mBAAmBA,QAAO,YAAA,CAAA;AAE7D,UAAQ,IAAI,qBAAqB,sBAAsB,IAAA,CAAA,CAAA;AACvD,EAAAA,QAAO,UAAU,QAAQ,IAAI,qBAAqBA,QAAO,MAAA,CAAA;AAEzD,SAAO,IAAI,IAAIA,SAAQ,OAAA;AAAA;ACpE1B,wBAAA;ACGO,IAAM,YAAY;;;ACIlB,IAAM49B,YAAN,MAAe;AAAA,EAEpB,YAAqB,OAAoB;AAApB;AAAA,EAAqB;AAAA,EADjC,OAAO;AAElB;AAeO,IAAM,UAAU,2BAAQ,IAAa;AAE5C,IAAM9yB,SAAO,CAAC,EAAE,WAAW,OAAO,CAAC,GAAG,UAAU,UAAU,MAAiB;AACzE,QAAMjF,SAAQ,CAAC,KAAa,QAC1B,0BAAO,IAAI,WAAW,GAAG;AACvB,WAAO;AAAA,MACL,0BAAO,WAAW;AAAA,QAChB,KAAK,MAAS,UAAU,IAAI,EAAE,MAAM,KAAK,GAAG;AAAA,QAC5C,OAAO,WAAS,IAAI+3B,UAAS,KAAY;AAAA,MAC3C,CAAC;AAAA,IACH;AAEA,UAAM,MAAS,UAAU,KAAK,IAAI;AAElC,UAAMzY,OAAM,CAAI,MACd,0BAAO,WAAW;AAAA,MAChB,KAAK,MAAM,EAAE,GAAG;AAAA,MAChB,OAAO,WAAS,IAAIyY,UAAS,KAAY;AAAA,IAC3C,CAAC;AAEH,WAAO;AAAA,MACLzY;AAAA,QAAI,CAAA0Y,OACFA,GAAE,UAAU,aAAa,QAAQ,EAAE,UAAU,cAAc,SAAS;AAAA,MACtE;AAAA,IACF;AAEA,WAAO,QAAQ,GAAG,EAAE,KAAK,KAAA1Y,MAAK,MAAM,IAAI,CAAC;AAAA,EAC3C,CAAC;AAEH,SAAO,EAAE,OAAAtf,OAAM;AACjB;AAGO,IAAMi4B,OAAM,2BAAQ,IAAS;AAC7B,IAAM,QAAQ,CAAC,MACpB,0BAAO,OAAO,0BAAO,OAAO,CAAC,CAAC,EAAE,KAAK,0BAAO,IAAIhzB,MAAI,GAAG,yBAAM,OAAOgzB,IAAG,CAAC;;;AC9D1E,oBAA2B;AAiBpB,IAAM,cAAN,MAAkB;AAAA,EAEvB,YAAqB,QAAiB;AAAjB;AAAA,EAAkB;AAAA,EAD9B,OAAO;AAElB;AAEA,IAAMhzB,SAAO,CAAC,EAAE,MAAM,MAAqB;AACzC,QAAM,UAAM,0BAAW,gCAAa,MAAM,KAAK,CAAC;AAEhD,QAAM,OAAO,IAAI;AAGjB,QAAMhI,WAAU,CAAI,MAClB,0BAAO,WAAW;AAAA,IAChB,KAAK,MAAM,EAAE,IAAI;AAAA,IACjB,OAAO,YAAU,IAAI,YAAY,MAAM;AAAA,EACzC,CAAC;AAEH,QAAM,OACJ,CACE,MAEF,IAAI,SACF,0BAAO;AAAA,IACL,0BAAO,WAAW;AAAA,MAChB,KAAK,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI;AAAA,MAC1B,OAAO,YAAU,IAAI,YAAY,MAAM;AAAA,IACzC,CAAC;AAAA,IACD,OAAK,EAAE;AAAA,EACT;AAEJ,QAAM,SAAS,CACb,MAEA,0BAAO;AAAA,IAAoB;AAAA,IAAG,UAC5B,0BAAO,WAAW;AAAA,MAChB,KAAK,MAAM,EAAE,MAAM,IAAI;AAAA,MACvB,OAAO,YAAU,IAAI,YAAY,MAAM;AAAA,IACzC,CAAC,EAAE;AAAA,MACD,0BAAO,IAAI,OAAK;AAAA,QACd,yBAAM,aAAa,EAAE,IAAI;AAAA,QACzB,cAAc,MAAM,EAAE,QAAQ,IAAI;AAAA,MACpC,CAAC;AAAA,IACH;AAAA,EACF;AAEF,SAAO,EAAE,KAAK,OAAO,SAAAA,UAAS,MAAM,OAAO;AAC7C;AAGO,IAAM,SAAS,2BAAQ,IAAY;AACnC,IAAMulB,SAAQ,CAAC,MACpB,0BAAO,OAAO,0BAAO,OAAO,CAAC,CAAC,EAAE,KAAK,0BAAO,IAAIvd,MAAI,GAAG,yBAAM,OAAO,MAAM,CAAC;AAE7E,IAAM,gBAAgB,CAAC,MAAc,eACnC,0BAAO,aAAa,UAAU,EAAE;AAAA,EAC9B,0BAAO,OAAO,OAAK,EAAE,SAAS,YAAc,CAAC;AAAA,EAC7C,0BAAO,GAAG,OAAO,CAAC;AACpB;;;ACxEK,IAAM,iBAAiB,CAAC,SAC7B,0BAAO,OAAO,IAAI,EAAE;AAAA,EAClB,0BAAO,UAAU,OAAK;AACpB,UAAMizB,WAAU,EAAE,KAAK;AACvB,WAAOA,aAAY,KACf,0BAAO,MAAMA,QAAO,IACpB,0BAAO,KAAK,+BAAY,YAAY,CAAC,GAAG,mBAAmB,CAAC;AAAA,EAClE,CAAC;AACH;AAEK,IAAM,iBAAiB,CAAC,SAC7B,0BAAO,OAAO,IAAI,EAAE;AAAA,EAClB,0BAAO,UAAU,OAAK;AACpB,UAAMA,WAAU,gCAAa,WAAW,gCAAa,MAAM,CAAC,EAAE,KAAK,CAAC;AACpE,WAAO,gCAAa,MAAMA,QAAO,MAAM,KACnC,0BAAO,MAAMA,QAAO,IACpB,0BAAO,KAAK,+BAAY,YAAY,CAAC,GAAG,mBAAmB,CAAC;AAAA,EAClE,CAAC;AACH;AAEK,IAAM,QAAQ,CAAC,SACpB,0BAAO,OAAO,eAAe,IAAI,GAAG,OAAO;AACtC,IAAM,cAAc,CAAC,SAC1B,0BAAO,OAAO,eAAe,IAAI,GAAG,OAAO;;;AhKjBtC,cAAO;AAGd,IAAM,UAAc,MAAM;AAAA,EACxB,UAAU,eAAe,cAAc;AAAA,EACvC,WAAW,eAAe,cAAc,EAAE;AAAA,IACxC,0BAAO,IAAI,OAAK,GAAG,CAAC,2BAA2B;AAAA,EACjD;AAAA,EACA,WAAW,0BAAO,QAAQ,CAAC,CAAC;AAC9B,CAAC;AAGD,IAAM,aAAoB1V,OAAM;AAAA,EAC9B,OAAO,YAAY,cAAc;AACnC,CAAC;AAGD,IAAM,UAAU,yBAAM,SAAS,SAAS,UAAU;AAElD,0BAAO,IAAI,WAAW,GAAG;AACvB,QAAM,OAAO,OAAO,EAAE,0BAAO,OAAO,MAAM,MAAM,CAAC,CAAC;AAClD,SAAO,EAAE,0BAAO,QAAQ,eAAe,IAAI,GAAG,CAAC;AACjD,CAAC,EAAE,KAAK,0BAAO,QAAQ,OAAO,GAAG,0BAAO,cAAc,0BAAO,QAAQ,GAAG,OAAO","sourcesContent":["{\n  \"name\": \"dotenv\",\n  \"version\": \"16.3.1\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./lib/main.d.ts\",\n      \"require\": \"./lib/main.js\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"lint-readme\": \"standard-markdown\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap tests/*.js --100 -Rspec\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"funding\": \"https://github.com/motdotla/dotenv?sponsor=1\",\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@definitelytyped/dtslint\": \"^0.0.133\",\n    \"@types/node\": \"^18.11.3\",\n    \"decache\": \"^4.6.1\",\n    \"sinon\": \"^14.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"standard-markdown\": \"^7.1.0\",\n    \"standard-version\": \"^9.5.0\",\n    \"tap\": \"^16.3.0\",\n    \"tar\": \"^6.1.11\",\n    \"typescript\": \"^4.8.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"browser\": {\n    \"fs\": false\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    throw new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenv.org/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      throw new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development')\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    throw new Error('INVALID_DOTENV_KEY: Missing key part')\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    throw new Error('INVALID_DOTENV_KEY: Missing environment part')\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n\n  if (options && options.path && options.path.length > 0) {\n    dotenvPath = options.path\n  }\n\n  // Locate .env.vault\n  return dotenvPath.endsWith('.vault') ? dotenvPath : `${dotenvPath}.vault`\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    let processEnv = process.env\n    if (options && options.processEnv != null) {\n      processEnv = options.processEnv\n    }\n\n    DotenvModule.populate(processEnv, parsed, options)\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _debug(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  const vaultPath = _vaultPath(options)\n\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!fs.existsSync(vaultPath)) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.slice(0, 12)\n  const authTag = ciphertext.slice(-16)\n  ciphertext = ciphertext.slice(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const msg = 'INVALID_DOTENV_KEY: It must be 64 characters long (or more)'\n      throw new Error(msg)\n    } else if (decryptionFailed) {\n      const msg = 'DECRYPTION_FAILED: Please check your DOTENV_KEY'\n      throw new Error(msg)\n    } else {\n      console.error('Error: ', error.code)\n      console.error('Error: ', error.message)\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    throw new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n",null,null,null,null,null,"'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","module.exports = require('./lib/tunnel');\n","module.exports = {\n  kClose: Symbol('close'),\n  kDestroy: Symbol('destroy'),\n  kDispatch: Symbol('dispatch'),\n  kUrl: Symbol('url'),\n  kWriting: Symbol('writing'),\n  kResuming: Symbol('resuming'),\n  kQueue: Symbol('queue'),\n  kConnect: Symbol('connect'),\n  kConnecting: Symbol('connecting'),\n  kHeadersList: Symbol('headers list'),\n  kKeepAliveDefaultTimeout: Symbol('default keep alive timeout'),\n  kKeepAliveMaxTimeout: Symbol('max keep alive timeout'),\n  kKeepAliveTimeoutThreshold: Symbol('keep alive timeout threshold'),\n  kKeepAliveTimeoutValue: Symbol('keep alive timeout'),\n  kKeepAlive: Symbol('keep alive'),\n  kHeadersTimeout: Symbol('headers timeout'),\n  kBodyTimeout: Symbol('body timeout'),\n  kServerName: Symbol('server name'),\n  kLocalAddress: Symbol('local address'),\n  kHost: Symbol('host'),\n  kNoRef: Symbol('no ref'),\n  kBodyUsed: Symbol('used'),\n  kRunning: Symbol('running'),\n  kBlocking: Symbol('blocking'),\n  kPending: Symbol('pending'),\n  kSize: Symbol('size'),\n  kBusy: Symbol('busy'),\n  kQueued: Symbol('queued'),\n  kFree: Symbol('free'),\n  kConnected: Symbol('connected'),\n  kClosed: Symbol('closed'),\n  kNeedDrain: Symbol('need drain'),\n  kReset: Symbol('reset'),\n  kDestroyed: Symbol.for('nodejs.stream.destroyed'),\n  kMaxHeadersSize: Symbol('max headers size'),\n  kRunningIdx: Symbol('running index'),\n  kPendingIdx: Symbol('pending index'),\n  kError: Symbol('error'),\n  kClients: Symbol('clients'),\n  kClient: Symbol('client'),\n  kParser: Symbol('parser'),\n  kOnDestroyed: Symbol('destroy callbacks'),\n  kPipelining: Symbol('pipelining'),\n  kSocket: Symbol('socket'),\n  kHostHeader: Symbol('host header'),\n  kConnector: Symbol('connector'),\n  kStrictContentLength: Symbol('strict content length'),\n  kMaxRedirections: Symbol('maxRedirections'),\n  kMaxRequests: Symbol('maxRequestsPerClient'),\n  kProxy: Symbol('proxy agent options'),\n  kCounter: Symbol('socket request counter'),\n  kInterceptors: Symbol('dispatch interceptors'),\n  kMaxResponseSize: Symbol('max response size'),\n  kHTTP2Session: Symbol('http2Session'),\n  kHTTP2SessionState: Symbol('http2Session state'),\n  kHTTP2BuildRequest: Symbol('http2 build request'),\n  kHTTP1BuildRequest: Symbol('http1 build request'),\n  kHTTP2CopyHeaders: Symbol('http2 copy headers'),\n  kHTTPConnVersion: Symbol('http connection version')\n}\n","'use strict'\n\nclass UndiciError extends Error {\n  constructor (message) {\n    super(message)\n    this.name = 'UndiciError'\n    this.code = 'UND_ERR'\n  }\n}\n\nclass ConnectTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ConnectTimeoutError)\n    this.name = 'ConnectTimeoutError'\n    this.message = message || 'Connect Timeout Error'\n    this.code = 'UND_ERR_CONNECT_TIMEOUT'\n  }\n}\n\nclass HeadersTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, HeadersTimeoutError)\n    this.name = 'HeadersTimeoutError'\n    this.message = message || 'Headers Timeout Error'\n    this.code = 'UND_ERR_HEADERS_TIMEOUT'\n  }\n}\n\nclass HeadersOverflowError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, HeadersOverflowError)\n    this.name = 'HeadersOverflowError'\n    this.message = message || 'Headers Overflow Error'\n    this.code = 'UND_ERR_HEADERS_OVERFLOW'\n  }\n}\n\nclass BodyTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, BodyTimeoutError)\n    this.name = 'BodyTimeoutError'\n    this.message = message || 'Body Timeout Error'\n    this.code = 'UND_ERR_BODY_TIMEOUT'\n  }\n}\n\nclass ResponseStatusCodeError extends UndiciError {\n  constructor (message, statusCode, headers, body) {\n    super(message)\n    Error.captureStackTrace(this, ResponseStatusCodeError)\n    this.name = 'ResponseStatusCodeError'\n    this.message = message || 'Response Status Code Error'\n    this.code = 'UND_ERR_RESPONSE_STATUS_CODE'\n    this.body = body\n    this.status = statusCode\n    this.statusCode = statusCode\n    this.headers = headers\n  }\n}\n\nclass InvalidArgumentError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, InvalidArgumentError)\n    this.name = 'InvalidArgumentError'\n    this.message = message || 'Invalid Argument Error'\n    this.code = 'UND_ERR_INVALID_ARG'\n  }\n}\n\nclass InvalidReturnValueError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, InvalidReturnValueError)\n    this.name = 'InvalidReturnValueError'\n    this.message = message || 'Invalid Return Value Error'\n    this.code = 'UND_ERR_INVALID_RETURN_VALUE'\n  }\n}\n\nclass RequestAbortedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, RequestAbortedError)\n    this.name = 'AbortError'\n    this.message = message || 'Request aborted'\n    this.code = 'UND_ERR_ABORTED'\n  }\n}\n\nclass InformationalError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, InformationalError)\n    this.name = 'InformationalError'\n    this.message = message || 'Request information'\n    this.code = 'UND_ERR_INFO'\n  }\n}\n\nclass RequestContentLengthMismatchError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, RequestContentLengthMismatchError)\n    this.name = 'RequestContentLengthMismatchError'\n    this.message = message || 'Request body length does not match content-length header'\n    this.code = 'UND_ERR_REQ_CONTENT_LENGTH_MISMATCH'\n  }\n}\n\nclass ResponseContentLengthMismatchError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ResponseContentLengthMismatchError)\n    this.name = 'ResponseContentLengthMismatchError'\n    this.message = message || 'Response body length does not match content-length header'\n    this.code = 'UND_ERR_RES_CONTENT_LENGTH_MISMATCH'\n  }\n}\n\nclass ClientDestroyedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ClientDestroyedError)\n    this.name = 'ClientDestroyedError'\n    this.message = message || 'The client is destroyed'\n    this.code = 'UND_ERR_DESTROYED'\n  }\n}\n\nclass ClientClosedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ClientClosedError)\n    this.name = 'ClientClosedError'\n    this.message = message || 'The client is closed'\n    this.code = 'UND_ERR_CLOSED'\n  }\n}\n\nclass SocketError extends UndiciError {\n  constructor (message, socket) {\n    super(message)\n    Error.captureStackTrace(this, SocketError)\n    this.name = 'SocketError'\n    this.message = message || 'Socket error'\n    this.code = 'UND_ERR_SOCKET'\n    this.socket = socket\n  }\n}\n\nclass NotSupportedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, NotSupportedError)\n    this.name = 'NotSupportedError'\n    this.message = message || 'Not supported error'\n    this.code = 'UND_ERR_NOT_SUPPORTED'\n  }\n}\n\nclass BalancedPoolMissingUpstreamError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, NotSupportedError)\n    this.name = 'MissingUpstreamError'\n    this.message = message || 'No upstream has been added to the BalancedPool'\n    this.code = 'UND_ERR_BPL_MISSING_UPSTREAM'\n  }\n}\n\nclass HTTPParserError extends Error {\n  constructor (message, code, data) {\n    super(message)\n    Error.captureStackTrace(this, HTTPParserError)\n    this.name = 'HTTPParserError'\n    this.code = code ? `HPE_${code}` : undefined\n    this.data = data ? data.toString() : undefined\n  }\n}\n\nclass ResponseExceededMaxSizeError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ResponseExceededMaxSizeError)\n    this.name = 'ResponseExceededMaxSizeError'\n    this.message = message || 'Response content exceeded max size'\n    this.code = 'UND_ERR_RES_EXCEEDED_MAX_SIZE'\n  }\n}\n\nmodule.exports = {\n  HTTPParserError,\n  UndiciError,\n  HeadersTimeoutError,\n  HeadersOverflowError,\n  BodyTimeoutError,\n  RequestContentLengthMismatchError,\n  ConnectTimeoutError,\n  ResponseStatusCodeError,\n  InvalidArgumentError,\n  InvalidReturnValueError,\n  RequestAbortedError,\n  ClientDestroyedError,\n  ClientClosedError,\n  InformationalError,\n  SocketError,\n  NotSupportedError,\n  ResponseContentLengthMismatchError,\n  BalancedPoolMissingUpstreamError,\n  ResponseExceededMaxSizeError\n}\n","'use strict'\n\nconst assert = require('assert')\nconst { kDestroyed, kBodyUsed } = require('./symbols')\nconst { IncomingMessage } = require('http')\nconst stream = require('stream')\nconst net = require('net')\nconst { InvalidArgumentError } = require('./errors')\nconst { Blob } = require('buffer')\nconst nodeUtil = require('util')\nconst { stringify } = require('querystring')\n\nconst [nodeMajor, nodeMinor] = process.versions.node.split('.').map(v => Number(v))\n\nfunction nop () {}\n\nfunction isStream (obj) {\n  return obj && typeof obj === 'object' && typeof obj.pipe === 'function' && typeof obj.on === 'function'\n}\n\n// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)\nfunction isBlobLike (object) {\n  return (Blob && object instanceof Blob) || (\n    object &&\n    typeof object === 'object' &&\n    (typeof object.stream === 'function' ||\n      typeof object.arrayBuffer === 'function') &&\n    /^(Blob|File)$/.test(object[Symbol.toStringTag])\n  )\n}\n\nfunction buildURL (url, queryParams) {\n  if (url.includes('?') || url.includes('#')) {\n    throw new Error('Query params cannot be passed when url already contains \"?\" or \"#\".')\n  }\n\n  const stringified = stringify(queryParams)\n\n  if (stringified) {\n    url += '?' + stringified\n  }\n\n  return url\n}\n\nfunction parseURL (url) {\n  if (typeof url === 'string') {\n    url = new URL(url)\n\n    if (!/^https?:/.test(url.origin || url.protocol)) {\n      throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n    }\n\n    return url\n  }\n\n  if (!url || typeof url !== 'object') {\n    throw new InvalidArgumentError('Invalid URL: The URL argument must be a non-null object.')\n  }\n\n  if (!/^https?:/.test(url.origin || url.protocol)) {\n    throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n  }\n\n  if (!(url instanceof URL)) {\n    if (url.port != null && url.port !== '' && !Number.isFinite(parseInt(url.port))) {\n      throw new InvalidArgumentError('Invalid URL: port must be a valid integer or a string representation of an integer.')\n    }\n\n    if (url.path != null && typeof url.path !== 'string') {\n      throw new InvalidArgumentError('Invalid URL path: the path must be a string or null/undefined.')\n    }\n\n    if (url.pathname != null && typeof url.pathname !== 'string') {\n      throw new InvalidArgumentError('Invalid URL pathname: the pathname must be a string or null/undefined.')\n    }\n\n    if (url.hostname != null && typeof url.hostname !== 'string') {\n      throw new InvalidArgumentError('Invalid URL hostname: the hostname must be a string or null/undefined.')\n    }\n\n    if (url.origin != null && typeof url.origin !== 'string') {\n      throw new InvalidArgumentError('Invalid URL origin: the origin must be a string or null/undefined.')\n    }\n\n    const port = url.port != null\n      ? url.port\n      : (url.protocol === 'https:' ? 443 : 80)\n    let origin = url.origin != null\n      ? url.origin\n      : `${url.protocol}//${url.hostname}:${port}`\n    let path = url.path != null\n      ? url.path\n      : `${url.pathname || ''}${url.search || ''}`\n\n    if (origin.endsWith('/')) {\n      origin = origin.substring(0, origin.length - 1)\n    }\n\n    if (path && !path.startsWith('/')) {\n      path = `/${path}`\n    }\n    // new URL(path, origin) is unsafe when `path` contains an absolute URL\n    // From https://developer.mozilla.org/en-US/docs/Web/API/URL/URL:\n    // If first parameter is a relative URL, second param is required, and will be used as the base URL.\n    // If first parameter is an absolute URL, a given second param will be ignored.\n    url = new URL(origin + path)\n  }\n\n  return url\n}\n\nfunction parseOrigin (url) {\n  url = parseURL(url)\n\n  if (url.pathname !== '/' || url.search || url.hash) {\n    throw new InvalidArgumentError('invalid url')\n  }\n\n  return url\n}\n\nfunction getHostname (host) {\n  if (host[0] === '[') {\n    const idx = host.indexOf(']')\n\n    assert(idx !== -1)\n    return host.substr(1, idx - 1)\n  }\n\n  const idx = host.indexOf(':')\n  if (idx === -1) return host\n\n  return host.substr(0, idx)\n}\n\n// IP addresses are not valid server names per RFC6066\n// > Currently, the only server names supported are DNS hostnames\nfunction getServerName (host) {\n  if (!host) {\n    return null\n  }\n\n  assert.strictEqual(typeof host, 'string')\n\n  const servername = getHostname(host)\n  if (net.isIP(servername)) {\n    return ''\n  }\n\n  return servername\n}\n\nfunction deepClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction isAsyncIterable (obj) {\n  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function')\n}\n\nfunction isIterable (obj) {\n  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'))\n}\n\nfunction bodyLength (body) {\n  if (body == null) {\n    return 0\n  } else if (isStream(body)) {\n    const state = body._readableState\n    return state && state.objectMode === false && state.ended === true && Number.isFinite(state.length)\n      ? state.length\n      : null\n  } else if (isBlobLike(body)) {\n    return body.size != null ? body.size : null\n  } else if (isBuffer(body)) {\n    return body.byteLength\n  }\n\n  return null\n}\n\nfunction isDestroyed (stream) {\n  return !stream || !!(stream.destroyed || stream[kDestroyed])\n}\n\nfunction isReadableAborted (stream) {\n  const state = stream && stream._readableState\n  return isDestroyed(stream) && state && !state.endEmitted\n}\n\nfunction destroy (stream, err) {\n  if (stream == null || !isStream(stream) || isDestroyed(stream)) {\n    return\n  }\n\n  if (typeof stream.destroy === 'function') {\n    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {\n      // See: https://github.com/nodejs/node/pull/38505/files\n      stream.socket = null\n    }\n\n    stream.destroy(err)\n  } else if (err) {\n    process.nextTick((stream, err) => {\n      stream.emit('error', err)\n    }, stream, err)\n  }\n\n  if (stream.destroyed !== true) {\n    stream[kDestroyed] = true\n  }\n}\n\nconst KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/\nfunction parseKeepAliveTimeout (val) {\n  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR)\n  return m ? parseInt(m[1], 10) * 1000 : null\n}\n\nfunction parseHeaders (headers, obj = {}) {\n  // For H2 support\n  if (!Array.isArray(headers)) return headers\n\n  for (let i = 0; i < headers.length; i += 2) {\n    const key = headers[i].toString().toLowerCase()\n    let val = obj[key]\n\n    if (!val) {\n      if (Array.isArray(headers[i + 1])) {\n        obj[key] = headers[i + 1]\n      } else {\n        obj[key] = headers[i + 1].toString('utf8')\n      }\n    } else {\n      if (!Array.isArray(val)) {\n        val = [val]\n        obj[key] = val\n      }\n      val.push(headers[i + 1].toString('utf8'))\n    }\n  }\n\n  // See https://github.com/nodejs/node/pull/46528\n  if ('content-length' in obj && 'content-disposition' in obj) {\n    obj['content-disposition'] = Buffer.from(obj['content-disposition']).toString('latin1')\n  }\n\n  return obj\n}\n\nfunction parseRawHeaders (headers) {\n  const ret = []\n  let hasContentLength = false\n  let contentDispositionIdx = -1\n\n  for (let n = 0; n < headers.length; n += 2) {\n    const key = headers[n + 0].toString()\n    const val = headers[n + 1].toString('utf8')\n\n    if (key.length === 14 && (key === 'content-length' || key.toLowerCase() === 'content-length')) {\n      ret.push(key, val)\n      hasContentLength = true\n    } else if (key.length === 19 && (key === 'content-disposition' || key.toLowerCase() === 'content-disposition')) {\n      contentDispositionIdx = ret.push(key, val) - 1\n    } else {\n      ret.push(key, val)\n    }\n  }\n\n  // See https://github.com/nodejs/node/pull/46528\n  if (hasContentLength && contentDispositionIdx !== -1) {\n    ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString('latin1')\n  }\n\n  return ret\n}\n\nfunction isBuffer (buffer) {\n  // See, https://github.com/mcollina/undici/pull/319\n  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer)\n}\n\nfunction validateHandler (handler, method, upgrade) {\n  if (!handler || typeof handler !== 'object') {\n    throw new InvalidArgumentError('handler must be an object')\n  }\n\n  if (typeof handler.onConnect !== 'function') {\n    throw new InvalidArgumentError('invalid onConnect method')\n  }\n\n  if (typeof handler.onError !== 'function') {\n    throw new InvalidArgumentError('invalid onError method')\n  }\n\n  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {\n    throw new InvalidArgumentError('invalid onBodySent method')\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    if (typeof handler.onUpgrade !== 'function') {\n      throw new InvalidArgumentError('invalid onUpgrade method')\n    }\n  } else {\n    if (typeof handler.onHeaders !== 'function') {\n      throw new InvalidArgumentError('invalid onHeaders method')\n    }\n\n    if (typeof handler.onData !== 'function') {\n      throw new InvalidArgumentError('invalid onData method')\n    }\n\n    if (typeof handler.onComplete !== 'function') {\n      throw new InvalidArgumentError('invalid onComplete method')\n    }\n  }\n}\n\n// A body is disturbed if it has been read from and it cannot\n// be re-used without losing state or data.\nfunction isDisturbed (body) {\n  return !!(body && (\n    stream.isDisturbed\n      ? stream.isDisturbed(body) || body[kBodyUsed] // TODO (fix): Why is body[kBodyUsed] needed?\n      : body[kBodyUsed] ||\n        body.readableDidRead ||\n        (body._readableState && body._readableState.dataEmitted) ||\n        isReadableAborted(body)\n  ))\n}\n\nfunction isErrored (body) {\n  return !!(body && (\n    stream.isErrored\n      ? stream.isErrored(body)\n      : /state: 'errored'/.test(nodeUtil.inspect(body)\n      )))\n}\n\nfunction isReadable (body) {\n  return !!(body && (\n    stream.isReadable\n      ? stream.isReadable(body)\n      : /state: 'readable'/.test(nodeUtil.inspect(body)\n      )))\n}\n\nfunction getSocketInfo (socket) {\n  return {\n    localAddress: socket.localAddress,\n    localPort: socket.localPort,\n    remoteAddress: socket.remoteAddress,\n    remotePort: socket.remotePort,\n    remoteFamily: socket.remoteFamily,\n    timeout: socket.timeout,\n    bytesWritten: socket.bytesWritten,\n    bytesRead: socket.bytesRead\n  }\n}\n\nasync function * convertIterableToBuffer (iterable) {\n  for await (const chunk of iterable) {\n    yield Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk)\n  }\n}\n\nlet ReadableStream\nfunction ReadableStreamFrom (iterable) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  if (ReadableStream.from) {\n    return ReadableStream.from(convertIterableToBuffer(iterable))\n  }\n\n  let iterator\n  return new ReadableStream(\n    {\n      async start () {\n        iterator = iterable[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { done, value } = await iterator.next()\n        if (done) {\n          queueMicrotask(() => {\n            controller.close()\n          })\n        } else {\n          const buf = Buffer.isBuffer(value) ? value : Buffer.from(value)\n          controller.enqueue(new Uint8Array(buf))\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      }\n    },\n    0\n  )\n}\n\n// The chunk should be a FormData instance and contains\n// all the required methods.\nfunction isFormDataLike (object) {\n  return (\n    object &&\n    typeof object === 'object' &&\n    typeof object.append === 'function' &&\n    typeof object.delete === 'function' &&\n    typeof object.get === 'function' &&\n    typeof object.getAll === 'function' &&\n    typeof object.has === 'function' &&\n    typeof object.set === 'function' &&\n    object[Symbol.toStringTag] === 'FormData'\n  )\n}\n\nfunction throwIfAborted (signal) {\n  if (!signal) { return }\n  if (typeof signal.throwIfAborted === 'function') {\n    signal.throwIfAborted()\n  } else {\n    if (signal.aborted) {\n      // DOMException not available < v17.0.0\n      const err = new Error('The operation was aborted')\n      err.name = 'AbortError'\n      throw err\n    }\n  }\n}\n\nlet events\nfunction addAbortListener (signal, listener) {\n  if (typeof Symbol.dispose === 'symbol') {\n    if (!events) {\n      events = require('events')\n    }\n    if (typeof events.addAbortListener === 'function' && 'aborted' in signal) {\n      return events.addAbortListener(signal, listener)\n    }\n  }\n  if ('addEventListener' in signal) {\n    signal.addEventListener('abort', listener, { once: true })\n    return () => signal.removeEventListener('abort', listener)\n  }\n  signal.addListener('abort', listener)\n  return () => signal.removeListener('abort', listener)\n}\n\nconst hasToWellFormed = !!String.prototype.toWellFormed\n\n/**\n * @param {string} val\n */\nfunction toUSVString (val) {\n  if (hasToWellFormed) {\n    return `${val}`.toWellFormed()\n  } else if (nodeUtil.toUSVString) {\n    return nodeUtil.toUSVString(val)\n  }\n\n  return `${val}`\n}\n\nconst kEnumerableProperty = Object.create(null)\nkEnumerableProperty.enumerable = true\n\nmodule.exports = {\n  kEnumerableProperty,\n  nop,\n  isDisturbed,\n  isErrored,\n  isReadable,\n  toUSVString,\n  isReadableAborted,\n  isBlobLike,\n  parseOrigin,\n  parseURL,\n  getServerName,\n  isStream,\n  isIterable,\n  isAsyncIterable,\n  isDestroyed,\n  parseRawHeaders,\n  parseHeaders,\n  parseKeepAliveTimeout,\n  destroy,\n  bodyLength,\n  deepClone,\n  ReadableStreamFrom,\n  isBuffer,\n  validateHandler,\n  getSocketInfo,\n  isFormDataLike,\n  buildURL,\n  throwIfAborted,\n  addAbortListener,\n  nodeMajor,\n  nodeMinor,\n  nodeHasAutoSelectFamily: nodeMajor > 18 || (nodeMajor === 18 && nodeMinor >= 13)\n}\n","'use strict'\n\nlet fastNow = Date.now()\nlet fastNowTimeout\n\nconst fastTimers = []\n\nfunction onTimeout () {\n  fastNow = Date.now()\n\n  let len = fastTimers.length\n  let idx = 0\n  while (idx < len) {\n    const timer = fastTimers[idx]\n\n    if (timer.state === 0) {\n      timer.state = fastNow + timer.delay\n    } else if (timer.state > 0 && fastNow >= timer.state) {\n      timer.state = -1\n      timer.callback(timer.opaque)\n    }\n\n    if (timer.state === -1) {\n      timer.state = -2\n      if (idx !== len - 1) {\n        fastTimers[idx] = fastTimers.pop()\n      } else {\n        fastTimers.pop()\n      }\n      len -= 1\n    } else {\n      idx += 1\n    }\n  }\n\n  if (fastTimers.length > 0) {\n    refreshTimeout()\n  }\n}\n\nfunction refreshTimeout () {\n  if (fastNowTimeout && fastNowTimeout.refresh) {\n    fastNowTimeout.refresh()\n  } else {\n    clearTimeout(fastNowTimeout)\n    fastNowTimeout = setTimeout(onTimeout, 1e3)\n    if (fastNowTimeout.unref) {\n      fastNowTimeout.unref()\n    }\n  }\n}\n\nclass Timeout {\n  constructor (callback, delay, opaque) {\n    this.callback = callback\n    this.delay = delay\n    this.opaque = opaque\n\n    //  -2 not in timer list\n    //  -1 in timer list but inactive\n    //   0 in timer list waiting for time\n    // > 0 in timer list waiting for time to expire\n    this.state = -2\n\n    this.refresh()\n  }\n\n  refresh () {\n    if (this.state === -2) {\n      fastTimers.push(this)\n      if (!fastNowTimeout || fastTimers.length === 1) {\n        refreshTimeout()\n      }\n    }\n\n    this.state = 0\n  }\n\n  clear () {\n    this.state = -1\n  }\n}\n\nmodule.exports = {\n  setTimeout (callback, delay, opaque) {\n    return delay < 1e3\n      ? setTimeout(callback, delay, opaque)\n      : new Timeout(callback, delay, opaque)\n  },\n  clearTimeout (timeout) {\n    if (timeout instanceof Timeout) {\n      timeout.clear()\n    } else {\n      clearTimeout(timeout)\n    }\n  }\n}\n","'use strict'\n\n/**\n * Copyright Brian White. All rights reserved.\n *\n * @see https://github.com/mscdex/streamsearch\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * Based heavily on the Streaming Boyer-Moore-Horspool C++ implementation\n * by Hongli Lai at: https://github.com/FooBarWidget/boyer-moore-horspool\n */\nconst EventEmitter = require('node:events').EventEmitter\nconst inherits = require('node:util').inherits\n\nfunction SBMH (needle) {\n  if (typeof needle === 'string') {\n    needle = Buffer.from(needle)\n  }\n\n  if (!Buffer.isBuffer(needle)) {\n    throw new TypeError('The needle has to be a String or a Buffer.')\n  }\n\n  const needleLength = needle.length\n\n  if (needleLength === 0) {\n    throw new Error('The needle cannot be an empty String/Buffer.')\n  }\n\n  if (needleLength > 256) {\n    throw new Error('The needle cannot have a length bigger than 256.')\n  }\n\n  this.maxMatches = Infinity\n  this.matches = 0\n\n  this._occ = new Array(256)\n    .fill(needleLength) // Initialize occurrence table.\n  this._lookbehind_size = 0\n  this._needle = needle\n  this._bufpos = 0\n\n  this._lookbehind = Buffer.alloc(needleLength)\n\n  // Populate occurrence table with analysis of the needle,\n  // ignoring last letter.\n  for (var i = 0; i < needleLength - 1; ++i) { // eslint-disable-line no-var\n    this._occ[needle[i]] = needleLength - 1 - i\n  }\n}\ninherits(SBMH, EventEmitter)\n\nSBMH.prototype.reset = function () {\n  this._lookbehind_size = 0\n  this.matches = 0\n  this._bufpos = 0\n}\n\nSBMH.prototype.push = function (chunk, pos) {\n  if (!Buffer.isBuffer(chunk)) {\n    chunk = Buffer.from(chunk, 'binary')\n  }\n  const chlen = chunk.length\n  this._bufpos = pos || 0\n  let r\n  while (r !== chlen && this.matches < this.maxMatches) { r = this._sbmh_feed(chunk) }\n  return r\n}\n\nSBMH.prototype._sbmh_feed = function (data) {\n  const len = data.length\n  const needle = this._needle\n  const needleLength = needle.length\n  const lastNeedleChar = needle[needleLength - 1]\n\n  // Positive: points to a position in `data`\n  //           pos == 3 points to data[3]\n  // Negative: points to a position in the lookbehind buffer\n  //           pos == -2 points to lookbehind[lookbehind_size - 2]\n  let pos = -this._lookbehind_size\n  let ch\n\n  if (pos < 0) {\n    // Lookbehind buffer is not empty. Perform Boyer-Moore-Horspool\n    // search with character lookup code that considers both the\n    // lookbehind buffer and the current round's haystack data.\n    //\n    // Loop until\n    //   there is a match.\n    // or until\n    //   we've moved past the position that requires the\n    //   lookbehind buffer. In this case we switch to the\n    //   optimized loop.\n    // or until\n    //   the character to look at lies outside the haystack.\n    while (pos < 0 && pos <= len - needleLength) {\n      ch = this._sbmh_lookup_char(data, pos + needleLength - 1)\n\n      if (\n        ch === lastNeedleChar &&\n        this._sbmh_memcmp(data, pos, needleLength - 1)\n      ) {\n        this._lookbehind_size = 0\n        ++this.matches\n        this.emit('info', true)\n\n        return (this._bufpos = pos + needleLength)\n      }\n      pos += this._occ[ch]\n    }\n\n    // No match.\n\n    if (pos < 0) {\n      // There's too few data for Boyer-Moore-Horspool to run,\n      // so let's use a different algorithm to skip as much as\n      // we can.\n      // Forward pos until\n      //   the trailing part of lookbehind + data\n      //   looks like the beginning of the needle\n      // or until\n      //   pos == 0\n      while (pos < 0 && !this._sbmh_memcmp(data, pos, len - pos)) { ++pos }\n    }\n\n    if (pos >= 0) {\n      // Discard lookbehind buffer.\n      this.emit('info', false, this._lookbehind, 0, this._lookbehind_size)\n      this._lookbehind_size = 0\n    } else {\n      // Cut off part of the lookbehind buffer that has\n      // been processed and append the entire haystack\n      // into it.\n      const bytesToCutOff = this._lookbehind_size + pos\n      if (bytesToCutOff > 0) {\n        // The cut off data is guaranteed not to contain the needle.\n        this.emit('info', false, this._lookbehind, 0, bytesToCutOff)\n      }\n\n      this._lookbehind.copy(this._lookbehind, 0, bytesToCutOff,\n        this._lookbehind_size - bytesToCutOff)\n      this._lookbehind_size -= bytesToCutOff\n\n      data.copy(this._lookbehind, this._lookbehind_size)\n      this._lookbehind_size += len\n\n      this._bufpos = len\n      return len\n    }\n  }\n\n  pos += (pos >= 0) * this._bufpos\n\n  // Lookbehind buffer is now empty. We only need to check if the\n  // needle is in the haystack.\n  if (data.indexOf(needle, pos) !== -1) {\n    pos = data.indexOf(needle, pos)\n    ++this.matches\n    if (pos > 0) { this.emit('info', true, data, this._bufpos, pos) } else { this.emit('info', true) }\n\n    return (this._bufpos = pos + needleLength)\n  } else {\n    pos = len - needleLength\n  }\n\n  // There was no match. If there's trailing haystack data that we cannot\n  // match yet using the Boyer-Moore-Horspool algorithm (because the trailing\n  // data is less than the needle size) then match using a modified\n  // algorithm that starts matching from the beginning instead of the end.\n  // Whatever trailing data is left after running this algorithm is added to\n  // the lookbehind buffer.\n  while (\n    pos < len &&\n    (\n      data[pos] !== needle[0] ||\n      (\n        (Buffer.compare(\n          data.subarray(pos, pos + len - pos),\n          needle.subarray(0, len - pos)\n        ) !== 0)\n      )\n    )\n  ) {\n    ++pos\n  }\n  if (pos < len) {\n    data.copy(this._lookbehind, 0, pos, pos + (len - pos))\n    this._lookbehind_size = len - pos\n  }\n\n  // Everything until pos is guaranteed not to contain needle data.\n  if (pos > 0) { this.emit('info', false, data, this._bufpos, pos < len ? pos : len) }\n\n  this._bufpos = len\n  return len\n}\n\nSBMH.prototype._sbmh_lookup_char = function (data, pos) {\n  return (pos < 0)\n    ? this._lookbehind[this._lookbehind_size + pos]\n    : data[pos]\n}\n\nSBMH.prototype._sbmh_memcmp = function (data, pos, len) {\n  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var\n    if (this._sbmh_lookup_char(data, pos + i) !== this._needle[i]) { return false }\n  }\n  return true\n}\n\nmodule.exports = SBMH\n","'use strict'\n\nconst inherits = require('node:util').inherits\nconst ReadableStream = require('node:stream').Readable\n\nfunction PartStream (opts) {\n  ReadableStream.call(this, opts)\n}\ninherits(PartStream, ReadableStream)\n\nPartStream.prototype._read = function (n) {}\n\nmodule.exports = PartStream\n","'use strict'\n\nmodule.exports = function getLimit (limits, name, defaultLimit) {\n  if (\n    !limits ||\n    limits[name] === undefined ||\n    limits[name] === null\n  ) { return defaultLimit }\n\n  if (\n    typeof limits[name] !== 'number' ||\n    isNaN(limits[name])\n  ) { throw new TypeError('Limit ' + name + ' is not a valid number') }\n\n  return limits[name]\n}\n","'use strict'\n\nconst EventEmitter = require('node:events').EventEmitter\nconst inherits = require('node:util').inherits\nconst getLimit = require('../../../lib/utils/getLimit')\n\nconst StreamSearch = require('../../streamsearch/sbmh')\n\nconst B_DCRLF = Buffer.from('\\r\\n\\r\\n')\nconst RE_CRLF = /\\r\\n/g\nconst RE_HDR = /^([^:]+):[ \\t]?([\\x00-\\xFF]+)?$/ // eslint-disable-line no-control-regex\n\nfunction HeaderParser (cfg) {\n  EventEmitter.call(this)\n\n  cfg = cfg || {}\n  const self = this\n  this.nread = 0\n  this.maxed = false\n  this.npairs = 0\n  this.maxHeaderPairs = getLimit(cfg, 'maxHeaderPairs', 2000)\n  this.maxHeaderSize = getLimit(cfg, 'maxHeaderSize', 80 * 1024)\n  this.buffer = ''\n  this.header = {}\n  this.finished = false\n  this.ss = new StreamSearch(B_DCRLF)\n  this.ss.on('info', function (isMatch, data, start, end) {\n    if (data && !self.maxed) {\n      if (self.nread + end - start >= self.maxHeaderSize) {\n        end = self.maxHeaderSize - self.nread + start\n        self.nread = self.maxHeaderSize\n        self.maxed = true\n      } else { self.nread += (end - start) }\n\n      self.buffer += data.toString('binary', start, end)\n    }\n    if (isMatch) { self._finish() }\n  })\n}\ninherits(HeaderParser, EventEmitter)\n\nHeaderParser.prototype.push = function (data) {\n  const r = this.ss.push(data)\n  if (this.finished) { return r }\n}\n\nHeaderParser.prototype.reset = function () {\n  this.finished = false\n  this.buffer = ''\n  this.header = {}\n  this.ss.reset()\n}\n\nHeaderParser.prototype._finish = function () {\n  if (this.buffer) { this._parseHeader() }\n  this.ss.matches = this.ss.maxMatches\n  const header = this.header\n  this.header = {}\n  this.buffer = ''\n  this.finished = true\n  this.nread = this.npairs = 0\n  this.maxed = false\n  this.emit('header', header)\n}\n\nHeaderParser.prototype._parseHeader = function () {\n  if (this.npairs === this.maxHeaderPairs) { return }\n\n  const lines = this.buffer.split(RE_CRLF)\n  const len = lines.length\n  let m, h\n\n  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var\n    if (lines[i].length === 0) { continue }\n    if (lines[i][0] === '\\t' || lines[i][0] === ' ') {\n      // folded header content\n      // RFC2822 says to just remove the CRLF and not the whitespace following\n      // it, so we follow the RFC and include the leading whitespace ...\n      if (h) {\n        this.header[h][this.header[h].length - 1] += lines[i]\n        continue\n      }\n    }\n\n    const posColon = lines[i].indexOf(':')\n    if (\n      posColon === -1 ||\n      posColon === 0\n    ) {\n      return\n    }\n    m = RE_HDR.exec(lines[i])\n    h = m[1].toLowerCase()\n    this.header[h] = this.header[h] || []\n    this.header[h].push((m[2] || ''))\n    if (++this.npairs === this.maxHeaderPairs) { break }\n  }\n}\n\nmodule.exports = HeaderParser\n","'use strict'\n\nconst WritableStream = require('node:stream').Writable\nconst inherits = require('node:util').inherits\n\nconst StreamSearch = require('../../streamsearch/sbmh')\n\nconst PartStream = require('./PartStream')\nconst HeaderParser = require('./HeaderParser')\n\nconst DASH = 45\nconst B_ONEDASH = Buffer.from('-')\nconst B_CRLF = Buffer.from('\\r\\n')\nconst EMPTY_FN = function () {}\n\nfunction Dicer (cfg) {\n  if (!(this instanceof Dicer)) { return new Dicer(cfg) }\n  WritableStream.call(this, cfg)\n\n  if (!cfg || (!cfg.headerFirst && typeof cfg.boundary !== 'string')) { throw new TypeError('Boundary required') }\n\n  if (typeof cfg.boundary === 'string') { this.setBoundary(cfg.boundary) } else { this._bparser = undefined }\n\n  this._headerFirst = cfg.headerFirst\n\n  this._dashes = 0\n  this._parts = 0\n  this._finished = false\n  this._realFinish = false\n  this._isPreamble = true\n  this._justMatched = false\n  this._firstWrite = true\n  this._inHeader = true\n  this._part = undefined\n  this._cb = undefined\n  this._ignoreData = false\n  this._partOpts = { highWaterMark: cfg.partHwm }\n  this._pause = false\n\n  const self = this\n  this._hparser = new HeaderParser(cfg)\n  this._hparser.on('header', function (header) {\n    self._inHeader = false\n    self._part.emit('header', header)\n  })\n}\ninherits(Dicer, WritableStream)\n\nDicer.prototype.emit = function (ev) {\n  if (ev === 'finish' && !this._realFinish) {\n    if (!this._finished) {\n      const self = this\n      process.nextTick(function () {\n        self.emit('error', new Error('Unexpected end of multipart data'))\n        if (self._part && !self._ignoreData) {\n          const type = (self._isPreamble ? 'Preamble' : 'Part')\n          self._part.emit('error', new Error(type + ' terminated early due to unexpected end of multipart data'))\n          self._part.push(null)\n          process.nextTick(function () {\n            self._realFinish = true\n            self.emit('finish')\n            self._realFinish = false\n          })\n          return\n        }\n        self._realFinish = true\n        self.emit('finish')\n        self._realFinish = false\n      })\n    }\n  } else { WritableStream.prototype.emit.apply(this, arguments) }\n}\n\nDicer.prototype._write = function (data, encoding, cb) {\n  // ignore unexpected data (e.g. extra trailer data after finished)\n  if (!this._hparser && !this._bparser) { return cb() }\n\n  if (this._headerFirst && this._isPreamble) {\n    if (!this._part) {\n      this._part = new PartStream(this._partOpts)\n      if (this._events.preamble) { this.emit('preamble', this._part) } else { this._ignore() }\n    }\n    const r = this._hparser.push(data)\n    if (!this._inHeader && r !== undefined && r < data.length) { data = data.slice(r) } else { return cb() }\n  }\n\n  // allows for \"easier\" testing\n  if (this._firstWrite) {\n    this._bparser.push(B_CRLF)\n    this._firstWrite = false\n  }\n\n  this._bparser.push(data)\n\n  if (this._pause) { this._cb = cb } else { cb() }\n}\n\nDicer.prototype.reset = function () {\n  this._part = undefined\n  this._bparser = undefined\n  this._hparser = undefined\n}\n\nDicer.prototype.setBoundary = function (boundary) {\n  const self = this\n  this._bparser = new StreamSearch('\\r\\n--' + boundary)\n  this._bparser.on('info', function (isMatch, data, start, end) {\n    self._oninfo(isMatch, data, start, end)\n  })\n}\n\nDicer.prototype._ignore = function () {\n  if (this._part && !this._ignoreData) {\n    this._ignoreData = true\n    this._part.on('error', EMPTY_FN)\n    // we must perform some kind of read on the stream even though we are\n    // ignoring the data, otherwise node's Readable stream will not emit 'end'\n    // after pushing null to the stream\n    this._part.resume()\n  }\n}\n\nDicer.prototype._oninfo = function (isMatch, data, start, end) {\n  let buf; const self = this; let i = 0; let r; let shouldWriteMore = true\n\n  if (!this._part && this._justMatched && data) {\n    while (this._dashes < 2 && (start + i) < end) {\n      if (data[start + i] === DASH) {\n        ++i\n        ++this._dashes\n      } else {\n        if (this._dashes) { buf = B_ONEDASH }\n        this._dashes = 0\n        break\n      }\n    }\n    if (this._dashes === 2) {\n      if ((start + i) < end && this._events.trailer) { this.emit('trailer', data.slice(start + i, end)) }\n      this.reset()\n      this._finished = true\n      // no more parts will be added\n      if (self._parts === 0) {\n        self._realFinish = true\n        self.emit('finish')\n        self._realFinish = false\n      }\n    }\n    if (this._dashes) { return }\n  }\n  if (this._justMatched) { this._justMatched = false }\n  if (!this._part) {\n    this._part = new PartStream(this._partOpts)\n    this._part._read = function (n) {\n      self._unpause()\n    }\n    if (this._isPreamble && this._events.preamble) { this.emit('preamble', this._part) } else if (this._isPreamble !== true && this._events.part) { this.emit('part', this._part) } else { this._ignore() }\n    if (!this._isPreamble) { this._inHeader = true }\n  }\n  if (data && start < end && !this._ignoreData) {\n    if (this._isPreamble || !this._inHeader) {\n      if (buf) { shouldWriteMore = this._part.push(buf) }\n      shouldWriteMore = this._part.push(data.slice(start, end))\n      if (!shouldWriteMore) { this._pause = true }\n    } else if (!this._isPreamble && this._inHeader) {\n      if (buf) { this._hparser.push(buf) }\n      r = this._hparser.push(data.slice(start, end))\n      if (!this._inHeader && r !== undefined && r < end) { this._oninfo(false, data, start + r, end) }\n    }\n  }\n  if (isMatch) {\n    this._hparser.reset()\n    if (this._isPreamble) { this._isPreamble = false } else {\n      if (start !== end) {\n        ++this._parts\n        this._part.on('end', function () {\n          if (--self._parts === 0) {\n            if (self._finished) {\n              self._realFinish = true\n              self.emit('finish')\n              self._realFinish = false\n            } else {\n              self._unpause()\n            }\n          }\n        })\n      }\n    }\n    this._part.push(null)\n    this._part = undefined\n    this._ignoreData = false\n    this._justMatched = true\n    this._dashes = 0\n  }\n}\n\nDicer.prototype._unpause = function () {\n  if (!this._pause) { return }\n\n  this._pause = false\n  if (this._cb) {\n    const cb = this._cb\n    this._cb = undefined\n    cb()\n  }\n}\n\nmodule.exports = Dicer\n","'use strict'\n\n// Node has always utf-8\nconst utf8Decoder = new TextDecoder('utf-8')\nconst textDecoders = new Map([\n  ['utf-8', utf8Decoder],\n  ['utf8', utf8Decoder]\n])\n\nfunction decodeText (text, textEncoding, destEncoding) {\n  if (text) {\n    if (textDecoders.has(destEncoding)) {\n      try {\n        return textDecoders.get(destEncoding).decode(Buffer.from(text, textEncoding))\n      } catch (e) { }\n    } else {\n      try {\n        textDecoders.set(destEncoding, new TextDecoder(destEncoding))\n        return textDecoders.get(destEncoding).decode(Buffer.from(text, textEncoding))\n      } catch (e) { }\n    }\n  }\n  return text\n}\n\nmodule.exports = decodeText\n","'use strict'\n\nconst decodeText = require('./decodeText')\n\nconst RE_ENCODED = /%([a-fA-F0-9]{2})/g\n\nfunction encodedReplacer (match, byte) {\n  return String.fromCharCode(parseInt(byte, 16))\n}\n\nfunction parseParams (str) {\n  const res = []\n  let state = 'key'\n  let charset = ''\n  let inquote = false\n  let escaping = false\n  let p = 0\n  let tmp = ''\n\n  for (var i = 0, len = str.length; i < len; ++i) { // eslint-disable-line no-var\n    const char = str[i]\n    if (char === '\\\\' && inquote) {\n      if (escaping) { escaping = false } else {\n        escaping = true\n        continue\n      }\n    } else if (char === '\"') {\n      if (!escaping) {\n        if (inquote) {\n          inquote = false\n          state = 'key'\n        } else { inquote = true }\n        continue\n      } else { escaping = false }\n    } else {\n      if (escaping && inquote) { tmp += '\\\\' }\n      escaping = false\n      if ((state === 'charset' || state === 'lang') && char === \"'\") {\n        if (state === 'charset') {\n          state = 'lang'\n          charset = tmp.substring(1)\n        } else { state = 'value' }\n        tmp = ''\n        continue\n      } else if (state === 'key' &&\n        (char === '*' || char === '=') &&\n        res.length) {\n        if (char === '*') { state = 'charset' } else { state = 'value' }\n        res[p] = [tmp, undefined]\n        tmp = ''\n        continue\n      } else if (!inquote && char === ';') {\n        state = 'key'\n        if (charset) {\n          if (tmp.length) {\n            tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n              'binary',\n              charset)\n          }\n          charset = ''\n        } else if (tmp.length) {\n          tmp = decodeText(tmp, 'binary', 'utf8')\n        }\n        if (res[p] === undefined) { res[p] = tmp } else { res[p][1] = tmp }\n        tmp = ''\n        ++p\n        continue\n      } else if (!inquote && (char === ' ' || char === '\\t')) { continue }\n    }\n    tmp += char\n  }\n  if (charset && tmp.length) {\n    tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n      'binary',\n      charset)\n  } else if (tmp) {\n    tmp = decodeText(tmp, 'binary', 'utf8')\n  }\n\n  if (res[p] === undefined) {\n    if (tmp) { res[p] = tmp }\n  } else { res[p][1] = tmp }\n\n  return res\n}\n\nmodule.exports = parseParams\n","'use strict'\n\nmodule.exports = function basename (path) {\n  if (typeof path !== 'string') { return '' }\n  for (var i = path.length - 1; i >= 0; --i) { // eslint-disable-line no-var\n    switch (path.charCodeAt(i)) {\n      case 0x2F: // '/'\n      case 0x5C: // '\\'\n        path = path.slice(i + 1)\n        return (path === '..' || path === '.' ? '' : path)\n    }\n  }\n  return (path === '..' || path === '.' ? '' : path)\n}\n","'use strict'\n\n// TODO:\n//  * support 1 nested multipart level\n//    (see second multipart example here:\n//     http://www.w3.org/TR/html401/interact/forms.html#didx-multipartform-data)\n//  * support limits.fieldNameSize\n//     -- this will require modifications to utils.parseParams\n\nconst { Readable } = require('node:stream')\nconst { inherits } = require('node:util')\n\nconst Dicer = require('../../deps/dicer/lib/Dicer')\n\nconst parseParams = require('../utils/parseParams')\nconst decodeText = require('../utils/decodeText')\nconst basename = require('../utils/basename')\nconst getLimit = require('../utils/getLimit')\n\nconst RE_BOUNDARY = /^boundary$/i\nconst RE_FIELD = /^form-data$/i\nconst RE_CHARSET = /^charset$/i\nconst RE_FILENAME = /^filename$/i\nconst RE_NAME = /^name$/i\n\nMultipart.detect = /^multipart\\/form-data/i\nfunction Multipart (boy, cfg) {\n  let i\n  let len\n  const self = this\n  let boundary\n  const limits = cfg.limits\n  const isPartAFile = cfg.isPartAFile || ((fieldName, contentType, fileName) => (contentType === 'application/octet-stream' || fileName !== undefined))\n  const parsedConType = cfg.parsedConType || []\n  const defCharset = cfg.defCharset || 'utf8'\n  const preservePath = cfg.preservePath\n  const fileOpts = { highWaterMark: cfg.fileHwm }\n\n  for (i = 0, len = parsedConType.length; i < len; ++i) {\n    if (Array.isArray(parsedConType[i]) &&\n      RE_BOUNDARY.test(parsedConType[i][0])) {\n      boundary = parsedConType[i][1]\n      break\n    }\n  }\n\n  function checkFinished () {\n    if (nends === 0 && finished && !boy._done) {\n      finished = false\n      self.end()\n    }\n  }\n\n  if (typeof boundary !== 'string') { throw new Error('Multipart: Boundary not found') }\n\n  const fieldSizeLimit = getLimit(limits, 'fieldSize', 1 * 1024 * 1024)\n  const fileSizeLimit = getLimit(limits, 'fileSize', Infinity)\n  const filesLimit = getLimit(limits, 'files', Infinity)\n  const fieldsLimit = getLimit(limits, 'fields', Infinity)\n  const partsLimit = getLimit(limits, 'parts', Infinity)\n  const headerPairsLimit = getLimit(limits, 'headerPairs', 2000)\n  const headerSizeLimit = getLimit(limits, 'headerSize', 80 * 1024)\n\n  let nfiles = 0\n  let nfields = 0\n  let nends = 0\n  let curFile\n  let curField\n  let finished = false\n\n  this._needDrain = false\n  this._pause = false\n  this._cb = undefined\n  this._nparts = 0\n  this._boy = boy\n\n  const parserCfg = {\n    boundary,\n    maxHeaderPairs: headerPairsLimit,\n    maxHeaderSize: headerSizeLimit,\n    partHwm: fileOpts.highWaterMark,\n    highWaterMark: cfg.highWaterMark\n  }\n\n  this.parser = new Dicer(parserCfg)\n  this.parser.on('drain', function () {\n    self._needDrain = false\n    if (self._cb && !self._pause) {\n      const cb = self._cb\n      self._cb = undefined\n      cb()\n    }\n  }).on('part', function onPart (part) {\n    if (++self._nparts > partsLimit) {\n      self.parser.removeListener('part', onPart)\n      self.parser.on('part', skipPart)\n      boy.hitPartsLimit = true\n      boy.emit('partsLimit')\n      return skipPart(part)\n    }\n\n    // hack because streams2 _always_ doesn't emit 'end' until nextTick, so let\n    // us emit 'end' early since we know the part has ended if we are already\n    // seeing the next part\n    if (curField) {\n      const field = curField\n      field.emit('end')\n      field.removeAllListeners('end')\n    }\n\n    part.on('header', function (header) {\n      let contype\n      let fieldname\n      let parsed\n      let charset\n      let encoding\n      let filename\n      let nsize = 0\n\n      if (header['content-type']) {\n        parsed = parseParams(header['content-type'][0])\n        if (parsed[0]) {\n          contype = parsed[0].toLowerCase()\n          for (i = 0, len = parsed.length; i < len; ++i) {\n            if (RE_CHARSET.test(parsed[i][0])) {\n              charset = parsed[i][1].toLowerCase()\n              break\n            }\n          }\n        }\n      }\n\n      if (contype === undefined) { contype = 'text/plain' }\n      if (charset === undefined) { charset = defCharset }\n\n      if (header['content-disposition']) {\n        parsed = parseParams(header['content-disposition'][0])\n        if (!RE_FIELD.test(parsed[0])) { return skipPart(part) }\n        for (i = 0, len = parsed.length; i < len; ++i) {\n          if (RE_NAME.test(parsed[i][0])) {\n            fieldname = parsed[i][1]\n          } else if (RE_FILENAME.test(parsed[i][0])) {\n            filename = parsed[i][1]\n            if (!preservePath) { filename = basename(filename) }\n          }\n        }\n      } else { return skipPart(part) }\n\n      if (header['content-transfer-encoding']) { encoding = header['content-transfer-encoding'][0].toLowerCase() } else { encoding = '7bit' }\n\n      let onData,\n        onEnd\n\n      if (isPartAFile(fieldname, contype, filename)) {\n        // file/binary field\n        if (nfiles === filesLimit) {\n          if (!boy.hitFilesLimit) {\n            boy.hitFilesLimit = true\n            boy.emit('filesLimit')\n          }\n          return skipPart(part)\n        }\n\n        ++nfiles\n\n        if (!boy._events.file) {\n          self.parser._ignore()\n          return\n        }\n\n        ++nends\n        const file = new FileStream(fileOpts)\n        curFile = file\n        file.on('end', function () {\n          --nends\n          self._pause = false\n          checkFinished()\n          if (self._cb && !self._needDrain) {\n            const cb = self._cb\n            self._cb = undefined\n            cb()\n          }\n        })\n        file._read = function (n) {\n          if (!self._pause) { return }\n          self._pause = false\n          if (self._cb && !self._needDrain) {\n            const cb = self._cb\n            self._cb = undefined\n            cb()\n          }\n        }\n        boy.emit('file', fieldname, file, filename, encoding, contype)\n\n        onData = function (data) {\n          if ((nsize += data.length) > fileSizeLimit) {\n            const extralen = fileSizeLimit - nsize + data.length\n            if (extralen > 0) { file.push(data.slice(0, extralen)) }\n            file.truncated = true\n            file.bytesRead = fileSizeLimit\n            part.removeAllListeners('data')\n            file.emit('limit')\n            return\n          } else if (!file.push(data)) { self._pause = true }\n\n          file.bytesRead = nsize\n        }\n\n        onEnd = function () {\n          curFile = undefined\n          file.push(null)\n        }\n      } else {\n        // non-file field\n        if (nfields === fieldsLimit) {\n          if (!boy.hitFieldsLimit) {\n            boy.hitFieldsLimit = true\n            boy.emit('fieldsLimit')\n          }\n          return skipPart(part)\n        }\n\n        ++nfields\n        ++nends\n        let buffer = ''\n        let truncated = false\n        curField = part\n\n        onData = function (data) {\n          if ((nsize += data.length) > fieldSizeLimit) {\n            const extralen = (fieldSizeLimit - (nsize - data.length))\n            buffer += data.toString('binary', 0, extralen)\n            truncated = true\n            part.removeAllListeners('data')\n          } else { buffer += data.toString('binary') }\n        }\n\n        onEnd = function () {\n          curField = undefined\n          if (buffer.length) { buffer = decodeText(buffer, 'binary', charset) }\n          boy.emit('field', fieldname, buffer, false, truncated, encoding, contype)\n          --nends\n          checkFinished()\n        }\n      }\n\n      /* As of node@2efe4ab761666 (v0.10.29+/v0.11.14+), busboy had become\n         broken. Streams2/streams3 is a huge black box of confusion, but\n         somehow overriding the sync state seems to fix things again (and still\n         seems to work for previous node versions).\n      */\n      part._readableState.sync = false\n\n      part.on('data', onData)\n      part.on('end', onEnd)\n    }).on('error', function (err) {\n      if (curFile) { curFile.emit('error', err) }\n    })\n  }).on('error', function (err) {\n    boy.emit('error', err)\n  }).on('finish', function () {\n    finished = true\n    checkFinished()\n  })\n}\n\nMultipart.prototype.write = function (chunk, cb) {\n  const r = this.parser.write(chunk)\n  if (r && !this._pause) {\n    cb()\n  } else {\n    this._needDrain = !r\n    this._cb = cb\n  }\n}\n\nMultipart.prototype.end = function () {\n  const self = this\n\n  if (self.parser.writable) {\n    self.parser.end()\n  } else if (!self._boy._done) {\n    process.nextTick(function () {\n      self._boy._done = true\n      self._boy.emit('finish')\n    })\n  }\n}\n\nfunction skipPart (part) {\n  part.resume()\n}\n\nfunction FileStream (opts) {\n  Readable.call(this, opts)\n\n  this.bytesRead = 0\n\n  this.truncated = false\n}\n\ninherits(FileStream, Readable)\n\nFileStream.prototype._read = function (n) {}\n\nmodule.exports = Multipart\n","'use strict'\n\nconst RE_PLUS = /\\+/g\n\nconst HEX = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n]\n\nfunction Decoder () {\n  this.buffer = undefined\n}\nDecoder.prototype.write = function (str) {\n  // Replace '+' with ' ' before decoding\n  str = str.replace(RE_PLUS, ' ')\n  let res = ''\n  let i = 0; let p = 0; const len = str.length\n  for (; i < len; ++i) {\n    if (this.buffer !== undefined) {\n      if (!HEX[str.charCodeAt(i)]) {\n        res += '%' + this.buffer\n        this.buffer = undefined\n        --i // retry character\n      } else {\n        this.buffer += str[i]\n        ++p\n        if (this.buffer.length === 2) {\n          res += String.fromCharCode(parseInt(this.buffer, 16))\n          this.buffer = undefined\n        }\n      }\n    } else if (str[i] === '%') {\n      if (i > p) {\n        res += str.substring(p, i)\n        p = i\n      }\n      this.buffer = ''\n      ++p\n    }\n  }\n  if (p < len && this.buffer === undefined) { res += str.substring(p) }\n  return res\n}\nDecoder.prototype.reset = function () {\n  this.buffer = undefined\n}\n\nmodule.exports = Decoder\n","'use strict'\n\nconst Decoder = require('../utils/Decoder')\nconst decodeText = require('../utils/decodeText')\nconst getLimit = require('../utils/getLimit')\n\nconst RE_CHARSET = /^charset$/i\n\nUrlEncoded.detect = /^application\\/x-www-form-urlencoded/i\nfunction UrlEncoded (boy, cfg) {\n  const limits = cfg.limits\n  const parsedConType = cfg.parsedConType\n  this.boy = boy\n\n  this.fieldSizeLimit = getLimit(limits, 'fieldSize', 1 * 1024 * 1024)\n  this.fieldNameSizeLimit = getLimit(limits, 'fieldNameSize', 100)\n  this.fieldsLimit = getLimit(limits, 'fields', Infinity)\n\n  let charset\n  for (var i = 0, len = parsedConType.length; i < len; ++i) { // eslint-disable-line no-var\n    if (Array.isArray(parsedConType[i]) &&\n        RE_CHARSET.test(parsedConType[i][0])) {\n      charset = parsedConType[i][1].toLowerCase()\n      break\n    }\n  }\n\n  if (charset === undefined) { charset = cfg.defCharset || 'utf8' }\n\n  this.decoder = new Decoder()\n  this.charset = charset\n  this._fields = 0\n  this._state = 'key'\n  this._checkingBytes = true\n  this._bytesKey = 0\n  this._bytesVal = 0\n  this._key = ''\n  this._val = ''\n  this._keyTrunc = false\n  this._valTrunc = false\n  this._hitLimit = false\n}\n\nUrlEncoded.prototype.write = function (data, cb) {\n  if (this._fields === this.fieldsLimit) {\n    if (!this.boy.hitFieldsLimit) {\n      this.boy.hitFieldsLimit = true\n      this.boy.emit('fieldsLimit')\n    }\n    return cb()\n  }\n\n  let idxeq; let idxamp; let i; let p = 0; const len = data.length\n\n  while (p < len) {\n    if (this._state === 'key') {\n      idxeq = idxamp = undefined\n      for (i = p; i < len; ++i) {\n        if (!this._checkingBytes) { ++p }\n        if (data[i] === 0x3D/* = */) {\n          idxeq = i\n          break\n        } else if (data[i] === 0x26/* & */) {\n          idxamp = i\n          break\n        }\n        if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {\n          this._hitLimit = true\n          break\n        } else if (this._checkingBytes) { ++this._bytesKey }\n      }\n\n      if (idxeq !== undefined) {\n        // key with assignment\n        if (idxeq > p) { this._key += this.decoder.write(data.toString('binary', p, idxeq)) }\n        this._state = 'val'\n\n        this._hitLimit = false\n        this._checkingBytes = true\n        this._val = ''\n        this._bytesVal = 0\n        this._valTrunc = false\n        this.decoder.reset()\n\n        p = idxeq + 1\n      } else if (idxamp !== undefined) {\n        // key with no assignment\n        ++this._fields\n        let key; const keyTrunc = this._keyTrunc\n        if (idxamp > p) { key = (this._key += this.decoder.write(data.toString('binary', p, idxamp))) } else { key = this._key }\n\n        this._hitLimit = false\n        this._checkingBytes = true\n        this._key = ''\n        this._bytesKey = 0\n        this._keyTrunc = false\n        this.decoder.reset()\n\n        if (key.length) {\n          this.boy.emit('field', decodeText(key, 'binary', this.charset),\n            '',\n            keyTrunc,\n            false)\n        }\n\n        p = idxamp + 1\n        if (this._fields === this.fieldsLimit) { return cb() }\n      } else if (this._hitLimit) {\n        // we may not have hit the actual limit if there are encoded bytes...\n        if (i > p) { this._key += this.decoder.write(data.toString('binary', p, i)) }\n        p = i\n        if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {\n          // yep, we actually did hit the limit\n          this._checkingBytes = false\n          this._keyTrunc = true\n        }\n      } else {\n        if (p < len) { this._key += this.decoder.write(data.toString('binary', p)) }\n        p = len\n      }\n    } else {\n      idxamp = undefined\n      for (i = p; i < len; ++i) {\n        if (!this._checkingBytes) { ++p }\n        if (data[i] === 0x26/* & */) {\n          idxamp = i\n          break\n        }\n        if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {\n          this._hitLimit = true\n          break\n        } else if (this._checkingBytes) { ++this._bytesVal }\n      }\n\n      if (idxamp !== undefined) {\n        ++this._fields\n        if (idxamp > p) { this._val += this.decoder.write(data.toString('binary', p, idxamp)) }\n        this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n          decodeText(this._val, 'binary', this.charset),\n          this._keyTrunc,\n          this._valTrunc)\n        this._state = 'key'\n\n        this._hitLimit = false\n        this._checkingBytes = true\n        this._key = ''\n        this._bytesKey = 0\n        this._keyTrunc = false\n        this.decoder.reset()\n\n        p = idxamp + 1\n        if (this._fields === this.fieldsLimit) { return cb() }\n      } else if (this._hitLimit) {\n        // we may not have hit the actual limit if there are encoded bytes...\n        if (i > p) { this._val += this.decoder.write(data.toString('binary', p, i)) }\n        p = i\n        if ((this._val === '' && this.fieldSizeLimit === 0) ||\n            (this._bytesVal = this._val.length) === this.fieldSizeLimit) {\n          // yep, we actually did hit the limit\n          this._checkingBytes = false\n          this._valTrunc = true\n        }\n      } else {\n        if (p < len) { this._val += this.decoder.write(data.toString('binary', p)) }\n        p = len\n      }\n    }\n  }\n  cb()\n}\n\nUrlEncoded.prototype.end = function () {\n  if (this.boy._done) { return }\n\n  if (this._state === 'key' && this._key.length > 0) {\n    this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n      '',\n      this._keyTrunc,\n      false)\n  } else if (this._state === 'val') {\n    this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n      decodeText(this._val, 'binary', this.charset),\n      this._keyTrunc,\n      this._valTrunc)\n  }\n  this.boy._done = true\n  this.boy.emit('finish')\n}\n\nmodule.exports = UrlEncoded\n","'use strict'\n\nconst WritableStream = require('node:stream').Writable\nconst { inherits } = require('node:util')\nconst Dicer = require('../deps/dicer/lib/Dicer')\n\nconst MultipartParser = require('./types/multipart')\nconst UrlencodedParser = require('./types/urlencoded')\nconst parseParams = require('./utils/parseParams')\n\nfunction Busboy (opts) {\n  if (!(this instanceof Busboy)) { return new Busboy(opts) }\n\n  if (typeof opts !== 'object') {\n    throw new TypeError('Busboy expected an options-Object.')\n  }\n  if (typeof opts.headers !== 'object') {\n    throw new TypeError('Busboy expected an options-Object with headers-attribute.')\n  }\n  if (typeof opts.headers['content-type'] !== 'string') {\n    throw new TypeError('Missing Content-Type-header.')\n  }\n\n  const {\n    headers,\n    ...streamOptions\n  } = opts\n\n  this.opts = {\n    autoDestroy: false,\n    ...streamOptions\n  }\n  WritableStream.call(this, this.opts)\n\n  this._done = false\n  this._parser = this.getParserByHeaders(headers)\n  this._finished = false\n}\ninherits(Busboy, WritableStream)\n\nBusboy.prototype.emit = function (ev) {\n  if (ev === 'finish') {\n    if (!this._done) {\n      this._parser?.end()\n      return\n    } else if (this._finished) {\n      return\n    }\n    this._finished = true\n  }\n  WritableStream.prototype.emit.apply(this, arguments)\n}\n\nBusboy.prototype.getParserByHeaders = function (headers) {\n  const parsed = parseParams(headers['content-type'])\n\n  const cfg = {\n    defCharset: this.opts.defCharset,\n    fileHwm: this.opts.fileHwm,\n    headers,\n    highWaterMark: this.opts.highWaterMark,\n    isPartAFile: this.opts.isPartAFile,\n    limits: this.opts.limits,\n    parsedConType: parsed,\n    preservePath: this.opts.preservePath\n  }\n\n  if (MultipartParser.detect.test(parsed[0])) {\n    return new MultipartParser(this, cfg)\n  }\n  if (UrlencodedParser.detect.test(parsed[0])) {\n    return new UrlencodedParser(this, cfg)\n  }\n  throw new Error('Unsupported Content-Type.')\n}\n\nBusboy.prototype._write = function (chunk, encoding, cb) {\n  this._parser.write(chunk, cb)\n}\n\nmodule.exports = Busboy\nmodule.exports.default = Busboy\nmodule.exports.Busboy = Busboy\n\nmodule.exports.Dicer = Dicer\n","'use strict'\n\nconst { MessageChannel, receiveMessageOnPort } = require('worker_threads')\n\nconst corsSafeListedMethods = ['GET', 'HEAD', 'POST']\nconst corsSafeListedMethodsSet = new Set(corsSafeListedMethods)\n\nconst nullBodyStatus = [101, 204, 205, 304]\n\nconst redirectStatus = [301, 302, 303, 307, 308]\nconst redirectStatusSet = new Set(redirectStatus)\n\n// https://fetch.spec.whatwg.org/#block-bad-port\nconst badPorts = [\n  '1', '7', '9', '11', '13', '15', '17', '19', '20', '21', '22', '23', '25', '37', '42', '43', '53', '69', '77', '79',\n  '87', '95', '101', '102', '103', '104', '109', '110', '111', '113', '115', '117', '119', '123', '135', '137',\n  '139', '143', '161', '179', '389', '427', '465', '512', '513', '514', '515', '526', '530', '531', '532',\n  '540', '548', '554', '556', '563', '587', '601', '636', '989', '990', '993', '995', '1719', '1720', '1723',\n  '2049', '3659', '4045', '5060', '5061', '6000', '6566', '6665', '6666', '6667', '6668', '6669', '6697',\n  '10080'\n]\n\nconst badPortsSet = new Set(badPorts)\n\n// https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\nconst referrerPolicy = [\n  '',\n  'no-referrer',\n  'no-referrer-when-downgrade',\n  'same-origin',\n  'origin',\n  'strict-origin',\n  'origin-when-cross-origin',\n  'strict-origin-when-cross-origin',\n  'unsafe-url'\n]\nconst referrerPolicySet = new Set(referrerPolicy)\n\nconst requestRedirect = ['follow', 'manual', 'error']\n\nconst safeMethods = ['GET', 'HEAD', 'OPTIONS', 'TRACE']\nconst safeMethodsSet = new Set(safeMethods)\n\nconst requestMode = ['navigate', 'same-origin', 'no-cors', 'cors']\n\nconst requestCredentials = ['omit', 'same-origin', 'include']\n\nconst requestCache = [\n  'default',\n  'no-store',\n  'reload',\n  'no-cache',\n  'force-cache',\n  'only-if-cached'\n]\n\n// https://fetch.spec.whatwg.org/#request-body-header-name\nconst requestBodyHeader = [\n  'content-encoding',\n  'content-language',\n  'content-location',\n  'content-type',\n  // See https://github.com/nodejs/undici/issues/2021\n  // 'Content-Length' is a forbidden header name, which is typically\n  // removed in the Headers implementation. However, undici doesn't\n  // filter out headers, so we add it here.\n  'content-length'\n]\n\n// https://fetch.spec.whatwg.org/#enumdef-requestduplex\nconst requestDuplex = [\n  'half'\n]\n\n// http://fetch.spec.whatwg.org/#forbidden-method\nconst forbiddenMethods = ['CONNECT', 'TRACE', 'TRACK']\nconst forbiddenMethodsSet = new Set(forbiddenMethods)\n\nconst subresource = [\n  'audio',\n  'audioworklet',\n  'font',\n  'image',\n  'manifest',\n  'paintworklet',\n  'script',\n  'style',\n  'track',\n  'video',\n  'xslt',\n  ''\n]\nconst subresourceSet = new Set(subresource)\n\n/** @type {globalThis['DOMException']} */\nconst DOMException = globalThis.DOMException ?? (() => {\n  // DOMException was only made a global in Node v17.0.0,\n  // but fetch supports >= v16.8.\n  try {\n    atob('~')\n  } catch (err) {\n    return Object.getPrototypeOf(err).constructor\n  }\n})()\n\nlet channel\n\n/** @type {globalThis['structuredClone']} */\nconst structuredClone =\n  globalThis.structuredClone ??\n  // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js\n  // structuredClone was added in v17.0.0, but fetch supports v16.8\n  function structuredClone (value, options = undefined) {\n    if (arguments.length === 0) {\n      throw new TypeError('missing argument')\n    }\n\n    if (!channel) {\n      channel = new MessageChannel()\n    }\n    channel.port1.unref()\n    channel.port2.unref()\n    channel.port1.postMessage(value, options?.transfer)\n    return receiveMessageOnPort(channel.port2).message\n  }\n\nmodule.exports = {\n  DOMException,\n  structuredClone,\n  subresource,\n  forbiddenMethods,\n  requestBodyHeader,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  redirectStatus,\n  corsSafeListedMethods,\n  nullBodyStatus,\n  safeMethods,\n  badPorts,\n  requestDuplex,\n  subresourceSet,\n  badPortsSet,\n  redirectStatusSet,\n  corsSafeListedMethodsSet,\n  safeMethodsSet,\n  forbiddenMethodsSet,\n  referrerPolicySet\n}\n","'use strict'\n\n// In case of breaking changes, increase the version\n// number to avoid conflicts.\nconst globalOrigin = Symbol.for('undici.globalOrigin.1')\n\nfunction getGlobalOrigin () {\n  return globalThis[globalOrigin]\n}\n\nfunction setGlobalOrigin (newOrigin) {\n  if (newOrigin === undefined) {\n    Object.defineProperty(globalThis, globalOrigin, {\n      value: undefined,\n      writable: true,\n      enumerable: false,\n      configurable: false\n    })\n\n    return\n  }\n\n  const parsedURL = new URL(newOrigin)\n\n  if (parsedURL.protocol !== 'http:' && parsedURL.protocol !== 'https:') {\n    throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`)\n  }\n\n  Object.defineProperty(globalThis, globalOrigin, {\n    value: parsedURL,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  })\n}\n\nmodule.exports = {\n  getGlobalOrigin,\n  setGlobalOrigin\n}\n","'use strict'\n\nconst { redirectStatusSet, referrerPolicySet: referrerPolicyTokens, badPortsSet } = require('./constants')\nconst { getGlobalOrigin } = require('./global')\nconst { performance } = require('perf_hooks')\nconst { isBlobLike, toUSVString, ReadableStreamFrom } = require('../core/util')\nconst assert = require('assert')\nconst { isUint8Array } = require('util/types')\n\n// https://nodejs.org/api/crypto.html#determining-if-crypto-support-is-unavailable\n/** @type {import('crypto')|undefined} */\nlet crypto\n\ntry {\n  crypto = require('crypto')\n} catch {\n\n}\n\nfunction responseURL (response) {\n  // https://fetch.spec.whatwg.org/#responses\n  // A response has an associated URL. It is a pointer to the last URL\n  // in response’s URL list and null if response’s URL list is empty.\n  const urlList = response.urlList\n  const length = urlList.length\n  return length === 0 ? null : urlList[length - 1].toString()\n}\n\n// https://fetch.spec.whatwg.org/#concept-response-location-url\nfunction responseLocationURL (response, requestFragment) {\n  // 1. If response’s status is not a redirect status, then return null.\n  if (!redirectStatusSet.has(response.status)) {\n    return null\n  }\n\n  // 2. Let location be the result of extracting header list values given\n  // `Location` and response’s header list.\n  let location = response.headersList.get('location')\n\n  // 3. If location is a header value, then set location to the result of\n  //    parsing location with response’s URL.\n  if (location !== null && isValidHeaderValue(location)) {\n    location = new URL(location, responseURL(response))\n  }\n\n  // 4. If location is a URL whose fragment is null, then set location’s\n  // fragment to requestFragment.\n  if (location && !location.hash) {\n    location.hash = requestFragment\n  }\n\n  // 5. Return location.\n  return location\n}\n\n/** @returns {URL} */\nfunction requestCurrentURL (request) {\n  return request.urlList[request.urlList.length - 1]\n}\n\nfunction requestBadPort (request) {\n  // 1. Let url be request’s current URL.\n  const url = requestCurrentURL(request)\n\n  // 2. If url’s scheme is an HTTP(S) scheme and url’s port is a bad port,\n  // then return blocked.\n  if (urlIsHttpHttpsScheme(url) && badPortsSet.has(url.port)) {\n    return 'blocked'\n  }\n\n  // 3. Return allowed.\n  return 'allowed'\n}\n\nfunction isErrorLike (object) {\n  return object instanceof Error || (\n    object?.constructor?.name === 'Error' ||\n    object?.constructor?.name === 'DOMException'\n  )\n}\n\n// Check whether |statusText| is a ByteString and\n// matches the Reason-Phrase token production.\n// RFC 2616: https://tools.ietf.org/html/rfc2616\n// RFC 7230: https://tools.ietf.org/html/rfc7230\n// \"reason-phrase = *( HTAB / SP / VCHAR / obs-text )\"\n// https://github.com/chromium/chromium/blob/94.0.4604.1/third_party/blink/renderer/core/fetch/response.cc#L116\nfunction isValidReasonPhrase (statusText) {\n  for (let i = 0; i < statusText.length; ++i) {\n    const c = statusText.charCodeAt(i)\n    if (\n      !(\n        (\n          c === 0x09 || // HTAB\n          (c >= 0x20 && c <= 0x7e) || // SP / VCHAR\n          (c >= 0x80 && c <= 0xff)\n        ) // obs-text\n      )\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction isTokenChar (c) {\n  return !(\n    c >= 0x7f ||\n    c <= 0x20 ||\n    c === '(' ||\n    c === ')' ||\n    c === '<' ||\n    c === '>' ||\n    c === '@' ||\n    c === ',' ||\n    c === ';' ||\n    c === ':' ||\n    c === '\\\\' ||\n    c === '\"' ||\n    c === '/' ||\n    c === '[' ||\n    c === ']' ||\n    c === '?' ||\n    c === '=' ||\n    c === '{' ||\n    c === '}'\n  )\n}\n\n// See RFC 7230, Section 3.2.6.\n// https://github.com/chromium/chromium/blob/d7da0240cae77824d1eda25745c4022757499131/third_party/blink/renderer/platform/network/http_parsers.cc#L321\nfunction isValidHTTPToken (characters) {\n  if (!characters || typeof characters !== 'string') {\n    return false\n  }\n  for (let i = 0; i < characters.length; ++i) {\n    const c = characters.charCodeAt(i)\n    if (c > 0x7f || !isTokenChar(c)) {\n      return false\n    }\n  }\n  return true\n}\n\n// https://fetch.spec.whatwg.org/#header-name\n// https://github.com/chromium/chromium/blob/b3d37e6f94f87d59e44662d6078f6a12de845d17/net/http/http_util.cc#L342\nfunction isValidHeaderName (potentialValue) {\n  if (potentialValue.length === 0) {\n    return false\n  }\n\n  return isValidHTTPToken(potentialValue)\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#header-value\n * @param {string} potentialValue\n */\nfunction isValidHeaderValue (potentialValue) {\n  // - Has no leading or trailing HTTP tab or space bytes.\n  // - Contains no 0x00 (NUL) or HTTP newline bytes.\n  if (\n    potentialValue.startsWith('\\t') ||\n    potentialValue.startsWith(' ') ||\n    potentialValue.endsWith('\\t') ||\n    potentialValue.endsWith(' ')\n  ) {\n    return false\n  }\n\n  if (\n    potentialValue.includes('\\0') ||\n    potentialValue.includes('\\r') ||\n    potentialValue.includes('\\n')\n  ) {\n    return false\n  }\n\n  return true\n}\n\n// https://w3c.github.io/webappsec-referrer-policy/#set-requests-referrer-policy-on-redirect\nfunction setRequestReferrerPolicyOnRedirect (request, actualResponse) {\n  //  Given a request request and a response actualResponse, this algorithm\n  //  updates request’s referrer policy according to the Referrer-Policy\n  //  header (if any) in actualResponse.\n\n  // 1. Let policy be the result of executing § 8.1 Parse a referrer policy\n  // from a Referrer-Policy header on actualResponse.\n\n  // 8.1 Parse a referrer policy from a Referrer-Policy header\n  // 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy` and response’s header list.\n  const { headersList } = actualResponse\n  // 2. Let policy be the empty string.\n  // 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty string, then set policy to token.\n  // 4. Return policy.\n  const policyHeader = (headersList.get('referrer-policy') ?? '').split(',')\n\n  // Note: As the referrer-policy can contain multiple policies\n  // separated by comma, we need to loop through all of them\n  // and pick the first valid one.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy#specify_a_fallback_policy\n  let policy = ''\n  if (policyHeader.length > 0) {\n    // The right-most policy takes precedence.\n    // The left-most policy is the fallback.\n    for (let i = policyHeader.length; i !== 0; i--) {\n      const token = policyHeader[i - 1].trim()\n      if (referrerPolicyTokens.has(token)) {\n        policy = token\n        break\n      }\n    }\n  }\n\n  // 2. If policy is not the empty string, then set request’s referrer policy to policy.\n  if (policy !== '') {\n    request.referrerPolicy = policy\n  }\n}\n\n// https://fetch.spec.whatwg.org/#cross-origin-resource-policy-check\nfunction crossOriginResourcePolicyCheck () {\n  // TODO\n  return 'allowed'\n}\n\n// https://fetch.spec.whatwg.org/#concept-cors-check\nfunction corsCheck () {\n  // TODO\n  return 'success'\n}\n\n// https://fetch.spec.whatwg.org/#concept-tao-check\nfunction TAOCheck () {\n  // TODO\n  return 'success'\n}\n\nfunction appendFetchMetadata (httpRequest) {\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-dest-header\n  //  TODO\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-mode-header\n\n  //  1. Assert: r’s url is a potentially trustworthy URL.\n  //  TODO\n\n  //  2. Let header be a Structured Header whose value is a token.\n  let header = null\n\n  //  3. Set header’s value to r’s mode.\n  header = httpRequest.mode\n\n  //  4. Set a structured field value `Sec-Fetch-Mode`/header in r’s header list.\n  httpRequest.headersList.set('sec-fetch-mode', header)\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-site-header\n  //  TODO\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-user-header\n  //  TODO\n}\n\n// https://fetch.spec.whatwg.org/#append-a-request-origin-header\nfunction appendRequestOriginHeader (request) {\n  // 1. Let serializedOrigin be the result of byte-serializing a request origin with request.\n  let serializedOrigin = request.origin\n\n  // 2. If request’s response tainting is \"cors\" or request’s mode is \"websocket\", then append (`Origin`, serializedOrigin) to request’s header list.\n  if (request.responseTainting === 'cors' || request.mode === 'websocket') {\n    if (serializedOrigin) {\n      request.headersList.append('origin', serializedOrigin)\n    }\n\n  // 3. Otherwise, if request’s method is neither `GET` nor `HEAD`, then:\n  } else if (request.method !== 'GET' && request.method !== 'HEAD') {\n    // 1. Switch on request’s referrer policy:\n    switch (request.referrerPolicy) {\n      case 'no-referrer':\n        // Set serializedOrigin to `null`.\n        serializedOrigin = null\n        break\n      case 'no-referrer-when-downgrade':\n      case 'strict-origin':\n      case 'strict-origin-when-cross-origin':\n        // If request’s origin is a tuple origin, its scheme is \"https\", and request’s current URL’s scheme is not \"https\", then set serializedOrigin to `null`.\n        if (request.origin && urlHasHttpsScheme(request.origin) && !urlHasHttpsScheme(requestCurrentURL(request))) {\n          serializedOrigin = null\n        }\n        break\n      case 'same-origin':\n        // If request’s origin is not same origin with request’s current URL’s origin, then set serializedOrigin to `null`.\n        if (!sameOrigin(request, requestCurrentURL(request))) {\n          serializedOrigin = null\n        }\n        break\n      default:\n        // Do nothing.\n    }\n\n    if (serializedOrigin) {\n      // 2. Append (`Origin`, serializedOrigin) to request’s header list.\n      request.headersList.append('origin', serializedOrigin)\n    }\n  }\n}\n\nfunction coarsenedSharedCurrentTime (crossOriginIsolatedCapability) {\n  // TODO\n  return performance.now()\n}\n\n// https://fetch.spec.whatwg.org/#create-an-opaque-timing-info\nfunction createOpaqueTimingInfo (timingInfo) {\n  return {\n    startTime: timingInfo.startTime ?? 0,\n    redirectStartTime: 0,\n    redirectEndTime: 0,\n    postRedirectStartTime: timingInfo.startTime ?? 0,\n    finalServiceWorkerStartTime: 0,\n    finalNetworkResponseStartTime: 0,\n    finalNetworkRequestStartTime: 0,\n    endTime: 0,\n    encodedBodySize: 0,\n    decodedBodySize: 0,\n    finalConnectionTimingInfo: null\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/origin.html#policy-container\nfunction makePolicyContainer () {\n  // Note: the fetch spec doesn't make use of embedder policy or CSP list\n  return {\n    referrerPolicy: 'strict-origin-when-cross-origin'\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/origin.html#clone-a-policy-container\nfunction clonePolicyContainer (policyContainer) {\n  return {\n    referrerPolicy: policyContainer.referrerPolicy\n  }\n}\n\n// https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer\nfunction determineRequestsReferrer (request) {\n  // 1. Let policy be request's referrer policy.\n  const policy = request.referrerPolicy\n\n  // Note: policy cannot (shouldn't) be null or an empty string.\n  assert(policy)\n\n  // 2. Let environment be request’s client.\n\n  let referrerSource = null\n\n  // 3. Switch on request’s referrer:\n  if (request.referrer === 'client') {\n    // Note: node isn't a browser and doesn't implement document/iframes,\n    // so we bypass this step and replace it with our own.\n\n    const globalOrigin = getGlobalOrigin()\n\n    if (!globalOrigin || globalOrigin.origin === 'null') {\n      return 'no-referrer'\n    }\n\n    // note: we need to clone it as it's mutated\n    referrerSource = new URL(globalOrigin)\n  } else if (request.referrer instanceof URL) {\n    // Let referrerSource be request’s referrer.\n    referrerSource = request.referrer\n  }\n\n  // 4. Let request’s referrerURL be the result of stripping referrerSource for\n  //    use as a referrer.\n  let referrerURL = stripURLForReferrer(referrerSource)\n\n  // 5. Let referrerOrigin be the result of stripping referrerSource for use as\n  //    a referrer, with the origin-only flag set to true.\n  const referrerOrigin = stripURLForReferrer(referrerSource, true)\n\n  // 6. If the result of serializing referrerURL is a string whose length is\n  //    greater than 4096, set referrerURL to referrerOrigin.\n  if (referrerURL.toString().length > 4096) {\n    referrerURL = referrerOrigin\n  }\n\n  const areSameOrigin = sameOrigin(request, referrerURL)\n  const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) &&\n    !isURLPotentiallyTrustworthy(request.url)\n\n  // 8. Execute the switch statements corresponding to the value of policy:\n  switch (policy) {\n    case 'origin': return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true)\n    case 'unsafe-url': return referrerURL\n    case 'same-origin':\n      return areSameOrigin ? referrerOrigin : 'no-referrer'\n    case 'origin-when-cross-origin':\n      return areSameOrigin ? referrerURL : referrerOrigin\n    case 'strict-origin-when-cross-origin': {\n      const currentURL = requestCurrentURL(request)\n\n      // 1. If the origin of referrerURL and the origin of request’s current\n      //    URL are the same, then return referrerURL.\n      if (sameOrigin(referrerURL, currentURL)) {\n        return referrerURL\n      }\n\n      // 2. If referrerURL is a potentially trustworthy URL and request’s\n      //    current URL is not a potentially trustworthy URL, then return no\n      //    referrer.\n      if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {\n        return 'no-referrer'\n      }\n\n      // 3. Return referrerOrigin.\n      return referrerOrigin\n    }\n    case 'strict-origin': // eslint-disable-line\n      /**\n         * 1. If referrerURL is a potentially trustworthy URL and\n         * request’s current URL is not a potentially trustworthy URL,\n         * then return no referrer.\n         * 2. Return referrerOrigin\n        */\n    case 'no-referrer-when-downgrade': // eslint-disable-line\n      /**\n       * 1. If referrerURL is a potentially trustworthy URL and\n       * request’s current URL is not a potentially trustworthy URL,\n       * then return no referrer.\n       * 2. Return referrerOrigin\n      */\n\n    default: // eslint-disable-line\n      return isNonPotentiallyTrustWorthy ? 'no-referrer' : referrerOrigin\n  }\n}\n\n/**\n * @see https://w3c.github.io/webappsec-referrer-policy/#strip-url\n * @param {URL} url\n * @param {boolean|undefined} originOnly\n */\nfunction stripURLForReferrer (url, originOnly) {\n  // 1. Assert: url is a URL.\n  assert(url instanceof URL)\n\n  // 2. If url’s scheme is a local scheme, then return no referrer.\n  if (url.protocol === 'file:' || url.protocol === 'about:' || url.protocol === 'blank:') {\n    return 'no-referrer'\n  }\n\n  // 3. Set url’s username to the empty string.\n  url.username = ''\n\n  // 4. Set url’s password to the empty string.\n  url.password = ''\n\n  // 5. Set url’s fragment to null.\n  url.hash = ''\n\n  // 6. If the origin-only flag is true, then:\n  if (originOnly) {\n    // 1. Set url’s path to « the empty string ».\n    url.pathname = ''\n\n    // 2. Set url’s query to null.\n    url.search = ''\n  }\n\n  // 7. Return url.\n  return url\n}\n\nfunction isURLPotentiallyTrustworthy (url) {\n  if (!(url instanceof URL)) {\n    return false\n  }\n\n  // If child of about, return true\n  if (url.href === 'about:blank' || url.href === 'about:srcdoc') {\n    return true\n  }\n\n  // If scheme is data, return true\n  if (url.protocol === 'data:') return true\n\n  // If file, return true\n  if (url.protocol === 'file:') return true\n\n  return isOriginPotentiallyTrustworthy(url.origin)\n\n  function isOriginPotentiallyTrustworthy (origin) {\n    // If origin is explicitly null, return false\n    if (origin == null || origin === 'null') return false\n\n    const originAsURL = new URL(origin)\n\n    // If secure, return true\n    if (originAsURL.protocol === 'https:' || originAsURL.protocol === 'wss:') {\n      return true\n    }\n\n    // If localhost or variants, return true\n    if (/^127(?:\\.[0-9]+){0,2}\\.[0-9]+$|^\\[(?:0*:)*?:?0*1\\]$/.test(originAsURL.hostname) ||\n     (originAsURL.hostname === 'localhost' || originAsURL.hostname.includes('localhost.')) ||\n     (originAsURL.hostname.endsWith('.localhost'))) {\n      return true\n    }\n\n    // If any other, return false\n    return false\n  }\n}\n\n/**\n * @see https://w3c.github.io/webappsec-subresource-integrity/#does-response-match-metadatalist\n * @param {Uint8Array} bytes\n * @param {string} metadataList\n */\nfunction bytesMatch (bytes, metadataList) {\n  // If node is not built with OpenSSL support, we cannot check\n  // a request's integrity, so allow it by default (the spec will\n  // allow requests if an invalid hash is given, as precedence).\n  /* istanbul ignore if: only if node is built with --without-ssl */\n  if (crypto === undefined) {\n    return true\n  }\n\n  // 1. Let parsedMetadata be the result of parsing metadataList.\n  const parsedMetadata = parseMetadata(metadataList)\n\n  // 2. If parsedMetadata is no metadata, return true.\n  if (parsedMetadata === 'no metadata') {\n    return true\n  }\n\n  // 3. If parsedMetadata is the empty set, return true.\n  if (parsedMetadata.length === 0) {\n    return true\n  }\n\n  // 4. Let metadata be the result of getting the strongest\n  //    metadata from parsedMetadata.\n  const list = parsedMetadata.sort((c, d) => d.algo.localeCompare(c.algo))\n  // get the strongest algorithm\n  const strongest = list[0].algo\n  // get all entries that use the strongest algorithm; ignore weaker\n  const metadata = list.filter((item) => item.algo === strongest)\n\n  // 5. For each item in metadata:\n  for (const item of metadata) {\n    // 1. Let algorithm be the alg component of item.\n    const algorithm = item.algo\n\n    // 2. Let expectedValue be the val component of item.\n    let expectedValue = item.hash\n\n    // See https://github.com/web-platform-tests/wpt/commit/e4c5cc7a5e48093220528dfdd1c4012dc3837a0e\n    // \"be liberal with padding\". This is annoying, and it's not even in the spec.\n\n    if (expectedValue.endsWith('==')) {\n      expectedValue = expectedValue.slice(0, -2)\n    }\n\n    // 3. Let actualValue be the result of applying algorithm to bytes.\n    let actualValue = crypto.createHash(algorithm).update(bytes).digest('base64')\n\n    if (actualValue.endsWith('==')) {\n      actualValue = actualValue.slice(0, -2)\n    }\n\n    // 4. If actualValue is a case-sensitive match for expectedValue,\n    //    return true.\n    if (actualValue === expectedValue) {\n      return true\n    }\n\n    let actualBase64URL = crypto.createHash(algorithm).update(bytes).digest('base64url')\n\n    if (actualBase64URL.endsWith('==')) {\n      actualBase64URL = actualBase64URL.slice(0, -2)\n    }\n\n    if (actualBase64URL === expectedValue) {\n      return true\n    }\n  }\n\n  // 6. Return false.\n  return false\n}\n\n// https://w3c.github.io/webappsec-subresource-integrity/#grammardef-hash-with-options\n// https://www.w3.org/TR/CSP2/#source-list-syntax\n// https://www.rfc-editor.org/rfc/rfc5234#appendix-B.1\nconst parseHashWithOptions = /((?<algo>sha256|sha384|sha512)-(?<hash>[A-z0-9+/]{1}.*={0,2}))( +[\\x21-\\x7e]?)?/i\n\n/**\n * @see https://w3c.github.io/webappsec-subresource-integrity/#parse-metadata\n * @param {string} metadata\n */\nfunction parseMetadata (metadata) {\n  // 1. Let result be the empty set.\n  /** @type {{ algo: string, hash: string }[]} */\n  const result = []\n\n  // 2. Let empty be equal to true.\n  let empty = true\n\n  const supportedHashes = crypto.getHashes()\n\n  // 3. For each token returned by splitting metadata on spaces:\n  for (const token of metadata.split(' ')) {\n    // 1. Set empty to false.\n    empty = false\n\n    // 2. Parse token as a hash-with-options.\n    const parsedToken = parseHashWithOptions.exec(token)\n\n    // 3. If token does not parse, continue to the next token.\n    if (parsedToken === null || parsedToken.groups === undefined) {\n      // Note: Chromium blocks the request at this point, but Firefox\n      // gives a warning that an invalid integrity was given. The\n      // correct behavior is to ignore these, and subsequently not\n      // check the integrity of the resource.\n      continue\n    }\n\n    // 4. Let algorithm be the hash-algo component of token.\n    const algorithm = parsedToken.groups.algo\n\n    // 5. If algorithm is a hash function recognized by the user\n    //    agent, add the parsed token to result.\n    if (supportedHashes.includes(algorithm.toLowerCase())) {\n      result.push(parsedToken.groups)\n    }\n  }\n\n  // 4. Return no metadata if empty is true, otherwise return result.\n  if (empty === true) {\n    return 'no metadata'\n  }\n\n  return result\n}\n\n// https://w3c.github.io/webappsec-upgrade-insecure-requests/#upgrade-request\nfunction tryUpgradeRequestToAPotentiallyTrustworthyURL (request) {\n  // TODO\n}\n\n/**\n * @link {https://html.spec.whatwg.org/multipage/origin.html#same-origin}\n * @param {URL} A\n * @param {URL} B\n */\nfunction sameOrigin (A, B) {\n  // 1. If A and B are the same opaque origin, then return true.\n  if (A.origin === B.origin && A.origin === 'null') {\n    return true\n  }\n\n  // 2. If A and B are both tuple origins and their schemes,\n  //    hosts, and port are identical, then return true.\n  if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {\n    return true\n  }\n\n  // 3. Return false.\n  return false\n}\n\nfunction createDeferredPromise () {\n  let res\n  let rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n\n  return { promise, resolve: res, reject: rej }\n}\n\nfunction isAborted (fetchParams) {\n  return fetchParams.controller.state === 'aborted'\n}\n\nfunction isCancelled (fetchParams) {\n  return fetchParams.controller.state === 'aborted' ||\n    fetchParams.controller.state === 'terminated'\n}\n\n// https://fetch.spec.whatwg.org/#concept-method-normalize\nfunction normalizeMethod (method) {\n  return /^(DELETE|GET|HEAD|OPTIONS|POST|PUT)$/i.test(method)\n    ? method.toUpperCase()\n    : method\n}\n\n// https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string\nfunction serializeJavascriptValueToJSONString (value) {\n  // 1. Let result be ? Call(%JSON.stringify%, undefined, « value »).\n  const result = JSON.stringify(value)\n\n  // 2. If result is undefined, then throw a TypeError.\n  if (result === undefined) {\n    throw new TypeError('Value is not JSON serializable')\n  }\n\n  // 3. Assert: result is a string.\n  assert(typeof result === 'string')\n\n  // 4. Return result.\n  return result\n}\n\n// https://tc39.es/ecma262/#sec-%25iteratorprototype%25-object\nconst esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()))\n\n/**\n * @see https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object\n * @param {() => unknown[]} iterator\n * @param {string} name name of the instance\n * @param {'key'|'value'|'key+value'} kind\n */\nfunction makeIterator (iterator, name, kind) {\n  const object = {\n    index: 0,\n    kind,\n    target: iterator\n  }\n\n  const i = {\n    next () {\n      // 1. Let interface be the interface for which the iterator prototype object exists.\n\n      // 2. Let thisValue be the this value.\n\n      // 3. Let object be ? ToObject(thisValue).\n\n      // 4. If object is a platform object, then perform a security\n      //    check, passing:\n\n      // 5. If object is not a default iterator object for interface,\n      //    then throw a TypeError.\n      if (Object.getPrototypeOf(this) !== i) {\n        throw new TypeError(\n          `'next' called on an object that does not implement interface ${name} Iterator.`\n        )\n      }\n\n      // 6. Let index be object’s index.\n      // 7. Let kind be object’s kind.\n      // 8. Let values be object’s target's value pairs to iterate over.\n      const { index, kind, target } = object\n      const values = target()\n\n      // 9. Let len be the length of values.\n      const len = values.length\n\n      // 10. If index is greater than or equal to len, then return\n      //     CreateIterResultObject(undefined, true).\n      if (index >= len) {\n        return { value: undefined, done: true }\n      }\n\n      // 11. Let pair be the entry in values at index index.\n      const pair = values[index]\n\n      // 12. Set object’s index to index + 1.\n      object.index = index + 1\n\n      // 13. Return the iterator result for pair and kind.\n      return iteratorResult(pair, kind)\n    },\n    // The class string of an iterator prototype object for a given interface is the\n    // result of concatenating the identifier of the interface and the string \" Iterator\".\n    [Symbol.toStringTag]: `${name} Iterator`\n  }\n\n  // The [[Prototype]] internal slot of an iterator prototype object must be %IteratorPrototype%.\n  Object.setPrototypeOf(i, esIteratorPrototype)\n  // esIteratorPrototype needs to be the prototype of i\n  // which is the prototype of an empty object. Yes, it's confusing.\n  return Object.setPrototypeOf({}, i)\n}\n\n// https://webidl.spec.whatwg.org/#iterator-result\nfunction iteratorResult (pair, kind) {\n  let result\n\n  // 1. Let result be a value determined by the value of kind:\n  switch (kind) {\n    case 'key': {\n      // 1. Let idlKey be pair’s key.\n      // 2. Let key be the result of converting idlKey to an\n      //    ECMAScript value.\n      // 3. result is key.\n      result = pair[0]\n      break\n    }\n    case 'value': {\n      // 1. Let idlValue be pair’s value.\n      // 2. Let value be the result of converting idlValue to\n      //    an ECMAScript value.\n      // 3. result is value.\n      result = pair[1]\n      break\n    }\n    case 'key+value': {\n      // 1. Let idlKey be pair’s key.\n      // 2. Let idlValue be pair’s value.\n      // 3. Let key be the result of converting idlKey to an\n      //    ECMAScript value.\n      // 4. Let value be the result of converting idlValue to\n      //    an ECMAScript value.\n      // 5. Let array be ! ArrayCreate(2).\n      // 6. Call ! CreateDataProperty(array, \"0\", key).\n      // 7. Call ! CreateDataProperty(array, \"1\", value).\n      // 8. result is array.\n      result = pair\n      break\n    }\n  }\n\n  // 2. Return CreateIterResultObject(result, false).\n  return { value: result, done: false }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#body-fully-read\n */\nasync function fullyReadBody (body, processBody, processBodyError) {\n  // 1. If taskDestination is null, then set taskDestination to\n  //    the result of starting a new parallel queue.\n\n  // 2. Let successSteps given a byte sequence bytes be to queue a\n  //    fetch task to run processBody given bytes, with taskDestination.\n  const successSteps = processBody\n\n  // 3. Let errorSteps be to queue a fetch task to run processBodyError,\n  //    with taskDestination.\n  const errorSteps = processBodyError\n\n  // 4. Let reader be the result of getting a reader for body’s stream.\n  //    If that threw an exception, then run errorSteps with that\n  //    exception and return.\n  let reader\n\n  try {\n    reader = body.stream.getReader()\n  } catch (e) {\n    errorSteps(e)\n    return\n  }\n\n  // 5. Read all bytes from reader, given successSteps and errorSteps.\n  try {\n    const result = await readAllBytes(reader)\n    successSteps(result)\n  } catch (e) {\n    errorSteps(e)\n  }\n}\n\n/** @type {ReadableStream} */\nlet ReadableStream = globalThis.ReadableStream\n\nfunction isReadableStreamLike (stream) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  return stream instanceof ReadableStream || (\n    stream[Symbol.toStringTag] === 'ReadableStream' &&\n    typeof stream.tee === 'function'\n  )\n}\n\nconst MAXIMUM_ARGUMENT_LENGTH = 65535\n\n/**\n * @see https://infra.spec.whatwg.org/#isomorphic-decode\n * @param {number[]|Uint8Array} input\n */\nfunction isomorphicDecode (input) {\n  // 1. To isomorphic decode a byte sequence input, return a string whose code point\n  //    length is equal to input’s length and whose code points have the same values\n  //    as the values of input’s bytes, in the same order.\n\n  if (input.length < MAXIMUM_ARGUMENT_LENGTH) {\n    return String.fromCharCode(...input)\n  }\n\n  return input.reduce((previous, current) => previous + String.fromCharCode(current), '')\n}\n\n/**\n * @param {ReadableStreamController<Uint8Array>} controller\n */\nfunction readableStreamClose (controller) {\n  try {\n    controller.close()\n  } catch (err) {\n    // TODO: add comment explaining why this error occurs.\n    if (!err.message.includes('Controller is already closed')) {\n      throw err\n    }\n  }\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#isomorphic-encode\n * @param {string} input\n */\nfunction isomorphicEncode (input) {\n  // 1. Assert: input contains no code points greater than U+00FF.\n  for (let i = 0; i < input.length; i++) {\n    assert(input.charCodeAt(i) <= 0xFF)\n  }\n\n  // 2. Return a byte sequence whose length is equal to input’s code\n  //    point length and whose bytes have the same values as the\n  //    values of input’s code points, in the same order\n  return input\n}\n\n/**\n * @see https://streams.spec.whatwg.org/#readablestreamdefaultreader-read-all-bytes\n * @see https://streams.spec.whatwg.org/#read-loop\n * @param {ReadableStreamDefaultReader} reader\n */\nasync function readAllBytes (reader) {\n  const bytes = []\n  let byteLength = 0\n\n  while (true) {\n    const { done, value: chunk } = await reader.read()\n\n    if (done) {\n      // 1. Call successSteps with bytes.\n      return Buffer.concat(bytes, byteLength)\n    }\n\n    // 1. If chunk is not a Uint8Array object, call failureSteps\n    //    with a TypeError and abort these steps.\n    if (!isUint8Array(chunk)) {\n      throw new TypeError('Received non-Uint8Array chunk')\n    }\n\n    // 2. Append the bytes represented by chunk to bytes.\n    bytes.push(chunk)\n    byteLength += chunk.length\n\n    // 3. Read-loop given reader, bytes, successSteps, and failureSteps.\n  }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#is-local\n * @param {URL} url\n */\nfunction urlIsLocal (url) {\n  assert('protocol' in url) // ensure it's a url object\n\n  const protocol = url.protocol\n\n  return protocol === 'about:' || protocol === 'blob:' || protocol === 'data:'\n}\n\n/**\n * @param {string|URL} url\n */\nfunction urlHasHttpsScheme (url) {\n  if (typeof url === 'string') {\n    return url.startsWith('https:')\n  }\n\n  return url.protocol === 'https:'\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-scheme\n * @param {URL} url\n */\nfunction urlIsHttpHttpsScheme (url) {\n  assert('protocol' in url) // ensure it's a url object\n\n  const protocol = url.protocol\n\n  return protocol === 'http:' || protocol === 'https:'\n}\n\n/**\n * Fetch supports node >= 16.8.0, but Object.hasOwn was added in v16.9.0.\n */\nconst hasOwn = Object.hasOwn || ((dict, key) => Object.prototype.hasOwnProperty.call(dict, key))\n\nmodule.exports = {\n  isAborted,\n  isCancelled,\n  createDeferredPromise,\n  ReadableStreamFrom,\n  toUSVString,\n  tryUpgradeRequestToAPotentiallyTrustworthyURL,\n  coarsenedSharedCurrentTime,\n  determineRequestsReferrer,\n  makePolicyContainer,\n  clonePolicyContainer,\n  appendFetchMetadata,\n  appendRequestOriginHeader,\n  TAOCheck,\n  corsCheck,\n  crossOriginResourcePolicyCheck,\n  createOpaqueTimingInfo,\n  setRequestReferrerPolicyOnRedirect,\n  isValidHTTPToken,\n  requestBadPort,\n  requestCurrentURL,\n  responseURL,\n  responseLocationURL,\n  isBlobLike,\n  isURLPotentiallyTrustworthy,\n  isValidReasonPhrase,\n  sameOrigin,\n  normalizeMethod,\n  serializeJavascriptValueToJSONString,\n  makeIterator,\n  isValidHeaderName,\n  isValidHeaderValue,\n  hasOwn,\n  isErrorLike,\n  fullyReadBody,\n  bytesMatch,\n  isReadableStreamLike,\n  readableStreamClose,\n  isomorphicEncode,\n  isomorphicDecode,\n  urlIsLocal,\n  urlHasHttpsScheme,\n  urlIsHttpHttpsScheme,\n  readAllBytes\n}\n","'use strict'\n\nmodule.exports = {\n  kUrl: Symbol('url'),\n  kHeaders: Symbol('headers'),\n  kSignal: Symbol('signal'),\n  kState: Symbol('state'),\n  kGuard: Symbol('guard'),\n  kRealm: Symbol('realm')\n}\n","'use strict'\n\nconst { types } = require('util')\nconst { hasOwn, toUSVString } = require('./util')\n\n/** @type {import('../../types/webidl').Webidl} */\nconst webidl = {}\nwebidl.converters = {}\nwebidl.util = {}\nwebidl.errors = {}\n\nwebidl.errors.exception = function (message) {\n  return new TypeError(`${message.header}: ${message.message}`)\n}\n\nwebidl.errors.conversionFailed = function (context) {\n  const plural = context.types.length === 1 ? '' : ' one of'\n  const message =\n    `${context.argument} could not be converted to` +\n    `${plural}: ${context.types.join(', ')}.`\n\n  return webidl.errors.exception({\n    header: context.prefix,\n    message\n  })\n}\n\nwebidl.errors.invalidArgument = function (context) {\n  return webidl.errors.exception({\n    header: context.prefix,\n    message: `\"${context.value}\" is an invalid ${context.type}.`\n  })\n}\n\n// https://webidl.spec.whatwg.org/#implements\nwebidl.brandCheck = function (V, I, opts = undefined) {\n  if (opts?.strict !== false && !(V instanceof I)) {\n    throw new TypeError('Illegal invocation')\n  } else {\n    return V?.[Symbol.toStringTag] === I.prototype[Symbol.toStringTag]\n  }\n}\n\nwebidl.argumentLengthCheck = function ({ length }, min, ctx) {\n  if (length < min) {\n    throw webidl.errors.exception({\n      message: `${min} argument${min !== 1 ? 's' : ''} required, ` +\n               `but${length ? ' only' : ''} ${length} found.`,\n      ...ctx\n    })\n  }\n}\n\nwebidl.illegalConstructor = function () {\n  throw webidl.errors.exception({\n    header: 'TypeError',\n    message: 'Illegal constructor'\n  })\n}\n\n// https://tc39.es/ecma262/#sec-ecmascript-data-types-and-values\nwebidl.util.Type = function (V) {\n  switch (typeof V) {\n    case 'undefined': return 'Undefined'\n    case 'boolean': return 'Boolean'\n    case 'string': return 'String'\n    case 'symbol': return 'Symbol'\n    case 'number': return 'Number'\n    case 'bigint': return 'BigInt'\n    case 'function':\n    case 'object': {\n      if (V === null) {\n        return 'Null'\n      }\n\n      return 'Object'\n    }\n  }\n}\n\n// https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\nwebidl.util.ConvertToInt = function (V, bitLength, signedness, opts = {}) {\n  let upperBound\n  let lowerBound\n\n  // 1. If bitLength is 64, then:\n  if (bitLength === 64) {\n    // 1. Let upperBound be 2^53 − 1.\n    upperBound = Math.pow(2, 53) - 1\n\n    // 2. If signedness is \"unsigned\", then let lowerBound be 0.\n    if (signedness === 'unsigned') {\n      lowerBound = 0\n    } else {\n      // 3. Otherwise let lowerBound be −2^53 + 1.\n      lowerBound = Math.pow(-2, 53) + 1\n    }\n  } else if (signedness === 'unsigned') {\n    // 2. Otherwise, if signedness is \"unsigned\", then:\n\n    // 1. Let lowerBound be 0.\n    lowerBound = 0\n\n    // 2. Let upperBound be 2^bitLength − 1.\n    upperBound = Math.pow(2, bitLength) - 1\n  } else {\n    // 3. Otherwise:\n\n    // 1. Let lowerBound be -2^bitLength − 1.\n    lowerBound = Math.pow(-2, bitLength) - 1\n\n    // 2. Let upperBound be 2^bitLength − 1 − 1.\n    upperBound = Math.pow(2, bitLength - 1) - 1\n  }\n\n  // 4. Let x be ? ToNumber(V).\n  let x = Number(V)\n\n  // 5. If x is −0, then set x to +0.\n  if (x === 0) {\n    x = 0\n  }\n\n  // 6. If the conversion is to an IDL type associated\n  //    with the [EnforceRange] extended attribute, then:\n  if (opts.enforceRange === true) {\n    // 1. If x is NaN, +∞, or −∞, then throw a TypeError.\n    if (\n      Number.isNaN(x) ||\n      x === Number.POSITIVE_INFINITY ||\n      x === Number.NEGATIVE_INFINITY\n    ) {\n      throw webidl.errors.exception({\n        header: 'Integer conversion',\n        message: `Could not convert ${V} to an integer.`\n      })\n    }\n\n    // 2. Set x to IntegerPart(x).\n    x = webidl.util.IntegerPart(x)\n\n    // 3. If x < lowerBound or x > upperBound, then\n    //    throw a TypeError.\n    if (x < lowerBound || x > upperBound) {\n      throw webidl.errors.exception({\n        header: 'Integer conversion',\n        message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`\n      })\n    }\n\n    // 4. Return x.\n    return x\n  }\n\n  // 7. If x is not NaN and the conversion is to an IDL\n  //    type associated with the [Clamp] extended\n  //    attribute, then:\n  if (!Number.isNaN(x) && opts.clamp === true) {\n    // 1. Set x to min(max(x, lowerBound), upperBound).\n    x = Math.min(Math.max(x, lowerBound), upperBound)\n\n    // 2. Round x to the nearest integer, choosing the\n    //    even integer if it lies halfway between two,\n    //    and choosing +0 rather than −0.\n    if (Math.floor(x) % 2 === 0) {\n      x = Math.floor(x)\n    } else {\n      x = Math.ceil(x)\n    }\n\n    // 3. Return x.\n    return x\n  }\n\n  // 8. If x is NaN, +0, +∞, or −∞, then return +0.\n  if (\n    Number.isNaN(x) ||\n    (x === 0 && Object.is(0, x)) ||\n    x === Number.POSITIVE_INFINITY ||\n    x === Number.NEGATIVE_INFINITY\n  ) {\n    return 0\n  }\n\n  // 9. Set x to IntegerPart(x).\n  x = webidl.util.IntegerPart(x)\n\n  // 10. Set x to x modulo 2^bitLength.\n  x = x % Math.pow(2, bitLength)\n\n  // 11. If signedness is \"signed\" and x ≥ 2^bitLength − 1,\n  //    then return x − 2^bitLength.\n  if (signedness === 'signed' && x >= Math.pow(2, bitLength) - 1) {\n    return x - Math.pow(2, bitLength)\n  }\n\n  // 12. Otherwise, return x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#abstract-opdef-integerpart\nwebidl.util.IntegerPart = function (n) {\n  // 1. Let r be floor(abs(n)).\n  const r = Math.floor(Math.abs(n))\n\n  // 2. If n < 0, then return -1 × r.\n  if (n < 0) {\n    return -1 * r\n  }\n\n  // 3. Otherwise, return r.\n  return r\n}\n\n// https://webidl.spec.whatwg.org/#es-sequence\nwebidl.sequenceConverter = function (converter) {\n  return (V) => {\n    // 1. If Type(V) is not Object, throw a TypeError.\n    if (webidl.util.Type(V) !== 'Object') {\n      throw webidl.errors.exception({\n        header: 'Sequence',\n        message: `Value of type ${webidl.util.Type(V)} is not an Object.`\n      })\n    }\n\n    // 2. Let method be ? GetMethod(V, @@iterator).\n    /** @type {Generator} */\n    const method = V?.[Symbol.iterator]?.()\n    const seq = []\n\n    // 3. If method is undefined, throw a TypeError.\n    if (\n      method === undefined ||\n      typeof method.next !== 'function'\n    ) {\n      throw webidl.errors.exception({\n        header: 'Sequence',\n        message: 'Object is not an iterator.'\n      })\n    }\n\n    // https://webidl.spec.whatwg.org/#create-sequence-from-iterable\n    while (true) {\n      const { done, value } = method.next()\n\n      if (done) {\n        break\n      }\n\n      seq.push(converter(value))\n    }\n\n    return seq\n  }\n}\n\n// https://webidl.spec.whatwg.org/#es-to-record\nwebidl.recordConverter = function (keyConverter, valueConverter) {\n  return (O) => {\n    // 1. If Type(O) is not Object, throw a TypeError.\n    if (webidl.util.Type(O) !== 'Object') {\n      throw webidl.errors.exception({\n        header: 'Record',\n        message: `Value of type ${webidl.util.Type(O)} is not an Object.`\n      })\n    }\n\n    // 2. Let result be a new empty instance of record<K, V>.\n    const result = {}\n\n    if (!types.isProxy(O)) {\n      // Object.keys only returns enumerable properties\n      const keys = Object.keys(O)\n\n      for (const key of keys) {\n        // 1. Let typedKey be key converted to an IDL value of type K.\n        const typedKey = keyConverter(key)\n\n        // 2. Let value be ? Get(O, key).\n        // 3. Let typedValue be value converted to an IDL value of type V.\n        const typedValue = valueConverter(O[key])\n\n        // 4. Set result[typedKey] to typedValue.\n        result[typedKey] = typedValue\n      }\n\n      // 5. Return result.\n      return result\n    }\n\n    // 3. Let keys be ? O.[[OwnPropertyKeys]]().\n    const keys = Reflect.ownKeys(O)\n\n    // 4. For each key of keys.\n    for (const key of keys) {\n      // 1. Let desc be ? O.[[GetOwnProperty]](key).\n      const desc = Reflect.getOwnPropertyDescriptor(O, key)\n\n      // 2. If desc is not undefined and desc.[[Enumerable]] is true:\n      if (desc?.enumerable) {\n        // 1. Let typedKey be key converted to an IDL value of type K.\n        const typedKey = keyConverter(key)\n\n        // 2. Let value be ? Get(O, key).\n        // 3. Let typedValue be value converted to an IDL value of type V.\n        const typedValue = valueConverter(O[key])\n\n        // 4. Set result[typedKey] to typedValue.\n        result[typedKey] = typedValue\n      }\n    }\n\n    // 5. Return result.\n    return result\n  }\n}\n\nwebidl.interfaceConverter = function (i) {\n  return (V, opts = {}) => {\n    if (opts.strict !== false && !(V instanceof i)) {\n      throw webidl.errors.exception({\n        header: i.name,\n        message: `Expected ${V} to be an instance of ${i.name}.`\n      })\n    }\n\n    return V\n  }\n}\n\nwebidl.dictionaryConverter = function (converters) {\n  return (dictionary) => {\n    const type = webidl.util.Type(dictionary)\n    const dict = {}\n\n    if (type === 'Null' || type === 'Undefined') {\n      return dict\n    } else if (type !== 'Object') {\n      throw webidl.errors.exception({\n        header: 'Dictionary',\n        message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`\n      })\n    }\n\n    for (const options of converters) {\n      const { key, defaultValue, required, converter } = options\n\n      if (required === true) {\n        if (!hasOwn(dictionary, key)) {\n          throw webidl.errors.exception({\n            header: 'Dictionary',\n            message: `Missing required key \"${key}\".`\n          })\n        }\n      }\n\n      let value = dictionary[key]\n      const hasDefault = hasOwn(options, 'defaultValue')\n\n      // Only use defaultValue if value is undefined and\n      // a defaultValue options was provided.\n      if (hasDefault && value !== null) {\n        value = value ?? defaultValue\n      }\n\n      // A key can be optional and have no default value.\n      // When this happens, do not perform a conversion,\n      // and do not assign the key a value.\n      if (required || hasDefault || value !== undefined) {\n        value = converter(value)\n\n        if (\n          options.allowedValues &&\n          !options.allowedValues.includes(value)\n        ) {\n          throw webidl.errors.exception({\n            header: 'Dictionary',\n            message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join(', ')}.`\n          })\n        }\n\n        dict[key] = value\n      }\n    }\n\n    return dict\n  }\n}\n\nwebidl.nullableConverter = function (converter) {\n  return (V) => {\n    if (V === null) {\n      return V\n    }\n\n    return converter(V)\n  }\n}\n\n// https://webidl.spec.whatwg.org/#es-DOMString\nwebidl.converters.DOMString = function (V, opts = {}) {\n  // 1. If V is null and the conversion is to an IDL type\n  //    associated with the [LegacyNullToEmptyString]\n  //    extended attribute, then return the DOMString value\n  //    that represents the empty string.\n  if (V === null && opts.legacyNullToEmptyString) {\n    return ''\n  }\n\n  // 2. Let x be ? ToString(V).\n  if (typeof V === 'symbol') {\n    throw new TypeError('Could not convert argument of type symbol to string.')\n  }\n\n  // 3. Return the IDL DOMString value that represents the\n  //    same sequence of code units as the one the\n  //    ECMAScript String value x represents.\n  return String(V)\n}\n\n// https://webidl.spec.whatwg.org/#es-ByteString\nwebidl.converters.ByteString = function (V) {\n  // 1. Let x be ? ToString(V).\n  // Note: DOMString converter perform ? ToString(V)\n  const x = webidl.converters.DOMString(V)\n\n  // 2. If the value of any element of x is greater than\n  //    255, then throw a TypeError.\n  for (let index = 0; index < x.length; index++) {\n    const charCode = x.charCodeAt(index)\n\n    if (charCode > 255) {\n      throw new TypeError(\n        'Cannot convert argument to a ByteString because the character at ' +\n        `index ${index} has a value of ${charCode} which is greater than 255.`\n      )\n    }\n  }\n\n  // 3. Return an IDL ByteString value whose length is the\n  //    length of x, and where the value of each element is\n  //    the value of the corresponding element of x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-USVString\nwebidl.converters.USVString = toUSVString\n\n// https://webidl.spec.whatwg.org/#es-boolean\nwebidl.converters.boolean = function (V) {\n  // 1. Let x be the result of computing ToBoolean(V).\n  const x = Boolean(V)\n\n  // 2. Return the IDL boolean value that is the one that represents\n  //    the same truth value as the ECMAScript Boolean value x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-any\nwebidl.converters.any = function (V) {\n  return V\n}\n\n// https://webidl.spec.whatwg.org/#es-long-long\nwebidl.converters['long long'] = function (V) {\n  // 1. Let x be ? ConvertToInt(V, 64, \"signed\").\n  const x = webidl.util.ConvertToInt(V, 64, 'signed')\n\n  // 2. Return the IDL long long value that represents\n  //    the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-long-long\nwebidl.converters['unsigned long long'] = function (V) {\n  // 1. Let x be ? ConvertToInt(V, 64, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 64, 'unsigned')\n\n  // 2. Return the IDL unsigned long long value that\n  //    represents the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-long\nwebidl.converters['unsigned long'] = function (V) {\n  // 1. Let x be ? ConvertToInt(V, 32, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 32, 'unsigned')\n\n  // 2. Return the IDL unsigned long value that\n  //    represents the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-short\nwebidl.converters['unsigned short'] = function (V, opts) {\n  // 1. Let x be ? ConvertToInt(V, 16, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 16, 'unsigned', opts)\n\n  // 2. Return the IDL unsigned short value that represents\n  //    the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#idl-ArrayBuffer\nwebidl.converters.ArrayBuffer = function (V, opts = {}) {\n  // 1. If Type(V) is not Object, or V does not have an\n  //    [[ArrayBufferData]] internal slot, then throw a\n  //    TypeError.\n  // see: https://tc39.es/ecma262/#sec-properties-of-the-arraybuffer-instances\n  // see: https://tc39.es/ecma262/#sec-properties-of-the-sharedarraybuffer-instances\n  if (\n    webidl.util.Type(V) !== 'Object' ||\n    !types.isAnyArrayBuffer(V)\n  ) {\n    throw webidl.errors.conversionFailed({\n      prefix: `${V}`,\n      argument: `${V}`,\n      types: ['ArrayBuffer']\n    })\n  }\n\n  // 2. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V) is true, then throw a\n  //    TypeError.\n  if (opts.allowShared === false && types.isSharedArrayBuffer(V)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V) is true, then throw a\n  //    TypeError.\n  // Note: resizable ArrayBuffers are currently a proposal.\n\n  // 4. Return the IDL ArrayBuffer value that is a\n  //    reference to the same object as V.\n  return V\n}\n\nwebidl.converters.TypedArray = function (V, T, opts = {}) {\n  // 1. Let T be the IDL type V is being converted to.\n\n  // 2. If Type(V) is not Object, or V does not have a\n  //    [[TypedArrayName]] internal slot with a value\n  //    equal to T’s name, then throw a TypeError.\n  if (\n    webidl.util.Type(V) !== 'Object' ||\n    !types.isTypedArray(V) ||\n    V.constructor.name !== T.name\n  ) {\n    throw webidl.errors.conversionFailed({\n      prefix: `${T.name}`,\n      argument: `${V}`,\n      types: [T.name]\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 4. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  // Note: resizable array buffers are currently a proposal\n\n  // 5. Return the IDL value of type T that is a reference\n  //    to the same object as V.\n  return V\n}\n\nwebidl.converters.DataView = function (V, opts = {}) {\n  // 1. If Type(V) is not Object, or V does not have a\n  //    [[DataView]] internal slot, then throw a TypeError.\n  if (webidl.util.Type(V) !== 'Object' || !types.isDataView(V)) {\n    throw webidl.errors.exception({\n      header: 'DataView',\n      message: 'Object is not a DataView.'\n    })\n  }\n\n  // 2. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is true,\n  //    then throw a TypeError.\n  if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  // Note: resizable ArrayBuffers are currently a proposal\n\n  // 4. Return the IDL DataView value that is a reference\n  //    to the same object as V.\n  return V\n}\n\n// https://webidl.spec.whatwg.org/#BufferSource\nwebidl.converters.BufferSource = function (V, opts = {}) {\n  if (types.isAnyArrayBuffer(V)) {\n    return webidl.converters.ArrayBuffer(V, opts)\n  }\n\n  if (types.isTypedArray(V)) {\n    return webidl.converters.TypedArray(V, V.constructor)\n  }\n\n  if (types.isDataView(V)) {\n    return webidl.converters.DataView(V, opts)\n  }\n\n  throw new TypeError(`Could not convert ${V} to a BufferSource.`)\n}\n\nwebidl.converters['sequence<ByteString>'] = webidl.sequenceConverter(\n  webidl.converters.ByteString\n)\n\nwebidl.converters['sequence<sequence<ByteString>>'] = webidl.sequenceConverter(\n  webidl.converters['sequence<ByteString>']\n)\n\nwebidl.converters['record<ByteString, ByteString>'] = webidl.recordConverter(\n  webidl.converters.ByteString,\n  webidl.converters.ByteString\n)\n\nmodule.exports = {\n  webidl\n}\n","const assert = require('assert')\nconst { atob } = require('buffer')\nconst { isomorphicDecode } = require('./util')\n\nconst encoder = new TextEncoder()\n\n/**\n * @see https://mimesniff.spec.whatwg.org/#http-token-code-point\n */\nconst HTTP_TOKEN_CODEPOINTS = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/\nconst HTTP_WHITESPACE_REGEX = /(\\u000A|\\u000D|\\u0009|\\u0020)/ // eslint-disable-line\n/**\n * @see https://mimesniff.spec.whatwg.org/#http-quoted-string-token-code-point\n */\nconst HTTP_QUOTED_STRING_TOKENS = /[\\u0009|\\u0020-\\u007E|\\u0080-\\u00FF]/ // eslint-disable-line\n\n// https://fetch.spec.whatwg.org/#data-url-processor\n/** @param {URL} dataURL */\nfunction dataURLProcessor (dataURL) {\n  // 1. Assert: dataURL’s scheme is \"data\".\n  assert(dataURL.protocol === 'data:')\n\n  // 2. Let input be the result of running the URL\n  // serializer on dataURL with exclude fragment\n  // set to true.\n  let input = URLSerializer(dataURL, true)\n\n  // 3. Remove the leading \"data:\" string from input.\n  input = input.slice(5)\n\n  // 4. Let position point at the start of input.\n  const position = { position: 0 }\n\n  // 5. Let mimeType be the result of collecting a\n  // sequence of code points that are not equal\n  // to U+002C (,), given position.\n  let mimeType = collectASequenceOfCodePointsFast(\n    ',',\n    input,\n    position\n  )\n\n  // 6. Strip leading and trailing ASCII whitespace\n  // from mimeType.\n  // Undici implementation note: we need to store the\n  // length because if the mimetype has spaces removed,\n  // the wrong amount will be sliced from the input in\n  // step #9\n  const mimeTypeLength = mimeType.length\n  mimeType = removeASCIIWhitespace(mimeType, true, true)\n\n  // 7. If position is past the end of input, then\n  // return failure\n  if (position.position >= input.length) {\n    return 'failure'\n  }\n\n  // 8. Advance position by 1.\n  position.position++\n\n  // 9. Let encodedBody be the remainder of input.\n  const encodedBody = input.slice(mimeTypeLength + 1)\n\n  // 10. Let body be the percent-decoding of encodedBody.\n  let body = stringPercentDecode(encodedBody)\n\n  // 11. If mimeType ends with U+003B (;), followed by\n  // zero or more U+0020 SPACE, followed by an ASCII\n  // case-insensitive match for \"base64\", then:\n  if (/;(\\u0020){0,}base64$/i.test(mimeType)) {\n    // 1. Let stringBody be the isomorphic decode of body.\n    const stringBody = isomorphicDecode(body)\n\n    // 2. Set body to the forgiving-base64 decode of\n    // stringBody.\n    body = forgivingBase64(stringBody)\n\n    // 3. If body is failure, then return failure.\n    if (body === 'failure') {\n      return 'failure'\n    }\n\n    // 4. Remove the last 6 code points from mimeType.\n    mimeType = mimeType.slice(0, -6)\n\n    // 5. Remove trailing U+0020 SPACE code points from mimeType,\n    // if any.\n    mimeType = mimeType.replace(/(\\u0020)+$/, '')\n\n    // 6. Remove the last U+003B (;) code point from mimeType.\n    mimeType = mimeType.slice(0, -1)\n  }\n\n  // 12. If mimeType starts with U+003B (;), then prepend\n  // \"text/plain\" to mimeType.\n  if (mimeType.startsWith(';')) {\n    mimeType = 'text/plain' + mimeType\n  }\n\n  // 13. Let mimeTypeRecord be the result of parsing\n  // mimeType.\n  let mimeTypeRecord = parseMIMEType(mimeType)\n\n  // 14. If mimeTypeRecord is failure, then set\n  // mimeTypeRecord to text/plain;charset=US-ASCII.\n  if (mimeTypeRecord === 'failure') {\n    mimeTypeRecord = parseMIMEType('text/plain;charset=US-ASCII')\n  }\n\n  // 15. Return a new data: URL struct whose MIME\n  // type is mimeTypeRecord and body is body.\n  // https://fetch.spec.whatwg.org/#data-url-struct\n  return { mimeType: mimeTypeRecord, body }\n}\n\n// https://url.spec.whatwg.org/#concept-url-serializer\n/**\n * @param {URL} url\n * @param {boolean} excludeFragment\n */\nfunction URLSerializer (url, excludeFragment = false) {\n  const href = url.href\n\n  if (!excludeFragment) {\n    return href\n  }\n\n  const hash = href.lastIndexOf('#')\n  if (hash === -1) {\n    return href\n  }\n  return href.slice(0, hash)\n}\n\n// https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\n/**\n * @param {(char: string) => boolean} condition\n * @param {string} input\n * @param {{ position: number }} position\n */\nfunction collectASequenceOfCodePoints (condition, input, position) {\n  // 1. Let result be the empty string.\n  let result = ''\n\n  // 2. While position doesn’t point past the end of input and the\n  // code point at position within input meets the condition condition:\n  while (position.position < input.length && condition(input[position.position])) {\n    // 1. Append that code point to the end of result.\n    result += input[position.position]\n\n    // 2. Advance position by 1.\n    position.position++\n  }\n\n  // 3. Return result.\n  return result\n}\n\n/**\n * A faster collectASequenceOfCodePoints that only works when comparing a single character.\n * @param {string} char\n * @param {string} input\n * @param {{ position: number }} position\n */\nfunction collectASequenceOfCodePointsFast (char, input, position) {\n  const idx = input.indexOf(char, position.position)\n  const start = position.position\n\n  if (idx === -1) {\n    position.position = input.length\n    return input.slice(start)\n  }\n\n  position.position = idx\n  return input.slice(start, position.position)\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\n/** @param {string} input */\nfunction stringPercentDecode (input) {\n  // 1. Let bytes be the UTF-8 encoding of input.\n  const bytes = encoder.encode(input)\n\n  // 2. Return the percent-decoding of bytes.\n  return percentDecode(bytes)\n}\n\n// https://url.spec.whatwg.org/#percent-decode\n/** @param {Uint8Array} input */\nfunction percentDecode (input) {\n  // 1. Let output be an empty byte sequence.\n  /** @type {number[]} */\n  const output = []\n\n  // 2. For each byte byte in input:\n  for (let i = 0; i < input.length; i++) {\n    const byte = input[i]\n\n    // 1. If byte is not 0x25 (%), then append byte to output.\n    if (byte !== 0x25) {\n      output.push(byte)\n\n    // 2. Otherwise, if byte is 0x25 (%) and the next two bytes\n    // after byte in input are not in the ranges\n    // 0x30 (0) to 0x39 (9), 0x41 (A) to 0x46 (F),\n    // and 0x61 (a) to 0x66 (f), all inclusive, append byte\n    // to output.\n    } else if (\n      byte === 0x25 &&\n      !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(input[i + 1], input[i + 2]))\n    ) {\n      output.push(0x25)\n\n    // 3. Otherwise:\n    } else {\n      // 1. Let bytePoint be the two bytes after byte in input,\n      // decoded, and then interpreted as hexadecimal number.\n      const nextTwoBytes = String.fromCharCode(input[i + 1], input[i + 2])\n      const bytePoint = Number.parseInt(nextTwoBytes, 16)\n\n      // 2. Append a byte whose value is bytePoint to output.\n      output.push(bytePoint)\n\n      // 3. Skip the next two bytes in input.\n      i += 2\n    }\n  }\n\n  // 3. Return output.\n  return Uint8Array.from(output)\n}\n\n// https://mimesniff.spec.whatwg.org/#parse-a-mime-type\n/** @param {string} input */\nfunction parseMIMEType (input) {\n  // 1. Remove any leading and trailing HTTP whitespace\n  // from input.\n  input = removeHTTPWhitespace(input, true, true)\n\n  // 2. Let position be a position variable for input,\n  // initially pointing at the start of input.\n  const position = { position: 0 }\n\n  // 3. Let type be the result of collecting a sequence\n  // of code points that are not U+002F (/) from\n  // input, given position.\n  const type = collectASequenceOfCodePointsFast(\n    '/',\n    input,\n    position\n  )\n\n  // 4. If type is the empty string or does not solely\n  // contain HTTP token code points, then return failure.\n  // https://mimesniff.spec.whatwg.org/#http-token-code-point\n  if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {\n    return 'failure'\n  }\n\n  // 5. If position is past the end of input, then return\n  // failure\n  if (position.position > input.length) {\n    return 'failure'\n  }\n\n  // 6. Advance position by 1. (This skips past U+002F (/).)\n  position.position++\n\n  // 7. Let subtype be the result of collecting a sequence of\n  // code points that are not U+003B (;) from input, given\n  // position.\n  let subtype = collectASequenceOfCodePointsFast(\n    ';',\n    input,\n    position\n  )\n\n  // 8. Remove any trailing HTTP whitespace from subtype.\n  subtype = removeHTTPWhitespace(subtype, false, true)\n\n  // 9. If subtype is the empty string or does not solely\n  // contain HTTP token code points, then return failure.\n  if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {\n    return 'failure'\n  }\n\n  const typeLowercase = type.toLowerCase()\n  const subtypeLowercase = subtype.toLowerCase()\n\n  // 10. Let mimeType be a new MIME type record whose type\n  // is type, in ASCII lowercase, and subtype is subtype,\n  // in ASCII lowercase.\n  // https://mimesniff.spec.whatwg.org/#mime-type\n  const mimeType = {\n    type: typeLowercase,\n    subtype: subtypeLowercase,\n    /** @type {Map<string, string>} */\n    parameters: new Map(),\n    // https://mimesniff.spec.whatwg.org/#mime-type-essence\n    essence: `${typeLowercase}/${subtypeLowercase}`\n  }\n\n  // 11. While position is not past the end of input:\n  while (position.position < input.length) {\n    // 1. Advance position by 1. (This skips past U+003B (;).)\n    position.position++\n\n    // 2. Collect a sequence of code points that are HTTP\n    // whitespace from input given position.\n    collectASequenceOfCodePoints(\n      // https://fetch.spec.whatwg.org/#http-whitespace\n      char => HTTP_WHITESPACE_REGEX.test(char),\n      input,\n      position\n    )\n\n    // 3. Let parameterName be the result of collecting a\n    // sequence of code points that are not U+003B (;)\n    // or U+003D (=) from input, given position.\n    let parameterName = collectASequenceOfCodePoints(\n      (char) => char !== ';' && char !== '=',\n      input,\n      position\n    )\n\n    // 4. Set parameterName to parameterName, in ASCII\n    // lowercase.\n    parameterName = parameterName.toLowerCase()\n\n    // 5. If position is not past the end of input, then:\n    if (position.position < input.length) {\n      // 1. If the code point at position within input is\n      // U+003B (;), then continue.\n      if (input[position.position] === ';') {\n        continue\n      }\n\n      // 2. Advance position by 1. (This skips past U+003D (=).)\n      position.position++\n    }\n\n    // 6. If position is past the end of input, then break.\n    if (position.position > input.length) {\n      break\n    }\n\n    // 7. Let parameterValue be null.\n    let parameterValue = null\n\n    // 8. If the code point at position within input is\n    // U+0022 (\"), then:\n    if (input[position.position] === '\"') {\n      // 1. Set parameterValue to the result of collecting\n      // an HTTP quoted string from input, given position\n      // and the extract-value flag.\n      parameterValue = collectAnHTTPQuotedString(input, position, true)\n\n      // 2. Collect a sequence of code points that are not\n      // U+003B (;) from input, given position.\n      collectASequenceOfCodePointsFast(\n        ';',\n        input,\n        position\n      )\n\n    // 9. Otherwise:\n    } else {\n      // 1. Set parameterValue to the result of collecting\n      // a sequence of code points that are not U+003B (;)\n      // from input, given position.\n      parameterValue = collectASequenceOfCodePointsFast(\n        ';',\n        input,\n        position\n      )\n\n      // 2. Remove any trailing HTTP whitespace from parameterValue.\n      parameterValue = removeHTTPWhitespace(parameterValue, false, true)\n\n      // 3. If parameterValue is the empty string, then continue.\n      if (parameterValue.length === 0) {\n        continue\n      }\n    }\n\n    // 10. If all of the following are true\n    // - parameterName is not the empty string\n    // - parameterName solely contains HTTP token code points\n    // - parameterValue solely contains HTTP quoted-string token code points\n    // - mimeType’s parameters[parameterName] does not exist\n    // then set mimeType’s parameters[parameterName] to parameterValue.\n    if (\n      parameterName.length !== 0 &&\n      HTTP_TOKEN_CODEPOINTS.test(parameterName) &&\n      (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) &&\n      !mimeType.parameters.has(parameterName)\n    ) {\n      mimeType.parameters.set(parameterName, parameterValue)\n    }\n  }\n\n  // 12. Return mimeType.\n  return mimeType\n}\n\n// https://infra.spec.whatwg.org/#forgiving-base64-decode\n/** @param {string} data */\nfunction forgivingBase64 (data) {\n  // 1. Remove all ASCII whitespace from data.\n  data = data.replace(/[\\u0009\\u000A\\u000C\\u000D\\u0020]/g, '')  // eslint-disable-line\n\n  // 2. If data’s code point length divides by 4 leaving\n  // no remainder, then:\n  if (data.length % 4 === 0) {\n    // 1. If data ends with one or two U+003D (=) code points,\n    // then remove them from data.\n    data = data.replace(/=?=$/, '')\n  }\n\n  // 3. If data’s code point length divides by 4 leaving\n  // a remainder of 1, then return failure.\n  if (data.length % 4 === 1) {\n    return 'failure'\n  }\n\n  // 4. If data contains a code point that is not one of\n  //  U+002B (+)\n  //  U+002F (/)\n  //  ASCII alphanumeric\n  // then return failure.\n  if (/[^+/0-9A-Za-z]/.test(data)) {\n    return 'failure'\n  }\n\n  const binary = atob(data)\n  const bytes = new Uint8Array(binary.length)\n\n  for (let byte = 0; byte < binary.length; byte++) {\n    bytes[byte] = binary.charCodeAt(byte)\n  }\n\n  return bytes\n}\n\n// https://fetch.spec.whatwg.org/#collect-an-http-quoted-string\n// tests: https://fetch.spec.whatwg.org/#example-http-quoted-string\n/**\n * @param {string} input\n * @param {{ position: number }} position\n * @param {boolean?} extractValue\n */\nfunction collectAnHTTPQuotedString (input, position, extractValue) {\n  // 1. Let positionStart be position.\n  const positionStart = position.position\n\n  // 2. Let value be the empty string.\n  let value = ''\n\n  // 3. Assert: the code point at position within input\n  // is U+0022 (\").\n  assert(input[position.position] === '\"')\n\n  // 4. Advance position by 1.\n  position.position++\n\n  // 5. While true:\n  while (true) {\n    // 1. Append the result of collecting a sequence of code points\n    // that are not U+0022 (\") or U+005C (\\) from input, given\n    // position, to value.\n    value += collectASequenceOfCodePoints(\n      (char) => char !== '\"' && char !== '\\\\',\n      input,\n      position\n    )\n\n    // 2. If position is past the end of input, then break.\n    if (position.position >= input.length) {\n      break\n    }\n\n    // 3. Let quoteOrBackslash be the code point at position within\n    // input.\n    const quoteOrBackslash = input[position.position]\n\n    // 4. Advance position by 1.\n    position.position++\n\n    // 5. If quoteOrBackslash is U+005C (\\), then:\n    if (quoteOrBackslash === '\\\\') {\n      // 1. If position is past the end of input, then append\n      // U+005C (\\) to value and break.\n      if (position.position >= input.length) {\n        value += '\\\\'\n        break\n      }\n\n      // 2. Append the code point at position within input to value.\n      value += input[position.position]\n\n      // 3. Advance position by 1.\n      position.position++\n\n    // 6. Otherwise:\n    } else {\n      // 1. Assert: quoteOrBackslash is U+0022 (\").\n      assert(quoteOrBackslash === '\"')\n\n      // 2. Break.\n      break\n    }\n  }\n\n  // 6. If the extract-value flag is set, then return value.\n  if (extractValue) {\n    return value\n  }\n\n  // 7. Return the code points from positionStart to position,\n  // inclusive, within input.\n  return input.slice(positionStart, position.position)\n}\n\n/**\n * @see https://mimesniff.spec.whatwg.org/#serialize-a-mime-type\n */\nfunction serializeAMimeType (mimeType) {\n  assert(mimeType !== 'failure')\n  const { parameters, essence } = mimeType\n\n  // 1. Let serialization be the concatenation of mimeType’s\n  //    type, U+002F (/), and mimeType’s subtype.\n  let serialization = essence\n\n  // 2. For each name → value of mimeType’s parameters:\n  for (let [name, value] of parameters.entries()) {\n    // 1. Append U+003B (;) to serialization.\n    serialization += ';'\n\n    // 2. Append name to serialization.\n    serialization += name\n\n    // 3. Append U+003D (=) to serialization.\n    serialization += '='\n\n    // 4. If value does not solely contain HTTP token code\n    //    points or value is the empty string, then:\n    if (!HTTP_TOKEN_CODEPOINTS.test(value)) {\n      // 1. Precede each occurence of U+0022 (\") or\n      //    U+005C (\\) in value with U+005C (\\).\n      value = value.replace(/(\\\\|\")/g, '\\\\$1')\n\n      // 2. Prepend U+0022 (\") to value.\n      value = '\"' + value\n\n      // 3. Append U+0022 (\") to value.\n      value += '\"'\n    }\n\n    // 5. Append value to serialization.\n    serialization += value\n  }\n\n  // 3. Return serialization.\n  return serialization\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-whitespace\n * @param {string} char\n */\nfunction isHTTPWhiteSpace (char) {\n  return char === '\\r' || char === '\\n' || char === '\\t' || char === ' '\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-whitespace\n * @param {string} str\n */\nfunction removeHTTPWhitespace (str, leading = true, trailing = true) {\n  let lead = 0\n  let trail = str.length - 1\n\n  if (leading) {\n    for (; lead < str.length && isHTTPWhiteSpace(str[lead]); lead++);\n  }\n\n  if (trailing) {\n    for (; trail > 0 && isHTTPWhiteSpace(str[trail]); trail--);\n  }\n\n  return str.slice(lead, trail + 1)\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n * @param {string} char\n */\nfunction isASCIIWhitespace (char) {\n  return char === '\\r' || char === '\\n' || char === '\\t' || char === '\\f' || char === ' '\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\n */\nfunction removeASCIIWhitespace (str, leading = true, trailing = true) {\n  let lead = 0\n  let trail = str.length - 1\n\n  if (leading) {\n    for (; lead < str.length && isASCIIWhitespace(str[lead]); lead++);\n  }\n\n  if (trailing) {\n    for (; trail > 0 && isASCIIWhitespace(str[trail]); trail--);\n  }\n\n  return str.slice(lead, trail + 1)\n}\n\nmodule.exports = {\n  dataURLProcessor,\n  URLSerializer,\n  collectASequenceOfCodePoints,\n  collectASequenceOfCodePointsFast,\n  stringPercentDecode,\n  parseMIMEType,\n  collectAnHTTPQuotedString,\n  serializeAMimeType\n}\n","'use strict'\n\nconst { Blob, File: NativeFile } = require('buffer')\nconst { types } = require('util')\nconst { kState } = require('./symbols')\nconst { isBlobLike } = require('./util')\nconst { webidl } = require('./webidl')\nconst { parseMIMEType, serializeAMimeType } = require('./dataURL')\nconst { kEnumerableProperty } = require('../core/util')\nconst encoder = new TextEncoder()\n\nclass File extends Blob {\n  constructor (fileBits, fileName, options = {}) {\n    // The File constructor is invoked with two or three parameters, depending\n    // on whether the optional dictionary parameter is used. When the File()\n    // constructor is invoked, user agents must run the following steps:\n    webidl.argumentLengthCheck(arguments, 2, { header: 'File constructor' })\n\n    fileBits = webidl.converters['sequence<BlobPart>'](fileBits)\n    fileName = webidl.converters.USVString(fileName)\n    options = webidl.converters.FilePropertyBag(options)\n\n    // 1. Let bytes be the result of processing blob parts given fileBits and\n    // options.\n    // Note: Blob handles this for us\n\n    // 2. Let n be the fileName argument to the constructor.\n    const n = fileName\n\n    // 3. Process FilePropertyBag dictionary argument by running the following\n    // substeps:\n\n    //    1. If the type member is provided and is not the empty string, let t\n    //    be set to the type dictionary member. If t contains any characters\n    //    outside the range U+0020 to U+007E, then set t to the empty string\n    //    and return from these substeps.\n    //    2. Convert every character in t to ASCII lowercase.\n    let t = options.type\n    let d\n\n    // eslint-disable-next-line no-labels\n    substep: {\n      if (t) {\n        t = parseMIMEType(t)\n\n        if (t === 'failure') {\n          t = ''\n          // eslint-disable-next-line no-labels\n          break substep\n        }\n\n        t = serializeAMimeType(t).toLowerCase()\n      }\n\n      //    3. If the lastModified member is provided, let d be set to the\n      //    lastModified dictionary member. If it is not provided, set d to the\n      //    current date and time represented as the number of milliseconds since\n      //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).\n      d = options.lastModified\n    }\n\n    // 4. Return a new File object F such that:\n    // F refers to the bytes byte sequence.\n    // F.size is set to the number of total bytes in bytes.\n    // F.name is set to n.\n    // F.type is set to t.\n    // F.lastModified is set to d.\n\n    super(processBlobParts(fileBits, options), { type: t })\n    this[kState] = {\n      name: n,\n      lastModified: d,\n      type: t\n    }\n  }\n\n  get name () {\n    webidl.brandCheck(this, File)\n\n    return this[kState].name\n  }\n\n  get lastModified () {\n    webidl.brandCheck(this, File)\n\n    return this[kState].lastModified\n  }\n\n  get type () {\n    webidl.brandCheck(this, File)\n\n    return this[kState].type\n  }\n}\n\nclass FileLike {\n  constructor (blobLike, fileName, options = {}) {\n    // TODO: argument idl type check\n\n    // The File constructor is invoked with two or three parameters, depending\n    // on whether the optional dictionary parameter is used. When the File()\n    // constructor is invoked, user agents must run the following steps:\n\n    // 1. Let bytes be the result of processing blob parts given fileBits and\n    // options.\n\n    // 2. Let n be the fileName argument to the constructor.\n    const n = fileName\n\n    // 3. Process FilePropertyBag dictionary argument by running the following\n    // substeps:\n\n    //    1. If the type member is provided and is not the empty string, let t\n    //    be set to the type dictionary member. If t contains any characters\n    //    outside the range U+0020 to U+007E, then set t to the empty string\n    //    and return from these substeps.\n    //    TODO\n    const t = options.type\n\n    //    2. Convert every character in t to ASCII lowercase.\n    //    TODO\n\n    //    3. If the lastModified member is provided, let d be set to the\n    //    lastModified dictionary member. If it is not provided, set d to the\n    //    current date and time represented as the number of milliseconds since\n    //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).\n    const d = options.lastModified ?? Date.now()\n\n    // 4. Return a new File object F such that:\n    // F refers to the bytes byte sequence.\n    // F.size is set to the number of total bytes in bytes.\n    // F.name is set to n.\n    // F.type is set to t.\n    // F.lastModified is set to d.\n\n    this[kState] = {\n      blobLike,\n      name: n,\n      type: t,\n      lastModified: d\n    }\n  }\n\n  stream (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.stream(...args)\n  }\n\n  arrayBuffer (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.arrayBuffer(...args)\n  }\n\n  slice (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.slice(...args)\n  }\n\n  text (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.text(...args)\n  }\n\n  get size () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.size\n  }\n\n  get type () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.type\n  }\n\n  get name () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].name\n  }\n\n  get lastModified () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n}\n\nObject.defineProperties(File.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'File',\n    configurable: true\n  },\n  name: kEnumerableProperty,\n  lastModified: kEnumerableProperty\n})\n\nwebidl.converters.Blob = webidl.interfaceConverter(Blob)\n\nwebidl.converters.BlobPart = function (V, opts) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (isBlobLike(V)) {\n      return webidl.converters.Blob(V, { strict: false })\n    }\n\n    if (\n      ArrayBuffer.isView(V) ||\n      types.isAnyArrayBuffer(V)\n    ) {\n      return webidl.converters.BufferSource(V, opts)\n    }\n  }\n\n  return webidl.converters.USVString(V, opts)\n}\n\nwebidl.converters['sequence<BlobPart>'] = webidl.sequenceConverter(\n  webidl.converters.BlobPart\n)\n\n// https://www.w3.org/TR/FileAPI/#dfn-FilePropertyBag\nwebidl.converters.FilePropertyBag = webidl.dictionaryConverter([\n  {\n    key: 'lastModified',\n    converter: webidl.converters['long long'],\n    get defaultValue () {\n      return Date.now()\n    }\n  },\n  {\n    key: 'type',\n    converter: webidl.converters.DOMString,\n    defaultValue: ''\n  },\n  {\n    key: 'endings',\n    converter: (value) => {\n      value = webidl.converters.DOMString(value)\n      value = value.toLowerCase()\n\n      if (value !== 'native') {\n        value = 'transparent'\n      }\n\n      return value\n    },\n    defaultValue: 'transparent'\n  }\n])\n\n/**\n * @see https://www.w3.org/TR/FileAPI/#process-blob-parts\n * @param {(NodeJS.TypedArray|Blob|string)[]} parts\n * @param {{ type: string, endings: string }} options\n */\nfunction processBlobParts (parts, options) {\n  // 1. Let bytes be an empty sequence of bytes.\n  /** @type {NodeJS.TypedArray[]} */\n  const bytes = []\n\n  // 2. For each element in parts:\n  for (const element of parts) {\n    // 1. If element is a USVString, run the following substeps:\n    if (typeof element === 'string') {\n      // 1. Let s be element.\n      let s = element\n\n      // 2. If the endings member of options is \"native\", set s\n      //    to the result of converting line endings to native\n      //    of element.\n      if (options.endings === 'native') {\n        s = convertLineEndingsNative(s)\n      }\n\n      // 3. Append the result of UTF-8 encoding s to bytes.\n      bytes.push(encoder.encode(s))\n    } else if (\n      types.isAnyArrayBuffer(element) ||\n      types.isTypedArray(element)\n    ) {\n      // 2. If element is a BufferSource, get a copy of the\n      //    bytes held by the buffer source, and append those\n      //    bytes to bytes.\n      if (!element.buffer) { // ArrayBuffer\n        bytes.push(new Uint8Array(element))\n      } else {\n        bytes.push(\n          new Uint8Array(element.buffer, element.byteOffset, element.byteLength)\n        )\n      }\n    } else if (isBlobLike(element)) {\n      // 3. If element is a Blob, append the bytes it represents\n      //    to bytes.\n      bytes.push(element)\n    }\n  }\n\n  // 3. Return bytes.\n  return bytes\n}\n\n/**\n * @see https://www.w3.org/TR/FileAPI/#convert-line-endings-to-native\n * @param {string} s\n */\nfunction convertLineEndingsNative (s) {\n  // 1. Let native line ending be be the code point U+000A LF.\n  let nativeLineEnding = '\\n'\n\n  // 2. If the underlying platform’s conventions are to\n  //    represent newlines as a carriage return and line feed\n  //    sequence, set native line ending to the code point\n  //    U+000D CR followed by the code point U+000A LF.\n  if (process.platform === 'win32') {\n    nativeLineEnding = '\\r\\n'\n  }\n\n  return s.replace(/\\r?\\n/g, nativeLineEnding)\n}\n\n// If this function is moved to ./util.js, some tools (such as\n// rollup) will warn about circular dependencies. See:\n// https://github.com/nodejs/undici/issues/1629\nfunction isFileLike (object) {\n  return (\n    (NativeFile && object instanceof NativeFile) ||\n    object instanceof File || (\n      object &&\n      (typeof object.stream === 'function' ||\n      typeof object.arrayBuffer === 'function') &&\n      object[Symbol.toStringTag] === 'File'\n    )\n  )\n}\n\nmodule.exports = { File, FileLike, isFileLike }\n","'use strict'\n\nconst { isBlobLike, toUSVString, makeIterator } = require('./util')\nconst { kState } = require('./symbols')\nconst { File: UndiciFile, FileLike, isFileLike } = require('./file')\nconst { webidl } = require('./webidl')\nconst { Blob, File: NativeFile } = require('buffer')\n\n/** @type {globalThis['File']} */\nconst File = NativeFile ?? UndiciFile\n\n// https://xhr.spec.whatwg.org/#formdata\nclass FormData {\n  constructor (form) {\n    if (form !== undefined) {\n      throw webidl.errors.conversionFailed({\n        prefix: 'FormData constructor',\n        argument: 'Argument 1',\n        types: ['undefined']\n      })\n    }\n\n    this[kState] = []\n  }\n\n  append (name, value, filename = undefined) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 2, { header: 'FormData.append' })\n\n    if (arguments.length === 3 && !isBlobLike(value)) {\n      throw new TypeError(\n        \"Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'\"\n      )\n    }\n\n    // 1. Let value be value if given; otherwise blobValue.\n\n    name = webidl.converters.USVString(name)\n    value = isBlobLike(value)\n      ? webidl.converters.Blob(value, { strict: false })\n      : webidl.converters.USVString(value)\n    filename = arguments.length === 3\n      ? webidl.converters.USVString(filename)\n      : undefined\n\n    // 2. Let entry be the result of creating an entry with\n    // name, value, and filename if given.\n    const entry = makeEntry(name, value, filename)\n\n    // 3. Append entry to this’s entry list.\n    this[kState].push(entry)\n  }\n\n  delete (name) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.delete' })\n\n    name = webidl.converters.USVString(name)\n\n    // The delete(name) method steps are to remove all entries whose name\n    // is name from this’s entry list.\n    this[kState] = this[kState].filter(entry => entry.name !== name)\n  }\n\n  get (name) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.get' })\n\n    name = webidl.converters.USVString(name)\n\n    // 1. If there is no entry whose name is name in this’s entry list,\n    // then return null.\n    const idx = this[kState].findIndex((entry) => entry.name === name)\n    if (idx === -1) {\n      return null\n    }\n\n    // 2. Return the value of the first entry whose name is name from\n    // this’s entry list.\n    return this[kState][idx].value\n  }\n\n  getAll (name) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.getAll' })\n\n    name = webidl.converters.USVString(name)\n\n    // 1. If there is no entry whose name is name in this’s entry list,\n    // then return the empty list.\n    // 2. Return the values of all entries whose name is name, in order,\n    // from this’s entry list.\n    return this[kState]\n      .filter((entry) => entry.name === name)\n      .map((entry) => entry.value)\n  }\n\n  has (name) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.has' })\n\n    name = webidl.converters.USVString(name)\n\n    // The has(name) method steps are to return true if there is an entry\n    // whose name is name in this’s entry list; otherwise false.\n    return this[kState].findIndex((entry) => entry.name === name) !== -1\n  }\n\n  set (name, value, filename = undefined) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 2, { header: 'FormData.set' })\n\n    if (arguments.length === 3 && !isBlobLike(value)) {\n      throw new TypeError(\n        \"Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'\"\n      )\n    }\n\n    // The set(name, value) and set(name, blobValue, filename) method steps\n    // are:\n\n    // 1. Let value be value if given; otherwise blobValue.\n\n    name = webidl.converters.USVString(name)\n    value = isBlobLike(value)\n      ? webidl.converters.Blob(value, { strict: false })\n      : webidl.converters.USVString(value)\n    filename = arguments.length === 3\n      ? toUSVString(filename)\n      : undefined\n\n    // 2. Let entry be the result of creating an entry with name, value, and\n    // filename if given.\n    const entry = makeEntry(name, value, filename)\n\n    // 3. If there are entries in this’s entry list whose name is name, then\n    // replace the first such entry with entry and remove the others.\n    const idx = this[kState].findIndex((entry) => entry.name === name)\n    if (idx !== -1) {\n      this[kState] = [\n        ...this[kState].slice(0, idx),\n        entry,\n        ...this[kState].slice(idx + 1).filter((entry) => entry.name !== name)\n      ]\n    } else {\n      // 4. Otherwise, append entry to this’s entry list.\n      this[kState].push(entry)\n    }\n  }\n\n  entries () {\n    webidl.brandCheck(this, FormData)\n\n    return makeIterator(\n      () => this[kState].map(pair => [pair.name, pair.value]),\n      'FormData',\n      'key+value'\n    )\n  }\n\n  keys () {\n    webidl.brandCheck(this, FormData)\n\n    return makeIterator(\n      () => this[kState].map(pair => [pair.name, pair.value]),\n      'FormData',\n      'key'\n    )\n  }\n\n  values () {\n    webidl.brandCheck(this, FormData)\n\n    return makeIterator(\n      () => this[kState].map(pair => [pair.name, pair.value]),\n      'FormData',\n      'value'\n    )\n  }\n\n  /**\n   * @param {(value: string, key: string, self: FormData) => void} callbackFn\n   * @param {unknown} thisArg\n   */\n  forEach (callbackFn, thisArg = globalThis) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.forEach' })\n\n    if (typeof callbackFn !== 'function') {\n      throw new TypeError(\n        \"Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'.\"\n      )\n    }\n\n    for (const [key, value] of this) {\n      callbackFn.apply(thisArg, [value, key, this])\n    }\n  }\n}\n\nFormData.prototype[Symbol.iterator] = FormData.prototype.entries\n\nObject.defineProperties(FormData.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'FormData',\n    configurable: true\n  }\n})\n\n/**\n * @see https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#create-an-entry\n * @param {string} name\n * @param {string|Blob} value\n * @param {?string} filename\n * @returns\n */\nfunction makeEntry (name, value, filename) {\n  // 1. Set name to the result of converting name into a scalar value string.\n  // \"To convert a string into a scalar value string, replace any surrogates\n  //  with U+FFFD.\"\n  // see: https://nodejs.org/dist/latest-v18.x/docs/api/buffer.html#buftostringencoding-start-end\n  name = Buffer.from(name).toString('utf8')\n\n  // 2. If value is a string, then set value to the result of converting\n  //    value into a scalar value string.\n  if (typeof value === 'string') {\n    value = Buffer.from(value).toString('utf8')\n  } else {\n    // 3. Otherwise:\n\n    // 1. If value is not a File object, then set value to a new File object,\n    //    representing the same bytes, whose name attribute value is \"blob\"\n    if (!isFileLike(value)) {\n      value = value instanceof Blob\n        ? new File([value], 'blob', { type: value.type })\n        : new FileLike(value, 'blob', { type: value.type })\n    }\n\n    // 2. If filename is given, then set value to a new File object,\n    //    representing the same bytes, whose name attribute is filename.\n    if (filename !== undefined) {\n      /** @type {FilePropertyBag} */\n      const options = {\n        type: value.type,\n        lastModified: value.lastModified\n      }\n\n      value = (NativeFile && value instanceof NativeFile) || value instanceof UndiciFile\n        ? new File([value], filename, options)\n        : new FileLike(value, filename, options)\n    }\n  }\n\n  // 4. Return an entry whose name is name and whose value is value.\n  return { name, value }\n}\n\nmodule.exports = { FormData }\n","'use strict'\n\nconst Busboy = require('@fastify/busboy')\nconst util = require('../core/util')\nconst {\n  ReadableStreamFrom,\n  isBlobLike,\n  isReadableStreamLike,\n  readableStreamClose,\n  createDeferredPromise,\n  fullyReadBody\n} = require('./util')\nconst { FormData } = require('./formdata')\nconst { kState } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { DOMException, structuredClone } = require('./constants')\nconst { Blob, File: NativeFile } = require('buffer')\nconst { kBodyUsed } = require('../core/symbols')\nconst assert = require('assert')\nconst { isErrored } = require('../core/util')\nconst { isUint8Array, isArrayBuffer } = require('util/types')\nconst { File: UndiciFile } = require('./file')\nconst { parseMIMEType, serializeAMimeType } = require('./dataURL')\n\nlet ReadableStream = globalThis.ReadableStream\n\n/** @type {globalThis['File']} */\nconst File = NativeFile ?? UndiciFile\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\n// https://fetch.spec.whatwg.org/#concept-bodyinit-extract\nfunction extractBody (object, keepalive = false) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  // 1. Let stream be null.\n  let stream = null\n\n  // 2. If object is a ReadableStream object, then set stream to object.\n  if (object instanceof ReadableStream) {\n    stream = object\n  } else if (isBlobLike(object)) {\n    // 3. Otherwise, if object is a Blob object, set stream to the\n    //    result of running object’s get stream.\n    stream = object.stream()\n  } else {\n    // 4. Otherwise, set stream to a new ReadableStream object, and set\n    //    up stream.\n    stream = new ReadableStream({\n      async pull (controller) {\n        controller.enqueue(\n          typeof source === 'string' ? textEncoder.encode(source) : source\n        )\n        queueMicrotask(() => readableStreamClose(controller))\n      },\n      start () {},\n      type: undefined\n    })\n  }\n\n  // 5. Assert: stream is a ReadableStream object.\n  assert(isReadableStreamLike(stream))\n\n  // 6. Let action be null.\n  let action = null\n\n  // 7. Let source be null.\n  let source = null\n\n  // 8. Let length be null.\n  let length = null\n\n  // 9. Let type be null.\n  let type = null\n\n  // 10. Switch on object:\n  if (typeof object === 'string') {\n    // Set source to the UTF-8 encoding of object.\n    // Note: setting source to a Uint8Array here breaks some mocking assumptions.\n    source = object\n\n    // Set type to `text/plain;charset=UTF-8`.\n    type = 'text/plain;charset=UTF-8'\n  } else if (object instanceof URLSearchParams) {\n    // URLSearchParams\n\n    // spec says to run application/x-www-form-urlencoded on body.list\n    // this is implemented in Node.js as apart of an URLSearchParams instance toString method\n    // See: https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L490\n    // and https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L1100\n\n    // Set source to the result of running the application/x-www-form-urlencoded serializer with object’s list.\n    source = object.toString()\n\n    // Set type to `application/x-www-form-urlencoded;charset=UTF-8`.\n    type = 'application/x-www-form-urlencoded;charset=UTF-8'\n  } else if (isArrayBuffer(object)) {\n    // BufferSource/ArrayBuffer\n\n    // Set source to a copy of the bytes held by object.\n    source = new Uint8Array(object.slice())\n  } else if (ArrayBuffer.isView(object)) {\n    // BufferSource/ArrayBufferView\n\n    // Set source to a copy of the bytes held by object.\n    source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength))\n  } else if (util.isFormDataLike(object)) {\n    const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, '0')}`\n    const prefix = `--${boundary}\\r\\nContent-Disposition: form-data`\n\n    /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n    const escape = (str) =>\n      str.replace(/\\n/g, '%0A').replace(/\\r/g, '%0D').replace(/\"/g, '%22')\n    const normalizeLinefeeds = (value) => value.replace(/\\r?\\n|\\r/g, '\\r\\n')\n\n    // Set action to this step: run the multipart/form-data\n    // encoding algorithm, with object’s entry list and UTF-8.\n    // - This ensures that the body is immutable and can't be changed afterwords\n    // - That the content-length is calculated in advance.\n    // - And that all parts are pre-encoded and ready to be sent.\n\n    const blobParts = []\n    const rn = new Uint8Array([13, 10]) // '\\r\\n'\n    length = 0\n    let hasUnknownSizeValue = false\n\n    for (const [name, value] of object) {\n      if (typeof value === 'string') {\n        const chunk = textEncoder.encode(prefix +\n          `; name=\"${escape(normalizeLinefeeds(name))}\"` +\n          `\\r\\n\\r\\n${normalizeLinefeeds(value)}\\r\\n`)\n        blobParts.push(chunk)\n        length += chunk.byteLength\n      } else {\n        const chunk = textEncoder.encode(`${prefix}; name=\"${escape(normalizeLinefeeds(name))}\"` +\n          (value.name ? `; filename=\"${escape(value.name)}\"` : '') + '\\r\\n' +\n          `Content-Type: ${\n            value.type || 'application/octet-stream'\n          }\\r\\n\\r\\n`)\n        blobParts.push(chunk, value, rn)\n        if (typeof value.size === 'number') {\n          length += chunk.byteLength + value.size + rn.byteLength\n        } else {\n          hasUnknownSizeValue = true\n        }\n      }\n    }\n\n    const chunk = textEncoder.encode(`--${boundary}--`)\n    blobParts.push(chunk)\n    length += chunk.byteLength\n    if (hasUnknownSizeValue) {\n      length = null\n    }\n\n    // Set source to object.\n    source = object\n\n    action = async function * () {\n      for (const part of blobParts) {\n        if (part.stream) {\n          yield * part.stream()\n        } else {\n          yield part\n        }\n      }\n    }\n\n    // Set type to `multipart/form-data; boundary=`,\n    // followed by the multipart/form-data boundary string generated\n    // by the multipart/form-data encoding algorithm.\n    type = 'multipart/form-data; boundary=' + boundary\n  } else if (isBlobLike(object)) {\n    // Blob\n\n    // Set source to object.\n    source = object\n\n    // Set length to object’s size.\n    length = object.size\n\n    // If object’s type attribute is not the empty byte sequence, set\n    // type to its value.\n    if (object.type) {\n      type = object.type\n    }\n  } else if (typeof object[Symbol.asyncIterator] === 'function') {\n    // If keepalive is true, then throw a TypeError.\n    if (keepalive) {\n      throw new TypeError('keepalive')\n    }\n\n    // If object is disturbed or locked, then throw a TypeError.\n    if (util.isDisturbed(object) || object.locked) {\n      throw new TypeError(\n        'Response body object should not be disturbed or locked'\n      )\n    }\n\n    stream =\n      object instanceof ReadableStream ? object : ReadableStreamFrom(object)\n  }\n\n  // 11. If source is a byte sequence, then set action to a\n  // step that returns source and length to source’s length.\n  if (typeof source === 'string' || util.isBuffer(source)) {\n    length = Buffer.byteLength(source)\n  }\n\n  // 12. If action is non-null, then run these steps in in parallel:\n  if (action != null) {\n    // Run action.\n    let iterator\n    stream = new ReadableStream({\n      async start () {\n        iterator = action(object)[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { value, done } = await iterator.next()\n        if (done) {\n          // When running action is done, close stream.\n          queueMicrotask(() => {\n            controller.close()\n          })\n        } else {\n          // Whenever one or more bytes are available and stream is not errored,\n          // enqueue a Uint8Array wrapping an ArrayBuffer containing the available\n          // bytes into stream.\n          if (!isErrored(stream)) {\n            controller.enqueue(new Uint8Array(value))\n          }\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      },\n      type: undefined\n    })\n  }\n\n  // 13. Let body be a body whose stream is stream, source is source,\n  // and length is length.\n  const body = { stream, source, length }\n\n  // 14. Return (body, type).\n  return [body, type]\n}\n\n// https://fetch.spec.whatwg.org/#bodyinit-safely-extract\nfunction safelyExtractBody (object, keepalive = false) {\n  if (!ReadableStream) {\n    // istanbul ignore next\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  // To safely extract a body and a `Content-Type` value from\n  // a byte sequence or BodyInit object object, run these steps:\n\n  // 1. If object is a ReadableStream object, then:\n  if (object instanceof ReadableStream) {\n    // Assert: object is neither disturbed nor locked.\n    // istanbul ignore next\n    assert(!util.isDisturbed(object), 'The body has already been consumed.')\n    // istanbul ignore next\n    assert(!object.locked, 'The stream is locked.')\n  }\n\n  // 2. Return the results of extracting object.\n  return extractBody(object, keepalive)\n}\n\nfunction cloneBody (body) {\n  // To clone a body body, run these steps:\n\n  // https://fetch.spec.whatwg.org/#concept-body-clone\n\n  // 1. Let « out1, out2 » be the result of teeing body’s stream.\n  const [out1, out2] = body.stream.tee()\n  const out2Clone = structuredClone(out2, { transfer: [out2] })\n  // This, for whatever reasons, unrefs out2Clone which allows\n  // the process to exit by itself.\n  const [, finalClone] = out2Clone.tee()\n\n  // 2. Set body’s stream to out1.\n  body.stream = out1\n\n  // 3. Return a body whose stream is out2 and other members are copied from body.\n  return {\n    stream: finalClone,\n    length: body.length,\n    source: body.source\n  }\n}\n\nasync function * consumeBody (body) {\n  if (body) {\n    if (isUint8Array(body)) {\n      yield body\n    } else {\n      const stream = body.stream\n\n      if (util.isDisturbed(stream)) {\n        throw new TypeError('The body has already been consumed.')\n      }\n\n      if (stream.locked) {\n        throw new TypeError('The stream is locked.')\n      }\n\n      // Compat.\n      stream[kBodyUsed] = true\n\n      yield * stream\n    }\n  }\n}\n\nfunction throwIfAborted (state) {\n  if (state.aborted) {\n    throw new DOMException('The operation was aborted.', 'AbortError')\n  }\n}\n\nfunction bodyMixinMethods (instance) {\n  const methods = {\n    blob () {\n      // The blob() method steps are to return the result of\n      // running consume body with this and the following step\n      // given a byte sequence bytes: return a Blob whose\n      // contents are bytes and whose type attribute is this’s\n      // MIME type.\n      return specConsumeBody(this, (bytes) => {\n        let mimeType = bodyMimeType(this)\n\n        if (mimeType === 'failure') {\n          mimeType = ''\n        } else if (mimeType) {\n          mimeType = serializeAMimeType(mimeType)\n        }\n\n        // Return a Blob whose contents are bytes and type attribute\n        // is mimeType.\n        return new Blob([bytes], { type: mimeType })\n      }, instance)\n    },\n\n    arrayBuffer () {\n      // The arrayBuffer() method steps are to return the result\n      // of running consume body with this and the following step\n      // given a byte sequence bytes: return a new ArrayBuffer\n      // whose contents are bytes.\n      return specConsumeBody(this, (bytes) => {\n        return new Uint8Array(bytes).buffer\n      }, instance)\n    },\n\n    text () {\n      // The text() method steps are to return the result of running\n      // consume body with this and UTF-8 decode.\n      return specConsumeBody(this, utf8DecodeBytes, instance)\n    },\n\n    json () {\n      // The json() method steps are to return the result of running\n      // consume body with this and parse JSON from bytes.\n      return specConsumeBody(this, parseJSONFromBytes, instance)\n    },\n\n    async formData () {\n      webidl.brandCheck(this, instance)\n\n      throwIfAborted(this[kState])\n\n      const contentType = this.headers.get('Content-Type')\n\n      // If mimeType’s essence is \"multipart/form-data\", then:\n      if (/multipart\\/form-data/.test(contentType)) {\n        const headers = {}\n        for (const [key, value] of this.headers) headers[key.toLowerCase()] = value\n\n        const responseFormData = new FormData()\n\n        let busboy\n\n        try {\n          busboy = new Busboy({\n            headers,\n            preservePath: true\n          })\n        } catch (err) {\n          throw new DOMException(`${err}`, 'AbortError')\n        }\n\n        busboy.on('field', (name, value) => {\n          responseFormData.append(name, value)\n        })\n        busboy.on('file', (name, value, filename, encoding, mimeType) => {\n          const chunks = []\n\n          if (encoding === 'base64' || encoding.toLowerCase() === 'base64') {\n            let base64chunk = ''\n\n            value.on('data', (chunk) => {\n              base64chunk += chunk.toString().replace(/[\\r\\n]/gm, '')\n\n              const end = base64chunk.length - base64chunk.length % 4\n              chunks.push(Buffer.from(base64chunk.slice(0, end), 'base64'))\n\n              base64chunk = base64chunk.slice(end)\n            })\n            value.on('end', () => {\n              chunks.push(Buffer.from(base64chunk, 'base64'))\n              responseFormData.append(name, new File(chunks, filename, { type: mimeType }))\n            })\n          } else {\n            value.on('data', (chunk) => {\n              chunks.push(chunk)\n            })\n            value.on('end', () => {\n              responseFormData.append(name, new File(chunks, filename, { type: mimeType }))\n            })\n          }\n        })\n\n        const busboyResolve = new Promise((resolve, reject) => {\n          busboy.on('finish', resolve)\n          busboy.on('error', (err) => reject(new TypeError(err)))\n        })\n\n        if (this.body !== null) for await (const chunk of consumeBody(this[kState].body)) busboy.write(chunk)\n        busboy.end()\n        await busboyResolve\n\n        return responseFormData\n      } else if (/application\\/x-www-form-urlencoded/.test(contentType)) {\n        // Otherwise, if mimeType’s essence is \"application/x-www-form-urlencoded\", then:\n\n        // 1. Let entries be the result of parsing bytes.\n        let entries\n        try {\n          let text = ''\n          // application/x-www-form-urlencoded parser will keep the BOM.\n          // https://url.spec.whatwg.org/#concept-urlencoded-parser\n          // Note that streaming decoder is stateful and cannot be reused\n          const streamingDecoder = new TextDecoder('utf-8', { ignoreBOM: true })\n\n          for await (const chunk of consumeBody(this[kState].body)) {\n            if (!isUint8Array(chunk)) {\n              throw new TypeError('Expected Uint8Array chunk')\n            }\n            text += streamingDecoder.decode(chunk, { stream: true })\n          }\n          text += streamingDecoder.decode()\n          entries = new URLSearchParams(text)\n        } catch (err) {\n          // istanbul ignore next: Unclear when new URLSearchParams can fail on a string.\n          // 2. If entries is failure, then throw a TypeError.\n          throw Object.assign(new TypeError(), { cause: err })\n        }\n\n        // 3. Return a new FormData object whose entries are entries.\n        const formData = new FormData()\n        for (const [name, value] of entries) {\n          formData.append(name, value)\n        }\n        return formData\n      } else {\n        // Wait a tick before checking if the request has been aborted.\n        // Otherwise, a TypeError can be thrown when an AbortError should.\n        await Promise.resolve()\n\n        throwIfAborted(this[kState])\n\n        // Otherwise, throw a TypeError.\n        throw webidl.errors.exception({\n          header: `${instance.name}.formData`,\n          message: 'Could not parse content as FormData.'\n        })\n      }\n    }\n  }\n\n  return methods\n}\n\nfunction mixinBody (prototype) {\n  Object.assign(prototype.prototype, bodyMixinMethods(prototype))\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-body-consume-body\n * @param {Response|Request} object\n * @param {(value: unknown) => unknown} convertBytesToJSValue\n * @param {Response|Request} instance\n */\nasync function specConsumeBody (object, convertBytesToJSValue, instance) {\n  webidl.brandCheck(object, instance)\n\n  throwIfAborted(object[kState])\n\n  // 1. If object is unusable, then return a promise rejected\n  //    with a TypeError.\n  if (bodyUnusable(object[kState].body)) {\n    throw new TypeError('Body is unusable')\n  }\n\n  // 2. Let promise be a new promise.\n  const promise = createDeferredPromise()\n\n  // 3. Let errorSteps given error be to reject promise with error.\n  const errorSteps = (error) => promise.reject(error)\n\n  // 4. Let successSteps given a byte sequence data be to resolve\n  //    promise with the result of running convertBytesToJSValue\n  //    with data. If that threw an exception, then run errorSteps\n  //    with that exception.\n  const successSteps = (data) => {\n    try {\n      promise.resolve(convertBytesToJSValue(data))\n    } catch (e) {\n      errorSteps(e)\n    }\n  }\n\n  // 5. If object’s body is null, then run successSteps with an\n  //    empty byte sequence.\n  if (object[kState].body == null) {\n    successSteps(new Uint8Array())\n    return promise.promise\n  }\n\n  // 6. Otherwise, fully read object’s body given successSteps,\n  //    errorSteps, and object’s relevant global object.\n  await fullyReadBody(object[kState].body, successSteps, errorSteps)\n\n  // 7. Return promise.\n  return promise.promise\n}\n\n// https://fetch.spec.whatwg.org/#body-unusable\nfunction bodyUnusable (body) {\n  // An object including the Body interface mixin is\n  // said to be unusable if its body is non-null and\n  // its body’s stream is disturbed or locked.\n  return body != null && (body.stream.locked || util.isDisturbed(body.stream))\n}\n\n/**\n * @see https://encoding.spec.whatwg.org/#utf-8-decode\n * @param {Buffer} buffer\n */\nfunction utf8DecodeBytes (buffer) {\n  if (buffer.length === 0) {\n    return ''\n  }\n\n  // 1. Let buffer be the result of peeking three bytes from\n  //    ioQueue, converted to a byte sequence.\n\n  // 2. If buffer is 0xEF 0xBB 0xBF, then read three\n  //    bytes from ioQueue. (Do nothing with those bytes.)\n  if (buffer[0] === 0xEF && buffer[1] === 0xBB && buffer[2] === 0xBF) {\n    buffer = buffer.subarray(3)\n  }\n\n  // 3. Process a queue with an instance of UTF-8’s\n  //    decoder, ioQueue, output, and \"replacement\".\n  const output = textDecoder.decode(buffer)\n\n  // 4. Return output.\n  return output\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#parse-json-bytes-to-a-javascript-value\n * @param {Uint8Array} bytes\n */\nfunction parseJSONFromBytes (bytes) {\n  return JSON.parse(utf8DecodeBytes(bytes))\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-body-mime-type\n * @param {import('./response').Response|import('./request').Request} object\n */\nfunction bodyMimeType (object) {\n  const { headersList } = object[kState]\n  const contentType = headersList.get('content-type')\n\n  if (contentType === null) {\n    return 'failure'\n  }\n\n  return parseMIMEType(contentType)\n}\n\nmodule.exports = {\n  extractBody,\n  safelyExtractBody,\n  cloneBody,\n  mixinBody\n}\n","'use strict'\n\nconst {\n  InvalidArgumentError,\n  NotSupportedError\n} = require('./errors')\nconst assert = require('assert')\nconst { kHTTP2BuildRequest, kHTTP2CopyHeaders, kHTTP1BuildRequest } = require('./symbols')\nconst util = require('./util')\n\n// tokenRegExp and headerCharRegex have been lifted from\n// https://github.com/nodejs/node/blob/main/lib/_http_common.js\n\n/**\n * Verifies that the given val is a valid HTTP token\n * per the rules defined in RFC 7230\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/\n\n/**\n * Matches if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n */\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/\n\n// Verifies that a given path is valid does not contain control chars \\x00 to \\x20\nconst invalidPathRegex = /[^\\u0021-\\u00ff]/\n\nconst kHandler = Symbol('handler')\n\nconst channels = {}\n\nlet extractBody\n\ntry {\n  const diagnosticsChannel = require('diagnostics_channel')\n  channels.create = diagnosticsChannel.channel('undici:request:create')\n  channels.bodySent = diagnosticsChannel.channel('undici:request:bodySent')\n  channels.headers = diagnosticsChannel.channel('undici:request:headers')\n  channels.trailers = diagnosticsChannel.channel('undici:request:trailers')\n  channels.error = diagnosticsChannel.channel('undici:request:error')\n} catch {\n  channels.create = { hasSubscribers: false }\n  channels.bodySent = { hasSubscribers: false }\n  channels.headers = { hasSubscribers: false }\n  channels.trailers = { hasSubscribers: false }\n  channels.error = { hasSubscribers: false }\n}\n\nclass Request {\n  constructor (origin, {\n    path,\n    method,\n    body,\n    headers,\n    query,\n    idempotent,\n    blocking,\n    upgrade,\n    headersTimeout,\n    bodyTimeout,\n    reset,\n    throwOnError,\n    expectContinue\n  }, handler) {\n    if (typeof path !== 'string') {\n      throw new InvalidArgumentError('path must be a string')\n    } else if (\n      path[0] !== '/' &&\n      !(path.startsWith('http://') || path.startsWith('https://')) &&\n      method !== 'CONNECT'\n    ) {\n      throw new InvalidArgumentError('path must be an absolute URL or start with a slash')\n    } else if (invalidPathRegex.exec(path) !== null) {\n      throw new InvalidArgumentError('invalid request path')\n    }\n\n    if (typeof method !== 'string') {\n      throw new InvalidArgumentError('method must be a string')\n    } else if (tokenRegExp.exec(method) === null) {\n      throw new InvalidArgumentError('invalid request method')\n    }\n\n    if (upgrade && typeof upgrade !== 'string') {\n      throw new InvalidArgumentError('upgrade must be a string')\n    }\n\n    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('invalid headersTimeout')\n    }\n\n    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('invalid bodyTimeout')\n    }\n\n    if (reset != null && typeof reset !== 'boolean') {\n      throw new InvalidArgumentError('invalid reset')\n    }\n\n    if (expectContinue != null && typeof expectContinue !== 'boolean') {\n      throw new InvalidArgumentError('invalid expectContinue')\n    }\n\n    this.headersTimeout = headersTimeout\n\n    this.bodyTimeout = bodyTimeout\n\n    this.throwOnError = throwOnError === true\n\n    this.method = method\n\n    this.abort = null\n\n    if (body == null) {\n      this.body = null\n    } else if (util.isStream(body)) {\n      this.body = body\n\n      const rState = this.body._readableState\n      if (!rState || !rState.autoDestroy) {\n        this.endHandler = function autoDestroy () {\n          util.destroy(this)\n        }\n        this.body.on('end', this.endHandler)\n      }\n\n      this.errorHandler = err => {\n        if (this.abort) {\n          this.abort(err)\n        } else {\n          this.error = err\n        }\n      }\n      this.body.on('error', this.errorHandler)\n    } else if (util.isBuffer(body)) {\n      this.body = body.byteLength ? body : null\n    } else if (ArrayBuffer.isView(body)) {\n      this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null\n    } else if (body instanceof ArrayBuffer) {\n      this.body = body.byteLength ? Buffer.from(body) : null\n    } else if (typeof body === 'string') {\n      this.body = body.length ? Buffer.from(body) : null\n    } else if (util.isFormDataLike(body) || util.isIterable(body) || util.isBlobLike(body)) {\n      this.body = body\n    } else {\n      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable')\n    }\n\n    this.completed = false\n\n    this.aborted = false\n\n    this.upgrade = upgrade || null\n\n    this.path = query ? util.buildURL(path, query) : path\n\n    this.origin = origin\n\n    this.idempotent = idempotent == null\n      ? method === 'HEAD' || method === 'GET'\n      : idempotent\n\n    this.blocking = blocking == null ? false : blocking\n\n    this.reset = reset == null ? null : reset\n\n    this.host = null\n\n    this.contentLength = null\n\n    this.contentType = null\n\n    this.headers = ''\n\n    // Only for H2\n    this.expectContinue = expectContinue != null ? expectContinue : false\n\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even')\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(this, headers[i], headers[i + 1])\n      }\n    } else if (headers && typeof headers === 'object') {\n      const keys = Object.keys(headers)\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        processHeader(this, key, headers[key])\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array')\n    }\n\n    if (util.isFormDataLike(this.body)) {\n      if (util.nodeMajor < 16 || (util.nodeMajor === 16 && util.nodeMinor < 8)) {\n        throw new InvalidArgumentError('Form-Data bodies are only supported in node v16.8 and newer.')\n      }\n\n      if (!extractBody) {\n        extractBody = require('../fetch/body.js').extractBody\n      }\n\n      const [bodyStream, contentType] = extractBody(body)\n      if (this.contentType == null) {\n        this.contentType = contentType\n        this.headers += `content-type: ${contentType}\\r\\n`\n      }\n      this.body = bodyStream.stream\n      this.contentLength = bodyStream.length\n    } else if (util.isBlobLike(body) && this.contentType == null && body.type) {\n      this.contentType = body.type\n      this.headers += `content-type: ${body.type}\\r\\n`\n    }\n\n    util.validateHandler(handler, method, upgrade)\n\n    this.servername = util.getServerName(this.host)\n\n    this[kHandler] = handler\n\n    if (channels.create.hasSubscribers) {\n      channels.create.publish({ request: this })\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this[kHandler].onBodySent) {\n      try {\n        this[kHandler].onBodySent(chunk)\n      } catch (err) {\n        this.onError(err)\n      }\n    }\n  }\n\n  onRequestSent () {\n    if (channels.bodySent.hasSubscribers) {\n      channels.bodySent.publish({ request: this })\n    }\n\n    if (this[kHandler].onRequestSent) {\n      try {\n        this[kHandler].onRequestSent()\n      } catch (err) {\n        this.onError(err)\n      }\n    }\n  }\n\n  onConnect (abort) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (this.error) {\n      abort(this.error)\n    } else {\n      this.abort = abort\n      return this[kHandler].onConnect(abort)\n    }\n  }\n\n  onHeaders (statusCode, headers, resume, statusText) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (channels.headers.hasSubscribers) {\n      channels.headers.publish({ request: this, response: { statusCode, headers, statusText } })\n    }\n\n    return this[kHandler].onHeaders(statusCode, headers, resume, statusText)\n  }\n\n  onData (chunk) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    return this[kHandler].onData(chunk)\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    return this[kHandler].onUpgrade(statusCode, headers, socket)\n  }\n\n  onComplete (trailers) {\n    this.onFinally()\n\n    assert(!this.aborted)\n\n    this.completed = true\n    if (channels.trailers.hasSubscribers) {\n      channels.trailers.publish({ request: this, trailers })\n    }\n    return this[kHandler].onComplete(trailers)\n  }\n\n  onError (error) {\n    this.onFinally()\n\n    if (channels.error.hasSubscribers) {\n      channels.error.publish({ request: this, error })\n    }\n\n    if (this.aborted) {\n      return\n    }\n    this.aborted = true\n    return this[kHandler].onError(error)\n  }\n\n  onFinally () {\n    if (this.errorHandler) {\n      this.body.off('error', this.errorHandler)\n      this.errorHandler = null\n    }\n\n    if (this.endHandler) {\n      this.body.off('end', this.endHandler)\n      this.endHandler = null\n    }\n  }\n\n  // TODO: adjust to support H2\n  addHeader (key, value) {\n    processHeader(this, key, value)\n    return this\n  }\n\n  static [kHTTP1BuildRequest] (origin, opts, handler) {\n    // TODO: Migrate header parsing here, to make Requests\n    // HTTP agnostic\n    return new Request(origin, opts, handler)\n  }\n\n  static [kHTTP2BuildRequest] (origin, opts, handler) {\n    const headers = opts.headers\n    opts = { ...opts, headers: null }\n\n    const request = new Request(origin, opts, handler)\n\n    request.headers = {}\n\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even')\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(request, headers[i], headers[i + 1], true)\n      }\n    } else if (headers && typeof headers === 'object') {\n      const keys = Object.keys(headers)\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        processHeader(request, key, headers[key], true)\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array')\n    }\n\n    return request\n  }\n\n  static [kHTTP2CopyHeaders] (raw) {\n    const rawHeaders = raw.split('\\r\\n')\n    const headers = {}\n\n    for (const header of rawHeaders) {\n      const [key, value] = header.split(': ')\n\n      if (value == null || value.length === 0) continue\n\n      if (headers[key]) headers[key] += `,${value}`\n      else headers[key] = value\n    }\n\n    return headers\n  }\n}\n\nfunction processHeaderValue (key, val, skipAppend) {\n  if (val && typeof val === 'object') {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  }\n\n  val = val != null ? `${val}` : ''\n\n  if (headerCharRegex.exec(val) !== null) {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  }\n\n  return skipAppend ? val : `${key}: ${val}\\r\\n`\n}\n\nfunction processHeader (request, key, val, skipAppend = false) {\n  if (val && (typeof val === 'object' && !Array.isArray(val))) {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  } else if (val === undefined) {\n    return\n  }\n\n  if (\n    request.host === null &&\n    key.length === 4 &&\n    key.toLowerCase() === 'host'\n  ) {\n    if (headerCharRegex.exec(val) !== null) {\n      throw new InvalidArgumentError(`invalid ${key} header`)\n    }\n    // Consumed by Client\n    request.host = val\n  } else if (\n    request.contentLength === null &&\n    key.length === 14 &&\n    key.toLowerCase() === 'content-length'\n  ) {\n    request.contentLength = parseInt(val, 10)\n    if (!Number.isFinite(request.contentLength)) {\n      throw new InvalidArgumentError('invalid content-length header')\n    }\n  } else if (\n    request.contentType === null &&\n    key.length === 12 &&\n    key.toLowerCase() === 'content-type'\n  ) {\n    request.contentType = val\n    if (skipAppend) request.headers[key] = processHeaderValue(key, val, skipAppend)\n    else request.headers += processHeaderValue(key, val)\n  } else if (\n    key.length === 17 &&\n    key.toLowerCase() === 'transfer-encoding'\n  ) {\n    throw new InvalidArgumentError('invalid transfer-encoding header')\n  } else if (\n    key.length === 10 &&\n    key.toLowerCase() === 'connection'\n  ) {\n    const value = typeof val === 'string' ? val.toLowerCase() : null\n    if (value !== 'close' && value !== 'keep-alive') {\n      throw new InvalidArgumentError('invalid connection header')\n    } else if (value === 'close') {\n      request.reset = true\n    }\n  } else if (\n    key.length === 10 &&\n    key.toLowerCase() === 'keep-alive'\n  ) {\n    throw new InvalidArgumentError('invalid keep-alive header')\n  } else if (\n    key.length === 7 &&\n    key.toLowerCase() === 'upgrade'\n  ) {\n    throw new InvalidArgumentError('invalid upgrade header')\n  } else if (\n    key.length === 6 &&\n    key.toLowerCase() === 'expect'\n  ) {\n    throw new NotSupportedError('expect header not supported')\n  } else if (tokenRegExp.exec(key) === null) {\n    throw new InvalidArgumentError('invalid header key')\n  } else {\n    if (Array.isArray(val)) {\n      for (let i = 0; i < val.length; i++) {\n        if (skipAppend) {\n          if (request.headers[key]) request.headers[key] += `,${processHeaderValue(key, val[i], skipAppend)}`\n          else request.headers[key] = processHeaderValue(key, val[i], skipAppend)\n        } else {\n          request.headers += processHeaderValue(key, val[i])\n        }\n      }\n    } else {\n      if (skipAppend) request.headers[key] = processHeaderValue(key, val, skipAppend)\n      else request.headers += processHeaderValue(key, val)\n    }\n  }\n}\n\nmodule.exports = Request\n","'use strict'\n\nconst EventEmitter = require('events')\n\nclass Dispatcher extends EventEmitter {\n  dispatch () {\n    throw new Error('not implemented')\n  }\n\n  close () {\n    throw new Error('not implemented')\n  }\n\n  destroy () {\n    throw new Error('not implemented')\n  }\n}\n\nmodule.exports = Dispatcher\n","'use strict'\n\nconst Dispatcher = require('./dispatcher')\nconst {\n  ClientDestroyedError,\n  ClientClosedError,\n  InvalidArgumentError\n} = require('./core/errors')\nconst { kDestroy, kClose, kDispatch, kInterceptors } = require('./core/symbols')\n\nconst kDestroyed = Symbol('destroyed')\nconst kClosed = Symbol('closed')\nconst kOnDestroyed = Symbol('onDestroyed')\nconst kOnClosed = Symbol('onClosed')\nconst kInterceptedDispatch = Symbol('Intercepted Dispatch')\n\nclass DispatcherBase extends Dispatcher {\n  constructor () {\n    super()\n\n    this[kDestroyed] = false\n    this[kOnDestroyed] = null\n    this[kClosed] = false\n    this[kOnClosed] = []\n  }\n\n  get destroyed () {\n    return this[kDestroyed]\n  }\n\n  get closed () {\n    return this[kClosed]\n  }\n\n  get interceptors () {\n    return this[kInterceptors]\n  }\n\n  set interceptors (newInterceptors) {\n    if (newInterceptors) {\n      for (let i = newInterceptors.length - 1; i >= 0; i--) {\n        const interceptor = this[kInterceptors][i]\n        if (typeof interceptor !== 'function') {\n          throw new InvalidArgumentError('interceptor must be an function')\n        }\n      }\n    }\n\n    this[kInterceptors] = newInterceptors\n  }\n\n  close (callback) {\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.close((err, data) => {\n          return err ? reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      queueMicrotask(() => callback(new ClientDestroyedError(), null))\n      return\n    }\n\n    if (this[kClosed]) {\n      if (this[kOnClosed]) {\n        this[kOnClosed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    this[kClosed] = true\n    this[kOnClosed].push(callback)\n\n    const onClosed = () => {\n      const callbacks = this[kOnClosed]\n      this[kOnClosed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kClose]()\n      .then(() => this.destroy())\n      .then(() => {\n        queueMicrotask(onClosed)\n      })\n  }\n\n  destroy (err, callback) {\n    if (typeof err === 'function') {\n      callback = err\n      err = null\n    }\n\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.destroy(err, (err, data) => {\n          return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      if (this[kOnDestroyed]) {\n        this[kOnDestroyed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    if (!err) {\n      err = new ClientDestroyedError()\n    }\n\n    this[kDestroyed] = true\n    this[kOnDestroyed] = this[kOnDestroyed] || []\n    this[kOnDestroyed].push(callback)\n\n    const onDestroyed = () => {\n      const callbacks = this[kOnDestroyed]\n      this[kOnDestroyed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kDestroy](err).then(() => {\n      queueMicrotask(onDestroyed)\n    })\n  }\n\n  [kInterceptedDispatch] (opts, handler) {\n    if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n      this[kInterceptedDispatch] = this[kDispatch]\n      return this[kDispatch](opts, handler)\n    }\n\n    let dispatch = this[kDispatch].bind(this)\n    for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n      dispatch = this[kInterceptors][i](dispatch)\n    }\n    this[kInterceptedDispatch] = dispatch\n    return dispatch(opts, handler)\n  }\n\n  dispatch (opts, handler) {\n    if (!handler || typeof handler !== 'object') {\n      throw new InvalidArgumentError('handler must be an object')\n    }\n\n    try {\n      if (!opts || typeof opts !== 'object') {\n        throw new InvalidArgumentError('opts must be an object.')\n      }\n\n      if (this[kDestroyed] || this[kOnDestroyed]) {\n        throw new ClientDestroyedError()\n      }\n\n      if (this[kClosed]) {\n        throw new ClientClosedError()\n      }\n\n      return this[kInterceptedDispatch](opts, handler)\n    } catch (err) {\n      if (typeof handler.onError !== 'function') {\n        throw new InvalidArgumentError('invalid onError method')\n      }\n\n      handler.onError(err)\n\n      return false\n    }\n  }\n}\n\nmodule.exports = DispatcherBase\n","'use strict'\n\nconst net = require('net')\nconst assert = require('assert')\nconst util = require('./util')\nconst { InvalidArgumentError, ConnectTimeoutError } = require('./errors')\n\nlet tls // include tls conditionally since it is not always available\n\n// TODO: session re-use does not wait for the first\n// connection to resolve the session and might therefore\n// resolve the same servername multiple times even when\n// re-use is enabled.\n\nlet SessionCache\n// FIXME: remove workaround when the Node bug is fixed\n// https://github.com/nodejs/node/issues/49344#issuecomment-1741776308\nif (global.FinalizationRegistry && !process.env.NODE_V8_COVERAGE) {\n  SessionCache = class WeakSessionCache {\n    constructor (maxCachedSessions) {\n      this._maxCachedSessions = maxCachedSessions\n      this._sessionCache = new Map()\n      this._sessionRegistry = new global.FinalizationRegistry((key) => {\n        if (this._sessionCache.size < this._maxCachedSessions) {\n          return\n        }\n\n        const ref = this._sessionCache.get(key)\n        if (ref !== undefined && ref.deref() === undefined) {\n          this._sessionCache.delete(key)\n        }\n      })\n    }\n\n    get (sessionKey) {\n      const ref = this._sessionCache.get(sessionKey)\n      return ref ? ref.deref() : null\n    }\n\n    set (sessionKey, session) {\n      if (this._maxCachedSessions === 0) {\n        return\n      }\n\n      this._sessionCache.set(sessionKey, new WeakRef(session))\n      this._sessionRegistry.register(session, sessionKey)\n    }\n  }\n} else {\n  SessionCache = class SimpleSessionCache {\n    constructor (maxCachedSessions) {\n      this._maxCachedSessions = maxCachedSessions\n      this._sessionCache = new Map()\n    }\n\n    get (sessionKey) {\n      return this._sessionCache.get(sessionKey)\n    }\n\n    set (sessionKey, session) {\n      if (this._maxCachedSessions === 0) {\n        return\n      }\n\n      if (this._sessionCache.size >= this._maxCachedSessions) {\n        // remove the oldest session\n        const { value: oldestKey } = this._sessionCache.keys().next()\n        this._sessionCache.delete(oldestKey)\n      }\n\n      this._sessionCache.set(sessionKey, session)\n    }\n  }\n}\n\nfunction buildConnector ({ allowH2, maxCachedSessions, socketPath, timeout, ...opts }) {\n  if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {\n    throw new InvalidArgumentError('maxCachedSessions must be a positive integer or zero')\n  }\n\n  const options = { path: socketPath, ...opts }\n  const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions)\n  timeout = timeout == null ? 10e3 : timeout\n  allowH2 = allowH2 != null ? allowH2 : false\n  return function connect ({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {\n    let socket\n    if (protocol === 'https:') {\n      if (!tls) {\n        tls = require('tls')\n      }\n      servername = servername || options.servername || util.getServerName(host) || null\n\n      const sessionKey = servername || hostname\n      const session = sessionCache.get(sessionKey) || null\n\n      assert(sessionKey)\n\n      socket = tls.connect({\n        highWaterMark: 16384, // TLS in node can't have bigger HWM anyway...\n        ...options,\n        servername,\n        session,\n        localAddress,\n        // TODO(HTTP/2): Add support for h2c\n        ALPNProtocols: allowH2 ? ['http/1.1', 'h2'] : ['http/1.1'],\n        socket: httpSocket, // upgrade socket connection\n        port: port || 443,\n        host: hostname\n      })\n\n      socket\n        .on('session', function (session) {\n          // TODO (fix): Can a session become invalid once established? Don't think so?\n          sessionCache.set(sessionKey, session)\n        })\n    } else {\n      assert(!httpSocket, 'httpSocket can only be sent on TLS update')\n      socket = net.connect({\n        highWaterMark: 64 * 1024, // Same as nodejs fs streams.\n        ...options,\n        localAddress,\n        port: port || 80,\n        host: hostname\n      })\n    }\n\n    // Set TCP keep alive options on the socket here instead of in connect() for the case of assigning the socket\n    if (options.keepAlive == null || options.keepAlive) {\n      const keepAliveInitialDelay = options.keepAliveInitialDelay === undefined ? 60e3 : options.keepAliveInitialDelay\n      socket.setKeepAlive(true, keepAliveInitialDelay)\n    }\n\n    const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout)\n\n    socket\n      .setNoDelay(true)\n      .once(protocol === 'https:' ? 'secureConnect' : 'connect', function () {\n        cancelTimeout()\n\n        if (callback) {\n          const cb = callback\n          callback = null\n          cb(null, this)\n        }\n      })\n      .on('error', function (err) {\n        cancelTimeout()\n\n        if (callback) {\n          const cb = callback\n          callback = null\n          cb(err)\n        }\n      })\n\n    return socket\n  }\n}\n\nfunction setupTimeout (onConnectTimeout, timeout) {\n  if (!timeout) {\n    return () => {}\n  }\n\n  let s1 = null\n  let s2 = null\n  const timeoutId = setTimeout(() => {\n    // setImmediate is added to make sure that we priotorise socket error events over timeouts\n    s1 = setImmediate(() => {\n      if (process.platform === 'win32') {\n        // Windows needs an extra setImmediate probably due to implementation differences in the socket logic\n        s2 = setImmediate(() => onConnectTimeout())\n      } else {\n        onConnectTimeout()\n      }\n    })\n  }, timeout)\n  return () => {\n    clearTimeout(timeoutId)\n    clearImmediate(s1)\n    clearImmediate(s2)\n  }\n}\n\nfunction onConnectTimeout (socket) {\n  util.destroy(socket, new ConnectTimeoutError())\n}\n\nmodule.exports = buildConnector\n",null,null,"'use strict'\n\nconst util = require('../core/util')\nconst { kBodyUsed } = require('../core/symbols')\nconst assert = require('assert')\nconst { InvalidArgumentError } = require('../core/errors')\nconst EE = require('events')\n\nconst redirectableStatusCodes = [300, 301, 302, 303, 307, 308]\n\nconst kBody = Symbol('body')\n\nclass BodyAsyncIterable {\n  constructor (body) {\n    this[kBody] = body\n    this[kBodyUsed] = false\n  }\n\n  async * [Symbol.asyncIterator] () {\n    assert(!this[kBodyUsed], 'disturbed')\n    this[kBodyUsed] = true\n    yield * this[kBody]\n  }\n}\n\nclass RedirectHandler {\n  constructor (dispatch, maxRedirections, opts, handler) {\n    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    util.validateHandler(handler, opts.method, opts.upgrade)\n\n    this.dispatch = dispatch\n    this.location = null\n    this.abort = null\n    this.opts = { ...opts, maxRedirections: 0 } // opts must be a copy\n    this.maxRedirections = maxRedirections\n    this.handler = handler\n    this.history = []\n\n    if (util.isStream(this.opts.body)) {\n      // TODO (fix): Provide some way for the user to cache the file to e.g. /tmp\n      // so that it can be dispatched again?\n      // TODO (fix): Do we need 100-expect support to provide a way to do this properly?\n      if (util.bodyLength(this.opts.body) === 0) {\n        this.opts.body\n          .on('data', function () {\n            assert(false)\n          })\n      }\n\n      if (typeof this.opts.body.readableDidRead !== 'boolean') {\n        this.opts.body[kBodyUsed] = false\n        EE.prototype.on.call(this.opts.body, 'data', function () {\n          this[kBodyUsed] = true\n        })\n      }\n    } else if (this.opts.body && typeof this.opts.body.pipeTo === 'function') {\n      // TODO (fix): We can't access ReadableStream internal state\n      // to determine whether or not it has been disturbed. This is just\n      // a workaround.\n      this.opts.body = new BodyAsyncIterable(this.opts.body)\n    } else if (\n      this.opts.body &&\n      typeof this.opts.body !== 'string' &&\n      !ArrayBuffer.isView(this.opts.body) &&\n      util.isIterable(this.opts.body)\n    ) {\n      // TODO: Should we allow re-using iterable if !this.opts.idempotent\n      // or through some other flag?\n      this.opts.body = new BodyAsyncIterable(this.opts.body)\n    }\n  }\n\n  onConnect (abort) {\n    this.abort = abort\n    this.handler.onConnect(abort, { history: this.history })\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    this.handler.onUpgrade(statusCode, headers, socket)\n  }\n\n  onError (error) {\n    this.handler.onError(error)\n  }\n\n  onHeaders (statusCode, headers, resume, statusText) {\n    this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body)\n      ? null\n      : parseLocation(statusCode, headers)\n\n    if (this.opts.origin) {\n      this.history.push(new URL(this.opts.path, this.opts.origin))\n    }\n\n    if (!this.location) {\n      return this.handler.onHeaders(statusCode, headers, resume, statusText)\n    }\n\n    const { origin, pathname, search } = util.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)))\n    const path = search ? `${pathname}${search}` : pathname\n\n    // Remove headers referring to the original URL.\n    // By default it is Host only, unless it's a 303 (see below), which removes also all Content-* headers.\n    // https://tools.ietf.org/html/rfc7231#section-6.4\n    this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin)\n    this.opts.path = path\n    this.opts.origin = origin\n    this.opts.maxRedirections = 0\n    this.opts.query = null\n\n    // https://tools.ietf.org/html/rfc7231#section-6.4.4\n    // In case of HTTP 303, always replace method to be either HEAD or GET\n    if (statusCode === 303 && this.opts.method !== 'HEAD') {\n      this.opts.method = 'GET'\n      this.opts.body = null\n    }\n  }\n\n  onData (chunk) {\n    if (this.location) {\n      /*\n        https://tools.ietf.org/html/rfc7231#section-6.4\n\n        TLDR: undici always ignores 3xx response bodies.\n\n        Redirection is used to serve the requested resource from another URL, so it is assumes that\n        no body is generated (and thus can be ignored). Even though generating a body is not prohibited.\n\n        For status 301, 302, 303, 307 and 308 (the latter from RFC 7238), the specs mention that the body usually\n        (which means it's optional and not mandated) contain just an hyperlink to the value of\n        the Location response header, so the body can be ignored safely.\n\n        For status 300, which is \"Multiple Choices\", the spec mentions both generating a Location\n        response header AND a response body with the other possible location to follow.\n        Since the spec explicitily chooses not to specify a format for such body and leave it to\n        servers and browsers implementors, we ignore the body as there is no specified way to eventually parse it.\n      */\n    } else {\n      return this.handler.onData(chunk)\n    }\n  }\n\n  onComplete (trailers) {\n    if (this.location) {\n      /*\n        https://tools.ietf.org/html/rfc7231#section-6.4\n\n        TLDR: undici always ignores 3xx response trailers as they are not expected in case of redirections\n        and neither are useful if present.\n\n        See comment on onData method above for more detailed informations.\n      */\n\n      this.location = null\n      this.abort = null\n\n      this.dispatch(this.opts, this)\n    } else {\n      this.handler.onComplete(trailers)\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this.handler.onBodySent) {\n      this.handler.onBodySent(chunk)\n    }\n  }\n}\n\nfunction parseLocation (statusCode, headers) {\n  if (redirectableStatusCodes.indexOf(statusCode) === -1) {\n    return null\n  }\n\n  for (let i = 0; i < headers.length; i += 2) {\n    if (headers[i].toString().toLowerCase() === 'location') {\n      return headers[i + 1]\n    }\n  }\n}\n\n// https://tools.ietf.org/html/rfc7231#section-6.4.4\nfunction shouldRemoveHeader (header, removeContent, unknownOrigin) {\n  return (\n    (header.length === 4 && header.toString().toLowerCase() === 'host') ||\n    (removeContent && header.toString().toLowerCase().indexOf('content-') === 0) ||\n    (unknownOrigin && header.length === 13 && header.toString().toLowerCase() === 'authorization') ||\n    (unknownOrigin && header.length === 6 && header.toString().toLowerCase() === 'cookie')\n  )\n}\n\n// https://tools.ietf.org/html/rfc7231#section-6.4\nfunction cleanRequestHeaders (headers, removeContent, unknownOrigin) {\n  const ret = []\n  if (Array.isArray(headers)) {\n    for (let i = 0; i < headers.length; i += 2) {\n      if (!shouldRemoveHeader(headers[i], removeContent, unknownOrigin)) {\n        ret.push(headers[i], headers[i + 1])\n      }\n    }\n  } else if (headers && typeof headers === 'object') {\n    for (const key of Object.keys(headers)) {\n      if (!shouldRemoveHeader(key, removeContent, unknownOrigin)) {\n        ret.push(key, headers[key])\n      }\n    }\n  } else {\n    assert(headers == null, 'headers must be an object or an array')\n  }\n  return ret\n}\n\nmodule.exports = RedirectHandler\n","'use strict'\n\nconst RedirectHandler = require('../handler/RedirectHandler')\n\nfunction createRedirectInterceptor ({ maxRedirections: defaultMaxRedirections }) {\n  return (dispatch) => {\n    return function Intercept (opts, handler) {\n      const { maxRedirections = defaultMaxRedirections } = opts\n\n      if (!maxRedirections) {\n        return dispatch(opts, handler)\n      }\n\n      const redirectHandler = new RedirectHandler(dispatch, maxRedirections, opts, handler)\n      opts = { ...opts, maxRedirections: 0 } // Stop sub dispatcher from also redirecting.\n      return dispatch(opts, redirectHandler)\n    }\n  }\n}\n\nmodule.exports = createRedirectInterceptor\n","module.exports = ''\n","module.exports = ''\n","// @ts-check\n\n'use strict'\n\n/* global WebAssembly */\n\nconst assert = require('assert')\nconst net = require('net')\nconst http = require('http')\nconst { pipeline } = require('stream')\nconst util = require('./core/util')\nconst timers = require('./timers')\nconst Request = require('./core/request')\nconst DispatcherBase = require('./dispatcher-base')\nconst {\n  RequestContentLengthMismatchError,\n  ResponseContentLengthMismatchError,\n  InvalidArgumentError,\n  RequestAbortedError,\n  HeadersTimeoutError,\n  HeadersOverflowError,\n  SocketError,\n  InformationalError,\n  BodyTimeoutError,\n  HTTPParserError,\n  ResponseExceededMaxSizeError,\n  ClientDestroyedError\n} = require('./core/errors')\nconst buildConnector = require('./core/connect')\nconst {\n  kUrl,\n  kReset,\n  kServerName,\n  kClient,\n  kBusy,\n  kParser,\n  kConnect,\n  kBlocking,\n  kResuming,\n  kRunning,\n  kPending,\n  kSize,\n  kWriting,\n  kQueue,\n  kConnected,\n  kConnecting,\n  kNeedDrain,\n  kNoRef,\n  kKeepAliveDefaultTimeout,\n  kHostHeader,\n  kPendingIdx,\n  kRunningIdx,\n  kError,\n  kPipelining,\n  kSocket,\n  kKeepAliveTimeoutValue,\n  kMaxHeadersSize,\n  kKeepAliveMaxTimeout,\n  kKeepAliveTimeoutThreshold,\n  kHeadersTimeout,\n  kBodyTimeout,\n  kStrictContentLength,\n  kConnector,\n  kMaxRedirections,\n  kMaxRequests,\n  kCounter,\n  kClose,\n  kDestroy,\n  kDispatch,\n  kInterceptors,\n  kLocalAddress,\n  kMaxResponseSize,\n  kHTTPConnVersion,\n  // HTTP2\n  kHost,\n  kHTTP2Session,\n  kHTTP2SessionState,\n  kHTTP2BuildRequest,\n  kHTTP2CopyHeaders,\n  kHTTP1BuildRequest\n} = require('./core/symbols')\n\n/** @type {import('http2')} */\nlet http2\ntry {\n  http2 = require('http2')\n} catch {\n  // @ts-ignore\n  http2 = { constants: {} }\n}\n\nconst {\n  constants: {\n    HTTP2_HEADER_AUTHORITY,\n    HTTP2_HEADER_METHOD,\n    HTTP2_HEADER_PATH,\n    HTTP2_HEADER_SCHEME,\n    HTTP2_HEADER_CONTENT_LENGTH,\n    HTTP2_HEADER_EXPECT,\n    HTTP2_HEADER_STATUS\n  }\n} = http2\n\n// Experimental\nlet h2ExperimentalWarned = false\n\nconst FastBuffer = Buffer[Symbol.species]\n\nconst kClosedResolve = Symbol('kClosedResolve')\n\nconst channels = {}\n\ntry {\n  const diagnosticsChannel = require('diagnostics_channel')\n  channels.sendHeaders = diagnosticsChannel.channel('undici:client:sendHeaders')\n  channels.beforeConnect = diagnosticsChannel.channel('undici:client:beforeConnect')\n  channels.connectError = diagnosticsChannel.channel('undici:client:connectError')\n  channels.connected = diagnosticsChannel.channel('undici:client:connected')\n} catch {\n  channels.sendHeaders = { hasSubscribers: false }\n  channels.beforeConnect = { hasSubscribers: false }\n  channels.connectError = { hasSubscribers: false }\n  channels.connected = { hasSubscribers: false }\n}\n\n/**\n * @type {import('../types/client').default}\n */\nclass Client extends DispatcherBase {\n  /**\n   *\n   * @param {string|URL} url\n   * @param {import('../types/client').Client.Options} options\n   */\n  constructor (url, {\n    interceptors,\n    maxHeaderSize,\n    headersTimeout,\n    socketTimeout,\n    requestTimeout,\n    connectTimeout,\n    bodyTimeout,\n    idleTimeout,\n    keepAlive,\n    keepAliveTimeout,\n    maxKeepAliveTimeout,\n    keepAliveMaxTimeout,\n    keepAliveTimeoutThreshold,\n    socketPath,\n    pipelining,\n    tls,\n    strictContentLength,\n    maxCachedSessions,\n    maxRedirections,\n    connect,\n    maxRequestsPerClient,\n    localAddress,\n    maxResponseSize,\n    autoSelectFamily,\n    autoSelectFamilyAttemptTimeout,\n    // h2\n    allowH2,\n    maxConcurrentStreams\n  } = {}) {\n    super()\n\n    if (keepAlive !== undefined) {\n      throw new InvalidArgumentError('unsupported keepAlive, use pipelining=0 instead')\n    }\n\n    if (socketTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported socketTimeout, use headersTimeout & bodyTimeout instead')\n    }\n\n    if (requestTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported requestTimeout, use headersTimeout & bodyTimeout instead')\n    }\n\n    if (idleTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported idleTimeout, use keepAliveTimeout instead')\n    }\n\n    if (maxKeepAliveTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead')\n    }\n\n    if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {\n      throw new InvalidArgumentError('invalid maxHeaderSize')\n    }\n\n    if (socketPath != null && typeof socketPath !== 'string') {\n      throw new InvalidArgumentError('invalid socketPath')\n    }\n\n    if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {\n      throw new InvalidArgumentError('invalid connectTimeout')\n    }\n\n    if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {\n      throw new InvalidArgumentError('invalid keepAliveTimeout')\n    }\n\n    if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {\n      throw new InvalidArgumentError('invalid keepAliveMaxTimeout')\n    }\n\n    if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {\n      throw new InvalidArgumentError('invalid keepAliveTimeoutThreshold')\n    }\n\n    if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('headersTimeout must be a positive integer or zero')\n    }\n\n    if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('bodyTimeout must be a positive integer or zero')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {\n      throw new InvalidArgumentError('maxRequestsPerClient must be a positive number')\n    }\n\n    if (localAddress != null && (typeof localAddress !== 'string' || net.isIP(localAddress) === 0)) {\n      throw new InvalidArgumentError('localAddress must be valid string IP address')\n    }\n\n    if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {\n      throw new InvalidArgumentError('maxResponseSize must be a positive number')\n    }\n\n    if (\n      autoSelectFamilyAttemptTimeout != null &&\n      (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)\n    ) {\n      throw new InvalidArgumentError('autoSelectFamilyAttemptTimeout must be a positive number')\n    }\n\n    // h2\n    if (allowH2 != null && typeof allowH2 !== 'boolean') {\n      throw new InvalidArgumentError('allowH2 must be a valid boolean value')\n    }\n\n    if (maxConcurrentStreams != null && (typeof maxConcurrentStreams !== 'number' || maxConcurrentStreams < 1)) {\n      throw new InvalidArgumentError('maxConcurrentStreams must be a possitive integer, greater than 0')\n    }\n\n    if (typeof connect !== 'function') {\n      connect = buildConnector({\n        ...tls,\n        maxCachedSessions,\n        allowH2,\n        socketPath,\n        timeout: connectTimeout,\n        ...(util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),\n        ...connect\n      })\n    }\n\n    this[kInterceptors] = interceptors && interceptors.Client && Array.isArray(interceptors.Client)\n      ? interceptors.Client\n      : [createRedirectInterceptor({ maxRedirections })]\n    this[kUrl] = util.parseOrigin(url)\n    this[kConnector] = connect\n    this[kSocket] = null\n    this[kPipelining] = pipelining != null ? pipelining : 1\n    this[kMaxHeadersSize] = maxHeaderSize || http.maxHeaderSize\n    this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout\n    this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 600e3 : keepAliveMaxTimeout\n    this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 1e3 : keepAliveTimeoutThreshold\n    this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout]\n    this[kServerName] = null\n    this[kLocalAddress] = localAddress != null ? localAddress : null\n    this[kResuming] = 0 // 0, idle, 1, scheduled, 2 resuming\n    this[kNeedDrain] = 0 // 0, idle, 1, scheduled, 2 resuming\n    this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}\\r\\n`\n    this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 300e3\n    this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 300e3\n    this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength\n    this[kMaxRedirections] = maxRedirections\n    this[kMaxRequests] = maxRequestsPerClient\n    this[kClosedResolve] = null\n    this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1\n    this[kHTTPConnVersion] = 'h1'\n\n    // HTTP/2\n    this[kHTTP2Session] = null\n    this[kHTTP2SessionState] = !allowH2\n      ? null\n      : {\n        // streams: null, // Fixed queue of streams - For future support of `push`\n          openStreams: 0, // Keep track of them to decide wether or not unref the session\n          maxConcurrentStreams: maxConcurrentStreams != null ? maxConcurrentStreams : 100 // Max peerConcurrentStreams for a Node h2 server\n        }\n    this[kHost] = `${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}`\n\n    // kQueue is built up of 3 sections separated by\n    // the kRunningIdx and kPendingIdx indices.\n    // |   complete   |   running   |   pending   |\n    //                ^ kRunningIdx ^ kPendingIdx ^ kQueue.length\n    // kRunningIdx points to the first running element.\n    // kPendingIdx points to the first pending element.\n    // This implements a fast queue with an amortized\n    // time of O(1).\n\n    this[kQueue] = []\n    this[kRunningIdx] = 0\n    this[kPendingIdx] = 0\n  }\n\n  get pipelining () {\n    return this[kPipelining]\n  }\n\n  set pipelining (value) {\n    this[kPipelining] = value\n    resume(this, true)\n  }\n\n  get [kPending] () {\n    return this[kQueue].length - this[kPendingIdx]\n  }\n\n  get [kRunning] () {\n    return this[kPendingIdx] - this[kRunningIdx]\n  }\n\n  get [kSize] () {\n    return this[kQueue].length - this[kRunningIdx]\n  }\n\n  get [kConnected] () {\n    return !!this[kSocket] && !this[kConnecting] && !this[kSocket].destroyed\n  }\n\n  get [kBusy] () {\n    const socket = this[kSocket]\n    return (\n      (socket && (socket[kReset] || socket[kWriting] || socket[kBlocking])) ||\n      (this[kSize] >= (this[kPipelining] || 1)) ||\n      this[kPending] > 0\n    )\n  }\n\n  /* istanbul ignore: only used for test */\n  [kConnect] (cb) {\n    connect(this)\n    this.once('connect', cb)\n  }\n\n  [kDispatch] (opts, handler) {\n    const origin = opts.origin || this[kUrl].origin\n\n    const request = this[kHTTPConnVersion] === 'h2'\n      ? Request[kHTTP2BuildRequest](origin, opts, handler)\n      : Request[kHTTP1BuildRequest](origin, opts, handler)\n\n    this[kQueue].push(request)\n    if (this[kResuming]) {\n      // Do nothing.\n    } else if (util.bodyLength(request.body) == null && util.isIterable(request.body)) {\n      // Wait a tick in case stream/iterator is ended in the same tick.\n      this[kResuming] = 1\n      process.nextTick(resume, this)\n    } else {\n      resume(this, true)\n    }\n\n    if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {\n      this[kNeedDrain] = 2\n    }\n\n    return this[kNeedDrain] < 2\n  }\n\n  async [kClose] () {\n    // TODO: for H2 we need to gracefully flush the remaining enqueued\n    // request and close each stream.\n    return new Promise((resolve) => {\n      if (!this[kSize]) {\n        resolve(null)\n      } else {\n        this[kClosedResolve] = resolve\n      }\n    })\n  }\n\n  async [kDestroy] (err) {\n    return new Promise((resolve) => {\n      const requests = this[kQueue].splice(this[kPendingIdx])\n      for (let i = 0; i < requests.length; i++) {\n        const request = requests[i]\n        errorRequest(this, request, err)\n      }\n\n      const callback = () => {\n        if (this[kClosedResolve]) {\n          // TODO (fix): Should we error here with ClientDestroyedError?\n          this[kClosedResolve]()\n          this[kClosedResolve] = null\n        }\n        resolve()\n      }\n\n      if (this[kHTTP2Session] != null) {\n        util.destroy(this[kHTTP2Session], err)\n        this[kHTTP2Session] = null\n        this[kHTTP2SessionState] = null\n      }\n\n      if (!this[kSocket]) {\n        queueMicrotask(callback)\n      } else {\n        util.destroy(this[kSocket].on('close', callback), err)\n      }\n\n      resume(this)\n    })\n  }\n}\n\nfunction onHttp2SessionError (err) {\n  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')\n\n  this[kSocket][kError] = err\n\n  onError(this[kClient], err)\n}\n\nfunction onHttp2FrameError (type, code, id) {\n  const err = new InformationalError(`HTTP/2: \"frameError\" received - type ${type}, code ${code}`)\n\n  if (id === 0) {\n    this[kSocket][kError] = err\n    onError(this[kClient], err)\n  }\n}\n\nfunction onHttp2SessionEnd () {\n  util.destroy(this, new SocketError('other side closed'))\n  util.destroy(this[kSocket], new SocketError('other side closed'))\n}\n\nfunction onHTTP2GoAway (code) {\n  const client = this[kClient]\n  const err = new InformationalError(`HTTP/2: \"GOAWAY\" frame received with code ${code}`)\n  client[kSocket] = null\n  client[kHTTP2Session] = null\n\n  if (client.destroyed) {\n    assert(this[kPending] === 0)\n\n    // Fail entire queue.\n    const requests = client[kQueue].splice(client[kRunningIdx])\n    for (let i = 0; i < requests.length; i++) {\n      const request = requests[i]\n      errorRequest(this, request, err)\n    }\n  } else if (client[kRunning] > 0) {\n    // Fail head of pipeline.\n    const request = client[kQueue][client[kRunningIdx]]\n    client[kQueue][client[kRunningIdx]++] = null\n\n    errorRequest(client, request, err)\n  }\n\n  client[kPendingIdx] = client[kRunningIdx]\n\n  assert(client[kRunning] === 0)\n\n  client.emit('disconnect',\n    client[kUrl],\n    [client],\n    err\n  )\n\n  resume(client)\n}\n\nconst constants = require('./llhttp/constants')\nconst createRedirectInterceptor = require('./interceptor/redirectInterceptor')\nconst EMPTY_BUF = Buffer.alloc(0)\n\nasync function lazyllhttp () {\n  const llhttpWasmData = process.env.JEST_WORKER_ID ? require('./llhttp/llhttp-wasm.js') : undefined\n\n  let mod\n  try {\n    mod = await WebAssembly.compile(Buffer.from(require('./llhttp/llhttp_simd-wasm.js'), 'base64'))\n  } catch (e) {\n    /* istanbul ignore next */\n\n    // We could check if the error was caused by the simd option not\n    // being enabled, but the occurring of this other error\n    // * https://github.com/emscripten-core/emscripten/issues/11495\n    // got me to remove that check to avoid breaking Node 12.\n    mod = await WebAssembly.compile(Buffer.from(llhttpWasmData || require('./llhttp/llhttp-wasm.js'), 'base64'))\n  }\n\n  return await WebAssembly.instantiate(mod, {\n    env: {\n      /* eslint-disable camelcase */\n\n      wasm_on_url: (p, at, len) => {\n        /* istanbul ignore next */\n        return 0\n      },\n      wasm_on_status: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_message_begin: (p) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onMessageBegin() || 0\n      },\n      wasm_on_header_field: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_header_value: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_headers_complete: (p, statusCode, upgrade, shouldKeepAlive) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onHeadersComplete(statusCode, Boolean(upgrade), Boolean(shouldKeepAlive)) || 0\n      },\n      wasm_on_body: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onBody(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_message_complete: (p) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onMessageComplete() || 0\n      }\n\n      /* eslint-enable camelcase */\n    }\n  })\n}\n\nlet llhttpInstance = null\nlet llhttpPromise = lazyllhttp()\nllhttpPromise.catch()\n\nlet currentParser = null\nlet currentBufferRef = null\nlet currentBufferSize = 0\nlet currentBufferPtr = null\n\nconst TIMEOUT_HEADERS = 1\nconst TIMEOUT_BODY = 2\nconst TIMEOUT_IDLE = 3\n\nclass Parser {\n  constructor (client, socket, { exports }) {\n    assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0)\n\n    this.llhttp = exports\n    this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE)\n    this.client = client\n    this.socket = socket\n    this.timeout = null\n    this.timeoutValue = null\n    this.timeoutType = null\n    this.statusCode = null\n    this.statusText = ''\n    this.upgrade = false\n    this.headers = []\n    this.headersSize = 0\n    this.headersMaxSize = client[kMaxHeadersSize]\n    this.shouldKeepAlive = false\n    this.paused = false\n    this.resume = this.resume.bind(this)\n\n    this.bytesRead = 0\n\n    this.keepAlive = ''\n    this.contentLength = ''\n    this.connection = ''\n    this.maxResponseSize = client[kMaxResponseSize]\n  }\n\n  setTimeout (value, type) {\n    this.timeoutType = type\n    if (value !== this.timeoutValue) {\n      timers.clearTimeout(this.timeout)\n      if (value) {\n        this.timeout = timers.setTimeout(onParserTimeout, value, this)\n        // istanbul ignore else: only for jest\n        if (this.timeout.unref) {\n          this.timeout.unref()\n        }\n      } else {\n        this.timeout = null\n      }\n      this.timeoutValue = value\n    } else if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n  }\n\n  resume () {\n    if (this.socket.destroyed || !this.paused) {\n      return\n    }\n\n    assert(this.ptr != null)\n    assert(currentParser == null)\n\n    this.llhttp.llhttp_resume(this.ptr)\n\n    assert(this.timeoutType === TIMEOUT_BODY)\n    if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    this.paused = false\n    this.execute(this.socket.read() || EMPTY_BUF) // Flush parser.\n    this.readMore()\n  }\n\n  readMore () {\n    while (!this.paused && this.ptr) {\n      const chunk = this.socket.read()\n      if (chunk === null) {\n        break\n      }\n      this.execute(chunk)\n    }\n  }\n\n  execute (data) {\n    assert(this.ptr != null)\n    assert(currentParser == null)\n    assert(!this.paused)\n\n    const { socket, llhttp } = this\n\n    if (data.length > currentBufferSize) {\n      if (currentBufferPtr) {\n        llhttp.free(currentBufferPtr)\n      }\n      currentBufferSize = Math.ceil(data.length / 4096) * 4096\n      currentBufferPtr = llhttp.malloc(currentBufferSize)\n    }\n\n    new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data)\n\n    // Call `execute` on the wasm parser.\n    // We pass the `llhttp_parser` pointer address, the pointer address of buffer view data,\n    // and finally the length of bytes to parse.\n    // The return value is an error code or `constants.ERROR.OK`.\n    try {\n      let ret\n\n      try {\n        currentBufferRef = data\n        currentParser = this\n        ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length)\n        /* eslint-disable-next-line no-useless-catch */\n      } catch (err) {\n        /* istanbul ignore next: difficult to make a test case for */\n        throw err\n      } finally {\n        currentParser = null\n        currentBufferRef = null\n      }\n\n      const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr\n\n      if (ret === constants.ERROR.PAUSED_UPGRADE) {\n        this.onUpgrade(data.slice(offset))\n      } else if (ret === constants.ERROR.PAUSED) {\n        this.paused = true\n        socket.unshift(data.slice(offset))\n      } else if (ret !== constants.ERROR.OK) {\n        const ptr = llhttp.llhttp_get_error_reason(this.ptr)\n        let message = ''\n        /* istanbul ignore else: difficult to make a test case for */\n        if (ptr) {\n          const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0)\n          message =\n            'Response does not match the HTTP/1.1 protocol (' +\n            Buffer.from(llhttp.memory.buffer, ptr, len).toString() +\n            ')'\n        }\n        throw new HTTPParserError(message, constants.ERROR[ret], data.slice(offset))\n      }\n    } catch (err) {\n      util.destroy(socket, err)\n    }\n  }\n\n  destroy () {\n    assert(this.ptr != null)\n    assert(currentParser == null)\n\n    this.llhttp.llhttp_free(this.ptr)\n    this.ptr = null\n\n    timers.clearTimeout(this.timeout)\n    this.timeout = null\n    this.timeoutValue = null\n    this.timeoutType = null\n\n    this.paused = false\n  }\n\n  onStatus (buf) {\n    this.statusText = buf.toString()\n  }\n\n  onMessageBegin () {\n    const { socket, client } = this\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    if (!request) {\n      return -1\n    }\n  }\n\n  onHeaderField (buf) {\n    const len = this.headers.length\n\n    if ((len & 1) === 0) {\n      this.headers.push(buf)\n    } else {\n      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])\n    }\n\n    this.trackHeader(buf.length)\n  }\n\n  onHeaderValue (buf) {\n    let len = this.headers.length\n\n    if ((len & 1) === 1) {\n      this.headers.push(buf)\n      len += 1\n    } else {\n      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])\n    }\n\n    const key = this.headers[len - 2]\n    if (key.length === 10 && key.toString().toLowerCase() === 'keep-alive') {\n      this.keepAlive += buf.toString()\n    } else if (key.length === 10 && key.toString().toLowerCase() === 'connection') {\n      this.connection += buf.toString()\n    } else if (key.length === 14 && key.toString().toLowerCase() === 'content-length') {\n      this.contentLength += buf.toString()\n    }\n\n    this.trackHeader(buf.length)\n  }\n\n  trackHeader (len) {\n    this.headersSize += len\n    if (this.headersSize >= this.headersMaxSize) {\n      util.destroy(this.socket, new HeadersOverflowError())\n    }\n  }\n\n  onUpgrade (head) {\n    const { upgrade, client, socket, headers, statusCode } = this\n\n    assert(upgrade)\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert(!socket.destroyed)\n    assert(socket === client[kSocket])\n    assert(!this.paused)\n    assert(request.upgrade || request.method === 'CONNECT')\n\n    this.statusCode = null\n    this.statusText = ''\n    this.shouldKeepAlive = null\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    socket.unshift(head)\n\n    socket[kParser].destroy()\n    socket[kParser] = null\n\n    socket[kClient] = null\n    socket[kError] = null\n    socket\n      .removeListener('error', onSocketError)\n      .removeListener('readable', onSocketReadable)\n      .removeListener('end', onSocketEnd)\n      .removeListener('close', onSocketClose)\n\n    client[kSocket] = null\n    client[kQueue][client[kRunningIdx]++] = null\n    client.emit('disconnect', client[kUrl], [client], new InformationalError('upgrade'))\n\n    try {\n      request.onUpgrade(statusCode, headers, socket)\n    } catch (err) {\n      util.destroy(socket, err)\n    }\n\n    resume(client)\n  }\n\n  onHeadersComplete (statusCode, upgrade, shouldKeepAlive) {\n    const { client, socket, headers, statusText } = this\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (!request) {\n      return -1\n    }\n\n    assert(!this.upgrade)\n    assert(this.statusCode < 200)\n\n    if (statusCode === 100) {\n      util.destroy(socket, new SocketError('bad response', util.getSocketInfo(socket)))\n      return -1\n    }\n\n    /* this can only happen if server is misbehaving */\n    if (upgrade && !request.upgrade) {\n      util.destroy(socket, new SocketError('bad upgrade', util.getSocketInfo(socket)))\n      return -1\n    }\n\n    assert.strictEqual(this.timeoutType, TIMEOUT_HEADERS)\n\n    this.statusCode = statusCode\n    this.shouldKeepAlive = (\n      shouldKeepAlive ||\n      // Override llhttp value which does not allow keepAlive for HEAD.\n      (request.method === 'HEAD' && !socket[kReset] && this.connection.toLowerCase() === 'keep-alive')\n    )\n\n    if (this.statusCode >= 200) {\n      const bodyTimeout = request.bodyTimeout != null\n        ? request.bodyTimeout\n        : client[kBodyTimeout]\n      this.setTimeout(bodyTimeout, TIMEOUT_BODY)\n    } else if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    if (request.method === 'CONNECT') {\n      assert(client[kRunning] === 1)\n      this.upgrade = true\n      return 2\n    }\n\n    if (upgrade) {\n      assert(client[kRunning] === 1)\n      this.upgrade = true\n      return 2\n    }\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    if (this.shouldKeepAlive && client[kPipelining]) {\n      const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null\n\n      if (keepAliveTimeout != null) {\n        const timeout = Math.min(\n          keepAliveTimeout - client[kKeepAliveTimeoutThreshold],\n          client[kKeepAliveMaxTimeout]\n        )\n        if (timeout <= 0) {\n          socket[kReset] = true\n        } else {\n          client[kKeepAliveTimeoutValue] = timeout\n        }\n      } else {\n        client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout]\n      }\n    } else {\n      // Stop more requests from being dispatched.\n      socket[kReset] = true\n    }\n\n    let pause\n    try {\n      pause = request.onHeaders(statusCode, headers, this.resume, statusText) === false\n    } catch (err) {\n      util.destroy(socket, err)\n      return -1\n    }\n\n    if (request.method === 'HEAD') {\n      return 1\n    }\n\n    if (statusCode < 200) {\n      return 1\n    }\n\n    if (socket[kBlocking]) {\n      socket[kBlocking] = false\n      resume(client)\n    }\n\n    return pause ? constants.ERROR.PAUSED : 0\n  }\n\n  onBody (buf) {\n    const { client, socket, statusCode, maxResponseSize } = this\n\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert.strictEqual(this.timeoutType, TIMEOUT_BODY)\n    if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    assert(statusCode >= 200)\n\n    if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {\n      util.destroy(socket, new ResponseExceededMaxSizeError())\n      return -1\n    }\n\n    this.bytesRead += buf.length\n\n    try {\n      if (request.onData(buf) === false) {\n        return constants.ERROR.PAUSED\n      }\n    } catch (err) {\n      util.destroy(socket, err)\n      return -1\n    }\n  }\n\n  onMessageComplete () {\n    const { client, socket, statusCode, upgrade, headers, contentLength, bytesRead, shouldKeepAlive } = this\n\n    if (socket.destroyed && (!statusCode || shouldKeepAlive)) {\n      return -1\n    }\n\n    if (upgrade) {\n      return\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert(statusCode >= 100)\n\n    this.statusCode = null\n    this.statusText = ''\n    this.bytesRead = 0\n    this.contentLength = ''\n    this.keepAlive = ''\n    this.connection = ''\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    if (statusCode < 200) {\n      return\n    }\n\n    /* istanbul ignore next: should be handled by llhttp? */\n    if (request.method !== 'HEAD' && contentLength && bytesRead !== parseInt(contentLength, 10)) {\n      util.destroy(socket, new ResponseContentLengthMismatchError())\n      return -1\n    }\n\n    try {\n      request.onComplete(headers)\n    } catch (err) {\n      errorRequest(client, request, err)\n    }\n\n    client[kQueue][client[kRunningIdx]++] = null\n\n    if (socket[kWriting]) {\n      assert.strictEqual(client[kRunning], 0)\n      // Response completed before request.\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (!shouldKeepAlive) {\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (socket[kReset] && client[kRunning] === 0) {\n      // Destroy socket once all requests have completed.\n      // The request at the tail of the pipeline is the one\n      // that requested reset and no further requests should\n      // have been queued since then.\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (client[kPipelining] === 1) {\n      // We must wait a full event loop cycle to reuse this socket to make sure\n      // that non-spec compliant servers are not closing the connection even if they\n      // said they won't.\n      setImmediate(resume, client)\n    } else {\n      resume(client)\n    }\n  }\n}\n\nfunction onParserTimeout (parser) {\n  const { socket, timeoutType, client } = parser\n\n  /* istanbul ignore else */\n  if (timeoutType === TIMEOUT_HEADERS) {\n    if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {\n      assert(!parser.paused, 'cannot be paused while waiting for headers')\n      util.destroy(socket, new HeadersTimeoutError())\n    }\n  } else if (timeoutType === TIMEOUT_BODY) {\n    if (!parser.paused) {\n      util.destroy(socket, new BodyTimeoutError())\n    }\n  } else if (timeoutType === TIMEOUT_IDLE) {\n    assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue])\n    util.destroy(socket, new InformationalError('socket idle timeout'))\n  }\n}\n\nfunction onSocketReadable () {\n  const { [kParser]: parser } = this\n  if (parser) {\n    parser.readMore()\n  }\n}\n\nfunction onSocketError (err) {\n  const { [kClient]: client, [kParser]: parser } = this\n\n  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')\n\n  if (client[kHTTPConnVersion] !== 'h2') {\n    // On Mac OS, we get an ECONNRESET even if there is a full body to be forwarded\n    // to the user.\n    if (err.code === 'ECONNRESET' && parser.statusCode && !parser.shouldKeepAlive) {\n      // We treat all incoming data so for as a valid response.\n      parser.onMessageComplete()\n      return\n    }\n  }\n\n  this[kError] = err\n\n  onError(this[kClient], err)\n}\n\nfunction onError (client, err) {\n  if (\n    client[kRunning] === 0 &&\n    err.code !== 'UND_ERR_INFO' &&\n    err.code !== 'UND_ERR_SOCKET'\n  ) {\n    // Error is not caused by running request and not a recoverable\n    // socket error.\n\n    assert(client[kPendingIdx] === client[kRunningIdx])\n\n    const requests = client[kQueue].splice(client[kRunningIdx])\n    for (let i = 0; i < requests.length; i++) {\n      const request = requests[i]\n      errorRequest(client, request, err)\n    }\n    assert(client[kSize] === 0)\n  }\n}\n\nfunction onSocketEnd () {\n  const { [kParser]: parser, [kClient]: client } = this\n\n  if (client[kHTTPConnVersion] !== 'h2') {\n    if (parser.statusCode && !parser.shouldKeepAlive) {\n      // We treat all incoming data so far as a valid response.\n      parser.onMessageComplete()\n      return\n    }\n  }\n\n  util.destroy(this, new SocketError('other side closed', util.getSocketInfo(this)))\n}\n\nfunction onSocketClose () {\n  const { [kClient]: client, [kParser]: parser } = this\n\n  if (client[kHTTPConnVersion] === 'h1' && parser) {\n    if (!this[kError] && parser.statusCode && !parser.shouldKeepAlive) {\n      // We treat all incoming data so far as a valid response.\n      parser.onMessageComplete()\n    }\n\n    this[kParser].destroy()\n    this[kParser] = null\n  }\n\n  const err = this[kError] || new SocketError('closed', util.getSocketInfo(this))\n\n  client[kSocket] = null\n\n  if (client.destroyed) {\n    assert(client[kPending] === 0)\n\n    // Fail entire queue.\n    const requests = client[kQueue].splice(client[kRunningIdx])\n    for (let i = 0; i < requests.length; i++) {\n      const request = requests[i]\n      errorRequest(client, request, err)\n    }\n  } else if (client[kRunning] > 0 && err.code !== 'UND_ERR_INFO') {\n    // Fail head of pipeline.\n    const request = client[kQueue][client[kRunningIdx]]\n    client[kQueue][client[kRunningIdx]++] = null\n\n    errorRequest(client, request, err)\n  }\n\n  client[kPendingIdx] = client[kRunningIdx]\n\n  assert(client[kRunning] === 0)\n\n  client.emit('disconnect', client[kUrl], [client], err)\n\n  resume(client)\n}\n\nasync function connect (client) {\n  assert(!client[kConnecting])\n  assert(!client[kSocket])\n\n  let { host, hostname, protocol, port } = client[kUrl]\n\n  // Resolve ipv6\n  if (hostname[0] === '[') {\n    const idx = hostname.indexOf(']')\n\n    assert(idx !== -1)\n    const ip = hostname.substr(1, idx - 1)\n\n    assert(net.isIP(ip))\n    hostname = ip\n  }\n\n  client[kConnecting] = true\n\n  if (channels.beforeConnect.hasSubscribers) {\n    channels.beforeConnect.publish({\n      connectParams: {\n        host,\n        hostname,\n        protocol,\n        port,\n        servername: client[kServerName],\n        localAddress: client[kLocalAddress]\n      },\n      connector: client[kConnector]\n    })\n  }\n\n  try {\n    const socket = await new Promise((resolve, reject) => {\n      client[kConnector]({\n        host,\n        hostname,\n        protocol,\n        port,\n        servername: client[kServerName],\n        localAddress: client[kLocalAddress]\n      }, (err, socket) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(socket)\n        }\n      })\n    })\n\n    if (client.destroyed) {\n      util.destroy(socket.on('error', () => {}), new ClientDestroyedError())\n      return\n    }\n\n    client[kConnecting] = false\n\n    assert(socket)\n\n    const isH2 = socket.alpnProtocol === 'h2'\n    if (isH2) {\n      if (!h2ExperimentalWarned) {\n        h2ExperimentalWarned = true\n        process.emitWarning('H2 support is experimental, expect them to change at any time.', {\n          code: 'UNDICI-H2'\n        })\n      }\n\n      const session = http2.connect(client[kUrl], {\n        createConnection: () => socket,\n        peerMaxConcurrentStreams: client[kHTTP2SessionState].maxConcurrentStreams\n      })\n\n      client[kHTTPConnVersion] = 'h2'\n      session[kClient] = client\n      session[kSocket] = socket\n      session.on('error', onHttp2SessionError)\n      session.on('frameError', onHttp2FrameError)\n      session.on('end', onHttp2SessionEnd)\n      session.on('goaway', onHTTP2GoAway)\n      session.on('close', onSocketClose)\n      session.unref()\n\n      client[kHTTP2Session] = session\n      socket[kHTTP2Session] = session\n    } else {\n      if (!llhttpInstance) {\n        llhttpInstance = await llhttpPromise\n        llhttpPromise = null\n      }\n\n      socket[kNoRef] = false\n      socket[kWriting] = false\n      socket[kReset] = false\n      socket[kBlocking] = false\n      socket[kParser] = new Parser(client, socket, llhttpInstance)\n    }\n\n    socket[kCounter] = 0\n    socket[kMaxRequests] = client[kMaxRequests]\n    socket[kClient] = client\n    socket[kError] = null\n\n    socket\n      .on('error', onSocketError)\n      .on('readable', onSocketReadable)\n      .on('end', onSocketEnd)\n      .on('close', onSocketClose)\n\n    client[kSocket] = socket\n\n    if (channels.connected.hasSubscribers) {\n      channels.connected.publish({\n        connectParams: {\n          host,\n          hostname,\n          protocol,\n          port,\n          servername: client[kServerName],\n          localAddress: client[kLocalAddress]\n        },\n        connector: client[kConnector],\n        socket\n      })\n    }\n    client.emit('connect', client[kUrl], [client])\n  } catch (err) {\n    if (client.destroyed) {\n      return\n    }\n\n    client[kConnecting] = false\n\n    if (channels.connectError.hasSubscribers) {\n      channels.connectError.publish({\n        connectParams: {\n          host,\n          hostname,\n          protocol,\n          port,\n          servername: client[kServerName],\n          localAddress: client[kLocalAddress]\n        },\n        connector: client[kConnector],\n        error: err\n      })\n    }\n\n    if (err.code === 'ERR_TLS_CERT_ALTNAME_INVALID') {\n      assert(client[kRunning] === 0)\n      while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {\n        const request = client[kQueue][client[kPendingIdx]++]\n        errorRequest(client, request, err)\n      }\n    } else {\n      onError(client, err)\n    }\n\n    client.emit('connectionError', client[kUrl], [client], err)\n  }\n\n  resume(client)\n}\n\nfunction emitDrain (client) {\n  client[kNeedDrain] = 0\n  client.emit('drain', client[kUrl], [client])\n}\n\nfunction resume (client, sync) {\n  if (client[kResuming] === 2) {\n    return\n  }\n\n  client[kResuming] = 2\n\n  _resume(client, sync)\n  client[kResuming] = 0\n\n  if (client[kRunningIdx] > 256) {\n    client[kQueue].splice(0, client[kRunningIdx])\n    client[kPendingIdx] -= client[kRunningIdx]\n    client[kRunningIdx] = 0\n  }\n}\n\nfunction _resume (client, sync) {\n  while (true) {\n    if (client.destroyed) {\n      assert(client[kPending] === 0)\n      return\n    }\n\n    if (client[kClosedResolve] && !client[kSize]) {\n      client[kClosedResolve]()\n      client[kClosedResolve] = null\n      return\n    }\n\n    const socket = client[kSocket]\n\n    if (socket && !socket.destroyed && socket.alpnProtocol !== 'h2') {\n      if (client[kSize] === 0) {\n        if (!socket[kNoRef] && socket.unref) {\n          socket.unref()\n          socket[kNoRef] = true\n        }\n      } else if (socket[kNoRef] && socket.ref) {\n        socket.ref()\n        socket[kNoRef] = false\n      }\n\n      if (client[kSize] === 0) {\n        if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {\n          socket[kParser].setTimeout(client[kKeepAliveTimeoutValue], TIMEOUT_IDLE)\n        }\n      } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {\n        if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {\n          const request = client[kQueue][client[kRunningIdx]]\n          const headersTimeout = request.headersTimeout != null\n            ? request.headersTimeout\n            : client[kHeadersTimeout]\n          socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS)\n        }\n      }\n    }\n\n    if (client[kBusy]) {\n      client[kNeedDrain] = 2\n    } else if (client[kNeedDrain] === 2) {\n      if (sync) {\n        client[kNeedDrain] = 1\n        process.nextTick(emitDrain, client)\n      } else {\n        emitDrain(client)\n      }\n      continue\n    }\n\n    if (client[kPending] === 0) {\n      return\n    }\n\n    if (client[kRunning] >= (client[kPipelining] || 1)) {\n      return\n    }\n\n    const request = client[kQueue][client[kPendingIdx]]\n\n    if (client[kUrl].protocol === 'https:' && client[kServerName] !== request.servername) {\n      if (client[kRunning] > 0) {\n        return\n      }\n\n      client[kServerName] = request.servername\n\n      if (socket && socket.servername !== request.servername) {\n        util.destroy(socket, new InformationalError('servername changed'))\n        return\n      }\n    }\n\n    if (client[kConnecting]) {\n      return\n    }\n\n    if (!socket && !client[kHTTP2Session]) {\n      connect(client)\n      return\n    }\n\n    if (socket.destroyed || socket[kWriting] || socket[kReset] || socket[kBlocking]) {\n      return\n    }\n\n    if (client[kRunning] > 0 && !request.idempotent) {\n      // Non-idempotent request cannot be retried.\n      // Ensure that no other requests are inflight and\n      // could cause failure.\n      return\n    }\n\n    if (client[kRunning] > 0 && (request.upgrade || request.method === 'CONNECT')) {\n      // Don't dispatch an upgrade until all preceding requests have completed.\n      // A misbehaving server might upgrade the connection before all pipelined\n      // request has completed.\n      return\n    }\n\n    if (client[kRunning] > 0 && util.bodyLength(request.body) !== 0 &&\n      (util.isStream(request.body) || util.isAsyncIterable(request.body))) {\n      // Request with stream or iterator body can error while other requests\n      // are inflight and indirectly error those as well.\n      // Ensure this doesn't happen by waiting for inflight\n      // to complete before dispatching.\n\n      // Request with stream or iterator body cannot be retried.\n      // Ensure that no other requests are inflight and\n      // could cause failure.\n      return\n    }\n\n    if (!request.aborted && write(client, request)) {\n      client[kPendingIdx]++\n    } else {\n      client[kQueue].splice(client[kPendingIdx], 1)\n    }\n  }\n}\n\n// https://www.rfc-editor.org/rfc/rfc7230#section-3.3.2\nfunction shouldSendContentLength (method) {\n  return method !== 'GET' && method !== 'HEAD' && method !== 'OPTIONS' && method !== 'TRACE' && method !== 'CONNECT'\n}\n\nfunction write (client, request) {\n  if (client[kHTTPConnVersion] === 'h2') {\n    writeH2(client, client[kHTTP2Session], request)\n    return\n  }\n\n  const { body, method, path, host, upgrade, headers, blocking, reset } = request\n\n  // https://tools.ietf.org/html/rfc7231#section-4.3.1\n  // https://tools.ietf.org/html/rfc7231#section-4.3.2\n  // https://tools.ietf.org/html/rfc7231#section-4.3.5\n\n  // Sending a payload body on a request that does not\n  // expect it can cause undefined behavior on some\n  // servers and corrupt connection state. Do not\n  // re-use the connection for further requests.\n\n  const expectsPayload = (\n    method === 'PUT' ||\n    method === 'POST' ||\n    method === 'PATCH'\n  )\n\n  if (body && typeof body.read === 'function') {\n    // Try to read EOF in order to get length.\n    body.read(0)\n  }\n\n  const bodyLength = util.bodyLength(body)\n\n  let contentLength = bodyLength\n\n  if (contentLength === null) {\n    contentLength = request.contentLength\n  }\n\n  if (contentLength === 0 && !expectsPayload) {\n    // https://tools.ietf.org/html/rfc7230#section-3.3.2\n    // A user agent SHOULD NOT send a Content-Length header field when\n    // the request message does not contain a payload body and the method\n    // semantics do not anticipate such a body.\n\n    contentLength = null\n  }\n\n  // https://github.com/nodejs/undici/issues/2046\n  // A user agent may send a Content-Length header with 0 value, this should be allowed.\n  if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength !== null && request.contentLength !== contentLength) {\n    if (client[kStrictContentLength]) {\n      errorRequest(client, request, new RequestContentLengthMismatchError())\n      return false\n    }\n\n    process.emitWarning(new RequestContentLengthMismatchError())\n  }\n\n  const socket = client[kSocket]\n\n  try {\n    request.onConnect((err) => {\n      if (request.aborted || request.completed) {\n        return\n      }\n\n      errorRequest(client, request, err || new RequestAbortedError())\n\n      util.destroy(socket, new InformationalError('aborted'))\n    })\n  } catch (err) {\n    errorRequest(client, request, err)\n  }\n\n  if (request.aborted) {\n    return false\n  }\n\n  if (method === 'HEAD') {\n    // https://github.com/mcollina/undici/issues/258\n    // Close after a HEAD request to interop with misbehaving servers\n    // that may send a body in the response.\n\n    socket[kReset] = true\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    // On CONNECT or upgrade, block pipeline from dispatching further\n    // requests on this connection.\n\n    socket[kReset] = true\n  }\n\n  if (reset != null) {\n    socket[kReset] = reset\n  }\n\n  if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {\n    socket[kReset] = true\n  }\n\n  if (blocking) {\n    socket[kBlocking] = true\n  }\n\n  let header = `${method} ${path} HTTP/1.1\\r\\n`\n\n  if (typeof host === 'string') {\n    header += `host: ${host}\\r\\n`\n  } else {\n    header += client[kHostHeader]\n  }\n\n  if (upgrade) {\n    header += `connection: upgrade\\r\\nupgrade: ${upgrade}\\r\\n`\n  } else if (client[kPipelining] && !socket[kReset]) {\n    header += 'connection: keep-alive\\r\\n'\n  } else {\n    header += 'connection: close\\r\\n'\n  }\n\n  if (headers) {\n    header += headers\n  }\n\n  if (channels.sendHeaders.hasSubscribers) {\n    channels.sendHeaders.publish({ request, headers: header, socket })\n  }\n\n  /* istanbul ignore else: assertion */\n  if (!body || bodyLength === 0) {\n    if (contentLength === 0) {\n      socket.write(`${header}content-length: 0\\r\\n\\r\\n`, 'latin1')\n    } else {\n      assert(contentLength === null, 'no body must not have content length')\n      socket.write(`${header}\\r\\n`, 'latin1')\n    }\n    request.onRequestSent()\n  } else if (util.isBuffer(body)) {\n    assert(contentLength === body.byteLength, 'buffer body must have content length')\n\n    socket.cork()\n    socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n    socket.write(body)\n    socket.uncork()\n    request.onBodySent(body)\n    request.onRequestSent()\n    if (!expectsPayload) {\n      socket[kReset] = true\n    }\n  } else if (util.isBlobLike(body)) {\n    if (typeof body.stream === 'function') {\n      writeIterable({ body: body.stream(), client, request, socket, contentLength, header, expectsPayload })\n    } else {\n      writeBlob({ body, client, request, socket, contentLength, header, expectsPayload })\n    }\n  } else if (util.isStream(body)) {\n    writeStream({ body, client, request, socket, contentLength, header, expectsPayload })\n  } else if (util.isIterable(body)) {\n    writeIterable({ body, client, request, socket, contentLength, header, expectsPayload })\n  } else {\n    assert(false)\n  }\n\n  return true\n}\n\nfunction writeH2 (client, session, request) {\n  const { body, method, path, host, upgrade, expectContinue, signal, headers: reqHeaders } = request\n\n  let headers\n  if (typeof reqHeaders === 'string') headers = Request[kHTTP2CopyHeaders](reqHeaders.trim())\n  else headers = reqHeaders\n\n  if (upgrade) {\n    errorRequest(client, request, new Error('Upgrade not supported for H2'))\n    return false\n  }\n\n  try {\n    // TODO(HTTP/2): Should we call onConnect immediately or on stream ready event?\n    request.onConnect((err) => {\n      if (request.aborted || request.completed) {\n        return\n      }\n\n      errorRequest(client, request, err || new RequestAbortedError())\n    })\n  } catch (err) {\n    errorRequest(client, request, err)\n  }\n\n  if (request.aborted) {\n    return false\n  }\n\n  let stream\n  const h2State = client[kHTTP2SessionState]\n\n  headers[HTTP2_HEADER_AUTHORITY] = host || client[kHost]\n  headers[HTTP2_HEADER_METHOD] = method\n\n  if (method === 'CONNECT') {\n    session.ref()\n    // we are already connected, streams are pending, first request\n    // will create a new stream. We trigger a request to create the stream and wait until\n    // `ready` event is triggered\n    // We disabled endStream to allow the user to write to the stream\n    stream = session.request(headers, { endStream: false, signal })\n\n    if (stream.id && !stream.pending) {\n      request.onUpgrade(null, null, stream)\n      ++h2State.openStreams\n    } else {\n      stream.once('ready', () => {\n        request.onUpgrade(null, null, stream)\n        ++h2State.openStreams\n      })\n    }\n\n    stream.once('close', () => {\n      h2State.openStreams -= 1\n      // TODO(HTTP/2): unref only if current streams count is 0\n      if (h2State.openStreams === 0) session.unref()\n    })\n\n    return true\n  }\n\n  // https://tools.ietf.org/html/rfc7540#section-8.3\n  // :path and :scheme headers must be omited when sending CONNECT\n\n  headers[HTTP2_HEADER_PATH] = path\n  headers[HTTP2_HEADER_SCHEME] = 'https'\n\n  // https://tools.ietf.org/html/rfc7231#section-4.3.1\n  // https://tools.ietf.org/html/rfc7231#section-4.3.2\n  // https://tools.ietf.org/html/rfc7231#section-4.3.5\n\n  // Sending a payload body on a request that does not\n  // expect it can cause undefined behavior on some\n  // servers and corrupt connection state. Do not\n  // re-use the connection for further requests.\n\n  const expectsPayload = (\n    method === 'PUT' ||\n    method === 'POST' ||\n    method === 'PATCH'\n  )\n\n  if (body && typeof body.read === 'function') {\n    // Try to read EOF in order to get length.\n    body.read(0)\n  }\n\n  let contentLength = util.bodyLength(body)\n\n  if (contentLength == null) {\n    contentLength = request.contentLength\n  }\n\n  if (contentLength === 0 || !expectsPayload) {\n    // https://tools.ietf.org/html/rfc7230#section-3.3.2\n    // A user agent SHOULD NOT send a Content-Length header field when\n    // the request message does not contain a payload body and the method\n    // semantics do not anticipate such a body.\n\n    contentLength = null\n  }\n\n  // https://github.com/nodejs/undici/issues/2046\n  // A user agent may send a Content-Length header with 0 value, this should be allowed.\n  if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength != null && request.contentLength !== contentLength) {\n    if (client[kStrictContentLength]) {\n      errorRequest(client, request, new RequestContentLengthMismatchError())\n      return false\n    }\n\n    process.emitWarning(new RequestContentLengthMismatchError())\n  }\n\n  if (contentLength != null) {\n    assert(body, 'no body must not have content length')\n    headers[HTTP2_HEADER_CONTENT_LENGTH] = `${contentLength}`\n  }\n\n  session.ref()\n\n  const shouldEndStream = method === 'GET' || method === 'HEAD'\n  if (expectContinue) {\n    headers[HTTP2_HEADER_EXPECT] = '100-continue'\n    /**\n     * @type {import('node:http2').ClientHttp2Stream}\n     */\n    stream = session.request(headers, { endStream: shouldEndStream, signal })\n\n    stream.once('continue', writeBodyH2)\n  } else {\n    /** @type {import('node:http2').ClientHttp2Stream} */\n    stream = session.request(headers, {\n      endStream: shouldEndStream,\n      signal\n    })\n    writeBodyH2()\n  }\n\n  // Increment counter as we have new several streams open\n  ++h2State.openStreams\n\n  stream.once('response', headers => {\n    if (request.onHeaders(Number(headers[HTTP2_HEADER_STATUS]), headers, stream.resume.bind(stream), '') === false) {\n      stream.pause()\n    }\n  })\n\n  stream.once('end', () => {\n    request.onComplete([])\n  })\n\n  stream.on('data', (chunk) => {\n    if (request.onData(chunk) === false) stream.pause()\n  })\n\n  stream.once('close', () => {\n    h2State.openStreams -= 1\n    // TODO(HTTP/2): unref only if current streams count is 0\n    if (h2State.openStreams === 0) session.unref()\n  })\n\n  stream.once('error', function (err) {\n    if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {\n      h2State.streams -= 1\n      util.destroy(stream, err)\n    }\n  })\n\n  stream.once('frameError', (type, code) => {\n    const err = new InformationalError(`HTTP/2: \"frameError\" received - type ${type}, code ${code}`)\n    errorRequest(client, request, err)\n\n    if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {\n      h2State.streams -= 1\n      util.destroy(stream, err)\n    }\n  })\n\n  // stream.on('aborted', () => {\n  //   // TODO(HTTP/2): Support aborted\n  // })\n\n  // stream.on('timeout', () => {\n  //   // TODO(HTTP/2): Support timeout\n  // })\n\n  // stream.on('push', headers => {\n  //   // TODO(HTTP/2): Suppor push\n  // })\n\n  // stream.on('trailers', headers => {\n  //   // TODO(HTTP/2): Support trailers\n  // })\n\n  return true\n\n  function writeBodyH2 () {\n    /* istanbul ignore else: assertion */\n    if (!body) {\n      request.onRequestSent()\n    } else if (util.isBuffer(body)) {\n      assert(contentLength === body.byteLength, 'buffer body must have content length')\n      stream.cork()\n      stream.write(body)\n      stream.uncork()\n      stream.end()\n      request.onBodySent(body)\n      request.onRequestSent()\n    } else if (util.isBlobLike(body)) {\n      if (typeof body.stream === 'function') {\n        writeIterable({\n          client,\n          request,\n          contentLength,\n          h2stream: stream,\n          expectsPayload,\n          body: body.stream(),\n          socket: client[kSocket],\n          header: ''\n        })\n      } else {\n        writeBlob({\n          body,\n          client,\n          request,\n          contentLength,\n          expectsPayload,\n          h2stream: stream,\n          header: '',\n          socket: client[kSocket]\n        })\n      }\n    } else if (util.isStream(body)) {\n      writeStream({\n        body,\n        client,\n        request,\n        contentLength,\n        expectsPayload,\n        socket: client[kSocket],\n        h2stream: stream,\n        header: ''\n      })\n    } else if (util.isIterable(body)) {\n      writeIterable({\n        body,\n        client,\n        request,\n        contentLength,\n        expectsPayload,\n        header: '',\n        h2stream: stream,\n        socket: client[kSocket]\n      })\n    } else {\n      assert(false)\n    }\n  }\n}\n\nfunction writeStream ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {\n  assert(contentLength !== 0 || client[kRunning] === 0, 'stream body cannot be pipelined')\n\n  if (client[kHTTPConnVersion] === 'h2') {\n    // For HTTP/2, is enough to pipe the stream\n    const pipe = pipeline(\n      body,\n      h2stream,\n      (err) => {\n        if (err) {\n          util.destroy(body, err)\n          util.destroy(h2stream, err)\n        } else {\n          request.onRequestSent()\n        }\n      }\n    )\n\n    pipe.on('data', onPipeData)\n    pipe.once('end', () => {\n      pipe.removeListener('data', onPipeData)\n      util.destroy(pipe)\n    })\n\n    function onPipeData (chunk) {\n      request.onBodySent(chunk)\n    }\n\n    return\n  }\n\n  let finished = false\n\n  const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header })\n\n  const onData = function (chunk) {\n    if (finished) {\n      return\n    }\n\n    try {\n      if (!writer.write(chunk) && this.pause) {\n        this.pause()\n      }\n    } catch (err) {\n      util.destroy(this, err)\n    }\n  }\n  const onDrain = function () {\n    if (finished) {\n      return\n    }\n\n    if (body.resume) {\n      body.resume()\n    }\n  }\n  const onAbort = function () {\n    onFinished(new RequestAbortedError())\n  }\n  const onFinished = function (err) {\n    if (finished) {\n      return\n    }\n\n    finished = true\n\n    assert(socket.destroyed || (socket[kWriting] && client[kRunning] <= 1))\n\n    socket\n      .off('drain', onDrain)\n      .off('error', onFinished)\n\n    body\n      .removeListener('data', onData)\n      .removeListener('end', onFinished)\n      .removeListener('error', onFinished)\n      .removeListener('close', onAbort)\n\n    if (!err) {\n      try {\n        writer.end()\n      } catch (er) {\n        err = er\n      }\n    }\n\n    writer.destroy(err)\n\n    if (err && (err.code !== 'UND_ERR_INFO' || err.message !== 'reset')) {\n      util.destroy(body, err)\n    } else {\n      util.destroy(body)\n    }\n  }\n\n  body\n    .on('data', onData)\n    .on('end', onFinished)\n    .on('error', onFinished)\n    .on('close', onAbort)\n\n  if (body.resume) {\n    body.resume()\n  }\n\n  socket\n    .on('drain', onDrain)\n    .on('error', onFinished)\n}\n\nasync function writeBlob ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {\n  assert(contentLength === body.size, 'blob body must have content length')\n\n  const isH2 = client[kHTTPConnVersion] === 'h2'\n  try {\n    if (contentLength != null && contentLength !== body.size) {\n      throw new RequestContentLengthMismatchError()\n    }\n\n    const buffer = Buffer.from(await body.arrayBuffer())\n\n    if (isH2) {\n      h2stream.cork()\n      h2stream.write(buffer)\n      h2stream.uncork()\n    } else {\n      socket.cork()\n      socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n      socket.write(buffer)\n      socket.uncork()\n    }\n\n    request.onBodySent(buffer)\n    request.onRequestSent()\n\n    if (!expectsPayload) {\n      socket[kReset] = true\n    }\n\n    resume(client)\n  } catch (err) {\n    util.destroy(isH2 ? h2stream : socket, err)\n  }\n}\n\nasync function writeIterable ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {\n  assert(contentLength !== 0 || client[kRunning] === 0, 'iterator body cannot be pipelined')\n\n  let callback = null\n  function onDrain () {\n    if (callback) {\n      const cb = callback\n      callback = null\n      cb()\n    }\n  }\n\n  const waitForDrain = () => new Promise((resolve, reject) => {\n    assert(callback === null)\n\n    if (socket[kError]) {\n      reject(socket[kError])\n    } else {\n      callback = resolve\n    }\n  })\n\n  if (client[kHTTPConnVersion] === 'h2') {\n    h2stream\n      .on('close', onDrain)\n      .on('drain', onDrain)\n\n    try {\n      // It's up to the user to somehow abort the async iterable.\n      for await (const chunk of body) {\n        if (socket[kError]) {\n          throw socket[kError]\n        }\n\n        const res = h2stream.write(chunk)\n        request.onBodySent(chunk)\n        if (!res) {\n          await waitForDrain()\n        }\n      }\n    } catch (err) {\n      h2stream.destroy(err)\n    } finally {\n      request.onRequestSent()\n      h2stream.end()\n      h2stream\n        .off('close', onDrain)\n        .off('drain', onDrain)\n    }\n\n    return\n  }\n\n  socket\n    .on('close', onDrain)\n    .on('drain', onDrain)\n\n  const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header })\n  try {\n    // It's up to the user to somehow abort the async iterable.\n    for await (const chunk of body) {\n      if (socket[kError]) {\n        throw socket[kError]\n      }\n\n      if (!writer.write(chunk)) {\n        await waitForDrain()\n      }\n    }\n\n    writer.end()\n  } catch (err) {\n    writer.destroy(err)\n  } finally {\n    socket\n      .off('close', onDrain)\n      .off('drain', onDrain)\n  }\n}\n\nclass AsyncWriter {\n  constructor ({ socket, request, contentLength, client, expectsPayload, header }) {\n    this.socket = socket\n    this.request = request\n    this.contentLength = contentLength\n    this.client = client\n    this.bytesWritten = 0\n    this.expectsPayload = expectsPayload\n    this.header = header\n\n    socket[kWriting] = true\n  }\n\n  write (chunk) {\n    const { socket, request, contentLength, client, bytesWritten, expectsPayload, header } = this\n\n    if (socket[kError]) {\n      throw socket[kError]\n    }\n\n    if (socket.destroyed) {\n      return false\n    }\n\n    const len = Buffer.byteLength(chunk)\n    if (!len) {\n      return true\n    }\n\n    // We should defer writing chunks.\n    if (contentLength !== null && bytesWritten + len > contentLength) {\n      if (client[kStrictContentLength]) {\n        throw new RequestContentLengthMismatchError()\n      }\n\n      process.emitWarning(new RequestContentLengthMismatchError())\n    }\n\n    socket.cork()\n\n    if (bytesWritten === 0) {\n      if (!expectsPayload) {\n        socket[kReset] = true\n      }\n\n      if (contentLength === null) {\n        socket.write(`${header}transfer-encoding: chunked\\r\\n`, 'latin1')\n      } else {\n        socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n      }\n    }\n\n    if (contentLength === null) {\n      socket.write(`\\r\\n${len.toString(16)}\\r\\n`, 'latin1')\n    }\n\n    this.bytesWritten += len\n\n    const ret = socket.write(chunk)\n\n    socket.uncork()\n\n    request.onBodySent(chunk)\n\n    if (!ret) {\n      if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n        // istanbul ignore else: only for jest\n        if (socket[kParser].timeout.refresh) {\n          socket[kParser].timeout.refresh()\n        }\n      }\n    }\n\n    return ret\n  }\n\n  end () {\n    const { socket, contentLength, client, bytesWritten, expectsPayload, header, request } = this\n    request.onRequestSent()\n\n    socket[kWriting] = false\n\n    if (socket[kError]) {\n      throw socket[kError]\n    }\n\n    if (socket.destroyed) {\n      return\n    }\n\n    if (bytesWritten === 0) {\n      if (expectsPayload) {\n        // https://tools.ietf.org/html/rfc7230#section-3.3.2\n        // A user agent SHOULD send a Content-Length in a request message when\n        // no Transfer-Encoding is sent and the request method defines a meaning\n        // for an enclosed payload body.\n\n        socket.write(`${header}content-length: 0\\r\\n\\r\\n`, 'latin1')\n      } else {\n        socket.write(`${header}\\r\\n`, 'latin1')\n      }\n    } else if (contentLength === null) {\n      socket.write('\\r\\n0\\r\\n\\r\\n', 'latin1')\n    }\n\n    if (contentLength !== null && bytesWritten !== contentLength) {\n      if (client[kStrictContentLength]) {\n        throw new RequestContentLengthMismatchError()\n      } else {\n        process.emitWarning(new RequestContentLengthMismatchError())\n      }\n    }\n\n    if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n      // istanbul ignore else: only for jest\n      if (socket[kParser].timeout.refresh) {\n        socket[kParser].timeout.refresh()\n      }\n    }\n\n    resume(client)\n  }\n\n  destroy (err) {\n    const { socket, client } = this\n\n    socket[kWriting] = false\n\n    if (err) {\n      assert(client[kRunning] <= 1, 'pipeline should only contain this request')\n      util.destroy(socket, err)\n    }\n  }\n}\n\nfunction errorRequest (client, request, err) {\n  try {\n    request.onError(err)\n    assert(request.aborted)\n  } catch (err) {\n    client.emit('error', err)\n  }\n}\n\nmodule.exports = Client\n","/* eslint-disable */\n\n'use strict'\n\n// Extracted from node/lib/internal/fixed_queue.js\n\n// Currently optimal queue size, tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or, if there is only one circular buffer, it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one, removing means\n// moving `bottom` forward by one. After reaching the end, the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = new Array(kSize);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue, sets the old queue's `.next` to it,\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue, it forms the new tail.\n      this.tail = tail.next;\n    }\n    return next;\n  }\n};\n","const { kFree, kConnected, kPending, kQueued, kRunning, kSize } = require('./core/symbols')\nconst kPool = Symbol('pool')\n\nclass PoolStats {\n  constructor (pool) {\n    this[kPool] = pool\n  }\n\n  get connected () {\n    return this[kPool][kConnected]\n  }\n\n  get free () {\n    return this[kPool][kFree]\n  }\n\n  get pending () {\n    return this[kPool][kPending]\n  }\n\n  get queued () {\n    return this[kPool][kQueued]\n  }\n\n  get running () {\n    return this[kPool][kRunning]\n  }\n\n  get size () {\n    return this[kPool][kSize]\n  }\n}\n\nmodule.exports = PoolStats\n","'use strict'\n\nconst DispatcherBase = require('./dispatcher-base')\nconst FixedQueue = require('./node/fixed-queue')\nconst { kConnected, kSize, kRunning, kPending, kQueued, kBusy, kFree, kUrl, kClose, kDestroy, kDispatch } = require('./core/symbols')\nconst PoolStats = require('./pool-stats')\n\nconst kClients = Symbol('clients')\nconst kNeedDrain = Symbol('needDrain')\nconst kQueue = Symbol('queue')\nconst kClosedResolve = Symbol('closed resolve')\nconst kOnDrain = Symbol('onDrain')\nconst kOnConnect = Symbol('onConnect')\nconst kOnDisconnect = Symbol('onDisconnect')\nconst kOnConnectionError = Symbol('onConnectionError')\nconst kGetDispatcher = Symbol('get dispatcher')\nconst kAddClient = Symbol('add client')\nconst kRemoveClient = Symbol('remove client')\nconst kStats = Symbol('stats')\n\nclass PoolBase extends DispatcherBase {\n  constructor () {\n    super()\n\n    this[kQueue] = new FixedQueue()\n    this[kClients] = []\n    this[kQueued] = 0\n\n    const pool = this\n\n    this[kOnDrain] = function onDrain (origin, targets) {\n      const queue = pool[kQueue]\n\n      let needDrain = false\n\n      while (!needDrain) {\n        const item = queue.shift()\n        if (!item) {\n          break\n        }\n        pool[kQueued]--\n        needDrain = !this.dispatch(item.opts, item.handler)\n      }\n\n      this[kNeedDrain] = needDrain\n\n      if (!this[kNeedDrain] && pool[kNeedDrain]) {\n        pool[kNeedDrain] = false\n        pool.emit('drain', origin, [pool, ...targets])\n      }\n\n      if (pool[kClosedResolve] && queue.isEmpty()) {\n        Promise\n          .all(pool[kClients].map(c => c.close()))\n          .then(pool[kClosedResolve])\n      }\n    }\n\n    this[kOnConnect] = (origin, targets) => {\n      pool.emit('connect', origin, [pool, ...targets])\n    }\n\n    this[kOnDisconnect] = (origin, targets, err) => {\n      pool.emit('disconnect', origin, [pool, ...targets], err)\n    }\n\n    this[kOnConnectionError] = (origin, targets, err) => {\n      pool.emit('connectionError', origin, [pool, ...targets], err)\n    }\n\n    this[kStats] = new PoolStats(this)\n  }\n\n  get [kBusy] () {\n    return this[kNeedDrain]\n  }\n\n  get [kConnected] () {\n    return this[kClients].filter(client => client[kConnected]).length\n  }\n\n  get [kFree] () {\n    return this[kClients].filter(client => client[kConnected] && !client[kNeedDrain]).length\n  }\n\n  get [kPending] () {\n    let ret = this[kQueued]\n    for (const { [kPending]: pending } of this[kClients]) {\n      ret += pending\n    }\n    return ret\n  }\n\n  get [kRunning] () {\n    let ret = 0\n    for (const { [kRunning]: running } of this[kClients]) {\n      ret += running\n    }\n    return ret\n  }\n\n  get [kSize] () {\n    let ret = this[kQueued]\n    for (const { [kSize]: size } of this[kClients]) {\n      ret += size\n    }\n    return ret\n  }\n\n  get stats () {\n    return this[kStats]\n  }\n\n  async [kClose] () {\n    if (this[kQueue].isEmpty()) {\n      return Promise.all(this[kClients].map(c => c.close()))\n    } else {\n      return new Promise((resolve) => {\n        this[kClosedResolve] = resolve\n      })\n    }\n  }\n\n  async [kDestroy] (err) {\n    while (true) {\n      const item = this[kQueue].shift()\n      if (!item) {\n        break\n      }\n      item.handler.onError(err)\n    }\n\n    return Promise.all(this[kClients].map(c => c.destroy(err)))\n  }\n\n  [kDispatch] (opts, handler) {\n    const dispatcher = this[kGetDispatcher]()\n\n    if (!dispatcher) {\n      this[kNeedDrain] = true\n      this[kQueue].push({ opts, handler })\n      this[kQueued]++\n    } else if (!dispatcher.dispatch(opts, handler)) {\n      dispatcher[kNeedDrain] = true\n      this[kNeedDrain] = !this[kGetDispatcher]()\n    }\n\n    return !this[kNeedDrain]\n  }\n\n  [kAddClient] (client) {\n    client\n      .on('drain', this[kOnDrain])\n      .on('connect', this[kOnConnect])\n      .on('disconnect', this[kOnDisconnect])\n      .on('connectionError', this[kOnConnectionError])\n\n    this[kClients].push(client)\n\n    if (this[kNeedDrain]) {\n      process.nextTick(() => {\n        if (this[kNeedDrain]) {\n          this[kOnDrain](client[kUrl], [this, client])\n        }\n      })\n    }\n\n    return this\n  }\n\n  [kRemoveClient] (client) {\n    client.close(() => {\n      const idx = this[kClients].indexOf(client)\n      if (idx !== -1) {\n        this[kClients].splice(idx, 1)\n      }\n    })\n\n    this[kNeedDrain] = this[kClients].some(dispatcher => (\n      !dispatcher[kNeedDrain] &&\n      dispatcher.closed !== true &&\n      dispatcher.destroyed !== true\n    ))\n  }\n}\n\nmodule.exports = {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kRemoveClient,\n  kGetDispatcher\n}\n","'use strict'\n\nconst {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kGetDispatcher\n} = require('./pool-base')\nconst Client = require('./client')\nconst {\n  InvalidArgumentError\n} = require('./core/errors')\nconst util = require('./core/util')\nconst { kUrl, kInterceptors } = require('./core/symbols')\nconst buildConnector = require('./core/connect')\n\nconst kOptions = Symbol('options')\nconst kConnections = Symbol('connections')\nconst kFactory = Symbol('factory')\n\nfunction defaultFactory (origin, opts) {\n  return new Client(origin, opts)\n}\n\nclass Pool extends PoolBase {\n  constructor (origin, {\n    connections,\n    factory = defaultFactory,\n    connect,\n    connectTimeout,\n    tls,\n    maxCachedSessions,\n    socketPath,\n    autoSelectFamily,\n    autoSelectFamilyAttemptTimeout,\n    allowH2,\n    ...options\n  } = {}) {\n    super()\n\n    if (connections != null && (!Number.isFinite(connections) || connections < 0)) {\n      throw new InvalidArgumentError('invalid connections')\n    }\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (typeof connect !== 'function') {\n      connect = buildConnector({\n        ...tls,\n        maxCachedSessions,\n        allowH2,\n        socketPath,\n        timeout: connectTimeout,\n        ...(util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),\n        ...connect\n      })\n    }\n\n    this[kInterceptors] = options.interceptors && options.interceptors.Pool && Array.isArray(options.interceptors.Pool)\n      ? options.interceptors.Pool\n      : []\n    this[kConnections] = connections || null\n    this[kUrl] = util.parseOrigin(origin)\n    this[kOptions] = { ...util.deepClone(options), connect, allowH2 }\n    this[kOptions].interceptors = options.interceptors\n      ? { ...options.interceptors }\n      : undefined\n    this[kFactory] = factory\n  }\n\n  [kGetDispatcher] () {\n    let dispatcher = this[kClients].find(dispatcher => !dispatcher[kNeedDrain])\n\n    if (dispatcher) {\n      return dispatcher\n    }\n\n    if (!this[kConnections] || this[kClients].length < this[kConnections]) {\n      dispatcher = this[kFactory](this[kUrl], this[kOptions])\n      this[kAddClient](dispatcher)\n    }\n\n    return dispatcher\n  }\n}\n\nmodule.exports = Pool\n","'use strict'\n\nconst {\n  BalancedPoolMissingUpstreamError,\n  InvalidArgumentError\n} = require('./core/errors')\nconst {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kRemoveClient,\n  kGetDispatcher\n} = require('./pool-base')\nconst Pool = require('./pool')\nconst { kUrl, kInterceptors } = require('./core/symbols')\nconst { parseOrigin } = require('./core/util')\nconst kFactory = Symbol('factory')\n\nconst kOptions = Symbol('options')\nconst kGreatestCommonDivisor = Symbol('kGreatestCommonDivisor')\nconst kCurrentWeight = Symbol('kCurrentWeight')\nconst kIndex = Symbol('kIndex')\nconst kWeight = Symbol('kWeight')\nconst kMaxWeightPerServer = Symbol('kMaxWeightPerServer')\nconst kErrorPenalty = Symbol('kErrorPenalty')\n\nfunction getGreatestCommonDivisor (a, b) {\n  if (b === 0) return a\n  return getGreatestCommonDivisor(b, a % b)\n}\n\nfunction defaultFactory (origin, opts) {\n  return new Pool(origin, opts)\n}\n\nclass BalancedPool extends PoolBase {\n  constructor (upstreams = [], { factory = defaultFactory, ...opts } = {}) {\n    super()\n\n    this[kOptions] = opts\n    this[kIndex] = -1\n    this[kCurrentWeight] = 0\n\n    this[kMaxWeightPerServer] = this[kOptions].maxWeightPerServer || 100\n    this[kErrorPenalty] = this[kOptions].errorPenalty || 15\n\n    if (!Array.isArray(upstreams)) {\n      upstreams = [upstreams]\n    }\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    this[kInterceptors] = opts.interceptors && opts.interceptors.BalancedPool && Array.isArray(opts.interceptors.BalancedPool)\n      ? opts.interceptors.BalancedPool\n      : []\n    this[kFactory] = factory\n\n    for (const upstream of upstreams) {\n      this.addUpstream(upstream)\n    }\n    this._updateBalancedPoolStats()\n  }\n\n  addUpstream (upstream) {\n    const upstreamOrigin = parseOrigin(upstream).origin\n\n    if (this[kClients].find((pool) => (\n      pool[kUrl].origin === upstreamOrigin &&\n      pool.closed !== true &&\n      pool.destroyed !== true\n    ))) {\n      return this\n    }\n    const pool = this[kFactory](upstreamOrigin, Object.assign({}, this[kOptions]))\n\n    this[kAddClient](pool)\n    pool.on('connect', () => {\n      pool[kWeight] = Math.min(this[kMaxWeightPerServer], pool[kWeight] + this[kErrorPenalty])\n    })\n\n    pool.on('connectionError', () => {\n      pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])\n      this._updateBalancedPoolStats()\n    })\n\n    pool.on('disconnect', (...args) => {\n      const err = args[2]\n      if (err && err.code === 'UND_ERR_SOCKET') {\n        // decrease the weight of the pool.\n        pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])\n        this._updateBalancedPoolStats()\n      }\n    })\n\n    for (const client of this[kClients]) {\n      client[kWeight] = this[kMaxWeightPerServer]\n    }\n\n    this._updateBalancedPoolStats()\n\n    return this\n  }\n\n  _updateBalancedPoolStats () {\n    this[kGreatestCommonDivisor] = this[kClients].map(p => p[kWeight]).reduce(getGreatestCommonDivisor, 0)\n  }\n\n  removeUpstream (upstream) {\n    const upstreamOrigin = parseOrigin(upstream).origin\n\n    const pool = this[kClients].find((pool) => (\n      pool[kUrl].origin === upstreamOrigin &&\n      pool.closed !== true &&\n      pool.destroyed !== true\n    ))\n\n    if (pool) {\n      this[kRemoveClient](pool)\n    }\n\n    return this\n  }\n\n  get upstreams () {\n    return this[kClients]\n      .filter(dispatcher => dispatcher.closed !== true && dispatcher.destroyed !== true)\n      .map((p) => p[kUrl].origin)\n  }\n\n  [kGetDispatcher] () {\n    // We validate that pools is greater than 0,\n    // otherwise we would have to wait until an upstream\n    // is added, which might never happen.\n    if (this[kClients].length === 0) {\n      throw new BalancedPoolMissingUpstreamError()\n    }\n\n    const dispatcher = this[kClients].find(dispatcher => (\n      !dispatcher[kNeedDrain] &&\n      dispatcher.closed !== true &&\n      dispatcher.destroyed !== true\n    ))\n\n    if (!dispatcher) {\n      return\n    }\n\n    const allClientsBusy = this[kClients].map(pool => pool[kNeedDrain]).reduce((a, b) => a && b, true)\n\n    if (allClientsBusy) {\n      return\n    }\n\n    let counter = 0\n\n    let maxWeightIndex = this[kClients].findIndex(pool => !pool[kNeedDrain])\n\n    while (counter++ < this[kClients].length) {\n      this[kIndex] = (this[kIndex] + 1) % this[kClients].length\n      const pool = this[kClients][this[kIndex]]\n\n      // find pool index with the largest weight\n      if (pool[kWeight] > this[kClients][maxWeightIndex][kWeight] && !pool[kNeedDrain]) {\n        maxWeightIndex = this[kIndex]\n      }\n\n      // decrease the current weight every `this[kClients].length`.\n      if (this[kIndex] === 0) {\n        // Set the current weight to the next lower weight.\n        this[kCurrentWeight] = this[kCurrentWeight] - this[kGreatestCommonDivisor]\n\n        if (this[kCurrentWeight] <= 0) {\n          this[kCurrentWeight] = this[kMaxWeightPerServer]\n        }\n      }\n      if (pool[kWeight] >= this[kCurrentWeight] && (!pool[kNeedDrain])) {\n        return pool\n      }\n    }\n\n    this[kCurrentWeight] = this[kClients][maxWeightIndex][kWeight]\n    this[kIndex] = maxWeightIndex\n    return this[kClients][maxWeightIndex]\n  }\n}\n\nmodule.exports = BalancedPool\n","'use strict'\n\n/* istanbul ignore file: only for Node 12 */\n\nconst { kConnected, kSize } = require('../core/symbols')\n\nclass CompatWeakRef {\n  constructor (value) {\n    this.value = value\n  }\n\n  deref () {\n    return this.value[kConnected] === 0 && this.value[kSize] === 0\n      ? undefined\n      : this.value\n  }\n}\n\nclass CompatFinalizer {\n  constructor (finalizer) {\n    this.finalizer = finalizer\n  }\n\n  register (dispatcher, key) {\n    if (dispatcher.on) {\n      dispatcher.on('disconnect', () => {\n        if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n          this.finalizer(key)\n        }\n      })\n    }\n  }\n}\n\nmodule.exports = function () {\n  // FIXME: remove workaround when the Node bug is fixed\n  // https://github.com/nodejs/node/issues/49344#issuecomment-1741776308\n  if (process.env.NODE_V8_COVERAGE) {\n    return {\n      WeakRef: CompatWeakRef,\n      FinalizationRegistry: CompatFinalizer\n    }\n  }\n  return {\n    WeakRef: global.WeakRef || CompatWeakRef,\n    FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer\n  }\n}\n","'use strict'\n\nconst { InvalidArgumentError } = require('./core/errors')\nconst { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = require('./core/symbols')\nconst DispatcherBase = require('./dispatcher-base')\nconst Pool = require('./pool')\nconst Client = require('./client')\nconst util = require('./core/util')\nconst createRedirectInterceptor = require('./interceptor/redirectInterceptor')\nconst { WeakRef, FinalizationRegistry } = require('./compat/dispatcher-weakref')()\n\nconst kOnConnect = Symbol('onConnect')\nconst kOnDisconnect = Symbol('onDisconnect')\nconst kOnConnectionError = Symbol('onConnectionError')\nconst kMaxRedirections = Symbol('maxRedirections')\nconst kOnDrain = Symbol('onDrain')\nconst kFactory = Symbol('factory')\nconst kFinalizer = Symbol('finalizer')\nconst kOptions = Symbol('options')\n\nfunction defaultFactory (origin, opts) {\n  return opts && opts.connections === 1\n    ? new Client(origin, opts)\n    : new Pool(origin, opts)\n}\n\nclass Agent extends DispatcherBase {\n  constructor ({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {\n    super()\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    if (connect && typeof connect !== 'function') {\n      connect = { ...connect }\n    }\n\n    this[kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent)\n      ? options.interceptors.Agent\n      : [createRedirectInterceptor({ maxRedirections })]\n\n    this[kOptions] = { ...util.deepClone(options), connect }\n    this[kOptions].interceptors = options.interceptors\n      ? { ...options.interceptors }\n      : undefined\n    this[kMaxRedirections] = maxRedirections\n    this[kFactory] = factory\n    this[kClients] = new Map()\n    this[kFinalizer] = new FinalizationRegistry(/* istanbul ignore next: gc is undeterministic */ key => {\n      const ref = this[kClients].get(key)\n      if (ref !== undefined && ref.deref() === undefined) {\n        this[kClients].delete(key)\n      }\n    })\n\n    const agent = this\n\n    this[kOnDrain] = (origin, targets) => {\n      agent.emit('drain', origin, [agent, ...targets])\n    }\n\n    this[kOnConnect] = (origin, targets) => {\n      agent.emit('connect', origin, [agent, ...targets])\n    }\n\n    this[kOnDisconnect] = (origin, targets, err) => {\n      agent.emit('disconnect', origin, [agent, ...targets], err)\n    }\n\n    this[kOnConnectionError] = (origin, targets, err) => {\n      agent.emit('connectionError', origin, [agent, ...targets], err)\n    }\n  }\n\n  get [kRunning] () {\n    let ret = 0\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore next: gc is undeterministic */\n      if (client) {\n        ret += client[kRunning]\n      }\n    }\n    return ret\n  }\n\n  [kDispatch] (opts, handler) {\n    let key\n    if (opts.origin && (typeof opts.origin === 'string' || opts.origin instanceof URL)) {\n      key = String(opts.origin)\n    } else {\n      throw new InvalidArgumentError('opts.origin must be a non-empty string or URL.')\n    }\n\n    const ref = this[kClients].get(key)\n\n    let dispatcher = ref ? ref.deref() : null\n    if (!dispatcher) {\n      dispatcher = this[kFactory](opts.origin, this[kOptions])\n        .on('drain', this[kOnDrain])\n        .on('connect', this[kOnConnect])\n        .on('disconnect', this[kOnDisconnect])\n        .on('connectionError', this[kOnConnectionError])\n\n      this[kClients].set(key, new WeakRef(dispatcher))\n      this[kFinalizer].register(dispatcher, key)\n    }\n\n    return dispatcher.dispatch(opts, handler)\n  }\n\n  async [kClose] () {\n    const closePromises = []\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore else: gc is undeterministic */\n      if (client) {\n        closePromises.push(client.close())\n      }\n    }\n\n    await Promise.all(closePromises)\n  }\n\n  async [kDestroy] (err) {\n    const destroyPromises = []\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore else: gc is undeterministic */\n      if (client) {\n        destroyPromises.push(client.destroy(err))\n      }\n    }\n\n    await Promise.all(destroyPromises)\n  }\n}\n\nmodule.exports = Agent\n","// Ported from https://github.com/nodejs/undici/pull/907\n\n'use strict'\n\nconst assert = require('assert')\nconst { Readable } = require('stream')\nconst { RequestAbortedError, NotSupportedError, InvalidArgumentError } = require('../core/errors')\nconst util = require('../core/util')\nconst { ReadableStreamFrom, toUSVString } = require('../core/util')\n\nlet Blob\n\nconst kConsume = Symbol('kConsume')\nconst kReading = Symbol('kReading')\nconst kBody = Symbol('kBody')\nconst kAbort = Symbol('abort')\nconst kContentType = Symbol('kContentType')\n\nmodule.exports = class BodyReadable extends Readable {\n  constructor ({\n    resume,\n    abort,\n    contentType = '',\n    highWaterMark = 64 * 1024 // Same as nodejs fs streams.\n  }) {\n    super({\n      autoDestroy: true,\n      read: resume,\n      highWaterMark\n    })\n\n    this._readableState.dataEmitted = false\n\n    this[kAbort] = abort\n    this[kConsume] = null\n    this[kBody] = null\n    this[kContentType] = contentType\n\n    // Is stream being consumed through Readable API?\n    // This is an optimization so that we avoid checking\n    // for 'data' and 'readable' listeners in the hot path\n    // inside push().\n    this[kReading] = false\n  }\n\n  destroy (err) {\n    if (this.destroyed) {\n      // Node < 16\n      return this\n    }\n\n    if (!err && !this._readableState.endEmitted) {\n      err = new RequestAbortedError()\n    }\n\n    if (err) {\n      this[kAbort]()\n    }\n\n    return super.destroy(err)\n  }\n\n  emit (ev, ...args) {\n    if (ev === 'data') {\n      // Node < 16.7\n      this._readableState.dataEmitted = true\n    } else if (ev === 'error') {\n      // Node < 16\n      this._readableState.errorEmitted = true\n    }\n    return super.emit(ev, ...args)\n  }\n\n  on (ev, ...args) {\n    if (ev === 'data' || ev === 'readable') {\n      this[kReading] = true\n    }\n    return super.on(ev, ...args)\n  }\n\n  addListener (ev, ...args) {\n    return this.on(ev, ...args)\n  }\n\n  off (ev, ...args) {\n    const ret = super.off(ev, ...args)\n    if (ev === 'data' || ev === 'readable') {\n      this[kReading] = (\n        this.listenerCount('data') > 0 ||\n        this.listenerCount('readable') > 0\n      )\n    }\n    return ret\n  }\n\n  removeListener (ev, ...args) {\n    return this.off(ev, ...args)\n  }\n\n  push (chunk) {\n    if (this[kConsume] && chunk !== null && this.readableLength === 0) {\n      consumePush(this[kConsume], chunk)\n      return this[kReading] ? super.push(chunk) : true\n    }\n    return super.push(chunk)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-text\n  async text () {\n    return consume(this, 'text')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-json\n  async json () {\n    return consume(this, 'json')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-blob\n  async blob () {\n    return consume(this, 'blob')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-arraybuffer\n  async arrayBuffer () {\n    return consume(this, 'arrayBuffer')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-formdata\n  async formData () {\n    // TODO: Implement.\n    throw new NotSupportedError()\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-bodyused\n  get bodyUsed () {\n    return util.isDisturbed(this)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-body\n  get body () {\n    if (!this[kBody]) {\n      this[kBody] = ReadableStreamFrom(this)\n      if (this[kConsume]) {\n        // TODO: Is this the best way to force a lock?\n        this[kBody].getReader() // Ensure stream is locked.\n        assert(this[kBody].locked)\n      }\n    }\n    return this[kBody]\n  }\n\n  async dump (opts) {\n    let limit = opts && Number.isFinite(opts.limit) ? opts.limit : 262144\n    const signal = opts && opts.signal\n    const abortFn = () => {\n      this.destroy()\n    }\n    let signalListenerCleanup\n    if (signal) {\n      if (typeof signal !== 'object' || !('aborted' in signal)) {\n        throw new InvalidArgumentError('signal must be an AbortSignal')\n      }\n      util.throwIfAborted(signal)\n      signalListenerCleanup = util.addAbortListener(signal, abortFn)\n    }\n    try {\n      for await (const chunk of this) {\n        util.throwIfAborted(signal)\n        limit -= Buffer.byteLength(chunk)\n        if (limit < 0) {\n          return\n        }\n      }\n    } catch {\n      util.throwIfAborted(signal)\n    } finally {\n      if (typeof signalListenerCleanup === 'function') {\n        signalListenerCleanup()\n      } else if (signalListenerCleanup) {\n        signalListenerCleanup[Symbol.dispose]()\n      }\n    }\n  }\n}\n\n// https://streams.spec.whatwg.org/#readablestream-locked\nfunction isLocked (self) {\n  // Consume is an implicit lock.\n  return (self[kBody] && self[kBody].locked === true) || self[kConsume]\n}\n\n// https://fetch.spec.whatwg.org/#body-unusable\nfunction isUnusable (self) {\n  return util.isDisturbed(self) || isLocked(self)\n}\n\nasync function consume (stream, type) {\n  if (isUnusable(stream)) {\n    throw new TypeError('unusable')\n  }\n\n  assert(!stream[kConsume])\n\n  return new Promise((resolve, reject) => {\n    stream[kConsume] = {\n      type,\n      stream,\n      resolve,\n      reject,\n      length: 0,\n      body: []\n    }\n\n    stream\n      .on('error', function (err) {\n        consumeFinish(this[kConsume], err)\n      })\n      .on('close', function () {\n        if (this[kConsume].body !== null) {\n          consumeFinish(this[kConsume], new RequestAbortedError())\n        }\n      })\n\n    process.nextTick(consumeStart, stream[kConsume])\n  })\n}\n\nfunction consumeStart (consume) {\n  if (consume.body === null) {\n    return\n  }\n\n  const { _readableState: state } = consume.stream\n\n  for (const chunk of state.buffer) {\n    consumePush(consume, chunk)\n  }\n\n  if (state.endEmitted) {\n    consumeEnd(this[kConsume])\n  } else {\n    consume.stream.on('end', function () {\n      consumeEnd(this[kConsume])\n    })\n  }\n\n  consume.stream.resume()\n\n  while (consume.stream.read() != null) {\n    // Loop\n  }\n}\n\nfunction consumeEnd (consume) {\n  const { type, body, resolve, stream, length } = consume\n\n  try {\n    if (type === 'text') {\n      resolve(toUSVString(Buffer.concat(body)))\n    } else if (type === 'json') {\n      resolve(JSON.parse(Buffer.concat(body)))\n    } else if (type === 'arrayBuffer') {\n      const dst = new Uint8Array(length)\n\n      let pos = 0\n      for (const buf of body) {\n        dst.set(buf, pos)\n        pos += buf.byteLength\n      }\n\n      resolve(dst.buffer)\n    } else if (type === 'blob') {\n      if (!Blob) {\n        Blob = require('buffer').Blob\n      }\n      resolve(new Blob(body, { type: stream[kContentType] }))\n    }\n\n    consumeFinish(consume)\n  } catch (err) {\n    stream.destroy(err)\n  }\n}\n\nfunction consumePush (consume, chunk) {\n  consume.length += chunk.length\n  consume.body.push(chunk)\n}\n\nfunction consumeFinish (consume, err) {\n  if (consume.body === null) {\n    return\n  }\n\n  if (err) {\n    consume.reject(err)\n  } else {\n    consume.resolve()\n  }\n\n  consume.type = null\n  consume.stream = null\n  consume.resolve = null\n  consume.reject = null\n  consume.length = 0\n  consume.body = null\n}\n","const assert = require('assert')\nconst {\n  ResponseStatusCodeError\n} = require('../core/errors')\nconst { toUSVString } = require('../core/util')\n\nasync function getResolveErrorBodyCallback ({ callback, body, contentType, statusCode, statusMessage, headers }) {\n  assert(body)\n\n  let chunks = []\n  let limit = 0\n\n  for await (const chunk of body) {\n    chunks.push(chunk)\n    limit += chunk.length\n    if (limit > 128 * 1024) {\n      chunks = null\n      break\n    }\n  }\n\n  if (statusCode === 204 || !contentType || !chunks) {\n    process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers))\n    return\n  }\n\n  try {\n    if (contentType.startsWith('application/json')) {\n      const payload = JSON.parse(toUSVString(Buffer.concat(chunks)))\n      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers, payload))\n      return\n    }\n\n    if (contentType.startsWith('text/')) {\n      const payload = toUSVString(Buffer.concat(chunks))\n      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers, payload))\n      return\n    }\n  } catch (err) {\n    // Process in a fallback if error\n  }\n\n  process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers))\n}\n\nmodule.exports = { getResolveErrorBodyCallback }\n","const { addAbortListener } = require('../core/util')\nconst { RequestAbortedError } = require('../core/errors')\n\nconst kListener = Symbol('kListener')\nconst kSignal = Symbol('kSignal')\n\nfunction abort (self) {\n  if (self.abort) {\n    self.abort()\n  } else {\n    self.onError(new RequestAbortedError())\n  }\n}\n\nfunction addSignal (self, signal) {\n  self[kSignal] = null\n  self[kListener] = null\n\n  if (!signal) {\n    return\n  }\n\n  if (signal.aborted) {\n    abort(self)\n    return\n  }\n\n  self[kSignal] = signal\n  self[kListener] = () => {\n    abort(self)\n  }\n\n  addAbortListener(self[kSignal], self[kListener])\n}\n\nfunction removeSignal (self) {\n  if (!self[kSignal]) {\n    return\n  }\n\n  if ('removeEventListener' in self[kSignal]) {\n    self[kSignal].removeEventListener('abort', self[kListener])\n  } else {\n    self[kSignal].removeListener('abort', self[kListener])\n  }\n\n  self[kSignal] = null\n  self[kListener] = null\n}\n\nmodule.exports = {\n  addSignal,\n  removeSignal\n}\n","'use strict'\n\nconst Readable = require('./readable')\nconst {\n  InvalidArgumentError,\n  RequestAbortedError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { getResolveErrorBodyCallback } = require('./util')\nconst { AsyncResource } = require('async_hooks')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass RequestHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError, highWaterMark } = opts\n\n    try {\n      if (typeof callback !== 'function') {\n        throw new InvalidArgumentError('invalid callback')\n      }\n\n      if (highWaterMark && (typeof highWaterMark !== 'number' || highWaterMark < 0)) {\n        throw new InvalidArgumentError('invalid highWaterMark')\n      }\n\n      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n      }\n\n      if (method === 'CONNECT') {\n        throw new InvalidArgumentError('invalid method')\n      }\n\n      if (onInfo && typeof onInfo !== 'function') {\n        throw new InvalidArgumentError('invalid onInfo callback')\n      }\n\n      super('UNDICI_REQUEST')\n    } catch (err) {\n      if (util.isStream(body)) {\n        util.destroy(body.on('error', util.nop), err)\n      }\n      throw err\n    }\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.callback = callback\n    this.res = null\n    this.abort = null\n    this.body = body\n    this.trailers = {}\n    this.context = null\n    this.onInfo = onInfo || null\n    this.throwOnError = throwOnError\n    this.highWaterMark = highWaterMark\n\n    if (util.isStream(body)) {\n      body.on('error', (err) => {\n        this.onError(err)\n      })\n    }\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const { callback, opaque, abort, context, responseHeaders, highWaterMark } = this\n\n    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers\n    const contentType = parsedHeaders['content-type']\n    const body = new Readable({ resume, abort, contentType, highWaterMark })\n\n    this.callback = null\n    this.res = body\n    if (callback !== null) {\n      if (this.throwOnError && statusCode >= 400) {\n        this.runInAsyncScope(getResolveErrorBodyCallback, null,\n          { callback, body, contentType, statusCode, statusMessage, headers }\n        )\n      } else {\n        this.runInAsyncScope(callback, null, null, {\n          statusCode,\n          headers,\n          trailers: this.trailers,\n          opaque,\n          body,\n          context\n        })\n      }\n    }\n  }\n\n  onData (chunk) {\n    const { res } = this\n    return res.push(chunk)\n  }\n\n  onComplete (trailers) {\n    const { res } = this\n\n    removeSignal(this)\n\n    util.parseHeaders(trailers, this.trailers)\n\n    res.push(null)\n  }\n\n  onError (err) {\n    const { res, callback, body, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      // TODO: Does this need queueMicrotask?\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n\n    if (res) {\n      this.res = null\n      // Ensure all queued handlers are invoked before destroying res.\n      queueMicrotask(() => {\n        util.destroy(res, err)\n      })\n    }\n\n    if (body) {\n      this.body = null\n      util.destroy(body, err)\n    }\n  }\n}\n\nfunction request (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      request.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    this.dispatch(opts, new RequestHandler(opts, callback))\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = request\n","'use strict'\n\nconst { finished, PassThrough } = require('stream')\nconst {\n  InvalidArgumentError,\n  InvalidReturnValueError,\n  RequestAbortedError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { getResolveErrorBodyCallback } = require('./util')\nconst { AsyncResource } = require('async_hooks')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass StreamHandler extends AsyncResource {\n  constructor (opts, factory, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError } = opts\n\n    try {\n      if (typeof callback !== 'function') {\n        throw new InvalidArgumentError('invalid callback')\n      }\n\n      if (typeof factory !== 'function') {\n        throw new InvalidArgumentError('invalid factory')\n      }\n\n      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n      }\n\n      if (method === 'CONNECT') {\n        throw new InvalidArgumentError('invalid method')\n      }\n\n      if (onInfo && typeof onInfo !== 'function') {\n        throw new InvalidArgumentError('invalid onInfo callback')\n      }\n\n      super('UNDICI_STREAM')\n    } catch (err) {\n      if (util.isStream(body)) {\n        util.destroy(body.on('error', util.nop), err)\n      }\n      throw err\n    }\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.factory = factory\n    this.callback = callback\n    this.res = null\n    this.abort = null\n    this.context = null\n    this.trailers = null\n    this.body = body\n    this.onInfo = onInfo || null\n    this.throwOnError = throwOnError || false\n\n    if (util.isStream(body)) {\n      body.on('error', (err) => {\n        this.onError(err)\n      })\n    }\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const { factory, opaque, context, callback, responseHeaders } = this\n\n    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    this.factory = null\n\n    let res\n\n    if (this.throwOnError && statusCode >= 400) {\n      const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers\n      const contentType = parsedHeaders['content-type']\n      res = new PassThrough()\n\n      this.callback = null\n      this.runInAsyncScope(getResolveErrorBodyCallback, null,\n        { callback, body: res, contentType, statusCode, statusMessage, headers }\n      )\n    } else {\n      if (factory === null) {\n        return\n      }\n\n      res = this.runInAsyncScope(factory, null, {\n        statusCode,\n        headers,\n        opaque,\n        context\n      })\n\n      if (\n        !res ||\n        typeof res.write !== 'function' ||\n        typeof res.end !== 'function' ||\n        typeof res.on !== 'function'\n      ) {\n        throw new InvalidReturnValueError('expected Writable')\n      }\n\n      // TODO: Avoid finished. It registers an unnecessary amount of listeners.\n      finished(res, { readable: false }, (err) => {\n        const { callback, res, opaque, trailers, abort } = this\n\n        this.res = null\n        if (err || !res.readable) {\n          util.destroy(res, err)\n        }\n\n        this.callback = null\n        this.runInAsyncScope(callback, null, err || null, { opaque, trailers })\n\n        if (err) {\n          abort()\n        }\n      })\n    }\n\n    res.on('drain', resume)\n\n    this.res = res\n\n    const needDrain = res.writableNeedDrain !== undefined\n      ? res.writableNeedDrain\n      : res._writableState && res._writableState.needDrain\n\n    return needDrain !== true\n  }\n\n  onData (chunk) {\n    const { res } = this\n\n    return res ? res.write(chunk) : true\n  }\n\n  onComplete (trailers) {\n    const { res } = this\n\n    removeSignal(this)\n\n    if (!res) {\n      return\n    }\n\n    this.trailers = util.parseHeaders(trailers)\n\n    res.end()\n  }\n\n  onError (err) {\n    const { res, callback, opaque, body } = this\n\n    removeSignal(this)\n\n    this.factory = null\n\n    if (res) {\n      this.res = null\n      util.destroy(res, err)\n    } else if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n\n    if (body) {\n      this.body = null\n      util.destroy(body, err)\n    }\n  }\n}\n\nfunction stream (opts, factory, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      stream.call(this, opts, factory, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    this.dispatch(opts, new StreamHandler(opts, factory, callback))\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = stream\n","'use strict'\n\nconst {\n  Readable,\n  Duplex,\n  PassThrough\n} = require('stream')\nconst {\n  InvalidArgumentError,\n  InvalidReturnValueError,\n  RequestAbortedError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { AsyncResource } = require('async_hooks')\nconst { addSignal, removeSignal } = require('./abort-signal')\nconst assert = require('assert')\n\nconst kResume = Symbol('resume')\n\nclass PipelineRequest extends Readable {\n  constructor () {\n    super({ autoDestroy: true })\n\n    this[kResume] = null\n  }\n\n  _read () {\n    const { [kResume]: resume } = this\n\n    if (resume) {\n      this[kResume] = null\n      resume()\n    }\n  }\n\n  _destroy (err, callback) {\n    this._read()\n\n    callback(err)\n  }\n}\n\nclass PipelineResponse extends Readable {\n  constructor (resume) {\n    super({ autoDestroy: true })\n    this[kResume] = resume\n  }\n\n  _read () {\n    this[kResume]()\n  }\n\n  _destroy (err, callback) {\n    if (!err && !this._readableState.endEmitted) {\n      err = new RequestAbortedError()\n    }\n\n    callback(err)\n  }\n}\n\nclass PipelineHandler extends AsyncResource {\n  constructor (opts, handler) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof handler !== 'function') {\n      throw new InvalidArgumentError('invalid handler')\n    }\n\n    const { signal, method, opaque, onInfo, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    if (method === 'CONNECT') {\n      throw new InvalidArgumentError('invalid method')\n    }\n\n    if (onInfo && typeof onInfo !== 'function') {\n      throw new InvalidArgumentError('invalid onInfo callback')\n    }\n\n    super('UNDICI_PIPELINE')\n\n    this.opaque = opaque || null\n    this.responseHeaders = responseHeaders || null\n    this.handler = handler\n    this.abort = null\n    this.context = null\n    this.onInfo = onInfo || null\n\n    this.req = new PipelineRequest().on('error', util.nop)\n\n    this.ret = new Duplex({\n      readableObjectMode: opts.objectMode,\n      autoDestroy: true,\n      read: () => {\n        const { body } = this\n\n        if (body && body.resume) {\n          body.resume()\n        }\n      },\n      write: (chunk, encoding, callback) => {\n        const { req } = this\n\n        if (req.push(chunk, encoding) || req._readableState.destroyed) {\n          callback()\n        } else {\n          req[kResume] = callback\n        }\n      },\n      destroy: (err, callback) => {\n        const { body, req, res, ret, abort } = this\n\n        if (!err && !ret._readableState.endEmitted) {\n          err = new RequestAbortedError()\n        }\n\n        if (abort && err) {\n          abort()\n        }\n\n        util.destroy(body, err)\n        util.destroy(req, err)\n        util.destroy(res, err)\n\n        removeSignal(this)\n\n        callback(err)\n      }\n    }).on('prefinish', () => {\n      const { req } = this\n\n      // Node < 15 does not call _final in same tick.\n      req.push(null)\n    })\n\n    this.res = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    const { ret, res } = this\n\n    assert(!res, 'pipeline cannot be retried')\n\n    if (ret.destroyed) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume) {\n    const { opaque, handler, context } = this\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    this.res = new PipelineResponse(resume)\n\n    let body\n    try {\n      this.handler = null\n      const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n      body = this.runInAsyncScope(handler, null, {\n        statusCode,\n        headers,\n        opaque,\n        body: this.res,\n        context\n      })\n    } catch (err) {\n      this.res.on('error', util.nop)\n      throw err\n    }\n\n    if (!body || typeof body.on !== 'function') {\n      throw new InvalidReturnValueError('expected Readable')\n    }\n\n    body\n      .on('data', (chunk) => {\n        const { ret, body } = this\n\n        if (!ret.push(chunk) && body.pause) {\n          body.pause()\n        }\n      })\n      .on('error', (err) => {\n        const { ret } = this\n\n        util.destroy(ret, err)\n      })\n      .on('end', () => {\n        const { ret } = this\n\n        ret.push(null)\n      })\n      .on('close', () => {\n        const { ret } = this\n\n        if (!ret._readableState.ended) {\n          util.destroy(ret, new RequestAbortedError())\n        }\n      })\n\n    this.body = body\n  }\n\n  onData (chunk) {\n    const { res } = this\n    return res.push(chunk)\n  }\n\n  onComplete (trailers) {\n    const { res } = this\n    res.push(null)\n  }\n\n  onError (err) {\n    const { ret } = this\n    this.handler = null\n    util.destroy(ret, err)\n  }\n}\n\nfunction pipeline (opts, handler) {\n  try {\n    const pipelineHandler = new PipelineHandler(opts, handler)\n    this.dispatch({ ...opts, body: pipelineHandler.req }, pipelineHandler)\n    return pipelineHandler.ret\n  } catch (err) {\n    return new PassThrough().destroy(err)\n  }\n}\n\nmodule.exports = pipeline\n","'use strict'\n\nconst { InvalidArgumentError, RequestAbortedError, SocketError } = require('../core/errors')\nconst { AsyncResource } = require('async_hooks')\nconst util = require('../core/util')\nconst { addSignal, removeSignal } = require('./abort-signal')\nconst assert = require('assert')\n\nclass UpgradeHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    const { signal, opaque, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    super('UNDICI_UPGRADE')\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.callback = callback\n    this.abort = null\n    this.context = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = null\n  }\n\n  onHeaders () {\n    throw new SocketError('bad upgrade', null)\n  }\n\n  onUpgrade (statusCode, rawHeaders, socket) {\n    const { callback, opaque, context } = this\n\n    assert.strictEqual(statusCode, 101)\n\n    removeSignal(this)\n\n    this.callback = null\n    const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n    this.runInAsyncScope(callback, null, null, {\n      headers,\n      socket,\n      opaque,\n      context\n    })\n  }\n\n  onError (err) {\n    const { callback, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n  }\n}\n\nfunction upgrade (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      upgrade.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    const upgradeHandler = new UpgradeHandler(opts, callback)\n    this.dispatch({\n      ...opts,\n      method: opts.method || 'GET',\n      upgrade: opts.protocol || 'Websocket'\n    }, upgradeHandler)\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = upgrade\n","'use strict'\n\nconst { AsyncResource } = require('async_hooks')\nconst { InvalidArgumentError, RequestAbortedError, SocketError } = require('../core/errors')\nconst util = require('../core/util')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass ConnectHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    const { signal, opaque, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    super('UNDICI_CONNECT')\n\n    this.opaque = opaque || null\n    this.responseHeaders = responseHeaders || null\n    this.callback = callback\n    this.abort = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders () {\n    throw new SocketError('bad connect', null)\n  }\n\n  onUpgrade (statusCode, rawHeaders, socket) {\n    const { callback, opaque, context } = this\n\n    removeSignal(this)\n\n    this.callback = null\n\n    let headers = rawHeaders\n    // Indicates is an HTTP2Session\n    if (headers != null) {\n      headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n    }\n\n    this.runInAsyncScope(callback, null, null, {\n      statusCode,\n      headers,\n      socket,\n      opaque,\n      context\n    })\n  }\n\n  onError (err) {\n    const { callback, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n  }\n}\n\nfunction connect (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      connect.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    const connectHandler = new ConnectHandler(opts, callback)\n    this.dispatch({ ...opts, method: 'CONNECT' }, connectHandler)\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = connect\n","'use strict'\n\nmodule.exports.request = require('./api-request')\nmodule.exports.stream = require('./api-stream')\nmodule.exports.pipeline = require('./api-pipeline')\nmodule.exports.upgrade = require('./api-upgrade')\nmodule.exports.connect = require('./api-connect')\n","'use strict'\n\nconst { UndiciError } = require('../core/errors')\n\nclass MockNotMatchedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, MockNotMatchedError)\n    this.name = 'MockNotMatchedError'\n    this.message = message || 'The request does not match any registered mock dispatches'\n    this.code = 'UND_MOCK_ERR_MOCK_NOT_MATCHED'\n  }\n}\n\nmodule.exports = {\n  MockNotMatchedError\n}\n","'use strict'\n\nmodule.exports = {\n  kAgent: Symbol('agent'),\n  kOptions: Symbol('options'),\n  kFactory: Symbol('factory'),\n  kDispatches: Symbol('dispatches'),\n  kDispatchKey: Symbol('dispatch key'),\n  kDefaultHeaders: Symbol('default headers'),\n  kDefaultTrailers: Symbol('default trailers'),\n  kContentLength: Symbol('content length'),\n  kMockAgent: Symbol('mock agent'),\n  kMockAgentSet: Symbol('mock agent set'),\n  kMockAgentGet: Symbol('mock agent get'),\n  kMockDispatch: Symbol('mock dispatch'),\n  kClose: Symbol('close'),\n  kOriginalClose: Symbol('original agent close'),\n  kOrigin: Symbol('origin'),\n  kIsMockActive: Symbol('is mock active'),\n  kNetConnect: Symbol('net connect'),\n  kGetNetConnect: Symbol('get net connect'),\n  kConnected: Symbol('connected')\n}\n","'use strict'\n\nconst { MockNotMatchedError } = require('./mock-errors')\nconst {\n  kDispatches,\n  kMockAgent,\n  kOriginalDispatch,\n  kOrigin,\n  kGetNetConnect\n} = require('./mock-symbols')\nconst { buildURL, nop } = require('../core/util')\nconst { STATUS_CODES } = require('http')\nconst {\n  types: {\n    isPromise\n  }\n} = require('util')\n\nfunction matchValue (match, value) {\n  if (typeof match === 'string') {\n    return match === value\n  }\n  if (match instanceof RegExp) {\n    return match.test(value)\n  }\n  if (typeof match === 'function') {\n    return match(value) === true\n  }\n  return false\n}\n\nfunction lowerCaseEntries (headers) {\n  return Object.fromEntries(\n    Object.entries(headers).map(([headerName, headerValue]) => {\n      return [headerName.toLocaleLowerCase(), headerValue]\n    })\n  )\n}\n\n/**\n * @param {import('../../index').Headers|string[]|Record<string, string>} headers\n * @param {string} key\n */\nfunction getHeaderByName (headers, key) {\n  if (Array.isArray(headers)) {\n    for (let i = 0; i < headers.length; i += 2) {\n      if (headers[i].toLocaleLowerCase() === key.toLocaleLowerCase()) {\n        return headers[i + 1]\n      }\n    }\n\n    return undefined\n  } else if (typeof headers.get === 'function') {\n    return headers.get(key)\n  } else {\n    return lowerCaseEntries(headers)[key.toLocaleLowerCase()]\n  }\n}\n\n/** @param {string[]} headers */\nfunction buildHeadersFromArray (headers) { // fetch HeadersList\n  const clone = headers.slice()\n  const entries = []\n  for (let index = 0; index < clone.length; index += 2) {\n    entries.push([clone[index], clone[index + 1]])\n  }\n  return Object.fromEntries(entries)\n}\n\nfunction matchHeaders (mockDispatch, headers) {\n  if (typeof mockDispatch.headers === 'function') {\n    if (Array.isArray(headers)) { // fetch HeadersList\n      headers = buildHeadersFromArray(headers)\n    }\n    return mockDispatch.headers(headers ? lowerCaseEntries(headers) : {})\n  }\n  if (typeof mockDispatch.headers === 'undefined') {\n    return true\n  }\n  if (typeof headers !== 'object' || typeof mockDispatch.headers !== 'object') {\n    return false\n  }\n\n  for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch.headers)) {\n    const headerValue = getHeaderByName(headers, matchHeaderName)\n\n    if (!matchValue(matchHeaderValue, headerValue)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction safeUrl (path) {\n  if (typeof path !== 'string') {\n    return path\n  }\n\n  const pathSegments = path.split('?')\n\n  if (pathSegments.length !== 2) {\n    return path\n  }\n\n  const qp = new URLSearchParams(pathSegments.pop())\n  qp.sort()\n  return [...pathSegments, qp.toString()].join('?')\n}\n\nfunction matchKey (mockDispatch, { path, method, body, headers }) {\n  const pathMatch = matchValue(mockDispatch.path, path)\n  const methodMatch = matchValue(mockDispatch.method, method)\n  const bodyMatch = typeof mockDispatch.body !== 'undefined' ? matchValue(mockDispatch.body, body) : true\n  const headersMatch = matchHeaders(mockDispatch, headers)\n  return pathMatch && methodMatch && bodyMatch && headersMatch\n}\n\nfunction getResponseData (data) {\n  if (Buffer.isBuffer(data)) {\n    return data\n  } else if (typeof data === 'object') {\n    return JSON.stringify(data)\n  } else {\n    return data.toString()\n  }\n}\n\nfunction getMockDispatch (mockDispatches, key) {\n  const basePath = key.query ? buildURL(key.path, key.query) : key.path\n  const resolvedPath = typeof basePath === 'string' ? safeUrl(basePath) : basePath\n\n  // Match path\n  let matchedMockDispatches = mockDispatches.filter(({ consumed }) => !consumed).filter(({ path }) => matchValue(safeUrl(path), resolvedPath))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for path '${resolvedPath}'`)\n  }\n\n  // Match method\n  matchedMockDispatches = matchedMockDispatches.filter(({ method }) => matchValue(method, key.method))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for method '${key.method}'`)\n  }\n\n  // Match body\n  matchedMockDispatches = matchedMockDispatches.filter(({ body }) => typeof body !== 'undefined' ? matchValue(body, key.body) : true)\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for body '${key.body}'`)\n  }\n\n  // Match headers\n  matchedMockDispatches = matchedMockDispatches.filter((mockDispatch) => matchHeaders(mockDispatch, key.headers))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for headers '${typeof key.headers === 'object' ? JSON.stringify(key.headers) : key.headers}'`)\n  }\n\n  return matchedMockDispatches[0]\n}\n\nfunction addMockDispatch (mockDispatches, key, data) {\n  const baseData = { timesInvoked: 0, times: 1, persist: false, consumed: false }\n  const replyData = typeof data === 'function' ? { callback: data } : { ...data }\n  const newMockDispatch = { ...baseData, ...key, pending: true, data: { error: null, ...replyData } }\n  mockDispatches.push(newMockDispatch)\n  return newMockDispatch\n}\n\nfunction deleteMockDispatch (mockDispatches, key) {\n  const index = mockDispatches.findIndex(dispatch => {\n    if (!dispatch.consumed) {\n      return false\n    }\n    return matchKey(dispatch, key)\n  })\n  if (index !== -1) {\n    mockDispatches.splice(index, 1)\n  }\n}\n\nfunction buildKey (opts) {\n  const { path, method, body, headers, query } = opts\n  return {\n    path,\n    method,\n    body,\n    headers,\n    query\n  }\n}\n\nfunction generateKeyValues (data) {\n  return Object.entries(data).reduce((keyValuePairs, [key, value]) => [\n    ...keyValuePairs,\n    Buffer.from(`${key}`),\n    Array.isArray(value) ? value.map(x => Buffer.from(`${x}`)) : Buffer.from(`${value}`)\n  ], [])\n}\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\n * @param {number} statusCode\n */\nfunction getStatusText (statusCode) {\n  return STATUS_CODES[statusCode] || 'unknown'\n}\n\nasync function getResponse (body) {\n  const buffers = []\n  for await (const data of body) {\n    buffers.push(data)\n  }\n  return Buffer.concat(buffers).toString('utf8')\n}\n\n/**\n * Mock dispatch function used to simulate undici dispatches\n */\nfunction mockDispatch (opts, handler) {\n  // Get mock dispatch from built key\n  const key = buildKey(opts)\n  const mockDispatch = getMockDispatch(this[kDispatches], key)\n\n  mockDispatch.timesInvoked++\n\n  // Here's where we resolve a callback if a callback is present for the dispatch data.\n  if (mockDispatch.data.callback) {\n    mockDispatch.data = { ...mockDispatch.data, ...mockDispatch.data.callback(opts) }\n  }\n\n  // Parse mockDispatch data\n  const { data: { statusCode, data, headers, trailers, error }, delay, persist } = mockDispatch\n  const { timesInvoked, times } = mockDispatch\n\n  // If it's used up and not persistent, mark as consumed\n  mockDispatch.consumed = !persist && timesInvoked >= times\n  mockDispatch.pending = timesInvoked < times\n\n  // If specified, trigger dispatch error\n  if (error !== null) {\n    deleteMockDispatch(this[kDispatches], key)\n    handler.onError(error)\n    return true\n  }\n\n  // Handle the request with a delay if necessary\n  if (typeof delay === 'number' && delay > 0) {\n    setTimeout(() => {\n      handleReply(this[kDispatches])\n    }, delay)\n  } else {\n    handleReply(this[kDispatches])\n  }\n\n  function handleReply (mockDispatches, _data = data) {\n    // fetch's HeadersList is a 1D string array\n    const optsHeaders = Array.isArray(opts.headers)\n      ? buildHeadersFromArray(opts.headers)\n      : opts.headers\n    const body = typeof _data === 'function'\n      ? _data({ ...opts, headers: optsHeaders })\n      : _data\n\n    // util.types.isPromise is likely needed for jest.\n    if (isPromise(body)) {\n      // If handleReply is asynchronous, throwing an error\n      // in the callback will reject the promise, rather than\n      // synchronously throw the error, which breaks some tests.\n      // Rather, we wait for the callback to resolve if it is a\n      // promise, and then re-run handleReply with the new body.\n      body.then((newData) => handleReply(mockDispatches, newData))\n      return\n    }\n\n    const responseData = getResponseData(body)\n    const responseHeaders = generateKeyValues(headers)\n    const responseTrailers = generateKeyValues(trailers)\n\n    handler.abort = nop\n    handler.onHeaders(statusCode, responseHeaders, resume, getStatusText(statusCode))\n    handler.onData(Buffer.from(responseData))\n    handler.onComplete(responseTrailers)\n    deleteMockDispatch(mockDispatches, key)\n  }\n\n  function resume () {}\n\n  return true\n}\n\nfunction buildMockDispatch () {\n  const agent = this[kMockAgent]\n  const origin = this[kOrigin]\n  const originalDispatch = this[kOriginalDispatch]\n\n  return function dispatch (opts, handler) {\n    if (agent.isMockActive) {\n      try {\n        mockDispatch.call(this, opts, handler)\n      } catch (error) {\n        if (error instanceof MockNotMatchedError) {\n          const netConnect = agent[kGetNetConnect]()\n          if (netConnect === false) {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`)\n          }\n          if (checkNetConnect(netConnect, origin)) {\n            originalDispatch.call(this, opts, handler)\n          } else {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`)\n          }\n        } else {\n          throw error\n        }\n      }\n    } else {\n      originalDispatch.call(this, opts, handler)\n    }\n  }\n}\n\nfunction checkNetConnect (netConnect, origin) {\n  const url = new URL(origin)\n  if (netConnect === true) {\n    return true\n  } else if (Array.isArray(netConnect) && netConnect.some((matcher) => matchValue(matcher, url.host))) {\n    return true\n  }\n  return false\n}\n\nfunction buildMockOptions (opts) {\n  if (opts) {\n    const { agent, ...mockOptions } = opts\n    return mockOptions\n  }\n}\n\nmodule.exports = {\n  getResponseData,\n  getMockDispatch,\n  addMockDispatch,\n  deleteMockDispatch,\n  buildKey,\n  generateKeyValues,\n  matchValue,\n  getResponse,\n  getStatusText,\n  mockDispatch,\n  buildMockDispatch,\n  checkNetConnect,\n  buildMockOptions,\n  getHeaderByName\n}\n","'use strict'\n\nconst { getResponseData, buildKey, addMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kDispatchKey,\n  kDefaultHeaders,\n  kDefaultTrailers,\n  kContentLength,\n  kMockDispatch\n} = require('./mock-symbols')\nconst { InvalidArgumentError } = require('../core/errors')\nconst { buildURL } = require('../core/util')\n\n/**\n * Defines the scope API for an interceptor reply\n */\nclass MockScope {\n  constructor (mockDispatch) {\n    this[kMockDispatch] = mockDispatch\n  }\n\n  /**\n   * Delay a reply by a set amount in ms.\n   */\n  delay (waitInMs) {\n    if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) {\n      throw new InvalidArgumentError('waitInMs must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].delay = waitInMs\n    return this\n  }\n\n  /**\n   * For a defined reply, never mark as consumed.\n   */\n  persist () {\n    this[kMockDispatch].persist = true\n    return this\n  }\n\n  /**\n   * Allow one to define a reply for a set amount of matching requests.\n   */\n  times (repeatTimes) {\n    if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {\n      throw new InvalidArgumentError('repeatTimes must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].times = repeatTimes\n    return this\n  }\n}\n\n/**\n * Defines an interceptor for a Mock\n */\nclass MockInterceptor {\n  constructor (opts, mockDispatches) {\n    if (typeof opts !== 'object') {\n      throw new InvalidArgumentError('opts must be an object')\n    }\n    if (typeof opts.path === 'undefined') {\n      throw new InvalidArgumentError('opts.path must be defined')\n    }\n    if (typeof opts.method === 'undefined') {\n      opts.method = 'GET'\n    }\n    // See https://github.com/nodejs/undici/issues/1245\n    // As per RFC 3986, clients are not supposed to send URI\n    // fragments to servers when they retrieve a document,\n    if (typeof opts.path === 'string') {\n      if (opts.query) {\n        opts.path = buildURL(opts.path, opts.query)\n      } else {\n        // Matches https://github.com/nodejs/undici/blob/main/lib/fetch/index.js#L1811\n        const parsedURL = new URL(opts.path, 'data://')\n        opts.path = parsedURL.pathname + parsedURL.search\n      }\n    }\n    if (typeof opts.method === 'string') {\n      opts.method = opts.method.toUpperCase()\n    }\n\n    this[kDispatchKey] = buildKey(opts)\n    this[kDispatches] = mockDispatches\n    this[kDefaultHeaders] = {}\n    this[kDefaultTrailers] = {}\n    this[kContentLength] = false\n  }\n\n  createMockScopeDispatchData (statusCode, data, responseOptions = {}) {\n    const responseData = getResponseData(data)\n    const contentLength = this[kContentLength] ? { 'content-length': responseData.length } : {}\n    const headers = { ...this[kDefaultHeaders], ...contentLength, ...responseOptions.headers }\n    const trailers = { ...this[kDefaultTrailers], ...responseOptions.trailers }\n\n    return { statusCode, data, headers, trailers }\n  }\n\n  validateReplyParameters (statusCode, data, responseOptions) {\n    if (typeof statusCode === 'undefined') {\n      throw new InvalidArgumentError('statusCode must be defined')\n    }\n    if (typeof data === 'undefined') {\n      throw new InvalidArgumentError('data must be defined')\n    }\n    if (typeof responseOptions !== 'object') {\n      throw new InvalidArgumentError('responseOptions must be an object')\n    }\n  }\n\n  /**\n   * Mock an undici request with a defined reply.\n   */\n  reply (replyData) {\n    // Values of reply aren't available right now as they\n    // can only be available when the reply callback is invoked.\n    if (typeof replyData === 'function') {\n      // We'll first wrap the provided callback in another function,\n      // this function will properly resolve the data from the callback\n      // when invoked.\n      const wrappedDefaultsCallback = (opts) => {\n        // Our reply options callback contains the parameter for statusCode, data and options.\n        const resolvedData = replyData(opts)\n\n        // Check if it is in the right format\n        if (typeof resolvedData !== 'object') {\n          throw new InvalidArgumentError('reply options callback must return an object')\n        }\n\n        const { statusCode, data = '', responseOptions = {} } = resolvedData\n        this.validateReplyParameters(statusCode, data, responseOptions)\n        // Since the values can be obtained immediately we return them\n        // from this higher order function that will be resolved later.\n        return {\n          ...this.createMockScopeDispatchData(statusCode, data, responseOptions)\n        }\n      }\n\n      // Add usual dispatch data, but this time set the data parameter to function that will eventually provide data.\n      const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], wrappedDefaultsCallback)\n      return new MockScope(newMockDispatch)\n    }\n\n    // We can have either one or three parameters, if we get here,\n    // we should have 1-3 parameters. So we spread the arguments of\n    // this function to obtain the parameters, since replyData will always\n    // just be the statusCode.\n    const [statusCode, data = '', responseOptions = {}] = [...arguments]\n    this.validateReplyParameters(statusCode, data, responseOptions)\n\n    // Send in-already provided data like usual\n    const dispatchData = this.createMockScopeDispatchData(statusCode, data, responseOptions)\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], dispatchData)\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Mock an undici request with a defined error.\n   */\n  replyWithError (error) {\n    if (typeof error === 'undefined') {\n      throw new InvalidArgumentError('error must be defined')\n    }\n\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { error })\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Set default reply headers on the interceptor for subsequent replies\n   */\n  defaultReplyHeaders (headers) {\n    if (typeof headers === 'undefined') {\n      throw new InvalidArgumentError('headers must be defined')\n    }\n\n    this[kDefaultHeaders] = headers\n    return this\n  }\n\n  /**\n   * Set default reply trailers on the interceptor for subsequent replies\n   */\n  defaultReplyTrailers (trailers) {\n    if (typeof trailers === 'undefined') {\n      throw new InvalidArgumentError('trailers must be defined')\n    }\n\n    this[kDefaultTrailers] = trailers\n    return this\n  }\n\n  /**\n   * Set reply content length header for replies on the interceptor\n   */\n  replyContentLength () {\n    this[kContentLength] = true\n    return this\n  }\n}\n\nmodule.exports.MockInterceptor = MockInterceptor\nmodule.exports.MockScope = MockScope\n","'use strict'\n\nconst { promisify } = require('util')\nconst Client = require('../client')\nconst { buildMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kMockAgent,\n  kClose,\n  kOriginalClose,\n  kOrigin,\n  kOriginalDispatch,\n  kConnected\n} = require('./mock-symbols')\nconst { MockInterceptor } = require('./mock-interceptor')\nconst Symbols = require('../core/symbols')\nconst { InvalidArgumentError } = require('../core/errors')\n\n/**\n * MockClient provides an API that extends the Client to influence the mockDispatches.\n */\nclass MockClient extends Client {\n  constructor (origin, opts) {\n    super(origin, opts)\n\n    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n\n    this[kMockAgent] = opts.agent\n    this[kOrigin] = origin\n    this[kDispatches] = []\n    this[kConnected] = 1\n    this[kOriginalDispatch] = this.dispatch\n    this[kOriginalClose] = this.close.bind(this)\n\n    this.dispatch = buildMockDispatch.call(this)\n    this.close = this[kClose]\n  }\n\n  get [Symbols.kConnected] () {\n    return this[kConnected]\n  }\n\n  /**\n   * Sets up the base interceptor for mocking replies from undici.\n   */\n  intercept (opts) {\n    return new MockInterceptor(opts, this[kDispatches])\n  }\n\n  async [kClose] () {\n    await promisify(this[kOriginalClose])()\n    this[kConnected] = 0\n    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])\n  }\n}\n\nmodule.exports = MockClient\n","'use strict'\n\nconst { promisify } = require('util')\nconst Pool = require('../pool')\nconst { buildMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kMockAgent,\n  kClose,\n  kOriginalClose,\n  kOrigin,\n  kOriginalDispatch,\n  kConnected\n} = require('./mock-symbols')\nconst { MockInterceptor } = require('./mock-interceptor')\nconst Symbols = require('../core/symbols')\nconst { InvalidArgumentError } = require('../core/errors')\n\n/**\n * MockPool provides an API that extends the Pool to influence the mockDispatches.\n */\nclass MockPool extends Pool {\n  constructor (origin, opts) {\n    super(origin, opts)\n\n    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n\n    this[kMockAgent] = opts.agent\n    this[kOrigin] = origin\n    this[kDispatches] = []\n    this[kConnected] = 1\n    this[kOriginalDispatch] = this.dispatch\n    this[kOriginalClose] = this.close.bind(this)\n\n    this.dispatch = buildMockDispatch.call(this)\n    this.close = this[kClose]\n  }\n\n  get [Symbols.kConnected] () {\n    return this[kConnected]\n  }\n\n  /**\n   * Sets up the base interceptor for mocking replies from undici.\n   */\n  intercept (opts) {\n    return new MockInterceptor(opts, this[kDispatches])\n  }\n\n  async [kClose] () {\n    await promisify(this[kOriginalClose])()\n    this[kConnected] = 0\n    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])\n  }\n}\n\nmodule.exports = MockPool\n","'use strict'\n\nconst singulars = {\n  pronoun: 'it',\n  is: 'is',\n  was: 'was',\n  this: 'this'\n}\n\nconst plurals = {\n  pronoun: 'they',\n  is: 'are',\n  was: 'were',\n  this: 'these'\n}\n\nmodule.exports = class Pluralizer {\n  constructor (singular, plural) {\n    this.singular = singular\n    this.plural = plural\n  }\n\n  pluralize (count) {\n    const one = count === 1\n    const keys = one ? singulars : plurals\n    const noun = one ? this.singular : this.plural\n    return { ...keys, count, noun }\n  }\n}\n","'use strict'\n\nconst { Transform } = require('stream')\nconst { Console } = require('console')\n\n/**\n * Gets the output of `console.table(…)` as a string.\n */\nmodule.exports = class PendingInterceptorsFormatter {\n  constructor ({ disableColors } = {}) {\n    this.transform = new Transform({\n      transform (chunk, _enc, cb) {\n        cb(null, chunk)\n      }\n    })\n\n    this.logger = new Console({\n      stdout: this.transform,\n      inspectOptions: {\n        colors: !disableColors && !process.env.CI\n      }\n    })\n  }\n\n  format (pendingInterceptors) {\n    const withPrettyHeaders = pendingInterceptors.map(\n      ({ method, path, data: { statusCode }, persist, times, timesInvoked, origin }) => ({\n        Method: method,\n        Origin: origin,\n        Path: path,\n        'Status code': statusCode,\n        Persistent: persist ? '✅' : '❌',\n        Invocations: timesInvoked,\n        Remaining: persist ? Infinity : times - timesInvoked\n      }))\n\n    this.logger.table(withPrettyHeaders)\n    return this.transform.read().toString()\n  }\n}\n","'use strict'\n\nconst { kClients } = require('../core/symbols')\nconst Agent = require('../agent')\nconst {\n  kAgent,\n  kMockAgentSet,\n  kMockAgentGet,\n  kDispatches,\n  kIsMockActive,\n  kNetConnect,\n  kGetNetConnect,\n  kOptions,\n  kFactory\n} = require('./mock-symbols')\nconst MockClient = require('./mock-client')\nconst MockPool = require('./mock-pool')\nconst { matchValue, buildMockOptions } = require('./mock-utils')\nconst { InvalidArgumentError, UndiciError } = require('../core/errors')\nconst Dispatcher = require('../dispatcher')\nconst Pluralizer = require('./pluralizer')\nconst PendingInterceptorsFormatter = require('./pending-interceptors-formatter')\n\nclass FakeWeakRef {\n  constructor (value) {\n    this.value = value\n  }\n\n  deref () {\n    return this.value\n  }\n}\n\nclass MockAgent extends Dispatcher {\n  constructor (opts) {\n    super(opts)\n\n    this[kNetConnect] = true\n    this[kIsMockActive] = true\n\n    // Instantiate Agent and encapsulate\n    if ((opts && opts.agent && typeof opts.agent.dispatch !== 'function')) {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n    const agent = opts && opts.agent ? opts.agent : new Agent(opts)\n    this[kAgent] = agent\n\n    this[kClients] = agent[kClients]\n    this[kOptions] = buildMockOptions(opts)\n  }\n\n  get (origin) {\n    let dispatcher = this[kMockAgentGet](origin)\n\n    if (!dispatcher) {\n      dispatcher = this[kFactory](origin)\n      this[kMockAgentSet](origin, dispatcher)\n    }\n    return dispatcher\n  }\n\n  dispatch (opts, handler) {\n    // Call MockAgent.get to perform additional setup before dispatching as normal\n    this.get(opts.origin)\n    return this[kAgent].dispatch(opts, handler)\n  }\n\n  async close () {\n    await this[kAgent].close()\n    this[kClients].clear()\n  }\n\n  deactivate () {\n    this[kIsMockActive] = false\n  }\n\n  activate () {\n    this[kIsMockActive] = true\n  }\n\n  enableNetConnect (matcher) {\n    if (typeof matcher === 'string' || typeof matcher === 'function' || matcher instanceof RegExp) {\n      if (Array.isArray(this[kNetConnect])) {\n        this[kNetConnect].push(matcher)\n      } else {\n        this[kNetConnect] = [matcher]\n      }\n    } else if (typeof matcher === 'undefined') {\n      this[kNetConnect] = true\n    } else {\n      throw new InvalidArgumentError('Unsupported matcher. Must be one of String|Function|RegExp.')\n    }\n  }\n\n  disableNetConnect () {\n    this[kNetConnect] = false\n  }\n\n  // This is required to bypass issues caused by using global symbols - see:\n  // https://github.com/nodejs/undici/issues/1447\n  get isMockActive () {\n    return this[kIsMockActive]\n  }\n\n  [kMockAgentSet] (origin, dispatcher) {\n    this[kClients].set(origin, new FakeWeakRef(dispatcher))\n  }\n\n  [kFactory] (origin) {\n    const mockOptions = Object.assign({ agent: this }, this[kOptions])\n    return this[kOptions] && this[kOptions].connections === 1\n      ? new MockClient(origin, mockOptions)\n      : new MockPool(origin, mockOptions)\n  }\n\n  [kMockAgentGet] (origin) {\n    // First check if we can immediately find it\n    const ref = this[kClients].get(origin)\n    if (ref) {\n      return ref.deref()\n    }\n\n    // If the origin is not a string create a dummy parent pool and return to user\n    if (typeof origin !== 'string') {\n      const dispatcher = this[kFactory]('http://localhost:9999')\n      this[kMockAgentSet](origin, dispatcher)\n      return dispatcher\n    }\n\n    // If we match, create a pool and assign the same dispatches\n    for (const [keyMatcher, nonExplicitRef] of Array.from(this[kClients])) {\n      const nonExplicitDispatcher = nonExplicitRef.deref()\n      if (nonExplicitDispatcher && typeof keyMatcher !== 'string' && matchValue(keyMatcher, origin)) {\n        const dispatcher = this[kFactory](origin)\n        this[kMockAgentSet](origin, dispatcher)\n        dispatcher[kDispatches] = nonExplicitDispatcher[kDispatches]\n        return dispatcher\n      }\n    }\n  }\n\n  [kGetNetConnect] () {\n    return this[kNetConnect]\n  }\n\n  pendingInterceptors () {\n    const mockAgentClients = this[kClients]\n\n    return Array.from(mockAgentClients.entries())\n      .flatMap(([origin, scope]) => scope.deref()[kDispatches].map(dispatch => ({ ...dispatch, origin })))\n      .filter(({ pending }) => pending)\n  }\n\n  assertNoPendingInterceptors ({ pendingInterceptorsFormatter = new PendingInterceptorsFormatter() } = {}) {\n    const pending = this.pendingInterceptors()\n\n    if (pending.length === 0) {\n      return\n    }\n\n    const pluralizer = new Pluralizer('interceptor', 'interceptors').pluralize(pending.length)\n\n    throw new UndiciError(`\n${pluralizer.count} ${pluralizer.noun} ${pluralizer.is} pending:\n\n${pendingInterceptorsFormatter.format(pending)}\n`.trim())\n  }\n}\n\nmodule.exports = MockAgent\n","'use strict'\n\nconst { kProxy, kClose, kDestroy, kInterceptors } = require('./core/symbols')\nconst { URL } = require('url')\nconst Agent = require('./agent')\nconst Pool = require('./pool')\nconst DispatcherBase = require('./dispatcher-base')\nconst { InvalidArgumentError, RequestAbortedError } = require('./core/errors')\nconst buildConnector = require('./core/connect')\n\nconst kAgent = Symbol('proxy agent')\nconst kClient = Symbol('proxy client')\nconst kProxyHeaders = Symbol('proxy headers')\nconst kRequestTls = Symbol('request tls settings')\nconst kProxyTls = Symbol('proxy tls settings')\nconst kConnectEndpoint = Symbol('connect endpoint function')\n\nfunction defaultProtocolPort (protocol) {\n  return protocol === 'https:' ? 443 : 80\n}\n\nfunction buildProxyOptions (opts) {\n  if (typeof opts === 'string') {\n    opts = { uri: opts }\n  }\n\n  if (!opts || !opts.uri) {\n    throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n  }\n\n  return {\n    uri: opts.uri,\n    protocol: opts.protocol || 'https'\n  }\n}\n\nfunction defaultFactory (origin, opts) {\n  return new Pool(origin, opts)\n}\n\nclass ProxyAgent extends DispatcherBase {\n  constructor (opts) {\n    super(opts)\n    this[kProxy] = buildProxyOptions(opts)\n    this[kAgent] = new Agent(opts)\n    this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent)\n      ? opts.interceptors.ProxyAgent\n      : []\n\n    if (typeof opts === 'string') {\n      opts = { uri: opts }\n    }\n\n    if (!opts || !opts.uri) {\n      throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n    }\n\n    const { clientFactory = defaultFactory } = opts\n\n    if (typeof clientFactory !== 'function') {\n      throw new InvalidArgumentError('Proxy opts.clientFactory must be a function.')\n    }\n\n    this[kRequestTls] = opts.requestTls\n    this[kProxyTls] = opts.proxyTls\n    this[kProxyHeaders] = opts.headers || {}\n\n    if (opts.auth && opts.token) {\n      throw new InvalidArgumentError('opts.auth cannot be used in combination with opts.token')\n    } else if (opts.auth) {\n      /* @deprecated in favour of opts.token */\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`\n    } else if (opts.token) {\n      this[kProxyHeaders]['proxy-authorization'] = opts.token\n    }\n\n    const resolvedUrl = new URL(opts.uri)\n    const { origin, port, host } = resolvedUrl\n\n    const connect = buildConnector({ ...opts.proxyTls })\n    this[kConnectEndpoint] = buildConnector({ ...opts.requestTls })\n    this[kClient] = clientFactory(resolvedUrl, { connect })\n    this[kAgent] = new Agent({\n      ...opts,\n      connect: async (opts, callback) => {\n        let requestedHost = opts.host\n        if (!opts.port) {\n          requestedHost += `:${defaultProtocolPort(opts.protocol)}`\n        }\n        try {\n          const { socket, statusCode } = await this[kClient].connect({\n            origin,\n            port,\n            path: requestedHost,\n            signal: opts.signal,\n            headers: {\n              ...this[kProxyHeaders],\n              host\n            }\n          })\n          if (statusCode !== 200) {\n            socket.on('error', () => {}).destroy()\n            callback(new RequestAbortedError('Proxy response !== 200 when HTTP Tunneling'))\n          }\n          if (opts.protocol !== 'https:') {\n            callback(null, socket)\n            return\n          }\n          let servername\n          if (this[kRequestTls]) {\n            servername = this[kRequestTls].servername\n          } else {\n            servername = opts.servername\n          }\n          this[kConnectEndpoint]({ ...opts, servername, httpSocket: socket }, callback)\n        } catch (err) {\n          callback(err)\n        }\n      }\n    })\n  }\n\n  dispatch (opts, handler) {\n    const { host } = new URL(opts.origin)\n    const headers = buildHeaders(opts.headers)\n    throwIfProxyAuthIsSent(headers)\n    return this[kAgent].dispatch(\n      {\n        ...opts,\n        headers: {\n          ...headers,\n          host\n        }\n      },\n      handler\n    )\n  }\n\n  async [kClose] () {\n    await this[kAgent].close()\n    await this[kClient].close()\n  }\n\n  async [kDestroy] () {\n    await this[kAgent].destroy()\n    await this[kClient].destroy()\n  }\n}\n\n/**\n * @param {string[] | Record<string, string>} headers\n * @returns {Record<string, string>}\n */\nfunction buildHeaders (headers) {\n  // When using undici.fetch, the headers list is stored\n  // as an array.\n  if (Array.isArray(headers)) {\n    /** @type {Record<string, string>} */\n    const headersPair = {}\n\n    for (let i = 0; i < headers.length; i += 2) {\n      headersPair[headers[i]] = headers[i + 1]\n    }\n\n    return headersPair\n  }\n\n  return headers\n}\n\n/**\n * @param {Record<string, string>} headers\n *\n * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers\n * Nevertheless, it was changed and to avoid a security vulnerability by end users\n * this check was created.\n * It should be removed in the next major version for performance reasons\n */\nfunction throwIfProxyAuthIsSent (headers) {\n  const existProxyAuth = headers && Object.keys(headers)\n    .find((key) => key.toLowerCase() === 'proxy-authorization')\n  if (existProxyAuth) {\n    throw new InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor')\n  }\n}\n\nmodule.exports = ProxyAgent\n","'use strict'\n\n// We include a version number for the Dispatcher API. In case of breaking changes,\n// this version number must be increased to avoid conflicts.\nconst globalDispatcher = Symbol.for('undici.globalDispatcher.1')\nconst { InvalidArgumentError } = require('./core/errors')\nconst Agent = require('./agent')\n\nif (getGlobalDispatcher() === undefined) {\n  setGlobalDispatcher(new Agent())\n}\n\nfunction setGlobalDispatcher (agent) {\n  if (!agent || typeof agent.dispatch !== 'function') {\n    throw new InvalidArgumentError('Argument agent must implement Agent')\n  }\n  Object.defineProperty(globalThis, globalDispatcher, {\n    value: agent,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  })\n}\n\nfunction getGlobalDispatcher () {\n  return globalThis[globalDispatcher]\n}\n\nmodule.exports = {\n  setGlobalDispatcher,\n  getGlobalDispatcher\n}\n","'use strict'\n\nmodule.exports = class DecoratorHandler {\n  constructor (handler) {\n    this.handler = handler\n  }\n\n  onConnect (...args) {\n    return this.handler.onConnect(...args)\n  }\n\n  onError (...args) {\n    return this.handler.onError(...args)\n  }\n\n  onUpgrade (...args) {\n    return this.handler.onUpgrade(...args)\n  }\n\n  onHeaders (...args) {\n    return this.handler.onHeaders(...args)\n  }\n\n  onData (...args) {\n    return this.handler.onData(...args)\n  }\n\n  onComplete (...args) {\n    return this.handler.onComplete(...args)\n  }\n\n  onBodySent (...args) {\n    return this.handler.onBodySent(...args)\n  }\n}\n","// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict'\n\nconst { kHeadersList } = require('../core/symbols')\nconst { kGuard } = require('./symbols')\nconst { kEnumerableProperty } = require('../core/util')\nconst {\n  makeIterator,\n  isValidHeaderName,\n  isValidHeaderValue\n} = require('./util')\nconst { webidl } = require('./webidl')\nconst assert = require('assert')\n\nconst kHeadersMap = Symbol('headers map')\nconst kHeadersSortedMap = Symbol('headers map sorted')\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize\n * @param {string} potentialValue\n */\nfunction headerValueNormalize (potentialValue) {\n  //  To normalize a byte sequence potentialValue, remove\n  //  any leading and trailing HTTP whitespace bytes from\n  //  potentialValue.\n\n  // Trimming the end with `.replace()` and a RegExp is typically subject to\n  // ReDoS. This is safer and faster.\n  let i = potentialValue.length\n  while (/[\\r\\n\\t ]/.test(potentialValue.charAt(--i)));\n  return potentialValue.slice(0, i + 1).replace(/^[\\r\\n\\t ]+/, '')\n}\n\nfunction fill (headers, object) {\n  // To fill a Headers object headers with a given object object, run these steps:\n\n  // 1. If object is a sequence, then for each header in object:\n  // Note: webidl conversion to array has already been done.\n  if (Array.isArray(object)) {\n    for (const header of object) {\n      // 1. If header does not contain exactly two items, then throw a TypeError.\n      if (header.length !== 2) {\n        throw webidl.errors.exception({\n          header: 'Headers constructor',\n          message: `expected name/value pair to be length 2, found ${header.length}.`\n        })\n      }\n\n      // 2. Append (header’s first item, header’s second item) to headers.\n      headers.append(header[0], header[1])\n    }\n  } else if (typeof object === 'object' && object !== null) {\n    // Note: null should throw\n\n    // 2. Otherwise, object is a record, then for each key → value in object,\n    //    append (key, value) to headers\n    for (const [key, value] of Object.entries(object)) {\n      headers.append(key, value)\n    }\n  } else {\n    throw webidl.errors.conversionFailed({\n      prefix: 'Headers constructor',\n      argument: 'Argument 1',\n      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n    })\n  }\n}\n\nclass HeadersList {\n  /** @type {[string, string][]|null} */\n  cookies = null\n\n  constructor (init) {\n    if (init instanceof HeadersList) {\n      this[kHeadersMap] = new Map(init[kHeadersMap])\n      this[kHeadersSortedMap] = init[kHeadersSortedMap]\n      this.cookies = init.cookies\n    } else {\n      this[kHeadersMap] = new Map(init)\n      this[kHeadersSortedMap] = null\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#header-list-contains\n  contains (name) {\n    // A header list list contains a header name name if list\n    // contains a header whose name is a byte-case-insensitive\n    // match for name.\n    name = name.toLowerCase()\n\n    return this[kHeadersMap].has(name)\n  }\n\n  clear () {\n    this[kHeadersMap].clear()\n    this[kHeadersSortedMap] = null\n    this.cookies = null\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-append\n  append (name, value) {\n    this[kHeadersSortedMap] = null\n\n    // 1. If list contains name, then set name to the first such\n    //    header’s name.\n    const lowercaseName = name.toLowerCase()\n    const exists = this[kHeadersMap].get(lowercaseName)\n\n    // 2. Append (name, value) to list.\n    if (exists) {\n      const delimiter = lowercaseName === 'cookie' ? '; ' : ', '\n      this[kHeadersMap].set(lowercaseName, {\n        name: exists.name,\n        value: `${exists.value}${delimiter}${value}`\n      })\n    } else {\n      this[kHeadersMap].set(lowercaseName, { name, value })\n    }\n\n    if (lowercaseName === 'set-cookie') {\n      this.cookies ??= []\n      this.cookies.push(value)\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-set\n  set (name, value) {\n    this[kHeadersSortedMap] = null\n    const lowercaseName = name.toLowerCase()\n\n    if (lowercaseName === 'set-cookie') {\n      this.cookies = [value]\n    }\n\n    // 1. If list contains name, then set the value of\n    //    the first such header to value and remove the\n    //    others.\n    // 2. Otherwise, append header (name, value) to list.\n    return this[kHeadersMap].set(lowercaseName, { name, value })\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-delete\n  delete (name) {\n    this[kHeadersSortedMap] = null\n\n    name = name.toLowerCase()\n\n    if (name === 'set-cookie') {\n      this.cookies = null\n    }\n\n    return this[kHeadersMap].delete(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-get\n  get (name) {\n    // 1. If list does not contain name, then return null.\n    if (!this.contains(name)) {\n      return null\n    }\n\n    // 2. Return the values of all headers in list whose name\n    //    is a byte-case-insensitive match for name,\n    //    separated from each other by 0x2C 0x20, in order.\n    return this[kHeadersMap].get(name.toLowerCase())?.value ?? null\n  }\n\n  * [Symbol.iterator] () {\n    // use the lowercased name\n    for (const [name, { value }] of this[kHeadersMap]) {\n      yield [name, value]\n    }\n  }\n\n  get entries () {\n    const headers = {}\n\n    if (this[kHeadersMap].size) {\n      for (const { name, value } of this[kHeadersMap].values()) {\n        headers[name] = value\n      }\n    }\n\n    return headers\n  }\n}\n\n// https://fetch.spec.whatwg.org/#headers-class\nclass Headers {\n  constructor (init = undefined) {\n    this[kHeadersList] = new HeadersList()\n\n    // The new Headers(init) constructor steps are:\n\n    // 1. Set this’s guard to \"none\".\n    this[kGuard] = 'none'\n\n    // 2. If init is given, then fill this with init.\n    if (init !== undefined) {\n      init = webidl.converters.HeadersInit(init)\n      fill(this, init)\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-append\n  append (name, value) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 2, { header: 'Headers.append' })\n\n    name = webidl.converters.ByteString(name)\n    value = webidl.converters.ByteString(value)\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value)\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value: name,\n        type: 'header name'\n      })\n    } else if (!isValidHeaderValue(value)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value,\n        type: 'header value'\n      })\n    }\n\n    // 3. If headers’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if headers’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // 5. Otherwise, if headers’s guard is \"request-no-cors\":\n      // TODO\n    }\n\n    // 6. Otherwise, if headers’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n\n    // 7. Append (name, value) to headers’s header list.\n    // 8. If headers’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from headers\n    return this[kHeadersList].append(name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-delete\n  delete (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.delete' })\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.delete',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. If this’s guard is \"immutable\", then throw a TypeError.\n    // 3. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 4. Otherwise, if this’s guard is \"request-no-cors\", name\n    //    is not a no-CORS-safelisted request-header name, and\n    //    name is not a privileged no-CORS request-header name,\n    //    return.\n    // 5. Otherwise, if this’s guard is \"response\" and name is\n    //    a forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 6. If this’s header list does not contain name, then\n    //    return.\n    if (!this[kHeadersList].contains(name)) {\n      return\n    }\n\n    // 7. Delete name from this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this.\n    return this[kHeadersList].delete(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-get\n  get (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.get' })\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.get',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return the result of getting name from this’s header\n    //    list.\n    return this[kHeadersList].get(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-has\n  has (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.has' })\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.has',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return true if this’s header list contains name;\n    //    otherwise false.\n    return this[kHeadersList].contains(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-set\n  set (name, value) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 2, { header: 'Headers.set' })\n\n    name = webidl.converters.ByteString(name)\n    value = webidl.converters.ByteString(value)\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value)\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value: name,\n        type: 'header name'\n      })\n    } else if (!isValidHeaderValue(value)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value,\n        type: 'header value'\n      })\n    }\n\n    // 3. If this’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 5. Otherwise, if this’s guard is \"request-no-cors\" and\n    //    name/value is not a no-CORS-safelisted request-header,\n    //    return.\n    // 6. Otherwise, if this’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 7. Set (name, value) in this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this\n    return this[kHeadersList].set(name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie\n  getSetCookie () {\n    webidl.brandCheck(this, Headers)\n\n    // 1. If this’s header list does not contain `Set-Cookie`, then return « ».\n    // 2. Return the values of all headers in this’s header list whose name is\n    //    a byte-case-insensitive match for `Set-Cookie`, in order.\n\n    const list = this[kHeadersList].cookies\n\n    if (list) {\n      return [...list]\n    }\n\n    return []\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n  get [kHeadersSortedMap] () {\n    if (this[kHeadersList][kHeadersSortedMap]) {\n      return this[kHeadersList][kHeadersSortedMap]\n    }\n\n    // 1. Let headers be an empty list of headers with the key being the name\n    //    and value the value.\n    const headers = []\n\n    // 2. Let names be the result of convert header names to a sorted-lowercase\n    //    set with all the names of the headers in list.\n    const names = [...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1)\n    const cookies = this[kHeadersList].cookies\n\n    // 3. For each name of names:\n    for (const [name, value] of names) {\n      // 1. If name is `set-cookie`, then:\n      if (name === 'set-cookie') {\n        // 1. Let values be a list of all values of headers in list whose name\n        //    is a byte-case-insensitive match for name, in order.\n\n        // 2. For each value of values:\n        // 1. Append (name, value) to headers.\n        for (const value of cookies) {\n          headers.push([name, value])\n        }\n      } else {\n        // 2. Otherwise:\n\n        // 1. Let value be the result of getting name from list.\n\n        // 2. Assert: value is non-null.\n        assert(value !== null)\n\n        // 3. Append (name, value) to headers.\n        headers.push([name, value])\n      }\n    }\n\n    this[kHeadersList][kHeadersSortedMap] = headers\n\n    // 4. Return headers.\n    return headers\n  }\n\n  keys () {\n    webidl.brandCheck(this, Headers)\n\n    return makeIterator(\n      () => [...this[kHeadersSortedMap].values()],\n      'Headers',\n      'key'\n    )\n  }\n\n  values () {\n    webidl.brandCheck(this, Headers)\n\n    return makeIterator(\n      () => [...this[kHeadersSortedMap].values()],\n      'Headers',\n      'value'\n    )\n  }\n\n  entries () {\n    webidl.brandCheck(this, Headers)\n\n    return makeIterator(\n      () => [...this[kHeadersSortedMap].values()],\n      'Headers',\n      'key+value'\n    )\n  }\n\n  /**\n   * @param {(value: string, key: string, self: Headers) => void} callbackFn\n   * @param {unknown} thisArg\n   */\n  forEach (callbackFn, thisArg = globalThis) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.forEach' })\n\n    if (typeof callbackFn !== 'function') {\n      throw new TypeError(\n        \"Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.\"\n      )\n    }\n\n    for (const [key, value] of this) {\n      callbackFn.apply(thisArg, [value, key, this])\n    }\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    webidl.brandCheck(this, Headers)\n\n    return this[kHeadersList]\n  }\n}\n\nHeaders.prototype[Symbol.iterator] = Headers.prototype.entries\n\nObject.defineProperties(Headers.prototype, {\n  append: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  get: kEnumerableProperty,\n  has: kEnumerableProperty,\n  set: kEnumerableProperty,\n  getSetCookie: kEnumerableProperty,\n  keys: kEnumerableProperty,\n  values: kEnumerableProperty,\n  entries: kEnumerableProperty,\n  forEach: kEnumerableProperty,\n  [Symbol.iterator]: { enumerable: false },\n  [Symbol.toStringTag]: {\n    value: 'Headers',\n    configurable: true\n  }\n})\n\nwebidl.converters.HeadersInit = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (V[Symbol.iterator]) {\n      return webidl.converters['sequence<sequence<ByteString>>'](V)\n    }\n\n    return webidl.converters['record<ByteString, ByteString>'](V)\n  }\n\n  throw webidl.errors.conversionFailed({\n    prefix: 'Headers constructor',\n    argument: 'Argument 1',\n    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n  })\n}\n\nmodule.exports = {\n  fill,\n  Headers,\n  HeadersList\n}\n","'use strict'\n\nconst { Headers, HeadersList, fill } = require('./headers')\nconst { extractBody, cloneBody, mixinBody } = require('./body')\nconst util = require('../core/util')\nconst { kEnumerableProperty } = util\nconst {\n  isValidReasonPhrase,\n  isCancelled,\n  isAborted,\n  isBlobLike,\n  serializeJavascriptValueToJSONString,\n  isErrorLike,\n  isomorphicEncode\n} = require('./util')\nconst {\n  redirectStatusSet,\n  nullBodyStatus,\n  DOMException\n} = require('./constants')\nconst { kState, kHeaders, kGuard, kRealm } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { FormData } = require('./formdata')\nconst { getGlobalOrigin } = require('./global')\nconst { URLSerializer } = require('./dataURL')\nconst { kHeadersList } = require('../core/symbols')\nconst assert = require('assert')\nconst { types } = require('util')\n\nconst ReadableStream = globalThis.ReadableStream || require('stream/web').ReadableStream\nconst textEncoder = new TextEncoder('utf-8')\n\n// https://fetch.spec.whatwg.org/#response-class\nclass Response {\n  // Creates network error Response.\n  static error () {\n    // TODO\n    const relevantRealm = { settingsObject: {} }\n\n    // The static error() method steps are to return the result of creating a\n    // Response object, given a new network error, \"immutable\", and this’s\n    // relevant Realm.\n    const responseObject = new Response()\n    responseObject[kState] = makeNetworkError()\n    responseObject[kRealm] = relevantRealm\n    responseObject[kHeaders][kHeadersList] = responseObject[kState].headersList\n    responseObject[kHeaders][kGuard] = 'immutable'\n    responseObject[kHeaders][kRealm] = relevantRealm\n    return responseObject\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-response-json\n  static json (data, init = {}) {\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Response.json' })\n\n    if (init !== null) {\n      init = webidl.converters.ResponseInit(init)\n    }\n\n    // 1. Let bytes the result of running serialize a JavaScript value to JSON bytes on data.\n    const bytes = textEncoder.encode(\n      serializeJavascriptValueToJSONString(data)\n    )\n\n    // 2. Let body be the result of extracting bytes.\n    const body = extractBody(bytes)\n\n    // 3. Let responseObject be the result of creating a Response object, given a new response,\n    //    \"response\", and this’s relevant Realm.\n    const relevantRealm = { settingsObject: {} }\n    const responseObject = new Response()\n    responseObject[kRealm] = relevantRealm\n    responseObject[kHeaders][kGuard] = 'response'\n    responseObject[kHeaders][kRealm] = relevantRealm\n\n    // 4. Perform initialize a response given responseObject, init, and (body, \"application/json\").\n    initializeResponse(responseObject, init, { body: body[0], type: 'application/json' })\n\n    // 5. Return responseObject.\n    return responseObject\n  }\n\n  // Creates a redirect Response that redirects to url with status status.\n  static redirect (url, status = 302) {\n    const relevantRealm = { settingsObject: {} }\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Response.redirect' })\n\n    url = webidl.converters.USVString(url)\n    status = webidl.converters['unsigned short'](status)\n\n    // 1. Let parsedURL be the result of parsing url with current settings\n    // object’s API base URL.\n    // 2. If parsedURL is failure, then throw a TypeError.\n    // TODO: base-URL?\n    let parsedURL\n    try {\n      parsedURL = new URL(url, getGlobalOrigin())\n    } catch (err) {\n      throw Object.assign(new TypeError('Failed to parse URL from ' + url), {\n        cause: err\n      })\n    }\n\n    // 3. If status is not a redirect status, then throw a RangeError.\n    if (!redirectStatusSet.has(status)) {\n      throw new RangeError('Invalid status code ' + status)\n    }\n\n    // 4. Let responseObject be the result of creating a Response object,\n    // given a new response, \"immutable\", and this’s relevant Realm.\n    const responseObject = new Response()\n    responseObject[kRealm] = relevantRealm\n    responseObject[kHeaders][kGuard] = 'immutable'\n    responseObject[kHeaders][kRealm] = relevantRealm\n\n    // 5. Set responseObject’s response’s status to status.\n    responseObject[kState].status = status\n\n    // 6. Let value be parsedURL, serialized and isomorphic encoded.\n    const value = isomorphicEncode(URLSerializer(parsedURL))\n\n    // 7. Append `Location`/value to responseObject’s response’s header list.\n    responseObject[kState].headersList.append('location', value)\n\n    // 8. Return responseObject.\n    return responseObject\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-response\n  constructor (body = null, init = {}) {\n    if (body !== null) {\n      body = webidl.converters.BodyInit(body)\n    }\n\n    init = webidl.converters.ResponseInit(init)\n\n    // TODO\n    this[kRealm] = { settingsObject: {} }\n\n    // 1. Set this’s response to a new response.\n    this[kState] = makeResponse({})\n\n    // 2. Set this’s headers to a new Headers object with this’s relevant\n    // Realm, whose header list is this’s response’s header list and guard\n    // is \"response\".\n    this[kHeaders] = new Headers()\n    this[kHeaders][kGuard] = 'response'\n    this[kHeaders][kHeadersList] = this[kState].headersList\n    this[kHeaders][kRealm] = this[kRealm]\n\n    // 3. Let bodyWithType be null.\n    let bodyWithType = null\n\n    // 4. If body is non-null, then set bodyWithType to the result of extracting body.\n    if (body != null) {\n      const [extractedBody, type] = extractBody(body)\n      bodyWithType = { body: extractedBody, type }\n    }\n\n    // 5. Perform initialize a response given this, init, and bodyWithType.\n    initializeResponse(this, init, bodyWithType)\n  }\n\n  // Returns response’s type, e.g., \"cors\".\n  get type () {\n    webidl.brandCheck(this, Response)\n\n    // The type getter steps are to return this’s response’s type.\n    return this[kState].type\n  }\n\n  // Returns response’s URL, if it has one; otherwise the empty string.\n  get url () {\n    webidl.brandCheck(this, Response)\n\n    const urlList = this[kState].urlList\n\n    // The url getter steps are to return the empty string if this’s\n    // response’s URL is null; otherwise this’s response’s URL,\n    // serialized with exclude fragment set to true.\n    const url = urlList[urlList.length - 1] ?? null\n\n    if (url === null) {\n      return ''\n    }\n\n    return URLSerializer(url, true)\n  }\n\n  // Returns whether response was obtained through a redirect.\n  get redirected () {\n    webidl.brandCheck(this, Response)\n\n    // The redirected getter steps are to return true if this’s response’s URL\n    // list has more than one item; otherwise false.\n    return this[kState].urlList.length > 1\n  }\n\n  // Returns response’s status.\n  get status () {\n    webidl.brandCheck(this, Response)\n\n    // The status getter steps are to return this’s response’s status.\n    return this[kState].status\n  }\n\n  // Returns whether response’s status is an ok status.\n  get ok () {\n    webidl.brandCheck(this, Response)\n\n    // The ok getter steps are to return true if this’s response’s status is an\n    // ok status; otherwise false.\n    return this[kState].status >= 200 && this[kState].status <= 299\n  }\n\n  // Returns response’s status message.\n  get statusText () {\n    webidl.brandCheck(this, Response)\n\n    // The statusText getter steps are to return this’s response’s status\n    // message.\n    return this[kState].statusText\n  }\n\n  // Returns response’s headers as Headers.\n  get headers () {\n    webidl.brandCheck(this, Response)\n\n    // The headers getter steps are to return this’s headers.\n    return this[kHeaders]\n  }\n\n  get body () {\n    webidl.brandCheck(this, Response)\n\n    return this[kState].body ? this[kState].body.stream : null\n  }\n\n  get bodyUsed () {\n    webidl.brandCheck(this, Response)\n\n    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)\n  }\n\n  // Returns a clone of response.\n  clone () {\n    webidl.brandCheck(this, Response)\n\n    // 1. If this is unusable, then throw a TypeError.\n    if (this.bodyUsed || (this.body && this.body.locked)) {\n      throw webidl.errors.exception({\n        header: 'Response.clone',\n        message: 'Body has already been consumed.'\n      })\n    }\n\n    // 2. Let clonedResponse be the result of cloning this’s response.\n    const clonedResponse = cloneResponse(this[kState])\n\n    // 3. Return the result of creating a Response object, given\n    // clonedResponse, this’s headers’s guard, and this’s relevant Realm.\n    const clonedResponseObject = new Response()\n    clonedResponseObject[kState] = clonedResponse\n    clonedResponseObject[kRealm] = this[kRealm]\n    clonedResponseObject[kHeaders][kHeadersList] = clonedResponse.headersList\n    clonedResponseObject[kHeaders][kGuard] = this[kHeaders][kGuard]\n    clonedResponseObject[kHeaders][kRealm] = this[kHeaders][kRealm]\n\n    return clonedResponseObject\n  }\n}\n\nmixinBody(Response)\n\nObject.defineProperties(Response.prototype, {\n  type: kEnumerableProperty,\n  url: kEnumerableProperty,\n  status: kEnumerableProperty,\n  ok: kEnumerableProperty,\n  redirected: kEnumerableProperty,\n  statusText: kEnumerableProperty,\n  headers: kEnumerableProperty,\n  clone: kEnumerableProperty,\n  body: kEnumerableProperty,\n  bodyUsed: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'Response',\n    configurable: true\n  }\n})\n\nObject.defineProperties(Response, {\n  json: kEnumerableProperty,\n  redirect: kEnumerableProperty,\n  error: kEnumerableProperty\n})\n\n// https://fetch.spec.whatwg.org/#concept-response-clone\nfunction cloneResponse (response) {\n  // To clone a response response, run these steps:\n\n  // 1. If response is a filtered response, then return a new identical\n  // filtered response whose internal response is a clone of response’s\n  // internal response.\n  if (response.internalResponse) {\n    return filterResponse(\n      cloneResponse(response.internalResponse),\n      response.type\n    )\n  }\n\n  // 2. Let newResponse be a copy of response, except for its body.\n  const newResponse = makeResponse({ ...response, body: null })\n\n  // 3. If response’s body is non-null, then set newResponse’s body to the\n  // result of cloning response’s body.\n  if (response.body != null) {\n    newResponse.body = cloneBody(response.body)\n  }\n\n  // 4. Return newResponse.\n  return newResponse\n}\n\nfunction makeResponse (init) {\n  return {\n    aborted: false,\n    rangeRequested: false,\n    timingAllowPassed: false,\n    requestIncludesCredentials: false,\n    type: 'default',\n    status: 200,\n    timingInfo: null,\n    cacheState: '',\n    statusText: '',\n    ...init,\n    headersList: init.headersList\n      ? new HeadersList(init.headersList)\n      : new HeadersList(),\n    urlList: init.urlList ? [...init.urlList] : []\n  }\n}\n\nfunction makeNetworkError (reason) {\n  const isError = isErrorLike(reason)\n  return makeResponse({\n    type: 'error',\n    status: 0,\n    error: isError\n      ? reason\n      : new Error(reason ? String(reason) : reason),\n    aborted: reason && reason.name === 'AbortError'\n  })\n}\n\nfunction makeFilteredResponse (response, state) {\n  state = {\n    internalResponse: response,\n    ...state\n  }\n\n  return new Proxy(response, {\n    get (target, p) {\n      return p in state ? state[p] : target[p]\n    },\n    set (target, p, value) {\n      assert(!(p in state))\n      target[p] = value\n      return true\n    }\n  })\n}\n\n// https://fetch.spec.whatwg.org/#concept-filtered-response\nfunction filterResponse (response, type) {\n  // Set response to the following filtered response with response as its\n  // internal response, depending on request’s response tainting:\n  if (type === 'basic') {\n    // A basic filtered response is a filtered response whose type is \"basic\"\n    // and header list excludes any headers in internal response’s header list\n    // whose name is a forbidden response-header name.\n\n    // Note: undici does not implement forbidden response-header names\n    return makeFilteredResponse(response, {\n      type: 'basic',\n      headersList: response.headersList\n    })\n  } else if (type === 'cors') {\n    // A CORS filtered response is a filtered response whose type is \"cors\"\n    // and header list excludes any headers in internal response’s header\n    // list whose name is not a CORS-safelisted response-header name, given\n    // internal response’s CORS-exposed header-name list.\n\n    // Note: undici does not implement CORS-safelisted response-header names\n    return makeFilteredResponse(response, {\n      type: 'cors',\n      headersList: response.headersList\n    })\n  } else if (type === 'opaque') {\n    // An opaque filtered response is a filtered response whose type is\n    // \"opaque\", URL list is the empty list, status is 0, status message\n    // is the empty byte sequence, header list is empty, and body is null.\n\n    return makeFilteredResponse(response, {\n      type: 'opaque',\n      urlList: Object.freeze([]),\n      status: 0,\n      statusText: '',\n      body: null\n    })\n  } else if (type === 'opaqueredirect') {\n    // An opaque-redirect filtered response is a filtered response whose type\n    // is \"opaqueredirect\", status is 0, status message is the empty byte\n    // sequence, header list is empty, and body is null.\n\n    return makeFilteredResponse(response, {\n      type: 'opaqueredirect',\n      status: 0,\n      statusText: '',\n      headersList: [],\n      body: null\n    })\n  } else {\n    assert(false)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#appropriate-network-error\nfunction makeAppropriateNetworkError (fetchParams, err = null) {\n  // 1. Assert: fetchParams is canceled.\n  assert(isCancelled(fetchParams))\n\n  // 2. Return an aborted network error if fetchParams is aborted;\n  // otherwise return a network error.\n  return isAborted(fetchParams)\n    ? makeNetworkError(Object.assign(new DOMException('The operation was aborted.', 'AbortError'), { cause: err }))\n    : makeNetworkError(Object.assign(new DOMException('Request was cancelled.'), { cause: err }))\n}\n\n// https://whatpr.org/fetch/1392.html#initialize-a-response\nfunction initializeResponse (response, init, body) {\n  // 1. If init[\"status\"] is not in the range 200 to 599, inclusive, then\n  //    throw a RangeError.\n  if (init.status !== null && (init.status < 200 || init.status > 599)) {\n    throw new RangeError('init[\"status\"] must be in the range of 200 to 599, inclusive.')\n  }\n\n  // 2. If init[\"statusText\"] does not match the reason-phrase token production,\n  //    then throw a TypeError.\n  if ('statusText' in init && init.statusText != null) {\n    // See, https://datatracker.ietf.org/doc/html/rfc7230#section-3.1.2:\n    //   reason-phrase  = *( HTAB / SP / VCHAR / obs-text )\n    if (!isValidReasonPhrase(String(init.statusText))) {\n      throw new TypeError('Invalid statusText')\n    }\n  }\n\n  // 3. Set response’s response’s status to init[\"status\"].\n  if ('status' in init && init.status != null) {\n    response[kState].status = init.status\n  }\n\n  // 4. Set response’s response’s status message to init[\"statusText\"].\n  if ('statusText' in init && init.statusText != null) {\n    response[kState].statusText = init.statusText\n  }\n\n  // 5. If init[\"headers\"] exists, then fill response’s headers with init[\"headers\"].\n  if ('headers' in init && init.headers != null) {\n    fill(response[kHeaders], init.headers)\n  }\n\n  // 6. If body was given, then:\n  if (body) {\n    // 1. If response's status is a null body status, then throw a TypeError.\n    if (nullBodyStatus.includes(response.status)) {\n      throw webidl.errors.exception({\n        header: 'Response constructor',\n        message: 'Invalid response status code ' + response.status\n      })\n    }\n\n    // 2. Set response's body to body's body.\n    response[kState].body = body.body\n\n    // 3. If body's type is non-null and response's header list does not contain\n    //    `Content-Type`, then append (`Content-Type`, body's type) to response's header list.\n    if (body.type != null && !response[kState].headersList.contains('Content-Type')) {\n      response[kState].headersList.append('content-type', body.type)\n    }\n  }\n}\n\nwebidl.converters.ReadableStream = webidl.interfaceConverter(\n  ReadableStream\n)\n\nwebidl.converters.FormData = webidl.interfaceConverter(\n  FormData\n)\n\nwebidl.converters.URLSearchParams = webidl.interfaceConverter(\n  URLSearchParams\n)\n\n// https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit\nwebidl.converters.XMLHttpRequestBodyInit = function (V) {\n  if (typeof V === 'string') {\n    return webidl.converters.USVString(V)\n  }\n\n  if (isBlobLike(V)) {\n    return webidl.converters.Blob(V, { strict: false })\n  }\n\n  if (\n    types.isAnyArrayBuffer(V) ||\n    types.isTypedArray(V) ||\n    types.isDataView(V)\n  ) {\n    return webidl.converters.BufferSource(V)\n  }\n\n  if (util.isFormDataLike(V)) {\n    return webidl.converters.FormData(V, { strict: false })\n  }\n\n  if (V instanceof URLSearchParams) {\n    return webidl.converters.URLSearchParams(V)\n  }\n\n  return webidl.converters.DOMString(V)\n}\n\n// https://fetch.spec.whatwg.org/#bodyinit\nwebidl.converters.BodyInit = function (V) {\n  if (V instanceof ReadableStream) {\n    return webidl.converters.ReadableStream(V)\n  }\n\n  // Note: the spec doesn't include async iterables,\n  // this is an undici extension.\n  if (V?.[Symbol.asyncIterator]) {\n    return V\n  }\n\n  return webidl.converters.XMLHttpRequestBodyInit(V)\n}\n\nwebidl.converters.ResponseInit = webidl.dictionaryConverter([\n  {\n    key: 'status',\n    converter: webidl.converters['unsigned short'],\n    defaultValue: 200\n  },\n  {\n    key: 'statusText',\n    converter: webidl.converters.ByteString,\n    defaultValue: ''\n  },\n  {\n    key: 'headers',\n    converter: webidl.converters.HeadersInit\n  }\n])\n\nmodule.exports = {\n  makeNetworkError,\n  makeResponse,\n  makeAppropriateNetworkError,\n  filterResponse,\n  Response,\n  cloneResponse\n}\n","/* globals AbortController */\n\n'use strict'\n\nconst { extractBody, mixinBody, cloneBody } = require('./body')\nconst { Headers, fill: fillHeaders, HeadersList } = require('./headers')\nconst { FinalizationRegistry } = require('../compat/dispatcher-weakref')()\nconst util = require('../core/util')\nconst {\n  isValidHTTPToken,\n  sameOrigin,\n  normalizeMethod,\n  makePolicyContainer\n} = require('./util')\nconst {\n  forbiddenMethodsSet,\n  corsSafeListedMethodsSet,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  requestDuplex\n} = require('./constants')\nconst { kEnumerableProperty } = util\nconst { kHeaders, kSignal, kState, kGuard, kRealm } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { getGlobalOrigin } = require('./global')\nconst { URLSerializer } = require('./dataURL')\nconst { kHeadersList } = require('../core/symbols')\nconst assert = require('assert')\nconst { getMaxListeners, setMaxListeners, getEventListeners, defaultMaxListeners } = require('events')\n\nlet TransformStream = globalThis.TransformStream\n\nconst kInit = Symbol('init')\nconst kAbortController = Symbol('abortController')\n\nconst requestFinalizer = new FinalizationRegistry(({ signal, abort }) => {\n  signal.removeEventListener('abort', abort)\n})\n\n// https://fetch.spec.whatwg.org/#request-class\nclass Request {\n  // https://fetch.spec.whatwg.org/#dom-request\n  constructor (input, init = {}) {\n    if (input === kInit) {\n      return\n    }\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Request constructor' })\n\n    input = webidl.converters.RequestInfo(input)\n    init = webidl.converters.RequestInit(init)\n\n    // https://html.spec.whatwg.org/multipage/webappapis.html#environment-settings-object\n    this[kRealm] = {\n      settingsObject: {\n        baseUrl: getGlobalOrigin(),\n        get origin () {\n          return this.baseUrl?.origin\n        },\n        policyContainer: makePolicyContainer()\n      }\n    }\n\n    // 1. Let request be null.\n    let request = null\n\n    // 2. Let fallbackMode be null.\n    let fallbackMode = null\n\n    // 3. Let baseURL be this’s relevant settings object’s API base URL.\n    const baseUrl = this[kRealm].settingsObject.baseUrl\n\n    // 4. Let signal be null.\n    let signal = null\n\n    // 5. If input is a string, then:\n    if (typeof input === 'string') {\n      // 1. Let parsedURL be the result of parsing input with baseURL.\n      // 2. If parsedURL is failure, then throw a TypeError.\n      let parsedURL\n      try {\n        parsedURL = new URL(input, baseUrl)\n      } catch (err) {\n        throw new TypeError('Failed to parse URL from ' + input, { cause: err })\n      }\n\n      // 3. If parsedURL includes credentials, then throw a TypeError.\n      if (parsedURL.username || parsedURL.password) {\n        throw new TypeError(\n          'Request cannot be constructed from a URL that includes credentials: ' +\n            input\n        )\n      }\n\n      // 4. Set request to a new request whose URL is parsedURL.\n      request = makeRequest({ urlList: [parsedURL] })\n\n      // 5. Set fallbackMode to \"cors\".\n      fallbackMode = 'cors'\n    } else {\n      // 6. Otherwise:\n\n      // 7. Assert: input is a Request object.\n      assert(input instanceof Request)\n\n      // 8. Set request to input’s request.\n      request = input[kState]\n\n      // 9. Set signal to input’s signal.\n      signal = input[kSignal]\n    }\n\n    // 7. Let origin be this’s relevant settings object’s origin.\n    const origin = this[kRealm].settingsObject.origin\n\n    // 8. Let window be \"client\".\n    let window = 'client'\n\n    // 9. If request’s window is an environment settings object and its origin\n    // is same origin with origin, then set window to request’s window.\n    if (\n      request.window?.constructor?.name === 'EnvironmentSettingsObject' &&\n      sameOrigin(request.window, origin)\n    ) {\n      window = request.window\n    }\n\n    // 10. If init[\"window\"] exists and is non-null, then throw a TypeError.\n    if (init.window != null) {\n      throw new TypeError(`'window' option '${window}' must be null`)\n    }\n\n    // 11. If init[\"window\"] exists, then set window to \"no-window\".\n    if ('window' in init) {\n      window = 'no-window'\n    }\n\n    // 12. Set request to a new request with the following properties:\n    request = makeRequest({\n      // URL request’s URL.\n      // undici implementation note: this is set as the first item in request's urlList in makeRequest\n      // method request’s method.\n      method: request.method,\n      // header list A copy of request’s header list.\n      // undici implementation note: headersList is cloned in makeRequest\n      headersList: request.headersList,\n      // unsafe-request flag Set.\n      unsafeRequest: request.unsafeRequest,\n      // client This’s relevant settings object.\n      client: this[kRealm].settingsObject,\n      // window window.\n      window,\n      // priority request’s priority.\n      priority: request.priority,\n      // origin request’s origin. The propagation of the origin is only significant for navigation requests\n      // being handled by a service worker. In this scenario a request can have an origin that is different\n      // from the current client.\n      origin: request.origin,\n      // referrer request’s referrer.\n      referrer: request.referrer,\n      // referrer policy request’s referrer policy.\n      referrerPolicy: request.referrerPolicy,\n      // mode request’s mode.\n      mode: request.mode,\n      // credentials mode request’s credentials mode.\n      credentials: request.credentials,\n      // cache mode request’s cache mode.\n      cache: request.cache,\n      // redirect mode request’s redirect mode.\n      redirect: request.redirect,\n      // integrity metadata request’s integrity metadata.\n      integrity: request.integrity,\n      // keepalive request’s keepalive.\n      keepalive: request.keepalive,\n      // reload-navigation flag request’s reload-navigation flag.\n      reloadNavigation: request.reloadNavigation,\n      // history-navigation flag request’s history-navigation flag.\n      historyNavigation: request.historyNavigation,\n      // URL list A clone of request’s URL list.\n      urlList: [...request.urlList]\n    })\n\n    // 13. If init is not empty, then:\n    if (Object.keys(init).length > 0) {\n      // 1. If request’s mode is \"navigate\", then set it to \"same-origin\".\n      if (request.mode === 'navigate') {\n        request.mode = 'same-origin'\n      }\n\n      // 2. Unset request’s reload-navigation flag.\n      request.reloadNavigation = false\n\n      // 3. Unset request’s history-navigation flag.\n      request.historyNavigation = false\n\n      // 4. Set request’s origin to \"client\".\n      request.origin = 'client'\n\n      // 5. Set request’s referrer to \"client\"\n      request.referrer = 'client'\n\n      // 6. Set request’s referrer policy to the empty string.\n      request.referrerPolicy = ''\n\n      // 7. Set request’s URL to request’s current URL.\n      request.url = request.urlList[request.urlList.length - 1]\n\n      // 8. Set request’s URL list to « request’s URL ».\n      request.urlList = [request.url]\n    }\n\n    // 14. If init[\"referrer\"] exists, then:\n    if (init.referrer !== undefined) {\n      // 1. Let referrer be init[\"referrer\"].\n      const referrer = init.referrer\n\n      // 2. If referrer is the empty string, then set request’s referrer to \"no-referrer\".\n      if (referrer === '') {\n        request.referrer = 'no-referrer'\n      } else {\n        // 1. Let parsedReferrer be the result of parsing referrer with\n        // baseURL.\n        // 2. If parsedReferrer is failure, then throw a TypeError.\n        let parsedReferrer\n        try {\n          parsedReferrer = new URL(referrer, baseUrl)\n        } catch (err) {\n          throw new TypeError(`Referrer \"${referrer}\" is not a valid URL.`, { cause: err })\n        }\n\n        // 3. If one of the following is true\n        // - parsedReferrer’s scheme is \"about\" and path is the string \"client\"\n        // - parsedReferrer’s origin is not same origin with origin\n        // then set request’s referrer to \"client\".\n        if (\n          (parsedReferrer.protocol === 'about:' && parsedReferrer.hostname === 'client') ||\n          (origin && !sameOrigin(parsedReferrer, this[kRealm].settingsObject.baseUrl))\n        ) {\n          request.referrer = 'client'\n        } else {\n          // 4. Otherwise, set request’s referrer to parsedReferrer.\n          request.referrer = parsedReferrer\n        }\n      }\n    }\n\n    // 15. If init[\"referrerPolicy\"] exists, then set request’s referrer policy\n    // to it.\n    if (init.referrerPolicy !== undefined) {\n      request.referrerPolicy = init.referrerPolicy\n    }\n\n    // 16. Let mode be init[\"mode\"] if it exists, and fallbackMode otherwise.\n    let mode\n    if (init.mode !== undefined) {\n      mode = init.mode\n    } else {\n      mode = fallbackMode\n    }\n\n    // 17. If mode is \"navigate\", then throw a TypeError.\n    if (mode === 'navigate') {\n      throw webidl.errors.exception({\n        header: 'Request constructor',\n        message: 'invalid request mode navigate.'\n      })\n    }\n\n    // 18. If mode is non-null, set request’s mode to mode.\n    if (mode != null) {\n      request.mode = mode\n    }\n\n    // 19. If init[\"credentials\"] exists, then set request’s credentials mode\n    // to it.\n    if (init.credentials !== undefined) {\n      request.credentials = init.credentials\n    }\n\n    // 18. If init[\"cache\"] exists, then set request’s cache mode to it.\n    if (init.cache !== undefined) {\n      request.cache = init.cache\n    }\n\n    // 21. If request’s cache mode is \"only-if-cached\" and request’s mode is\n    // not \"same-origin\", then throw a TypeError.\n    if (request.cache === 'only-if-cached' && request.mode !== 'same-origin') {\n      throw new TypeError(\n        \"'only-if-cached' can be set only with 'same-origin' mode\"\n      )\n    }\n\n    // 22. If init[\"redirect\"] exists, then set request’s redirect mode to it.\n    if (init.redirect !== undefined) {\n      request.redirect = init.redirect\n    }\n\n    // 23. If init[\"integrity\"] exists, then set request’s integrity metadata to it.\n    if (init.integrity !== undefined && init.integrity != null) {\n      request.integrity = String(init.integrity)\n    }\n\n    // 24. If init[\"keepalive\"] exists, then set request’s keepalive to it.\n    if (init.keepalive !== undefined) {\n      request.keepalive = Boolean(init.keepalive)\n    }\n\n    // 25. If init[\"method\"] exists, then:\n    if (init.method !== undefined) {\n      // 1. Let method be init[\"method\"].\n      let method = init.method\n\n      // 2. If method is not a method or method is a forbidden method, then\n      // throw a TypeError.\n      if (!isValidHTTPToken(init.method)) {\n        throw TypeError(`'${init.method}' is not a valid HTTP method.`)\n      }\n\n      if (forbiddenMethodsSet.has(method.toUpperCase())) {\n        throw TypeError(`'${init.method}' HTTP method is unsupported.`)\n      }\n\n      // 3. Normalize method.\n      method = normalizeMethod(init.method)\n\n      // 4. Set request’s method to method.\n      request.method = method\n    }\n\n    // 26. If init[\"signal\"] exists, then set signal to it.\n    if (init.signal !== undefined) {\n      signal = init.signal\n    }\n\n    // 27. Set this’s request to request.\n    this[kState] = request\n\n    // 28. Set this’s signal to a new AbortSignal object with this’s relevant\n    // Realm.\n    // TODO: could this be simplified with AbortSignal.any\n    // (https://dom.spec.whatwg.org/#dom-abortsignal-any)\n    const ac = new AbortController()\n    this[kSignal] = ac.signal\n    this[kSignal][kRealm] = this[kRealm]\n\n    // 29. If signal is not null, then make this’s signal follow signal.\n    if (signal != null) {\n      if (\n        !signal ||\n        typeof signal.aborted !== 'boolean' ||\n        typeof signal.addEventListener !== 'function'\n      ) {\n        throw new TypeError(\n          \"Failed to construct 'Request': member signal is not of type AbortSignal.\"\n        )\n      }\n\n      if (signal.aborted) {\n        ac.abort(signal.reason)\n      } else {\n        // Keep a strong ref to ac while request object\n        // is alive. This is needed to prevent AbortController\n        // from being prematurely garbage collected.\n        // See, https://github.com/nodejs/undici/issues/1926.\n        this[kAbortController] = ac\n\n        const acRef = new WeakRef(ac)\n        const abort = function () {\n          const ac = acRef.deref()\n          if (ac !== undefined) {\n            ac.abort(this.reason)\n          }\n        }\n\n        // Third-party AbortControllers may not work with these.\n        // See, https://github.com/nodejs/undici/pull/1910#issuecomment-1464495619.\n        try {\n          // If the max amount of listeners is equal to the default, increase it\n          // This is only available in node >= v19.9.0\n          if (typeof getMaxListeners === 'function' && getMaxListeners(signal) === defaultMaxListeners) {\n            setMaxListeners(100, signal)\n          } else if (getEventListeners(signal, 'abort').length >= defaultMaxListeners) {\n            setMaxListeners(100, signal)\n          }\n        } catch {}\n\n        util.addAbortListener(signal, abort)\n        requestFinalizer.register(ac, { signal, abort })\n      }\n    }\n\n    // 30. Set this’s headers to a new Headers object with this’s relevant\n    // Realm, whose header list is request’s header list and guard is\n    // \"request\".\n    this[kHeaders] = new Headers()\n    this[kHeaders][kHeadersList] = request.headersList\n    this[kHeaders][kGuard] = 'request'\n    this[kHeaders][kRealm] = this[kRealm]\n\n    // 31. If this’s request’s mode is \"no-cors\", then:\n    if (mode === 'no-cors') {\n      // 1. If this’s request’s method is not a CORS-safelisted method,\n      // then throw a TypeError.\n      if (!corsSafeListedMethodsSet.has(request.method)) {\n        throw new TypeError(\n          `'${request.method} is unsupported in no-cors mode.`\n        )\n      }\n\n      // 2. Set this’s headers’s guard to \"request-no-cors\".\n      this[kHeaders][kGuard] = 'request-no-cors'\n    }\n\n    // 32. If init is not empty, then:\n    if (Object.keys(init).length !== 0) {\n      // 1. Let headers be a copy of this’s headers and its associated header\n      // list.\n      let headers = new Headers(this[kHeaders])\n\n      // 2. If init[\"headers\"] exists, then set headers to init[\"headers\"].\n      if (init.headers !== undefined) {\n        headers = init.headers\n      }\n\n      // 3. Empty this’s headers’s header list.\n      this[kHeaders][kHeadersList].clear()\n\n      // 4. If headers is a Headers object, then for each header in its header\n      // list, append header’s name/header’s value to this’s headers.\n      if (headers.constructor.name === 'Headers') {\n        for (const [key, val] of headers) {\n          this[kHeaders].append(key, val)\n        }\n      } else {\n        // 5. Otherwise, fill this’s headers with headers.\n        fillHeaders(this[kHeaders], headers)\n      }\n    }\n\n    // 33. Let inputBody be input’s request’s body if input is a Request\n    // object; otherwise null.\n    const inputBody = input instanceof Request ? input[kState].body : null\n\n    // 34. If either init[\"body\"] exists and is non-null or inputBody is\n    // non-null, and request’s method is `GET` or `HEAD`, then throw a\n    // TypeError.\n    if (\n      (init.body != null || inputBody != null) &&\n      (request.method === 'GET' || request.method === 'HEAD')\n    ) {\n      throw new TypeError('Request with GET/HEAD method cannot have body.')\n    }\n\n    // 35. Let initBody be null.\n    let initBody = null\n\n    // 36. If init[\"body\"] exists and is non-null, then:\n    if (init.body != null) {\n      // 1. Let Content-Type be null.\n      // 2. Set initBody and Content-Type to the result of extracting\n      // init[\"body\"], with keepalive set to request’s keepalive.\n      const [extractedBody, contentType] = extractBody(\n        init.body,\n        request.keepalive\n      )\n      initBody = extractedBody\n\n      // 3, If Content-Type is non-null and this’s headers’s header list does\n      // not contain `Content-Type`, then append `Content-Type`/Content-Type to\n      // this’s headers.\n      if (contentType && !this[kHeaders][kHeadersList].contains('content-type')) {\n        this[kHeaders].append('content-type', contentType)\n      }\n    }\n\n    // 37. Let inputOrInitBody be initBody if it is non-null; otherwise\n    // inputBody.\n    const inputOrInitBody = initBody ?? inputBody\n\n    // 38. If inputOrInitBody is non-null and inputOrInitBody’s source is\n    // null, then:\n    if (inputOrInitBody != null && inputOrInitBody.source == null) {\n      // 1. If initBody is non-null and init[\"duplex\"] does not exist,\n      //    then throw a TypeError.\n      if (initBody != null && init.duplex == null) {\n        throw new TypeError('RequestInit: duplex option is required when sending a body.')\n      }\n\n      // 2. If this’s request’s mode is neither \"same-origin\" nor \"cors\",\n      // then throw a TypeError.\n      if (request.mode !== 'same-origin' && request.mode !== 'cors') {\n        throw new TypeError(\n          'If request is made from ReadableStream, mode should be \"same-origin\" or \"cors\"'\n        )\n      }\n\n      // 3. Set this’s request’s use-CORS-preflight flag.\n      request.useCORSPreflightFlag = true\n    }\n\n    // 39. Let finalBody be inputOrInitBody.\n    let finalBody = inputOrInitBody\n\n    // 40. If initBody is null and inputBody is non-null, then:\n    if (initBody == null && inputBody != null) {\n      // 1. If input is unusable, then throw a TypeError.\n      if (util.isDisturbed(inputBody.stream) || inputBody.stream.locked) {\n        throw new TypeError(\n          'Cannot construct a Request with a Request object that has already been used.'\n        )\n      }\n\n      // 2. Set finalBody to the result of creating a proxy for inputBody.\n      if (!TransformStream) {\n        TransformStream = require('stream/web').TransformStream\n      }\n\n      // https://streams.spec.whatwg.org/#readablestream-create-a-proxy\n      const identityTransform = new TransformStream()\n      inputBody.stream.pipeThrough(identityTransform)\n      finalBody = {\n        source: inputBody.source,\n        length: inputBody.length,\n        stream: identityTransform.readable\n      }\n    }\n\n    // 41. Set this’s request’s body to finalBody.\n    this[kState].body = finalBody\n  }\n\n  // Returns request’s HTTP method, which is \"GET\" by default.\n  get method () {\n    webidl.brandCheck(this, Request)\n\n    // The method getter steps are to return this’s request’s method.\n    return this[kState].method\n  }\n\n  // Returns the URL of request as a string.\n  get url () {\n    webidl.brandCheck(this, Request)\n\n    // The url getter steps are to return this’s request’s URL, serialized.\n    return URLSerializer(this[kState].url)\n  }\n\n  // Returns a Headers object consisting of the headers associated with request.\n  // Note that headers added in the network layer by the user agent will not\n  // be accounted for in this object, e.g., the \"Host\" header.\n  get headers () {\n    webidl.brandCheck(this, Request)\n\n    // The headers getter steps are to return this’s headers.\n    return this[kHeaders]\n  }\n\n  // Returns the kind of resource requested by request, e.g., \"document\"\n  // or \"script\".\n  get destination () {\n    webidl.brandCheck(this, Request)\n\n    // The destination getter are to return this’s request’s destination.\n    return this[kState].destination\n  }\n\n  // Returns the referrer of request. Its value can be a same-origin URL if\n  // explicitly set in init, the empty string to indicate no referrer, and\n  // \"about:client\" when defaulting to the global’s default. This is used\n  // during fetching to determine the value of the `Referer` header of the\n  // request being made.\n  get referrer () {\n    webidl.brandCheck(this, Request)\n\n    // 1. If this’s request’s referrer is \"no-referrer\", then return the\n    // empty string.\n    if (this[kState].referrer === 'no-referrer') {\n      return ''\n    }\n\n    // 2. If this’s request’s referrer is \"client\", then return\n    // \"about:client\".\n    if (this[kState].referrer === 'client') {\n      return 'about:client'\n    }\n\n    // Return this’s request’s referrer, serialized.\n    return this[kState].referrer.toString()\n  }\n\n  // Returns the referrer policy associated with request.\n  // This is used during fetching to compute the value of the request’s\n  // referrer.\n  get referrerPolicy () {\n    webidl.brandCheck(this, Request)\n\n    // The referrerPolicy getter steps are to return this’s request’s referrer policy.\n    return this[kState].referrerPolicy\n  }\n\n  // Returns the mode associated with request, which is a string indicating\n  // whether the request will use CORS, or will be restricted to same-origin\n  // URLs.\n  get mode () {\n    webidl.brandCheck(this, Request)\n\n    // The mode getter steps are to return this’s request’s mode.\n    return this[kState].mode\n  }\n\n  // Returns the credentials mode associated with request,\n  // which is a string indicating whether credentials will be sent with the\n  // request always, never, or only when sent to a same-origin URL.\n  get credentials () {\n    // The credentials getter steps are to return this’s request’s credentials mode.\n    return this[kState].credentials\n  }\n\n  // Returns the cache mode associated with request,\n  // which is a string indicating how the request will\n  // interact with the browser’s cache when fetching.\n  get cache () {\n    webidl.brandCheck(this, Request)\n\n    // The cache getter steps are to return this’s request’s cache mode.\n    return this[kState].cache\n  }\n\n  // Returns the redirect mode associated with request,\n  // which is a string indicating how redirects for the\n  // request will be handled during fetching. A request\n  // will follow redirects by default.\n  get redirect () {\n    webidl.brandCheck(this, Request)\n\n    // The redirect getter steps are to return this’s request’s redirect mode.\n    return this[kState].redirect\n  }\n\n  // Returns request’s subresource integrity metadata, which is a\n  // cryptographic hash of the resource being fetched. Its value\n  // consists of multiple hashes separated by whitespace. [SRI]\n  get integrity () {\n    webidl.brandCheck(this, Request)\n\n    // The integrity getter steps are to return this’s request’s integrity\n    // metadata.\n    return this[kState].integrity\n  }\n\n  // Returns a boolean indicating whether or not request can outlive the\n  // global in which it was created.\n  get keepalive () {\n    webidl.brandCheck(this, Request)\n\n    // The keepalive getter steps are to return this’s request’s keepalive.\n    return this[kState].keepalive\n  }\n\n  // Returns a boolean indicating whether or not request is for a reload\n  // navigation.\n  get isReloadNavigation () {\n    webidl.brandCheck(this, Request)\n\n    // The isReloadNavigation getter steps are to return true if this’s\n    // request’s reload-navigation flag is set; otherwise false.\n    return this[kState].reloadNavigation\n  }\n\n  // Returns a boolean indicating whether or not request is for a history\n  // navigation (a.k.a. back-foward navigation).\n  get isHistoryNavigation () {\n    webidl.brandCheck(this, Request)\n\n    // The isHistoryNavigation getter steps are to return true if this’s request’s\n    // history-navigation flag is set; otherwise false.\n    return this[kState].historyNavigation\n  }\n\n  // Returns the signal associated with request, which is an AbortSignal\n  // object indicating whether or not request has been aborted, and its\n  // abort event handler.\n  get signal () {\n    webidl.brandCheck(this, Request)\n\n    // The signal getter steps are to return this’s signal.\n    return this[kSignal]\n  }\n\n  get body () {\n    webidl.brandCheck(this, Request)\n\n    return this[kState].body ? this[kState].body.stream : null\n  }\n\n  get bodyUsed () {\n    webidl.brandCheck(this, Request)\n\n    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)\n  }\n\n  get duplex () {\n    webidl.brandCheck(this, Request)\n\n    return 'half'\n  }\n\n  // Returns a clone of request.\n  clone () {\n    webidl.brandCheck(this, Request)\n\n    // 1. If this is unusable, then throw a TypeError.\n    if (this.bodyUsed || this.body?.locked) {\n      throw new TypeError('unusable')\n    }\n\n    // 2. Let clonedRequest be the result of cloning this’s request.\n    const clonedRequest = cloneRequest(this[kState])\n\n    // 3. Let clonedRequestObject be the result of creating a Request object,\n    // given clonedRequest, this’s headers’s guard, and this’s relevant Realm.\n    const clonedRequestObject = new Request(kInit)\n    clonedRequestObject[kState] = clonedRequest\n    clonedRequestObject[kRealm] = this[kRealm]\n    clonedRequestObject[kHeaders] = new Headers()\n    clonedRequestObject[kHeaders][kHeadersList] = clonedRequest.headersList\n    clonedRequestObject[kHeaders][kGuard] = this[kHeaders][kGuard]\n    clonedRequestObject[kHeaders][kRealm] = this[kHeaders][kRealm]\n\n    // 4. Make clonedRequestObject’s signal follow this’s signal.\n    const ac = new AbortController()\n    if (this.signal.aborted) {\n      ac.abort(this.signal.reason)\n    } else {\n      util.addAbortListener(\n        this.signal,\n        () => {\n          ac.abort(this.signal.reason)\n        }\n      )\n    }\n    clonedRequestObject[kSignal] = ac.signal\n\n    // 4. Return clonedRequestObject.\n    return clonedRequestObject\n  }\n}\n\nmixinBody(Request)\n\nfunction makeRequest (init) {\n  // https://fetch.spec.whatwg.org/#requests\n  const request = {\n    method: 'GET',\n    localURLsOnly: false,\n    unsafeRequest: false,\n    body: null,\n    client: null,\n    reservedClient: null,\n    replacesClientId: '',\n    window: 'client',\n    keepalive: false,\n    serviceWorkers: 'all',\n    initiator: '',\n    destination: '',\n    priority: null,\n    origin: 'client',\n    policyContainer: 'client',\n    referrer: 'client',\n    referrerPolicy: '',\n    mode: 'no-cors',\n    useCORSPreflightFlag: false,\n    credentials: 'same-origin',\n    useCredentials: false,\n    cache: 'default',\n    redirect: 'follow',\n    integrity: '',\n    cryptoGraphicsNonceMetadata: '',\n    parserMetadata: '',\n    reloadNavigation: false,\n    historyNavigation: false,\n    userActivation: false,\n    taintedOrigin: false,\n    redirectCount: 0,\n    responseTainting: 'basic',\n    preventNoCacheCacheControlHeaderModification: false,\n    done: false,\n    timingAllowFailed: false,\n    ...init,\n    headersList: init.headersList\n      ? new HeadersList(init.headersList)\n      : new HeadersList()\n  }\n  request.url = request.urlList[0]\n  return request\n}\n\n// https://fetch.spec.whatwg.org/#concept-request-clone\nfunction cloneRequest (request) {\n  // To clone a request request, run these steps:\n\n  // 1. Let newRequest be a copy of request, except for its body.\n  const newRequest = makeRequest({ ...request, body: null })\n\n  // 2. If request’s body is non-null, set newRequest’s body to the\n  // result of cloning request’s body.\n  if (request.body != null) {\n    newRequest.body = cloneBody(request.body)\n  }\n\n  // 3. Return newRequest.\n  return newRequest\n}\n\nObject.defineProperties(Request.prototype, {\n  method: kEnumerableProperty,\n  url: kEnumerableProperty,\n  headers: kEnumerableProperty,\n  redirect: kEnumerableProperty,\n  clone: kEnumerableProperty,\n  signal: kEnumerableProperty,\n  duplex: kEnumerableProperty,\n  destination: kEnumerableProperty,\n  body: kEnumerableProperty,\n  bodyUsed: kEnumerableProperty,\n  isHistoryNavigation: kEnumerableProperty,\n  isReloadNavigation: kEnumerableProperty,\n  keepalive: kEnumerableProperty,\n  integrity: kEnumerableProperty,\n  cache: kEnumerableProperty,\n  credentials: kEnumerableProperty,\n  attribute: kEnumerableProperty,\n  referrerPolicy: kEnumerableProperty,\n  referrer: kEnumerableProperty,\n  mode: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'Request',\n    configurable: true\n  }\n})\n\nwebidl.converters.Request = webidl.interfaceConverter(\n  Request\n)\n\n// https://fetch.spec.whatwg.org/#requestinfo\nwebidl.converters.RequestInfo = function (V) {\n  if (typeof V === 'string') {\n    return webidl.converters.USVString(V)\n  }\n\n  if (V instanceof Request) {\n    return webidl.converters.Request(V)\n  }\n\n  return webidl.converters.USVString(V)\n}\n\nwebidl.converters.AbortSignal = webidl.interfaceConverter(\n  AbortSignal\n)\n\n// https://fetch.spec.whatwg.org/#requestinit\nwebidl.converters.RequestInit = webidl.dictionaryConverter([\n  {\n    key: 'method',\n    converter: webidl.converters.ByteString\n  },\n  {\n    key: 'headers',\n    converter: webidl.converters.HeadersInit\n  },\n  {\n    key: 'body',\n    converter: webidl.nullableConverter(\n      webidl.converters.BodyInit\n    )\n  },\n  {\n    key: 'referrer',\n    converter: webidl.converters.USVString\n  },\n  {\n    key: 'referrerPolicy',\n    converter: webidl.converters.DOMString,\n    // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy\n    allowedValues: referrerPolicy\n  },\n  {\n    key: 'mode',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#concept-request-mode\n    allowedValues: requestMode\n  },\n  {\n    key: 'credentials',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestcredentials\n    allowedValues: requestCredentials\n  },\n  {\n    key: 'cache',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestcache\n    allowedValues: requestCache\n  },\n  {\n    key: 'redirect',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestredirect\n    allowedValues: requestRedirect\n  },\n  {\n    key: 'integrity',\n    converter: webidl.converters.DOMString\n  },\n  {\n    key: 'keepalive',\n    converter: webidl.converters.boolean\n  },\n  {\n    key: 'signal',\n    converter: webidl.nullableConverter(\n      (signal) => webidl.converters.AbortSignal(\n        signal,\n        { strict: false }\n      )\n    )\n  },\n  {\n    key: 'window',\n    converter: webidl.converters.any\n  },\n  {\n    key: 'duplex',\n    converter: webidl.converters.DOMString,\n    allowedValues: requestDuplex\n  }\n])\n\nmodule.exports = { Request, makeRequest }\n","// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict'\n\nconst {\n  Response,\n  makeNetworkError,\n  makeAppropriateNetworkError,\n  filterResponse,\n  makeResponse\n} = require('./response')\nconst { Headers } = require('./headers')\nconst { Request, makeRequest } = require('./request')\nconst zlib = require('zlib')\nconst {\n  bytesMatch,\n  makePolicyContainer,\n  clonePolicyContainer,\n  requestBadPort,\n  TAOCheck,\n  appendRequestOriginHeader,\n  responseLocationURL,\n  requestCurrentURL,\n  setRequestReferrerPolicyOnRedirect,\n  tryUpgradeRequestToAPotentiallyTrustworthyURL,\n  createOpaqueTimingInfo,\n  appendFetchMetadata,\n  corsCheck,\n  crossOriginResourcePolicyCheck,\n  determineRequestsReferrer,\n  coarsenedSharedCurrentTime,\n  createDeferredPromise,\n  isBlobLike,\n  sameOrigin,\n  isCancelled,\n  isAborted,\n  isErrorLike,\n  fullyReadBody,\n  readableStreamClose,\n  isomorphicEncode,\n  urlIsLocal,\n  urlIsHttpHttpsScheme,\n  urlHasHttpsScheme\n} = require('./util')\nconst { kState, kHeaders, kGuard, kRealm } = require('./symbols')\nconst assert = require('assert')\nconst { safelyExtractBody } = require('./body')\nconst {\n  redirectStatusSet,\n  nullBodyStatus,\n  safeMethodsSet,\n  requestBodyHeader,\n  subresourceSet,\n  DOMException\n} = require('./constants')\nconst { kHeadersList } = require('../core/symbols')\nconst EE = require('events')\nconst { Readable, pipeline } = require('stream')\nconst { addAbortListener, isErrored, isReadable, nodeMajor, nodeMinor } = require('../core/util')\nconst { dataURLProcessor, serializeAMimeType } = require('./dataURL')\nconst { TransformStream } = require('stream/web')\nconst { getGlobalDispatcher } = require('../global')\nconst { webidl } = require('./webidl')\nconst { STATUS_CODES } = require('http')\nconst GET_OR_HEAD = ['GET', 'HEAD']\n\n/** @type {import('buffer').resolveObjectURL} */\nlet resolveObjectURL\nlet ReadableStream = globalThis.ReadableStream\n\nclass Fetch extends EE {\n  constructor (dispatcher) {\n    super()\n\n    this.dispatcher = dispatcher\n    this.connection = null\n    this.dump = false\n    this.state = 'ongoing'\n    // 2 terminated listeners get added per request,\n    // but only 1 gets removed. If there are 20 redirects,\n    // 21 listeners will be added.\n    // See https://github.com/nodejs/undici/issues/1711\n    // TODO (fix): Find and fix root cause for leaked listener.\n    this.setMaxListeners(21)\n  }\n\n  terminate (reason) {\n    if (this.state !== 'ongoing') {\n      return\n    }\n\n    this.state = 'terminated'\n    this.connection?.destroy(reason)\n    this.emit('terminated', reason)\n  }\n\n  // https://fetch.spec.whatwg.org/#fetch-controller-abort\n  abort (error) {\n    if (this.state !== 'ongoing') {\n      return\n    }\n\n    // 1. Set controller’s state to \"aborted\".\n    this.state = 'aborted'\n\n    // 2. Let fallbackError be an \"AbortError\" DOMException.\n    // 3. Set error to fallbackError if it is not given.\n    if (!error) {\n      error = new DOMException('The operation was aborted.', 'AbortError')\n    }\n\n    // 4. Let serializedError be StructuredSerialize(error).\n    //    If that threw an exception, catch it, and let\n    //    serializedError be StructuredSerialize(fallbackError).\n\n    // 5. Set controller’s serialized abort reason to serializedError.\n    this.serializedAbortReason = error\n\n    this.connection?.destroy(error)\n    this.emit('terminated', error)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#fetch-method\nfunction fetch (input, init = {}) {\n  webidl.argumentLengthCheck(arguments, 1, { header: 'globalThis.fetch' })\n\n  // 1. Let p be a new promise.\n  const p = createDeferredPromise()\n\n  // 2. Let requestObject be the result of invoking the initial value of\n  // Request as constructor with input and init as arguments. If this throws\n  // an exception, reject p with it and return p.\n  let requestObject\n\n  try {\n    requestObject = new Request(input, init)\n  } catch (e) {\n    p.reject(e)\n    return p.promise\n  }\n\n  // 3. Let request be requestObject’s request.\n  const request = requestObject[kState]\n\n  // 4. If requestObject’s signal’s aborted flag is set, then:\n  if (requestObject.signal.aborted) {\n    // 1. Abort the fetch() call with p, request, null, and\n    //    requestObject’s signal’s abort reason.\n    abortFetch(p, request, null, requestObject.signal.reason)\n\n    // 2. Return p.\n    return p.promise\n  }\n\n  // 5. Let globalObject be request’s client’s global object.\n  const globalObject = request.client.globalObject\n\n  // 6. If globalObject is a ServiceWorkerGlobalScope object, then set\n  // request’s service-workers mode to \"none\".\n  if (globalObject?.constructor?.name === 'ServiceWorkerGlobalScope') {\n    request.serviceWorkers = 'none'\n  }\n\n  // 7. Let responseObject be null.\n  let responseObject = null\n\n  // 8. Let relevantRealm be this’s relevant Realm.\n  const relevantRealm = null\n\n  // 9. Let locallyAborted be false.\n  let locallyAborted = false\n\n  // 10. Let controller be null.\n  let controller = null\n\n  // 11. Add the following abort steps to requestObject’s signal:\n  addAbortListener(\n    requestObject.signal,\n    () => {\n      // 1. Set locallyAborted to true.\n      locallyAborted = true\n\n      // 2. Assert: controller is non-null.\n      assert(controller != null)\n\n      // 3. Abort controller with requestObject’s signal’s abort reason.\n      controller.abort(requestObject.signal.reason)\n\n      // 4. Abort the fetch() call with p, request, responseObject,\n      //    and requestObject’s signal’s abort reason.\n      abortFetch(p, request, responseObject, requestObject.signal.reason)\n    }\n  )\n\n  // 12. Let handleFetchDone given response response be to finalize and\n  // report timing with response, globalObject, and \"fetch\".\n  const handleFetchDone = (response) =>\n    finalizeAndReportTiming(response, 'fetch')\n\n  // 13. Set controller to the result of calling fetch given request,\n  // with processResponseEndOfBody set to handleFetchDone, and processResponse\n  // given response being these substeps:\n\n  const processResponse = (response) => {\n    // 1. If locallyAborted is true, terminate these substeps.\n    if (locallyAborted) {\n      return Promise.resolve()\n    }\n\n    // 2. If response’s aborted flag is set, then:\n    if (response.aborted) {\n      // 1. Let deserializedError be the result of deserialize a serialized\n      //    abort reason given controller’s serialized abort reason and\n      //    relevantRealm.\n\n      // 2. Abort the fetch() call with p, request, responseObject, and\n      //    deserializedError.\n\n      abortFetch(p, request, responseObject, controller.serializedAbortReason)\n      return Promise.resolve()\n    }\n\n    // 3. If response is a network error, then reject p with a TypeError\n    // and terminate these substeps.\n    if (response.type === 'error') {\n      p.reject(\n        Object.assign(new TypeError('fetch failed'), { cause: response.error })\n      )\n      return Promise.resolve()\n    }\n\n    // 4. Set responseObject to the result of creating a Response object,\n    // given response, \"immutable\", and relevantRealm.\n    responseObject = new Response()\n    responseObject[kState] = response\n    responseObject[kRealm] = relevantRealm\n    responseObject[kHeaders][kHeadersList] = response.headersList\n    responseObject[kHeaders][kGuard] = 'immutable'\n    responseObject[kHeaders][kRealm] = relevantRealm\n\n    // 5. Resolve p with responseObject.\n    p.resolve(responseObject)\n  }\n\n  controller = fetching({\n    request,\n    processResponseEndOfBody: handleFetchDone,\n    processResponse,\n    dispatcher: init.dispatcher ?? getGlobalDispatcher() // undici\n  })\n\n  // 14. Return p.\n  return p.promise\n}\n\n// https://fetch.spec.whatwg.org/#finalize-and-report-timing\nfunction finalizeAndReportTiming (response, initiatorType = 'other') {\n  // 1. If response is an aborted network error, then return.\n  if (response.type === 'error' && response.aborted) {\n    return\n  }\n\n  // 2. If response’s URL list is null or empty, then return.\n  if (!response.urlList?.length) {\n    return\n  }\n\n  // 3. Let originalURL be response’s URL list[0].\n  const originalURL = response.urlList[0]\n\n  // 4. Let timingInfo be response’s timing info.\n  let timingInfo = response.timingInfo\n\n  // 5. Let cacheState be response’s cache state.\n  let cacheState = response.cacheState\n\n  // 6. If originalURL’s scheme is not an HTTP(S) scheme, then return.\n  if (!urlIsHttpHttpsScheme(originalURL)) {\n    return\n  }\n\n  // 7. If timingInfo is null, then return.\n  if (timingInfo === null) {\n    return\n  }\n\n  // 8. If response’s timing allow passed flag is not set, then:\n  if (!timingInfo.timingAllowPassed) {\n    //  1. Set timingInfo to a the result of creating an opaque timing info for timingInfo.\n    timingInfo = createOpaqueTimingInfo({\n      startTime: timingInfo.startTime\n    })\n\n    //  2. Set cacheState to the empty string.\n    cacheState = ''\n  }\n\n  // 9. Set timingInfo’s end time to the coarsened shared current time\n  // given global’s relevant settings object’s cross-origin isolated\n  // capability.\n  // TODO: given global’s relevant settings object’s cross-origin isolated\n  // capability?\n  timingInfo.endTime = coarsenedSharedCurrentTime()\n\n  // 10. Set response’s timing info to timingInfo.\n  response.timingInfo = timingInfo\n\n  // 11. Mark resource timing for timingInfo, originalURL, initiatorType,\n  // global, and cacheState.\n  markResourceTiming(\n    timingInfo,\n    originalURL,\n    initiatorType,\n    globalThis,\n    cacheState\n  )\n}\n\n// https://w3c.github.io/resource-timing/#dfn-mark-resource-timing\nfunction markResourceTiming (timingInfo, originalURL, initiatorType, globalThis, cacheState) {\n  if (nodeMajor > 18 || (nodeMajor === 18 && nodeMinor >= 2)) {\n    performance.markResourceTiming(timingInfo, originalURL.href, initiatorType, globalThis, cacheState)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#abort-fetch\nfunction abortFetch (p, request, responseObject, error) {\n  // Note: AbortSignal.reason was added in node v17.2.0\n  // which would give us an undefined error to reject with.\n  // Remove this once node v16 is no longer supported.\n  if (!error) {\n    error = new DOMException('The operation was aborted.', 'AbortError')\n  }\n\n  // 1. Reject promise with error.\n  p.reject(error)\n\n  // 2. If request’s body is not null and is readable, then cancel request’s\n  // body with error.\n  if (request.body != null && isReadable(request.body?.stream)) {\n    request.body.stream.cancel(error).catch((err) => {\n      if (err.code === 'ERR_INVALID_STATE') {\n        // Node bug?\n        return\n      }\n      throw err\n    })\n  }\n\n  // 3. If responseObject is null, then return.\n  if (responseObject == null) {\n    return\n  }\n\n  // 4. Let response be responseObject’s response.\n  const response = responseObject[kState]\n\n  // 5. If response’s body is not null and is readable, then error response’s\n  // body with error.\n  if (response.body != null && isReadable(response.body?.stream)) {\n    response.body.stream.cancel(error).catch((err) => {\n      if (err.code === 'ERR_INVALID_STATE') {\n        // Node bug?\n        return\n      }\n      throw err\n    })\n  }\n}\n\n// https://fetch.spec.whatwg.org/#fetching\nfunction fetching ({\n  request,\n  processRequestBodyChunkLength,\n  processRequestEndOfBody,\n  processResponse,\n  processResponseEndOfBody,\n  processResponseConsumeBody,\n  useParallelQueue = false,\n  dispatcher // undici\n}) {\n  // 1. Let taskDestination be null.\n  let taskDestination = null\n\n  // 2. Let crossOriginIsolatedCapability be false.\n  let crossOriginIsolatedCapability = false\n\n  // 3. If request’s client is non-null, then:\n  if (request.client != null) {\n    // 1. Set taskDestination to request’s client’s global object.\n    taskDestination = request.client.globalObject\n\n    // 2. Set crossOriginIsolatedCapability to request’s client’s cross-origin\n    // isolated capability.\n    crossOriginIsolatedCapability =\n      request.client.crossOriginIsolatedCapability\n  }\n\n  // 4. If useParallelQueue is true, then set taskDestination to the result of\n  // starting a new parallel queue.\n  // TODO\n\n  // 5. Let timingInfo be a new fetch timing info whose start time and\n  // post-redirect start time are the coarsened shared current time given\n  // crossOriginIsolatedCapability.\n  const currenTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability)\n  const timingInfo = createOpaqueTimingInfo({\n    startTime: currenTime\n  })\n\n  // 6. Let fetchParams be a new fetch params whose\n  // request is request,\n  // timing info is timingInfo,\n  // process request body chunk length is processRequestBodyChunkLength,\n  // process request end-of-body is processRequestEndOfBody,\n  // process response is processResponse,\n  // process response consume body is processResponseConsumeBody,\n  // process response end-of-body is processResponseEndOfBody,\n  // task destination is taskDestination,\n  // and cross-origin isolated capability is crossOriginIsolatedCapability.\n  const fetchParams = {\n    controller: new Fetch(dispatcher),\n    request,\n    timingInfo,\n    processRequestBodyChunkLength,\n    processRequestEndOfBody,\n    processResponse,\n    processResponseConsumeBody,\n    processResponseEndOfBody,\n    taskDestination,\n    crossOriginIsolatedCapability\n  }\n\n  // 7. If request’s body is a byte sequence, then set request’s body to\n  //    request’s body as a body.\n  // NOTE: Since fetching is only called from fetch, body should already be\n  // extracted.\n  assert(!request.body || request.body.stream)\n\n  // 8. If request’s window is \"client\", then set request’s window to request’s\n  // client, if request’s client’s global object is a Window object; otherwise\n  // \"no-window\".\n  if (request.window === 'client') {\n    // TODO: What if request.client is null?\n    request.window =\n      request.client?.globalObject?.constructor?.name === 'Window'\n        ? request.client\n        : 'no-window'\n  }\n\n  // 9. If request’s origin is \"client\", then set request’s origin to request’s\n  // client’s origin.\n  if (request.origin === 'client') {\n    // TODO: What if request.client is null?\n    request.origin = request.client?.origin\n  }\n\n  // 10. If all of the following conditions are true:\n  // TODO\n\n  // 11. If request’s policy container is \"client\", then:\n  if (request.policyContainer === 'client') {\n    // 1. If request’s client is non-null, then set request’s policy\n    // container to a clone of request’s client’s policy container. [HTML]\n    if (request.client != null) {\n      request.policyContainer = clonePolicyContainer(\n        request.client.policyContainer\n      )\n    } else {\n      // 2. Otherwise, set request’s policy container to a new policy\n      // container.\n      request.policyContainer = makePolicyContainer()\n    }\n  }\n\n  // 12. If request’s header list does not contain `Accept`, then:\n  if (!request.headersList.contains('accept')) {\n    // 1. Let value be `*/*`.\n    const value = '*/*'\n\n    // 2. A user agent should set value to the first matching statement, if\n    // any, switching on request’s destination:\n    // \"document\"\n    // \"frame\"\n    // \"iframe\"\n    // `text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8`\n    // \"image\"\n    // `image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5`\n    // \"style\"\n    // `text/css,*/*;q=0.1`\n    // TODO\n\n    // 3. Append `Accept`/value to request’s header list.\n    request.headersList.append('accept', value)\n  }\n\n  // 13. If request’s header list does not contain `Accept-Language`, then\n  // user agents should append `Accept-Language`/an appropriate value to\n  // request’s header list.\n  if (!request.headersList.contains('accept-language')) {\n    request.headersList.append('accept-language', '*')\n  }\n\n  // 14. If request’s priority is null, then use request’s initiator and\n  // destination appropriately in setting request’s priority to a\n  // user-agent-defined object.\n  if (request.priority === null) {\n    // TODO\n  }\n\n  // 15. If request is a subresource request, then:\n  if (subresourceSet.has(request.destination)) {\n    // TODO\n  }\n\n  // 16. Run main fetch given fetchParams.\n  mainFetch(fetchParams)\n    .catch(err => {\n      fetchParams.controller.terminate(err)\n    })\n\n  // 17. Return fetchParam's controller\n  return fetchParams.controller\n}\n\n// https://fetch.spec.whatwg.org/#concept-main-fetch\nasync function mainFetch (fetchParams, recursive = false) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. If request’s local-URLs-only flag is set and request’s current URL is\n  // not local, then set response to a network error.\n  if (request.localURLsOnly && !urlIsLocal(requestCurrentURL(request))) {\n    response = makeNetworkError('local URLs only')\n  }\n\n  // 4. Run report Content Security Policy violations for request.\n  // TODO\n\n  // 5. Upgrade request to a potentially trustworthy URL, if appropriate.\n  tryUpgradeRequestToAPotentiallyTrustworthyURL(request)\n\n  // 6. If should request be blocked due to a bad port, should fetching request\n  // be blocked as mixed content, or should request be blocked by Content\n  // Security Policy returns blocked, then set response to a network error.\n  if (requestBadPort(request) === 'blocked') {\n    response = makeNetworkError('bad port')\n  }\n  // TODO: should fetching request be blocked as mixed content?\n  // TODO: should request be blocked by Content Security Policy?\n\n  // 7. If request’s referrer policy is the empty string, then set request’s\n  // referrer policy to request’s policy container’s referrer policy.\n  if (request.referrerPolicy === '') {\n    request.referrerPolicy = request.policyContainer.referrerPolicy\n  }\n\n  // 8. If request’s referrer is not \"no-referrer\", then set request’s\n  // referrer to the result of invoking determine request’s referrer.\n  if (request.referrer !== 'no-referrer') {\n    request.referrer = determineRequestsReferrer(request)\n  }\n\n  // 9. Set request’s current URL’s scheme to \"https\" if all of the following\n  // conditions are true:\n  // - request’s current URL’s scheme is \"http\"\n  // - request’s current URL’s host is a domain\n  // - Matching request’s current URL’s host per Known HSTS Host Domain Name\n  //   Matching results in either a superdomain match with an asserted\n  //   includeSubDomains directive or a congruent match (with or without an\n  //   asserted includeSubDomains directive). [HSTS]\n  // TODO\n\n  // 10. If recursive is false, then run the remaining steps in parallel.\n  // TODO\n\n  // 11. If response is null, then set response to the result of running\n  // the steps corresponding to the first matching statement:\n  if (response === null) {\n    response = await (async () => {\n      const currentURL = requestCurrentURL(request)\n\n      if (\n        // - request’s current URL’s origin is same origin with request’s origin,\n        //   and request’s response tainting is \"basic\"\n        (sameOrigin(currentURL, request.url) && request.responseTainting === 'basic') ||\n        // request’s current URL’s scheme is \"data\"\n        (currentURL.protocol === 'data:') ||\n        // - request’s mode is \"navigate\" or \"websocket\"\n        (request.mode === 'navigate' || request.mode === 'websocket')\n      ) {\n        // 1. Set request’s response tainting to \"basic\".\n        request.responseTainting = 'basic'\n\n        // 2. Return the result of running scheme fetch given fetchParams.\n        return await schemeFetch(fetchParams)\n      }\n\n      // request’s mode is \"same-origin\"\n      if (request.mode === 'same-origin') {\n        // 1. Return a network error.\n        return makeNetworkError('request mode cannot be \"same-origin\"')\n      }\n\n      // request’s mode is \"no-cors\"\n      if (request.mode === 'no-cors') {\n        // 1. If request’s redirect mode is not \"follow\", then return a network\n        // error.\n        if (request.redirect !== 'follow') {\n          return makeNetworkError(\n            'redirect mode cannot be \"follow\" for \"no-cors\" request'\n          )\n        }\n\n        // 2. Set request’s response tainting to \"opaque\".\n        request.responseTainting = 'opaque'\n\n        // 3. Return the result of running scheme fetch given fetchParams.\n        return await schemeFetch(fetchParams)\n      }\n\n      // request’s current URL’s scheme is not an HTTP(S) scheme\n      if (!urlIsHttpHttpsScheme(requestCurrentURL(request))) {\n        // Return a network error.\n        return makeNetworkError('URL scheme must be a HTTP(S) scheme')\n      }\n\n      // - request’s use-CORS-preflight flag is set\n      // - request’s unsafe-request flag is set and either request’s method is\n      //   not a CORS-safelisted method or CORS-unsafe request-header names with\n      //   request’s header list is not empty\n      //    1. Set request’s response tainting to \"cors\".\n      //    2. Let corsWithPreflightResponse be the result of running HTTP fetch\n      //    given fetchParams and true.\n      //    3. If corsWithPreflightResponse is a network error, then clear cache\n      //    entries using request.\n      //    4. Return corsWithPreflightResponse.\n      // TODO\n\n      // Otherwise\n      //    1. Set request’s response tainting to \"cors\".\n      request.responseTainting = 'cors'\n\n      //    2. Return the result of running HTTP fetch given fetchParams.\n      return await httpFetch(fetchParams)\n    })()\n  }\n\n  // 12. If recursive is true, then return response.\n  if (recursive) {\n    return response\n  }\n\n  // 13. If response is not a network error and response is not a filtered\n  // response, then:\n  if (response.status !== 0 && !response.internalResponse) {\n    // If request’s response tainting is \"cors\", then:\n    if (request.responseTainting === 'cors') {\n      // 1. Let headerNames be the result of extracting header list values\n      // given `Access-Control-Expose-Headers` and response’s header list.\n      // TODO\n      // 2. If request’s credentials mode is not \"include\" and headerNames\n      // contains `*`, then set response’s CORS-exposed header-name list to\n      // all unique header names in response’s header list.\n      // TODO\n      // 3. Otherwise, if headerNames is not null or failure, then set\n      // response’s CORS-exposed header-name list to headerNames.\n      // TODO\n    }\n\n    // Set response to the following filtered response with response as its\n    // internal response, depending on request’s response tainting:\n    if (request.responseTainting === 'basic') {\n      response = filterResponse(response, 'basic')\n    } else if (request.responseTainting === 'cors') {\n      response = filterResponse(response, 'cors')\n    } else if (request.responseTainting === 'opaque') {\n      response = filterResponse(response, 'opaque')\n    } else {\n      assert(false)\n    }\n  }\n\n  // 14. Let internalResponse be response, if response is a network error,\n  // and response’s internal response otherwise.\n  let internalResponse =\n    response.status === 0 ? response : response.internalResponse\n\n  // 15. If internalResponse’s URL list is empty, then set it to a clone of\n  // request’s URL list.\n  if (internalResponse.urlList.length === 0) {\n    internalResponse.urlList.push(...request.urlList)\n  }\n\n  // 16. If request’s timing allow failed flag is unset, then set\n  // internalResponse’s timing allow passed flag.\n  if (!request.timingAllowFailed) {\n    response.timingAllowPassed = true\n  }\n\n  // 17. If response is not a network error and any of the following returns\n  // blocked\n  // - should internalResponse to request be blocked as mixed content\n  // - should internalResponse to request be blocked by Content Security Policy\n  // - should internalResponse to request be blocked due to its MIME type\n  // - should internalResponse to request be blocked due to nosniff\n  // TODO\n\n  // 18. If response’s type is \"opaque\", internalResponse’s status is 206,\n  // internalResponse’s range-requested flag is set, and request’s header\n  // list does not contain `Range`, then set response and internalResponse\n  // to a network error.\n  if (\n    response.type === 'opaque' &&\n    internalResponse.status === 206 &&\n    internalResponse.rangeRequested &&\n    !request.headers.contains('range')\n  ) {\n    response = internalResponse = makeNetworkError()\n  }\n\n  // 19. If response is not a network error and either request’s method is\n  // `HEAD` or `CONNECT`, or internalResponse’s status is a null body status,\n  // set internalResponse’s body to null and disregard any enqueuing toward\n  // it (if any).\n  if (\n    response.status !== 0 &&\n    (request.method === 'HEAD' ||\n      request.method === 'CONNECT' ||\n      nullBodyStatus.includes(internalResponse.status))\n  ) {\n    internalResponse.body = null\n    fetchParams.controller.dump = true\n  }\n\n  // 20. If request’s integrity metadata is not the empty string, then:\n  if (request.integrity) {\n    // 1. Let processBodyError be this step: run fetch finale given fetchParams\n    // and a network error.\n    const processBodyError = (reason) =>\n      fetchFinale(fetchParams, makeNetworkError(reason))\n\n    // 2. If request’s response tainting is \"opaque\", or response’s body is null,\n    // then run processBodyError and abort these steps.\n    if (request.responseTainting === 'opaque' || response.body == null) {\n      processBodyError(response.error)\n      return\n    }\n\n    // 3. Let processBody given bytes be these steps:\n    const processBody = (bytes) => {\n      // 1. If bytes do not match request’s integrity metadata,\n      // then run processBodyError and abort these steps. [SRI]\n      if (!bytesMatch(bytes, request.integrity)) {\n        processBodyError('integrity mismatch')\n        return\n      }\n\n      // 2. Set response’s body to bytes as a body.\n      response.body = safelyExtractBody(bytes)[0]\n\n      // 3. Run fetch finale given fetchParams and response.\n      fetchFinale(fetchParams, response)\n    }\n\n    // 4. Fully read response’s body given processBody and processBodyError.\n    await fullyReadBody(response.body, processBody, processBodyError)\n  } else {\n    // 21. Otherwise, run fetch finale given fetchParams and response.\n    fetchFinale(fetchParams, response)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#concept-scheme-fetch\n// given a fetch params fetchParams\nfunction schemeFetch (fetchParams) {\n  // Note: since the connection is destroyed on redirect, which sets fetchParams to a\n  // cancelled state, we do not want this condition to trigger *unless* there have been\n  // no redirects. See https://github.com/nodejs/undici/issues/1776\n  // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n  if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {\n    return Promise.resolve(makeAppropriateNetworkError(fetchParams))\n  }\n\n  // 2. Let request be fetchParams’s request.\n  const { request } = fetchParams\n\n  const { protocol: scheme } = requestCurrentURL(request)\n\n  // 3. Switch on request’s current URL’s scheme and run the associated steps:\n  switch (scheme) {\n    case 'about:': {\n      // If request’s current URL’s path is the string \"blank\", then return a new response\n      // whose status message is `OK`, header list is « (`Content-Type`, `text/html;charset=utf-8`) »,\n      // and body is the empty byte sequence as a body.\n\n      // Otherwise, return a network error.\n      return Promise.resolve(makeNetworkError('about scheme is not supported'))\n    }\n    case 'blob:': {\n      if (!resolveObjectURL) {\n        resolveObjectURL = require('buffer').resolveObjectURL\n      }\n\n      // 1. Let blobURLEntry be request’s current URL’s blob URL entry.\n      const blobURLEntry = requestCurrentURL(request)\n\n      // https://github.com/web-platform-tests/wpt/blob/7b0ebaccc62b566a1965396e5be7bb2bc06f841f/FileAPI/url/resources/fetch-tests.js#L52-L56\n      // Buffer.resolveObjectURL does not ignore URL queries.\n      if (blobURLEntry.search.length !== 0) {\n        return Promise.resolve(makeNetworkError('NetworkError when attempting to fetch resource.'))\n      }\n\n      const blobURLEntryObject = resolveObjectURL(blobURLEntry.toString())\n\n      // 2. If request’s method is not `GET`, blobURLEntry is null, or blobURLEntry’s\n      //    object is not a Blob object, then return a network error.\n      if (request.method !== 'GET' || !isBlobLike(blobURLEntryObject)) {\n        return Promise.resolve(makeNetworkError('invalid method'))\n      }\n\n      // 3. Let bodyWithType be the result of safely extracting blobURLEntry’s object.\n      const bodyWithType = safelyExtractBody(blobURLEntryObject)\n\n      // 4. Let body be bodyWithType’s body.\n      const body = bodyWithType[0]\n\n      // 5. Let length be body’s length, serialized and isomorphic encoded.\n      const length = isomorphicEncode(`${body.length}`)\n\n      // 6. Let type be bodyWithType’s type if it is non-null; otherwise the empty byte sequence.\n      const type = bodyWithType[1] ?? ''\n\n      // 7. Return a new response whose status message is `OK`, header list is\n      //    « (`Content-Length`, length), (`Content-Type`, type) », and body is body.\n      const response = makeResponse({\n        statusText: 'OK',\n        headersList: [\n          ['content-length', { name: 'Content-Length', value: length }],\n          ['content-type', { name: 'Content-Type', value: type }]\n        ]\n      })\n\n      response.body = body\n\n      return Promise.resolve(response)\n    }\n    case 'data:': {\n      // 1. Let dataURLStruct be the result of running the\n      //    data: URL processor on request’s current URL.\n      const currentURL = requestCurrentURL(request)\n      const dataURLStruct = dataURLProcessor(currentURL)\n\n      // 2. If dataURLStruct is failure, then return a\n      //    network error.\n      if (dataURLStruct === 'failure') {\n        return Promise.resolve(makeNetworkError('failed to fetch the data URL'))\n      }\n\n      // 3. Let mimeType be dataURLStruct’s MIME type, serialized.\n      const mimeType = serializeAMimeType(dataURLStruct.mimeType)\n\n      // 4. Return a response whose status message is `OK`,\n      //    header list is « (`Content-Type`, mimeType) »,\n      //    and body is dataURLStruct’s body as a body.\n      return Promise.resolve(makeResponse({\n        statusText: 'OK',\n        headersList: [\n          ['content-type', { name: 'Content-Type', value: mimeType }]\n        ],\n        body: safelyExtractBody(dataURLStruct.body)[0]\n      }))\n    }\n    case 'file:': {\n      // For now, unfortunate as it is, file URLs are left as an exercise for the reader.\n      // When in doubt, return a network error.\n      return Promise.resolve(makeNetworkError('not implemented... yet...'))\n    }\n    case 'http:':\n    case 'https:': {\n      // Return the result of running HTTP fetch given fetchParams.\n\n      return httpFetch(fetchParams)\n        .catch((err) => makeNetworkError(err))\n    }\n    default: {\n      return Promise.resolve(makeNetworkError('unknown scheme'))\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/#finalize-response\nfunction finalizeResponse (fetchParams, response) {\n  // 1. Set fetchParams’s request’s done flag.\n  fetchParams.request.done = true\n\n  // 2, If fetchParams’s process response done is not null, then queue a fetch\n  // task to run fetchParams’s process response done given response, with\n  // fetchParams’s task destination.\n  if (fetchParams.processResponseDone != null) {\n    queueMicrotask(() => fetchParams.processResponseDone(response))\n  }\n}\n\n// https://fetch.spec.whatwg.org/#fetch-finale\nfunction fetchFinale (fetchParams, response) {\n  // 1. If response is a network error, then:\n  if (response.type === 'error') {\n    // 1. Set response’s URL list to « fetchParams’s request’s URL list[0] ».\n    response.urlList = [fetchParams.request.urlList[0]]\n\n    // 2. Set response’s timing info to the result of creating an opaque timing\n    // info for fetchParams’s timing info.\n    response.timingInfo = createOpaqueTimingInfo({\n      startTime: fetchParams.timingInfo.startTime\n    })\n  }\n\n  // 2. Let processResponseEndOfBody be the following steps:\n  const processResponseEndOfBody = () => {\n    // 1. Set fetchParams’s request’s done flag.\n    fetchParams.request.done = true\n\n    // If fetchParams’s process response end-of-body is not null,\n    // then queue a fetch task to run fetchParams’s process response\n    // end-of-body given response with fetchParams’s task destination.\n    if (fetchParams.processResponseEndOfBody != null) {\n      queueMicrotask(() => fetchParams.processResponseEndOfBody(response))\n    }\n  }\n\n  // 3. If fetchParams’s process response is non-null, then queue a fetch task\n  // to run fetchParams’s process response given response, with fetchParams’s\n  // task destination.\n  if (fetchParams.processResponse != null) {\n    queueMicrotask(() => fetchParams.processResponse(response))\n  }\n\n  // 4. If response’s body is null, then run processResponseEndOfBody.\n  if (response.body == null) {\n    processResponseEndOfBody()\n  } else {\n  // 5. Otherwise:\n\n    // 1. Let transformStream be a new a TransformStream.\n\n    // 2. Let identityTransformAlgorithm be an algorithm which, given chunk,\n    // enqueues chunk in transformStream.\n    const identityTransformAlgorithm = (chunk, controller) => {\n      controller.enqueue(chunk)\n    }\n\n    // 3. Set up transformStream with transformAlgorithm set to identityTransformAlgorithm\n    // and flushAlgorithm set to processResponseEndOfBody.\n    const transformStream = new TransformStream({\n      start () {},\n      transform: identityTransformAlgorithm,\n      flush: processResponseEndOfBody\n    }, {\n      size () {\n        return 1\n      }\n    }, {\n      size () {\n        return 1\n      }\n    })\n\n    // 4. Set response’s body to the result of piping response’s body through transformStream.\n    response.body = { stream: response.body.stream.pipeThrough(transformStream) }\n  }\n\n  // 6. If fetchParams’s process response consume body is non-null, then:\n  if (fetchParams.processResponseConsumeBody != null) {\n    // 1. Let processBody given nullOrBytes be this step: run fetchParams’s\n    // process response consume body given response and nullOrBytes.\n    const processBody = (nullOrBytes) => fetchParams.processResponseConsumeBody(response, nullOrBytes)\n\n    // 2. Let processBodyError be this step: run fetchParams’s process\n    // response consume body given response and failure.\n    const processBodyError = (failure) => fetchParams.processResponseConsumeBody(response, failure)\n\n    // 3. If response’s body is null, then queue a fetch task to run processBody\n    // given null, with fetchParams’s task destination.\n    if (response.body == null) {\n      queueMicrotask(() => processBody(null))\n    } else {\n      // 4. Otherwise, fully read response’s body given processBody, processBodyError,\n      // and fetchParams’s task destination.\n      return fullyReadBody(response.body, processBody, processBodyError)\n    }\n    return Promise.resolve()\n  }\n}\n\n// https://fetch.spec.whatwg.org/#http-fetch\nasync function httpFetch (fetchParams) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. Let actualResponse be null.\n  let actualResponse = null\n\n  // 4. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 5. If request’s service-workers mode is \"all\", then:\n  if (request.serviceWorkers === 'all') {\n    // TODO\n  }\n\n  // 6. If response is null, then:\n  if (response === null) {\n    // 1. If makeCORSPreflight is true and one of these conditions is true:\n    // TODO\n\n    // 2. If request’s redirect mode is \"follow\", then set request’s\n    // service-workers mode to \"none\".\n    if (request.redirect === 'follow') {\n      request.serviceWorkers = 'none'\n    }\n\n    // 3. Set response and actualResponse to the result of running\n    // HTTP-network-or-cache fetch given fetchParams.\n    actualResponse = response = await httpNetworkOrCacheFetch(fetchParams)\n\n    // 4. If request’s response tainting is \"cors\" and a CORS check\n    // for request and response returns failure, then return a network error.\n    if (\n      request.responseTainting === 'cors' &&\n      corsCheck(request, response) === 'failure'\n    ) {\n      return makeNetworkError('cors failure')\n    }\n\n    // 5. If the TAO check for request and response returns failure, then set\n    // request’s timing allow failed flag.\n    if (TAOCheck(request, response) === 'failure') {\n      request.timingAllowFailed = true\n    }\n  }\n\n  // 7. If either request’s response tainting or response’s type\n  // is \"opaque\", and the cross-origin resource policy check with\n  // request’s origin, request’s client, request’s destination,\n  // and actualResponse returns blocked, then return a network error.\n  if (\n    (request.responseTainting === 'opaque' || response.type === 'opaque') &&\n    crossOriginResourcePolicyCheck(\n      request.origin,\n      request.client,\n      request.destination,\n      actualResponse\n    ) === 'blocked'\n  ) {\n    return makeNetworkError('blocked')\n  }\n\n  // 8. If actualResponse’s status is a redirect status, then:\n  if (redirectStatusSet.has(actualResponse.status)) {\n    // 1. If actualResponse’s status is not 303, request’s body is not null,\n    // and the connection uses HTTP/2, then user agents may, and are even\n    // encouraged to, transmit an RST_STREAM frame.\n    // See, https://github.com/whatwg/fetch/issues/1288\n    if (request.redirect !== 'manual') {\n      fetchParams.controller.connection.destroy()\n    }\n\n    // 2. Switch on request’s redirect mode:\n    if (request.redirect === 'error') {\n      // Set response to a network error.\n      response = makeNetworkError('unexpected redirect')\n    } else if (request.redirect === 'manual') {\n      // Set response to an opaque-redirect filtered response whose internal\n      // response is actualResponse.\n      // NOTE(spec): On the web this would return an `opaqueredirect` response,\n      // but that doesn't make sense server side.\n      // See https://github.com/nodejs/undici/issues/1193.\n      response = actualResponse\n    } else if (request.redirect === 'follow') {\n      // Set response to the result of running HTTP-redirect fetch given\n      // fetchParams and response.\n      response = await httpRedirectFetch(fetchParams, response)\n    } else {\n      assert(false)\n    }\n  }\n\n  // 9. Set response’s timing info to timingInfo.\n  response.timingInfo = timingInfo\n\n  // 10. Return response.\n  return response\n}\n\n// https://fetch.spec.whatwg.org/#http-redirect-fetch\nfunction httpRedirectFetch (fetchParams, response) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let actualResponse be response, if response is not a filtered response,\n  // and response’s internal response otherwise.\n  const actualResponse = response.internalResponse\n    ? response.internalResponse\n    : response\n\n  // 3. Let locationURL be actualResponse’s location URL given request’s current\n  // URL’s fragment.\n  let locationURL\n\n  try {\n    locationURL = responseLocationURL(\n      actualResponse,\n      requestCurrentURL(request).hash\n    )\n\n    // 4. If locationURL is null, then return response.\n    if (locationURL == null) {\n      return response\n    }\n  } catch (err) {\n    // 5. If locationURL is failure, then return a network error.\n    return Promise.resolve(makeNetworkError(err))\n  }\n\n  // 6. If locationURL’s scheme is not an HTTP(S) scheme, then return a network\n  // error.\n  if (!urlIsHttpHttpsScheme(locationURL)) {\n    return Promise.resolve(makeNetworkError('URL scheme must be a HTTP(S) scheme'))\n  }\n\n  // 7. If request’s redirect count is 20, then return a network error.\n  if (request.redirectCount === 20) {\n    return Promise.resolve(makeNetworkError('redirect count exceeded'))\n  }\n\n  // 8. Increase request’s redirect count by 1.\n  request.redirectCount += 1\n\n  // 9. If request’s mode is \"cors\", locationURL includes credentials, and\n  // request’s origin is not same origin with locationURL’s origin, then return\n  //  a network error.\n  if (\n    request.mode === 'cors' &&\n    (locationURL.username || locationURL.password) &&\n    !sameOrigin(request, locationURL)\n  ) {\n    return Promise.resolve(makeNetworkError('cross origin not allowed for request mode \"cors\"'))\n  }\n\n  // 10. If request’s response tainting is \"cors\" and locationURL includes\n  // credentials, then return a network error.\n  if (\n    request.responseTainting === 'cors' &&\n    (locationURL.username || locationURL.password)\n  ) {\n    return Promise.resolve(makeNetworkError(\n      'URL cannot contain credentials for request mode \"cors\"'\n    ))\n  }\n\n  // 11. If actualResponse’s status is not 303, request’s body is non-null,\n  // and request’s body’s source is null, then return a network error.\n  if (\n    actualResponse.status !== 303 &&\n    request.body != null &&\n    request.body.source == null\n  ) {\n    return Promise.resolve(makeNetworkError())\n  }\n\n  // 12. If one of the following is true\n  // - actualResponse’s status is 301 or 302 and request’s method is `POST`\n  // - actualResponse’s status is 303 and request’s method is not `GET` or `HEAD`\n  if (\n    ([301, 302].includes(actualResponse.status) && request.method === 'POST') ||\n    (actualResponse.status === 303 &&\n      !GET_OR_HEAD.includes(request.method))\n  ) {\n    // then:\n    // 1. Set request’s method to `GET` and request’s body to null.\n    request.method = 'GET'\n    request.body = null\n\n    // 2. For each headerName of request-body-header name, delete headerName from\n    // request’s header list.\n    for (const headerName of requestBodyHeader) {\n      request.headersList.delete(headerName)\n    }\n  }\n\n  // 13. If request’s current URL’s origin is not same origin with locationURL’s\n  //     origin, then for each headerName of CORS non-wildcard request-header name,\n  //     delete headerName from request’s header list.\n  if (!sameOrigin(requestCurrentURL(request), locationURL)) {\n    // https://fetch.spec.whatwg.org/#cors-non-wildcard-request-header-name\n    request.headersList.delete('authorization')\n\n    // \"Cookie\" and \"Host\" are forbidden request-headers, which undici doesn't implement.\n    request.headersList.delete('cookie')\n    request.headersList.delete('host')\n  }\n\n  // 14. If request’s body is non-null, then set request’s body to the first return\n  // value of safely extracting request’s body’s source.\n  if (request.body != null) {\n    assert(request.body.source != null)\n    request.body = safelyExtractBody(request.body.source)[0]\n  }\n\n  // 15. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 16. Set timingInfo’s redirect end time and post-redirect start time to the\n  // coarsened shared current time given fetchParams’s cross-origin isolated\n  // capability.\n  timingInfo.redirectEndTime = timingInfo.postRedirectStartTime =\n    coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability)\n\n  // 17. If timingInfo’s redirect start time is 0, then set timingInfo’s\n  //  redirect start time to timingInfo’s start time.\n  if (timingInfo.redirectStartTime === 0) {\n    timingInfo.redirectStartTime = timingInfo.startTime\n  }\n\n  // 18. Append locationURL to request’s URL list.\n  request.urlList.push(locationURL)\n\n  // 19. Invoke set request’s referrer policy on redirect on request and\n  // actualResponse.\n  setRequestReferrerPolicyOnRedirect(request, actualResponse)\n\n  // 20. Return the result of running main fetch given fetchParams and true.\n  return mainFetch(fetchParams, true)\n}\n\n// https://fetch.spec.whatwg.org/#http-network-or-cache-fetch\nasync function httpNetworkOrCacheFetch (\n  fetchParams,\n  isAuthenticationFetch = false,\n  isNewConnectionFetch = false\n) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let httpFetchParams be null.\n  let httpFetchParams = null\n\n  // 3. Let httpRequest be null.\n  let httpRequest = null\n\n  // 4. Let response be null.\n  let response = null\n\n  // 5. Let storedResponse be null.\n  // TODO: cache\n\n  // 6. Let httpCache be null.\n  const httpCache = null\n\n  // 7. Let the revalidatingFlag be unset.\n  const revalidatingFlag = false\n\n  // 8. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. If request’s window is \"no-window\" and request’s redirect mode is\n  //    \"error\", then set httpFetchParams to fetchParams and httpRequest to\n  //    request.\n  if (request.window === 'no-window' && request.redirect === 'error') {\n    httpFetchParams = fetchParams\n    httpRequest = request\n  } else {\n    // Otherwise:\n\n    // 1. Set httpRequest to a clone of request.\n    httpRequest = makeRequest(request)\n\n    // 2. Set httpFetchParams to a copy of fetchParams.\n    httpFetchParams = { ...fetchParams }\n\n    // 3. Set httpFetchParams’s request to httpRequest.\n    httpFetchParams.request = httpRequest\n  }\n\n  //    3. Let includeCredentials be true if one of\n  const includeCredentials =\n    request.credentials === 'include' ||\n    (request.credentials === 'same-origin' &&\n      request.responseTainting === 'basic')\n\n  //    4. Let contentLength be httpRequest’s body’s length, if httpRequest’s\n  //    body is non-null; otherwise null.\n  const contentLength = httpRequest.body ? httpRequest.body.length : null\n\n  //    5. Let contentLengthHeaderValue be null.\n  let contentLengthHeaderValue = null\n\n  //    6. If httpRequest’s body is null and httpRequest’s method is `POST` or\n  //    `PUT`, then set contentLengthHeaderValue to `0`.\n  if (\n    httpRequest.body == null &&\n    ['POST', 'PUT'].includes(httpRequest.method)\n  ) {\n    contentLengthHeaderValue = '0'\n  }\n\n  //    7. If contentLength is non-null, then set contentLengthHeaderValue to\n  //    contentLength, serialized and isomorphic encoded.\n  if (contentLength != null) {\n    contentLengthHeaderValue = isomorphicEncode(`${contentLength}`)\n  }\n\n  //    8. If contentLengthHeaderValue is non-null, then append\n  //    `Content-Length`/contentLengthHeaderValue to httpRequest’s header\n  //    list.\n  if (contentLengthHeaderValue != null) {\n    httpRequest.headersList.append('content-length', contentLengthHeaderValue)\n  }\n\n  //    9. If contentLengthHeaderValue is non-null, then append (`Content-Length`,\n  //    contentLengthHeaderValue) to httpRequest’s header list.\n\n  //    10. If contentLength is non-null and httpRequest’s keepalive is true,\n  //    then:\n  if (contentLength != null && httpRequest.keepalive) {\n    // NOTE: keepalive is a noop outside of browser context.\n  }\n\n  //    11. If httpRequest’s referrer is a URL, then append\n  //    `Referer`/httpRequest’s referrer, serialized and isomorphic encoded,\n  //     to httpRequest’s header list.\n  if (httpRequest.referrer instanceof URL) {\n    httpRequest.headersList.append('referer', isomorphicEncode(httpRequest.referrer.href))\n  }\n\n  //    12. Append a request `Origin` header for httpRequest.\n  appendRequestOriginHeader(httpRequest)\n\n  //    13. Append the Fetch metadata headers for httpRequest. [FETCH-METADATA]\n  appendFetchMetadata(httpRequest)\n\n  //    14. If httpRequest’s header list does not contain `User-Agent`, then\n  //    user agents should append `User-Agent`/default `User-Agent` value to\n  //    httpRequest’s header list.\n  if (!httpRequest.headersList.contains('user-agent')) {\n    httpRequest.headersList.append('user-agent', typeof esbuildDetection === 'undefined' ? 'undici' : 'node')\n  }\n\n  //    15. If httpRequest’s cache mode is \"default\" and httpRequest’s header\n  //    list contains `If-Modified-Since`, `If-None-Match`,\n  //    `If-Unmodified-Since`, `If-Match`, or `If-Range`, then set\n  //    httpRequest’s cache mode to \"no-store\".\n  if (\n    httpRequest.cache === 'default' &&\n    (httpRequest.headersList.contains('if-modified-since') ||\n      httpRequest.headersList.contains('if-none-match') ||\n      httpRequest.headersList.contains('if-unmodified-since') ||\n      httpRequest.headersList.contains('if-match') ||\n      httpRequest.headersList.contains('if-range'))\n  ) {\n    httpRequest.cache = 'no-store'\n  }\n\n  //    16. If httpRequest’s cache mode is \"no-cache\", httpRequest’s prevent\n  //    no-cache cache-control header modification flag is unset, and\n  //    httpRequest’s header list does not contain `Cache-Control`, then append\n  //    `Cache-Control`/`max-age=0` to httpRequest’s header list.\n  if (\n    httpRequest.cache === 'no-cache' &&\n    !httpRequest.preventNoCacheCacheControlHeaderModification &&\n    !httpRequest.headersList.contains('cache-control')\n  ) {\n    httpRequest.headersList.append('cache-control', 'max-age=0')\n  }\n\n  //    17. If httpRequest’s cache mode is \"no-store\" or \"reload\", then:\n  if (httpRequest.cache === 'no-store' || httpRequest.cache === 'reload') {\n    // 1. If httpRequest’s header list does not contain `Pragma`, then append\n    // `Pragma`/`no-cache` to httpRequest’s header list.\n    if (!httpRequest.headersList.contains('pragma')) {\n      httpRequest.headersList.append('pragma', 'no-cache')\n    }\n\n    // 2. If httpRequest’s header list does not contain `Cache-Control`,\n    // then append `Cache-Control`/`no-cache` to httpRequest’s header list.\n    if (!httpRequest.headersList.contains('cache-control')) {\n      httpRequest.headersList.append('cache-control', 'no-cache')\n    }\n  }\n\n  //    18. If httpRequest’s header list contains `Range`, then append\n  //    `Accept-Encoding`/`identity` to httpRequest’s header list.\n  if (httpRequest.headersList.contains('range')) {\n    httpRequest.headersList.append('accept-encoding', 'identity')\n  }\n\n  //    19. Modify httpRequest’s header list per HTTP. Do not append a given\n  //    header if httpRequest’s header list contains that header’s name.\n  //    TODO: https://github.com/whatwg/fetch/issues/1285#issuecomment-896560129\n  if (!httpRequest.headersList.contains('accept-encoding')) {\n    if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {\n      httpRequest.headersList.append('accept-encoding', 'br, gzip, deflate')\n    } else {\n      httpRequest.headersList.append('accept-encoding', 'gzip, deflate')\n    }\n  }\n\n  httpRequest.headersList.delete('host')\n\n  //    20. If includeCredentials is true, then:\n  if (includeCredentials) {\n    // 1. If the user agent is not configured to block cookies for httpRequest\n    // (see section 7 of [COOKIES]), then:\n    // TODO: credentials\n    // 2. If httpRequest’s header list does not contain `Authorization`, then:\n    // TODO: credentials\n  }\n\n  //    21. If there’s a proxy-authentication entry, use it as appropriate.\n  //    TODO: proxy-authentication\n\n  //    22. Set httpCache to the result of determining the HTTP cache\n  //    partition, given httpRequest.\n  //    TODO: cache\n\n  //    23. If httpCache is null, then set httpRequest’s cache mode to\n  //    \"no-store\".\n  if (httpCache == null) {\n    httpRequest.cache = 'no-store'\n  }\n\n  //    24. If httpRequest’s cache mode is neither \"no-store\" nor \"reload\",\n  //    then:\n  if (httpRequest.mode !== 'no-store' && httpRequest.mode !== 'reload') {\n    // TODO: cache\n  }\n\n  // 9. If aborted, then return the appropriate network error for fetchParams.\n  // TODO\n\n  // 10. If response is null, then:\n  if (response == null) {\n    // 1. If httpRequest’s cache mode is \"only-if-cached\", then return a\n    // network error.\n    if (httpRequest.mode === 'only-if-cached') {\n      return makeNetworkError('only if cached')\n    }\n\n    // 2. Let forwardResponse be the result of running HTTP-network fetch\n    // given httpFetchParams, includeCredentials, and isNewConnectionFetch.\n    const forwardResponse = await httpNetworkFetch(\n      httpFetchParams,\n      includeCredentials,\n      isNewConnectionFetch\n    )\n\n    // 3. If httpRequest’s method is unsafe and forwardResponse’s status is\n    // in the range 200 to 399, inclusive, invalidate appropriate stored\n    // responses in httpCache, as per the \"Invalidation\" chapter of HTTP\n    // Caching, and set storedResponse to null. [HTTP-CACHING]\n    if (\n      !safeMethodsSet.has(httpRequest.method) &&\n      forwardResponse.status >= 200 &&\n      forwardResponse.status <= 399\n    ) {\n      // TODO: cache\n    }\n\n    // 4. If the revalidatingFlag is set and forwardResponse’s status is 304,\n    // then:\n    if (revalidatingFlag && forwardResponse.status === 304) {\n      // TODO: cache\n    }\n\n    // 5. If response is null, then:\n    if (response == null) {\n      // 1. Set response to forwardResponse.\n      response = forwardResponse\n\n      // 2. Store httpRequest and forwardResponse in httpCache, as per the\n      // \"Storing Responses in Caches\" chapter of HTTP Caching. [HTTP-CACHING]\n      // TODO: cache\n    }\n  }\n\n  // 11. Set response’s URL list to a clone of httpRequest’s URL list.\n  response.urlList = [...httpRequest.urlList]\n\n  // 12. If httpRequest’s header list contains `Range`, then set response’s\n  // range-requested flag.\n  if (httpRequest.headersList.contains('range')) {\n    response.rangeRequested = true\n  }\n\n  // 13. Set response’s request-includes-credentials to includeCredentials.\n  response.requestIncludesCredentials = includeCredentials\n\n  // 14. If response’s status is 401, httpRequest’s response tainting is not\n  // \"cors\", includeCredentials is true, and request’s window is an environment\n  // settings object, then:\n  // TODO\n\n  // 15. If response’s status is 407, then:\n  if (response.status === 407) {\n    // 1. If request’s window is \"no-window\", then return a network error.\n    if (request.window === 'no-window') {\n      return makeNetworkError()\n    }\n\n    // 2. ???\n\n    // 3. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n    if (isCancelled(fetchParams)) {\n      return makeAppropriateNetworkError(fetchParams)\n    }\n\n    // 4. Prompt the end user as appropriate in request’s window and store\n    // the result as a proxy-authentication entry. [HTTP-AUTH]\n    // TODO: Invoke some kind of callback?\n\n    // 5. Set response to the result of running HTTP-network-or-cache fetch given\n    // fetchParams.\n    // TODO\n    return makeNetworkError('proxy authentication required')\n  }\n\n  // 16. If all of the following are true\n  if (\n    // response’s status is 421\n    response.status === 421 &&\n    // isNewConnectionFetch is false\n    !isNewConnectionFetch &&\n    // request’s body is null, or request’s body is non-null and request’s body’s source is non-null\n    (request.body == null || request.body.source != null)\n  ) {\n    // then:\n\n    // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n    if (isCancelled(fetchParams)) {\n      return makeAppropriateNetworkError(fetchParams)\n    }\n\n    // 2. Set response to the result of running HTTP-network-or-cache\n    // fetch given fetchParams, isAuthenticationFetch, and true.\n\n    // TODO (spec): The spec doesn't specify this but we need to cancel\n    // the active response before we can start a new one.\n    // https://github.com/whatwg/fetch/issues/1293\n    fetchParams.controller.connection.destroy()\n\n    response = await httpNetworkOrCacheFetch(\n      fetchParams,\n      isAuthenticationFetch,\n      true\n    )\n  }\n\n  // 17. If isAuthenticationFetch is true, then create an authentication entry\n  if (isAuthenticationFetch) {\n    // TODO\n  }\n\n  // 18. Return response.\n  return response\n}\n\n// https://fetch.spec.whatwg.org/#http-network-fetch\nasync function httpNetworkFetch (\n  fetchParams,\n  includeCredentials = false,\n  forceNewConnection = false\n) {\n  assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed)\n\n  fetchParams.controller.connection = {\n    abort: null,\n    destroyed: false,\n    destroy (err) {\n      if (!this.destroyed) {\n        this.destroyed = true\n        this.abort?.(err ?? new DOMException('The operation was aborted.', 'AbortError'))\n      }\n    }\n  }\n\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 4. Let httpCache be the result of determining the HTTP cache partition,\n  // given request.\n  // TODO: cache\n  const httpCache = null\n\n  // 5. If httpCache is null, then set request’s cache mode to \"no-store\".\n  if (httpCache == null) {\n    request.cache = 'no-store'\n  }\n\n  // 6. Let networkPartitionKey be the result of determining the network\n  // partition key given request.\n  // TODO\n\n  // 7. Let newConnection be \"yes\" if forceNewConnection is true; otherwise\n  // \"no\".\n  const newConnection = forceNewConnection ? 'yes' : 'no' // eslint-disable-line no-unused-vars\n\n  // 8. Switch on request’s mode:\n  if (request.mode === 'websocket') {\n    // Let connection be the result of obtaining a WebSocket connection,\n    // given request’s current URL.\n    // TODO\n  } else {\n    // Let connection be the result of obtaining a connection, given\n    // networkPartitionKey, request’s current URL’s origin,\n    // includeCredentials, and forceNewConnection.\n    // TODO\n  }\n\n  // 9. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. If connection is failure, then return a network error.\n\n  //    2. Set timingInfo’s final connection timing info to the result of\n  //    calling clamp and coarsen connection timing info with connection’s\n  //    timing info, timingInfo’s post-redirect start time, and fetchParams’s\n  //    cross-origin isolated capability.\n\n  //    3. If connection is not an HTTP/2 connection, request’s body is non-null,\n  //    and request’s body’s source is null, then append (`Transfer-Encoding`,\n  //    `chunked`) to request’s header list.\n\n  //    4. Set timingInfo’s final network-request start time to the coarsened\n  //    shared current time given fetchParams’s cross-origin isolated\n  //    capability.\n\n  //    5. Set response to the result of making an HTTP request over connection\n  //    using request with the following caveats:\n\n  //        - Follow the relevant requirements from HTTP. [HTTP] [HTTP-SEMANTICS]\n  //        [HTTP-COND] [HTTP-CACHING] [HTTP-AUTH]\n\n  //        - If request’s body is non-null, and request’s body’s source is null,\n  //        then the user agent may have a buffer of up to 64 kibibytes and store\n  //        a part of request’s body in that buffer. If the user agent reads from\n  //        request’s body beyond that buffer’s size and the user agent needs to\n  //        resend request, then instead return a network error.\n\n  //        - Set timingInfo’s final network-response start time to the coarsened\n  //        shared current time given fetchParams’s cross-origin isolated capability,\n  //        immediately after the user agent’s HTTP parser receives the first byte\n  //        of the response (e.g., frame header bytes for HTTP/2 or response status\n  //        line for HTTP/1.x).\n\n  //        - Wait until all the headers are transmitted.\n\n  //        - Any responses whose status is in the range 100 to 199, inclusive,\n  //        and is not 101, are to be ignored, except for the purposes of setting\n  //        timingInfo’s final network-response start time above.\n\n  //    - If request’s header list contains `Transfer-Encoding`/`chunked` and\n  //    response is transferred via HTTP/1.0 or older, then return a network\n  //    error.\n\n  //    - If the HTTP request results in a TLS client certificate dialog, then:\n\n  //        1. If request’s window is an environment settings object, make the\n  //        dialog available in request’s window.\n\n  //        2. Otherwise, return a network error.\n\n  // To transmit request’s body body, run these steps:\n  let requestBody = null\n  // 1. If body is null and fetchParams’s process request end-of-body is\n  // non-null, then queue a fetch task given fetchParams’s process request\n  // end-of-body and fetchParams’s task destination.\n  if (request.body == null && fetchParams.processRequestEndOfBody) {\n    queueMicrotask(() => fetchParams.processRequestEndOfBody())\n  } else if (request.body != null) {\n    // 2. Otherwise, if body is non-null:\n\n    //    1. Let processBodyChunk given bytes be these steps:\n    const processBodyChunk = async function * (bytes) {\n      // 1. If the ongoing fetch is terminated, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. Run this step in parallel: transmit bytes.\n      yield bytes\n\n      // 3. If fetchParams’s process request body is non-null, then run\n      // fetchParams’s process request body given bytes’s length.\n      fetchParams.processRequestBodyChunkLength?.(bytes.byteLength)\n    }\n\n    // 2. Let processEndOfBody be these steps:\n    const processEndOfBody = () => {\n      // 1. If fetchParams is canceled, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. If fetchParams’s process request end-of-body is non-null,\n      // then run fetchParams’s process request end-of-body.\n      if (fetchParams.processRequestEndOfBody) {\n        fetchParams.processRequestEndOfBody()\n      }\n    }\n\n    // 3. Let processBodyError given e be these steps:\n    const processBodyError = (e) => {\n      // 1. If fetchParams is canceled, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. If e is an \"AbortError\" DOMException, then abort fetchParams’s controller.\n      if (e.name === 'AbortError') {\n        fetchParams.controller.abort()\n      } else {\n        fetchParams.controller.terminate(e)\n      }\n    }\n\n    // 4. Incrementally read request’s body given processBodyChunk, processEndOfBody,\n    // processBodyError, and fetchParams’s task destination.\n    requestBody = (async function * () {\n      try {\n        for await (const bytes of request.body.stream) {\n          yield * processBodyChunk(bytes)\n        }\n        processEndOfBody()\n      } catch (err) {\n        processBodyError(err)\n      }\n    })()\n  }\n\n  try {\n    // socket is only provided for websockets\n    const { body, status, statusText, headersList, socket } = await dispatch({ body: requestBody })\n\n    if (socket) {\n      response = makeResponse({ status, statusText, headersList, socket })\n    } else {\n      const iterator = body[Symbol.asyncIterator]()\n      fetchParams.controller.next = () => iterator.next()\n\n      response = makeResponse({ status, statusText, headersList })\n    }\n  } catch (err) {\n    // 10. If aborted, then:\n    if (err.name === 'AbortError') {\n      // 1. If connection uses HTTP/2, then transmit an RST_STREAM frame.\n      fetchParams.controller.connection.destroy()\n\n      // 2. Return the appropriate network error for fetchParams.\n      return makeAppropriateNetworkError(fetchParams, err)\n    }\n\n    return makeNetworkError(err)\n  }\n\n  // 11. Let pullAlgorithm be an action that resumes the ongoing fetch\n  // if it is suspended.\n  const pullAlgorithm = () => {\n    fetchParams.controller.resume()\n  }\n\n  // 12. Let cancelAlgorithm be an algorithm that aborts fetchParams’s\n  // controller with reason, given reason.\n  const cancelAlgorithm = (reason) => {\n    fetchParams.controller.abort(reason)\n  }\n\n  // 13. Let highWaterMark be a non-negative, non-NaN number, chosen by\n  // the user agent.\n  // TODO\n\n  // 14. Let sizeAlgorithm be an algorithm that accepts a chunk object\n  // and returns a non-negative, non-NaN, non-infinite number, chosen by the user agent.\n  // TODO\n\n  // 15. Let stream be a new ReadableStream.\n  // 16. Set up stream with pullAlgorithm set to pullAlgorithm,\n  // cancelAlgorithm set to cancelAlgorithm, highWaterMark set to\n  // highWaterMark, and sizeAlgorithm set to sizeAlgorithm.\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  const stream = new ReadableStream(\n    {\n      async start (controller) {\n        fetchParams.controller.controller = controller\n      },\n      async pull (controller) {\n        await pullAlgorithm(controller)\n      },\n      async cancel (reason) {\n        await cancelAlgorithm(reason)\n      }\n    },\n    {\n      highWaterMark: 0,\n      size () {\n        return 1\n      }\n    }\n  )\n\n  // 17. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. Set response’s body to a new body whose stream is stream.\n  response.body = { stream }\n\n  //    2. If response is not a network error and request’s cache mode is\n  //    not \"no-store\", then update response in httpCache for request.\n  //    TODO\n\n  //    3. If includeCredentials is true and the user agent is not configured\n  //    to block cookies for request (see section 7 of [COOKIES]), then run the\n  //    \"set-cookie-string\" parsing algorithm (see section 5.2 of [COOKIES]) on\n  //    the value of each header whose name is a byte-case-insensitive match for\n  //    `Set-Cookie` in response’s header list, if any, and request’s current URL.\n  //    TODO\n\n  // 18. If aborted, then:\n  // TODO\n\n  // 19. Run these steps in parallel:\n\n  //    1. Run these steps, but abort when fetchParams is canceled:\n  fetchParams.controller.on('terminated', onAborted)\n  fetchParams.controller.resume = async () => {\n    // 1. While true\n    while (true) {\n      // 1-3. See onData...\n\n      // 4. Set bytes to the result of handling content codings given\n      // codings and bytes.\n      let bytes\n      let isFailure\n      try {\n        const { done, value } = await fetchParams.controller.next()\n\n        if (isAborted(fetchParams)) {\n          break\n        }\n\n        bytes = done ? undefined : value\n      } catch (err) {\n        if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {\n          // zlib doesn't like empty streams.\n          bytes = undefined\n        } else {\n          bytes = err\n\n          // err may be propagated from the result of calling readablestream.cancel,\n          // which might not be an error. https://github.com/nodejs/undici/issues/2009\n          isFailure = true\n        }\n      }\n\n      if (bytes === undefined) {\n        // 2. Otherwise, if the bytes transmission for response’s message\n        // body is done normally and stream is readable, then close\n        // stream, finalize response for fetchParams and response, and\n        // abort these in-parallel steps.\n        readableStreamClose(fetchParams.controller.controller)\n\n        finalizeResponse(fetchParams, response)\n\n        return\n      }\n\n      // 5. Increase timingInfo’s decoded body size by bytes’s length.\n      timingInfo.decodedBodySize += bytes?.byteLength ?? 0\n\n      // 6. If bytes is failure, then terminate fetchParams’s controller.\n      if (isFailure) {\n        fetchParams.controller.terminate(bytes)\n        return\n      }\n\n      // 7. Enqueue a Uint8Array wrapping an ArrayBuffer containing bytes\n      // into stream.\n      fetchParams.controller.controller.enqueue(new Uint8Array(bytes))\n\n      // 8. If stream is errored, then terminate the ongoing fetch.\n      if (isErrored(stream)) {\n        fetchParams.controller.terminate()\n        return\n      }\n\n      // 9. If stream doesn’t need more data ask the user agent to suspend\n      // the ongoing fetch.\n      if (!fetchParams.controller.controller.desiredSize) {\n        return\n      }\n    }\n  }\n\n  //    2. If aborted, then:\n  function onAborted (reason) {\n    // 2. If fetchParams is aborted, then:\n    if (isAborted(fetchParams)) {\n      // 1. Set response’s aborted flag.\n      response.aborted = true\n\n      // 2. If stream is readable, then error stream with the result of\n      //    deserialize a serialized abort reason given fetchParams’s\n      //    controller’s serialized abort reason and an\n      //    implementation-defined realm.\n      if (isReadable(stream)) {\n        fetchParams.controller.controller.error(\n          fetchParams.controller.serializedAbortReason\n        )\n      }\n    } else {\n      // 3. Otherwise, if stream is readable, error stream with a TypeError.\n      if (isReadable(stream)) {\n        fetchParams.controller.controller.error(new TypeError('terminated', {\n          cause: isErrorLike(reason) ? reason : undefined\n        }))\n      }\n    }\n\n    // 4. If connection uses HTTP/2, then transmit an RST_STREAM frame.\n    // 5. Otherwise, the user agent should close connection unless it would be bad for performance to do so.\n    fetchParams.controller.connection.destroy()\n  }\n\n  // 20. Return response.\n  return response\n\n  async function dispatch ({ body }) {\n    const url = requestCurrentURL(request)\n    /** @type {import('../..').Agent} */\n    const agent = fetchParams.controller.dispatcher\n\n    return new Promise((resolve, reject) => agent.dispatch(\n      {\n        path: url.pathname + url.search,\n        origin: url.origin,\n        method: request.method,\n        body: fetchParams.controller.dispatcher.isMockActive ? request.body && request.body.source : body,\n        headers: request.headersList.entries,\n        maxRedirections: 0,\n        upgrade: request.mode === 'websocket' ? 'websocket' : undefined\n      },\n      {\n        body: null,\n        abort: null,\n\n        onConnect (abort) {\n          // TODO (fix): Do we need connection here?\n          const { connection } = fetchParams.controller\n\n          if (connection.destroyed) {\n            abort(new DOMException('The operation was aborted.', 'AbortError'))\n          } else {\n            fetchParams.controller.on('terminated', abort)\n            this.abort = connection.abort = abort\n          }\n        },\n\n        onHeaders (status, headersList, resume, statusText) {\n          if (status < 200) {\n            return\n          }\n\n          let codings = []\n          let location = ''\n\n          const headers = new Headers()\n\n          // For H2, the headers are a plain JS object\n          // We distinguish between them and iterate accordingly\n          if (Array.isArray(headersList)) {\n            for (let n = 0; n < headersList.length; n += 2) {\n              const key = headersList[n + 0].toString('latin1')\n              const val = headersList[n + 1].toString('latin1')\n              if (key.toLowerCase() === 'content-encoding') {\n                // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1\n                // \"All content-coding values are case-insensitive...\"\n                codings = val.toLowerCase().split(',').map((x) => x.trim())\n              } else if (key.toLowerCase() === 'location') {\n                location = val\n              }\n\n              headers.append(key, val)\n            }\n          } else {\n            const keys = Object.keys(headersList)\n            for (const key of keys) {\n              const val = headersList[key]\n              if (key.toLowerCase() === 'content-encoding') {\n                // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1\n                // \"All content-coding values are case-insensitive...\"\n                codings = val.toLowerCase().split(',').map((x) => x.trim()).reverse()\n              } else if (key.toLowerCase() === 'location') {\n                location = val\n              }\n\n              headers.append(key, val)\n            }\n          }\n\n          this.body = new Readable({ read: resume })\n\n          const decoders = []\n\n          const willFollow = request.redirect === 'follow' &&\n            location &&\n            redirectStatusSet.has(status)\n\n          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding\n          if (request.method !== 'HEAD' && request.method !== 'CONNECT' && !nullBodyStatus.includes(status) && !willFollow) {\n            for (const coding of codings) {\n              // https://www.rfc-editor.org/rfc/rfc9112.html#section-7.2\n              if (coding === 'x-gzip' || coding === 'gzip') {\n                decoders.push(zlib.createGunzip({\n                  // Be less strict when decoding compressed responses, since sometimes\n                  // servers send slightly invalid responses that are still accepted\n                  // by common browsers.\n                  // Always using Z_SYNC_FLUSH is what cURL does.\n                  flush: zlib.constants.Z_SYNC_FLUSH,\n                  finishFlush: zlib.constants.Z_SYNC_FLUSH\n                }))\n              } else if (coding === 'deflate') {\n                decoders.push(zlib.createInflate())\n              } else if (coding === 'br') {\n                decoders.push(zlib.createBrotliDecompress())\n              } else {\n                decoders.length = 0\n                break\n              }\n            }\n          }\n\n          resolve({\n            status,\n            statusText,\n            headersList: headers[kHeadersList],\n            body: decoders.length\n              ? pipeline(this.body, ...decoders, () => { })\n              : this.body.on('error', () => {})\n          })\n\n          return true\n        },\n\n        onData (chunk) {\n          if (fetchParams.controller.dump) {\n            return\n          }\n\n          // 1. If one or more bytes have been transmitted from response’s\n          // message body, then:\n\n          //  1. Let bytes be the transmitted bytes.\n          const bytes = chunk\n\n          //  2. Let codings be the result of extracting header list values\n          //  given `Content-Encoding` and response’s header list.\n          //  See pullAlgorithm.\n\n          //  3. Increase timingInfo’s encoded body size by bytes’s length.\n          timingInfo.encodedBodySize += bytes.byteLength\n\n          //  4. See pullAlgorithm...\n\n          return this.body.push(bytes)\n        },\n\n        onComplete () {\n          if (this.abort) {\n            fetchParams.controller.off('terminated', this.abort)\n          }\n\n          fetchParams.controller.ended = true\n\n          this.body.push(null)\n        },\n\n        onError (error) {\n          if (this.abort) {\n            fetchParams.controller.off('terminated', this.abort)\n          }\n\n          this.body?.destroy(error)\n\n          fetchParams.controller.terminate(error)\n\n          reject(error)\n        },\n\n        onUpgrade (status, headersList, socket) {\n          if (status !== 101) {\n            return\n          }\n\n          const headers = new Headers()\n\n          for (let n = 0; n < headersList.length; n += 2) {\n            const key = headersList[n + 0].toString('latin1')\n            const val = headersList[n + 1].toString('latin1')\n\n            headers.append(key, val)\n          }\n\n          resolve({\n            status,\n            statusText: STATUS_CODES[status],\n            headersList: headers[kHeadersList],\n            socket\n          })\n\n          return true\n        }\n      }\n    ))\n  }\n}\n\nmodule.exports = {\n  fetch,\n  Fetch,\n  fetching,\n  finalizeAndReportTiming\n}\n","'use strict'\n\nmodule.exports = {\n  kState: Symbol('FileReader state'),\n  kResult: Symbol('FileReader result'),\n  kError: Symbol('FileReader error'),\n  kLastProgressEventFired: Symbol('FileReader last progress event fired timestamp'),\n  kEvents: Symbol('FileReader events'),\n  kAborted: Symbol('FileReader aborted')\n}\n","'use strict'\n\nconst { webidl } = require('../fetch/webidl')\n\nconst kState = Symbol('ProgressEvent state')\n\n/**\n * @see https://xhr.spec.whatwg.org/#progressevent\n */\nclass ProgressEvent extends Event {\n  constructor (type, eventInitDict = {}) {\n    type = webidl.converters.DOMString(type)\n    eventInitDict = webidl.converters.ProgressEventInit(eventInitDict ?? {})\n\n    super(type, eventInitDict)\n\n    this[kState] = {\n      lengthComputable: eventInitDict.lengthComputable,\n      loaded: eventInitDict.loaded,\n      total: eventInitDict.total\n    }\n  }\n\n  get lengthComputable () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].lengthComputable\n  }\n\n  get loaded () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].loaded\n  }\n\n  get total () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].total\n  }\n}\n\nwebidl.converters.ProgressEventInit = webidl.dictionaryConverter([\n  {\n    key: 'lengthComputable',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'loaded',\n    converter: webidl.converters['unsigned long long'],\n    defaultValue: 0\n  },\n  {\n    key: 'total',\n    converter: webidl.converters['unsigned long long'],\n    defaultValue: 0\n  },\n  {\n    key: 'bubbles',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'cancelable',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'composed',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  }\n])\n\nmodule.exports = {\n  ProgressEvent\n}\n","'use strict'\n\n/**\n * @see https://encoding.spec.whatwg.org/#concept-encoding-get\n * @param {string|undefined} label\n */\nfunction getEncoding (label) {\n  if (!label) {\n    return 'failure'\n  }\n\n  // 1. Remove any leading and trailing ASCII whitespace from label.\n  // 2. If label is an ASCII case-insensitive match for any of the\n  //    labels listed in the table below, then return the\n  //    corresponding encoding; otherwise return failure.\n  switch (label.trim().toLowerCase()) {\n    case 'unicode-1-1-utf-8':\n    case 'unicode11utf8':\n    case 'unicode20utf8':\n    case 'utf-8':\n    case 'utf8':\n    case 'x-unicode20utf8':\n      return 'UTF-8'\n    case '866':\n    case 'cp866':\n    case 'csibm866':\n    case 'ibm866':\n      return 'IBM866'\n    case 'csisolatin2':\n    case 'iso-8859-2':\n    case 'iso-ir-101':\n    case 'iso8859-2':\n    case 'iso88592':\n    case 'iso_8859-2':\n    case 'iso_8859-2:1987':\n    case 'l2':\n    case 'latin2':\n      return 'ISO-8859-2'\n    case 'csisolatin3':\n    case 'iso-8859-3':\n    case 'iso-ir-109':\n    case 'iso8859-3':\n    case 'iso88593':\n    case 'iso_8859-3':\n    case 'iso_8859-3:1988':\n    case 'l3':\n    case 'latin3':\n      return 'ISO-8859-3'\n    case 'csisolatin4':\n    case 'iso-8859-4':\n    case 'iso-ir-110':\n    case 'iso8859-4':\n    case 'iso88594':\n    case 'iso_8859-4':\n    case 'iso_8859-4:1988':\n    case 'l4':\n    case 'latin4':\n      return 'ISO-8859-4'\n    case 'csisolatincyrillic':\n    case 'cyrillic':\n    case 'iso-8859-5':\n    case 'iso-ir-144':\n    case 'iso8859-5':\n    case 'iso88595':\n    case 'iso_8859-5':\n    case 'iso_8859-5:1988':\n      return 'ISO-8859-5'\n    case 'arabic':\n    case 'asmo-708':\n    case 'csiso88596e':\n    case 'csiso88596i':\n    case 'csisolatinarabic':\n    case 'ecma-114':\n    case 'iso-8859-6':\n    case 'iso-8859-6-e':\n    case 'iso-8859-6-i':\n    case 'iso-ir-127':\n    case 'iso8859-6':\n    case 'iso88596':\n    case 'iso_8859-6':\n    case 'iso_8859-6:1987':\n      return 'ISO-8859-6'\n    case 'csisolatingreek':\n    case 'ecma-118':\n    case 'elot_928':\n    case 'greek':\n    case 'greek8':\n    case 'iso-8859-7':\n    case 'iso-ir-126':\n    case 'iso8859-7':\n    case 'iso88597':\n    case 'iso_8859-7':\n    case 'iso_8859-7:1987':\n    case 'sun_eu_greek':\n      return 'ISO-8859-7'\n    case 'csiso88598e':\n    case 'csisolatinhebrew':\n    case 'hebrew':\n    case 'iso-8859-8':\n    case 'iso-8859-8-e':\n    case 'iso-ir-138':\n    case 'iso8859-8':\n    case 'iso88598':\n    case 'iso_8859-8':\n    case 'iso_8859-8:1988':\n    case 'visual':\n      return 'ISO-8859-8'\n    case 'csiso88598i':\n    case 'iso-8859-8-i':\n    case 'logical':\n      return 'ISO-8859-8-I'\n    case 'csisolatin6':\n    case 'iso-8859-10':\n    case 'iso-ir-157':\n    case 'iso8859-10':\n    case 'iso885910':\n    case 'l6':\n    case 'latin6':\n      return 'ISO-8859-10'\n    case 'iso-8859-13':\n    case 'iso8859-13':\n    case 'iso885913':\n      return 'ISO-8859-13'\n    case 'iso-8859-14':\n    case 'iso8859-14':\n    case 'iso885914':\n      return 'ISO-8859-14'\n    case 'csisolatin9':\n    case 'iso-8859-15':\n    case 'iso8859-15':\n    case 'iso885915':\n    case 'iso_8859-15':\n    case 'l9':\n      return 'ISO-8859-15'\n    case 'iso-8859-16':\n      return 'ISO-8859-16'\n    case 'cskoi8r':\n    case 'koi':\n    case 'koi8':\n    case 'koi8-r':\n    case 'koi8_r':\n      return 'KOI8-R'\n    case 'koi8-ru':\n    case 'koi8-u':\n      return 'KOI8-U'\n    case 'csmacintosh':\n    case 'mac':\n    case 'macintosh':\n    case 'x-mac-roman':\n      return 'macintosh'\n    case 'iso-8859-11':\n    case 'iso8859-11':\n    case 'iso885911':\n    case 'tis-620':\n    case 'windows-874':\n      return 'windows-874'\n    case 'cp1250':\n    case 'windows-1250':\n    case 'x-cp1250':\n      return 'windows-1250'\n    case 'cp1251':\n    case 'windows-1251':\n    case 'x-cp1251':\n      return 'windows-1251'\n    case 'ansi_x3.4-1968':\n    case 'ascii':\n    case 'cp1252':\n    case 'cp819':\n    case 'csisolatin1':\n    case 'ibm819':\n    case 'iso-8859-1':\n    case 'iso-ir-100':\n    case 'iso8859-1':\n    case 'iso88591':\n    case 'iso_8859-1':\n    case 'iso_8859-1:1987':\n    case 'l1':\n    case 'latin1':\n    case 'us-ascii':\n    case 'windows-1252':\n    case 'x-cp1252':\n      return 'windows-1252'\n    case 'cp1253':\n    case 'windows-1253':\n    case 'x-cp1253':\n      return 'windows-1253'\n    case 'cp1254':\n    case 'csisolatin5':\n    case 'iso-8859-9':\n    case 'iso-ir-148':\n    case 'iso8859-9':\n    case 'iso88599':\n    case 'iso_8859-9':\n    case 'iso_8859-9:1989':\n    case 'l5':\n    case 'latin5':\n    case 'windows-1254':\n    case 'x-cp1254':\n      return 'windows-1254'\n    case 'cp1255':\n    case 'windows-1255':\n    case 'x-cp1255':\n      return 'windows-1255'\n    case 'cp1256':\n    case 'windows-1256':\n    case 'x-cp1256':\n      return 'windows-1256'\n    case 'cp1257':\n    case 'windows-1257':\n    case 'x-cp1257':\n      return 'windows-1257'\n    case 'cp1258':\n    case 'windows-1258':\n    case 'x-cp1258':\n      return 'windows-1258'\n    case 'x-mac-cyrillic':\n    case 'x-mac-ukrainian':\n      return 'x-mac-cyrillic'\n    case 'chinese':\n    case 'csgb2312':\n    case 'csiso58gb231280':\n    case 'gb2312':\n    case 'gb_2312':\n    case 'gb_2312-80':\n    case 'gbk':\n    case 'iso-ir-58':\n    case 'x-gbk':\n      return 'GBK'\n    case 'gb18030':\n      return 'gb18030'\n    case 'big5':\n    case 'big5-hkscs':\n    case 'cn-big5':\n    case 'csbig5':\n    case 'x-x-big5':\n      return 'Big5'\n    case 'cseucpkdfmtjapanese':\n    case 'euc-jp':\n    case 'x-euc-jp':\n      return 'EUC-JP'\n    case 'csiso2022jp':\n    case 'iso-2022-jp':\n      return 'ISO-2022-JP'\n    case 'csshiftjis':\n    case 'ms932':\n    case 'ms_kanji':\n    case 'shift-jis':\n    case 'shift_jis':\n    case 'sjis':\n    case 'windows-31j':\n    case 'x-sjis':\n      return 'Shift_JIS'\n    case 'cseuckr':\n    case 'csksc56011987':\n    case 'euc-kr':\n    case 'iso-ir-149':\n    case 'korean':\n    case 'ks_c_5601-1987':\n    case 'ks_c_5601-1989':\n    case 'ksc5601':\n    case 'ksc_5601':\n    case 'windows-949':\n      return 'EUC-KR'\n    case 'csiso2022kr':\n    case 'hz-gb-2312':\n    case 'iso-2022-cn':\n    case 'iso-2022-cn-ext':\n    case 'iso-2022-kr':\n    case 'replacement':\n      return 'replacement'\n    case 'unicodefffe':\n    case 'utf-16be':\n      return 'UTF-16BE'\n    case 'csunicode':\n    case 'iso-10646-ucs-2':\n    case 'ucs-2':\n    case 'unicode':\n    case 'unicodefeff':\n    case 'utf-16':\n    case 'utf-16le':\n      return 'UTF-16LE'\n    case 'x-user-defined':\n      return 'x-user-defined'\n    default: return 'failure'\n  }\n}\n\nmodule.exports = {\n  getEncoding\n}\n","'use strict'\n\nconst {\n  kState,\n  kError,\n  kResult,\n  kAborted,\n  kLastProgressEventFired\n} = require('./symbols')\nconst { ProgressEvent } = require('./progressevent')\nconst { getEncoding } = require('./encoding')\nconst { DOMException } = require('../fetch/constants')\nconst { serializeAMimeType, parseMIMEType } = require('../fetch/dataURL')\nconst { types } = require('util')\nconst { StringDecoder } = require('string_decoder')\nconst { btoa } = require('buffer')\n\n/** @type {PropertyDescriptor} */\nconst staticPropertyDescriptors = {\n  enumerable: true,\n  writable: false,\n  configurable: false\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#readOperation\n * @param {import('./filereader').FileReader} fr\n * @param {import('buffer').Blob} blob\n * @param {string} type\n * @param {string?} encodingName\n */\nfunction readOperation (fr, blob, type, encodingName) {\n  // 1. If fr’s state is \"loading\", throw an InvalidStateError\n  //    DOMException.\n  if (fr[kState] === 'loading') {\n    throw new DOMException('Invalid state', 'InvalidStateError')\n  }\n\n  // 2. Set fr’s state to \"loading\".\n  fr[kState] = 'loading'\n\n  // 3. Set fr’s result to null.\n  fr[kResult] = null\n\n  // 4. Set fr’s error to null.\n  fr[kError] = null\n\n  // 5. Let stream be the result of calling get stream on blob.\n  /** @type {import('stream/web').ReadableStream} */\n  const stream = blob.stream()\n\n  // 6. Let reader be the result of getting a reader from stream.\n  const reader = stream.getReader()\n\n  // 7. Let bytes be an empty byte sequence.\n  /** @type {Uint8Array[]} */\n  const bytes = []\n\n  // 8. Let chunkPromise be the result of reading a chunk from\n  //    stream with reader.\n  let chunkPromise = reader.read()\n\n  // 9. Let isFirstChunk be true.\n  let isFirstChunk = true\n\n  // 10. In parallel, while true:\n  // Note: \"In parallel\" just means non-blocking\n  // Note 2: readOperation itself cannot be async as double\n  // reading the body would then reject the promise, instead\n  // of throwing an error.\n  ;(async () => {\n    while (!fr[kAborted]) {\n      // 1. Wait for chunkPromise to be fulfilled or rejected.\n      try {\n        const { done, value } = await chunkPromise\n\n        // 2. If chunkPromise is fulfilled, and isFirstChunk is\n        //    true, queue a task to fire a progress event called\n        //    loadstart at fr.\n        if (isFirstChunk && !fr[kAborted]) {\n          queueMicrotask(() => {\n            fireAProgressEvent('loadstart', fr)\n          })\n        }\n\n        // 3. Set isFirstChunk to false.\n        isFirstChunk = false\n\n        // 4. If chunkPromise is fulfilled with an object whose\n        //    done property is false and whose value property is\n        //    a Uint8Array object, run these steps:\n        if (!done && types.isUint8Array(value)) {\n          // 1. Let bs be the byte sequence represented by the\n          //    Uint8Array object.\n\n          // 2. Append bs to bytes.\n          bytes.push(value)\n\n          // 3. If roughly 50ms have passed since these steps\n          //    were last invoked, queue a task to fire a\n          //    progress event called progress at fr.\n          if (\n            (\n              fr[kLastProgressEventFired] === undefined ||\n              Date.now() - fr[kLastProgressEventFired] >= 50\n            ) &&\n            !fr[kAborted]\n          ) {\n            fr[kLastProgressEventFired] = Date.now()\n            queueMicrotask(() => {\n              fireAProgressEvent('progress', fr)\n            })\n          }\n\n          // 4. Set chunkPromise to the result of reading a\n          //    chunk from stream with reader.\n          chunkPromise = reader.read()\n        } else if (done) {\n          // 5. Otherwise, if chunkPromise is fulfilled with an\n          //    object whose done property is true, queue a task\n          //    to run the following steps and abort this algorithm:\n          queueMicrotask(() => {\n            // 1. Set fr’s state to \"done\".\n            fr[kState] = 'done'\n\n            // 2. Let result be the result of package data given\n            //    bytes, type, blob’s type, and encodingName.\n            try {\n              const result = packageData(bytes, type, blob.type, encodingName)\n\n              // 4. Else:\n\n              if (fr[kAborted]) {\n                return\n              }\n\n              // 1. Set fr’s result to result.\n              fr[kResult] = result\n\n              // 2. Fire a progress event called load at the fr.\n              fireAProgressEvent('load', fr)\n            } catch (error) {\n              // 3. If package data threw an exception error:\n\n              // 1. Set fr’s error to error.\n              fr[kError] = error\n\n              // 2. Fire a progress event called error at fr.\n              fireAProgressEvent('error', fr)\n            }\n\n            // 5. If fr’s state is not \"loading\", fire a progress\n            //    event called loadend at the fr.\n            if (fr[kState] !== 'loading') {\n              fireAProgressEvent('loadend', fr)\n            }\n          })\n\n          break\n        }\n      } catch (error) {\n        if (fr[kAborted]) {\n          return\n        }\n\n        // 6. Otherwise, if chunkPromise is rejected with an\n        //    error error, queue a task to run the following\n        //    steps and abort this algorithm:\n        queueMicrotask(() => {\n          // 1. Set fr’s state to \"done\".\n          fr[kState] = 'done'\n\n          // 2. Set fr’s error to error.\n          fr[kError] = error\n\n          // 3. Fire a progress event called error at fr.\n          fireAProgressEvent('error', fr)\n\n          // 4. If fr’s state is not \"loading\", fire a progress\n          //    event called loadend at fr.\n          if (fr[kState] !== 'loading') {\n            fireAProgressEvent('loadend', fr)\n          }\n        })\n\n        break\n      }\n    }\n  })()\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#fire-a-progress-event\n * @see https://dom.spec.whatwg.org/#concept-event-fire\n * @param {string} e The name of the event\n * @param {import('./filereader').FileReader} reader\n */\nfunction fireAProgressEvent (e, reader) {\n  // The progress event e does not bubble. e.bubbles must be false\n  // The progress event e is NOT cancelable. e.cancelable must be false\n  const event = new ProgressEvent(e, {\n    bubbles: false,\n    cancelable: false\n  })\n\n  reader.dispatchEvent(event)\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#blob-package-data\n * @param {Uint8Array[]} bytes\n * @param {string} type\n * @param {string?} mimeType\n * @param {string?} encodingName\n */\nfunction packageData (bytes, type, mimeType, encodingName) {\n  // 1. A Blob has an associated package data algorithm, given\n  //    bytes, a type, a optional mimeType, and a optional\n  //    encodingName, which switches on type and runs the\n  //    associated steps:\n\n  switch (type) {\n    case 'DataURL': {\n      // 1. Return bytes as a DataURL [RFC2397] subject to\n      //    the considerations below:\n      //  * Use mimeType as part of the Data URL if it is\n      //    available in keeping with the Data URL\n      //    specification [RFC2397].\n      //  * If mimeType is not available return a Data URL\n      //    without a media-type. [RFC2397].\n\n      // https://datatracker.ietf.org/doc/html/rfc2397#section-3\n      // dataurl    := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\n      // mediatype  := [ type \"/\" subtype ] *( \";\" parameter )\n      // data       := *urlchar\n      // parameter  := attribute \"=\" value\n      let dataURL = 'data:'\n\n      const parsed = parseMIMEType(mimeType || 'application/octet-stream')\n\n      if (parsed !== 'failure') {\n        dataURL += serializeAMimeType(parsed)\n      }\n\n      dataURL += ';base64,'\n\n      const decoder = new StringDecoder('latin1')\n\n      for (const chunk of bytes) {\n        dataURL += btoa(decoder.write(chunk))\n      }\n\n      dataURL += btoa(decoder.end())\n\n      return dataURL\n    }\n    case 'Text': {\n      // 1. Let encoding be failure\n      let encoding = 'failure'\n\n      // 2. If the encodingName is present, set encoding to the\n      //    result of getting an encoding from encodingName.\n      if (encodingName) {\n        encoding = getEncoding(encodingName)\n      }\n\n      // 3. If encoding is failure, and mimeType is present:\n      if (encoding === 'failure' && mimeType) {\n        // 1. Let type be the result of parse a MIME type\n        //    given mimeType.\n        const type = parseMIMEType(mimeType)\n\n        // 2. If type is not failure, set encoding to the result\n        //    of getting an encoding from type’s parameters[\"charset\"].\n        if (type !== 'failure') {\n          encoding = getEncoding(type.parameters.get('charset'))\n        }\n      }\n\n      // 4. If encoding is failure, then set encoding to UTF-8.\n      if (encoding === 'failure') {\n        encoding = 'UTF-8'\n      }\n\n      // 5. Decode bytes using fallback encoding encoding, and\n      //    return the result.\n      return decode(bytes, encoding)\n    }\n    case 'ArrayBuffer': {\n      // Return a new ArrayBuffer whose contents are bytes.\n      const sequence = combineByteSequences(bytes)\n\n      return sequence.buffer\n    }\n    case 'BinaryString': {\n      // Return bytes as a binary string, in which every byte\n      //  is represented by a code unit of equal value [0..255].\n      let binaryString = ''\n\n      const decoder = new StringDecoder('latin1')\n\n      for (const chunk of bytes) {\n        binaryString += decoder.write(chunk)\n      }\n\n      binaryString += decoder.end()\n\n      return binaryString\n    }\n  }\n}\n\n/**\n * @see https://encoding.spec.whatwg.org/#decode\n * @param {Uint8Array[]} ioQueue\n * @param {string} encoding\n */\nfunction decode (ioQueue, encoding) {\n  const bytes = combineByteSequences(ioQueue)\n\n  // 1. Let BOMEncoding be the result of BOM sniffing ioQueue.\n  const BOMEncoding = BOMSniffing(bytes)\n\n  let slice = 0\n\n  // 2. If BOMEncoding is non-null:\n  if (BOMEncoding !== null) {\n    // 1. Set encoding to BOMEncoding.\n    encoding = BOMEncoding\n\n    // 2. Read three bytes from ioQueue, if BOMEncoding is\n    //    UTF-8; otherwise read two bytes.\n    //    (Do nothing with those bytes.)\n    slice = BOMEncoding === 'UTF-8' ? 3 : 2\n  }\n\n  // 3. Process a queue with an instance of encoding’s\n  //    decoder, ioQueue, output, and \"replacement\".\n\n  // 4. Return output.\n\n  const sliced = bytes.slice(slice)\n  return new TextDecoder(encoding).decode(sliced)\n}\n\n/**\n * @see https://encoding.spec.whatwg.org/#bom-sniff\n * @param {Uint8Array} ioQueue\n */\nfunction BOMSniffing (ioQueue) {\n  // 1. Let BOM be the result of peeking 3 bytes from ioQueue,\n  //    converted to a byte sequence.\n  const [a, b, c] = ioQueue\n\n  // 2. For each of the rows in the table below, starting with\n  //    the first one and going down, if BOM starts with the\n  //    bytes given in the first column, then return the\n  //    encoding given in the cell in the second column of that\n  //    row. Otherwise, return null.\n  if (a === 0xEF && b === 0xBB && c === 0xBF) {\n    return 'UTF-8'\n  } else if (a === 0xFE && b === 0xFF) {\n    return 'UTF-16BE'\n  } else if (a === 0xFF && b === 0xFE) {\n    return 'UTF-16LE'\n  }\n\n  return null\n}\n\n/**\n * @param {Uint8Array[]} sequences\n */\nfunction combineByteSequences (sequences) {\n  const size = sequences.reduce((a, b) => {\n    return a + b.byteLength\n  }, 0)\n\n  let offset = 0\n\n  return sequences.reduce((a, b) => {\n    a.set(b, offset)\n    offset += b.byteLength\n    return a\n  }, new Uint8Array(size))\n}\n\nmodule.exports = {\n  staticPropertyDescriptors,\n  readOperation,\n  fireAProgressEvent\n}\n","'use strict'\n\nconst {\n  staticPropertyDescriptors,\n  readOperation,\n  fireAProgressEvent\n} = require('./util')\nconst {\n  kState,\n  kError,\n  kResult,\n  kEvents,\n  kAborted\n} = require('./symbols')\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../core/util')\n\nclass FileReader extends EventTarget {\n  constructor () {\n    super()\n\n    this[kState] = 'empty'\n    this[kResult] = null\n    this[kError] = null\n    this[kEvents] = {\n      loadend: null,\n      error: null,\n      abort: null,\n      load: null,\n      progress: null,\n      loadstart: null\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-readAsArrayBuffer\n   * @param {import('buffer').Blob} blob\n   */\n  readAsArrayBuffer (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsArrayBuffer' })\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsArrayBuffer(blob) method, when invoked,\n    // must initiate a read operation for blob with ArrayBuffer.\n    readOperation(this, blob, 'ArrayBuffer')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#readAsBinaryString\n   * @param {import('buffer').Blob} blob\n   */\n  readAsBinaryString (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsBinaryString' })\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsBinaryString(blob) method, when invoked,\n    // must initiate a read operation for blob with BinaryString.\n    readOperation(this, blob, 'BinaryString')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#readAsDataText\n   * @param {import('buffer').Blob} blob\n   * @param {string?} encoding\n   */\n  readAsText (blob, encoding = undefined) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsText' })\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    if (encoding !== undefined) {\n      encoding = webidl.converters.DOMString(encoding)\n    }\n\n    // The readAsText(blob, encoding) method, when invoked,\n    // must initiate a read operation for blob with Text and encoding.\n    readOperation(this, blob, 'Text', encoding)\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-readAsDataURL\n   * @param {import('buffer').Blob} blob\n   */\n  readAsDataURL (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsDataURL' })\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsDataURL(blob) method, when invoked, must\n    // initiate a read operation for blob with DataURL.\n    readOperation(this, blob, 'DataURL')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-abort\n   */\n  abort () {\n    // 1. If this's state is \"empty\" or if this's state is\n    //    \"done\" set this's result to null and terminate\n    //    this algorithm.\n    if (this[kState] === 'empty' || this[kState] === 'done') {\n      this[kResult] = null\n      return\n    }\n\n    // 2. If this's state is \"loading\" set this's state to\n    //    \"done\" and set this's result to null.\n    if (this[kState] === 'loading') {\n      this[kState] = 'done'\n      this[kResult] = null\n    }\n\n    // 3. If there are any tasks from this on the file reading\n    //    task source in an affiliated task queue, then remove\n    //    those tasks from that task queue.\n    this[kAborted] = true\n\n    // 4. Terminate the algorithm for the read method being processed.\n    // TODO\n\n    // 5. Fire a progress event called abort at this.\n    fireAProgressEvent('abort', this)\n\n    // 6. If this's state is not \"loading\", fire a progress\n    //    event called loadend at this.\n    if (this[kState] !== 'loading') {\n      fireAProgressEvent('loadend', this)\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-readystate\n   */\n  get readyState () {\n    webidl.brandCheck(this, FileReader)\n\n    switch (this[kState]) {\n      case 'empty': return this.EMPTY\n      case 'loading': return this.LOADING\n      case 'done': return this.DONE\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-result\n   */\n  get result () {\n    webidl.brandCheck(this, FileReader)\n\n    // The result attribute’s getter, when invoked, must return\n    // this's result.\n    return this[kResult]\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-error\n   */\n  get error () {\n    webidl.brandCheck(this, FileReader)\n\n    // The error attribute’s getter, when invoked, must return\n    // this's error.\n    return this[kError]\n  }\n\n  get onloadend () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].loadend\n  }\n\n  set onloadend (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].loadend) {\n      this.removeEventListener('loadend', this[kEvents].loadend)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].loadend = fn\n      this.addEventListener('loadend', fn)\n    } else {\n      this[kEvents].loadend = null\n    }\n  }\n\n  get onerror () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].error\n  }\n\n  set onerror (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].error) {\n      this.removeEventListener('error', this[kEvents].error)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].error = fn\n      this.addEventListener('error', fn)\n    } else {\n      this[kEvents].error = null\n    }\n  }\n\n  get onloadstart () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].loadstart\n  }\n\n  set onloadstart (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].loadstart) {\n      this.removeEventListener('loadstart', this[kEvents].loadstart)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].loadstart = fn\n      this.addEventListener('loadstart', fn)\n    } else {\n      this[kEvents].loadstart = null\n    }\n  }\n\n  get onprogress () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].progress\n  }\n\n  set onprogress (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].progress) {\n      this.removeEventListener('progress', this[kEvents].progress)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].progress = fn\n      this.addEventListener('progress', fn)\n    } else {\n      this[kEvents].progress = null\n    }\n  }\n\n  get onload () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].load\n  }\n\n  set onload (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].load) {\n      this.removeEventListener('load', this[kEvents].load)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].load = fn\n      this.addEventListener('load', fn)\n    } else {\n      this[kEvents].load = null\n    }\n  }\n\n  get onabort () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].abort\n  }\n\n  set onabort (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].abort) {\n      this.removeEventListener('abort', this[kEvents].abort)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].abort = fn\n      this.addEventListener('abort', fn)\n    } else {\n      this[kEvents].abort = null\n    }\n  }\n}\n\n// https://w3c.github.io/FileAPI/#dom-filereader-empty\nFileReader.EMPTY = FileReader.prototype.EMPTY = 0\n// https://w3c.github.io/FileAPI/#dom-filereader-loading\nFileReader.LOADING = FileReader.prototype.LOADING = 1\n// https://w3c.github.io/FileAPI/#dom-filereader-done\nFileReader.DONE = FileReader.prototype.DONE = 2\n\nObject.defineProperties(FileReader.prototype, {\n  EMPTY: staticPropertyDescriptors,\n  LOADING: staticPropertyDescriptors,\n  DONE: staticPropertyDescriptors,\n  readAsArrayBuffer: kEnumerableProperty,\n  readAsBinaryString: kEnumerableProperty,\n  readAsText: kEnumerableProperty,\n  readAsDataURL: kEnumerableProperty,\n  abort: kEnumerableProperty,\n  readyState: kEnumerableProperty,\n  result: kEnumerableProperty,\n  error: kEnumerableProperty,\n  onloadstart: kEnumerableProperty,\n  onprogress: kEnumerableProperty,\n  onload: kEnumerableProperty,\n  onabort: kEnumerableProperty,\n  onerror: kEnumerableProperty,\n  onloadend: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'FileReader',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n})\n\nObject.defineProperties(FileReader, {\n  EMPTY: staticPropertyDescriptors,\n  LOADING: staticPropertyDescriptors,\n  DONE: staticPropertyDescriptors\n})\n\nmodule.exports = {\n  FileReader\n}\n","'use strict'\n\nmodule.exports = {\n  kConstruct: Symbol('constructable')\n}\n","'use strict'\n\nconst assert = require('assert')\nconst { URLSerializer } = require('../fetch/dataURL')\nconst { isValidHeaderName } = require('../fetch/util')\n\n/**\n * @see https://url.spec.whatwg.org/#concept-url-equals\n * @param {URL} A\n * @param {URL} B\n * @param {boolean | undefined} excludeFragment\n * @returns {boolean}\n */\nfunction urlEquals (A, B, excludeFragment = false) {\n  const serializedA = URLSerializer(A, excludeFragment)\n\n  const serializedB = URLSerializer(B, excludeFragment)\n\n  return serializedA === serializedB\n}\n\n/**\n * @see https://github.com/chromium/chromium/blob/694d20d134cb553d8d89e5500b9148012b1ba299/content/browser/cache_storage/cache_storage_cache.cc#L260-L262\n * @param {string} header\n */\nfunction fieldValues (header) {\n  assert(header !== null)\n\n  const values = []\n\n  for (let value of header.split(',')) {\n    value = value.trim()\n\n    if (!value.length) {\n      continue\n    } else if (!isValidHeaderName(value)) {\n      continue\n    }\n\n    values.push(value)\n  }\n\n  return values\n}\n\nmodule.exports = {\n  urlEquals,\n  fieldValues\n}\n","'use strict'\n\nconst { kConstruct } = require('./symbols')\nconst { urlEquals, fieldValues: getFieldValues } = require('./util')\nconst { kEnumerableProperty, isDisturbed } = require('../core/util')\nconst { kHeadersList } = require('../core/symbols')\nconst { webidl } = require('../fetch/webidl')\nconst { Response, cloneResponse } = require('../fetch/response')\nconst { Request } = require('../fetch/request')\nconst { kState, kHeaders, kGuard, kRealm } = require('../fetch/symbols')\nconst { fetching } = require('../fetch/index')\nconst { urlIsHttpHttpsScheme, createDeferredPromise, readAllBytes } = require('../fetch/util')\nconst assert = require('assert')\nconst { getGlobalDispatcher } = require('../global')\n\n/**\n * @see https://w3c.github.io/ServiceWorker/#dfn-cache-batch-operation\n * @typedef {Object} CacheBatchOperation\n * @property {'delete' | 'put'} type\n * @property {any} request\n * @property {any} response\n * @property {import('../../types/cache').CacheQueryOptions} options\n */\n\n/**\n * @see https://w3c.github.io/ServiceWorker/#dfn-request-response-list\n * @typedef {[any, any][]} requestResponseList\n */\n\nclass Cache {\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-request-response-list\n   * @type {requestResponseList}\n   */\n  #relevantRequestResponseList\n\n  constructor () {\n    if (arguments[0] !== kConstruct) {\n      webidl.illegalConstructor()\n    }\n\n    this.#relevantRequestResponseList = arguments[1]\n  }\n\n  async match (request, options = {}) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.match' })\n\n    request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.CacheQueryOptions(options)\n\n    const p = await this.matchAll(request, options)\n\n    if (p.length === 0) {\n      return\n    }\n\n    return p[0]\n  }\n\n  async matchAll (request = undefined, options = {}) {\n    webidl.brandCheck(this, Cache)\n\n    if (request !== undefined) request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.CacheQueryOptions(options)\n\n    // 1.\n    let r = null\n\n    // 2.\n    if (request !== undefined) {\n      if (request instanceof Request) {\n        // 2.1.1\n        r = request[kState]\n\n        // 2.1.2\n        if (r.method !== 'GET' && !options.ignoreMethod) {\n          return []\n        }\n      } else if (typeof request === 'string') {\n        // 2.2.1\n        r = new Request(request)[kState]\n      }\n    }\n\n    // 5.\n    // 5.1\n    const responses = []\n\n    // 5.2\n    if (request === undefined) {\n      // 5.2.1\n      for (const requestResponse of this.#relevantRequestResponseList) {\n        responses.push(requestResponse[1])\n      }\n    } else { // 5.3\n      // 5.3.1\n      const requestResponses = this.#queryCache(r, options)\n\n      // 5.3.2\n      for (const requestResponse of requestResponses) {\n        responses.push(requestResponse[1])\n      }\n    }\n\n    // 5.4\n    // We don't implement CORs so we don't need to loop over the responses, yay!\n\n    // 5.5.1\n    const responseList = []\n\n    // 5.5.2\n    for (const response of responses) {\n      // 5.5.2.1\n      const responseObject = new Response(response.body?.source ?? null)\n      const body = responseObject[kState].body\n      responseObject[kState] = response\n      responseObject[kState].body = body\n      responseObject[kHeaders][kHeadersList] = response.headersList\n      responseObject[kHeaders][kGuard] = 'immutable'\n\n      responseList.push(responseObject)\n    }\n\n    // 6.\n    return Object.freeze(responseList)\n  }\n\n  async add (request) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.add' })\n\n    request = webidl.converters.RequestInfo(request)\n\n    // 1.\n    const requests = [request]\n\n    // 2.\n    const responseArrayPromise = this.addAll(requests)\n\n    // 3.\n    return await responseArrayPromise\n  }\n\n  async addAll (requests) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.addAll' })\n\n    requests = webidl.converters['sequence<RequestInfo>'](requests)\n\n    // 1.\n    const responsePromises = []\n\n    // 2.\n    const requestList = []\n\n    // 3.\n    for (const request of requests) {\n      if (typeof request === 'string') {\n        continue\n      }\n\n      // 3.1\n      const r = request[kState]\n\n      // 3.2\n      if (!urlIsHttpHttpsScheme(r.url) || r.method !== 'GET') {\n        throw webidl.errors.exception({\n          header: 'Cache.addAll',\n          message: 'Expected http/s scheme when method is not GET.'\n        })\n      }\n    }\n\n    // 4.\n    /** @type {ReturnType<typeof fetching>[]} */\n    const fetchControllers = []\n\n    // 5.\n    for (const request of requests) {\n      // 5.1\n      const r = new Request(request)[kState]\n\n      // 5.2\n      if (!urlIsHttpHttpsScheme(r.url)) {\n        throw webidl.errors.exception({\n          header: 'Cache.addAll',\n          message: 'Expected http/s scheme.'\n        })\n      }\n\n      // 5.4\n      r.initiator = 'fetch'\n      r.destination = 'subresource'\n\n      // 5.5\n      requestList.push(r)\n\n      // 5.6\n      const responsePromise = createDeferredPromise()\n\n      // 5.7\n      fetchControllers.push(fetching({\n        request: r,\n        dispatcher: getGlobalDispatcher(),\n        processResponse (response) {\n          // 1.\n          if (response.type === 'error' || response.status === 206 || response.status < 200 || response.status > 299) {\n            responsePromise.reject(webidl.errors.exception({\n              header: 'Cache.addAll',\n              message: 'Received an invalid status code or the request failed.'\n            }))\n          } else if (response.headersList.contains('vary')) { // 2.\n            // 2.1\n            const fieldValues = getFieldValues(response.headersList.get('vary'))\n\n            // 2.2\n            for (const fieldValue of fieldValues) {\n              // 2.2.1\n              if (fieldValue === '*') {\n                responsePromise.reject(webidl.errors.exception({\n                  header: 'Cache.addAll',\n                  message: 'invalid vary field value'\n                }))\n\n                for (const controller of fetchControllers) {\n                  controller.abort()\n                }\n\n                return\n              }\n            }\n          }\n        },\n        processResponseEndOfBody (response) {\n          // 1.\n          if (response.aborted) {\n            responsePromise.reject(new DOMException('aborted', 'AbortError'))\n            return\n          }\n\n          // 2.\n          responsePromise.resolve(response)\n        }\n      }))\n\n      // 5.8\n      responsePromises.push(responsePromise.promise)\n    }\n\n    // 6.\n    const p = Promise.all(responsePromises)\n\n    // 7.\n    const responses = await p\n\n    // 7.1\n    const operations = []\n\n    // 7.2\n    let index = 0\n\n    // 7.3\n    for (const response of responses) {\n      // 7.3.1\n      /** @type {CacheBatchOperation} */\n      const operation = {\n        type: 'put', // 7.3.2\n        request: requestList[index], // 7.3.3\n        response // 7.3.4\n      }\n\n      operations.push(operation) // 7.3.5\n\n      index++ // 7.3.6\n    }\n\n    // 7.5\n    const cacheJobPromise = createDeferredPromise()\n\n    // 7.6.1\n    let errorData = null\n\n    // 7.6.2\n    try {\n      this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    // 7.6.3\n    queueMicrotask(() => {\n      // 7.6.3.1\n      if (errorData === null) {\n        cacheJobPromise.resolve(undefined)\n      } else {\n        // 7.6.3.2\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    // 7.7\n    return cacheJobPromise.promise\n  }\n\n  async put (request, response) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 2, { header: 'Cache.put' })\n\n    request = webidl.converters.RequestInfo(request)\n    response = webidl.converters.Response(response)\n\n    // 1.\n    let innerRequest = null\n\n    // 2.\n    if (request instanceof Request) {\n      innerRequest = request[kState]\n    } else { // 3.\n      innerRequest = new Request(request)[kState]\n    }\n\n    // 4.\n    if (!urlIsHttpHttpsScheme(innerRequest.url) || innerRequest.method !== 'GET') {\n      throw webidl.errors.exception({\n        header: 'Cache.put',\n        message: 'Expected an http/s scheme when method is not GET'\n      })\n    }\n\n    // 5.\n    const innerResponse = response[kState]\n\n    // 6.\n    if (innerResponse.status === 206) {\n      throw webidl.errors.exception({\n        header: 'Cache.put',\n        message: 'Got 206 status'\n      })\n    }\n\n    // 7.\n    if (innerResponse.headersList.contains('vary')) {\n      // 7.1.\n      const fieldValues = getFieldValues(innerResponse.headersList.get('vary'))\n\n      // 7.2.\n      for (const fieldValue of fieldValues) {\n        // 7.2.1\n        if (fieldValue === '*') {\n          throw webidl.errors.exception({\n            header: 'Cache.put',\n            message: 'Got * vary field value'\n          })\n        }\n      }\n    }\n\n    // 8.\n    if (innerResponse.body && (isDisturbed(innerResponse.body.stream) || innerResponse.body.stream.locked)) {\n      throw webidl.errors.exception({\n        header: 'Cache.put',\n        message: 'Response body is locked or disturbed'\n      })\n    }\n\n    // 9.\n    const clonedResponse = cloneResponse(innerResponse)\n\n    // 10.\n    const bodyReadPromise = createDeferredPromise()\n\n    // 11.\n    if (innerResponse.body != null) {\n      // 11.1\n      const stream = innerResponse.body.stream\n\n      // 11.2\n      const reader = stream.getReader()\n\n      // 11.3\n      readAllBytes(reader).then(bodyReadPromise.resolve, bodyReadPromise.reject)\n    } else {\n      bodyReadPromise.resolve(undefined)\n    }\n\n    // 12.\n    /** @type {CacheBatchOperation[]} */\n    const operations = []\n\n    // 13.\n    /** @type {CacheBatchOperation} */\n    const operation = {\n      type: 'put', // 14.\n      request: innerRequest, // 15.\n      response: clonedResponse // 16.\n    }\n\n    // 17.\n    operations.push(operation)\n\n    // 19.\n    const bytes = await bodyReadPromise.promise\n\n    if (clonedResponse.body != null) {\n      clonedResponse.body.source = bytes\n    }\n\n    // 19.1\n    const cacheJobPromise = createDeferredPromise()\n\n    // 19.2.1\n    let errorData = null\n\n    // 19.2.2\n    try {\n      this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    // 19.2.3\n    queueMicrotask(() => {\n      // 19.2.3.1\n      if (errorData === null) {\n        cacheJobPromise.resolve()\n      } else { // 19.2.3.2\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    return cacheJobPromise.promise\n  }\n\n  async delete (request, options = {}) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.delete' })\n\n    request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.CacheQueryOptions(options)\n\n    /**\n     * @type {Request}\n     */\n    let r = null\n\n    if (request instanceof Request) {\n      r = request[kState]\n\n      if (r.method !== 'GET' && !options.ignoreMethod) {\n        return false\n      }\n    } else {\n      assert(typeof request === 'string')\n\n      r = new Request(request)[kState]\n    }\n\n    /** @type {CacheBatchOperation[]} */\n    const operations = []\n\n    /** @type {CacheBatchOperation} */\n    const operation = {\n      type: 'delete',\n      request: r,\n      options\n    }\n\n    operations.push(operation)\n\n    const cacheJobPromise = createDeferredPromise()\n\n    let errorData = null\n    let requestResponses\n\n    try {\n      requestResponses = this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    queueMicrotask(() => {\n      if (errorData === null) {\n        cacheJobPromise.resolve(!!requestResponses?.length)\n      } else {\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    return cacheJobPromise.promise\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dom-cache-keys\n   * @param {any} request\n   * @param {import('../../types/cache').CacheQueryOptions} options\n   * @returns {readonly Request[]}\n   */\n  async keys (request = undefined, options = {}) {\n    webidl.brandCheck(this, Cache)\n\n    if (request !== undefined) request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.CacheQueryOptions(options)\n\n    // 1.\n    let r = null\n\n    // 2.\n    if (request !== undefined) {\n      // 2.1\n      if (request instanceof Request) {\n        // 2.1.1\n        r = request[kState]\n\n        // 2.1.2\n        if (r.method !== 'GET' && !options.ignoreMethod) {\n          return []\n        }\n      } else if (typeof request === 'string') { // 2.2\n        r = new Request(request)[kState]\n      }\n    }\n\n    // 4.\n    const promise = createDeferredPromise()\n\n    // 5.\n    // 5.1\n    const requests = []\n\n    // 5.2\n    if (request === undefined) {\n      // 5.2.1\n      for (const requestResponse of this.#relevantRequestResponseList) {\n        // 5.2.1.1\n        requests.push(requestResponse[0])\n      }\n    } else { // 5.3\n      // 5.3.1\n      const requestResponses = this.#queryCache(r, options)\n\n      // 5.3.2\n      for (const requestResponse of requestResponses) {\n        // 5.3.2.1\n        requests.push(requestResponse[0])\n      }\n    }\n\n    // 5.4\n    queueMicrotask(() => {\n      // 5.4.1\n      const requestList = []\n\n      // 5.4.2\n      for (const request of requests) {\n        const requestObject = new Request('https://a')\n        requestObject[kState] = request\n        requestObject[kHeaders][kHeadersList] = request.headersList\n        requestObject[kHeaders][kGuard] = 'immutable'\n        requestObject[kRealm] = request.client\n\n        // 5.4.2.1\n        requestList.push(requestObject)\n      }\n\n      // 5.4.3\n      promise.resolve(Object.freeze(requestList))\n    })\n\n    return promise.promise\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#batch-cache-operations-algorithm\n   * @param {CacheBatchOperation[]} operations\n   * @returns {requestResponseList}\n   */\n  #batchCacheOperations (operations) {\n    // 1.\n    const cache = this.#relevantRequestResponseList\n\n    // 2.\n    const backupCache = [...cache]\n\n    // 3.\n    const addedItems = []\n\n    // 4.1\n    const resultList = []\n\n    try {\n      // 4.2\n      for (const operation of operations) {\n        // 4.2.1\n        if (operation.type !== 'delete' && operation.type !== 'put') {\n          throw webidl.errors.exception({\n            header: 'Cache.#batchCacheOperations',\n            message: 'operation type does not match \"delete\" or \"put\"'\n          })\n        }\n\n        // 4.2.2\n        if (operation.type === 'delete' && operation.response != null) {\n          throw webidl.errors.exception({\n            header: 'Cache.#batchCacheOperations',\n            message: 'delete operation should not have an associated response'\n          })\n        }\n\n        // 4.2.3\n        if (this.#queryCache(operation.request, operation.options, addedItems).length) {\n          throw new DOMException('???', 'InvalidStateError')\n        }\n\n        // 4.2.4\n        let requestResponses\n\n        // 4.2.5\n        if (operation.type === 'delete') {\n          // 4.2.5.1\n          requestResponses = this.#queryCache(operation.request, operation.options)\n\n          // TODO: the spec is wrong, this is needed to pass WPTs\n          if (requestResponses.length === 0) {\n            return []\n          }\n\n          // 4.2.5.2\n          for (const requestResponse of requestResponses) {\n            const idx = cache.indexOf(requestResponse)\n            assert(idx !== -1)\n\n            // 4.2.5.2.1\n            cache.splice(idx, 1)\n          }\n        } else if (operation.type === 'put') { // 4.2.6\n          // 4.2.6.1\n          if (operation.response == null) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'put operation should have an associated response'\n            })\n          }\n\n          // 4.2.6.2\n          const r = operation.request\n\n          // 4.2.6.3\n          if (!urlIsHttpHttpsScheme(r.url)) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'expected http or https scheme'\n            })\n          }\n\n          // 4.2.6.4\n          if (r.method !== 'GET') {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'not get method'\n            })\n          }\n\n          // 4.2.6.5\n          if (operation.options != null) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'options must not be defined'\n            })\n          }\n\n          // 4.2.6.6\n          requestResponses = this.#queryCache(operation.request)\n\n          // 4.2.6.7\n          for (const requestResponse of requestResponses) {\n            const idx = cache.indexOf(requestResponse)\n            assert(idx !== -1)\n\n            // 4.2.6.7.1\n            cache.splice(idx, 1)\n          }\n\n          // 4.2.6.8\n          cache.push([operation.request, operation.response])\n\n          // 4.2.6.10\n          addedItems.push([operation.request, operation.response])\n        }\n\n        // 4.2.7\n        resultList.push([operation.request, operation.response])\n      }\n\n      // 4.3\n      return resultList\n    } catch (e) { // 5.\n      // 5.1\n      this.#relevantRequestResponseList.length = 0\n\n      // 5.2\n      this.#relevantRequestResponseList = backupCache\n\n      // 5.3\n      throw e\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#query-cache\n   * @param {any} requestQuery\n   * @param {import('../../types/cache').CacheQueryOptions} options\n   * @param {requestResponseList} targetStorage\n   * @returns {requestResponseList}\n   */\n  #queryCache (requestQuery, options, targetStorage) {\n    /** @type {requestResponseList} */\n    const resultList = []\n\n    const storage = targetStorage ?? this.#relevantRequestResponseList\n\n    for (const requestResponse of storage) {\n      const [cachedRequest, cachedResponse] = requestResponse\n      if (this.#requestMatchesCachedItem(requestQuery, cachedRequest, cachedResponse, options)) {\n        resultList.push(requestResponse)\n      }\n    }\n\n    return resultList\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#request-matches-cached-item-algorithm\n   * @param {any} requestQuery\n   * @param {any} request\n   * @param {any | null} response\n   * @param {import('../../types/cache').CacheQueryOptions | undefined} options\n   * @returns {boolean}\n   */\n  #requestMatchesCachedItem (requestQuery, request, response = null, options) {\n    // if (options?.ignoreMethod === false && request.method === 'GET') {\n    //   return false\n    // }\n\n    const queryURL = new URL(requestQuery.url)\n\n    const cachedURL = new URL(request.url)\n\n    if (options?.ignoreSearch) {\n      cachedURL.search = ''\n\n      queryURL.search = ''\n    }\n\n    if (!urlEquals(queryURL, cachedURL, true)) {\n      return false\n    }\n\n    if (\n      response == null ||\n      options?.ignoreVary ||\n      !response.headersList.contains('vary')\n    ) {\n      return true\n    }\n\n    const fieldValues = getFieldValues(response.headersList.get('vary'))\n\n    for (const fieldValue of fieldValues) {\n      if (fieldValue === '*') {\n        return false\n      }\n\n      const requestValue = request.headersList.get(fieldValue)\n      const queryValue = requestQuery.headersList.get(fieldValue)\n\n      // If one has the header and the other doesn't, or one has\n      // a different value than the other, return false\n      if (requestValue !== queryValue) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nObject.defineProperties(Cache.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'Cache',\n    configurable: true\n  },\n  match: kEnumerableProperty,\n  matchAll: kEnumerableProperty,\n  add: kEnumerableProperty,\n  addAll: kEnumerableProperty,\n  put: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  keys: kEnumerableProperty\n})\n\nconst cacheQueryOptionConverters = [\n  {\n    key: 'ignoreSearch',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'ignoreMethod',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'ignoreVary',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  }\n]\n\nwebidl.converters.CacheQueryOptions = webidl.dictionaryConverter(cacheQueryOptionConverters)\n\nwebidl.converters.MultiCacheQueryOptions = webidl.dictionaryConverter([\n  ...cacheQueryOptionConverters,\n  {\n    key: 'cacheName',\n    converter: webidl.converters.DOMString\n  }\n])\n\nwebidl.converters.Response = webidl.interfaceConverter(Response)\n\nwebidl.converters['sequence<RequestInfo>'] = webidl.sequenceConverter(\n  webidl.converters.RequestInfo\n)\n\nmodule.exports = {\n  Cache\n}\n","'use strict'\n\nconst { kConstruct } = require('./symbols')\nconst { Cache } = require('./cache')\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../core/util')\n\nclass CacheStorage {\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map\n   * @type {Map<string, import('./cache').requestResponseList}\n   */\n  #caches = new Map()\n\n  constructor () {\n    if (arguments[0] !== kConstruct) {\n      webidl.illegalConstructor()\n    }\n  }\n\n  async match (request, options = {}) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.match' })\n\n    request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.MultiCacheQueryOptions(options)\n\n    // 1.\n    if (options.cacheName != null) {\n      // 1.1.1.1\n      if (this.#caches.has(options.cacheName)) {\n        // 1.1.1.1.1\n        const cacheList = this.#caches.get(options.cacheName)\n        const cache = new Cache(kConstruct, cacheList)\n\n        return await cache.match(request, options)\n      }\n    } else { // 2.\n      // 2.2\n      for (const cacheList of this.#caches.values()) {\n        const cache = new Cache(kConstruct, cacheList)\n\n        // 2.2.1.2\n        const response = await cache.match(request, options)\n\n        if (response !== undefined) {\n          return response\n        }\n      }\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-has\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */\n  async has (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.has' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    // 2.1.1\n    // 2.2\n    return this.#caches.has(cacheName)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open\n   * @param {string} cacheName\n   * @returns {Promise<Cache>}\n   */\n  async open (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.open' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    // 2.1\n    if (this.#caches.has(cacheName)) {\n      // await caches.open('v1') !== await caches.open('v1')\n\n      // 2.1.1\n      const cache = this.#caches.get(cacheName)\n\n      // 2.1.1.1\n      return new Cache(kConstruct, cache)\n    }\n\n    // 2.2\n    const cache = []\n\n    // 2.3\n    this.#caches.set(cacheName, cache)\n\n    // 2.4\n    return new Cache(kConstruct, cache)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */\n  async delete (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.delete' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    return this.#caches.delete(cacheName)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys\n   * @returns {string[]}\n   */\n  async keys () {\n    webidl.brandCheck(this, CacheStorage)\n\n    // 2.1\n    const keys = this.#caches.keys()\n\n    // 2.2\n    return [...keys]\n  }\n}\n\nObject.defineProperties(CacheStorage.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'CacheStorage',\n    configurable: true\n  },\n  match: kEnumerableProperty,\n  has: kEnumerableProperty,\n  open: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  keys: kEnumerableProperty\n})\n\nmodule.exports = {\n  CacheStorage\n}\n","'use strict'\n\n// https://wicg.github.io/cookie-store/#cookie-maximum-attribute-value-size\nconst maxAttributeValueSize = 1024\n\n// https://wicg.github.io/cookie-store/#cookie-maximum-name-value-pair-size\nconst maxNameValuePairSize = 4096\n\nmodule.exports = {\n  maxAttributeValueSize,\n  maxNameValuePairSize\n}\n","'use strict'\n\nconst assert = require('assert')\nconst { kHeadersList } = require('../core/symbols')\n\nfunction isCTLExcludingHtab (value) {\n  if (value.length === 0) {\n    return false\n  }\n\n  for (const char of value) {\n    const code = char.charCodeAt(0)\n\n    if (\n      (code >= 0x00 || code <= 0x08) ||\n      (code >= 0x0A || code <= 0x1F) ||\n      code === 0x7F\n    ) {\n      return false\n    }\n  }\n}\n\n/**\n CHAR           = <any US-ASCII character (octets 0 - 127)>\n token          = 1*<any CHAR except CTLs or separators>\n separators     = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n                | \",\" | \";\" | \":\" | \"\\\" | <\">\n                | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n                | \"{\" | \"}\" | SP | HT\n * @param {string} name\n */\nfunction validateCookieName (name) {\n  for (const char of name) {\n    const code = char.charCodeAt(0)\n\n    if (\n      (code <= 0x20 || code > 0x7F) ||\n      char === '(' ||\n      char === ')' ||\n      char === '>' ||\n      char === '<' ||\n      char === '@' ||\n      char === ',' ||\n      char === ';' ||\n      char === ':' ||\n      char === '\\\\' ||\n      char === '\"' ||\n      char === '/' ||\n      char === '[' ||\n      char === ']' ||\n      char === '?' ||\n      char === '=' ||\n      char === '{' ||\n      char === '}'\n    ) {\n      throw new Error('Invalid cookie name')\n    }\n  }\n}\n\n/**\n cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n                       ; US-ASCII characters excluding CTLs,\n                       ; whitespace DQUOTE, comma, semicolon,\n                       ; and backslash\n * @param {string} value\n */\nfunction validateCookieValue (value) {\n  for (const char of value) {\n    const code = char.charCodeAt(0)\n\n    if (\n      code < 0x21 || // exclude CTLs (0-31)\n      code === 0x22 ||\n      code === 0x2C ||\n      code === 0x3B ||\n      code === 0x5C ||\n      code > 0x7E // non-ascii\n    ) {\n      throw new Error('Invalid header value')\n    }\n  }\n}\n\n/**\n * path-value        = <any CHAR except CTLs or \";\">\n * @param {string} path\n */\nfunction validateCookiePath (path) {\n  for (const char of path) {\n    const code = char.charCodeAt(0)\n\n    if (code < 0x21 || char === ';') {\n      throw new Error('Invalid cookie path')\n    }\n  }\n}\n\n/**\n * I have no idea why these values aren't allowed to be honest,\n * but Deno tests these. - Khafra\n * @param {string} domain\n */\nfunction validateCookieDomain (domain) {\n  if (\n    domain.startsWith('-') ||\n    domain.endsWith('.') ||\n    domain.endsWith('-')\n  ) {\n    throw new Error('Invalid cookie domain')\n  }\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc7231#section-7.1.1.1\n * @param {number|Date} date\n  IMF-fixdate  = day-name \",\" SP date1 SP time-of-day SP GMT\n  ; fixed length/zone/capitalization subset of the format\n  ; see Section 3.3 of [RFC5322]\n\n  day-name     = %x4D.6F.6E ; \"Mon\", case-sensitive\n              / %x54.75.65 ; \"Tue\", case-sensitive\n              / %x57.65.64 ; \"Wed\", case-sensitive\n              / %x54.68.75 ; \"Thu\", case-sensitive\n              / %x46.72.69 ; \"Fri\", case-sensitive\n              / %x53.61.74 ; \"Sat\", case-sensitive\n              / %x53.75.6E ; \"Sun\", case-sensitive\n  date1        = day SP month SP year\n                  ; e.g., 02 Jun 1982\n\n  day          = 2DIGIT\n  month        = %x4A.61.6E ; \"Jan\", case-sensitive\n              / %x46.65.62 ; \"Feb\", case-sensitive\n              / %x4D.61.72 ; \"Mar\", case-sensitive\n              / %x41.70.72 ; \"Apr\", case-sensitive\n              / %x4D.61.79 ; \"May\", case-sensitive\n              / %x4A.75.6E ; \"Jun\", case-sensitive\n              / %x4A.75.6C ; \"Jul\", case-sensitive\n              / %x41.75.67 ; \"Aug\", case-sensitive\n              / %x53.65.70 ; \"Sep\", case-sensitive\n              / %x4F.63.74 ; \"Oct\", case-sensitive\n              / %x4E.6F.76 ; \"Nov\", case-sensitive\n              / %x44.65.63 ; \"Dec\", case-sensitive\n  year         = 4DIGIT\n\n  GMT          = %x47.4D.54 ; \"GMT\", case-sensitive\n\n  time-of-day  = hour \":\" minute \":\" second\n              ; 00:00:00 - 23:59:60 (leap second)\n\n  hour         = 2DIGIT\n  minute       = 2DIGIT\n  second       = 2DIGIT\n */\nfunction toIMFDate (date) {\n  if (typeof date === 'number') {\n    date = new Date(date)\n  }\n\n  const days = [\n    'Sun', 'Mon', 'Tue', 'Wed',\n    'Thu', 'Fri', 'Sat'\n  ]\n\n  const months = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n  ]\n\n  const dayName = days[date.getUTCDay()]\n  const day = date.getUTCDate().toString().padStart(2, '0')\n  const month = months[date.getUTCMonth()]\n  const year = date.getUTCFullYear()\n  const hour = date.getUTCHours().toString().padStart(2, '0')\n  const minute = date.getUTCMinutes().toString().padStart(2, '0')\n  const second = date.getUTCSeconds().toString().padStart(2, '0')\n\n  return `${dayName}, ${day} ${month} ${year} ${hour}:${minute}:${second} GMT`\n}\n\n/**\n max-age-av        = \"Max-Age=\" non-zero-digit *DIGIT\n                       ; In practice, both expires-av and max-age-av\n                       ; are limited to dates representable by the\n                       ; user agent.\n * @param {number} maxAge\n */\nfunction validateCookieMaxAge (maxAge) {\n  if (maxAge < 0) {\n    throw new Error('Invalid cookie max-age')\n  }\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc6265#section-4.1.1\n * @param {import('./index').Cookie} cookie\n */\nfunction stringify (cookie) {\n  if (cookie.name.length === 0) {\n    return null\n  }\n\n  validateCookieName(cookie.name)\n  validateCookieValue(cookie.value)\n\n  const out = [`${cookie.name}=${cookie.value}`]\n\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.1\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.2\n  if (cookie.name.startsWith('__Secure-')) {\n    cookie.secure = true\n  }\n\n  if (cookie.name.startsWith('__Host-')) {\n    cookie.secure = true\n    cookie.domain = null\n    cookie.path = '/'\n  }\n\n  if (cookie.secure) {\n    out.push('Secure')\n  }\n\n  if (cookie.httpOnly) {\n    out.push('HttpOnly')\n  }\n\n  if (typeof cookie.maxAge === 'number') {\n    validateCookieMaxAge(cookie.maxAge)\n    out.push(`Max-Age=${cookie.maxAge}`)\n  }\n\n  if (cookie.domain) {\n    validateCookieDomain(cookie.domain)\n    out.push(`Domain=${cookie.domain}`)\n  }\n\n  if (cookie.path) {\n    validateCookiePath(cookie.path)\n    out.push(`Path=${cookie.path}`)\n  }\n\n  if (cookie.expires && cookie.expires.toString() !== 'Invalid Date') {\n    out.push(`Expires=${toIMFDate(cookie.expires)}`)\n  }\n\n  if (cookie.sameSite) {\n    out.push(`SameSite=${cookie.sameSite}`)\n  }\n\n  for (const part of cookie.unparsed) {\n    if (!part.includes('=')) {\n      throw new Error('Invalid unparsed')\n    }\n\n    const [key, ...value] = part.split('=')\n\n    out.push(`${key.trim()}=${value.join('=')}`)\n  }\n\n  return out.join('; ')\n}\n\nlet kHeadersListNode\n\nfunction getHeadersList (headers) {\n  if (headers[kHeadersList]) {\n    return headers[kHeadersList]\n  }\n\n  if (!kHeadersListNode) {\n    kHeadersListNode = Object.getOwnPropertySymbols(headers).find(\n      (symbol) => symbol.description === 'headers list'\n    )\n\n    assert(kHeadersListNode, 'Headers cannot be parsed')\n  }\n\n  const headersList = headers[kHeadersListNode]\n  assert(headersList)\n\n  return headersList\n}\n\nmodule.exports = {\n  isCTLExcludingHtab,\n  stringify,\n  getHeadersList\n}\n","'use strict'\n\nconst { maxNameValuePairSize, maxAttributeValueSize } = require('./constants')\nconst { isCTLExcludingHtab } = require('./util')\nconst { collectASequenceOfCodePointsFast } = require('../fetch/dataURL')\nconst assert = require('assert')\n\n/**\n * @description Parses the field-value attributes of a set-cookie header string.\n * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4\n * @param {string} header\n * @returns if the header is invalid, null will be returned\n */\nfunction parseSetCookie (header) {\n  // 1. If the set-cookie-string contains a %x00-08 / %x0A-1F / %x7F\n  //    character (CTL characters excluding HTAB): Abort these steps and\n  //    ignore the set-cookie-string entirely.\n  if (isCTLExcludingHtab(header)) {\n    return null\n  }\n\n  let nameValuePair = ''\n  let unparsedAttributes = ''\n  let name = ''\n  let value = ''\n\n  // 2. If the set-cookie-string contains a %x3B (\";\") character:\n  if (header.includes(';')) {\n    // 1. The name-value-pair string consists of the characters up to,\n    //    but not including, the first %x3B (\";\"), and the unparsed-\n    //    attributes consist of the remainder of the set-cookie-string\n    //    (including the %x3B (\";\") in question).\n    const position = { position: 0 }\n\n    nameValuePair = collectASequenceOfCodePointsFast(';', header, position)\n    unparsedAttributes = header.slice(position.position)\n  } else {\n    // Otherwise:\n\n    // 1. The name-value-pair string consists of all the characters\n    //    contained in the set-cookie-string, and the unparsed-\n    //    attributes is the empty string.\n    nameValuePair = header\n  }\n\n  // 3. If the name-value-pair string lacks a %x3D (\"=\") character, then\n  //    the name string is empty, and the value string is the value of\n  //    name-value-pair.\n  if (!nameValuePair.includes('=')) {\n    value = nameValuePair\n  } else {\n    //    Otherwise, the name string consists of the characters up to, but\n    //    not including, the first %x3D (\"=\") character, and the (possibly\n    //    empty) value string consists of the characters after the first\n    //    %x3D (\"=\") character.\n    const position = { position: 0 }\n    name = collectASequenceOfCodePointsFast(\n      '=',\n      nameValuePair,\n      position\n    )\n    value = nameValuePair.slice(position.position + 1)\n  }\n\n  // 4. Remove any leading or trailing WSP characters from the name\n  //    string and the value string.\n  name = name.trim()\n  value = value.trim()\n\n  // 5. If the sum of the lengths of the name string and the value string\n  //    is more than 4096 octets, abort these steps and ignore the set-\n  //    cookie-string entirely.\n  if (name.length + value.length > maxNameValuePairSize) {\n    return null\n  }\n\n  // 6. The cookie-name is the name string, and the cookie-value is the\n  //    value string.\n  return {\n    name, value, ...parseUnparsedAttributes(unparsedAttributes)\n  }\n}\n\n/**\n * Parses the remaining attributes of a set-cookie header\n * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4\n * @param {string} unparsedAttributes\n * @param {[Object.<string, unknown>]={}} cookieAttributeList\n */\nfunction parseUnparsedAttributes (unparsedAttributes, cookieAttributeList = {}) {\n  // 1. If the unparsed-attributes string is empty, skip the rest of\n  //    these steps.\n  if (unparsedAttributes.length === 0) {\n    return cookieAttributeList\n  }\n\n  // 2. Discard the first character of the unparsed-attributes (which\n  //    will be a %x3B (\";\") character).\n  assert(unparsedAttributes[0] === ';')\n  unparsedAttributes = unparsedAttributes.slice(1)\n\n  let cookieAv = ''\n\n  // 3. If the remaining unparsed-attributes contains a %x3B (\";\")\n  //    character:\n  if (unparsedAttributes.includes(';')) {\n    // 1. Consume the characters of the unparsed-attributes up to, but\n    //    not including, the first %x3B (\";\") character.\n    cookieAv = collectASequenceOfCodePointsFast(\n      ';',\n      unparsedAttributes,\n      { position: 0 }\n    )\n    unparsedAttributes = unparsedAttributes.slice(cookieAv.length)\n  } else {\n    // Otherwise:\n\n    // 1. Consume the remainder of the unparsed-attributes.\n    cookieAv = unparsedAttributes\n    unparsedAttributes = ''\n  }\n\n  // Let the cookie-av string be the characters consumed in this step.\n\n  let attributeName = ''\n  let attributeValue = ''\n\n  // 4. If the cookie-av string contains a %x3D (\"=\") character:\n  if (cookieAv.includes('=')) {\n    // 1. The (possibly empty) attribute-name string consists of the\n    //    characters up to, but not including, the first %x3D (\"=\")\n    //    character, and the (possibly empty) attribute-value string\n    //    consists of the characters after the first %x3D (\"=\")\n    //    character.\n    const position = { position: 0 }\n\n    attributeName = collectASequenceOfCodePointsFast(\n      '=',\n      cookieAv,\n      position\n    )\n    attributeValue = cookieAv.slice(position.position + 1)\n  } else {\n    // Otherwise:\n\n    // 1. The attribute-name string consists of the entire cookie-av\n    //    string, and the attribute-value string is empty.\n    attributeName = cookieAv\n  }\n\n  // 5. Remove any leading or trailing WSP characters from the attribute-\n  //    name string and the attribute-value string.\n  attributeName = attributeName.trim()\n  attributeValue = attributeValue.trim()\n\n  // 6. If the attribute-value is longer than 1024 octets, ignore the\n  //    cookie-av string and return to Step 1 of this algorithm.\n  if (attributeValue.length > maxAttributeValueSize) {\n    return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n  }\n\n  // 7. Process the attribute-name and attribute-value according to the\n  //    requirements in the following subsections.  (Notice that\n  //    attributes with unrecognized attribute-names are ignored.)\n  const attributeNameLowercase = attributeName.toLowerCase()\n\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.1\n  // If the attribute-name case-insensitively matches the string\n  // \"Expires\", the user agent MUST process the cookie-av as follows.\n  if (attributeNameLowercase === 'expires') {\n    // 1. Let the expiry-time be the result of parsing the attribute-value\n    //    as cookie-date (see Section 5.1.1).\n    const expiryTime = new Date(attributeValue)\n\n    // 2. If the attribute-value failed to parse as a cookie date, ignore\n    //    the cookie-av.\n\n    cookieAttributeList.expires = expiryTime\n  } else if (attributeNameLowercase === 'max-age') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.2\n    // If the attribute-name case-insensitively matches the string \"Max-\n    // Age\", the user agent MUST process the cookie-av as follows.\n\n    // 1. If the first character of the attribute-value is not a DIGIT or a\n    //    \"-\" character, ignore the cookie-av.\n    const charCode = attributeValue.charCodeAt(0)\n\n    if ((charCode < 48 || charCode > 57) && attributeValue[0] !== '-') {\n      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n    }\n\n    // 2. If the remainder of attribute-value contains a non-DIGIT\n    //    character, ignore the cookie-av.\n    if (!/^\\d+$/.test(attributeValue)) {\n      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n    }\n\n    // 3. Let delta-seconds be the attribute-value converted to an integer.\n    const deltaSeconds = Number(attributeValue)\n\n    // 4. Let cookie-age-limit be the maximum age of the cookie (which\n    //    SHOULD be 400 days or less, see Section 4.1.2.2).\n\n    // 5. Set delta-seconds to the smaller of its present value and cookie-\n    //    age-limit.\n    // deltaSeconds = Math.min(deltaSeconds * 1000, maxExpiresMs)\n\n    // 6. If delta-seconds is less than or equal to zero (0), let expiry-\n    //    time be the earliest representable date and time.  Otherwise, let\n    //    the expiry-time be the current date and time plus delta-seconds\n    //    seconds.\n    // const expiryTime = deltaSeconds <= 0 ? Date.now() : Date.now() + deltaSeconds\n\n    // 7. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Max-Age and an attribute-value of expiry-time.\n    cookieAttributeList.maxAge = deltaSeconds\n  } else if (attributeNameLowercase === 'domain') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.3\n    // If the attribute-name case-insensitively matches the string \"Domain\",\n    // the user agent MUST process the cookie-av as follows.\n\n    // 1. Let cookie-domain be the attribute-value.\n    let cookieDomain = attributeValue\n\n    // 2. If cookie-domain starts with %x2E (\".\"), let cookie-domain be\n    //    cookie-domain without its leading %x2E (\".\").\n    if (cookieDomain[0] === '.') {\n      cookieDomain = cookieDomain.slice(1)\n    }\n\n    // 3. Convert the cookie-domain to lower case.\n    cookieDomain = cookieDomain.toLowerCase()\n\n    // 4. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Domain and an attribute-value of cookie-domain.\n    cookieAttributeList.domain = cookieDomain\n  } else if (attributeNameLowercase === 'path') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.4\n    // If the attribute-name case-insensitively matches the string \"Path\",\n    // the user agent MUST process the cookie-av as follows.\n\n    // 1. If the attribute-value is empty or if the first character of the\n    //    attribute-value is not %x2F (\"/\"):\n    let cookiePath = ''\n    if (attributeValue.length === 0 || attributeValue[0] !== '/') {\n      // 1. Let cookie-path be the default-path.\n      cookiePath = '/'\n    } else {\n      // Otherwise:\n\n      // 1. Let cookie-path be the attribute-value.\n      cookiePath = attributeValue\n    }\n\n    // 2. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Path and an attribute-value of cookie-path.\n    cookieAttributeList.path = cookiePath\n  } else if (attributeNameLowercase === 'secure') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.5\n    // If the attribute-name case-insensitively matches the string \"Secure\",\n    // the user agent MUST append an attribute to the cookie-attribute-list\n    // with an attribute-name of Secure and an empty attribute-value.\n\n    cookieAttributeList.secure = true\n  } else if (attributeNameLowercase === 'httponly') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.6\n    // If the attribute-name case-insensitively matches the string\n    // \"HttpOnly\", the user agent MUST append an attribute to the cookie-\n    // attribute-list with an attribute-name of HttpOnly and an empty\n    // attribute-value.\n\n    cookieAttributeList.httpOnly = true\n  } else if (attributeNameLowercase === 'samesite') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.7\n    // If the attribute-name case-insensitively matches the string\n    // \"SameSite\", the user agent MUST process the cookie-av as follows:\n\n    // 1. Let enforcement be \"Default\".\n    let enforcement = 'Default'\n\n    const attributeValueLowercase = attributeValue.toLowerCase()\n    // 2. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"None\", set enforcement to \"None\".\n    if (attributeValueLowercase.includes('none')) {\n      enforcement = 'None'\n    }\n\n    // 3. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"Strict\", set enforcement to \"Strict\".\n    if (attributeValueLowercase.includes('strict')) {\n      enforcement = 'Strict'\n    }\n\n    // 4. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"Lax\", set enforcement to \"Lax\".\n    if (attributeValueLowercase.includes('lax')) {\n      enforcement = 'Lax'\n    }\n\n    // 5. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of \"SameSite\" and an attribute-value of\n    //    enforcement.\n    cookieAttributeList.sameSite = enforcement\n  } else {\n    cookieAttributeList.unparsed ??= []\n\n    cookieAttributeList.unparsed.push(`${attributeName}=${attributeValue}`)\n  }\n\n  // 8. Return to Step 1 of this algorithm.\n  return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n}\n\nmodule.exports = {\n  parseSetCookie,\n  parseUnparsedAttributes\n}\n","'use strict'\n\nconst { parseSetCookie } = require('./parse')\nconst { stringify, getHeadersList } = require('./util')\nconst { webidl } = require('../fetch/webidl')\nconst { Headers } = require('../fetch/headers')\n\n/**\n * @typedef {Object} Cookie\n * @property {string} name\n * @property {string} value\n * @property {Date|number|undefined} expires\n * @property {number|undefined} maxAge\n * @property {string|undefined} domain\n * @property {string|undefined} path\n * @property {boolean|undefined} secure\n * @property {boolean|undefined} httpOnly\n * @property {'Strict'|'Lax'|'None'} sameSite\n * @property {string[]} unparsed\n */\n\n/**\n * @param {Headers} headers\n * @returns {Record<string, string>}\n */\nfunction getCookies (headers) {\n  webidl.argumentLengthCheck(arguments, 1, { header: 'getCookies' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const cookie = headers.get('cookie')\n  const out = {}\n\n  if (!cookie) {\n    return out\n  }\n\n  for (const piece of cookie.split(';')) {\n    const [name, ...value] = piece.split('=')\n\n    out[name.trim()] = value.join('=')\n  }\n\n  return out\n}\n\n/**\n * @param {Headers} headers\n * @param {string} name\n * @param {{ path?: string, domain?: string }|undefined} attributes\n * @returns {void}\n */\nfunction deleteCookie (headers, name, attributes) {\n  webidl.argumentLengthCheck(arguments, 2, { header: 'deleteCookie' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  name = webidl.converters.DOMString(name)\n  attributes = webidl.converters.DeleteCookieAttributes(attributes)\n\n  // Matches behavior of\n  // https://github.com/denoland/deno_std/blob/63827b16330b82489a04614027c33b7904e08be5/http/cookie.ts#L278\n  setCookie(headers, {\n    name,\n    value: '',\n    expires: new Date(0),\n    ...attributes\n  })\n}\n\n/**\n * @param {Headers} headers\n * @returns {Cookie[]}\n */\nfunction getSetCookies (headers) {\n  webidl.argumentLengthCheck(arguments, 1, { header: 'getSetCookies' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const cookies = getHeadersList(headers).cookies\n\n  if (!cookies) {\n    return []\n  }\n\n  // In older versions of undici, cookies is a list of name:value.\n  return cookies.map((pair) => parseSetCookie(Array.isArray(pair) ? pair[1] : pair))\n}\n\n/**\n * @param {Headers} headers\n * @param {Cookie} cookie\n * @returns {void}\n */\nfunction setCookie (headers, cookie) {\n  webidl.argumentLengthCheck(arguments, 2, { header: 'setCookie' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  cookie = webidl.converters.Cookie(cookie)\n\n  const str = stringify(cookie)\n\n  if (str) {\n    headers.append('Set-Cookie', stringify(cookie))\n  }\n}\n\nwebidl.converters.DeleteCookieAttributes = webidl.dictionaryConverter([\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'path',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'domain',\n    defaultValue: null\n  }\n])\n\nwebidl.converters.Cookie = webidl.dictionaryConverter([\n  {\n    converter: webidl.converters.DOMString,\n    key: 'name'\n  },\n  {\n    converter: webidl.converters.DOMString,\n    key: 'value'\n  },\n  {\n    converter: webidl.nullableConverter((value) => {\n      if (typeof value === 'number') {\n        return webidl.converters['unsigned long long'](value)\n      }\n\n      return new Date(value)\n    }),\n    key: 'expires',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters['long long']),\n    key: 'maxAge',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'domain',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'path',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.boolean),\n    key: 'secure',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.boolean),\n    key: 'httpOnly',\n    defaultValue: null\n  },\n  {\n    converter: webidl.converters.USVString,\n    key: 'sameSite',\n    allowedValues: ['Strict', 'Lax', 'None']\n  },\n  {\n    converter: webidl.sequenceConverter(webidl.converters.DOMString),\n    key: 'unparsed',\n    defaultValue: []\n  }\n])\n\nmodule.exports = {\n  getCookies,\n  deleteCookie,\n  getSetCookies,\n  setCookie\n}\n","'use strict'\n\n// This is a Globally Unique Identifier unique used\n// to validate that the endpoint accepts websocket\n// connections.\n// See https://www.rfc-editor.org/rfc/rfc6455.html#section-1.3\nconst uid = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'\n\n/** @type {PropertyDescriptor} */\nconst staticPropertyDescriptors = {\n  enumerable: true,\n  writable: false,\n  configurable: false\n}\n\nconst states = {\n  CONNECTING: 0,\n  OPEN: 1,\n  CLOSING: 2,\n  CLOSED: 3\n}\n\nconst opcodes = {\n  CONTINUATION: 0x0,\n  TEXT: 0x1,\n  BINARY: 0x2,\n  CLOSE: 0x8,\n  PING: 0x9,\n  PONG: 0xA\n}\n\nconst maxUnsigned16Bit = 2 ** 16 - 1 // 65535\n\nconst parserStates = {\n  INFO: 0,\n  PAYLOADLENGTH_16: 2,\n  PAYLOADLENGTH_64: 3,\n  READ_DATA: 4\n}\n\nconst emptyBuffer = Buffer.allocUnsafe(0)\n\nmodule.exports = {\n  uid,\n  staticPropertyDescriptors,\n  states,\n  opcodes,\n  maxUnsigned16Bit,\n  parserStates,\n  emptyBuffer\n}\n","'use strict'\n\nmodule.exports = {\n  kWebSocketURL: Symbol('url'),\n  kReadyState: Symbol('ready state'),\n  kController: Symbol('controller'),\n  kResponse: Symbol('response'),\n  kBinaryType: Symbol('binary type'),\n  kSentClose: Symbol('sent close'),\n  kReceivedClose: Symbol('received close'),\n  kByteParser: Symbol('byte parser')\n}\n","'use strict'\n\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../core/util')\nconst { MessagePort } = require('worker_threads')\n\n/**\n * @see https://html.spec.whatwg.org/multipage/comms.html#messageevent\n */\nclass MessageEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict = {}) {\n    webidl.argumentLengthCheck(arguments, 1, { header: 'MessageEvent constructor' })\n\n    type = webidl.converters.DOMString(type)\n    eventInitDict = webidl.converters.MessageEventInit(eventInitDict)\n\n    super(type, eventInitDict)\n\n    this.#eventInit = eventInitDict\n  }\n\n  get data () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.data\n  }\n\n  get origin () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.origin\n  }\n\n  get lastEventId () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.lastEventId\n  }\n\n  get source () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.source\n  }\n\n  get ports () {\n    webidl.brandCheck(this, MessageEvent)\n\n    if (!Object.isFrozen(this.#eventInit.ports)) {\n      Object.freeze(this.#eventInit.ports)\n    }\n\n    return this.#eventInit.ports\n  }\n\n  initMessageEvent (\n    type,\n    bubbles = false,\n    cancelable = false,\n    data = null,\n    origin = '',\n    lastEventId = '',\n    source = null,\n    ports = []\n  ) {\n    webidl.brandCheck(this, MessageEvent)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'MessageEvent.initMessageEvent' })\n\n    return new MessageEvent(type, {\n      bubbles, cancelable, data, origin, lastEventId, source, ports\n    })\n  }\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#the-closeevent-interface\n */\nclass CloseEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict = {}) {\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CloseEvent constructor' })\n\n    type = webidl.converters.DOMString(type)\n    eventInitDict = webidl.converters.CloseEventInit(eventInitDict)\n\n    super(type, eventInitDict)\n\n    this.#eventInit = eventInitDict\n  }\n\n  get wasClean () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.wasClean\n  }\n\n  get code () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.code\n  }\n\n  get reason () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.reason\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/webappapis.html#the-errorevent-interface\nclass ErrorEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict) {\n    webidl.argumentLengthCheck(arguments, 1, { header: 'ErrorEvent constructor' })\n\n    super(type, eventInitDict)\n\n    type = webidl.converters.DOMString(type)\n    eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {})\n\n    this.#eventInit = eventInitDict\n  }\n\n  get message () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.message\n  }\n\n  get filename () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.filename\n  }\n\n  get lineno () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.lineno\n  }\n\n  get colno () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.colno\n  }\n\n  get error () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.error\n  }\n}\n\nObject.defineProperties(MessageEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'MessageEvent',\n    configurable: true\n  },\n  data: kEnumerableProperty,\n  origin: kEnumerableProperty,\n  lastEventId: kEnumerableProperty,\n  source: kEnumerableProperty,\n  ports: kEnumerableProperty,\n  initMessageEvent: kEnumerableProperty\n})\n\nObject.defineProperties(CloseEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'CloseEvent',\n    configurable: true\n  },\n  reason: kEnumerableProperty,\n  code: kEnumerableProperty,\n  wasClean: kEnumerableProperty\n})\n\nObject.defineProperties(ErrorEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'ErrorEvent',\n    configurable: true\n  },\n  message: kEnumerableProperty,\n  filename: kEnumerableProperty,\n  lineno: kEnumerableProperty,\n  colno: kEnumerableProperty,\n  error: kEnumerableProperty\n})\n\nwebidl.converters.MessagePort = webidl.interfaceConverter(MessagePort)\n\nwebidl.converters['sequence<MessagePort>'] = webidl.sequenceConverter(\n  webidl.converters.MessagePort\n)\n\nconst eventInit = [\n  {\n    key: 'bubbles',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'cancelable',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'composed',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  }\n]\n\nwebidl.converters.MessageEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'data',\n    converter: webidl.converters.any,\n    defaultValue: null\n  },\n  {\n    key: 'origin',\n    converter: webidl.converters.USVString,\n    defaultValue: ''\n  },\n  {\n    key: 'lastEventId',\n    converter: webidl.converters.DOMString,\n    defaultValue: ''\n  },\n  {\n    key: 'source',\n    // Node doesn't implement WindowProxy or ServiceWorker, so the only\n    // valid value for source is a MessagePort.\n    converter: webidl.nullableConverter(webidl.converters.MessagePort),\n    defaultValue: null\n  },\n  {\n    key: 'ports',\n    converter: webidl.converters['sequence<MessagePort>'],\n    get defaultValue () {\n      return []\n    }\n  }\n])\n\nwebidl.converters.CloseEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'wasClean',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'code',\n    converter: webidl.converters['unsigned short'],\n    defaultValue: 0\n  },\n  {\n    key: 'reason',\n    converter: webidl.converters.USVString,\n    defaultValue: ''\n  }\n])\n\nwebidl.converters.ErrorEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'message',\n    converter: webidl.converters.DOMString,\n    defaultValue: ''\n  },\n  {\n    key: 'filename',\n    converter: webidl.converters.USVString,\n    defaultValue: ''\n  },\n  {\n    key: 'lineno',\n    converter: webidl.converters['unsigned long'],\n    defaultValue: 0\n  },\n  {\n    key: 'colno',\n    converter: webidl.converters['unsigned long'],\n    defaultValue: 0\n  },\n  {\n    key: 'error',\n    converter: webidl.converters.any\n  }\n])\n\nmodule.exports = {\n  MessageEvent,\n  CloseEvent,\n  ErrorEvent\n}\n","'use strict'\n\nconst { kReadyState, kController, kResponse, kBinaryType, kWebSocketURL } = require('./symbols')\nconst { states, opcodes } = require('./constants')\nconst { MessageEvent, ErrorEvent } = require('./events')\n\n/* globals Blob */\n\n/**\n * @param {import('./websocket').WebSocket} ws\n */\nfunction isEstablished (ws) {\n  // If the server's response is validated as provided for above, it is\n  // said that _The WebSocket Connection is Established_ and that the\n  // WebSocket Connection is in the OPEN state.\n  return ws[kReadyState] === states.OPEN\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n */\nfunction isClosing (ws) {\n  // Upon either sending or receiving a Close control frame, it is said\n  // that _The WebSocket Closing Handshake is Started_ and that the\n  // WebSocket connection is in the CLOSING state.\n  return ws[kReadyState] === states.CLOSING\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n */\nfunction isClosed (ws) {\n  return ws[kReadyState] === states.CLOSED\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#concept-event-fire\n * @param {string} e\n * @param {EventTarget} target\n * @param {EventInit | undefined} eventInitDict\n */\nfunction fireEvent (e, target, eventConstructor = Event, eventInitDict) {\n  // 1. If eventConstructor is not given, then let eventConstructor be Event.\n\n  // 2. Let event be the result of creating an event given eventConstructor,\n  //    in the relevant realm of target.\n  // 3. Initialize event’s type attribute to e.\n  const event = new eventConstructor(e, eventInitDict) // eslint-disable-line new-cap\n\n  // 4. Initialize any other IDL attributes of event as described in the\n  //    invocation of this algorithm.\n\n  // 5. Return the result of dispatching event at target, with legacy target\n  //    override flag set if set.\n  target.dispatchEvent(event)\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n * @param {import('./websocket').WebSocket} ws\n * @param {number} type Opcode\n * @param {Buffer} data application data\n */\nfunction websocketMessageReceived (ws, type, data) {\n  // 1. If ready state is not OPEN (1), then return.\n  if (ws[kReadyState] !== states.OPEN) {\n    return\n  }\n\n  // 2. Let dataForEvent be determined by switching on type and binary type:\n  let dataForEvent\n\n  if (type === opcodes.TEXT) {\n    // -> type indicates that the data is Text\n    //      a new DOMString containing data\n    try {\n      dataForEvent = new TextDecoder('utf-8', { fatal: true }).decode(data)\n    } catch {\n      failWebsocketConnection(ws, 'Received invalid UTF-8 in text frame.')\n      return\n    }\n  } else if (type === opcodes.BINARY) {\n    if (ws[kBinaryType] === 'blob') {\n      // -> type indicates that the data is Binary and binary type is \"blob\"\n      //      a new Blob object, created in the relevant Realm of the WebSocket\n      //      object, that represents data as its raw data\n      dataForEvent = new Blob([data])\n    } else {\n      // -> type indicates that the data is Binary and binary type is \"arraybuffer\"\n      //      a new ArrayBuffer object, created in the relevant Realm of the\n      //      WebSocket object, whose contents are data\n      dataForEvent = new Uint8Array(data).buffer\n    }\n  }\n\n  // 3. Fire an event named message at the WebSocket object, using MessageEvent,\n  //    with the origin attribute initialized to the serialization of the WebSocket\n  //    object’s url's origin, and the data attribute initialized to dataForEvent.\n  fireEvent('message', ws, MessageEvent, {\n    origin: ws[kWebSocketURL].origin,\n    data: dataForEvent\n  })\n}\n\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc6455\n * @see https://datatracker.ietf.org/doc/html/rfc2616\n * @see https://bugs.chromium.org/p/chromium/issues/detail?id=398407\n * @param {string} protocol\n */\nfunction isValidSubprotocol (protocol) {\n  // If present, this value indicates one\n  // or more comma-separated subprotocol the client wishes to speak,\n  // ordered by preference.  The elements that comprise this value\n  // MUST be non-empty strings with characters in the range U+0021 to\n  // U+007E not including separator characters as defined in\n  // [RFC2616] and MUST all be unique strings.\n  if (protocol.length === 0) {\n    return false\n  }\n\n  for (const char of protocol) {\n    const code = char.charCodeAt(0)\n\n    if (\n      code < 0x21 ||\n      code > 0x7E ||\n      char === '(' ||\n      char === ')' ||\n      char === '<' ||\n      char === '>' ||\n      char === '@' ||\n      char === ',' ||\n      char === ';' ||\n      char === ':' ||\n      char === '\\\\' ||\n      char === '\"' ||\n      char === '/' ||\n      char === '[' ||\n      char === ']' ||\n      char === '?' ||\n      char === '=' ||\n      char === '{' ||\n      char === '}' ||\n      code === 32 || // SP\n      code === 9 // HT\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7-4\n * @param {number} code\n */\nfunction isValidStatusCode (code) {\n  if (code >= 1000 && code < 1015) {\n    return (\n      code !== 1004 && // reserved\n      code !== 1005 && // \"MUST NOT be set as a status code\"\n      code !== 1006 // \"MUST NOT be set as a status code\"\n    )\n  }\n\n  return code >= 3000 && code <= 4999\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n * @param {string|undefined} reason\n */\nfunction failWebsocketConnection (ws, reason) {\n  const { [kController]: controller, [kResponse]: response } = ws\n\n  controller.abort()\n\n  if (response?.socket && !response.socket.destroyed) {\n    response.socket.destroy()\n  }\n\n  if (reason) {\n    fireEvent('error', ws, ErrorEvent, {\n      error: new Error(reason)\n    })\n  }\n}\n\nmodule.exports = {\n  isEstablished,\n  isClosing,\n  isClosed,\n  fireEvent,\n  isValidSubprotocol,\n  isValidStatusCode,\n  failWebsocketConnection,\n  websocketMessageReceived\n}\n","'use strict'\n\nconst diagnosticsChannel = require('diagnostics_channel')\nconst { uid, states } = require('./constants')\nconst {\n  kReadyState,\n  kSentClose,\n  kByteParser,\n  kReceivedClose\n} = require('./symbols')\nconst { fireEvent, failWebsocketConnection } = require('./util')\nconst { CloseEvent } = require('./events')\nconst { makeRequest } = require('../fetch/request')\nconst { fetching } = require('../fetch/index')\nconst { Headers } = require('../fetch/headers')\nconst { getGlobalDispatcher } = require('../global')\nconst { kHeadersList } = require('../core/symbols')\n\nconst channels = {}\nchannels.open = diagnosticsChannel.channel('undici:websocket:open')\nchannels.close = diagnosticsChannel.channel('undici:websocket:close')\nchannels.socketError = diagnosticsChannel.channel('undici:websocket:socket_error')\n\n/** @type {import('crypto')} */\nlet crypto\ntry {\n  crypto = require('crypto')\n} catch {\n\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#concept-websocket-establish\n * @param {URL} url\n * @param {string|string[]} protocols\n * @param {import('./websocket').WebSocket} ws\n * @param {(response: any) => void} onEstablish\n * @param {Partial<import('../../types/websocket').WebSocketInit>} options\n */\nfunction establishWebSocketConnection (url, protocols, ws, onEstablish, options) {\n  // 1. Let requestURL be a copy of url, with its scheme set to \"http\", if url’s\n  //    scheme is \"ws\", and to \"https\" otherwise.\n  const requestURL = url\n\n  requestURL.protocol = url.protocol === 'ws:' ? 'http:' : 'https:'\n\n  // 2. Let request be a new request, whose URL is requestURL, client is client,\n  //    service-workers mode is \"none\", referrer is \"no-referrer\", mode is\n  //    \"websocket\", credentials mode is \"include\", cache mode is \"no-store\" ,\n  //    and redirect mode is \"error\".\n  const request = makeRequest({\n    urlList: [requestURL],\n    serviceWorkers: 'none',\n    referrer: 'no-referrer',\n    mode: 'websocket',\n    credentials: 'include',\n    cache: 'no-store',\n    redirect: 'error'\n  })\n\n  // Note: undici extension, allow setting custom headers.\n  if (options.headers) {\n    const headersList = new Headers(options.headers)[kHeadersList]\n\n    request.headersList = headersList\n  }\n\n  // 3. Append (`Upgrade`, `websocket`) to request’s header list.\n  // 4. Append (`Connection`, `Upgrade`) to request’s header list.\n  // Note: both of these are handled by undici currently.\n  // https://github.com/nodejs/undici/blob/68c269c4144c446f3f1220951338daef4a6b5ec4/lib/client.js#L1397\n\n  // 5. Let keyValue be a nonce consisting of a randomly selected\n  //    16-byte value that has been forgiving-base64-encoded and\n  //    isomorphic encoded.\n  const keyValue = crypto.randomBytes(16).toString('base64')\n\n  // 6. Append (`Sec-WebSocket-Key`, keyValue) to request’s\n  //    header list.\n  request.headersList.append('sec-websocket-key', keyValue)\n\n  // 7. Append (`Sec-WebSocket-Version`, `13`) to request’s\n  //    header list.\n  request.headersList.append('sec-websocket-version', '13')\n\n  // 8. For each protocol in protocols, combine\n  //    (`Sec-WebSocket-Protocol`, protocol) in request’s header\n  //    list.\n  for (const protocol of protocols) {\n    request.headersList.append('sec-websocket-protocol', protocol)\n  }\n\n  // 9. Let permessageDeflate be a user-agent defined\n  //    \"permessage-deflate\" extension header value.\n  // https://github.com/mozilla/gecko-dev/blob/ce78234f5e653a5d3916813ff990f053510227bc/netwerk/protocol/websocket/WebSocketChannel.cpp#L2673\n  // TODO: enable once permessage-deflate is supported\n  const permessageDeflate = '' // 'permessage-deflate; 15'\n\n  // 10. Append (`Sec-WebSocket-Extensions`, permessageDeflate) to\n  //     request’s header list.\n  // request.headersList.append('sec-websocket-extensions', permessageDeflate)\n\n  // 11. Fetch request with useParallelQueue set to true, and\n  //     processResponse given response being these steps:\n  const controller = fetching({\n    request,\n    useParallelQueue: true,\n    dispatcher: options.dispatcher ?? getGlobalDispatcher(),\n    processResponse (response) {\n      // 1. If response is a network error or its status is not 101,\n      //    fail the WebSocket connection.\n      if (response.type === 'error' || response.status !== 101) {\n        failWebsocketConnection(ws, 'Received network error or non-101 status code.')\n        return\n      }\n\n      // 2. If protocols is not the empty list and extracting header\n      //    list values given `Sec-WebSocket-Protocol` and response’s\n      //    header list results in null, failure, or the empty byte\n      //    sequence, then fail the WebSocket connection.\n      if (protocols.length !== 0 && !response.headersList.get('Sec-WebSocket-Protocol')) {\n        failWebsocketConnection(ws, 'Server did not respond with sent protocols.')\n        return\n      }\n\n      // 3. Follow the requirements stated step 2 to step 6, inclusive,\n      //    of the last set of steps in section 4.1 of The WebSocket\n      //    Protocol to validate response. This either results in fail\n      //    the WebSocket connection or the WebSocket connection is\n      //    established.\n\n      // 2. If the response lacks an |Upgrade| header field or the |Upgrade|\n      //    header field contains a value that is not an ASCII case-\n      //    insensitive match for the value \"websocket\", the client MUST\n      //    _Fail the WebSocket Connection_.\n      if (response.headersList.get('Upgrade')?.toLowerCase() !== 'websocket') {\n        failWebsocketConnection(ws, 'Server did not set Upgrade header to \"websocket\".')\n        return\n      }\n\n      // 3. If the response lacks a |Connection| header field or the\n      //    |Connection| header field doesn't contain a token that is an\n      //    ASCII case-insensitive match for the value \"Upgrade\", the client\n      //    MUST _Fail the WebSocket Connection_.\n      if (response.headersList.get('Connection')?.toLowerCase() !== 'upgrade') {\n        failWebsocketConnection(ws, 'Server did not set Connection header to \"upgrade\".')\n        return\n      }\n\n      // 4. If the response lacks a |Sec-WebSocket-Accept| header field or\n      //    the |Sec-WebSocket-Accept| contains a value other than the\n      //    base64-encoded SHA-1 of the concatenation of the |Sec-WebSocket-\n      //    Key| (as a string, not base64-decoded) with the string \"258EAFA5-\n      //    E914-47DA-95CA-C5AB0DC85B11\" but ignoring any leading and\n      //    trailing whitespace, the client MUST _Fail the WebSocket\n      //    Connection_.\n      const secWSAccept = response.headersList.get('Sec-WebSocket-Accept')\n      const digest = crypto.createHash('sha1').update(keyValue + uid).digest('base64')\n      if (secWSAccept !== digest) {\n        failWebsocketConnection(ws, 'Incorrect hash received in Sec-WebSocket-Accept header.')\n        return\n      }\n\n      // 5. If the response includes a |Sec-WebSocket-Extensions| header\n      //    field and this header field indicates the use of an extension\n      //    that was not present in the client's handshake (the server has\n      //    indicated an extension not requested by the client), the client\n      //    MUST _Fail the WebSocket Connection_.  (The parsing of this\n      //    header field to determine which extensions are requested is\n      //    discussed in Section 9.1.)\n      const secExtension = response.headersList.get('Sec-WebSocket-Extensions')\n\n      if (secExtension !== null && secExtension !== permessageDeflate) {\n        failWebsocketConnection(ws, 'Received different permessage-deflate than the one set.')\n        return\n      }\n\n      // 6. If the response includes a |Sec-WebSocket-Protocol| header field\n      //    and this header field indicates the use of a subprotocol that was\n      //    not present in the client's handshake (the server has indicated a\n      //    subprotocol not requested by the client), the client MUST _Fail\n      //    the WebSocket Connection_.\n      const secProtocol = response.headersList.get('Sec-WebSocket-Protocol')\n\n      if (secProtocol !== null && secProtocol !== request.headersList.get('Sec-WebSocket-Protocol')) {\n        failWebsocketConnection(ws, 'Protocol was not set in the opening handshake.')\n        return\n      }\n\n      response.socket.on('data', onSocketData)\n      response.socket.on('close', onSocketClose)\n      response.socket.on('error', onSocketError)\n\n      if (channels.open.hasSubscribers) {\n        channels.open.publish({\n          address: response.socket.address(),\n          protocol: secProtocol,\n          extensions: secExtension\n        })\n      }\n\n      onEstablish(response)\n    }\n  })\n\n  return controller\n}\n\n/**\n * @param {Buffer} chunk\n */\nfunction onSocketData (chunk) {\n  if (!this.ws[kByteParser].write(chunk)) {\n    this.pause()\n  }\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.4\n */\nfunction onSocketClose () {\n  const { ws } = this\n\n  // If the TCP connection was closed after the\n  // WebSocket closing handshake was completed, the WebSocket connection\n  // is said to have been closed _cleanly_.\n  const wasClean = ws[kSentClose] && ws[kReceivedClose]\n\n  let code = 1005\n  let reason = ''\n\n  const result = ws[kByteParser].closingInfo\n\n  if (result) {\n    code = result.code ?? 1005\n    reason = result.reason\n  } else if (!ws[kSentClose]) {\n    // If _The WebSocket\n    // Connection is Closed_ and no Close control frame was received by the\n    // endpoint (such as could occur if the underlying transport connection\n    // is lost), _The WebSocket Connection Close Code_ is considered to be\n    // 1006.\n    code = 1006\n  }\n\n  // 1. Change the ready state to CLOSED (3).\n  ws[kReadyState] = states.CLOSED\n\n  // 2. If the user agent was required to fail the WebSocket\n  //    connection, or if the WebSocket connection was closed\n  //    after being flagged as full, fire an event named error\n  //    at the WebSocket object.\n  // TODO\n\n  // 3. Fire an event named close at the WebSocket object,\n  //    using CloseEvent, with the wasClean attribute\n  //    initialized to true if the connection closed cleanly\n  //    and false otherwise, the code attribute initialized to\n  //    the WebSocket connection close code, and the reason\n  //    attribute initialized to the result of applying UTF-8\n  //    decode without BOM to the WebSocket connection close\n  //    reason.\n  fireEvent('close', ws, CloseEvent, {\n    wasClean, code, reason\n  })\n\n  if (channels.close.hasSubscribers) {\n    channels.close.publish({\n      websocket: ws,\n      code,\n      reason\n    })\n  }\n}\n\nfunction onSocketError (error) {\n  const { ws } = this\n\n  ws[kReadyState] = states.CLOSING\n\n  if (channels.socketError.hasSubscribers) {\n    channels.socketError.publish(error)\n  }\n\n  this.destroy()\n}\n\nmodule.exports = {\n  establishWebSocketConnection\n}\n","'use strict'\n\nconst { maxUnsigned16Bit } = require('./constants')\n\n/** @type {import('crypto')} */\nlet crypto\ntry {\n  crypto = require('crypto')\n} catch {\n\n}\n\nclass WebsocketFrameSend {\n  /**\n   * @param {Buffer|undefined} data\n   */\n  constructor (data) {\n    this.frameData = data\n    this.maskKey = crypto.randomBytes(4)\n  }\n\n  createFrame (opcode) {\n    const bodyLength = this.frameData?.byteLength ?? 0\n\n    /** @type {number} */\n    let payloadLength = bodyLength // 0-125\n    let offset = 6\n\n    if (bodyLength > maxUnsigned16Bit) {\n      offset += 8 // payload length is next 8 bytes\n      payloadLength = 127\n    } else if (bodyLength > 125) {\n      offset += 2 // payload length is next 2 bytes\n      payloadLength = 126\n    }\n\n    const buffer = Buffer.allocUnsafe(bodyLength + offset)\n\n    // Clear first 2 bytes, everything else is overwritten\n    buffer[0] = buffer[1] = 0\n    buffer[0] |= 0x80 // FIN\n    buffer[0] = (buffer[0] & 0xF0) + opcode // opcode\n\n    /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */\n    buffer[offset - 4] = this.maskKey[0]\n    buffer[offset - 3] = this.maskKey[1]\n    buffer[offset - 2] = this.maskKey[2]\n    buffer[offset - 1] = this.maskKey[3]\n\n    buffer[1] = payloadLength\n\n    if (payloadLength === 126) {\n      buffer.writeUInt16BE(bodyLength, 2)\n    } else if (payloadLength === 127) {\n      // Clear extended payload length\n      buffer[2] = buffer[3] = 0\n      buffer.writeUIntBE(bodyLength, 4, 6)\n    }\n\n    buffer[1] |= 0x80 // MASK\n\n    // mask body\n    for (let i = 0; i < bodyLength; i++) {\n      buffer[offset + i] = this.frameData[i] ^ this.maskKey[i % 4]\n    }\n\n    return buffer\n  }\n}\n\nmodule.exports = {\n  WebsocketFrameSend\n}\n","'use strict'\n\nconst { Writable } = require('stream')\nconst diagnosticsChannel = require('diagnostics_channel')\nconst { parserStates, opcodes, states, emptyBuffer } = require('./constants')\nconst { kReadyState, kSentClose, kResponse, kReceivedClose } = require('./symbols')\nconst { isValidStatusCode, failWebsocketConnection, websocketMessageReceived } = require('./util')\nconst { WebsocketFrameSend } = require('./frame')\n\n// This code was influenced by ws released under the MIT license.\n// Copyright (c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n// Copyright (c) 2013 Arnout Kazemier and contributors\n// Copyright (c) 2016 Luigi Pinca and contributors\n\nconst channels = {}\nchannels.ping = diagnosticsChannel.channel('undici:websocket:ping')\nchannels.pong = diagnosticsChannel.channel('undici:websocket:pong')\n\nclass ByteParser extends Writable {\n  #buffers = []\n  #byteOffset = 0\n\n  #state = parserStates.INFO\n\n  #info = {}\n  #fragments = []\n\n  constructor (ws) {\n    super()\n\n    this.ws = ws\n  }\n\n  /**\n   * @param {Buffer} chunk\n   * @param {() => void} callback\n   */\n  _write (chunk, _, callback) {\n    this.#buffers.push(chunk)\n    this.#byteOffset += chunk.length\n\n    this.run(callback)\n  }\n\n  /**\n   * Runs whenever a new chunk is received.\n   * Callback is called whenever there are no more chunks buffering,\n   * or not enough bytes are buffered to parse.\n   */\n  run (callback) {\n    while (true) {\n      if (this.#state === parserStates.INFO) {\n        // If there aren't enough bytes to parse the payload length, etc.\n        if (this.#byteOffset < 2) {\n          return callback()\n        }\n\n        const buffer = this.consume(2)\n\n        this.#info.fin = (buffer[0] & 0x80) !== 0\n        this.#info.opcode = buffer[0] & 0x0F\n\n        // If we receive a fragmented message, we use the type of the first\n        // frame to parse the full message as binary/text, when it's terminated\n        this.#info.originalOpcode ??= this.#info.opcode\n\n        this.#info.fragmented = !this.#info.fin && this.#info.opcode !== opcodes.CONTINUATION\n\n        if (this.#info.fragmented && this.#info.opcode !== opcodes.BINARY && this.#info.opcode !== opcodes.TEXT) {\n          // Only text and binary frames can be fragmented\n          failWebsocketConnection(this.ws, 'Invalid frame type was fragmented.')\n          return\n        }\n\n        const payloadLength = buffer[1] & 0x7F\n\n        if (payloadLength <= 125) {\n          this.#info.payloadLength = payloadLength\n          this.#state = parserStates.READ_DATA\n        } else if (payloadLength === 126) {\n          this.#state = parserStates.PAYLOADLENGTH_16\n        } else if (payloadLength === 127) {\n          this.#state = parserStates.PAYLOADLENGTH_64\n        }\n\n        if (this.#info.fragmented && payloadLength > 125) {\n          // A fragmented frame can't be fragmented itself\n          failWebsocketConnection(this.ws, 'Fragmented frame exceeded 125 bytes.')\n          return\n        } else if (\n          (this.#info.opcode === opcodes.PING ||\n            this.#info.opcode === opcodes.PONG ||\n            this.#info.opcode === opcodes.CLOSE) &&\n          payloadLength > 125\n        ) {\n          // Control frames can have a payload length of 125 bytes MAX\n          failWebsocketConnection(this.ws, 'Payload length for control frame exceeded 125 bytes.')\n          return\n        } else if (this.#info.opcode === opcodes.CLOSE) {\n          if (payloadLength === 1) {\n            failWebsocketConnection(this.ws, 'Received close frame with a 1-byte body.')\n            return\n          }\n\n          const body = this.consume(payloadLength)\n\n          this.#info.closeInfo = this.parseCloseBody(false, body)\n\n          if (!this.ws[kSentClose]) {\n            // If an endpoint receives a Close frame and did not previously send a\n            // Close frame, the endpoint MUST send a Close frame in response.  (When\n            // sending a Close frame in response, the endpoint typically echos the\n            // status code it received.)\n            const body = Buffer.allocUnsafe(2)\n            body.writeUInt16BE(this.#info.closeInfo.code, 0)\n            const closeFrame = new WebsocketFrameSend(body)\n\n            this.ws[kResponse].socket.write(\n              closeFrame.createFrame(opcodes.CLOSE),\n              (err) => {\n                if (!err) {\n                  this.ws[kSentClose] = true\n                }\n              }\n            )\n          }\n\n          // Upon either sending or receiving a Close control frame, it is said\n          // that _The WebSocket Closing Handshake is Started_ and that the\n          // WebSocket connection is in the CLOSING state.\n          this.ws[kReadyState] = states.CLOSING\n          this.ws[kReceivedClose] = true\n\n          this.end()\n\n          return\n        } else if (this.#info.opcode === opcodes.PING) {\n          // Upon receipt of a Ping frame, an endpoint MUST send a Pong frame in\n          // response, unless it already received a Close frame.\n          // A Pong frame sent in response to a Ping frame must have identical\n          // \"Application data\"\n\n          const body = this.consume(payloadLength)\n\n          if (!this.ws[kReceivedClose]) {\n            const frame = new WebsocketFrameSend(body)\n\n            this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG))\n\n            if (channels.ping.hasSubscribers) {\n              channels.ping.publish({\n                payload: body\n              })\n            }\n          }\n\n          this.#state = parserStates.INFO\n\n          if (this.#byteOffset > 0) {\n            continue\n          } else {\n            callback()\n            return\n          }\n        } else if (this.#info.opcode === opcodes.PONG) {\n          // A Pong frame MAY be sent unsolicited.  This serves as a\n          // unidirectional heartbeat.  A response to an unsolicited Pong frame is\n          // not expected.\n\n          const body = this.consume(payloadLength)\n\n          if (channels.pong.hasSubscribers) {\n            channels.pong.publish({\n              payload: body\n            })\n          }\n\n          if (this.#byteOffset > 0) {\n            continue\n          } else {\n            callback()\n            return\n          }\n        }\n      } else if (this.#state === parserStates.PAYLOADLENGTH_16) {\n        if (this.#byteOffset < 2) {\n          return callback()\n        }\n\n        const buffer = this.consume(2)\n\n        this.#info.payloadLength = buffer.readUInt16BE(0)\n        this.#state = parserStates.READ_DATA\n      } else if (this.#state === parserStates.PAYLOADLENGTH_64) {\n        if (this.#byteOffset < 8) {\n          return callback()\n        }\n\n        const buffer = this.consume(8)\n        const upper = buffer.readUInt32BE(0)\n\n        // 2^31 is the maxinimum bytes an arraybuffer can contain\n        // on 32-bit systems. Although, on 64-bit systems, this is\n        // 2^53-1 bytes.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\n        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/common/globals.h;drc=1946212ac0100668f14eb9e2843bdd846e510a1e;bpv=1;bpt=1;l=1275\n        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/objects/js-array-buffer.h;l=34;drc=1946212ac0100668f14eb9e2843bdd846e510a1e\n        if (upper > 2 ** 31 - 1) {\n          failWebsocketConnection(this.ws, 'Received payload length > 2^31 bytes.')\n          return\n        }\n\n        const lower = buffer.readUInt32BE(4)\n\n        this.#info.payloadLength = (upper << 8) + lower\n        this.#state = parserStates.READ_DATA\n      } else if (this.#state === parserStates.READ_DATA) {\n        if (this.#byteOffset < this.#info.payloadLength) {\n          // If there is still more data in this chunk that needs to be read\n          return callback()\n        } else if (this.#byteOffset >= this.#info.payloadLength) {\n          // If the server sent multiple frames in a single chunk\n\n          const body = this.consume(this.#info.payloadLength)\n\n          this.#fragments.push(body)\n\n          // If the frame is unfragmented, or a fragmented frame was terminated,\n          // a message was received\n          if (!this.#info.fragmented || (this.#info.fin && this.#info.opcode === opcodes.CONTINUATION)) {\n            const fullMessage = Buffer.concat(this.#fragments)\n\n            websocketMessageReceived(this.ws, this.#info.originalOpcode, fullMessage)\n\n            this.#info = {}\n            this.#fragments.length = 0\n          }\n\n          this.#state = parserStates.INFO\n        }\n      }\n\n      if (this.#byteOffset > 0) {\n        continue\n      } else {\n        callback()\n        break\n      }\n    }\n  }\n\n  /**\n   * Take n bytes from the buffered Buffers\n   * @param {number} n\n   * @returns {Buffer|null}\n   */\n  consume (n) {\n    if (n > this.#byteOffset) {\n      return null\n    } else if (n === 0) {\n      return emptyBuffer\n    }\n\n    if (this.#buffers[0].length === n) {\n      this.#byteOffset -= this.#buffers[0].length\n      return this.#buffers.shift()\n    }\n\n    const buffer = Buffer.allocUnsafe(n)\n    let offset = 0\n\n    while (offset !== n) {\n      const next = this.#buffers[0]\n      const { length } = next\n\n      if (length + offset === n) {\n        buffer.set(this.#buffers.shift(), offset)\n        break\n      } else if (length + offset > n) {\n        buffer.set(next.subarray(0, n - offset), offset)\n        this.#buffers[0] = next.subarray(n - offset)\n        break\n      } else {\n        buffer.set(this.#buffers.shift(), offset)\n        offset += next.length\n      }\n    }\n\n    this.#byteOffset -= n\n\n    return buffer\n  }\n\n  parseCloseBody (onlyCode, data) {\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.5\n    /** @type {number|undefined} */\n    let code\n\n    if (data.length >= 2) {\n      // _The WebSocket Connection Close Code_ is\n      // defined as the status code (Section 7.4) contained in the first Close\n      // control frame received by the application\n      code = data.readUInt16BE(0)\n    }\n\n    if (onlyCode) {\n      if (!isValidStatusCode(code)) {\n        return null\n      }\n\n      return { code }\n    }\n\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.6\n    /** @type {Buffer} */\n    let reason = data.subarray(2)\n\n    // Remove BOM\n    if (reason[0] === 0xEF && reason[1] === 0xBB && reason[2] === 0xBF) {\n      reason = reason.subarray(3)\n    }\n\n    if (code !== undefined && !isValidStatusCode(code)) {\n      return null\n    }\n\n    try {\n      // TODO: optimize this\n      reason = new TextDecoder('utf-8', { fatal: true }).decode(reason)\n    } catch {\n      return null\n    }\n\n    return { code, reason }\n  }\n\n  get closingInfo () {\n    return this.#info.closeInfo\n  }\n}\n\nmodule.exports = {\n  ByteParser\n}\n","'use strict'\n\nconst { webidl } = require('../fetch/webidl')\nconst { DOMException } = require('../fetch/constants')\nconst { URLSerializer } = require('../fetch/dataURL')\nconst { getGlobalOrigin } = require('../fetch/global')\nconst { staticPropertyDescriptors, states, opcodes, emptyBuffer } = require('./constants')\nconst {\n  kWebSocketURL,\n  kReadyState,\n  kController,\n  kBinaryType,\n  kResponse,\n  kSentClose,\n  kByteParser\n} = require('./symbols')\nconst { isEstablished, isClosing, isValidSubprotocol, failWebsocketConnection, fireEvent } = require('./util')\nconst { establishWebSocketConnection } = require('./connection')\nconst { WebsocketFrameSend } = require('./frame')\nconst { ByteParser } = require('./receiver')\nconst { kEnumerableProperty, isBlobLike } = require('../core/util')\nconst { getGlobalDispatcher } = require('../global')\nconst { types } = require('util')\n\nlet experimentalWarned = false\n\n// https://websockets.spec.whatwg.org/#interface-definition\nclass WebSocket extends EventTarget {\n  #events = {\n    open: null,\n    error: null,\n    close: null,\n    message: null\n  }\n\n  #bufferedAmount = 0\n  #protocol = ''\n  #extensions = ''\n\n  /**\n   * @param {string} url\n   * @param {string|string[]} protocols\n   */\n  constructor (url, protocols = []) {\n    super()\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'WebSocket constructor' })\n\n    if (!experimentalWarned) {\n      experimentalWarned = true\n      process.emitWarning('WebSockets are experimental, expect them to change at any time.', {\n        code: 'UNDICI-WS'\n      })\n    }\n\n    const options = webidl.converters['DOMString or sequence<DOMString> or WebSocketInit'](protocols)\n\n    url = webidl.converters.USVString(url)\n    protocols = options.protocols\n\n    // 1. Let baseURL be this's relevant settings object's API base URL.\n    const baseURL = getGlobalOrigin()\n\n    // 1. Let urlRecord be the result of applying the URL parser to url with baseURL.\n    let urlRecord\n\n    try {\n      urlRecord = new URL(url, baseURL)\n    } catch (e) {\n      // 3. If urlRecord is failure, then throw a \"SyntaxError\" DOMException.\n      throw new DOMException(e, 'SyntaxError')\n    }\n\n    // 4. If urlRecord’s scheme is \"http\", then set urlRecord’s scheme to \"ws\".\n    if (urlRecord.protocol === 'http:') {\n      urlRecord.protocol = 'ws:'\n    } else if (urlRecord.protocol === 'https:') {\n      // 5. Otherwise, if urlRecord’s scheme is \"https\", set urlRecord’s scheme to \"wss\".\n      urlRecord.protocol = 'wss:'\n    }\n\n    // 6. If urlRecord’s scheme is not \"ws\" or \"wss\", then throw a \"SyntaxError\" DOMException.\n    if (urlRecord.protocol !== 'ws:' && urlRecord.protocol !== 'wss:') {\n      throw new DOMException(\n        `Expected a ws: or wss: protocol, got ${urlRecord.protocol}`,\n        'SyntaxError'\n      )\n    }\n\n    // 7. If urlRecord’s fragment is non-null, then throw a \"SyntaxError\"\n    //    DOMException.\n    if (urlRecord.hash || urlRecord.href.endsWith('#')) {\n      throw new DOMException('Got fragment', 'SyntaxError')\n    }\n\n    // 8. If protocols is a string, set protocols to a sequence consisting\n    //    of just that string.\n    if (typeof protocols === 'string') {\n      protocols = [protocols]\n    }\n\n    // 9. If any of the values in protocols occur more than once or otherwise\n    //    fail to match the requirements for elements that comprise the value\n    //    of `Sec-WebSocket-Protocol` fields as defined by The WebSocket\n    //    protocol, then throw a \"SyntaxError\" DOMException.\n    if (protocols.length !== new Set(protocols.map(p => p.toLowerCase())).size) {\n      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')\n    }\n\n    if (protocols.length > 0 && !protocols.every(p => isValidSubprotocol(p))) {\n      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')\n    }\n\n    // 10. Set this's url to urlRecord.\n    this[kWebSocketURL] = new URL(urlRecord.href)\n\n    // 11. Let client be this's relevant settings object.\n\n    // 12. Run this step in parallel:\n\n    //    1. Establish a WebSocket connection given urlRecord, protocols,\n    //       and client.\n    this[kController] = establishWebSocketConnection(\n      urlRecord,\n      protocols,\n      this,\n      (response) => this.#onConnectionEstablished(response),\n      options\n    )\n\n    // Each WebSocket object has an associated ready state, which is a\n    // number representing the state of the connection. Initially it must\n    // be CONNECTING (0).\n    this[kReadyState] = WebSocket.CONNECTING\n\n    // The extensions attribute must initially return the empty string.\n\n    // The protocol attribute must initially return the empty string.\n\n    // Each WebSocket object has an associated binary type, which is a\n    // BinaryType. Initially it must be \"blob\".\n    this[kBinaryType] = 'blob'\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#dom-websocket-close\n   * @param {number|undefined} code\n   * @param {string|undefined} reason\n   */\n  close (code = undefined, reason = undefined) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (code !== undefined) {\n      code = webidl.converters['unsigned short'](code, { clamp: true })\n    }\n\n    if (reason !== undefined) {\n      reason = webidl.converters.USVString(reason)\n    }\n\n    // 1. If code is present, but is neither an integer equal to 1000 nor an\n    //    integer in the range 3000 to 4999, inclusive, throw an\n    //    \"InvalidAccessError\" DOMException.\n    if (code !== undefined) {\n      if (code !== 1000 && (code < 3000 || code > 4999)) {\n        throw new DOMException('invalid code', 'InvalidAccessError')\n      }\n    }\n\n    let reasonByteLength = 0\n\n    // 2. If reason is present, then run these substeps:\n    if (reason !== undefined) {\n      // 1. Let reasonBytes be the result of encoding reason.\n      // 2. If reasonBytes is longer than 123 bytes, then throw a\n      //    \"SyntaxError\" DOMException.\n      reasonByteLength = Buffer.byteLength(reason)\n\n      if (reasonByteLength > 123) {\n        throw new DOMException(\n          `Reason must be less than 123 bytes; received ${reasonByteLength}`,\n          'SyntaxError'\n        )\n      }\n    }\n\n    // 3. Run the first matching steps from the following list:\n    if (this[kReadyState] === WebSocket.CLOSING || this[kReadyState] === WebSocket.CLOSED) {\n      // If this's ready state is CLOSING (2) or CLOSED (3)\n      // Do nothing.\n    } else if (!isEstablished(this)) {\n      // If the WebSocket connection is not yet established\n      // Fail the WebSocket connection and set this's ready state\n      // to CLOSING (2).\n      failWebsocketConnection(this, 'Connection was closed before it was established.')\n      this[kReadyState] = WebSocket.CLOSING\n    } else if (!isClosing(this)) {\n      // If the WebSocket closing handshake has not yet been started\n      // Start the WebSocket closing handshake and set this's ready\n      // state to CLOSING (2).\n      // - If neither code nor reason is present, the WebSocket Close\n      //   message must not have a body.\n      // - If code is present, then the status code to use in the\n      //   WebSocket Close message must be the integer given by code.\n      // - If reason is also present, then reasonBytes must be\n      //   provided in the Close message after the status code.\n\n      const frame = new WebsocketFrameSend()\n\n      // If neither code nor reason is present, the WebSocket Close\n      // message must not have a body.\n\n      // If code is present, then the status code to use in the\n      // WebSocket Close message must be the integer given by code.\n      if (code !== undefined && reason === undefined) {\n        frame.frameData = Buffer.allocUnsafe(2)\n        frame.frameData.writeUInt16BE(code, 0)\n      } else if (code !== undefined && reason !== undefined) {\n        // If reason is also present, then reasonBytes must be\n        // provided in the Close message after the status code.\n        frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength)\n        frame.frameData.writeUInt16BE(code, 0)\n        // the body MAY contain UTF-8-encoded data with value /reason/\n        frame.frameData.write(reason, 2, 'utf-8')\n      } else {\n        frame.frameData = emptyBuffer\n      }\n\n      /** @type {import('stream').Duplex} */\n      const socket = this[kResponse].socket\n\n      socket.write(frame.createFrame(opcodes.CLOSE), (err) => {\n        if (!err) {\n          this[kSentClose] = true\n        }\n      })\n\n      // Upon either sending or receiving a Close control frame, it is said\n      // that _The WebSocket Closing Handshake is Started_ and that the\n      // WebSocket connection is in the CLOSING state.\n      this[kReadyState] = states.CLOSING\n    } else {\n      // Otherwise\n      // Set this's ready state to CLOSING (2).\n      this[kReadyState] = WebSocket.CLOSING\n    }\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#dom-websocket-send\n   * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data\n   */\n  send (data) {\n    webidl.brandCheck(this, WebSocket)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'WebSocket.send' })\n\n    data = webidl.converters.WebSocketSendData(data)\n\n    // 1. If this's ready state is CONNECTING, then throw an\n    //    \"InvalidStateError\" DOMException.\n    if (this[kReadyState] === WebSocket.CONNECTING) {\n      throw new DOMException('Sent before connected.', 'InvalidStateError')\n    }\n\n    // 2. Run the appropriate set of steps from the following list:\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-6.1\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-5.2\n\n    if (!isEstablished(this) || isClosing(this)) {\n      return\n    }\n\n    /** @type {import('stream').Duplex} */\n    const socket = this[kResponse].socket\n\n    // If data is a string\n    if (typeof data === 'string') {\n      // If the WebSocket connection is established and the WebSocket\n      // closing handshake has not yet started, then the user agent\n      // must send a WebSocket Message comprised of the data argument\n      // using a text frame opcode; if the data cannot be sent, e.g.\n      // because it would need to be buffered but the buffer is full,\n      // the user agent must flag the WebSocket as full and then close\n      // the WebSocket connection. Any invocation of this method with a\n      // string argument that does not throw an exception must increase\n      // the bufferedAmount attribute by the number of bytes needed to\n      // express the argument as UTF-8.\n\n      const value = Buffer.from(data)\n      const frame = new WebsocketFrameSend(value)\n      const buffer = frame.createFrame(opcodes.TEXT)\n\n      this.#bufferedAmount += value.byteLength\n      socket.write(buffer, () => {\n        this.#bufferedAmount -= value.byteLength\n      })\n    } else if (types.isArrayBuffer(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need\n      // to be buffered but the buffer is full, the user agent must flag\n      // the WebSocket as full and then close the WebSocket connection.\n      // The data to be sent is the data stored in the buffer described\n      // by the ArrayBuffer object. Any invocation of this method with an\n      // ArrayBuffer argument that does not throw an exception must\n      // increase the bufferedAmount attribute by the length of the\n      // ArrayBuffer in bytes.\n\n      const value = Buffer.from(data)\n      const frame = new WebsocketFrameSend(value)\n      const buffer = frame.createFrame(opcodes.BINARY)\n\n      this.#bufferedAmount += value.byteLength\n      socket.write(buffer, () => {\n        this.#bufferedAmount -= value.byteLength\n      })\n    } else if (ArrayBuffer.isView(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need to\n      // be buffered but the buffer is full, the user agent must flag the\n      // WebSocket as full and then close the WebSocket connection. The\n      // data to be sent is the data stored in the section of the buffer\n      // described by the ArrayBuffer object that data references. Any\n      // invocation of this method with this kind of argument that does\n      // not throw an exception must increase the bufferedAmount attribute\n      // by the length of data’s buffer in bytes.\n\n      const ab = Buffer.from(data, data.byteOffset, data.byteLength)\n\n      const frame = new WebsocketFrameSend(ab)\n      const buffer = frame.createFrame(opcodes.BINARY)\n\n      this.#bufferedAmount += ab.byteLength\n      socket.write(buffer, () => {\n        this.#bufferedAmount -= ab.byteLength\n      })\n    } else if (isBlobLike(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need to\n      // be buffered but the buffer is full, the user agent must flag the\n      // WebSocket as full and then close the WebSocket connection. The data\n      // to be sent is the raw data represented by the Blob object. Any\n      // invocation of this method with a Blob argument that does not throw\n      // an exception must increase the bufferedAmount attribute by the size\n      // of the Blob object’s raw data, in bytes.\n\n      const frame = new WebsocketFrameSend()\n\n      data.arrayBuffer().then((ab) => {\n        const value = Buffer.from(ab)\n        frame.frameData = value\n        const buffer = frame.createFrame(opcodes.BINARY)\n\n        this.#bufferedAmount += value.byteLength\n        socket.write(buffer, () => {\n          this.#bufferedAmount -= value.byteLength\n        })\n      })\n    }\n  }\n\n  get readyState () {\n    webidl.brandCheck(this, WebSocket)\n\n    // The readyState getter steps are to return this's ready state.\n    return this[kReadyState]\n  }\n\n  get bufferedAmount () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#bufferedAmount\n  }\n\n  get url () {\n    webidl.brandCheck(this, WebSocket)\n\n    // The url getter steps are to return this's url, serialized.\n    return URLSerializer(this[kWebSocketURL])\n  }\n\n  get extensions () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#extensions\n  }\n\n  get protocol () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#protocol\n  }\n\n  get onopen () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.open\n  }\n\n  set onopen (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.open) {\n      this.removeEventListener('open', this.#events.open)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.open = fn\n      this.addEventListener('open', fn)\n    } else {\n      this.#events.open = null\n    }\n  }\n\n  get onerror () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.error\n  }\n\n  set onerror (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.error) {\n      this.removeEventListener('error', this.#events.error)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.error = fn\n      this.addEventListener('error', fn)\n    } else {\n      this.#events.error = null\n    }\n  }\n\n  get onclose () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.close\n  }\n\n  set onclose (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.close) {\n      this.removeEventListener('close', this.#events.close)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.close = fn\n      this.addEventListener('close', fn)\n    } else {\n      this.#events.close = null\n    }\n  }\n\n  get onmessage () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.message\n  }\n\n  set onmessage (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.message) {\n      this.removeEventListener('message', this.#events.message)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.message = fn\n      this.addEventListener('message', fn)\n    } else {\n      this.#events.message = null\n    }\n  }\n\n  get binaryType () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this[kBinaryType]\n  }\n\n  set binaryType (type) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (type !== 'blob' && type !== 'arraybuffer') {\n      this[kBinaryType] = 'blob'\n    } else {\n      this[kBinaryType] = type\n    }\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n   */\n  #onConnectionEstablished (response) {\n    // processResponse is called when the \"response’s header list has been received and initialized.\"\n    // once this happens, the connection is open\n    this[kResponse] = response\n\n    const parser = new ByteParser(this)\n    parser.on('drain', function onParserDrain () {\n      this.ws[kResponse].socket.resume()\n    })\n\n    response.socket.ws = this\n    this[kByteParser] = parser\n\n    // 1. Change the ready state to OPEN (1).\n    this[kReadyState] = states.OPEN\n\n    // 2. Change the extensions attribute’s value to the extensions in use, if\n    //    it is not the null value.\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-9.1\n    const extensions = response.headersList.get('sec-websocket-extensions')\n\n    if (extensions !== null) {\n      this.#extensions = extensions\n    }\n\n    // 3. Change the protocol attribute’s value to the subprotocol in use, if\n    //    it is not the null value.\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-1.9\n    const protocol = response.headersList.get('sec-websocket-protocol')\n\n    if (protocol !== null) {\n      this.#protocol = protocol\n    }\n\n    // 4. Fire an event named open at the WebSocket object.\n    fireEvent('open', this)\n  }\n}\n\n// https://websockets.spec.whatwg.org/#dom-websocket-connecting\nWebSocket.CONNECTING = WebSocket.prototype.CONNECTING = states.CONNECTING\n// https://websockets.spec.whatwg.org/#dom-websocket-open\nWebSocket.OPEN = WebSocket.prototype.OPEN = states.OPEN\n// https://websockets.spec.whatwg.org/#dom-websocket-closing\nWebSocket.CLOSING = WebSocket.prototype.CLOSING = states.CLOSING\n// https://websockets.spec.whatwg.org/#dom-websocket-closed\nWebSocket.CLOSED = WebSocket.prototype.CLOSED = states.CLOSED\n\nObject.defineProperties(WebSocket.prototype, {\n  CONNECTING: staticPropertyDescriptors,\n  OPEN: staticPropertyDescriptors,\n  CLOSING: staticPropertyDescriptors,\n  CLOSED: staticPropertyDescriptors,\n  url: kEnumerableProperty,\n  readyState: kEnumerableProperty,\n  bufferedAmount: kEnumerableProperty,\n  onopen: kEnumerableProperty,\n  onerror: kEnumerableProperty,\n  onclose: kEnumerableProperty,\n  close: kEnumerableProperty,\n  onmessage: kEnumerableProperty,\n  binaryType: kEnumerableProperty,\n  send: kEnumerableProperty,\n  extensions: kEnumerableProperty,\n  protocol: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'WebSocket',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n})\n\nObject.defineProperties(WebSocket, {\n  CONNECTING: staticPropertyDescriptors,\n  OPEN: staticPropertyDescriptors,\n  CLOSING: staticPropertyDescriptors,\n  CLOSED: staticPropertyDescriptors\n})\n\nwebidl.converters['sequence<DOMString>'] = webidl.sequenceConverter(\n  webidl.converters.DOMString\n)\n\nwebidl.converters['DOMString or sequence<DOMString>'] = function (V) {\n  if (webidl.util.Type(V) === 'Object' && Symbol.iterator in V) {\n    return webidl.converters['sequence<DOMString>'](V)\n  }\n\n  return webidl.converters.DOMString(V)\n}\n\n// This implements the propsal made in https://github.com/whatwg/websockets/issues/42\nwebidl.converters.WebSocketInit = webidl.dictionaryConverter([\n  {\n    key: 'protocols',\n    converter: webidl.converters['DOMString or sequence<DOMString>'],\n    get defaultValue () {\n      return []\n    }\n  },\n  {\n    key: 'dispatcher',\n    converter: (V) => V,\n    get defaultValue () {\n      return getGlobalDispatcher()\n    }\n  },\n  {\n    key: 'headers',\n    converter: webidl.nullableConverter(webidl.converters.HeadersInit)\n  }\n])\n\nwebidl.converters['DOMString or sequence<DOMString> or WebSocketInit'] = function (V) {\n  if (webidl.util.Type(V) === 'Object' && !(Symbol.iterator in V)) {\n    return webidl.converters.WebSocketInit(V)\n  }\n\n  return { protocols: webidl.converters['DOMString or sequence<DOMString>'](V) }\n}\n\nwebidl.converters.WebSocketSendData = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (isBlobLike(V)) {\n      return webidl.converters.Blob(V, { strict: false })\n    }\n\n    if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {\n      return webidl.converters.BufferSource(V)\n    }\n  }\n\n  return webidl.converters.USVString(V)\n}\n\nmodule.exports = {\n  WebSocket\n}\n","'use strict'\n\nconst Client = require('./lib/client')\nconst Dispatcher = require('./lib/dispatcher')\nconst errors = require('./lib/core/errors')\nconst Pool = require('./lib/pool')\nconst BalancedPool = require('./lib/balanced-pool')\nconst Agent = require('./lib/agent')\nconst util = require('./lib/core/util')\nconst { InvalidArgumentError } = errors\nconst api = require('./lib/api')\nconst buildConnector = require('./lib/core/connect')\nconst MockClient = require('./lib/mock/mock-client')\nconst MockAgent = require('./lib/mock/mock-agent')\nconst MockPool = require('./lib/mock/mock-pool')\nconst mockErrors = require('./lib/mock/mock-errors')\nconst ProxyAgent = require('./lib/proxy-agent')\nconst { getGlobalDispatcher, setGlobalDispatcher } = require('./lib/global')\nconst DecoratorHandler = require('./lib/handler/DecoratorHandler')\nconst RedirectHandler = require('./lib/handler/RedirectHandler')\nconst createRedirectInterceptor = require('./lib/interceptor/redirectInterceptor')\n\nlet hasCrypto\ntry {\n  require('crypto')\n  hasCrypto = true\n} catch {\n  hasCrypto = false\n}\n\nObject.assign(Dispatcher.prototype, api)\n\nmodule.exports.Dispatcher = Dispatcher\nmodule.exports.Client = Client\nmodule.exports.Pool = Pool\nmodule.exports.BalancedPool = BalancedPool\nmodule.exports.Agent = Agent\nmodule.exports.ProxyAgent = ProxyAgent\n\nmodule.exports.DecoratorHandler = DecoratorHandler\nmodule.exports.RedirectHandler = RedirectHandler\nmodule.exports.createRedirectInterceptor = createRedirectInterceptor\n\nmodule.exports.buildConnector = buildConnector\nmodule.exports.errors = errors\n\nfunction makeDispatcher (fn) {\n  return (url, opts, handler) => {\n    if (typeof opts === 'function') {\n      handler = opts\n      opts = null\n    }\n\n    if (!url || (typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL))) {\n      throw new InvalidArgumentError('invalid url')\n    }\n\n    if (opts != null && typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (opts && opts.path != null) {\n      if (typeof opts.path !== 'string') {\n        throw new InvalidArgumentError('invalid opts.path')\n      }\n\n      let path = opts.path\n      if (!opts.path.startsWith('/')) {\n        path = `/${path}`\n      }\n\n      url = new URL(util.parseOrigin(url).origin + path)\n    } else {\n      if (!opts) {\n        opts = typeof url === 'object' ? url : {}\n      }\n\n      url = util.parseURL(url)\n    }\n\n    const { agent, dispatcher = getGlobalDispatcher() } = opts\n\n    if (agent) {\n      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?')\n    }\n\n    return fn.call(dispatcher, {\n      ...opts,\n      origin: url.origin,\n      path: url.search ? `${url.pathname}${url.search}` : url.pathname,\n      method: opts.method || (opts.body ? 'PUT' : 'GET')\n    }, handler)\n  }\n}\n\nmodule.exports.setGlobalDispatcher = setGlobalDispatcher\nmodule.exports.getGlobalDispatcher = getGlobalDispatcher\n\nif (util.nodeMajor > 16 || (util.nodeMajor === 16 && util.nodeMinor >= 8)) {\n  let fetchImpl = null\n  module.exports.fetch = async function fetch (resource) {\n    if (!fetchImpl) {\n      fetchImpl = require('./lib/fetch').fetch\n    }\n\n    try {\n      return await fetchImpl(...arguments)\n    } catch (err) {\n      if (typeof err === 'object') {\n        Error.captureStackTrace(err, this)\n      }\n\n      throw err\n    }\n  }\n  module.exports.Headers = require('./lib/fetch/headers').Headers\n  module.exports.Response = require('./lib/fetch/response').Response\n  module.exports.Request = require('./lib/fetch/request').Request\n  module.exports.FormData = require('./lib/fetch/formdata').FormData\n  module.exports.File = require('./lib/fetch/file').File\n  module.exports.FileReader = require('./lib/fileapi/filereader').FileReader\n\n  const { setGlobalOrigin, getGlobalOrigin } = require('./lib/fetch/global')\n\n  module.exports.setGlobalOrigin = setGlobalOrigin\n  module.exports.getGlobalOrigin = getGlobalOrigin\n\n  const { CacheStorage } = require('./lib/cache/cachestorage')\n  const { kConstruct } = require('./lib/cache/symbols')\n\n  // Cache & CacheStorage are tightly coupled with fetch. Even if it may run\n  // in an older version of Node, it doesn't have any use without fetch.\n  module.exports.caches = new CacheStorage(kConstruct)\n}\n\nif (util.nodeMajor >= 16) {\n  const { deleteCookie, getCookies, getSetCookies, setCookie } = require('./lib/cookies')\n\n  module.exports.deleteCookie = deleteCookie\n  module.exports.getCookies = getCookies\n  module.exports.getSetCookies = getSetCookies\n  module.exports.setCookie = setCookie\n\n  const { parseMIMEType, serializeAMimeType } = require('./lib/fetch/dataURL')\n\n  module.exports.parseMIMEType = parseMIMEType\n  module.exports.serializeAMimeType = serializeAMimeType\n}\n\nif (util.nodeMajor >= 18 && hasCrypto) {\n  const { WebSocket } = require('./lib/websocket/websocket')\n\n  module.exports.WebSocket = WebSocket\n}\n\nmodule.exports.request = makeDispatcher(api.request)\nmodule.exports.stream = makeDispatcher(api.stream)\nmodule.exports.pipeline = makeDispatcher(api.pipeline)\nmodule.exports.connect = makeDispatcher(api.connect)\nmodule.exports.upgrade = makeDispatcher(api.upgrade)\n\nmodule.exports.MockClient = MockClient\nmodule.exports.MockPool = MockPool\nmodule.exports.MockAgent = MockAgent\nmodule.exports.mockErrors = mockErrors\n",null,null,"export function getUserAgent() {\n    if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n        return navigator.userAgent;\n    }\n    if (typeof process === \"object\" && process.version !== undefined) {\n        return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;\n    }\n    return \"<environment undetectable>\";\n}\n","module.exports = register;\n\nfunction register(state, name, method, options) {\n  if (typeof method !== \"function\") {\n    throw new Error(\"method for before hook must be a function\");\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (Array.isArray(name)) {\n    return name.reverse().reduce(function (callback, name) {\n      return register.bind(null, state, name, callback, options);\n    }, method)();\n  }\n\n  return Promise.resolve().then(function () {\n    if (!state.registry[name]) {\n      return method(options);\n    }\n\n    return state.registry[name].reduce(function (method, registered) {\n      return registered.hook.bind(null, method, options);\n    }, method)();\n  });\n}\n","module.exports = addHook;\n\nfunction addHook(state, kind, name, hook) {\n  var orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n\n  if (kind === \"before\") {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options));\n    };\n  }\n\n  if (kind === \"after\") {\n    hook = function (method, options) {\n      var result;\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then(function (result_) {\n          result = result_;\n          return orig(result, options);\n        })\n        .then(function () {\n          return result;\n        });\n    };\n  }\n\n  if (kind === \"error\") {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch(function (error) {\n          return orig(error, options);\n        });\n    };\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig,\n  });\n}\n","module.exports = removeHook;\n\nfunction removeHook(state, name, method) {\n  if (!state.registry[name]) {\n    return;\n  }\n\n  var index = state.registry[name]\n    .map(function (registered) {\n      return registered.orig;\n    })\n    .indexOf(method);\n\n  if (index === -1) {\n    return;\n  }\n\n  state.registry[name].splice(index, 1);\n}\n","var register = require(\"./lib/register\");\nvar addHook = require(\"./lib/add\");\nvar removeHook = require(\"./lib/remove\");\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nvar bind = Function.bind;\nvar bindable = bind.bind(bind);\n\nfunction bindApi(hook, state, name) {\n  var removeHookRef = bindable(removeHook, null).apply(\n    null,\n    name ? [state, name] : [state]\n  );\n  hook.api = { remove: removeHookRef };\n  hook.remove = removeHookRef;\n  [\"before\", \"error\", \"after\", \"wrap\"].forEach(function (kind) {\n    var args = name ? [state, kind, name] : [state, kind];\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n  });\n}\n\nfunction HookSingular() {\n  var singularHookName = \"h\";\n  var singularHookState = {\n    registry: {},\n  };\n  var singularHook = register.bind(null, singularHookState, singularHookName);\n  bindApi(singularHook, singularHookState, singularHookName);\n  return singularHook;\n}\n\nfunction HookCollection() {\n  var state = {\n    registry: {},\n  };\n\n  var hook = register.bind(null, state);\n  bindApi(hook, state);\n\n  return hook;\n}\n\nvar collectionHookDeprecationMessageDisplayed = false;\nfunction Hook() {\n  if (!collectionHookDeprecationMessageDisplayed) {\n    console.warn(\n      '[before-after-hook]: \"Hook()\" repurposing warning, use \"Hook.Collection()\". Read more: https://git.io/upgrade-before-after-hook-to-1.4'\n    );\n    collectionHookDeprecationMessageDisplayed = true;\n  }\n  return HookCollection();\n}\n\nHook.Singular = HookSingular.bind();\nHook.Collection = HookCollection.bind();\n\nmodule.exports = Hook;\n// expose constructors as a named property for TypeScript\nmodule.exports.Hook = Hook;\nmodule.exports.Singular = Hook.Singular;\nmodule.exports.Collection = Hook.Collection;\n","const VERSION = \"9.0.2\";\nexport {\n  VERSION\n};\n","import { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nconst userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;\nconst DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\"\n  }\n};\nexport {\n  DEFAULTS\n};\n","function lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\nexport {\n  lowercaseKeys\n};\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","import { isPlainObject } from \"is-plain-object\";\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach((key) => {\n    if (isPlainObject(options[key])) {\n      if (!(key in defaults))\n        Object.assign(result, { [key]: options[key] });\n      else\n        result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, { [key]: options[key] });\n    }\n  });\n  return result;\n}\nexport {\n  mergeDeep\n};\n","function removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === void 0) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\nexport {\n  removeUndefinedProperties\n};\n","import { lowercaseKeys } from \"./util/lowercase-keys\";\nimport { mergeDeep } from \"./util/merge-deep\";\nimport { removeUndefinedProperties } from \"./util/remove-undefined-properties\";\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? { method, url } : { url: method }, options);\n  } else {\n    options = Object.assign({}, route);\n  }\n  options.headers = lowercaseKeys(options.headers);\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options);\n  if (options.url === \"/graphql\") {\n    if (defaults && defaults.mediaType.previews?.length) {\n      mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(\n        (preview) => !mergedOptions.mediaType.previews.includes(preview)\n      ).concat(mergedOptions.mediaType.previews);\n    }\n    mergedOptions.mediaType.previews = (mergedOptions.mediaType.previews || []).map((preview) => preview.replace(/-preview/, \"\"));\n  }\n  return mergedOptions;\n}\nexport {\n  merge\n};\n","function addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n  if (names.length === 0) {\n    return url;\n  }\n  return url + separator + names.map((name) => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\nexport {\n  addQueryParameters\n};\n","const urlVariableRegex = /\\{[^}]+\\}/g;\nfunction removeNonChars(variableName) {\n  return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n  if (!matches) {\n    return [];\n  }\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\nexport {\n  extractUrlVariableNames\n};\n","function omit(object, keysToOmit) {\n  return Object.keys(object).filter((option) => !keysToOmit.includes(option)).reduce((obj, key) => {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n}\nexport {\n  omit\n};\n","function encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n    return part;\n  }).join(\"\");\n}\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\nfunction isDefined(value) {\n  return value !== void 0 && value !== null;\n}\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key], result = [];\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n      result.push(\n        encodeValue(operator, value, isKeyOperator(operator) ? key : \"\")\n      );\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function(value2) {\n            result.push(\n              encodeValue(operator, value2, isKeyOperator(operator) ? key : \"\")\n            );\n          });\n        } else {\n          Object.keys(value).forEach(function(k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function(value2) {\n            tmp.push(encodeValue(operator, value2));\n          });\n        } else {\n          Object.keys(value).forEach(function(k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n  return result;\n}\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  template = template.replace(\n    /\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g,\n    function(_, expression, literal) {\n      if (expression) {\n        let operator = \"\";\n        const values = [];\n        if (operators.indexOf(expression.charAt(0)) !== -1) {\n          operator = expression.charAt(0);\n          expression = expression.substr(1);\n        }\n        expression.split(/,/g).forEach(function(variable) {\n          var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n          values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n        });\n        if (operator && operator !== \"+\") {\n          var separator = \",\";\n          if (operator === \"?\") {\n            separator = \"&\";\n          } else if (operator !== \"#\") {\n            separator = operator;\n          }\n          return (values.length !== 0 ? operator : \"\") + values.join(separator);\n        } else {\n          return values.join(\",\");\n        }\n      } else {\n        return encodeReserved(literal);\n      }\n    }\n  );\n  if (template === \"/\") {\n    return template;\n  } else {\n    return template.replace(/\\/$/, \"\");\n  }\n}\nexport {\n  parseUrl\n};\n","import { addQueryParameters } from \"./util/add-query-parameters\";\nimport { extractUrlVariableNames } from \"./util/extract-url-variable-names\";\nimport { omit } from \"./util/omit\";\nimport { parseUrl } from \"./util/url-template\";\nfunction parse(options) {\n  let method = options.method.toUpperCase();\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\n    \"method\",\n    \"baseUrl\",\n    \"url\",\n    \"headers\",\n    \"request\",\n    \"mediaType\"\n  ]);\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n  const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      headers.accept = headers.accept.split(/,/).map(\n        (format) => format.replace(\n          /application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/,\n          `application/vnd$1$2.${options.mediaType.format}`\n        )\n      ).join(\",\");\n    }\n    if (url.endsWith(\"/graphql\")) {\n      if (options.mediaType.previews?.length) {\n        const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n        headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {\n          const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n          return `application/vnd.github.${preview}-preview${format}`;\n        }).join(\",\");\n      }\n    }\n  }\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      }\n    }\n  }\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  }\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  }\n  return Object.assign(\n    { method, url, headers },\n    typeof body !== \"undefined\" ? { body } : null,\n    options.request ? { request: options.request } : null\n  );\n}\nexport {\n  parse\n};\n","import { DEFAULTS } from \"./defaults\";\nimport { merge } from \"./merge\";\nimport { parse } from \"./parse\";\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\nexport {\n  endpointWithDefaults\n};\n","import { endpointWithDefaults } from \"./endpoint-with-defaults\";\nimport { merge } from \"./merge\";\nimport { parse } from \"./parse\";\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS = merge(oldDefaults, newDefaults);\n  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n  return Object.assign(endpoint, {\n    DEFAULTS,\n    defaults: withDefaults.bind(null, DEFAULTS),\n    merge: merge.bind(null, DEFAULTS),\n    parse\n  });\n}\nexport {\n  withDefaults\n};\n","import { withDefaults } from \"./with-defaults\";\nimport { DEFAULTS } from \"./defaults\";\nconst endpoint = withDefaults(null, DEFAULTS);\nexport {\n  endpoint\n};\n","const VERSION = \"8.1.4\";\nexport {\n  VERSION\n};\n","class Deprecation extends Error {\n  constructor(message) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'Deprecation';\n  }\n\n}\n\nexport { Deprecation };\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","import { Deprecation } from \"deprecation\";\nimport once from \"once\";\nconst logOnceCode = once((deprecation) => console.warn(deprecation));\nconst logOnceHeaders = once((deprecation) => console.warn(deprecation));\nclass RequestError extends Error {\n  constructor(message, statusCode, options) {\n    super(message);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    this.name = \"HttpError\";\n    this.status = statusCode;\n    let headers;\n    if (\"headers\" in options && typeof options.headers !== \"undefined\") {\n      headers = options.headers;\n    }\n    if (\"response\" in options) {\n      this.response = options.response;\n      headers = options.response.headers;\n    }\n    const requestCopy = Object.assign({}, options.request);\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(\n          / .*$/,\n          \" [REDACTED]\"\n        )\n      });\n    }\n    requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n    Object.defineProperty(this, \"code\", {\n      get() {\n        logOnceCode(\n          new Deprecation(\n            \"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"\n          )\n        );\n        return statusCode;\n      }\n    });\n    Object.defineProperty(this, \"headers\", {\n      get() {\n        logOnceHeaders(\n          new Deprecation(\n            \"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"\n          )\n        );\n        return headers || {};\n      }\n    });\n  }\n}\nexport {\n  RequestError\n};\n","function getBufferResponse(response) {\n  return response.arrayBuffer();\n}\nexport {\n  getBufferResponse as default\n};\n","import { isPlainObject } from \"is-plain-object\";\nimport { RequestError } from \"@octokit/request-error\";\nimport getBuffer from \"./get-buffer-response\";\nfunction fetchWrapper(requestOptions) {\n  const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;\n  const parseSuccessResponseBody = requestOptions.request?.parseSuccessResponseBody !== false;\n  if (isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {\n    requestOptions.body = JSON.stringify(requestOptions.body);\n  }\n  let headers = {};\n  let status;\n  let url;\n  let { fetch } = globalThis;\n  if (requestOptions.request?.fetch) {\n    fetch = requestOptions.request.fetch;\n  }\n  if (!fetch) {\n    throw new Error(\n      \"fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing\"\n    );\n  }\n  return fetch(requestOptions.url, {\n    method: requestOptions.method,\n    body: requestOptions.body,\n    headers: requestOptions.headers,\n    signal: requestOptions.request?.signal,\n    // duplex must be set if request.body is ReadableStream or Async Iterables.\n    // See https://fetch.spec.whatwg.org/#dom-requestinit-duplex.\n    ...requestOptions.body && { duplex: \"half\" }\n  }).then(async (response) => {\n    url = response.url;\n    status = response.status;\n    for (const keyAndValue of response.headers) {\n      headers[keyAndValue[0]] = keyAndValue[1];\n    }\n    if (\"deprecation\" in headers) {\n      const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n      const deprecationLink = matches && matches.pop();\n      log.warn(\n        `[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`\n      );\n    }\n    if (status === 204 || status === 205) {\n      return;\n    }\n    if (requestOptions.method === \"HEAD\") {\n      if (status < 400) {\n        return;\n      }\n      throw new RequestError(response.statusText, status, {\n        response: {\n          url,\n          status,\n          headers,\n          data: void 0\n        },\n        request: requestOptions\n      });\n    }\n    if (status === 304) {\n      throw new RequestError(\"Not modified\", status, {\n        response: {\n          url,\n          status,\n          headers,\n          data: await getResponseData(response)\n        },\n        request: requestOptions\n      });\n    }\n    if (status >= 400) {\n      const data = await getResponseData(response);\n      const error = new RequestError(toErrorMessage(data), status, {\n        response: {\n          url,\n          status,\n          headers,\n          data\n        },\n        request: requestOptions\n      });\n      throw error;\n    }\n    return parseSuccessResponseBody ? await getResponseData(response) : response.body;\n  }).then((data) => {\n    return {\n      status,\n      url,\n      headers,\n      data\n    };\n  }).catch((error) => {\n    if (error instanceof RequestError)\n      throw error;\n    else if (error.name === \"AbortError\")\n      throw error;\n    let message = error.message;\n    if (error.name === \"TypeError\" && \"cause\" in error) {\n      if (error.cause instanceof Error) {\n        message = error.cause.message;\n      } else if (typeof error.cause === \"string\") {\n        message = error.cause;\n      }\n    }\n    throw new RequestError(message, 500, {\n      request: requestOptions\n    });\n  });\n}\nasync function getResponseData(response) {\n  const contentType = response.headers.get(\"content-type\");\n  if (/application\\/json/.test(contentType)) {\n    return response.json();\n  }\n  if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n    return response.text();\n  }\n  return getBuffer(response);\n}\nfunction toErrorMessage(data) {\n  if (typeof data === \"string\")\n    return data;\n  if (\"message\" in data) {\n    if (Array.isArray(data.errors)) {\n      return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n    }\n    return data.message;\n  }\n  return `Unknown error: ${JSON.stringify(data)}`;\n}\nexport {\n  fetchWrapper as default\n};\n","import fetchWrapper from \"./fetch-wrapper\";\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint = oldEndpoint.defaults(newDefaults);\n  const newApi = function(route, parameters) {\n    const endpointOptions = endpoint.merge(route, parameters);\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint.parse(endpointOptions));\n    }\n    const request = (route2, parameters2) => {\n      return fetchWrapper(\n        endpoint.parse(endpoint.merge(route2, parameters2))\n      );\n    };\n    Object.assign(request, {\n      endpoint,\n      defaults: withDefaults.bind(null, endpoint)\n    });\n    return endpointOptions.request.hook(request, endpointOptions);\n  };\n  return Object.assign(newApi, {\n    endpoint,\n    defaults: withDefaults.bind(null, endpoint)\n  });\n}\nexport {\n  withDefaults as default\n};\n","import { endpoint } from \"@octokit/endpoint\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nimport withDefaults from \"./with-defaults\";\nconst request = withDefaults(endpoint, {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`\n  }\n});\nexport {\n  request\n};\n","// pkg/dist-src/index.js\nimport { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"7.0.2\";\n\n// pkg/dist-src/with-defaults.js\nimport { request as Request2 } from \"@octokit/request\";\n\n// pkg/dist-src/graphql.js\nimport { request as Request } from \"@octokit/request\";\n\n// pkg/dist-src/error.js\nfunction _buildMessageForResponseErrors(data) {\n  return `Request failed due to following response errors:\n` + data.errors.map((e) => ` - ${e.message}`).join(\"\\n\");\n}\nvar GraphqlResponseError = class extends Error {\n  constructor(request2, headers, response) {\n    super(_buildMessageForResponseErrors(response));\n    this.request = request2;\n    this.headers = headers;\n    this.response = response;\n    this.name = \"GraphqlResponseError\";\n    this.errors = response.errors;\n    this.data = response.data;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n};\n\n// pkg/dist-src/graphql.js\nvar NON_VARIABLE_OPTIONS = [\n  \"method\",\n  \"baseUrl\",\n  \"url\",\n  \"headers\",\n  \"request\",\n  \"query\",\n  \"mediaType\"\n];\nvar FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nvar GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request2, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(\n        new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`)\n      );\n    }\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))\n        continue;\n      return Promise.reject(\n        new Error(\n          `[@octokit/graphql] \"${key}\" cannot be used as variable name`\n        )\n      );\n    }\n  }\n  const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n  const requestOptions = Object.keys(\n    parsedOptions\n  ).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n    if (!result.variables) {\n      result.variables = {};\n    }\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {});\n  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n  return request2(requestOptions).then((response) => {\n    if (response.data.errors) {\n      const headers = {};\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n      throw new GraphqlResponseError(\n        requestOptions,\n        headers,\n        response.data\n      );\n    }\n    return response.data.data;\n  });\n}\n\n// pkg/dist-src/with-defaults.js\nfunction withDefaults(request2, newDefaults) {\n  const newRequest = request2.defaults(newDefaults);\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: newRequest.endpoint\n  });\n}\n\n// pkg/dist-src/index.js\nvar graphql2 = withDefaults(request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\nexport {\n  GraphqlResponseError,\n  graphql2 as graphql,\n  withCustomRequest\n};\n","const REGEX_IS_INSTALLATION_LEGACY = /^v1\\./;\nconst REGEX_IS_INSTALLATION = /^ghs_/;\nconst REGEX_IS_USER_TO_SERVER = /^ghu_/;\nasync function auth(token) {\n  const isApp = token.split(/\\./).length === 3;\n  const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) || REGEX_IS_INSTALLATION.test(token);\n  const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);\n  const tokenType = isApp ? \"app\" : isInstallation ? \"installation\" : isUserToServer ? \"user-to-server\" : \"oauth\";\n  return {\n    type: \"token\",\n    token,\n    tokenType\n  };\n}\nexport {\n  auth\n};\n","function withAuthorizationPrefix(token) {\n  if (token.split(/\\./).length === 3) {\n    return `bearer ${token}`;\n  }\n  return `token ${token}`;\n}\nexport {\n  withAuthorizationPrefix\n};\n","import { withAuthorizationPrefix } from \"./with-authorization-prefix\";\nasync function hook(token, request, route, parameters) {\n  const endpoint = request.endpoint.merge(\n    route,\n    parameters\n  );\n  endpoint.headers.authorization = withAuthorizationPrefix(token);\n  return request(endpoint);\n}\nexport {\n  hook\n};\n","import { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nconst createTokenAuth = function createTokenAuth2(token) {\n  if (!token) {\n    throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n  }\n  if (typeof token !== \"string\") {\n    throw new Error(\n      \"[@octokit/auth-token] Token passed to createTokenAuth is not a string\"\n    );\n  }\n  token = token.replace(/^(token|bearer) +/i, \"\");\n  return Object.assign(auth.bind(null, token), {\n    hook: hook.bind(null, token)\n  });\n};\nexport {\n  createTokenAuth\n};\n","// pkg/dist-src/index.js\nimport { getUserAgent } from \"universal-user-agent\";\nimport { Collection } from \"before-after-hook\";\nimport { request } from \"@octokit/request\";\nimport { graphql, withCustomRequest } from \"@octokit/graphql\";\nimport { createTokenAuth } from \"@octokit/auth-token\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"5.0.1\";\n\n// pkg/dist-src/index.js\nvar Octokit = class {\n  static {\n    this.VERSION = VERSION;\n  }\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n        super(\n          Object.assign(\n            {},\n            defaults,\n            options,\n            options.userAgent && defaults.userAgent ? {\n              userAgent: `${options.userAgent} ${defaults.userAgent}`\n            } : null\n          )\n        );\n      }\n    };\n    return OctokitWithDefaults;\n  }\n  static {\n    this.plugins = [];\n  }\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n  static plugin(...newPlugins) {\n    const currentPlugins = this.plugins;\n    const NewOctokit = class extends this {\n      static {\n        this.plugins = currentPlugins.concat(\n          newPlugins.filter((plugin) => !currentPlugins.includes(plugin))\n        );\n      }\n    };\n    return NewOctokit;\n  }\n  constructor(options = {}) {\n    const hook = new Collection();\n    const requestDefaults = {\n      baseUrl: request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        // @ts-ignore internal usage only, no need to type\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    };\n    requestDefaults.headers[\"user-agent\"] = [\n      options.userAgent,\n      `octokit-core.js/${VERSION} ${getUserAgent()}`\n    ].filter(Boolean).join(\" \");\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n    this.request = request.defaults(requestDefaults);\n    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = Object.assign(\n      {\n        debug: () => {\n        },\n        info: () => {\n        },\n        warn: console.warn.bind(console),\n        error: console.error.bind(console)\n      },\n      options.log\n    );\n    this.hook = hook;\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        const auth = createTokenAuth(options.auth);\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const { authStrategy, ...otherOptions } = options;\n      const auth = authStrategy(\n        Object.assign(\n          {\n            request: this.request,\n            log: this.log,\n            // we pass the current octokit instance as well as its constructor options\n            // to allow for authentication strategies that return a new octokit instance\n            // that shares the same internal state as the current one. The original\n            // requirement for this was the \"event-octokit\" authentication strategy\n            // of https://github.com/probot/octokit-auth-probot.\n            octokit: this,\n            octokitOptions: otherOptions\n          },\n          options.auth\n        )\n      );\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    }\n    const classConstructor = this.constructor;\n    classConstructor.plugins.forEach((plugin) => {\n      Object.assign(this, plugin(this, options));\n    });\n  }\n};\nexport {\n  Octokit\n};\n","const VERSION = \"10.1.2\";\nexport {\n  VERSION\n};\n","const Endpoints = {\n  actions: {\n    addCustomLabelsToSelfHostedRunnerForOrg: [\n      \"POST /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    addCustomLabelsToSelfHostedRunnerForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    addSelectedRepoToOrgVariable: [\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"\n    ],\n    approveWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\"\n    ],\n    cancelWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"\n    ],\n    createEnvironmentVariable: [\n      \"POST /repositories/{repository_id}/environments/{environment_name}/variables\"\n    ],\n    createOrUpdateEnvironmentSecret: [\n      \"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"\n    ],\n    createOrgVariable: [\"POST /orgs/{org}/actions/variables\"],\n    createRegistrationTokenForOrg: [\n      \"POST /orgs/{org}/actions/runners/registration-token\"\n    ],\n    createRegistrationTokenForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/registration-token\"\n    ],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/remove-token\"\n    ],\n    createRepoVariable: [\"POST /repos/{owner}/{repo}/actions/variables\"],\n    createWorkflowDispatch: [\n      \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"\n    ],\n    deleteActionsCacheById: [\n      \"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\"\n    ],\n    deleteActionsCacheByKey: [\n      \"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\"\n    ],\n    deleteArtifact: [\n      \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"\n    ],\n    deleteEnvironmentSecret: [\n      \"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    deleteEnvironmentVariable: [\n      \"DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteOrgVariable: [\"DELETE /orgs/{org}/actions/variables/{name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"\n    ],\n    deleteRepoVariable: [\n      \"DELETE /repos/{owner}/{repo}/actions/variables/{name}\"\n    ],\n    deleteSelfHostedRunnerFromOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}\"\n    ],\n    deleteSelfHostedRunnerFromRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"\n    ],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\n      \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"\n    ],\n    disableSelectedRepositoryGithubActionsOrganization: [\n      \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"\n    ],\n    disableWorkflow: [\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"\n    ],\n    downloadArtifact: [\n      \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"\n    ],\n    downloadJobLogsForWorkflowRun: [\n      \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"\n    ],\n    downloadWorkflowRunAttemptLogs: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\"\n    ],\n    downloadWorkflowRunLogs: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"\n    ],\n    enableSelectedRepositoryGithubActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"\n    ],\n    enableWorkflow: [\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"\n    ],\n    forceCancelWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel\"\n    ],\n    generateRunnerJitconfigForOrg: [\n      \"POST /orgs/{org}/actions/runners/generate-jitconfig\"\n    ],\n    generateRunnerJitconfigForRepo: [\n      \"POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig\"\n    ],\n    getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\n    getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\n    getActionsCacheUsageByRepoForOrg: [\n      \"GET /orgs/{org}/actions/cache/usage-by-repository\"\n    ],\n    getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\n    getAllowedActionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/selected-actions\"\n    ],\n    getAllowedActionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"\n    ],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getEnvironmentPublicKey: [\n      \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\"\n    ],\n    getEnvironmentSecret: [\n      \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"\n    ],\n    getEnvironmentVariable: [\n      \"GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"\n    ],\n    getGithubActionsDefaultWorkflowPermissionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/workflow\"\n    ],\n    getGithubActionsDefaultWorkflowPermissionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/workflow\"\n    ],\n    getGithubActionsPermissionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions\"\n    ],\n    getGithubActionsPermissionsRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions\"\n    ],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getOrgVariable: [\"GET /orgs/{org}/actions/variables/{name}\"],\n    getPendingDeploymentsForRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"\n    ],\n    getRepoPermissions: [\n      \"GET /repos/{owner}/{repo}/actions/permissions\",\n      {},\n      { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] }\n    ],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getRepoVariable: [\"GET /repos/{owner}/{repo}/actions/variables/{name}\"],\n    getReviewsForRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"\n    ],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"\n    ],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowAccessToRepository: [\n      \"GET /repos/{owner}/{repo}/actions/permissions/access\"\n    ],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunAttempt: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\"\n    ],\n    getWorkflowRunUsage: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"\n    ],\n    getWorkflowUsage: [\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"\n    ],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listEnvironmentSecrets: [\n      \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\"\n    ],\n    listEnvironmentVariables: [\n      \"GET /repositories/{repository_id}/environments/{environment_name}/variables\"\n    ],\n    listJobsForWorkflowRun: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"\n    ],\n    listJobsForWorkflowRunAttempt: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\"\n    ],\n    listLabelsForSelfHostedRunnerForOrg: [\n      \"GET /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    listLabelsForSelfHostedRunnerForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listOrgVariables: [\"GET /orgs/{org}/actions/variables\"],\n    listRepoOrganizationSecrets: [\n      \"GET /repos/{owner}/{repo}/actions/organization-secrets\"\n    ],\n    listRepoOrganizationVariables: [\n      \"GET /repos/{owner}/{repo}/actions/organization-variables\"\n    ],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoVariables: [\"GET /repos/{owner}/{repo}/actions/variables\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\n      \"GET /repos/{owner}/{repo}/actions/runners/downloads\"\n    ],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"\n    ],\n    listSelectedReposForOrgVariable: [\n      \"GET /orgs/{org}/actions/variables/{name}/repositories\"\n    ],\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\n      \"GET /orgs/{org}/actions/permissions/repositories\"\n    ],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"\n    ],\n    listWorkflowRuns: [\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"\n    ],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunJobForWorkflowRun: [\n      \"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\"\n    ],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    reRunWorkflowFailedJobs: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\"\n    ],\n    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    removeCustomLabelFromSelfHostedRunnerForOrg: [\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\"\n    ],\n    removeCustomLabelFromSelfHostedRunnerForRepo: [\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    removeSelectedRepoFromOrgVariable: [\n      \"DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"\n    ],\n    reviewCustomGatesForRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule\"\n    ],\n    reviewPendingDeploymentsForRun: [\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"\n    ],\n    setAllowedActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/selected-actions\"\n    ],\n    setAllowedActionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"\n    ],\n    setCustomLabelsForSelfHostedRunnerForOrg: [\n      \"PUT /orgs/{org}/actions/runners/{runner_id}/labels\"\n    ],\n    setCustomLabelsForSelfHostedRunnerForRepo: [\n      \"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\n    ],\n    setGithubActionsDefaultWorkflowPermissionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/workflow\"\n    ],\n    setGithubActionsDefaultWorkflowPermissionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/workflow\"\n    ],\n    setGithubActionsPermissionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions\"\n    ],\n    setGithubActionsPermissionsRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"\n    ],\n    setSelectedReposForOrgVariable: [\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories\"\n    ],\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\n      \"PUT /orgs/{org}/actions/permissions/repositories\"\n    ],\n    setWorkflowAccessToRepository: [\n      \"PUT /repos/{owner}/{repo}/actions/permissions/access\"\n    ],\n    updateEnvironmentVariable: [\n      \"PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"\n    ],\n    updateOrgVariable: [\"PATCH /orgs/{org}/actions/variables/{name}\"],\n    updateRepoVariable: [\n      \"PATCH /repos/{owner}/{repo}/actions/variables/{name}\"\n    ]\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\n      \"DELETE /notifications/threads/{thread_id}/subscription\"\n    ],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\n      \"GET /notifications/threads/{thread_id}/subscription\"\n    ],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\n      \"GET /users/{username}/events/orgs/{org}\"\n    ],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\n      \"GET /users/{username}/received_events/public\"\n    ],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/notifications\"\n    ],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\n      \"PUT /notifications/threads/{thread_id}/subscription\"\n    ],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n  },\n  apps: {\n    addRepoToInstallation: [\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n      {},\n      { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] }\n    ],\n    addRepoToInstallationForAuthenticatedUser: [\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\"\n    ],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\n      \"POST /app/installations/{installation_id}/access_tokens\"\n    ],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\n      \"GET /marketplace_listing/accounts/{account_id}\"\n    ],\n    getSubscriptionPlanForAccountStubbed: [\n      \"GET /marketplace_listing/stubbed/accounts/{account_id}\"\n    ],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\n    getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\n      \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"\n    ],\n    listInstallationReposForAuthenticatedUser: [\n      \"GET /user/installations/{installation_id}/repositories\"\n    ],\n    listInstallationRequestsForAuthenticatedApp: [\n      \"GET /app/installation-requests\"\n    ],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\n      \"GET /user/marketplace_purchases/stubbed\"\n    ],\n    listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n    redeliverWebhookDelivery: [\n      \"POST /app/hook/deliveries/{delivery_id}/attempts\"\n    ],\n    removeRepoFromInstallation: [\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n      {},\n      { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] }\n    ],\n    removeRepoFromInstallationForAuthenticatedUser: [\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"\n    ],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\n      \"DELETE /app/installations/{installation_id}/suspended\"\n    ],\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\n      \"GET /users/{username}/settings/billing/actions\"\n    ],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\n      \"GET /users/{username}/settings/billing/packages\"\n    ],\n    getSharedStorageBillingOrg: [\n      \"GET /orgs/{org}/settings/billing/shared-storage\"\n    ],\n    getSharedStorageBillingUser: [\n      \"GET /users/{username}/settings/billing/shared-storage\"\n    ]\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n    listAnnotations: [\n      \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"\n    ],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n    listForSuite: [\n      \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"\n    ],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n    rerequestRun: [\n      \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\"\n    ],\n    rerequestSuite: [\n      \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"\n    ],\n    setSuitesPreferences: [\n      \"PATCH /repos/{owner}/{repo}/check-suites/preferences\"\n    ],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\n  },\n  codeScanning: {\n    deleteAnalysis: [\n      \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"\n    ],\n    getAlert: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n      {},\n      { renamedParameters: { alert_id: \"alert_number\" } }\n    ],\n    getAnalysis: [\n      \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"\n    ],\n    getCodeqlDatabase: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\"\n    ],\n    getDefaultSetup: [\"GET /repos/{owner}/{repo}/code-scanning/default-setup\"],\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n    listAlertInstances: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listAlertsInstances: [\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n      {},\n      { renamed: [\"codeScanning\", \"listAlertInstances\"] }\n    ],\n    listCodeqlDatabases: [\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases\"\n    ],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"\n    ],\n    updateDefaultSetup: [\n      \"PATCH /repos/{owner}/{repo}/code-scanning/default-setup\"\n    ],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n    getConductCode: [\"GET /codes_of_conduct/{key}\"]\n  },\n  codespaces: {\n    addRepositoryForSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    checkPermissionsForDevcontainer: [\n      \"GET /repos/{owner}/{repo}/codespaces/permissions_check\"\n    ],\n    codespaceMachinesForAuthenticatedUser: [\n      \"GET /user/codespaces/{codespace_name}/machines\"\n    ],\n    createForAuthenticatedUser: [\"POST /user/codespaces\"],\n    createOrUpdateOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}\"\n    ],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    createOrUpdateSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}\"\n    ],\n    createWithPrForAuthenticatedUser: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\"\n    ],\n    createWithRepoForAuthenticatedUser: [\n      \"POST /repos/{owner}/{repo}/codespaces\"\n    ],\n    deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\n    deleteFromOrganization: [\n      \"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    deleteSecretForAuthenticatedUser: [\n      \"DELETE /user/codespaces/secrets/{secret_name}\"\n    ],\n    exportForAuthenticatedUser: [\n      \"POST /user/codespaces/{codespace_name}/exports\"\n    ],\n    getCodespacesForUserInOrg: [\n      \"GET /orgs/{org}/members/{username}/codespaces\"\n    ],\n    getExportDetailsForAuthenticatedUser: [\n      \"GET /user/codespaces/{codespace_name}/exports/{export_id}\"\n    ],\n    getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/codespaces/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    getPublicKeyForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/public-key\"\n    ],\n    getRepoPublicKey: [\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\"\n    ],\n    getRepoSecret: [\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\n    ],\n    getSecretForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/{secret_name}\"\n    ],\n    listDevcontainersInRepositoryForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/devcontainers\"\n    ],\n    listForAuthenticatedUser: [\"GET /user/codespaces\"],\n    listInOrganization: [\n      \"GET /orgs/{org}/codespaces\",\n      {},\n      { renamedParameters: { org_id: \"org\" } }\n    ],\n    listInRepositoryForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces\"\n    ],\n    listOrgSecrets: [\"GET /orgs/{org}/codespaces/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\n    listRepositoriesForSecretForAuthenticatedUser: [\n      \"GET /user/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    preFlightWithRepoForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/new\"\n    ],\n    publishForAuthenticatedUser: [\n      \"POST /user/codespaces/{codespace_name}/publish\"\n    ],\n    removeRepositoryForSecretForAuthenticatedUser: [\n      \"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    repoMachinesForAuthenticatedUser: [\n      \"GET /repos/{owner}/{repo}/codespaces/machines\"\n    ],\n    setRepositoriesForSecretForAuthenticatedUser: [\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"\n    ],\n    startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\n    stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\n    stopInOrganization: [\n      \"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\"\n    ],\n    updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"]\n  },\n  copilot: {\n    addCopilotForBusinessSeatsForTeams: [\n      \"POST /orgs/{org}/copilot/billing/selected_teams\"\n    ],\n    addCopilotForBusinessSeatsForUsers: [\n      \"POST /orgs/{org}/copilot/billing/selected_users\"\n    ],\n    cancelCopilotSeatAssignmentForTeams: [\n      \"DELETE /orgs/{org}/copilot/billing/selected_teams\"\n    ],\n    cancelCopilotSeatAssignmentForUsers: [\n      \"DELETE /orgs/{org}/copilot/billing/selected_users\"\n    ],\n    getCopilotOrganizationDetails: [\"GET /orgs/{org}/copilot/billing\"],\n    getCopilotSeatDetailsForUser: [\n      \"GET /orgs/{org}/members/{username}/copilot\"\n    ],\n    listCopilotSeats: [\"GET /orgs/{org}/copilot/billing/seats\"]\n  },\n  dependabot: {\n    addSelectedRepoToOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    createOrUpdateOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}\"\n    ],\n    createOrUpdateRepoSecret: [\n      \"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    deleteRepoSecret: [\n      \"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    getAlert: [\"GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    getRepoPublicKey: [\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\"\n    ],\n    getRepoSecret: [\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\n    ],\n    listAlertsForEnterprise: [\n      \"GET /enterprises/{enterprise}/dependabot/alerts\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/dependabot/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/dependabot/alerts\"],\n    listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\n    listSelectedReposForOrgSecret: [\n      \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"\n    ],\n    removeSelectedRepoFromOrgSecret: [\n      \"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"\n    ],\n    setSelectedReposForOrgSecret: [\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"\n    ],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"\n    ]\n  },\n  dependencyGraph: {\n    createRepositorySnapshot: [\n      \"POST /repos/{owner}/{repo}/dependency-graph/snapshots\"\n    ],\n    diffRange: [\n      \"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\"\n    ],\n    exportSbom: [\"GET /repos/{owner}/{repo}/dependency-graph/sbom\"]\n  },\n  emojis: { get: [\"GET /emojis\"] },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\n  },\n  interactions: {\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n    getRestrictionsForYourPublicRepos: [\n      \"GET /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] }\n    ],\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n    removeRestrictionsForRepo: [\n      \"DELETE /repos/{owner}/{repo}/interaction-limits\"\n    ],\n    removeRestrictionsForYourPublicRepos: [\n      \"DELETE /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] }\n    ],\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n    setRestrictionsForYourPublicRepos: [\n      \"PUT /user/interaction-limits\",\n      {},\n      { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] }\n    ]\n  },\n  issues: {\n    addAssignees: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"\n    ],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    checkUserCanBeAssignedToIssue: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}\"\n    ],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"\n    ],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"\n    ],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\n      \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\"\n    ],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\n      \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"\n    ],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"\n    ],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"\n    ],\n    removeAssignees: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"\n    ],\n    removeLabel: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"\n    ],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\n      \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"\n    ]\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\n      \"POST /markdown/raw\",\n      { headers: { \"content-type\": \"text/plain; charset=utf-8\" } }\n    ]\n  },\n  meta: {\n    get: [\"GET /meta\"],\n    getAllVersions: [\"GET /versions\"],\n    getOctocat: [\"GET /octocat\"],\n    getZen: [\"GET /zen\"],\n    root: [\"GET /\"]\n  },\n  migrations: {\n    cancelImport: [\n      \"DELETE /repos/{owner}/{repo}/import\",\n      {},\n      {\n        deprecated: \"octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import\"\n      }\n    ],\n    deleteArchiveForAuthenticatedUser: [\n      \"DELETE /user/migrations/{migration_id}/archive\"\n    ],\n    deleteArchiveForOrg: [\n      \"DELETE /orgs/{org}/migrations/{migration_id}/archive\"\n    ],\n    downloadArchiveForOrg: [\n      \"GET /orgs/{org}/migrations/{migration_id}/archive\"\n    ],\n    getArchiveForAuthenticatedUser: [\n      \"GET /user/migrations/{migration_id}/archive\"\n    ],\n    getCommitAuthors: [\n      \"GET /repos/{owner}/{repo}/import/authors\",\n      {},\n      {\n        deprecated: \"octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors\"\n      }\n    ],\n    getImportStatus: [\n      \"GET /repos/{owner}/{repo}/import\",\n      {},\n      {\n        deprecated: \"octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status\"\n      }\n    ],\n    getLargeFiles: [\n      \"GET /repos/{owner}/{repo}/import/large_files\",\n      {},\n      {\n        deprecated: \"octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files\"\n      }\n    ],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n    listForAuthenticatedUser: [\"GET /user/migrations\"],\n    listForOrg: [\"GET /orgs/{org}/migrations\"],\n    listReposForAuthenticatedUser: [\n      \"GET /user/migrations/{migration_id}/repositories\"\n    ],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n    listReposForUser: [\n      \"GET /user/migrations/{migration_id}/repositories\",\n      {},\n      { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] }\n    ],\n    mapCommitAuthor: [\n      \"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\",\n      {},\n      {\n        deprecated: \"octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author\"\n      }\n    ],\n    setLfsPreference: [\n      \"PATCH /repos/{owner}/{repo}/import/lfs\",\n      {},\n      {\n        deprecated: \"octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference\"\n      }\n    ],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    startImport: [\n      \"PUT /repos/{owner}/{repo}/import\",\n      {},\n      {\n        deprecated: \"octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import\"\n      }\n    ],\n    unlockRepoForAuthenticatedUser: [\n      \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\"\n    ],\n    unlockRepoForOrg: [\n      \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\"\n    ],\n    updateImport: [\n      \"PATCH /repos/{owner}/{repo}/import\",\n      {},\n      {\n        deprecated: \"octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import\"\n      }\n    ]\n  },\n  orgs: {\n    addSecurityManagerTeam: [\n      \"PUT /orgs/{org}/security-managers/teams/{team_slug}\"\n    ],\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\n      \"PUT /orgs/{org}/outside_collaborators/{username}\"\n    ],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createOrUpdateCustomProperties: [\"PATCH /orgs/{org}/properties/schema\"],\n    createOrUpdateCustomPropertiesValuesForRepos: [\n      \"PATCH /orgs/{org}/properties/values\"\n    ],\n    createOrUpdateCustomProperty: [\n      \"PUT /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    delete: [\"DELETE /orgs/{org}\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    enableOrDisableSecurityProductOnAllOrgRepos: [\n      \"POST /orgs/{org}/{security_product}/{enablement}\"\n    ],\n    get: [\"GET /orgs/{org}\"],\n    getAllCustomProperties: [\"GET /orgs/{org}/properties/schema\"],\n    getCustomProperty: [\n      \"GET /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n    getWebhookDelivery: [\n      \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\"\n    ],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listCustomPropertiesValuesForRepos: [\"GET /orgs/{org}/properties/values\"],\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPatGrantRepositories: [\n      \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\"\n    ],\n    listPatGrantRequestRepositories: [\n      \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\"\n    ],\n    listPatGrantRequests: [\"GET /orgs/{org}/personal-access-token-requests\"],\n    listPatGrants: [\"GET /orgs/{org}/personal-access-tokens\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listSecurityManagerTeams: [\"GET /orgs/{org}/security-managers\"],\n    listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\n      \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"\n    ],\n    removeCustomProperty: [\n      \"DELETE /orgs/{org}/properties/schema/{custom_property_name}\"\n    ],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\n      \"DELETE /orgs/{org}/outside_collaborators/{username}\"\n    ],\n    removePublicMembershipForAuthenticatedUser: [\n      \"DELETE /orgs/{org}/public_members/{username}\"\n    ],\n    removeSecurityManagerTeam: [\n      \"DELETE /orgs/{org}/security-managers/teams/{team_slug}\"\n    ],\n    reviewPatGrantRequest: [\n      \"POST /orgs/{org}/personal-access-token-requests/{pat_request_id}\"\n    ],\n    reviewPatGrantRequestsInBulk: [\n      \"POST /orgs/{org}/personal-access-token-requests\"\n    ],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\n      \"PUT /orgs/{org}/public_members/{username}\"\n    ],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateMembershipForAuthenticatedUser: [\n      \"PATCH /user/memberships/orgs/{org}\"\n    ],\n    updatePatAccess: [\"POST /orgs/{org}/personal-access-tokens/{pat_id}\"],\n    updatePatAccesses: [\"POST /orgs/{org}/personal-access-tokens\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\n  },\n  packages: {\n    deletePackageForAuthenticatedUser: [\n      \"DELETE /user/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageForOrg: [\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageForUser: [\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}\"\n    ],\n    deletePackageVersionForAuthenticatedUser: [\n      \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    deletePackageVersionForOrg: [\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    deletePackageVersionForUser: [\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n      {},\n      { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] }\n    ],\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions\",\n      {},\n      {\n        renamed: [\n          \"packages\",\n          \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\"\n        ]\n      }\n    ],\n    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions\"\n    ],\n    getAllPackageVersionsForPackageOwnedByOrg: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"\n    ],\n    getAllPackageVersionsForPackageOwnedByUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions\"\n    ],\n    getPackageForAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}\"\n    ],\n    getPackageForOrganization: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}\"\n    ],\n    getPackageForUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}\"\n    ],\n    getPackageVersionForAuthenticatedUser: [\n      \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getPackageVersionForOrganization: [\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    getPackageVersionForUser: [\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\n    ],\n    listDockerMigrationConflictingPackagesForAuthenticatedUser: [\n      \"GET /user/docker/conflicts\"\n    ],\n    listDockerMigrationConflictingPackagesForOrganization: [\n      \"GET /orgs/{org}/docker/conflicts\"\n    ],\n    listDockerMigrationConflictingPackagesForUser: [\n      \"GET /users/{username}/docker/conflicts\"\n    ],\n    listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n    listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n    listPackagesForUser: [\"GET /users/{username}/packages\"],\n    restorePackageForAuthenticatedUser: [\n      \"POST /user/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageForOrg: [\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageForUser: [\n      \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\"\n    ],\n    restorePackageVersionForAuthenticatedUser: [\n      \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ],\n    restorePackageVersionForOrg: [\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ],\n    restorePackageVersionForUser: [\n      \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\n    ]\n  },\n  projects: {\n    addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\n    createCard: [\"POST /projects/columns/{column_id}/cards\"],\n    createColumn: [\"POST /projects/{project_id}/columns\"],\n    createForAuthenticatedUser: [\"POST /user/projects\"],\n    createForOrg: [\"POST /orgs/{org}/projects\"],\n    createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\n    delete: [\"DELETE /projects/{project_id}\"],\n    deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\n    deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\n    get: [\"GET /projects/{project_id}\"],\n    getCard: [\"GET /projects/columns/cards/{card_id}\"],\n    getColumn: [\"GET /projects/columns/{column_id}\"],\n    getPermissionForUser: [\n      \"GET /projects/{project_id}/collaborators/{username}/permission\"\n    ],\n    listCards: [\"GET /projects/columns/{column_id}/cards\"],\n    listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\n    listColumns: [\"GET /projects/{project_id}/columns\"],\n    listForOrg: [\"GET /orgs/{org}/projects\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\n    listForUser: [\"GET /users/{username}/projects\"],\n    moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\n    moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\n    removeCollaborator: [\n      \"DELETE /projects/{project_id}/collaborators/{username}\"\n    ],\n    update: [\"PATCH /projects/{project_id}\"],\n    updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\n    updateColumn: [\"PATCH /projects/columns/{column_id}\"]\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"\n    ],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"\n    ],\n    deletePendingReview: [\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    deleteReviewComment: [\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"\n    ],\n    dismissReview: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"\n    ],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    listReviewComments: [\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"\n    ],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    requestReviewers: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\n    ],\n    submitReview: [\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"\n    ],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\"\n    ],\n    updateReview: [\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\n    ],\n    updateReviewComment: [\n      \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"\n    ]\n  },\n  rateLimit: { get: [\"GET /rate_limit\"] },\n  reactions: {\n    createForCommitComment: [\n      \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\"\n    ],\n    createForIssue: [\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\"\n    ],\n    createForIssueComment: [\n      \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"\n    ],\n    createForPullRequestReviewComment: [\n      \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"\n    ],\n    createForRelease: [\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\"\n    ],\n    createForTeamDiscussionCommentInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"\n    ],\n    createForTeamDiscussionInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"\n    ],\n    deleteForCommitComment: [\n      \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForIssue: [\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\"\n    ],\n    deleteForIssueComment: [\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForPullRequestComment: [\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\"\n    ],\n    deleteForRelease: [\n      \"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\"\n    ],\n    deleteForTeamDiscussion: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\"\n    ],\n    deleteForTeamDiscussionComment: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\"\n    ],\n    listForCommitComment: [\n      \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\"\n    ],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n    listForIssueComment: [\n      \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"\n    ],\n    listForPullRequestReviewComment: [\n      \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"\n    ],\n    listForRelease: [\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\"\n    ],\n    listForTeamDiscussionCommentInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"\n    ],\n    listForTeamDiscussionInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"\n    ]\n  },\n  repos: {\n    acceptInvitation: [\n      \"PATCH /user/repository_invitations/{invitation_id}\",\n      {},\n      { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] }\n    ],\n    acceptInvitationForAuthenticatedUser: [\n      \"PATCH /user/repository_invitations/{invitation_id}\"\n    ],\n    addAppAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    addTeamAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    addUserAccessRestrictions: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    checkAutomatedSecurityFixes: [\n      \"GET /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkVulnerabilityAlerts: [\n      \"GET /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    compareCommitsWithBasehead: [\n      \"GET /repos/{owner}/{repo}/compare/{basehead}\"\n    ],\n    createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n    createCommitComment: [\n      \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"\n    ],\n    createCommitSignatureProtection: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentBranchPolicy: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"\n    ],\n    createDeploymentProtectionRule: [\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"\n    ],\n    createDeploymentStatus: [\n      \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"\n    ],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateEnvironment: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createOrgRuleset: [\"POST /orgs/{org}/rulesets\"],\n    createPagesDeployment: [\"POST /repos/{owner}/{repo}/pages/deployment\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createRepoRuleset: [\"POST /repos/{owner}/{repo}/rulesets\"],\n    createTagProtection: [\"POST /repos/{owner}/{repo}/tags/protection\"],\n    createUsingTemplate: [\n      \"POST /repos/{template_owner}/{template_repo}/generate\"\n    ],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\n      \"DELETE /user/repository_invitations/{invitation_id}\",\n      {},\n      { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] }\n    ],\n    declineInvitationForAuthenticatedUser: [\n      \"DELETE /user/repository_invitations/{invitation_id}\"\n    ],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"\n    ],\n    deleteAdminBranchProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    deleteAnEnvironment: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    deleteBranchProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\n      \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"\n    ],\n    deleteDeploymentBranchPolicy: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\n      \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"\n    ],\n    deleteOrgRuleset: [\"DELETE /orgs/{org}/rulesets/{ruleset_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n    deletePullRequestReviewProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\n      \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"\n    ],\n    deleteRepoRuleset: [\"DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    deleteTagProtection: [\n      \"DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}\"\n    ],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\n      \"DELETE /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    disableDeploymentProtectionRule: [\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"\n    ],\n    disablePrivateVulnerabilityReporting: [\n      \"DELETE /repos/{owner}/{repo}/private-vulnerability-reporting\"\n    ],\n    disableVulnerabilityAlerts: [\n      \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    downloadArchive: [\n      \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n      {},\n      { renamed: [\"repos\", \"downloadZipballArchive\"] }\n    ],\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n    enableAutomatedSecurityFixes: [\n      \"PUT /repos/{owner}/{repo}/automated-security-fixes\"\n    ],\n    enablePrivateVulnerabilityReporting: [\n      \"PUT /repos/{owner}/{repo}/private-vulnerability-reporting\"\n    ],\n    enableVulnerabilityAlerts: [\n      \"PUT /repos/{owner}/{repo}/vulnerability-alerts\"\n    ],\n    generateReleaseNotes: [\n      \"POST /repos/{owner}/{repo}/releases/generate-notes\"\n    ],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"\n    ],\n    getAdminBranchProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    getAllDeploymentProtectionRules: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"\n    ],\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n    getAllStatusCheckContexts: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"\n    ],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\n    getAppsWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"\n    ],\n    getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    getBranchRules: [\"GET /repos/{owner}/{repo}/rules/branches/{branch}\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\n      \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"\n    ],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\n    ],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getCustomDeploymentProtectionRule: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"\n    ],\n    getCustomPropertiesValues: [\"GET /repos/{owner}/{repo}/properties/values\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentBranchPolicy: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    getDeploymentStatus: [\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"\n    ],\n    getEnvironment: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}\"\n    ],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getOrgRuleSuite: [\"GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}\"],\n    getOrgRuleSuites: [\"GET /orgs/{org}/rulesets/rule-suites\"],\n    getOrgRuleset: [\"GET /orgs/{org}/rulesets/{ruleset_id}\"],\n    getOrgRulesets: [\"GET /orgs/{org}/rulesets\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getRepoRuleSuite: [\n      \"GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}\"\n    ],\n    getRepoRuleSuites: [\"GET /repos/{owner}/{repo}/rulesets/rule-suites\"],\n    getRepoRuleset: [\"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    getRepoRulesets: [\"GET /repos/{owner}/{repo}/rulesets\"],\n    getStatusChecksProtection: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    getTeamsWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"\n    ],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"\n    ],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    getWebhookConfigForRepo: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"\n    ],\n    getWebhookDelivery: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\"\n    ],\n    listActivities: [\"GET /repos/{owner}/{repo}/activity\"],\n    listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\"\n    ],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"\n    ],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\n      \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"\n    ],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listCustomDeploymentRuleIntegrations: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\"\n    ],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentBranchPolicies: [\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"\n    ],\n    listDeploymentStatuses: [\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"\n    ],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\"\n    ],\n    listReleaseAssets: [\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"\n    ],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTagProtection: [\"GET /repos/{owner}/{repo}/tags/protection\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhookDeliveries: [\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\"\n    ],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\n      \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"\n    ],\n    removeAppAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    removeCollaborator: [\n      \"DELETE /repos/{owner}/{repo}/collaborators/{username}\"\n    ],\n    removeStatusCheckContexts: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    removeStatusCheckProtection: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    removeTeamAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    removeUserAccessRestrictions: [\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\n    ],\n    setAppAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n      {},\n      { mapToData: \"apps\" }\n    ],\n    setStatusCheckContexts: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n      {},\n      { mapToData: \"contexts\" }\n    ],\n    setTeamAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n      {},\n      { mapToData: \"teams\" }\n    ],\n    setUserAccessRestrictions: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n      {},\n      { mapToData: \"users\" }\n    ],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"\n    ],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateDeploymentBranchPolicy: [\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\n    ],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\n      \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"\n    ],\n    updateOrgRuleset: [\"PUT /orgs/{org}/rulesets/{ruleset_id}\"],\n    updatePullRequestReviewProtection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\n    ],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\n      \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"\n    ],\n    updateRepoRuleset: [\"PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    updateStatusCheckPotection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n      {},\n      { renamed: [\"repos\", \"updateStatusCheckProtection\"] }\n    ],\n    updateStatusCheckProtection: [\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\n    ],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    updateWebhookConfigForRepo: [\n      \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"\n    ],\n    uploadReleaseAsset: [\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n      { baseUrl: \"https://uploads.github.com\" }\n    ]\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\"],\n    issuesAndPullRequests: [\"GET /search/issues\"],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\"],\n    users: [\"GET /search/users\"]\n  },\n  secretScanning: {\n    getAlert: [\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"\n    ],\n    listAlertsForEnterprise: [\n      \"GET /enterprises/{enterprise}/secret-scanning/alerts\"\n    ],\n    listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n    listLocationsForAlert: [\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\"\n    ],\n    updateAlert: [\n      \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"\n    ]\n  },\n  securityAdvisories: {\n    createPrivateVulnerabilityReport: [\n      \"POST /repos/{owner}/{repo}/security-advisories/reports\"\n    ],\n    createRepositoryAdvisory: [\n      \"POST /repos/{owner}/{repo}/security-advisories\"\n    ],\n    createRepositoryAdvisoryCveRequest: [\n      \"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve\"\n    ],\n    getGlobalAdvisory: [\"GET /advisories/{ghsa_id}\"],\n    getRepositoryAdvisory: [\n      \"GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"\n    ],\n    listGlobalAdvisories: [\"GET /advisories\"],\n    listOrgRepositoryAdvisories: [\"GET /orgs/{org}/security-advisories\"],\n    listRepositoryAdvisories: [\"GET /repos/{owner}/{repo}/security-advisories\"],\n    updateRepositoryAdvisory: [\n      \"PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"\n    ]\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    addOrUpdateProjectPermissionsInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\n    ],\n    addOrUpdateRepoPermissionsInOrg: [\n      \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    checkPermissionsForProjectInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\n    ],\n    checkPermissionsForRepoInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"\n    ],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    deleteDiscussionInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    getDiscussionInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    getMembershipForUserInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"\n    ],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\n      \"GET /orgs/{org}/teams/{team_slug}/invitations\"\n    ],\n    listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"\n    ],\n    removeProjectInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\n    ],\n    removeRepoInOrg: [\n      \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\n    ],\n    updateDiscussionCommentInOrg: [\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\n    ],\n    updateDiscussionInOrg: [\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\n    ],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n  },\n  users: {\n    addEmailForAuthenticated: [\n      \"POST /user/emails\",\n      {},\n      { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] }\n    ],\n    addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n    addSocialAccountForAuthenticatedUser: [\"POST /user/social_accounts\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\n      \"POST /user/gpg_keys\",\n      {},\n      { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] }\n    ],\n    createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\n      \"POST /user/keys\",\n      {},\n      { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] }\n    ],\n    createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n    createSshSigningKeyForAuthenticatedUser: [\"POST /user/ssh_signing_keys\"],\n    deleteEmailForAuthenticated: [\n      \"DELETE /user/emails\",\n      {},\n      { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] }\n    ],\n    deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\n      \"DELETE /user/gpg_keys/{gpg_key_id}\",\n      {},\n      { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] }\n    ],\n    deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\n      \"DELETE /user/keys/{key_id}\",\n      {},\n      { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] }\n    ],\n    deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n    deleteSocialAccountForAuthenticatedUser: [\"DELETE /user/social_accounts\"],\n    deleteSshSigningKeyForAuthenticatedUser: [\n      \"DELETE /user/ssh_signing_keys/{ssh_signing_key_id}\"\n    ],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\n      \"GET /user/gpg_keys/{gpg_key_id}\",\n      {},\n      { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] }\n    ],\n    getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\n      \"GET /user/keys/{key_id}\",\n      {},\n      { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] }\n    ],\n    getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n    getSshSigningKeyForAuthenticatedUser: [\n      \"GET /user/ssh_signing_keys/{ssh_signing_key_id}\"\n    ],\n    list: [\"GET /users\"],\n    listBlockedByAuthenticated: [\n      \"GET /user/blocks\",\n      {},\n      { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] }\n    ],\n    listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\n      \"GET /user/emails\",\n      {},\n      { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] }\n    ],\n    listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\n      \"GET /user/following\",\n      {},\n      { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] }\n    ],\n    listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\n      \"GET /user/gpg_keys\",\n      {},\n      { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] }\n    ],\n    listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\n      \"GET /user/public_emails\",\n      {},\n      { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] }\n    ],\n    listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\n      \"GET /user/keys\",\n      {},\n      { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] }\n    ],\n    listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n    listSocialAccountsForAuthenticatedUser: [\"GET /user/social_accounts\"],\n    listSocialAccountsForUser: [\"GET /users/{username}/social_accounts\"],\n    listSshSigningKeysForAuthenticatedUser: [\"GET /user/ssh_signing_keys\"],\n    listSshSigningKeysForUser: [\"GET /users/{username}/ssh_signing_keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\n      \"PATCH /user/email/visibility\",\n      {},\n      { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] }\n    ],\n    setPrimaryEmailVisibilityForAuthenticatedUser: [\n      \"PATCH /user/email/visibility\"\n    ],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"]\n  }\n};\nvar endpoints_default = Endpoints;\nexport {\n  endpoints_default as default\n};\n","import ENDPOINTS from \"./generated/endpoints\";\nconst endpointMethodsMap = /* @__PURE__ */ new Map();\nfor (const [scope, endpoints] of Object.entries(ENDPOINTS)) {\n  for (const [methodName, endpoint] of Object.entries(endpoints)) {\n    const [route, defaults, decorations] = endpoint;\n    const [method, url] = route.split(/ /);\n    const endpointDefaults = Object.assign(\n      {\n        method,\n        url\n      },\n      defaults\n    );\n    if (!endpointMethodsMap.has(scope)) {\n      endpointMethodsMap.set(scope, /* @__PURE__ */ new Map());\n    }\n    endpointMethodsMap.get(scope).set(methodName, {\n      scope,\n      methodName,\n      endpointDefaults,\n      decorations\n    });\n  }\n}\nconst handler = {\n  has({ scope }, methodName) {\n    return endpointMethodsMap.get(scope).has(methodName);\n  },\n  getOwnPropertyDescriptor(target, methodName) {\n    return {\n      value: this.get(target, methodName),\n      // ensures method is in the cache\n      configurable: true,\n      writable: true,\n      enumerable: true\n    };\n  },\n  defineProperty(target, methodName, descriptor) {\n    Object.defineProperty(target.cache, methodName, descriptor);\n    return true;\n  },\n  deleteProperty(target, methodName) {\n    delete target.cache[methodName];\n    return true;\n  },\n  ownKeys({ scope }) {\n    return [...endpointMethodsMap.get(scope).keys()];\n  },\n  set(target, methodName, value) {\n    return target.cache[methodName] = value;\n  },\n  get({ octokit, scope, cache }, methodName) {\n    if (cache[methodName]) {\n      return cache[methodName];\n    }\n    const method = endpointMethodsMap.get(scope).get(methodName);\n    if (!method) {\n      return void 0;\n    }\n    const { endpointDefaults, decorations } = method;\n    if (decorations) {\n      cache[methodName] = decorate(\n        octokit,\n        scope,\n        methodName,\n        endpointDefaults,\n        decorations\n      );\n    } else {\n      cache[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n    return cache[methodName];\n  }\n};\nfunction endpointsToMethods(octokit) {\n  const newMethods = {};\n  for (const scope of endpointMethodsMap.keys()) {\n    newMethods[scope] = new Proxy({ octokit, scope, cache: {} }, handler);\n  }\n  return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n  function withDecorations(...args) {\n    let options = requestWithDefaults.endpoint.merge(...args);\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: void 0\n      });\n      return requestWithDefaults(options);\n    }\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(\n        `octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`\n      );\n    }\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n    if (decorations.renamedParameters) {\n      const options2 = requestWithDefaults.endpoint.merge(...args);\n      for (const [name, alias] of Object.entries(\n        decorations.renamedParameters\n      )) {\n        if (name in options2) {\n          octokit.log.warn(\n            `\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`\n          );\n          if (!(alias in options2)) {\n            options2[alias] = options2[name];\n          }\n          delete options2[name];\n        }\n      }\n      return requestWithDefaults(options2);\n    }\n    return requestWithDefaults(...args);\n  }\n  return Object.assign(withDecorations, requestWithDefaults);\n}\nexport {\n  endpointsToMethods\n};\n","import { VERSION } from \"./version\";\nimport { endpointsToMethods } from \"./endpoints-to-methods\";\nfunction restEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit);\n  return {\n    rest: api\n  };\n}\nrestEndpointMethods.VERSION = VERSION;\nfunction legacyRestEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit);\n  return {\n    ...api,\n    rest: api\n  };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\nexport {\n  legacyRestEndpointMethods,\n  restEndpointMethods\n};\n","// pkg/dist-src/version.js\nvar VERSION = \"9.1.2\";\n\n// pkg/dist-src/normalize-paginated-list-response.js\nfunction normalizePaginatedListResponse(response) {\n  if (!response.data) {\n    return {\n      ...response,\n      data: []\n    };\n  }\n  const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n  if (!responseNeedsNormalization)\n    return response;\n  const incompleteResults = response.data.incomplete_results;\n  const repositorySelection = response.data.repository_selection;\n  const totalCount = response.data.total_count;\n  delete response.data.incomplete_results;\n  delete response.data.repository_selection;\n  delete response.data.total_count;\n  const namespaceKey = Object.keys(response.data)[0];\n  const data = response.data[namespaceKey];\n  response.data = data;\n  if (typeof incompleteResults !== \"undefined\") {\n    response.data.incomplete_results = incompleteResults;\n  }\n  if (typeof repositorySelection !== \"undefined\") {\n    response.data.repository_selection = repositorySelection;\n  }\n  response.data.total_count = totalCount;\n  return response;\n}\n\n// pkg/dist-src/iterator.js\nfunction iterator(octokit, route, parameters) {\n  const options = typeof route === \"function\" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);\n  const requestMethod = typeof route === \"function\" ? route : octokit.request;\n  const method = options.method;\n  const headers = options.headers;\n  let url = options.url;\n  return {\n    [Symbol.asyncIterator]: () => ({\n      async next() {\n        if (!url)\n          return { done: true };\n        try {\n          const response = await requestMethod({ method, url, headers });\n          const normalizedResponse = normalizePaginatedListResponse(response);\n          url = ((normalizedResponse.headers.link || \"\").match(\n            /<([^>]+)>;\\s*rel=\"next\"/\n          ) || [])[1];\n          return { value: normalizedResponse };\n        } catch (error) {\n          if (error.status !== 409)\n            throw error;\n          url = \"\";\n          return {\n            value: {\n              status: 200,\n              headers: {},\n              data: []\n            }\n          };\n        }\n      }\n    })\n  };\n}\n\n// pkg/dist-src/paginate.js\nfunction paginate(octokit, route, parameters, mapFn) {\n  if (typeof parameters === \"function\") {\n    mapFn = parameters;\n    parameters = void 0;\n  }\n  return gather(\n    octokit,\n    [],\n    iterator(octokit, route, parameters)[Symbol.asyncIterator](),\n    mapFn\n  );\n}\nfunction gather(octokit, results, iterator2, mapFn) {\n  return iterator2.next().then((result) => {\n    if (result.done) {\n      return results;\n    }\n    let earlyExit = false;\n    function done() {\n      earlyExit = true;\n    }\n    results = results.concat(\n      mapFn ? mapFn(result.value, done) : result.value.data\n    );\n    if (earlyExit) {\n      return results;\n    }\n    return gather(octokit, results, iterator2, mapFn);\n  });\n}\n\n// pkg/dist-src/compose-paginate.js\nvar composePaginateRest = Object.assign(paginate, {\n  iterator\n});\n\n// pkg/dist-src/generated/paginating-endpoints.js\nvar paginatingEndpoints = [\n  \"GET /advisories\",\n  \"GET /app/hook/deliveries\",\n  \"GET /app/installation-requests\",\n  \"GET /app/installations\",\n  \"GET /assignments/{assignment_id}/accepted_assignments\",\n  \"GET /classrooms\",\n  \"GET /classrooms/{classroom_id}/assignments\",\n  \"GET /enterprises/{enterprise}/dependabot/alerts\",\n  \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n  \"GET /events\",\n  \"GET /gists\",\n  \"GET /gists/public\",\n  \"GET /gists/starred\",\n  \"GET /gists/{gist_id}/comments\",\n  \"GET /gists/{gist_id}/commits\",\n  \"GET /gists/{gist_id}/forks\",\n  \"GET /installation/repositories\",\n  \"GET /issues\",\n  \"GET /licenses\",\n  \"GET /marketplace_listing/plans\",\n  \"GET /marketplace_listing/plans/{plan_id}/accounts\",\n  \"GET /marketplace_listing/stubbed/plans\",\n  \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n  \"GET /networks/{owner}/{repo}/events\",\n  \"GET /notifications\",\n  \"GET /organizations\",\n  \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n  \"GET /orgs/{org}/actions/permissions/repositories\",\n  \"GET /orgs/{org}/actions/runners\",\n  \"GET /orgs/{org}/actions/secrets\",\n  \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/actions/variables\",\n  \"GET /orgs/{org}/actions/variables/{name}/repositories\",\n  \"GET /orgs/{org}/blocks\",\n  \"GET /orgs/{org}/code-scanning/alerts\",\n  \"GET /orgs/{org}/codespaces\",\n  \"GET /orgs/{org}/codespaces/secrets\",\n  \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/copilot/billing/seats\",\n  \"GET /orgs/{org}/dependabot/alerts\",\n  \"GET /orgs/{org}/dependabot/secrets\",\n  \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n  \"GET /orgs/{org}/events\",\n  \"GET /orgs/{org}/failed_invitations\",\n  \"GET /orgs/{org}/hooks\",\n  \"GET /orgs/{org}/hooks/{hook_id}/deliveries\",\n  \"GET /orgs/{org}/installations\",\n  \"GET /orgs/{org}/invitations\",\n  \"GET /orgs/{org}/invitations/{invitation_id}/teams\",\n  \"GET /orgs/{org}/issues\",\n  \"GET /orgs/{org}/members\",\n  \"GET /orgs/{org}/members/{username}/codespaces\",\n  \"GET /orgs/{org}/migrations\",\n  \"GET /orgs/{org}/migrations/{migration_id}/repositories\",\n  \"GET /orgs/{org}/outside_collaborators\",\n  \"GET /orgs/{org}/packages\",\n  \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n  \"GET /orgs/{org}/personal-access-token-requests\",\n  \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\",\n  \"GET /orgs/{org}/personal-access-tokens\",\n  \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\",\n  \"GET /orgs/{org}/projects\",\n  \"GET /orgs/{org}/properties/values\",\n  \"GET /orgs/{org}/public_members\",\n  \"GET /orgs/{org}/repos\",\n  \"GET /orgs/{org}/rulesets\",\n  \"GET /orgs/{org}/rulesets/rule-suites\",\n  \"GET /orgs/{org}/secret-scanning/alerts\",\n  \"GET /orgs/{org}/security-advisories\",\n  \"GET /orgs/{org}/teams\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n  \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n  \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n  \"GET /orgs/{org}/teams/{team_slug}/members\",\n  \"GET /orgs/{org}/teams/{team_slug}/projects\",\n  \"GET /orgs/{org}/teams/{team_slug}/repos\",\n  \"GET /orgs/{org}/teams/{team_slug}/teams\",\n  \"GET /projects/columns/{column_id}/cards\",\n  \"GET /projects/{project_id}/collaborators\",\n  \"GET /projects/{project_id}/columns\",\n  \"GET /repos/{owner}/{repo}/actions/artifacts\",\n  \"GET /repos/{owner}/{repo}/actions/caches\",\n  \"GET /repos/{owner}/{repo}/actions/organization-secrets\",\n  \"GET /repos/{owner}/{repo}/actions/organization-variables\",\n  \"GET /repos/{owner}/{repo}/actions/runners\",\n  \"GET /repos/{owner}/{repo}/actions/runs\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n  \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n  \"GET /repos/{owner}/{repo}/actions/secrets\",\n  \"GET /repos/{owner}/{repo}/actions/variables\",\n  \"GET /repos/{owner}/{repo}/actions/workflows\",\n  \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n  \"GET /repos/{owner}/{repo}/activity\",\n  \"GET /repos/{owner}/{repo}/assignees\",\n  \"GET /repos/{owner}/{repo}/branches\",\n  \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n  \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n  \"GET /repos/{owner}/{repo}/code-scanning/alerts\",\n  \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n  \"GET /repos/{owner}/{repo}/code-scanning/analyses\",\n  \"GET /repos/{owner}/{repo}/codespaces\",\n  \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n  \"GET /repos/{owner}/{repo}/codespaces/secrets\",\n  \"GET /repos/{owner}/{repo}/collaborators\",\n  \"GET /repos/{owner}/{repo}/comments\",\n  \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/commits\",\n  \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n  \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/status\",\n  \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n  \"GET /repos/{owner}/{repo}/contributors\",\n  \"GET /repos/{owner}/{repo}/dependabot/alerts\",\n  \"GET /repos/{owner}/{repo}/dependabot/secrets\",\n  \"GET /repos/{owner}/{repo}/deployments\",\n  \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n  \"GET /repos/{owner}/{repo}/environments\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n  \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\",\n  \"GET /repos/{owner}/{repo}/events\",\n  \"GET /repos/{owner}/{repo}/forks\",\n  \"GET /repos/{owner}/{repo}/hooks\",\n  \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n  \"GET /repos/{owner}/{repo}/invitations\",\n  \"GET /repos/{owner}/{repo}/issues\",\n  \"GET /repos/{owner}/{repo}/issues/comments\",\n  \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/issues/events\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n  \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n  \"GET /repos/{owner}/{repo}/keys\",\n  \"GET /repos/{owner}/{repo}/labels\",\n  \"GET /repos/{owner}/{repo}/milestones\",\n  \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n  \"GET /repos/{owner}/{repo}/notifications\",\n  \"GET /repos/{owner}/{repo}/pages/builds\",\n  \"GET /repos/{owner}/{repo}/projects\",\n  \"GET /repos/{owner}/{repo}/pulls\",\n  \"GET /repos/{owner}/{repo}/pulls/comments\",\n  \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\",\n  \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n  \"GET /repos/{owner}/{repo}/releases\",\n  \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n  \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n  \"GET /repos/{owner}/{repo}/rules/branches/{branch}\",\n  \"GET /repos/{owner}/{repo}/rulesets\",\n  \"GET /repos/{owner}/{repo}/rulesets/rule-suites\",\n  \"GET /repos/{owner}/{repo}/secret-scanning/alerts\",\n  \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n  \"GET /repos/{owner}/{repo}/security-advisories\",\n  \"GET /repos/{owner}/{repo}/stargazers\",\n  \"GET /repos/{owner}/{repo}/subscribers\",\n  \"GET /repos/{owner}/{repo}/tags\",\n  \"GET /repos/{owner}/{repo}/teams\",\n  \"GET /repos/{owner}/{repo}/topics\",\n  \"GET /repositories\",\n  \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n  \"GET /repositories/{repository_id}/environments/{environment_name}/variables\",\n  \"GET /search/code\",\n  \"GET /search/commits\",\n  \"GET /search/issues\",\n  \"GET /search/labels\",\n  \"GET /search/repositories\",\n  \"GET /search/topics\",\n  \"GET /search/users\",\n  \"GET /teams/{team_id}/discussions\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/comments\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n  \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\",\n  \"GET /teams/{team_id}/invitations\",\n  \"GET /teams/{team_id}/members\",\n  \"GET /teams/{team_id}/projects\",\n  \"GET /teams/{team_id}/repos\",\n  \"GET /teams/{team_id}/teams\",\n  \"GET /user/blocks\",\n  \"GET /user/codespaces\",\n  \"GET /user/codespaces/secrets\",\n  \"GET /user/emails\",\n  \"GET /user/followers\",\n  \"GET /user/following\",\n  \"GET /user/gpg_keys\",\n  \"GET /user/installations\",\n  \"GET /user/installations/{installation_id}/repositories\",\n  \"GET /user/issues\",\n  \"GET /user/keys\",\n  \"GET /user/marketplace_purchases\",\n  \"GET /user/marketplace_purchases/stubbed\",\n  \"GET /user/memberships/orgs\",\n  \"GET /user/migrations\",\n  \"GET /user/migrations/{migration_id}/repositories\",\n  \"GET /user/orgs\",\n  \"GET /user/packages\",\n  \"GET /user/packages/{package_type}/{package_name}/versions\",\n  \"GET /user/public_emails\",\n  \"GET /user/repos\",\n  \"GET /user/repository_invitations\",\n  \"GET /user/social_accounts\",\n  \"GET /user/ssh_signing_keys\",\n  \"GET /user/starred\",\n  \"GET /user/subscriptions\",\n  \"GET /user/teams\",\n  \"GET /users\",\n  \"GET /users/{username}/events\",\n  \"GET /users/{username}/events/orgs/{org}\",\n  \"GET /users/{username}/events/public\",\n  \"GET /users/{username}/followers\",\n  \"GET /users/{username}/following\",\n  \"GET /users/{username}/gists\",\n  \"GET /users/{username}/gpg_keys\",\n  \"GET /users/{username}/keys\",\n  \"GET /users/{username}/orgs\",\n  \"GET /users/{username}/packages\",\n  \"GET /users/{username}/projects\",\n  \"GET /users/{username}/received_events\",\n  \"GET /users/{username}/received_events/public\",\n  \"GET /users/{username}/repos\",\n  \"GET /users/{username}/social_accounts\",\n  \"GET /users/{username}/ssh_signing_keys\",\n  \"GET /users/{username}/starred\",\n  \"GET /users/{username}/subscriptions\"\n];\n\n// pkg/dist-src/paginating-endpoints.js\nfunction isPaginatingEndpoint(arg) {\n  if (typeof arg === \"string\") {\n    return paginatingEndpoints.includes(arg);\n  } else {\n    return false;\n  }\n}\n\n// pkg/dist-src/index.js\nfunction paginateRest(octokit) {\n  return {\n    paginate: Object.assign(paginate.bind(null, octokit), {\n      iterator: iterator.bind(null, octokit)\n    })\n  };\n}\npaginateRest.VERSION = VERSION;\nexport {\n  composePaginateRest,\n  isPaginatingEndpoint,\n  paginateRest,\n  paginatingEndpoints\n};\n",null,null,"import { symbol, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { make as make$1 } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual, identity, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol as symbol$1, array } from '../../Hash/dist/effect-Hash.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { none, some as some$1, liftPredicate, map as map$2, getOrElse } from '../../Option/dist/effect-Option.esm.js';\nimport { mapInput } from '../../Order/dist/effect-Order.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { fromIterable as fromIterable$1, reverse as reverse$1, filterMap as filterMap$1, filterMapWhile as filterMapWhile$1, intersection as intersection$1, map as map$1, mapAccum as mapAccum$1, partition as partition$1, partitionMap as partitionMap$1, separate as separate$1, sort as sort$1, union as union$1, dedupe as dedupe$1, dedupeAdjacent as dedupeAdjacent$1, unzip as unzip$1, zipWith as zipWith$1, remove as remove$1, modifyOption as modifyOption$1, makeBy as makeBy$1, contains as contains$1, containsWith as containsWith$1, findFirst as findFirst$1, findFirstIndex as findFirstIndex$1, findLast as findLast$1, findLastIndex as findLastIndex$1, join as join$1, reduce as reduce$1, reduceRight as reduceRight$1 } from '../../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Chunk\");\n\n/**\n * @category symbol\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category model\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\nfunction copy(src, srcPos, dest, destPos, len) {\n  for (let i = srcPos; i < Math.min(src.length, srcPos + len); i++) {\n    dest[destPos + i - srcPos] = src[i];\n  }\n  return dest;\n}\nconst emptyArray = [];\n\n/**\n * Compares the two chunks of equal length using the specified function\n *\n * @category equivalence\n * @since 2.0.0\n */\nconst getEquivalence = isEquivalent => make$1((self, that) => self.length === that.length && toReadonlyArray(self).every((value, i) => isEquivalent(value, unsafeGet(that, i))));\nconst _equivalence = /*#__PURE__*/getEquivalence(equals);\nconst ChunkProto = {\n  [TypeId]: {\n    _A: _ => _\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"Chunk\",\n      values: toReadonlyArray(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  [symbol](that) {\n    return isChunk(that) && _equivalence(this, that);\n  },\n  [symbol$1]() {\n    return array(toReadonlyArray(this));\n  },\n  [Symbol.iterator]() {\n    switch (this.backing._tag) {\n      case \"IArray\":\n        {\n          return this.backing.array[Symbol.iterator]();\n        }\n      case \"IEmpty\":\n        {\n          return emptyArray[Symbol.iterator]();\n        }\n      default:\n        {\n          return toReadonlyArray(this)[Symbol.iterator]();\n        }\n    }\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst makeChunk = backing => {\n  const chunk = Object.create(ChunkProto);\n  chunk.backing = backing;\n  switch (backing._tag) {\n    case \"IEmpty\":\n      {\n        chunk.length = 0;\n        chunk.depth = 0;\n        chunk.left = chunk;\n        chunk.right = chunk;\n        break;\n      }\n    case \"IConcat\":\n      {\n        chunk.length = backing.left.length + backing.right.length;\n        chunk.depth = 1 + Math.max(backing.left.depth, backing.right.depth);\n        chunk.left = backing.left;\n        chunk.right = backing.right;\n        break;\n      }\n    case \"IArray\":\n      {\n        chunk.length = backing.array.length;\n        chunk.depth = 0;\n        chunk.left = _empty;\n        chunk.right = _empty;\n        break;\n      }\n    case \"ISingleton\":\n      {\n        chunk.length = 1;\n        chunk.depth = 0;\n        chunk.left = _empty;\n        chunk.right = _empty;\n        break;\n      }\n    case \"ISlice\":\n      {\n        chunk.length = backing.length;\n        chunk.depth = backing.chunk.depth + 1;\n        chunk.left = _empty;\n        chunk.right = _empty;\n        break;\n      }\n  }\n  return chunk;\n};\n\n/**\n * Checks if `u` is a `Chunk<unknown>`\n *\n * @category constructors\n * @since 2.0.0\n */\nconst isChunk = u => hasProperty(u, TypeId);\nconst _empty = /*#__PURE__*/makeChunk({\n  _tag: \"IEmpty\"\n});\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nconst empty = () => _empty;\n\n/**\n * Builds a `NonEmptyChunk` from an non-empty collection of elements.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst make = (...as) => as.length === 1 ? of(as[0]) : unsafeFromNonEmptyArray(as);\n\n/**\n * Builds a `NonEmptyChunk` from a single element.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst of = a => makeChunk({\n  _tag: \"ISingleton\",\n  a\n});\n\n/**\n * Converts from an `Iterable<A>`\n *\n * @category conversions\n * @since 2.0.0\n */\nconst fromIterable = self => isChunk(self) ? self : makeChunk({\n  _tag: \"IArray\",\n  array: fromIterable$1(self)\n});\nconst copyToArray = (self, array, initial) => {\n  switch (self.backing._tag) {\n    case \"IArray\":\n      {\n        copy(self.backing.array, 0, array, initial, self.length);\n        break;\n      }\n    case \"IConcat\":\n      {\n        copyToArray(self.left, array, initial);\n        copyToArray(self.right, array, initial + self.left.length);\n        break;\n      }\n    case \"ISingleton\":\n      {\n        array[initial] = self.backing.a;\n        break;\n      }\n    case \"ISlice\":\n      {\n        let i = 0;\n        let j = initial;\n        while (i < self.length) {\n          array[j] = unsafeGet(self, i);\n          i += 1;\n          j += 1;\n        }\n        break;\n      }\n  }\n};\n\n/**\n * Converts the specified `Chunk` to a `ReadonlyArray`.\n *\n * @category conversions\n * @since 2.0.0\n */\nconst toReadonlyArray = self => {\n  switch (self.backing._tag) {\n    case \"IEmpty\":\n      {\n        return emptyArray;\n      }\n    case \"IArray\":\n      {\n        return self.backing.array;\n      }\n    default:\n      {\n        const arr = new Array(self.length);\n        copyToArray(self, arr, 0);\n        self.backing = {\n          _tag: \"IArray\",\n          array: arr\n        };\n        self.left = _empty;\n        self.right = _empty;\n        self.depth = 0;\n        return arr;\n      }\n  }\n};\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst reverse = self => {\n  switch (self.backing._tag) {\n    case \"IEmpty\":\n    case \"ISingleton\":\n      return self;\n    case \"IArray\":\n      {\n        return makeChunk({\n          _tag: \"IArray\",\n          array: reverse$1(self.backing.array)\n        });\n      }\n    case \"IConcat\":\n      {\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: reverse(self.backing.right),\n          right: reverse(self.backing.left)\n        });\n      }\n    case \"ISlice\":\n      return unsafeFromArray(reverse$1(toReadonlyArray(self)));\n  }\n};\n\n/**\n * This function provides a safe way to read a value at a particular index from a `Chunk`.\n *\n * @category elements\n * @since 2.0.0\n */\nconst get = /*#__PURE__*/dual(2, (self, index) => index < 0 || index >= self.length ? none() : some$1(unsafeGet(self, index)));\n\n/**\n * Wraps an array into a chunk without copying, unsafe on mutable arrays\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeFromArray = self => makeChunk({\n  _tag: \"IArray\",\n  array: self\n});\n\n/**\n * Wraps an array into a chunk without copying, unsafe on mutable arrays\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeFromNonEmptyArray = self => unsafeFromArray(self);\n\n/**\n * Gets an element unsafely, will throw on out of bounds\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeGet = /*#__PURE__*/dual(2, (self, index) => {\n  switch (self.backing._tag) {\n    case \"IEmpty\":\n      {\n        throw new Error(`Index out of bounds`);\n      }\n    case \"ISingleton\":\n      {\n        if (index !== 0) {\n          throw new Error(`Index out of bounds`);\n        }\n        return self.backing.a;\n      }\n    case \"IArray\":\n      {\n        if (index >= self.length || index < 0) {\n          throw new Error(`Index out of bounds`);\n        }\n        return self.backing.array[index];\n      }\n    case \"IConcat\":\n      {\n        return index < self.left.length ? unsafeGet(self.left, index) : unsafeGet(self.right, index - self.left.length);\n      }\n    case \"ISlice\":\n      {\n        return unsafeGet(self.backing.chunk, index + self.backing.offset);\n      }\n  }\n});\n\n/**\n * Appends the specified element to the end of the `Chunk`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst append = /*#__PURE__*/dual(2, (self, a) => appendAllNonEmpty(self, of(a)));\n\n/**\n * Prepend an element to the front of a `Chunk`, creating a new `NonEmptyChunk`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst prepend = /*#__PURE__*/dual(2, (self, elem) => appendAllNonEmpty(of(elem), self));\n\n/**\n * Takes the first up to `n` elements from the chunk\n *\n * @since 2.0.0\n */\nconst take = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return _empty;\n  } else if (n >= self.length) {\n    return self;\n  } else {\n    switch (self.backing._tag) {\n      case \"ISlice\":\n        {\n          return makeChunk({\n            _tag: \"ISlice\",\n            chunk: self.backing.chunk,\n            length: n,\n            offset: self.backing.offset\n          });\n        }\n      case \"IConcat\":\n        {\n          if (n > self.left.length) {\n            return makeChunk({\n              _tag: \"IConcat\",\n              left: self.left,\n              right: take(self.right, n - self.left.length)\n            });\n          }\n          return take(self.left, n);\n        }\n      default:\n        {\n          return makeChunk({\n            _tag: \"ISlice\",\n            chunk: self,\n            offset: 0,\n            length: n\n          });\n        }\n    }\n  }\n});\n\n/**\n * Drops the first up to `n` elements from the chunk\n *\n * @since 2.0.0\n */\nconst drop = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return self;\n  } else if (n >= self.length) {\n    return _empty;\n  } else {\n    switch (self.backing._tag) {\n      case \"ISlice\":\n        {\n          return makeChunk({\n            _tag: \"ISlice\",\n            chunk: self.backing.chunk,\n            offset: self.backing.offset + n,\n            length: self.backing.length - n\n          });\n        }\n      case \"IConcat\":\n        {\n          if (n > self.left.length) {\n            return drop(self.right, n - self.left.length);\n          }\n          return makeChunk({\n            _tag: \"IConcat\",\n            left: drop(self.left, n),\n            right: self.right\n          });\n        }\n      default:\n        {\n          return makeChunk({\n            _tag: \"ISlice\",\n            chunk: self,\n            offset: n,\n            length: self.length - n\n          });\n        }\n    }\n  }\n});\n\n/**\n * Drops the last `n` elements.\n *\n * @since 2.0.0\n */\nconst dropRight = /*#__PURE__*/dual(2, (self, n) => take(self, Math.max(0, self.length - n)));\n\n/**\n * Drops all elements so long as the predicate returns true.\n *\n * @since 2.0.0\n */\nconst dropWhile = /*#__PURE__*/dual(2, (self, f) => {\n  const arr = toReadonlyArray(self);\n  const len = arr.length;\n  let i = 0;\n  while (i < len && f(arr[i])) {\n    i++;\n  }\n  return drop(self, i);\n});\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst prependAll = /*#__PURE__*/dual(2, (self, that) => appendAll(that, self));\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst prependAllNonEmpty = /*#__PURE__*/dual(2, (self, that) => prependAll(self, that));\n\n/**\n * Concatenates the two chunks\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst appendAll = /*#__PURE__*/dual(2, (self, that) => {\n  if (self.backing._tag === \"IEmpty\") {\n    return that;\n  }\n  if (that.backing._tag === \"IEmpty\") {\n    return self;\n  }\n  const diff = that.depth - self.depth;\n  if (Math.abs(diff) <= 1) {\n    return makeChunk({\n      _tag: \"IConcat\",\n      left: self,\n      right: that\n    });\n  } else if (diff < -1) {\n    if (self.left.depth >= self.right.depth) {\n      const nr = appendAll(self.right, that);\n      return makeChunk({\n        _tag: \"IConcat\",\n        left: self.left,\n        right: nr\n      });\n    } else {\n      const nrr = appendAll(self.right.right, that);\n      if (nrr.depth === self.depth - 3) {\n        const nr = makeChunk({\n          _tag: \"IConcat\",\n          left: self.right.left,\n          right: nrr\n        });\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: self.left,\n          right: nr\n        });\n      } else {\n        const nl = makeChunk({\n          _tag: \"IConcat\",\n          left: self.left,\n          right: self.right.left\n        });\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: nl,\n          right: nrr\n        });\n      }\n    }\n  } else {\n    if (that.right.depth >= that.left.depth) {\n      const nl = appendAll(self, that.left);\n      return makeChunk({\n        _tag: \"IConcat\",\n        left: nl,\n        right: that.right\n      });\n    } else {\n      const nll = appendAll(self, that.left.left);\n      if (nll.depth === that.depth - 3) {\n        const nl = makeChunk({\n          _tag: \"IConcat\",\n          left: nll,\n          right: that.left.right\n        });\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: nl,\n          right: that.right\n        });\n      } else {\n        const nr = makeChunk({\n          _tag: \"IConcat\",\n          left: that.left.right,\n          right: that.right\n        });\n        return makeChunk({\n          _tag: \"IConcat\",\n          left: nll,\n          right: nr\n        });\n      }\n    }\n  }\n});\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst appendAllNonEmpty = /*#__PURE__*/dual(2, (self, that) => appendAll(self, that));\n\n/**\n * Returns a filtered and mapped subset of the elements.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filterMap = /*#__PURE__*/dual(2, (self, f) => unsafeFromArray(filterMap$1(self, f)));\n\n/**\n * Returns a filtered and mapped subset of the elements.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filter = /*#__PURE__*/dual(2, (self, predicate) => unsafeFromArray(filterMap$1(self, liftPredicate(predicate))));\n\n/**\n * Transforms all elements of the chunk for as long as the specified function returns some value\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filterMapWhile = /*#__PURE__*/dual(2, (self, f) => unsafeFromArray(filterMapWhile$1(self, f)));\n\n/**\n * Filter out optional values\n *\n * @since 2.0.0\n * @category filtering\n */\nconst compact = self => filterMap(self, identity);\n\n/**\n * Returns a chunk with the elements mapped by the specified function.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  if (self.backing._tag === \"ISingleton\") {\n    return f(self.backing.a, 0);\n  }\n  let out = _empty;\n  let i = 0;\n  for (const k of self) {\n    out = appendAll(out, f(k, i++));\n  }\n  return out;\n});\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nconst flatMapNonEmpty = flatMap;\n\n/**\n * Applies the specified function to each element of the `List`.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst forEach = /*#__PURE__*/dual(2, (self, f) => toReadonlyArray(self).forEach(f));\n\n/**\n * Flattens a chunk of chunks into a single chunk by concatenating all chunks.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatten = /*#__PURE__*/flatMap(identity);\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nconst flattenNonEmpty = /*#__PURE__*/flatMapNonEmpty(identity);\n\n/**\n * Groups elements in chunks of up to `n` elements.\n *\n * @since 2.0.0\n * @category elements\n */\nconst chunksOf = /*#__PURE__*/dual(2, (self, n) => {\n  const gr = [];\n  let current = [];\n  toReadonlyArray(self).forEach(a => {\n    current.push(a);\n    if (current.length >= n) {\n      gr.push(unsafeFromArray(current));\n      current = [];\n    }\n  });\n  if (current.length > 0) {\n    gr.push(unsafeFromArray(current));\n  }\n  return unsafeFromArray(gr);\n});\n\n/**\n * Creates a Chunk of unique values that are included in all given Chunks.\n *\n * The order and references of result values are determined by the Chunk.\n *\n * @since 2.0.0\n * @category elements\n */\nconst intersection = /*#__PURE__*/dual(2, (self, that) => unsafeFromArray(intersection$1(toReadonlyArray(self), toReadonlyArray(that))));\n\n/**\n * Determines if the chunk is empty.\n *\n * @since 2.0.0\n * @category elements\n */\nconst isEmpty = self => self.length === 0;\n\n/**\n * Determines if the chunk is not empty.\n *\n * @since 2.0.0\n * @category elements\n */\nconst isNonEmpty = self => self.length > 0;\n\n/**\n * Returns the first element of this chunk if it exists.\n *\n * @since 2.0.0\n * @category elements\n */\nconst head = /*#__PURE__*/get(0);\n\n/**\n * Returns the first element of this chunk.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeHead = self => unsafeGet(self, 0);\n\n/**\n * Returns the first element of this non empty chunk.\n *\n * @since 2.0.0\n * @category elements\n */\nconst headNonEmpty = unsafeHead;\n\n/**\n * Returns the last element of this chunk if it exists.\n *\n * @since 2.0.0\n * @category elements\n */\nconst last = self => get(self, self.length - 1);\n\n/**\n * Returns the last element of this chunk.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeLast = self => unsafeGet(self, self.length - 1);\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Returns a chunk with the elements mapped by the specified f function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = /*#__PURE__*/dual(2, (self, f) => self.backing._tag === \"ISingleton\" ? of(f(self.backing.a, 0)) : unsafeFromArray(pipe(toReadonlyArray(self), map$1((a, i) => f(a, i)))));\n\n/**\n * Statefully maps over the chunk, producing new elements of type `B`.\n *\n * @since 2.0.0\n * @category folding\n */\nconst mapAccum = /*#__PURE__*/dual(3, (self, s, f) => {\n  const [s1, as] = mapAccum$1(self, s, f);\n  return [s1, unsafeFromArray(as)];\n});\n\n/**\n * Separate elements based on a predicate that also exposes the index of the element.\n *\n * @category filtering\n * @since 2.0.0\n */\nconst partition = /*#__PURE__*/dual(2, (self, predicate) => pipe(partition$1(toReadonlyArray(self), predicate), ([l, r]) => [unsafeFromArray(l), unsafeFromArray(r)]));\n\n/**\n * Partitions the elements of this chunk into two chunks using f.\n *\n * @category filtering\n * @since 2.0.0\n */\nconst partitionMap = /*#__PURE__*/dual(2, (self, f) => pipe(partitionMap$1(toReadonlyArray(self), f), ([l, r]) => [unsafeFromArray(l), unsafeFromArray(r)]));\n\n/**\n * Partitions the elements of this chunk into two chunks.\n *\n * @category filtering\n * @since 2.0.0\n */\nconst separate = self => pipe(separate$1(toReadonlyArray(self)), ([l, r]) => [unsafeFromArray(l), unsafeFromArray(r)]);\n\n/**\n * Retireves the size of the chunk\n *\n * @since 2.0.0\n * @category elements\n */\nconst size = self => self.length;\n\n/**\n * Sort the elements of a Chunk in increasing order, creating a new Chunk.\n *\n * @since 2.0.0\n * @category elements\n */\nconst sort = /*#__PURE__*/dual(2, (self, O) => unsafeFromArray(sort$1(toReadonlyArray(self), O)));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst sortWith = /*#__PURE__*/dual(3, (self, f, order) => sort(self, mapInput(order, f)));\n\n/**\n *  Returns two splits of this chunk at the specified index.\n *\n * @since 2.0.0\n * @category elements\n */\nconst splitAt = /*#__PURE__*/dual(2, (self, n) => [take(self, n), drop(self, n)]);\n\n/**\n * Splits this chunk into `n` equally sized chunks.\n *\n * @since 2.0.0\n * @category elements\n */\nconst split = /*#__PURE__*/dual(2, (self, n) => chunksOf(self, Math.ceil(self.length / Math.floor(n))));\n\n/**\n * Splits this chunk on the first element that matches this predicate.\n *\n * @category elements\n * @since 2.0.0\n */\nconst splitWhere = /*#__PURE__*/dual(2, (self, predicate) => {\n  let i = 0;\n  for (const a of toReadonlyArray(self)) {\n    if (predicate(a)) {\n      break;\n    } else {\n      i++;\n    }\n  }\n  return splitAt(self, i);\n});\n\n/**\n * Returns every elements after the first.\n *\n * @since 2.0.0\n * @category elements\n */\nconst tail = self => self.length > 0 ? some$1(drop(self, 1)) : none();\n\n/**\n * Returns every elements after the first.\n *\n * @since 2.0.0\n * @category elements\n */\nconst tailNonEmpty = self => drop(self, 1);\n\n/**\n * Takes the last `n` elements.\n *\n * @since 2.0.0\n * @category elements\n */\nconst takeRight = /*#__PURE__*/dual(2, (self, n) => drop(self, self.length - n));\n\n/**\n * Takes all elements so long as the predicate returns true.\n *\n * @since 2.0.0\n * @category elements\n */\nconst takeWhile = /*#__PURE__*/dual(2, (self, predicate) => {\n  const res = [];\n  for (const a of toReadonlyArray(self)) {\n    if (predicate(a)) {\n      res.push(a);\n    } else {\n      break;\n    }\n  }\n  return unsafeFromArray(res);\n});\n\n/**\n * Creates a Chunks of unique values, in order, from all given Chunks.\n *\n * @since 2.0.0\n * @category elements\n */\nconst union = /*#__PURE__*/dual(2, (self, that) => unsafeFromArray(union$1(toReadonlyArray(self), toReadonlyArray(that))));\n\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @since 2.0.0\n * @category elements\n */\nconst dedupe = self => unsafeFromArray(dedupe$1(toReadonlyArray(self)));\n\n/**\n * Deduplicates adjacent elements that are identical.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst dedupeAdjacent = self => unsafeFromArray(dedupeAdjacent$1(self));\n\n/**\n * Takes a `Chunk` of pairs and return two corresponding `Chunk`s.\n *\n * Note: The function is reverse of `zip`.\n *\n * @since 2.0.0\n * @category elements\n */\nconst unzip = self => {\n  const [left, right] = unzip$1(self);\n  return [unsafeFromArray(left), unsafeFromArray(right)];\n};\n\n/**\n * Zips this chunk pointwise with the specified chunk using the specified combiner.\n *\n * @since 2.0.0\n * @category elements\n */\nconst zipWith = /*#__PURE__*/dual(3, (self, that, f) => unsafeFromArray(zipWith$1(self, that, f)));\n\n/**\n * Zips this chunk pointwise with the specified chunk.\n *\n * @since 2.0.0\n * @category elements\n */\nconst zip = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (a, b) => [a, b]));\n\n/**\n * Delete the element at the specified index, creating a new `Chunk`,\n * or returning the input if the index is out of bounds.\n *\n * @since 2.0.0\n */\nconst remove = /*#__PURE__*/dual(2, (self, i) => unsafeFromArray(remove$1(toReadonlyArray(self), i)));\n\n/**\n * @since 2.0.0\n */\nconst modifyOption = /*#__PURE__*/dual(3, (self, i, f) => map$2(modifyOption$1(toReadonlyArray(self), i, f), unsafeFromArray));\n\n/**\n * Apply a function to the element at the specified index, creating a new `Chunk`,\n * or returning the input if the index is out of bounds.\n *\n * @since 2.0.0\n */\nconst modify = /*#__PURE__*/dual(3, (self, i, f) => getOrElse(modifyOption(self, i, f), () => self));\n\n/**\n * Change the element at the specified index, creating a new `Chunk`,\n * or returning the input if the index is out of bounds.\n *\n * @since 2.0.0\n */\nconst replace = /*#__PURE__*/dual(3, (self, i, b) => modify(self, i, () => b));\n\n/**\n * @since 2.0.0\n */\nconst replaceOption = /*#__PURE__*/dual(3, (self, i, b) => modifyOption(self, i, () => b));\n\n/**\n * Return a Chunk of length n with element i initialized with f(i).\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst makeBy = /*#__PURE__*/dual(2, (n, f) => fromIterable(makeBy$1(n, f)));\n\n/**\n * Create a non empty `Chunk` containing a range of integers, including both endpoints.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst range = (start, end) => start <= end ? makeBy(end - start + 1, i => start + i) : of(start);\n\n// -------------------------------------------------------------------------------------\n// re-exports from ReadonlyArray\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns a function that checks if a `Chunk` contains a given value using the default `Equivalence`.\n *\n * @category elements\n * @since 2.0.0\n */\nconst contains = contains$1;\n\n/**\n * Returns a function that checks if a `Chunk` contains a given value using a provided `isEquivalent` function.\n *\n * @category elements\n * @since 2.0.0\n */\nconst containsWith = containsWith$1;\n\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findFirst = findFirst$1;\n\n/**\n * Return the first index for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findFirstIndex = findFirstIndex$1;\n\n/**\n * Find the last element for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findLast = findLast$1;\n\n/**\n * Return the last index for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findLastIndex = findLastIndex$1;\n\n/**\n * Check if a predicate holds true for every `Chunk` element.\n *\n * @category elements\n * @since 2.0.0\n */\nconst every = /*#__PURE__*/dual(2, (self, refinement) => fromIterable$1(self).every(refinement));\n\n/**\n * Check if a predicate holds true for some `Chunk` element.\n *\n * @category elements\n * @since 2.0.0\n */\nconst some = /*#__PURE__*/dual(2, (self, predicate) => fromIterable$1(self).some(predicate));\n\n/**\n * Joins the elements together with \"sep\" in the middle.\n *\n * @category folding\n * @since 2.0.0\n */\nconst join = join$1;\n\n/**\n * @category folding\n * @since 2.0.0\n */\nconst reduce = reduce$1;\n\n/**\n * @category folding\n * @since 2.0.0\n */\nconst reduceRight = reduceRight$1;\n\nexport { append, appendAll, appendAllNonEmpty, chunksOf, compact, contains, containsWith, dedupe, dedupeAdjacent, drop, dropRight, dropWhile, empty, every, filter, filterMap, filterMapWhile, findFirst, findFirstIndex, findLast, findLastIndex, flatMap, flatMapNonEmpty, flatten, flattenNonEmpty, forEach, fromIterable, get, getEquivalence, head, headNonEmpty, intersection, isChunk, isEmpty, isNonEmpty, join, last, make, makeBy, map, mapAccum, modify, modifyOption, of, partition, partitionMap, prepend, prependAll, prependAllNonEmpty, range, reduce, reduceRight, remove, replace, replaceOption, reverse, separate, size, some, sort, sortWith, split, splitAt, splitWhere, tail, tailNonEmpty, take, takeRight, takeWhile, toReadonlyArray, union, unsafeFromArray, unsafeFromNonEmptyArray, unsafeGet, unsafeHead, unsafeLast, unzip, zip, zipWith };\n","/**\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * Tests if a value is a `function`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isFunction } from 'effect/Predicate'\n *\n * assert.deepStrictEqual(isFunction(isFunction), true)\n * assert.deepStrictEqual(isFunction(\"function\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isFunction = input => typeof input === \"function\";\n\n/**\n * Creates a function that can be used in a data-last (aka `pipe`able) or\n * data-first style.\n *\n * The first parameter to `dual` is either the arity of the uncurried function\n * or a predicate that determines if the function is being used in a data-first\n * or data-last style.\n *\n * Using the arity is the most common use case, but there are some cases where\n * you may want to use a predicate. For example, if you have a function that\n * takes an optional argument, you can use a predicate to determine if the\n * function is being used in a data-first or data-last style.\n *\n * @param arity - Either the arity of the uncurried function or a predicate\n *                which determines if the function is being used in a data-first\n *                or data-last style.\n * @param body - The definition of the uncurried function.\n *\n * @example\n * import { dual, pipe } from \"effect/Function\"\n *\n * // Exampe using arity to determine data-first or data-last style\n * export const sum: {\n *   (that: number): (self: number) => number\n *   (self: number, that: number): number\n * } = dual(2, (self: number, that: number): number => self + that)\n *\n * assert.deepStrictEqual(sum(2, 3), 5)\n * assert.deepStrictEqual(pipe(2, sum(3)), 5)\n *\n * // Example using a predicate to determine data-first or data-last style\n * export const sum2: {\n *   (that: number): (self: number) => number\n *   (self: number, that: number): number\n * } = dual((args) => args.length === 1, (self: number, that: number): number => self + that)\n *\n * assert.deepStrictEqual(sum(2, 3), 5)\n * assert.deepStrictEqual(pipe(2, sum(3)), 5)\n *\n * @since 2.0.0\n */\nconst dual = function (arity, body) {\n  if (typeof arity === \"function\") {\n    return function () {\n      if (arity(arguments)) {\n        // @ts-expect-error\n        return body.apply(this, arguments);\n      }\n      return self => body(self, ...arguments);\n    };\n  }\n  switch (arity) {\n    case 0:\n      return body;\n    case 1:\n      return function (a) {\n        if (arguments.length >= 1) {\n          return body(a);\n        }\n        return function () {\n          return body(a);\n        };\n      };\n    case 2:\n      return function (a, b) {\n        if (arguments.length >= 2) {\n          return body(a, b);\n        }\n        return function (self) {\n          return body(self, a);\n        };\n      };\n    case 3:\n      return function (a, b, c) {\n        if (arguments.length >= 3) {\n          return body(a, b, c);\n        }\n        return function (self) {\n          return body(self, a, b);\n        };\n      };\n    case 4:\n      return function (a, b, c, d) {\n        if (arguments.length >= 4) {\n          return body(a, b, c, d);\n        }\n        return function (self) {\n          return body(self, a, b, c);\n        };\n      };\n    case 5:\n      return function (a, b, c, d, e) {\n        if (arguments.length >= 5) {\n          return body(a, b, c, d, e);\n        }\n        return function (self) {\n          return body(self, a, b, c, d);\n        };\n      };\n    default:\n      return function () {\n        if (arguments.length >= arity) {\n          // @ts-expect-error\n          return body.apply(this, arguments);\n        }\n        const args = arguments;\n        return function (self) {\n          return body(self, ...args);\n        };\n      };\n  }\n};\n/**\n * Apply a function to a given value.\n *\n * @param a - The value that the function will be applied to.\n * @param self - The function to be applied to a value.\n *\n * @example\n * import { pipe, apply } from \"effect/Function\"\n * import { length } from 'effect/String'\n *\n * assert.deepStrictEqual(pipe(length, apply(\"hello\")), 5)\n *\n * @since 2.0.0\n */\nconst apply = a => self => self(a);\n\n/**\n * A lazy argument.\n *\n * @example\n * import { LazyArg, constant } from \"effect/Function\"\n *\n * export const constNull: LazyArg<null> = constant(null)\n *\n * @since 2.0.0\n */\n\n/**\n * @example\n * import { FunctionN } from \"effect/Function\"\n *\n * export const sum: FunctionN<[number, number], number> = (a, b) => a + b\n *\n * @since 2.0.0\n */\n\n/**\n * The identity function, i.e. A function that returns its input argument.\n *\n * @param a - The input argument.\n *\n * @example\n * import { identity } from \"effect/Function\"\n *\n * assert.deepStrictEqual(identity(5), 5)\n *\n * @since 2.0.0\n */\nconst identity = a => a;\n\n/**\n * Casts the result to the specified type.\n *\n * @param a - The value to be casted to the target type.\n *\n * @example\n * import { unsafeCoerce, identity } from \"effect/Function\"\n *\n * assert.deepStrictEqual(unsafeCoerce, identity)\n *\n * @since 2.0.0\n */\nconst unsafeCoerce = identity;\n\n/**\n * Creates a constant value that never changes.\n *\n * This is useful when you want to pass a value to a higher-order function (a function that takes another function as its argument)\n * and want that inner function to always use the same value, no matter how many times it is called.\n *\n * @param value - The constant value to be returned.\n *\n * @example\n * import { constant } from \"effect/Function\"\n *\n * const constNull = constant(null)\n *\n * assert.deepStrictEqual(constNull(), null)\n * assert.deepStrictEqual(constNull(), null)\n *\n * @since 2.0.0\n */\nconst constant = value => () => value;\n\n/**\n * A thunk that returns always `true`.\n *\n * @example\n * import { constTrue } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constTrue(), true)\n *\n * @since 2.0.0\n */\nconst constTrue = /*#__PURE__*/constant(true);\n\n/**\n * A thunk that returns always `false`.\n *\n * @example\n * import { constFalse } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constFalse(), false)\n *\n * @since 2.0.0\n */\nconst constFalse = /*#__PURE__*/constant(false);\n\n/**\n * A thunk that returns always `null`.\n *\n * @example\n * import { constNull } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constNull(), null)\n *\n * @since 2.0.0\n */\nconst constNull = /*#__PURE__*/constant(null);\n\n/**\n * A thunk that returns always `undefined`.\n *\n * @example\n * import { constUndefined } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constUndefined(), undefined)\n *\n * @since 2.0.0\n */\nconst constUndefined = /*#__PURE__*/constant(undefined);\n\n/**\n * A thunk that returns always `void`.\n *\n * @example\n * import { constVoid } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constVoid(), undefined)\n *\n * @since 2.0.0\n */\nconst constVoid = constUndefined;\n\n/**\n * Reverses the order of arguments for a curried function.\n *\n * @param f - A curried function that takes multiple arguments.\n *\n * @example\n * import { flip } from \"effect/Function\"\n *\n * const f = (a: number) => (b: string) => a - b.length\n *\n * assert.deepStrictEqual(flip(f)('aaa')(2), -1)\n *\n * @since 2.0.0\n */\nconst flip = f => (...b) => (...a) => f(...a)(...b);\n\n/**\n * Composes two functions, `ab` and `bc` into a single function that takes in an argument `a` of type `A` and returns a result of type `C`.\n * The result is obtained by first applying the `ab` function to `a` and then applying the `bc` function to the result of `ab`.\n *\n * @param ab - A function that maps from `A` to `B`.\n * @param bc - A function that maps from `B` to `C`.\n *\n * @example\n * import { compose } from \"effect/Function\"\n *\n * const increment = (n: number) => n + 1;\n * const square = (n: number) => n * n;\n *\n * assert.strictEqual(compose(increment, square)(2), 9);\n *\n * @since 2.0.0\n */\nconst compose = /*#__PURE__*/dual(2, (ab, bc) => a => bc(ab(a)));\n\n/**\n * The `absurd` function is a stub for cases where a value of type `never` is encountered in your code,\n * meaning that it should be impossible for this code to be executed.\n *\n * This function is particularly when it's necessary to specify that certain cases are impossible.\n *\n * @since 2.0.0\n */\nconst absurd = _ => {\n  throw new Error(\"Called `absurd` function which should be uncallable\");\n};\n\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from \"effect/Function\"\n *\n * const sumTupled = tupled((x: number, y: number): number => x + y)\n *\n * assert.deepStrictEqual(sumTupled([1, 2]), 3)\n *\n * @since 2.0.0\n */\nconst tupled = f => a => f(...a);\n\n/**\n * Inverse function of `tupled`\n *\n * @example\n * import { untupled } from \"effect/Function\"\n *\n * const getFirst = untupled(<A, B>(tuple: [A, B]): A => tuple[0])\n *\n * assert.deepStrictEqual(getFirst(1, 2), 1)\n *\n * @since 2.0.0\n */\nconst untupled = f => (...a) => f(a);\n\n/**\n * Pipes the value of an expression into a pipeline of functions.\n *\n * This is useful in combination with data-last functions as a simulation of methods:\n *\n * ```\n * as.map(f).filter(g) -> pipe(as, map(f), filter(g))\n * ```\n *\n * @example\n * import { pipe } from \"effect/Function\"\n *\n * const length = (s: string): number => s.length\n * const double = (n: number): number => n * 2\n * const decrement = (n: number): number => n - 1\n *\n * assert.deepStrictEqual(pipe(length(\"hello\"), double, decrement), 9)\n *\n * @since 2.0.0\n */\n\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n  switch (arguments.length) {\n    case 1:\n      return a;\n    case 2:\n      return ab(a);\n    case 3:\n      return bc(ab(a));\n    case 4:\n      return cd(bc(ab(a)));\n    case 5:\n      return de(cd(bc(ab(a))));\n    case 6:\n      return ef(de(cd(bc(ab(a)))));\n    case 7:\n      return fg(ef(de(cd(bc(ab(a))))));\n    case 8:\n      return gh(fg(ef(de(cd(bc(ab(a)))))));\n    case 9:\n      return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n    default:\n      {\n        let ret = arguments[0];\n        for (let i = 1; i < arguments.length; i++) {\n          ret = arguments[i](ret);\n        }\n        return ret;\n      }\n  }\n}\n\n/**\n * Performs left-to-right function composition. The first argument may have any arity, the remaining arguments must be unary.\n *\n * See also [`pipe`](#pipe).\n *\n * @example\n * import { flow } from \"effect/Function\"\n *\n * const len = (s: string): number => s.length\n * const double = (n: number): number => n * 2\n *\n * const f = flow(len, double)\n *\n * assert.strictEqual(f('aaa'), 6)\n *\n * @since 2.0.0\n */\n\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n  switch (arguments.length) {\n    case 1:\n      return ab;\n    case 2:\n      return function () {\n        return bc(ab.apply(this, arguments));\n      };\n    case 3:\n      return function () {\n        return cd(bc(ab.apply(this, arguments)));\n      };\n    case 4:\n      return function () {\n        return de(cd(bc(ab.apply(this, arguments))));\n      };\n    case 5:\n      return function () {\n        return ef(de(cd(bc(ab.apply(this, arguments)))));\n      };\n    case 6:\n      return function () {\n        return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n      };\n    case 7:\n      return function () {\n        return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n      };\n    case 8:\n      return function () {\n        return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n      };\n    case 9:\n      return function () {\n        return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n      };\n  }\n  return;\n}\n\n/**\n * Type hole simulation.\n *\n * @since 2.0.0\n */\nconst hole = /*#__PURE__*/unsafeCoerce(absurd);\n\n/**\n * The SK combinator, also known as the \"S-K combinator\" or \"S-combinator\", is a fundamental combinator in the\n * lambda calculus and the SKI combinator calculus.\n *\n * This function is useful for discarding the first argument passed to it and returning the second argument.\n *\n * @param _ - The first argument to be discarded.\n * @param b - The second argument to be returned.\n *\n * @example\n * import { SK } from \"effect/Function\";\n *\n * assert.deepStrictEqual(SK(0, \"hello\"), \"hello\")\n *\n * @since 2.0.0\n */\nconst SK = (_, b) => b;\n\nexport { SK, absurd, apply, compose, constFalse, constNull, constTrue, constUndefined, constVoid, constant, dual, flip, flow, hole, identity, isFunction, pipe, tupled, unsafeCoerce, untupled };\n","const moduleVersion = \"2.0.0-next.54\";\n\nexport { moduleVersion };\n","import { moduleVersion } from '../../internal/version.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst globalStoreId = /*#__PURE__*/Symbol.for(`effect/GlobalValue/globalStoreId/${moduleVersion}`);\nif (!(globalStoreId in globalThis)) {\n  globalThis[globalStoreId] = /*#__PURE__*/new Map();\n}\nconst globalStore = globalThis[globalStoreId];\n\n/**\n * @since 2.0.0\n */\nconst globalValue = (id, compute) => {\n  if (!globalStore.has(id)) {\n    globalStore.set(id, compute());\n  }\n  return globalStore.get(id);\n};\n\nexport { globalValue };\n","import { dual, isFunction as isFunction$1 } from '../../Function/dist/effect-Function.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * Given a `Predicate<A>` returns a `Predicate<B>`\n *\n * @param self - the `Predicate<A>` to be transformed to `Predicate<B>`.\n * @param f - a function to transform `B` to `A`.\n *\n * @example\n * import * as P from \"effect/Predicate\"\n * import * as N from \"effect/Number\"\n *\n * const minLength3 = P.mapInput(N.greaterThan(2), (s: string) => s.length)\n *\n * assert.deepStrictEqual(minLength3(\"a\"), false)\n * assert.deepStrictEqual(minLength3(\"aa\"), false)\n * assert.deepStrictEqual(minLength3(\"aaa\"), true)\n * assert.deepStrictEqual(minLength3(\"aaaa\"), true)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst mapInput = /*#__PURE__*/dual(2, (self, f) => b => self(f(b)));\n\n/**\n * Tests if a value is a `string`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isString } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isString(\"a\"), true)\n *\n * assert.deepStrictEqual(isString(1), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isString = input => typeof input === \"string\";\n\n/**\n * Tests if a value is a `number`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isNumber } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNumber(2), true)\n *\n * assert.deepStrictEqual(isNumber(\"2\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNumber = input => typeof input === \"number\";\n\n/**\n * Tests if a value is a `boolean`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isBoolean } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isBoolean(true), true)\n *\n * assert.deepStrictEqual(isBoolean(\"true\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isBoolean = input => typeof input === \"boolean\";\n\n/**\n * Tests if a value is a `bigint`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isBigInt } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isBigInt(1n), true)\n *\n * assert.deepStrictEqual(isBigInt(1), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isBigInt = input => typeof input === \"bigint\";\n\n/**\n * Tests if a value is a `symbol`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isSymbol } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isSymbol(Symbol.for(\"a\")), true)\n *\n * assert.deepStrictEqual(isSymbol(\"a\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isSymbol = input => typeof input === \"symbol\";\n\n/**\n * Tests if a value is a `function`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isFunction } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isFunction(isFunction), true)\n *\n * assert.deepStrictEqual(isFunction(\"function\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isFunction = isFunction$1;\n\n/**\n * Tests if a value is `undefined`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isUndefined } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUndefined(undefined), true)\n *\n * assert.deepStrictEqual(isUndefined(null), false)\n * assert.deepStrictEqual(isUndefined(\"undefined\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isUndefined = input => input === undefined;\n\n/**\n * Tests if a value is not `undefined`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isNotUndefined } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotUndefined(null), true)\n * assert.deepStrictEqual(isNotUndefined(\"undefined\"), true)\n *\n * assert.deepStrictEqual(isNotUndefined(undefined), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNotUndefined = input => input !== undefined;\n\n/**\n * Tests if a value is `undefined`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isNull } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNull(null), true)\n *\n * assert.deepStrictEqual(isNull(undefined), false)\n * assert.deepStrictEqual(isNull(\"null\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNull = input => input === null;\n\n/**\n * Tests if a value is not `undefined`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isNotNull } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotNull(undefined), true)\n * assert.deepStrictEqual(isNotNull(\"null\"), true)\n *\n * assert.deepStrictEqual(isNotNull(null), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNotNull = input => input !== null;\n\n/**\n * A guard that always fails.\n *\n * @param _ - The value to test.\n *\n * @example\n * import { isNever } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNever(null), false)\n * assert.deepStrictEqual(isNever(undefined), false)\n * assert.deepStrictEqual(isNever({}), false)\n * assert.deepStrictEqual(isNever([]), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNever = _ => false;\n\n/**\n * A guard that always succeeds.\n *\n * @param _ - The value to test.\n *\n * @example\n * import { isUnknown } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUnknown(null), true)\n * assert.deepStrictEqual(isUnknown(undefined), true)\n *\n * assert.deepStrictEqual(isUnknown({}), true)\n * assert.deepStrictEqual(isUnknown([]), true)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isUnknown = _ => true;\n\n/**\n * Tests if a value is an `object`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isObject } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isObject({}), true)\n * assert.deepStrictEqual(isObject([]), true)\n *\n * assert.deepStrictEqual(isObject(null), false)\n * assert.deepStrictEqual(isObject(undefined), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isObject = input => typeof input === \"object\" && input !== null || isFunction(input);\n\n/**\n * Checks whether a value is an `object` containing a specified property key.\n *\n * @param property - The field to check within the object.\n * @param self - The value to examine.\n *\n * @category guards\n * @since 2.0.0\n */\nconst hasProperty = /*#__PURE__*/dual(2, (self, property) => isObject(self) && property in self);\n\n/**\n * Tests if a value is an `object` with a property `_tag` that matches the given tag.\n *\n * @param input - The value to test.\n * @param tag - The tag to test for.\n *\n * @example\n * import { isTagged } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTagged(1, \"a\"), false)\n * assert.deepStrictEqual(isTagged(null, \"a\"), false)\n * assert.deepStrictEqual(isTagged({}, \"a\"), false)\n * assert.deepStrictEqual(isTagged({ a: \"a\" }, \"a\"), false)\n * assert.deepStrictEqual(isTagged({ _tag: \"a\" }, \"a\"), true)\n * assert.deepStrictEqual(isTagged(\"a\")({ _tag: \"a\" }), true)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isTagged = /*#__PURE__*/dual(2, (self, tag) => hasProperty(self, \"_tag\") && self[\"_tag\"] === tag);\n\n/**\n * A guard that succeeds when the input is `null` or `undefined`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isNullable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNullable(null), true)\n * assert.deepStrictEqual(isNullable(undefined), true)\n *\n * assert.deepStrictEqual(isNullable({}), false)\n * assert.deepStrictEqual(isNullable([]), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNullable = input => input === null || input === undefined;\n\n/**\n * A guard that succeeds when the input is not `null` or `undefined`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isNotNullable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotNullable({}), true)\n * assert.deepStrictEqual(isNotNullable([]), true)\n *\n * assert.deepStrictEqual(isNotNullable(null), false)\n * assert.deepStrictEqual(isNotNullable(undefined), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNotNullable = input => input !== null && input !== undefined;\n\n/**\n * A guard that succeeds when the input is an `Error`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isError } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isError(new Error()), true)\n *\n * assert.deepStrictEqual(isError(null), false)\n * assert.deepStrictEqual(isError({}), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isError = input => input instanceof Error;\n\n/**\n * A guard that succeeds when the input is a `Uint8Array`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isUint8Array } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUint8Array(new Uint8Array()), true)\n *\n * assert.deepStrictEqual(isUint8Array(null), false)\n * assert.deepStrictEqual(isUint8Array({}), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isUint8Array = input => input instanceof Uint8Array;\n\n/**\n * A guard that succeeds when the input is a `Date`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isDate } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isDate(new Date()), true)\n *\n * assert.deepStrictEqual(isDate(null), false)\n * assert.deepStrictEqual(isDate({}), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isDate = input => input instanceof Date;\n\n/**\n * A guard that succeeds when the input is an `Iterable`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isIterable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isIterable([]), true)\n * assert.deepStrictEqual(isIterable(new Set()), true)\n *\n * assert.deepStrictEqual(isIterable(null), false)\n * assert.deepStrictEqual(isIterable({}), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isIterable = input => hasProperty(input, Symbol.iterator);\n\n/**\n * A guard that succeeds when the input is a record.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isRecord } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isRecord({}), true)\n * assert.deepStrictEqual(isRecord({ a: 1 }), true)\n *\n * assert.deepStrictEqual(isRecord([]), false)\n * assert.deepStrictEqual(isRecord([1, 2, 3]), false)\n * assert.deepStrictEqual(isRecord(null), false)\n * assert.deepStrictEqual(isRecord(undefined), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isRecord = input => isObject(input) && !Array.isArray(input);\n\n/**\n * A guard that succeeds when the input is a readonly record.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isReadonlyRecord } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isReadonlyRecord({}), true)\n * assert.deepStrictEqual(isReadonlyRecord({ a: 1 }), true)\n *\n * assert.deepStrictEqual(isReadonlyRecord([]), false)\n * assert.deepStrictEqual(isReadonlyRecord([1, 2, 3]), false)\n * assert.deepStrictEqual(isReadonlyRecord(null), false)\n * assert.deepStrictEqual(isReadonlyRecord(undefined), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isReadonlyRecord = isRecord;\n\n/**\n * @since 2.0.0\n */\nconst compose = /*#__PURE__*/dual(2, (ab, bc) => a => ab(a) && bc(a));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst product = (self, that) => ([a, b]) => self(a) && that(b);\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst all = collection => {\n  return as => {\n    let collectionIndex = 0;\n    for (const p of collection) {\n      if (collectionIndex >= as.length) {\n        break;\n      }\n      if (p(as[collectionIndex]) === false) {\n        return false;\n      }\n      collectionIndex++;\n    }\n    return true;\n  };\n};\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst productMany = (self, collection) => {\n  const rest = all(collection);\n  return ([head, ...tail]) => self(head) === false ? false : rest(tail);\n};\n\n/**\n * Similar to `Promise.all` but operates on `Predicate`s.\n *\n * ```\n * [Predicate<A>, Predicate<B>, ...] -> Predicate<[A, B, ...]>\n * ```\n *\n * @since 2.0.0\n */\nconst tuple = (...elements) => all(elements);\n\n/**\n * @since 2.0.0\n */\nconst struct = fields => {\n  const keys = Object.keys(fields);\n  return a => {\n    for (const key of keys) {\n      if (!fields[key](a[key])) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\n\n/**\n * Negates the result of a given predicate.\n *\n * @param self - A predicate.\n *\n * @example\n * import * as P from \"effect/Predicate\"\n * import * as N from \"effect/Number\"\n *\n * const isPositive = P.not(N.lessThan(0))\n *\n * assert.deepStrictEqual(isPositive(-1), false)\n * assert.deepStrictEqual(isPositive(0), true)\n * assert.deepStrictEqual(isPositive(1), true)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst not = self => a => !self(a);\n\n/**\n * Combines two predicates into a new predicate that returns `true` if at least one of the predicates returns `true`.\n *\n * @param self - A predicate.\n * @param that - A predicate.\n *\n * @example\n * import * as P from \"effect/Predicate\"\n * import * as N from \"effect/Number\"\n *\n * const nonZero = P.or(N.lessThan(0), N.greaterThan(0))\n *\n * assert.deepStrictEqual(nonZero(-1), true)\n * assert.deepStrictEqual(nonZero(0), false)\n * assert.deepStrictEqual(nonZero(1), true)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst or = /*#__PURE__*/dual(2, (self, that) => a => self(a) || that(a));\n\n/**\n * Combines two predicates into a new predicate that returns `true` if both of the predicates returns `true`.\n *\n * @param self - A predicate.\n * @param that - A predicate.\n *\n * @example\n * import * as P from \"effect/Predicate\"\n *\n * const minLength = (n: number) => (s: string) => s.length >= n\n * const maxLength = (n: number) => (s: string) => s.length <= n\n *\n * const length = (n: number) => P.and(minLength(n), maxLength(n))\n *\n * assert.deepStrictEqual(length(2)(\"aa\"), true)\n * assert.deepStrictEqual(length(2)(\"a\"), false)\n * assert.deepStrictEqual(length(2)(\"aaa\"), false)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst and = /*#__PURE__*/dual(2, (self, that) => a => self(a) && that(a));\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nconst xor = /*#__PURE__*/dual(2, (self, that) => a => self(a) !== that(a));\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nconst eqv = /*#__PURE__*/dual(2, (self, that) => a => self(a) === that(a));\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nconst implies = /*#__PURE__*/dual(2, (self, that) => a => self(a) ? that(a) : true);\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nconst nor = /*#__PURE__*/dual(2, (self, that) => a => !(self(a) || that(a)));\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nconst nand = /*#__PURE__*/dual(2, (self, that) => a => !(self(a) && that(a)));\n\n/**\n * @category elements\n * @since 2.0.0\n */\nconst every = collection => a => {\n  for (const p of collection) {\n    if (!p(a)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * @category elements\n * @since 2.0.0\n */\nconst some = collection => a => {\n  for (const p of collection) {\n    if (p(a)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport { all, and, compose, eqv, every, hasProperty, implies, isBigInt, isBoolean, isDate, isError, isFunction, isIterable, isNever, isNotNull, isNotNullable, isNotUndefined, isNull, isNullable, isNumber, isObject, isReadonlyRecord, isRecord, isString, isSymbol, isTagged, isUint8Array, isUndefined, isUnknown, mapInput, nand, nor, not, or, product, productMany, some, struct, tuple, xor };\n","import { identity } from '../../Function/dist/effect-Function.esm.js';\nimport { isNullable } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @category symbols\n * @since 2.0.0\n */\nconst GenKindTypeId = /*#__PURE__*/Symbol.for(\"effect/Gen/GenKind\");\n\n/**\n * @category symbols\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nclass GenKindImpl {\n  constructor(\n  /**\n   * @since 2.0.0\n   */\n  value) {\n    this.value = value;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  get _F() {\n    return identity;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  get _R() {\n    return _ => _;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  get _O() {\n    return _ => _;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  get _E() {\n    return _ => _;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  [GenKindTypeId] = GenKindTypeId;\n\n  /**\n   * @since 2.0.0\n   */\n  [Symbol.iterator]() {\n    return new SingleShotGen(this);\n  }\n}\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nclass SingleShotGen {\n  called = false;\n  constructor(self) {\n    this.self = self;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  next(a) {\n    return this.called ? {\n      value: a,\n      done: true\n    } : (this.called = true, {\n      value: this.self,\n      done: false\n    });\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  return(a) {\n    return {\n      value: a,\n      done: true\n    };\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  throw(e) {\n    throw e;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  [Symbol.iterator]() {\n    return new SingleShotGen(this.self);\n  }\n}\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nconst makeGenKind = kind => new GenKindImpl(kind);\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category adapters\n * @since 2.0.0\n */\nconst adapter = () =>\n// @ts-expect-error\nfunction () {\n  let x = arguments[0];\n  for (let i = 1; i < arguments.length; i++) {\n    x = arguments[i](x);\n  }\n  return new GenKindImpl(x);\n};\nconst defaultIncHi = 0x14057b7e;\nconst defaultIncLo = 0xf767814f;\nconst MUL_HI = 0x5851f42d >>> 0;\nconst MUL_LO = 0x4c957f2d >>> 0;\nconst BIT_53 = 9007199254740992.0;\nconst BIT_27 = 134217728.0;\n\n/**\n * @category model\n * @since 2.0.0\n */\n\n/**\n * @category model\n * @since 2.0.0\n */\n\n/**\n * PCG is a family of simple fast space-efficient statistically good algorithms\n * for random number generation. Unlike many general-purpose RNGs, they are also\n * hard to predict.\n *\n * @category model\n * @since 2.0.0\n */\nclass PCGRandom {\n  /**\n   * Creates an instance of PCGRandom.\n   *\n   * @param seed - The low 32 bits of the seed (0 is used for high 32 bits).\n   *\n   * @memberOf PCGRandom\n   */\n\n  /**\n   * Creates an instance of PCGRandom.\n   *\n   * @param seedHi - The high 32 bits of the seed.\n   * @param seedLo - The low 32 bits of the seed.\n   * @param inc - The low 32 bits of the incrementer (0 is used for high 32 bits).\n   *\n   * @memberOf PCGRandom\n   */\n\n  /**\n   * Creates an instance of PCGRandom.\n   *\n   * @param seedHi - The high 32 bits of the seed.\n   * @param seedLo - The low 32 bits of the seed.\n   * @param incHi - The high 32 bits of the incrementer.\n   * @param incLo - The low 32 bits of the incrementer.\n   *\n   * @memberOf PCGRandom\n   */\n\n  constructor(seedHi, seedLo, incHi, incLo) {\n    if (isNullable(seedLo) && isNullable(seedHi)) {\n      seedLo = Math.random() * 0xffffffff >>> 0;\n      seedHi = 0;\n    } else if (isNullable(seedLo)) {\n      seedLo = seedHi;\n      seedHi = 0;\n    }\n    if (isNullable(incLo) && isNullable(incHi)) {\n      incLo = this._state ? this._state[3] : defaultIncLo;\n      incHi = this._state ? this._state[2] : defaultIncHi;\n    } else if (isNullable(incLo)) {\n      incLo = incHi;\n      incHi = 0;\n    }\n    this._state = new Int32Array([0, 0, incHi >>> 0, ((incLo || 0) | 1) >>> 0]);\n    this._next();\n    add64(this._state, this._state[0], this._state[1], seedHi >>> 0, seedLo >>> 0);\n    this._next();\n    return this;\n  }\n\n  /**\n   * Returns a copy of the internal state of this random number generator as a\n   * JavaScript Array.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  getState() {\n    return [this._state[0], this._state[1], this._state[2], this._state[3]];\n  }\n\n  /**\n   * Restore state previously retrieved using `getState()`.\n   *\n   * @since 2.0.0\n   */\n  setState(state) {\n    this._state[0] = state[0];\n    this._state[1] = state[1];\n    this._state[2] = state[2];\n    this._state[3] = state[3] | 1;\n  }\n\n  /**\n   * Get a uniformly distributed 32 bit integer between [0, max).\n   *\n   * @category getter\n   * @since 2.0.0\n   */\n  integer(max) {\n    if (!max) {\n      return this._next();\n    }\n    max = max >>> 0;\n    if ((max & max - 1) === 0) {\n      return this._next() & max - 1; // fast path for power of 2\n    }\n\n    let num = 0;\n    const skew = (-max >>> 0) % max >>> 0;\n    for (num = this._next(); num < skew; num = this._next()) {\n      // this loop will rarely execute more than twice,\n      // and is intentionally empty\n    }\n    return num % max;\n  }\n\n  /**\n   * Get a uniformly distributed IEEE-754 double between 0.0 and 1.0, with\n   * 53 bits of precision (every bit of the mantissa is randomized).\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  number() {\n    const hi = (this._next() & 0x03ffffff) * 1.0;\n    const lo = (this._next() & 0x07ffffff) * 1.0;\n    return (hi * BIT_27 + lo) / BIT_53;\n  }\n\n  /** @internal */\n  _next() {\n    // save current state (what we'll use for this number)\n    const oldHi = this._state[0] >>> 0;\n    const oldLo = this._state[1] >>> 0;\n\n    // churn LCG.\n    mul64(this._state, oldHi, oldLo, MUL_HI, MUL_LO);\n    add64(this._state, this._state[0], this._state[1], this._state[2], this._state[3]);\n\n    // get least sig. 32 bits of ((oldstate >> 18) ^ oldstate) >> 27\n    let xsHi = oldHi >>> 18;\n    let xsLo = (oldLo >>> 18 | oldHi << 14) >>> 0;\n    xsHi = (xsHi ^ oldHi) >>> 0;\n    xsLo = (xsLo ^ oldLo) >>> 0;\n    const xorshifted = (xsLo >>> 27 | xsHi << 5) >>> 0;\n    // rotate xorshifted right a random amount, based on the most sig. 5 bits\n    // bits of the old state.\n    const rot = oldHi >>> 27;\n    const rot2 = (-rot >>> 0 & 31) >>> 0;\n    return (xorshifted >>> rot | xorshifted << rot2) >>> 0;\n  }\n}\nfunction mul64(out, aHi, aLo, bHi, bLo) {\n  let c1 = (aLo >>> 16) * (bLo & 0xffff) >>> 0;\n  let c0 = (aLo & 0xffff) * (bLo >>> 16) >>> 0;\n  let lo = (aLo & 0xffff) * (bLo & 0xffff) >>> 0;\n  let hi = (aLo >>> 16) * (bLo >>> 16) + ((c0 >>> 16) + (c1 >>> 16)) >>> 0;\n  c0 = c0 << 16 >>> 0;\n  lo = lo + c0 >>> 0;\n  if (lo >>> 0 < c0 >>> 0) {\n    hi = hi + 1 >>> 0;\n  }\n  c1 = c1 << 16 >>> 0;\n  lo = lo + c1 >>> 0;\n  if (lo >>> 0 < c1 >>> 0) {\n    hi = hi + 1 >>> 0;\n  }\n  hi = hi + Math.imul(aLo, bHi) >>> 0;\n  hi = hi + Math.imul(aHi, bLo) >>> 0;\n  out[0] = hi;\n  out[1] = lo;\n}\n\n// add two 64 bit numbers (given in parts), and store the result in `out`.\nfunction add64(out, aHi, aLo, bHi, bLo) {\n  let hi = aHi + bHi >>> 0;\n  const lo = aLo + bLo >>> 0;\n  if (lo >>> 0 < aLo >>> 0) {\n    hi = hi + 1 | 0;\n  }\n  out[0] = hi;\n  out[1] = lo;\n}\n\nexport { GenKindImpl, GenKindTypeId, PCGRandom, SingleShotGen, adapter, makeGenKind };\n","import { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { PCGRandom } from '../../Utils/dist/effect-Utils.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/** @internal */\nconst randomHashCache = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Hash/randomHashCache\"), () => new WeakMap());\n/** @internal */\nconst pcgr = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Hash/pcgr\"), () => new PCGRandom());\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst symbol = /*#__PURE__*/Symbol.for(\"effect/Hash\");\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst hash = self => {\n  switch (typeof self) {\n    case \"number\":\n      {\n        return number(self);\n      }\n    case \"bigint\":\n      {\n        return string(self.toString(10));\n      }\n    case \"boolean\":\n      {\n        return string(String(self));\n      }\n    case \"symbol\":\n      {\n        return string(String(self));\n      }\n    case \"string\":\n      {\n        return string(self);\n      }\n    case \"undefined\":\n      {\n        return string(\"undefined\");\n      }\n    case \"function\":\n    case \"object\":\n      {\n        if (self === null) {\n          return string(\"null\");\n        }\n        if (isHash(self)) {\n          return self[symbol]();\n        } else {\n          return random(self);\n        }\n      }\n    default:\n      {\n        throw new Error(\"Bug in Equal.hash\");\n      }\n  }\n};\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst random = self => {\n  if (!randomHashCache.has(self)) {\n    randomHashCache.set(self, number(pcgr.integer(Number.MAX_SAFE_INTEGER)));\n  }\n  return randomHashCache.get(self);\n};\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst combine = b => self => self * 53 ^ b;\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst optimize = n => n & 0xbfffffff | n >>> 1 & 0x40000000;\n\n/**\n * @since 2.0.0\n * @category guards\n */\nconst isHash = u => hasProperty(u, symbol);\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst number = n => {\n  if (n !== n || n === Infinity) {\n    return 0;\n  }\n  let h = n | 0;\n  if (h !== n) {\n    h ^= n * 0xffffffff;\n  }\n  while (n > 0xffffffff) {\n    h ^= n /= 0xffffffff;\n  }\n  return optimize(n);\n};\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst string = str => {\n  let h = 5381,\n    i = str.length;\n  while (i) {\n    h = h * 33 ^ str.charCodeAt(--i);\n  }\n  return optimize(h);\n};\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst structureKeys = (o, keys) => {\n  let h = 12289;\n  for (let i = 0; i < keys.length; i++) {\n    h ^= pipe(string(keys[i]), combine(hash(o[keys[i]])));\n  }\n  return optimize(h);\n};\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst structure = o => structureKeys(o, Object.keys(o));\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nconst array = arr => {\n  let h = 6151;\n  for (let i = 0; i < arr.length; i++) {\n    h = pipe(h, combine(hash(arr[i])));\n  }\n  return optimize(h);\n};\n\nexport { array, combine, hash, isHash, number, optimize, random, string, structure, structureKeys, symbol };\n","import { hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst symbol = /*#__PURE__*/Symbol.for(\"effect/Equal\");\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category equality\n */\n\nfunction equals() {\n  if (arguments.length === 1) {\n    return self => compareBoth(self, arguments[0]);\n  }\n  return compareBoth(arguments[0], arguments[1]);\n}\nfunction compareBoth(self, that) {\n  if (self === that) {\n    return true;\n  }\n  const selfType = typeof self;\n  if (selfType !== typeof that) {\n    return false;\n  }\n  if ((selfType === \"object\" || selfType === \"function\") && self !== null && that !== null) {\n    if (isEqual(self) && isEqual(that)) {\n      return hash(self) === hash(that) && self[symbol](that);\n    }\n  }\n  return false;\n}\n\n/**\n * @since 2.0.0\n * @category guards\n */\nconst isEqual = u => hasProperty(u, symbol);\n\n/**\n * @since 2.0.0\n * @category instances\n */\nconst equivalence = () => (self, that) => equals(self, that);\n\nexport { equals, equivalence, isEqual, symbol };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\n\n/**\n * This module provides an implementation of the `Equivalence` type class, which defines a binary relation\n * that is reflexive, symmetric, and transitive. In other words, it defines a notion of equivalence between values of a certain type.\n * These properties are also known in mathematics as an \"equivalence relation\".\n *\n * @since 2.0.0\n */\n\n/**\n * @category type class\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nconst make = isEquivalent => (self, that) => self === that || isEquivalent(self, that);\nconst isStrictEquivalent = (x, y) => x === y;\n\n/**\n * Return an `Equivalence` that uses strict equality (===) to compare values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst strict = () => isStrictEquivalent;\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst string = /*#__PURE__*/strict();\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst number = /*#__PURE__*/strict();\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst boolean = /*#__PURE__*/strict();\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst bigint = /*#__PURE__*/strict();\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst symbol = /*#__PURE__*/strict();\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst combine = /*#__PURE__*/dual(2, (self, that) => make((x, y) => self(x, y) && that(x, y)));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst combineMany = /*#__PURE__*/dual(2, (self, collection) => make((x, y) => {\n  if (!self(x, y)) {\n    return false;\n  }\n  for (const equivalence of collection) {\n    if (!equivalence(x, y)) {\n      return false;\n    }\n  }\n  return true;\n}));\nconst isAlwaysEquivalent = (_x, _y) => true;\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst combineAll = collection => combineMany(isAlwaysEquivalent, collection);\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nconst mapInput = /*#__PURE__*/dual(2, (self, f) => make((x, y) => self(f(x), f(y))));\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Date = /*#__PURE__*/mapInput(number, date => date.getTime());\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst product = /*#__PURE__*/dual(2, (self, that) => make(([xa, xb], [ya, yb]) => self(xa, ya) && that(xb, yb)));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst all = collection => {\n  return make((x, y) => {\n    const len = Math.min(x.length, y.length);\n    let collectionLength = 0;\n    for (const equivalence of collection) {\n      if (collectionLength >= len) {\n        break;\n      }\n      if (!equivalence(x[collectionLength], y[collectionLength])) {\n        return false;\n      }\n      collectionLength++;\n    }\n    return true;\n  });\n};\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst productMany = (self, collection) => {\n  const equivalence = all(collection);\n  return make((x, y) => !self(x[0], y[0]) ? false : equivalence(x.slice(1), y.slice(1)));\n};\n\n/**\n * Similar to `Promise.all` but operates on `Equivalence`s.\n *\n * ```\n * [Equivalence<A>, Equivalence<B>, ...] -> Equivalence<[A, B, ...]>\n * ```\n *\n * Given a tuple of `Equivalence`s returns a new `Equivalence` that compares values of a tuple\n * by applying each `Equivalence` to the corresponding element of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nconst tuple = (...elements) => all(elements);\n\n/**\n * Creates a new `Equivalence` for an array of values based on a given `Equivalence` for the elements of the array.\n *\n * @category combinators\n * @since 2.0.0\n */\nconst array = item => make((self, that) => {\n  if (self.length !== that.length) {\n    return false;\n  }\n  for (let i = 0; i < self.length; i++) {\n    const isEq = item(self[i], that[i]);\n    if (!isEq) {\n      return false;\n    }\n  }\n  return true;\n});\n\n/**\n * Given a struct of `Equivalence`s returns a new `Equivalence` that compares values of a struct\n * by applying each `Equivalence` to the corresponding property of the struct.\n *\n * @category combinators\n * @since 2.0.0\n */\nconst struct = fields => {\n  const keys = Object.keys(fields);\n  return make((self, that) => {\n    for (const key of keys) {\n      if (!fields[key](self[key], that[key])) {\n        return false;\n      }\n    }\n    return true;\n  });\n};\n\nexport { Date, all, array, bigint, boolean, combine, combineAll, combineMany, make, mapInput, number, product, productMany, strict, string, struct, symbol, tuple };\n","import { hasProperty, isFunction } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst NodeInspectSymbol = /*#__PURE__*/Symbol.for(\"nodejs.util.inspect.custom\");\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\nconst toJSON = x => {\n  if (hasProperty(x, \"toJSON\") && isFunction(x[\"toJSON\"]) && x[\"toJSON\"].length === 0) {\n    return x.toJSON();\n  } else if (Array.isArray(x)) {\n    return x.map(toJSON);\n  }\n  return x;\n};\n\n/**\n * @since 2.0.0\n */\nconst toString = x => JSON.stringify(x, null, 2);\n\nexport { NodeInspectSymbol, toJSON, toString };\n","import { equivalence } from '../../Equal/dist/effect-Equal.esm.js';\nimport { make } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual, constNull, constUndefined, identity } from '../../Function/dist/effect-Function.esm.js';\nimport { getRight as getRight$1, getLeft as getLeft$1, right, left, isLeft } from '../../internal/Either.esm.js';\nimport { none as none$1, some as some$1, isOption as isOption$1, isNone as isNone$1, isSome as isSome$1 } from '../../internal/Option.esm.js';\nimport { make as make$1 } from '../../Order/dist/effect-Order.esm.js';\nimport { adapter as adapter$1 } from '../../Utils/dist/effect-Utils.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category symbols\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Option\");\n\n/**\n * @category symbols\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * Creates a new `Option` that represents the absence of a value.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst none = () => none$1;\n\n/**\n * Creates a new `Option` that wraps the given value.\n *\n * @param value - The value to wrap.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst some = some$1;\n\n/**\n * Tests if a value is a `Option`.\n *\n * @param input - The value to check.\n *\n * @example\n * import { some, none, isOption } from 'effect/Option'\n *\n * assert.deepStrictEqual(isOption(some(1)), true)\n * assert.deepStrictEqual(isOption(none()), true)\n * assert.deepStrictEqual(isOption({}), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isOption = isOption$1;\n\n/**\n * Determine if a `Option` is a `None`.\n *\n * @param self - The `Option` to check.\n *\n * @example\n * import { some, none, isNone } from 'effect/Option'\n *\n * assert.deepStrictEqual(isNone(some(1)), false)\n * assert.deepStrictEqual(isNone(none()), true)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNone = isNone$1;\n\n/**\n * Determine if a `Option` is a `Some`.\n *\n * @param self - The `Option` to check.\n *\n * @example\n * import { some, none, isSome } from 'effect/Option'\n *\n * assert.deepStrictEqual(isSome(some(1)), true)\n * assert.deepStrictEqual(isSome(none()), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isSome = isSome$1;\n\n/**\n * Matches the given `Option` and returns either the provided `onNone` value or the result of the provided `onSome`\n * function when passed the `Option`'s value.\n *\n * @param self - The `Option` to match\n * @param onNone - The value to be returned if the `Option` is `None`\n * @param onSome - The function to be called if the `Option` is `Some`, it will be passed the `Option`'s value and its result will be returned\n *\n * @example\n * import { some, none, match } from 'effect/Option'\n * import { pipe } from \"effect/Function\"\n *\n * assert.deepStrictEqual(\n *   pipe(some(1), match({ onNone: () => 'a none', onSome: (a) => `a some containing ${a}` })),\n *   'a some containing 1'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(none(), match({ onNone: () => 'a none', onSome: (a) => `a some containing ${a}` })),\n *   'a none'\n * )\n *\n * @category pattern matching\n * @since 2.0.0\n */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onNone,\n  onSome\n}) => isNone(self) ? onNone() : onSome(self.value));\n\n/**\n * Returns a type guard from a `Option` returning function.\n * This function ensures that a type guard definition is type-safe.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * const parsePositive = (n: number): O.Option<number> =>\n *   n > 0 ? O.some(n) : O.none()\n *\n * const isPositive = O.toRefinement(parsePositive)\n *\n * assert.deepStrictEqual(isPositive(1), true)\n * assert.deepStrictEqual(isPositive(-1), false)\n *\n * @category conversions\n * @since 2.0.0\n */\nconst toRefinement = f => a => isSome(f(a));\n\n/**\n * Converts an `Iterable` of values into an `Option`. Returns the first value of the `Iterable` wrapped in a `Some`\n * if the `Iterable` is not empty, otherwise returns `None`.\n *\n * @param collection - The `Iterable` to be converted to an `Option`.\n *\n * @example\n * import { fromIterable, some, none } from 'effect/Option'\n *\n * assert.deepStrictEqual(fromIterable([1, 2, 3]), some(1))\n * assert.deepStrictEqual(fromIterable([]), none())\n *\n * @category conversions\n * @since 2.0.0\n */\nconst fromIterable = collection => {\n  for (const a of collection) {\n    return some(a);\n  }\n  return none();\n};\n\n/**\n * Converts a `Either` to an `Option` discarding the error.\n *\n * Alias of {@link fromEither}.\n *\n * @example\n * import * as O from \"effect/Option\"\n * import * as E from \"effect/Either\"\n *\n * assert.deepStrictEqual(O.getRight(E.right('ok')), O.some('ok'))\n * assert.deepStrictEqual(O.getRight(E.left('err')), O.none())\n *\n * @category conversions\n * @since 2.0.0\n */\nconst getRight = getRight$1;\n\n/**\n * Converts a `Either` to an `Option` discarding the value.\n *\n * @example\n * import * as O from \"effect/Option\"\n * import * as E from \"effect/Either\"\n *\n * assert.deepStrictEqual(O.getLeft(E.right(\"ok\")), O.none())\n * assert.deepStrictEqual(O.getLeft(E.left(\"a\")), O.some(\"a\"))\n *\n * @category conversions\n * @since 2.0.0\n */\nconst getLeft = getLeft$1;\n\n/**\n * Returns the value of the `Option` if it is `Some`, otherwise returns `onNone`\n *\n * @param self - The `Option` to get the value of.\n * @param onNone - Function that returns the default value to return if the `Option` is `None`.\n *\n * @example\n * import { some, none, getOrElse } from 'effect/Option'\n * import { pipe } from \"effect/Function\"\n *\n * assert.deepStrictEqual(pipe(some(1), getOrElse(() => 0)), 1)\n * assert.deepStrictEqual(pipe(none(), getOrElse(() => 0)), 0)\n *\n * @category getters\n * @since 2.0.0\n */\nconst getOrElse = /*#__PURE__*/dual(2, (self, onNone) => isNone(self) ? onNone() : self.value);\n\n/**\n * Returns the provided `Option` `that` if `self` is `None`, otherwise returns `self`.\n *\n * @param self - The first `Option` to be checked.\n * @param that - The `Option` to return if `self` is `None`.\n *\n * @example\n * import * as O from \"effect/Option\"\n * import { pipe } from \"effect/Function\"\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none(),\n *     O.orElse(() => O.none())\n *   ),\n *   O.none()\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.orElse(() => O.none())\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none(),\n *     O.orElse(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.orElse(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => isNone(self) ? that() : self);\n\n/**\n * Similar to `orElse`, but instead of returning a simple union, it returns an `Either` object,\n * which contains information about which of the two `Option`s has been chosen.\n *\n * This is useful when it's important to know whether the value was retrieved from the first `Option` or the second option.\n *\n * @param self - The first `Option` to be checked.\n * @param that - The second `Option` to be considered if the first `Option` is `None`.\n *\n * @category error handling\n * @since 2.0.0\n */\nconst orElseEither = /*#__PURE__*/dual(2, (self, that) => isNone(self) ? map(that(), right) : map(self, left));\n\n/**\n * Given an `Iterable` collection of `Option`s, returns the first `Some` found in the collection.\n *\n * @param collection - An iterable collection of `Option` to be searched.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * assert.deepStrictEqual(O.firstSomeOf([O.none(), O.some(1), O.some(2)]), O.some(1))\n *\n * @category error handling\n * @since 2.0.0\n */\nconst firstSomeOf = collection => {\n  let out = none();\n  for (out of collection) {\n    if (isSome(out)) {\n      return out;\n    }\n  }\n  return out;\n};\n\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @param nullableValue - The nullable value to be converted to an `Option`.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * assert.deepStrictEqual(O.fromNullable(undefined), O.none())\n * assert.deepStrictEqual(O.fromNullable(null), O.none())\n * assert.deepStrictEqual(O.fromNullable(1), O.some(1))\n *\n * @category conversions\n * @since 2.0.0\n */\nconst fromNullable = nullableValue => nullableValue == null ? none() : some(nullableValue);\n\n/**\n * This API is useful for lifting a function that returns `null` or `undefined` into the `Option` context.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * const parse = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const parseOption = O.liftNullable(parse)\n *\n * assert.deepStrictEqual(parseOption('1'), O.some(1))\n * assert.deepStrictEqual(parseOption('not a number'), O.none())\n *\n * @category conversions\n * @since 2.0.0\n */\nconst liftNullable = f => (...a) => fromNullable(f(...a));\n\n/**\n * Returns the value of the `Option` if it is a `Some`, otherwise returns `null`.\n *\n * @param self - The `Option` to extract the value from.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * assert.deepStrictEqual(O.getOrNull(O.some(1)), 1)\n * assert.deepStrictEqual(O.getOrNull(O.none()), null)\n *\n * @category getters\n * @since 2.0.0\n */\nconst getOrNull = /*#__PURE__*/getOrElse(constNull);\n\n/**\n * Returns the value of the `Option` if it is a `Some`, otherwise returns `undefined`.\n *\n * @param self - The `Option` to extract the value from.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * assert.deepStrictEqual(O.getOrUndefined(O.some(1)), 1)\n * assert.deepStrictEqual(O.getOrUndefined(O.none()), undefined)\n *\n * @category getters\n * @since 2.0.0\n */\nconst getOrUndefined = /*#__PURE__*/getOrElse(constUndefined);\n\n/**\n * A utility function that lifts a function that throws exceptions into a function that returns an `Option`.\n *\n * This function is useful for any function that might throw an exception, allowing the developer to handle\n * the exception in a more functional way.\n *\n * @param f - the function that can throw exceptions.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * const parse = O.liftThrowable(JSON.parse)\n *\n * assert.deepStrictEqual(parse(\"1\"), O.some(1))\n * assert.deepStrictEqual(parse(\"\"), O.none())\n *\n * @category conversions\n * @since 2.0.0\n */\nconst liftThrowable = f => (...a) => {\n  try {\n    return some(f(...a));\n  } catch (e) {\n    return none();\n  }\n};\n\n/**\n * Extracts the value of an `Option` or throws if the `Option` is `None`.\n *\n * If a default error is sufficient for your use case and you don't need to configure the thrown error, see {@link getOrThrow}.\n *\n * @param self - The `Option` to extract the value from.\n * @param onNone - A function that will be called if the `Option` is `None`. It returns the error to be thrown.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * assert.deepStrictEqual(\n *   O.getOrThrowWith(O.some(1), () => new Error('Unexpected None')),\n *   1\n * )\n * assert.throws(() => O.getOrThrowWith(O.none(), () => new Error('Unexpected None')))\n *\n * @category conversions\n * @since 2.0.0\n */\nconst getOrThrowWith = /*#__PURE__*/dual(2, (self, onNone) => {\n  if (isSome(self)) {\n    return self.value;\n  }\n  throw onNone();\n});\n\n/**\n * Extracts the value of an `Option` or throws if the `Option` is `None`.\n *\n * The thrown error is a default error. To configure the error thrown, see  {@link getOrThrowWith}.\n *\n * @param self - The `Option` to extract the value from.\n * @throws `Error(\"getOrThrow called on a None\")`\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * assert.deepStrictEqual(O.getOrThrow(O.some(1)), 1)\n * assert.throws(() => O.getOrThrow(O.none()))\n *\n * @category conversions\n * @since 2.0.0\n */\nconst getOrThrow = /*#__PURE__*/getOrThrowWith(() => new Error(\"getOrThrow called on a None\"));\n\n/**\n * Maps the `Some` side of an `Option` value to a new `Option` value.\n *\n * @param self - An `Option` to map\n * @param f - The function to map over the value of the `Option`\n *\n * @category transforming\n * @since 2.0.0\n */\nconst map = /*#__PURE__*/dual(2, (self, f) => isNone(self) ? none() : some(f(self.value)));\n\n/**\n * Maps the `Some` value of this `Option` to the specified constant value.\n *\n * @category transforming\n * @since 2.0.0\n */\nconst as = /*#__PURE__*/dual(2, (self, b) => map(self, () => b));\n\n/**\n * Maps the `Some` value of this `Option` to the `void` constant value.\n *\n * This is useful when the value of the `Option` is not needed, but the presence or absence of the value is important.\n *\n * @category transforming\n * @since 2.0.0\n */\nconst asUnit = /*#__PURE__*/as(undefined);\n\n/**\n * @since 2.0.0\n */\nconst unit = /*#__PURE__*/some(undefined);\n\n/**\n * Applies a function to the value of an `Option` and flattens the result, if the input is `Some`.\n *\n * @category transforming\n * @since 2.0.0\n */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => isNone(self) ? none() : f(self.value));\n\n/**\n * This is `flatMap` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, flatMapNullable } from 'effect/Option'\n * import { pipe } from \"effect/Function\"\n *\n * interface Employee {\n *   company?: {\n *     address?: {\n *       street?: {\n *         name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     some(employee1),\n *     flatMapNullable(employee => employee.company?.address?.street?.name),\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     some(employee2),\n *     flatMapNullable(employee => employee.company?.address?.street?.name),\n *   ),\n *   none()\n * )\n *\n * @category transforming\n * @since 2.0.0\n */\nconst flatMapNullable = /*#__PURE__*/dual(2, (self, f) => isNone(self) ? none() : fromNullable(f(self.value)));\n\n/**\n * @category transforming\n * @since 2.0.0\n */\nconst flatten = /*#__PURE__*/flatMap(identity);\n\n/**\n * @category transforming\n * @since 2.0.0\n */\nconst zipRight = /*#__PURE__*/dual(2, (self, that) => flatMap(self, () => that));\n\n/**\n * @category transforming\n * @since 2.0.0\n */\nconst composeK = /*#__PURE__*/dual(2, (afb, bfc) => a => flatMap(afb(a), bfc));\n\n/**\n * Sequences the specified `that` `Option` but ignores its value.\n *\n * It is useful when we want to chain multiple operations, but only care about the result of `self`.\n *\n * @param that - The `Option` that will be ignored in the chain and discarded\n * @param self - The `Option` we care about\n *\n * @category transforming\n * @since 2.0.0\n */\nconst zipLeft = /*#__PURE__*/dual(2, (self, that) => tap(self, () => that));\n\n/**\n * Applies the provided function `f` to the value of the `Option` if it is `Some` and returns the original `Option`\n * unless `f` returns `None`, in which case it returns `None`.\n *\n * This function is useful for performing additional computations on the value of the input `Option` without affecting its value.\n *\n * @param f - Function to apply to the value of the `Option` if it is `Some`\n * @param self - The `Option` to apply the function to\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * const getInteger = (n: number) => Number.isInteger(n) ? O.some(n) : O.none()\n *\n * assert.deepStrictEqual(O.tap(O.none(), getInteger), O.none())\n * assert.deepStrictEqual(O.tap(O.some(1), getInteger), O.some(1))\n * assert.deepStrictEqual(O.tap(O.some(1.14), getInteger), O.none())\n *\n * @category transforming\n * @since 2.0.0\n */\nconst tap = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => map(f(a), () => a)));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst product = (self, that) => isSome(self) && isSome(that) ? some([self.value, that.value]) : none();\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst productMany = (self, collection) => {\n  if (isNone(self)) {\n    return none();\n  }\n  const out = [self.value];\n  for (const o of collection) {\n    if (isNone(o)) {\n      return none();\n    }\n    out.push(o.value);\n  }\n  return some(out);\n};\n\n/**\n * Takes a structure of `Option`s and returns an `Option` of values with the same structure.\n *\n * - If a tuple is supplied, then the returned `Option` will contain a tuple with the same length.\n * - If a struct is supplied, then the returned `Option` will contain a struct with the same keys.\n * - If an iterable is supplied, then the returned `Option` will contain an array.\n *\n * @param fields - the struct of `Option`s to be sequenced.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * assert.deepStrictEqual(O.all([O.some(1), O.some(2)]), O.some([1, 2]))\n * assert.deepStrictEqual(O.all({ a: O.some(1), b: O.some(\"hello\") }), O.some({ a: 1, b: \"hello\" }))\n * assert.deepStrictEqual(O.all({ a: O.some(1), b: O.none() }), O.none())\n *\n * @category combining\n * @since 2.0.0\n */\n// @ts-expect-error\nconst all = input => {\n  if (Symbol.iterator in input) {\n    const out = [];\n    for (const o of input) {\n      if (isNone(o)) {\n        return none();\n      }\n      out.push(o.value);\n    }\n    return some(out);\n  }\n  const out = {};\n  for (const key of Object.keys(input)) {\n    const o = input[key];\n    if (isNone(o)) {\n      return none();\n    }\n    out[key] = o.value;\n  }\n  return some(out);\n};\n\n/**\n * Zips two `Option` values together using a provided function, returning a new `Option` of the result.\n *\n * @param self - The left-hand side of the zip operation\n * @param that - The right-hand side of the zip operation\n * @param f - The function used to combine the values of the two `Option`s\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * type Complex = [number, number]\n *\n * const complex = (real: number, imaginary: number): Complex => [real, imaginary]\n *\n * assert.deepStrictEqual(O.zipWith(O.none(), O.none(), complex), O.none())\n * assert.deepStrictEqual(O.zipWith(O.some(1), O.none(), complex), O.none())\n * assert.deepStrictEqual(O.zipWith(O.none(), O.some(1), complex), O.none())\n * assert.deepStrictEqual(O.zipWith(O.some(1), O.some(2), complex), O.some([1, 2]))\n *\n * assert.deepStrictEqual(O.zipWith(O.some(1), complex)(O.some(2)), O.some([2, 1]))\n *\n * @category combining\n * @since 2.0.0\n */\nconst zipWith = /*#__PURE__*/dual(3, (self, that, f) => map(product(self, that), ([a, b]) => f(a, b)));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst ap = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (f, a) => f(a)));\n\n/**\n * Reduces an `Iterable` of `Option<A>` to a single value of type `B`, elements that are `None` are ignored.\n *\n * @param self - The Iterable of `Option<A>` to be reduced.\n * @param b - The initial value of the accumulator.\n * @param f - The reducing function that takes the current accumulator value and the unwrapped value of an `Option<A>`.\n *\n * @example\n * import { some, none, reduceCompact } from 'effect/Option'\n * import { pipe } from \"effect/Function\"\n *\n * const iterable = [some(1), none(), some(2), none()]\n * assert.deepStrictEqual(pipe(iterable, reduceCompact(0, (b, a) => b + a)), 3)\n *\n * @category folding\n * @since 2.0.0\n */\nconst reduceCompact = /*#__PURE__*/dual(3, (self, b, f) => {\n  let out = b;\n  for (const oa of self) {\n    if (isSome(oa)) {\n      out = f(out, oa.value);\n    }\n  }\n  return out;\n});\n\n/**\n * Transforms an `Option` into an `Array`.\n * If the input is `None`, an empty array is returned.\n * If the input is `Some`, the value is wrapped in an array.\n *\n * @param self - The `Option` to convert to an array.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * assert.deepStrictEqual(O.toArray(O.some(1)), [1])\n * assert.deepStrictEqual(O.toArray(O.none()), [])\n *\n * @category conversions\n * @since 2.0.0\n */\nconst toArray = self => isNone(self) ? [] : [self.value];\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nconst partitionMap = /*#__PURE__*/dual(2, (self, f) => {\n  if (isNone(self)) {\n    return [none(), none()];\n  }\n  const e = f(self.value);\n  return isLeft(e) ? [some(e.left), none()] : [none(), some(e.right)];\n});\n\n/**\n * Maps over the value of an `Option` and filters out `None`s.\n *\n * Useful when in addition to filtering you also want to change the type of the `Option`.\n *\n * @param self - The `Option` to map over.\n * @param f - A function to apply to the value of the `Option`.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * const evenNumber = (n: number) => n % 2 === 0 ? O.some(n) : O.none()\n *\n * assert.deepStrictEqual(O.filterMap(O.none(), evenNumber), O.none())\n * assert.deepStrictEqual(O.filterMap(O.some(3), evenNumber), O.none())\n * assert.deepStrictEqual(O.filterMap(O.some(2), evenNumber), O.some(2))\n *\n * @category filtering\n * @since 2.0.0\n */\nconst filterMap = /*#__PURE__*/dual(2, (self, f) => isNone(self) ? none() : f(self.value));\n\n/**\n * Filters an `Option` using a predicate. If the predicate is not satisfied or the `Option` is `None` returns `None`.\n *\n * If you need to change the type of the `Option` in addition to filtering, see `filterMap`.\n *\n * @param predicate - A predicate function to apply to the `Option` value.\n * @param fb - The `Option` to filter.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * // predicate\n * const isEven = (n: number) => n % 2 === 0\n *\n * assert.deepStrictEqual(O.filter(O.none(), isEven), O.none())\n * assert.deepStrictEqual(O.filter(O.some(3), isEven), O.none())\n * assert.deepStrictEqual(O.filter(O.some(2), isEven), O.some(2))\n *\n * // refinement\n * const isNumber = (v: unknown): v is number => typeof v === \"number\"\n *\n * assert.deepStrictEqual(O.filter(O.none(), isNumber), O.none())\n * assert.deepStrictEqual(O.filter(O.some('hello'), isNumber), O.none())\n * assert.deepStrictEqual(O.filter(O.some(2), isNumber), O.some(2))\n *\n * @category filtering\n * @since 2.0.0\n */\nconst filter = /*#__PURE__*/dual(2, (self, predicate) => filterMap(self, b => predicate(b) ? some$1(b) : none$1));\n\n/**\n * @example\n * import { none, some, getEquivalence } from 'effect/Option'\n * import * as N from 'effect/Number'\n *\n * const isEquivalent = getEquivalence(N.Equivalence)\n * assert.deepStrictEqual(isEquivalent(none(), none()), true)\n * assert.deepStrictEqual(isEquivalent(none(), some(1)), false)\n * assert.deepStrictEqual(isEquivalent(some(1), none()), false)\n * assert.deepStrictEqual(isEquivalent(some(1), some(2)), false)\n * assert.deepStrictEqual(isEquivalent(some(1), some(1)), true)\n *\n * @category equivalence\n * @since 2.0.0\n */\nconst getEquivalence = isEquivalent => make((x, y) => x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : isEquivalent(x.value, y.value)));\n\n/**\n * The `Order` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Order` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n * @example\n * import { none, some, getOrder } from 'effect/Option'\n * import * as N from 'effect/Number'\n * import { pipe } from \"effect/Function\"\n *\n * const O = getOrder(N.Order)\n * assert.deepStrictEqual(O(none(), none()), 0)\n * assert.deepStrictEqual(O(none(), some(1)), -1)\n * assert.deepStrictEqual(O(some(1), none()), 1)\n * assert.deepStrictEqual(O(some(1), some(2)), -1)\n * assert.deepStrictEqual(O(some(1), some(1)), 0)\n *\n * @category sorting\n * @since 2.0.0\n */\nconst getOrder = O => make$1((self, that) => isSome(self) ? isSome(that) ? O(self.value, that.value) : 1 : -1);\n\n/**\n * Lifts a binary function into `Option`.\n *\n * @param f - The function to lift.\n *\n * @category lifting\n * @since 2.0.0\n */\nconst lift2 = f => dual(2, (self, that) => zipWith(self, that, f));\n\n/**\n * Transforms a `Predicate` function into a `Some` of the input value if the predicate returns `true` or `None`\n * if the predicate returns `false`.\n *\n * @param predicate - A `Predicate` function that takes in a value of type `A` and returns a boolean.\n *\n * @example\n * import * as O from \"effect/Option\"\n *\n * const getOption = O.liftPredicate((n: number) => n >= 0)\n *\n * assert.deepStrictEqual(getOption(-1), O.none())\n * assert.deepStrictEqual(getOption(1), O.some(1))\n *\n * @category lifting\n * @since 2.0.0\n */\nconst liftPredicate = predicate => b => predicate(b) ? some(b) : none();\n\n/**\n * Returns a function that checks if a `Option` contains a given value using a provided `isEquivalent` function.\n *\n * @param equivalent - An `Equivalence` instance to compare values of the `Option`.\n * @param self - The `Option` to apply the comparison to.\n * @param a - The value to compare against the `Option`.\n *\n * @example\n * import { some, none, containsWith } from 'effect/Option'\n * import { Equivalence } from 'effect/Number'\n * import { pipe } from \"effect/Function\"\n *\n * assert.deepStrictEqual(pipe(some(2), containsWith(Equivalence)(2)), true)\n * assert.deepStrictEqual(pipe(some(1), containsWith(Equivalence)(2)), false)\n * assert.deepStrictEqual(pipe(none(), containsWith(Equivalence)(2)), false)\n *\n * @category elements\n * @since 2.0.0\n */\nconst containsWith = isEquivalent => dual(2, (self, a) => isNone(self) ? false : isEquivalent(self.value, a));\nconst _equivalence = /*#__PURE__*/equivalence();\n\n/**\n * Returns a function that checks if an `Option` contains a given value using the default `Equivalence`.\n *\n * @category elements\n * @since 2.0.0\n */\nconst contains = /*#__PURE__*/containsWith(_equivalence);\n\n/**\n * Check if a value in an `Option` type meets a certain predicate.\n *\n * @param self - The `Option` to check.\n * @param predicate - The condition to check.\n *\n * @example\n * import { some, none, exists } from 'effect/Option'\n * import { pipe } from \"effect/Function\"\n *\n * const isEven = (n: number) => n % 2 === 0\n *\n * assert.deepStrictEqual(pipe(some(2), exists(isEven)), true)\n * assert.deepStrictEqual(pipe(some(1), exists(isEven)), false)\n * assert.deepStrictEqual(pipe(none(), exists(isEven)), false)\n *\n * @since 2.0.0\n */\nconst exists = /*#__PURE__*/dual(2, (self, predicate) => isNone(self) ? false : predicate(self.value));\n\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @category do notation\n * @since 2.0.0\n */\nconst bindTo = /*#__PURE__*/dual(2, (self, name) => map(self, a => ({\n  [name]: a\n})));\nconst let_ = /*#__PURE__*/dual(3, (self, name, f) => map(self, a => Object.assign({}, a, {\n  [name]: f(a)\n})));\n\n/**\n * @category do notation\n * @since 2.0.0\n */\nconst bind = /*#__PURE__*/dual(3, (self, name, f) => flatMap(self, a => map(f(a), b => Object.assign({}, a, {\n  [name]: b\n}))));\n\n/**\n * @category do notation\n * @since 2.0.0\n */\nconst Do = /*#__PURE__*/some({});\nconst adapter = /*#__PURE__*/adapter$1();\n\n/**\n * @category generators\n * @since 2.0.0\n */\nconst gen = f => {\n  const iterator = f(adapter);\n  let state = iterator.next();\n  if (state.done) {\n    return some(state.value);\n  } else {\n    let current = state.value.value;\n    if (isNone(current)) {\n      return current;\n    }\n    while (!state.done) {\n      state = iterator.next(current.value);\n      if (!state.done) {\n        current = state.value.value;\n        if (isNone(current)) {\n          return current;\n        }\n      }\n    }\n    return some(state.value);\n  }\n};\n\nexport { Do, TypeId, all, ap, as, asUnit, bind, bindTo, composeK, contains, containsWith, exists, filter, filterMap, firstSomeOf, flatMap, flatMapNullable, flatten, fromIterable, fromNullable, gen, getEquivalence, getLeft, getOrElse, getOrNull, getOrThrow, getOrThrowWith, getOrUndefined, getOrder, getRight, isNone, isOption, isSome, let_ as let, lift2, liftNullable, liftPredicate, liftThrowable, map, match, none, orElse, orElseEither, partitionMap, product, productMany, reduceCompact, some, tap, toArray, toRefinement, unit, zipLeft, zipRight, zipWith };\n","/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\nconst pipeArguments = (self, args) => {\n  switch (args.length) {\n    case 1:\n      return args[0](self);\n    case 2:\n      return args[1](args[0](self));\n    case 3:\n      return args[2](args[1](args[0](self)));\n    case 4:\n      return args[3](args[2](args[1](args[0](self))));\n    case 5:\n      return args[4](args[3](args[2](args[1](args[0](self)))));\n    case 6:\n      return args[5](args[4](args[3](args[2](args[1](args[0](self))))));\n    case 7:\n      return args[6](args[5](args[4](args[3](args[2](args[1](args[0](self)))))));\n    case 8:\n      return args[7](args[6](args[5](args[4](args[3](args[2](args[1](args[0](self))))))));\n    case 9:\n      return args[8](args[7](args[6](args[5](args[4](args[3](args[2](args[1](args[0](self)))))))));\n    default:\n      {\n        let ret = self;\n        for (let i = 0, len = args.length; i < len; i++) {\n          ret = args[i](ret);\n        }\n        return ret;\n      }\n  }\n};\n\nexport { pipeArguments };\n","import { symbol as symbol$1, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { symbol, array, structure } from '../Hash/dist/effect-Hash.esm.js';\n\n/** @internal */\nconst ArrayProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(Array.prototype), {\n  [symbol]() {\n    return array(this);\n  },\n  [symbol$1](that) {\n    if (Array.isArray(that) && this.length === that.length) {\n      return this.every((v, i) => equals(v, that[i]));\n    } else {\n      return false;\n    }\n  }\n});\n\n/** @internal */\nconst StructProto = {\n  [symbol]() {\n    return structure(this);\n  },\n  [symbol$1](that) {\n    const selfKeys = Object.keys(this);\n    const thatKeys = Object.keys(that);\n    if (selfKeys.length !== thatKeys.length) {\n      return false;\n    }\n    for (const key of selfKeys) {\n      if (!(key in that && equals(this[key], that[key]))) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\n/** @internal */\nconst Structural = /*#__PURE__*/function () {\n  function Structural(args) {\n    if (args) {\n      Object.assign(this, args);\n    }\n  }\n  Structural.prototype = StructProto;\n  return Structural;\n}();\n\n/** @internal */\nconst struct = as => Object.assign(Object.create(StructProto), as);\n\nexport { ArrayProto, StructProto, Structural, struct };\n","/** @internal */\n\n/** @internal */\nconst OP_ASYNC = \"Async\";\n\n/** @internal */\n\n/** @internal */\nconst OP_COMMIT = \"Commit\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FAILURE = \"Failure\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ON_FAILURE = \"OnFailure\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ON_SUCCESS = \"OnSuccess\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ON_SUCCESS_AND_FAILURE = \"OnSuccessAndFailure\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SUCCESS = \"Success\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SYNC = \"Sync\";\n\n/** @internal */\nconst OP_TAG = \"Tag\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst OP_UPDATE_RUNTIME_FLAGS = \"UpdateRuntimeFlags\";\n\n/** @internal */\n\n/** @internal */\nconst OP_WHILE = \"While\";\n\n/** @internal */\n\n/** @internal */\nconst OP_WITH_RUNTIME = \"WithRuntime\";\n\n/** @internal */\n\n/** @internal */\nconst OP_YIELD = \"Yield\";\n\n/** @internal */\n\n/** @internal */\nconst OP_REVERT_FLAGS = \"RevertFlags\";\n\nexport { OP_ASYNC, OP_COMMIT, OP_FAILURE, OP_ON_FAILURE, OP_ON_SUCCESS, OP_ON_SUCCESS_AND_FAILURE, OP_REVERT_FLAGS, OP_SUCCESS, OP_SYNC, OP_TAG, OP_UPDATE_RUNTIME_FLAGS, OP_WHILE, OP_WITH_RUNTIME, OP_YIELD };\n","import { symbol } from '../Equal/dist/effect-Equal.esm.js';\nimport { symbol as symbol$1, random } from '../Hash/dist/effect-Hash.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { Structural } from './Data.esm.js';\nimport { OP_COMMIT } from './opCodes/effect.esm.js';\nimport { moduleVersion } from './version.esm.js';\n\n/** @internal */\nconst EffectTypeId = /*#__PURE__*/Symbol.for(\"effect/Effect\");\n\n/** @internal */\nconst StreamTypeId = /*#__PURE__*/Symbol.for(\"effect/Stream\");\n\n/** @internal */\nconst SinkTypeId = /*#__PURE__*/Symbol.for(\"effect/Sink\");\n\n/** @internal */\nconst ChannelTypeId = /*#__PURE__*/Symbol.for(\"effect/Channel\");\n\n/** @internal */\nconst effectVariance = {\n  _R: _ => _,\n  _E: _ => _,\n  _A: _ => _,\n  _V: moduleVersion\n};\n\n/** @internal */\nconst sinkVariance = {\n  _R: _ => _,\n  _E: _ => _,\n  _In: _ => _,\n  _L: _ => _,\n  _Z: _ => _\n};\n\n/** @internal */\nconst channelVariance = {\n  _Env: _ => _,\n  _InErr: _ => _,\n  _InElem: _ => _,\n  _InDone: _ => _,\n  _OutErr: _ => _,\n  _OutElem: _ => _,\n  _OutDone: _ => _\n};\n\n/** @internal */\nconst EffectPrototype = {\n  [EffectTypeId]: effectVariance,\n  [StreamTypeId]: effectVariance,\n  [SinkTypeId]: sinkVariance,\n  [ChannelTypeId]: channelVariance,\n  [symbol](that) {\n    return this === that;\n  },\n  [symbol$1]() {\n    return random(this);\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst CommitPrototype = {\n  ...EffectPrototype,\n  _op: OP_COMMIT\n};\n\n/** @internal */\nconst StructuralCommitPrototype = {\n  ...CommitPrototype,\n  ...Structural.prototype\n};\n\n/** @internal */\nconst Base = /*#__PURE__*/function () {\n  function Base() {}\n  Base.prototype = CommitPrototype;\n  return Base;\n}();\n\n/** @internal */\nconst StructuralBase = /*#__PURE__*/function () {\n  function Base() {}\n  Base.prototype = StructuralCommitPrototype;\n  return Base;\n}();\n\nexport { Base, ChannelTypeId, CommitPrototype, EffectPrototype, EffectTypeId, SinkTypeId, StreamTypeId, StructuralBase, StructuralCommitPrototype, channelVariance, effectVariance, sinkVariance };\n","import { symbol, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { symbol as symbol$1, combine, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { NodeInspectSymbol, toString, toJSON } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { EffectPrototype } from './Effectable.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Option\");\nconst CommonProto = {\n  ...EffectPrototype,\n  [TypeId]: {\n    _A: _ => _\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  toString() {\n    return toString(this.toJSON());\n  }\n};\nconst SomeProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(CommonProto), {\n  _tag: \"Some\",\n  _op: \"Some\",\n  [symbol](that) {\n    return isOption(that) && isSome(that) && equals(that.value, this.value);\n  },\n  [symbol$1]() {\n    return combine(hash(this._tag))(hash(this.value));\n  },\n  toJSON() {\n    return {\n      _id: \"Option\",\n      _tag: this._tag,\n      value: toJSON(this.value)\n    };\n  }\n});\nconst NoneProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(CommonProto), {\n  _tag: \"None\",\n  _op: \"None\",\n  [symbol](that) {\n    return isOption(that) && isNone(that);\n  },\n  [symbol$1]() {\n    return combine(hash(this._tag));\n  },\n  toJSON() {\n    return {\n      _id: \"Option\",\n      _tag: this._tag\n    };\n  }\n});\n\n/** @internal */\nconst isOption = input => hasProperty(input, TypeId);\n\n/** @internal */\nconst isNone = fa => fa._tag === \"None\";\n\n/** @internal */\nconst isSome = fa => fa._tag === \"Some\";\n\n/** @internal */\nconst none = /*#__PURE__*/Object.create(NoneProto);\n\n/** @internal */\nconst some = value => {\n  const a = Object.create(SomeProto);\n  a.value = value;\n  return a;\n};\n\nexport { isNone, isOption, isSome, none, some };\n","import { symbol, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { dual } from '../Function/dist/effect-Function.esm.js';\nimport { symbol as symbol$1, combine, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { NodeInspectSymbol, toString, toJSON } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { none, some, isNone } from './Option.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { EffectPrototype } from './Effectable.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @internal\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Either\");\nconst CommonProto = {\n  ...EffectPrototype,\n  [TypeId]: {\n    _A: _ => _\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  toString() {\n    return toString(this.toJSON());\n  }\n};\nconst RightProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(CommonProto), {\n  _tag: \"Right\",\n  _op: \"Right\",\n  [symbol](that) {\n    return isEither(that) && isRight(that) && equals(that.right, this.right);\n  },\n  [symbol$1]() {\n    return combine(hash(this._tag))(hash(this.right));\n  },\n  toJSON() {\n    return {\n      _id: \"Either\",\n      _tag: this._tag,\n      right: toJSON(this.right)\n    };\n  }\n});\nconst LeftProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(CommonProto), {\n  _tag: \"Left\",\n  _op: \"Left\",\n  [symbol](that) {\n    return isEither(that) && isLeft(that) && equals(that.left, this.left);\n  },\n  [symbol$1]() {\n    return combine(hash(this._tag))(hash(this.left));\n  },\n  toJSON() {\n    return {\n      _id: \"Either\",\n      _tag: this._tag,\n      left: toJSON(this.left)\n    };\n  }\n});\n\n/** @internal */\nconst isEither = input => hasProperty(input, TypeId);\n\n/** @internal */\nconst isLeft = ma => ma._tag === \"Left\";\n\n/** @internal */\nconst isRight = ma => ma._tag === \"Right\";\n\n/** @internal */\nconst left = left => {\n  const a = Object.create(LeftProto);\n  a.left = left;\n  return a;\n};\n\n/** @internal */\nconst right = right => {\n  const a = Object.create(RightProto);\n  a.right = right;\n  return a;\n};\n\n/** @internal */\nconst getLeft = self => isRight(self) ? none : some(self.left);\n\n/** @internal */\nconst getRight = self => isLeft(self) ? none : some(self.right);\n\n/** @internal */\nconst fromOption = /*#__PURE__*/dual(2, (self, onNone) => isNone(self) ? left(onNone()) : right(self.value));\n\nexport { TypeId, fromOption, getLeft, getRight, isEither, isLeft, isRight, left, right };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @category type class\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nconst make = compare => (self, that) => self === that ? 0 : compare(self, that);\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst string = /*#__PURE__*/make((self, that) => self < that ? -1 : 1);\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst number = /*#__PURE__*/make((self, that) => self < that ? -1 : 1);\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst boolean = /*#__PURE__*/make((self, that) => self < that ? -1 : 1);\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst bigint = /*#__PURE__*/make((self, that) => self < that ? -1 : 1);\n\n/**\n * @since 2.0.0\n */\nconst reverse = O => make((self, that) => O(that, self));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst combine = /*#__PURE__*/dual(2, (self, that) => make((a1, a2) => {\n  const out = self(a1, a2);\n  if (out !== 0) {\n    return out;\n  }\n  return that(a1, a2);\n}));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst combineMany = /*#__PURE__*/dual(2, (self, collection) => make((a1, a2) => {\n  let out = self(a1, a2);\n  if (out !== 0) {\n    return out;\n  }\n  for (const O of collection) {\n    out = O(a1, a2);\n    if (out !== 0) {\n      return out;\n    }\n  }\n  return out;\n}));\n\n/**\n * @since 2.0.0\n */\nconst empty = () => make(() => 0);\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst combineAll = collection => combineMany(empty(), collection);\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nconst mapInput = /*#__PURE__*/dual(2, (self, f) => make((b1, b2) => self(f(b1), f(b2))));\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Date = /*#__PURE__*/mapInput(number, date => date.getTime());\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst product = /*#__PURE__*/dual(2, (self, that) => make(([xa, xb], [ya, yb]) => {\n  const o = self(xa, ya);\n  return o !== 0 ? o : that(xb, yb);\n}));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst all = collection => {\n  return make((x, y) => {\n    const len = Math.min(x.length, y.length);\n    let collectionLength = 0;\n    for (const O of collection) {\n      if (collectionLength >= len) {\n        break;\n      }\n      const o = O(x[collectionLength], y[collectionLength]);\n      if (o !== 0) {\n        return o;\n      }\n      collectionLength++;\n    }\n    return 0;\n  });\n};\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst productMany = /*#__PURE__*/dual(2, (self, collection) => {\n  const O = all(collection);\n  return make((x, y) => {\n    const o = self(x[0], y[0]);\n    return o !== 0 ? o : O(x.slice(1), y.slice(1));\n  });\n});\n\n/**\n * Similar to `Promise.all` but operates on `Order`s.\n *\n * ```\n * [Order<A>, Order<B>, ...] -> Order<[A, B, ...]>\n * ```\n *\n * This function creates and returns a new `Order` for a tuple of values based on the given `Order`s for each element in the tuple.\n * The returned `Order` compares two tuples of the same type by applying the corresponding `Order` to each element in the tuple.\n * It is useful when you need to compare two tuples of the same type and you have a specific way of comparing each element\n * of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nconst tuple = (...elements) => all(elements);\n\n/**\n * This function creates and returns a new `Order` for an array of values based on a given `Order` for the elements of the array.\n * The returned `Order` compares two arrays by applying the given `Order` to each element in the arrays.\n * If all elements are equal, the arrays are then compared based on their length.\n * It is useful when you need to compare two arrays of the same type and you have a specific way of comparing each element of the array.\n *\n * @category combinators\n * @since 2.0.0\n */\nconst array = O => make((self, that) => {\n  const aLen = self.length;\n  const bLen = that.length;\n  const len = Math.min(aLen, bLen);\n  for (let i = 0; i < len; i++) {\n    const o = O(self[i], that[i]);\n    if (o !== 0) {\n      return o;\n    }\n  }\n  return number(aLen, bLen);\n});\n\n/**\n * This function creates and returns a new `Order` for a struct of values based on the given `Order`s\n * for each property in the struct.\n *\n * @category combinators\n * @since 2.0.0\n */\nconst struct = fields => {\n  const keys = Object.keys(fields);\n  return make((self, that) => {\n    for (const key of keys) {\n      const o = fields[key](self[key], that[key]);\n      if (o !== 0) {\n        return o;\n      }\n    }\n    return 0;\n  });\n};\n\n/**\n * Test whether one value is _strictly less than_ another.\n *\n * @since 2.0.0\n */\nconst lessThan = O => dual(2, (self, that) => O(self, that) === -1);\n\n/**\n * Test whether one value is _strictly greater than_ another.\n *\n * @since 2.0.0\n */\nconst greaterThan = O => dual(2, (self, that) => O(self, that) === 1);\n\n/**\n * Test whether one value is _non-strictly less than_ another.\n *\n * @since 2.0.0\n */\nconst lessThanOrEqualTo = O => dual(2, (self, that) => O(self, that) !== 1);\n\n/**\n * Test whether one value is _non-strictly greater than_ another.\n *\n * @since 2.0.0\n */\nconst greaterThanOrEqualTo = O => dual(2, (self, that) => O(self, that) !== -1);\n\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen.\n *\n * @since 2.0.0\n */\nconst min = O => dual(2, (self, that) => self === that || O(self, that) < 1 ? self : that);\n\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen.\n *\n * @since 2.0.0\n */\nconst max = O => dual(2, (self, that) => self === that || O(self, that) > -1 ? self : that);\n\n/**\n * Clamp a value between a minimum and a maximum.\n *\n * @since 2.0.0\n */\nconst clamp = O => dual(3, (self, minimum, maximum) => min(O)(maximum, max(O)(minimum, self)));\n\n/**\n * Test whether a value is between a minimum and a maximum (inclusive).\n *\n * @since 2.0.0\n */\nconst between = O => dual(3, (self, minimum, maximum) => !lessThan(O)(self, minimum) && !greaterThan(O)(self, maximum));\n\nexport { Date, all, array, between, bigint, boolean, clamp, combine, combineAll, combineMany, empty, greaterThan, greaterThanOrEqualTo, lessThan, lessThanOrEqualTo, make, mapInput, max, min, number, product, productMany, reverse, string, struct, tuple };\n","import { make } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual, identity, constNull, constUndefined } from '../../Function/dist/effect-Function.esm.js';\nimport { TypeId as TypeId$1, right as right$1, left as left$1, fromOption as fromOption$1, isEither as isEither$1, isLeft as isLeft$1, isRight as isRight$1, getRight as getRight$1, getLeft as getLeft$1 } from '../../internal/Either.esm.js';\nimport { isFunction } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { adapter as adapter$1 } from '../../Utils/dist/effect-Utils.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category symbols\n * @since 2.0.0\n */\nconst TypeId = TypeId$1;\n\n/**\n * @category symbols\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst right = right$1;\n\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst left = left$1;\n\n/**\n * Takes a lazy default and a nullable value, if the value is not nully (`null` or `undefined`), turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import * as Either from 'effect/Either'\n *\n * assert.deepStrictEqual(Either.fromNullable(1, () => 'fallback'), Either.right(1))\n * assert.deepStrictEqual(Either.fromNullable(null, () => 'fallback'), Either.left('fallback'))\n *\n * @category constructors\n * @since 2.0.0\n */\nconst fromNullable = /*#__PURE__*/dual(2, (self, onNullable) => self == null ? left(onNullable(self)) : right(self));\n\n/**\n * @example\n * import * as Either from 'effect/Either'\n * import * as Option from 'effect/Option'\n *\n * assert.deepStrictEqual(Either.fromOption(Option.some(1), () => 'error'), Either.right(1))\n * assert.deepStrictEqual(Either.fromOption(Option.none(), () => 'error'), Either.left('error'))\n *\n * @category constructors\n * @since 2.0.0\n */\nconst fromOption = fromOption$1;\nconst try_ = evaluate => {\n  if (isFunction(evaluate)) {\n    try {\n      return right(evaluate());\n    } catch (e) {\n      return left(e);\n    }\n  } else {\n    try {\n      return right(evaluate.try());\n    } catch (e) {\n      return left(evaluate.catch(e));\n    }\n  }\n};\n\n/**\n * Tests if a value is a `Either`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isEither, left, right } from 'effect/Either'\n *\n * assert.deepStrictEqual(isEither(right(1)), true)\n * assert.deepStrictEqual(isEither(left(\"a\")), true)\n * assert.deepStrictEqual(isEither({ right: 1 }), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isEither = isEither$1;\n\n/**\n * Determine if a `Either` is a `Left`.\n *\n * @param self - The `Either` to check.\n *\n * @example\n * import { isLeft, left, right } from 'effect/Either'\n *\n * assert.deepStrictEqual(isLeft(right(1)), false)\n * assert.deepStrictEqual(isLeft(left(\"a\")), true)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isLeft = isLeft$1;\n\n/**\n * Determine if a `Either` is a `Right`.\n *\n * @param self - The `Either` to check.\n *\n * @example\n * import { isRight, left, right } from 'effect/Either'\n *\n * assert.deepStrictEqual(isRight(right(1)), true)\n * assert.deepStrictEqual(isRight(left(\"a\")), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isRight = isRight$1;\n\n/**\n * Converts a `Either` to an `Option` discarding the `Left`.\n *\n * Alias of {@link toOption}.\n *\n * @example\n * import * as O from 'effect/Option'\n * import * as E from 'effect/Either'\n *\n * assert.deepStrictEqual(E.getRight(E.right('ok')), O.some('ok'))\n * assert.deepStrictEqual(E.getRight(E.left('err')), O.none())\n *\n * @category getters\n * @since 2.0.0\n */\nconst getRight = getRight$1;\n\n/**\n * Converts a `Either` to an `Option` discarding the value.\n *\n * @example\n * import * as O from 'effect/Option'\n * import * as E from 'effect/Either'\n *\n * assert.deepStrictEqual(E.getLeft(E.right('ok')), O.none())\n * assert.deepStrictEqual(E.getLeft(E.left('err')), O.some('err'))\n *\n * @category getters\n * @since 2.0.0\n */\nconst getLeft = getLeft$1;\n\n/**\n * @category equivalence\n * @since 2.0.0\n */\nconst getEquivalence = (EE, EA) => make((x, y) => x === y || (isLeft(x) ? isLeft(y) && EE(x.left, y.left) : isRight(y) && EA(x.right, y.right)));\n\n/**\n * @category mapping\n * @since 2.0.0\n */\nconst mapBoth = /*#__PURE__*/dual(2, (self, {\n  onLeft,\n  onRight\n}) => isLeft(self) ? left(onLeft(self.left)) : right(onRight(self.right)));\n\n/**\n * Maps the `Left` side of an `Either` value to a new `Either` value.\n *\n * @param self - The input `Either` value to map.\n * @param f - A transformation function to apply to the `Left` value of the input `Either`.\n *\n * @category mapping\n * @since 2.0.0\n */\nconst mapLeft = /*#__PURE__*/dual(2, (self, f) => isLeft(self) ? left(f(self.left)) : right(self.right));\n\n/**\n * Maps the `Right` side of an `Either` value to a new `Either` value.\n *\n * @param self - An `Either` to map\n * @param f - The function to map over the value of the `Either`\n *\n * @category mapping\n * @since 2.0.0\n */\nconst map = /*#__PURE__*/dual(2, (self, f) => isRight(self) ? right(f(self.right)) : left(self.left));\n\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the `onLeft function,\n * if the value is a `Right` the inner value is applied to the `onRight` function.\n *\n * @example\n * import * as E from 'effect/Either'\n * import { pipe } from 'effect/Function'\n *\n * const onLeft  = (strings: ReadonlyArray<string>): string => `strings: ${strings.join(', ')}`\n *\n * const onRight = (value: number): string => `Ok: ${value}`\n *\n * assert.deepStrictEqual(pipe(E.right(1), E.match({ onLeft, onRight })), 'Ok: 1')\n * assert.deepStrictEqual(\n *   pipe(E.left(['string 1', 'string 2']), E.match({ onLeft, onRight })),\n *   'strings: string 1, string 2'\n * )\n *\n * @category pattern matching\n * @since 2.0.0\n */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onLeft,\n  onRight\n}) => isLeft(self) ? onLeft(self.left) : onRight(self.right));\n\n/**\n * @category getters\n * @since 2.0.0\n */\nconst merge = /*#__PURE__*/match({\n  onLeft: identity,\n  onRight: identity\n});\n\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import * as Either from 'effect/Either'\n *\n * assert.deepStrictEqual(Either.getOrElse(Either.right(1), (error) => error + \"!\"), 1)\n * assert.deepStrictEqual(Either.getOrElse(Either.left(\"not a number\"), (error) => error + \"!\"), \"not a number!\")\n *\n * @category getters\n * @since 2.0.0\n */\nconst getOrElse = /*#__PURE__*/dual(2, (self, onLeft) => isLeft(self) ? onLeft(self.left) : self.right);\n\n/**\n * @example\n * import * as Either from 'effect/Either'\n *\n * assert.deepStrictEqual(Either.getOrNull(Either.right(1)), 1)\n * assert.deepStrictEqual(Either.getOrNull(Either.left(\"a\")), null)\n *\n * @category getters\n * @since 2.0.0\n */\nconst getOrNull = /*#__PURE__*/getOrElse(constNull);\n\n/**\n * @example\n * import * as Either from 'effect/Either'\n *\n * assert.deepStrictEqual(Either.getOrUndefined(Either.right(1)), 1)\n * assert.deepStrictEqual(Either.getOrUndefined(Either.left(\"a\")), undefined)\n *\n * @category getters\n * @since 2.0.0\n */\nconst getOrUndefined = /*#__PURE__*/getOrElse(constUndefined);\n\n/**\n * Extracts the value of an `Either` or throws if the `Either` is `Left`.\n *\n * If a default error is sufficient for your use case and you don't need to configure the thrown error, see {@link getOrThrow}.\n *\n * @param self - The `Either` to extract the value from.\n * @param onLeft - A function that will be called if the `Either` is `Left`. It returns the error to be thrown.\n *\n * @example\n * import * as E from \"effect/Either\"\n *\n * assert.deepStrictEqual(\n *   E.getOrThrowWith(E.right(1), () => new Error('Unexpected Left')),\n *   1\n * )\n * assert.throws(() => E.getOrThrowWith(E.left(\"error\"), () => new Error('Unexpected Left')))\n *\n * @category getters\n * @since 2.0.0\n */\nconst getOrThrowWith = /*#__PURE__*/dual(2, (self, onLeft) => {\n  if (isRight(self)) {\n    return self.right;\n  }\n  throw onLeft(self.left);\n});\n\n/**\n * Extracts the value of an `Either` or throws if the `Either` is `Left`.\n *\n * The thrown error is a default error. To configure the error thrown, see  {@link getOrThrowWith}.\n *\n * @param self - The `Either` to extract the value from.\n * @throws `Error(\"getOrThrow called on a Left\")`\n *\n * @example\n * import * as E from \"effect/Either\"\n *\n * assert.deepStrictEqual(E.getOrThrow(E.right(1)), 1)\n * assert.throws(() => E.getOrThrow(E.left(\"error\")))\n *\n * @category getters\n * @since 2.0.0\n */\nconst getOrThrow = /*#__PURE__*/getOrThrowWith(() => new Error(\"getOrThrow called on a Left\"));\n\n/**\n * Returns `self` if it is a `Right` or `that` otherwise.\n *\n * @param self - The input `Either` value to check and potentially return.\n * @param that - A function that takes the error value from `self` (if it's a `Left`) and returns a new `Either` value.\n *\n * @category error handling\n * @since 2.0.0\n */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => isLeft(self) ? that(self.left) : right(self.right));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => isLeft(self) ? left(self.left) : f(self.right));\n\n/**\n * @since 2.0.0\n * @category combining\n */\nconst zipWith = /*#__PURE__*/dual(3, (self, that, f) => flatMap(self, a => map(that, b => f(a, b))));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst ap = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (f, a) => f(a)));\n\n/**\n * Takes a structure of `Option`s and returns an `Option` of values with the same structure.\n *\n * - If a tuple is supplied, then the returned `Option` will contain a tuple with the same length.\n * - If a struct is supplied, then the returned `Option` will contain a struct with the same keys.\n * - If an iterable is supplied, then the returned `Option` will contain an array.\n *\n * @param fields - the struct of `Option`s to be sequenced.\n *\n * @example\n * import * as Either from \"effect/Either\"\n *\n * assert.deepStrictEqual(Either.all([Either.right(1), Either.right(2)]), Either.right([1, 2]))\n * assert.deepStrictEqual(Either.all({ a: Either.right(1), b: Either.right(\"hello\") }), Either.right({ a: 1, b: \"hello\" }))\n * assert.deepStrictEqual(Either.all({ a: Either.right(1), b: Either.left(\"error\") }), Either.left(\"error\"))\n *\n * @category combining\n * @since 2.0.0\n */\n// @ts-expect-error\nconst all = input => {\n  if (Symbol.iterator in input) {\n    const out = [];\n    for (const e of input) {\n      if (isLeft(e)) {\n        return e;\n      }\n      out.push(e.right);\n    }\n    return right(out);\n  }\n  const out = {};\n  for (const key of Object.keys(input)) {\n    const e = input[key];\n    if (isLeft(e)) {\n      return e;\n    }\n    out[key] = e.right;\n  }\n  return right(out);\n};\n\n/**\n * @since 2.0.0\n */\nconst reverse = self => isLeft(self) ? right(self.left) : left(self.right);\nconst adapter = /*#__PURE__*/adapter$1();\n\n/**\n * @category generators\n * @since 2.0.0\n */\nconst gen = f => {\n  const iterator = f(adapter);\n  let state = iterator.next();\n  if (state.done) {\n    return right(state.value);\n  } else {\n    let current = state.value.value;\n    if (isLeft(current)) {\n      return current;\n    }\n    while (!state.done) {\n      state = iterator.next(current.right);\n      if (!state.done) {\n        current = state.value.value;\n        if (isLeft(current)) {\n          return current;\n        }\n      }\n    }\n    return right(state.value);\n  }\n};\n\nexport { TypeId, all, ap, flatMap, fromNullable, fromOption, gen, getEquivalence, getLeft, getOrElse, getOrNull, getOrThrow, getOrThrowWith, getOrUndefined, getRight, isEither, isLeft, isRight, left, map, mapBoth, mapLeft, match, merge, orElse, reverse, right, try_ as try, zipWith };\n","/**\n * @since 2.0.0\n */\n\n/** @internal */\nconst isNonEmptyArray = self => self.length > 0;\n\nexport { isNonEmptyArray };\n","import { isLeft } from '../../Either/dist/effect-Either.esm.js';\nimport { equivalence } from '../../Equal/dist/effect-Equal.esm.js';\nimport { array as array$1 } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual, identity } from '../../Function/dist/effect-Function.esm.js';\nimport { isNonEmptyArray as isNonEmptyArray$1 } from '../../internal/ReadonlyArray.esm.js';\nimport { toArray, none, some as some$1, getOrElse, isSome, isNone } from '../../Option/dist/effect-Option.esm.js';\nimport { mapInput, combineAll, min as min$1, max as max$1, array } from '../../Order/dist/effect-Order.esm.js';\nimport { toEntries } from '../../ReadonlyRecord/dist/effect-ReadonlyRecord.esm.js';\n\n/**\n * This module provides utility functions for working with arrays in TypeScript.\n *\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * Builds a `NonEmptyArray` from an non-empty collection of elements.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst make = (...elements) => elements;\n\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * @example\n * import { makeBy } from 'effect/ReadonlyArray'\n *\n * assert.deepStrictEqual(makeBy(5, n => n * 2), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.0.0\n */\nconst makeBy = (n, f) => {\n  const max = Math.max(1, Math.floor(n));\n  const out = [f(0)];\n  for (let i = 1; i < max; i++) {\n    out.push(f(i));\n  }\n  return out;\n};\n\n/**\n * Return a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'effect/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 3), [1, 2, 3])\n *\n * @category constructors\n * @since 2.0.0\n */\nconst range = (start, end) => start <= end ? makeBy(end - start + 1, i => start + i) : [start];\n\n/**\n * Return a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * @example\n * import { replicate } from 'effect/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(\"a\", 3), [\"a\", \"a\", \"a\"])\n *\n * @category constructors\n * @since 2.0.0\n */\nconst replicate = /*#__PURE__*/dual(2, (a, n) => makeBy(n, () => a));\n\n/**\n * @category conversions\n * @since 2.0.0\n */\nconst fromIterable = collection => Array.isArray(collection) ? collection : Array.from(collection);\n\n/**\n * Takes a record and returns an array of tuples containing its keys and values.\n *\n * @param self - The record to transform.\n *\n * @example\n * import { fromRecord } from \"effect/ReadonlyArray\"\n *\n * const x = { a: 1, b: 2, c: 3 }\n * assert.deepStrictEqual(fromRecord(x), [[\"a\", 1], [\"b\", 2], [\"c\", 3]])\n *\n * @category conversions\n * @since 2.0.0\n */\nconst fromRecord = toEntries;\n\n/**\n * @category conversions\n * @since 2.0.0\n */\nconst fromOption = toArray;\n\n/**\n * @category pattern matching\n * @since 2.0.0\n */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onEmpty,\n  onNonEmpty\n}) => isNonEmptyReadonlyArray(self) ? onNonEmpty(self) : onEmpty());\n\n/**\n * @category pattern matching\n * @since 2.0.0\n */\nconst matchLeft = /*#__PURE__*/dual(2, (self, {\n  onEmpty,\n  onNonEmpty\n}) => isNonEmptyReadonlyArray(self) ? onNonEmpty(headNonEmpty(self), tailNonEmpty(self)) : onEmpty());\n\n/**\n * @category pattern matching\n * @since 2.0.0\n */\nconst matchRight = /*#__PURE__*/dual(2, (self, {\n  onEmpty,\n  onNonEmpty\n}) => isNonEmptyReadonlyArray(self) ? onNonEmpty(initNonEmpty(self), lastNonEmpty(self)) : onEmpty());\n\n/**\n * Prepend an element to the front of an `Iterable`, creating a new `NonEmptyArray`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst prepend = /*#__PURE__*/dual(2, (self, head) => [head, ...self]);\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst prependAll = /*#__PURE__*/dual(2, (self, that) => fromIterable(that).concat(fromIterable(self)));\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst prependAllNonEmpty = /*#__PURE__*/dual(2, (self, that) => prependAll(self, that));\n\n/**\n * Append an element to the end of an `Iterable`, creating a new `NonEmptyArray`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst append = /*#__PURE__*/dual(2, (self, last) => [...self, last]);\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst appendAll = /*#__PURE__*/dual(2, (self, that) => fromIterable(self).concat(fromIterable(that)));\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst appendAllNonEmpty = /*#__PURE__*/dual(2, (self, that) => appendAll(self, that));\n\n/**\n * Reduce an `Iterable` from the left, keeping all intermediate results instead of only the final result.\n *\n * @category folding\n * @since 2.0.0\n */\nconst scan = /*#__PURE__*/dual(3, (self, b, f) => {\n  const out = [b];\n  let i = 0;\n  for (const a of self) {\n    out[i + 1] = f(out[i], a);\n    i++;\n  }\n  return out;\n});\n\n/**\n * Reduce an `Iterable` from the right, keeping all intermediate results instead of only the final result.\n *\n * @category folding\n * @since 2.0.0\n */\nconst scanRight = /*#__PURE__*/dual(3, (self, b, f) => {\n  const input = fromIterable(self);\n  const out = new Array(input.length + 1);\n  out[input.length] = b;\n  for (let i = input.length - 1; i >= 0; i--) {\n    out[i] = f(out[i + 1], input[i]);\n  }\n  return out;\n});\n\n/**\n * Determine if an `Array` is empty narrowing down the type to `[]`.\n *\n * @param self - The `Array` to check.\n *\n * @example\n * import { isEmptyArray } from \"effect/ReadonlyArray\"\n *\n * assert.deepStrictEqual(isEmptyArray([]), true);\n * assert.deepStrictEqual(isEmptyArray([1, 2, 3]), false);\n *\n * @category guards\n * @since 2.0.0\n */\nconst isEmptyArray = self => self.length === 0;\n\n/**\n * Determine if a `ReadonlyArray` is empty narrowing down the type to `readonly []`.\n *\n * @param self - The `ReadonlyArray` to check.\n *\n * @example\n * import { isEmptyReadonlyArray } from \"effect/ReadonlyArray\"\n *\n * assert.deepStrictEqual(isEmptyReadonlyArray([]), true);\n * assert.deepStrictEqual(isEmptyReadonlyArray([1, 2, 3]), false);\n *\n * @category guards\n * @since 2.0.0\n */\nconst isEmptyReadonlyArray = isEmptyArray;\n\n/**\n * Determine if an `Array` is non empty narrowing down the type to `NonEmptyArray`.\n *\n * An `Array` is considered to be a `NonEmptyArray` if it contains at least one element.\n *\n * @param self - The `Array` to check.\n *\n * @example\n * import { isNonEmptyArray } from \"effect/ReadonlyArray\"\n *\n * assert.deepStrictEqual(isNonEmptyArray([]), false);\n * assert.deepStrictEqual(isNonEmptyArray([1, 2, 3]), true);\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNonEmptyArray = isNonEmptyArray$1;\n\n/**\n * Determine if a `ReadonlyArray` is non empty narrowing down the type to `NonEmptyReadonlyArray`.\n *\n * A `ReadonlyArray` is considered to be a `NonEmptyReadonlyArray` if it contains at least one element.\n *\n * @param self - The `ReadonlyArray` to check.\n *\n * @example\n * import { isNonEmptyReadonlyArray } from \"effect/ReadonlyArray\"\n *\n * assert.deepStrictEqual(isNonEmptyReadonlyArray([]), false);\n * assert.deepStrictEqual(isNonEmptyReadonlyArray([1, 2, 3]), true);\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNonEmptyReadonlyArray = isNonEmptyArray$1;\n\n/**\n * Return the number of elements in a `ReadonlyArray`.\n *\n * @category getters\n * @since 2.0.0\n */\nconst length = self => self.length;\nconst isOutOfBound = (i, as) => i < 0 || i >= as.length;\nconst clamp = (i, as) => Math.floor(Math.min(Math.max(0, i), as.length));\n\n/**\n * This function provides a safe way to read a value at a particular index from a `ReadonlyArray`.\n *\n * @category getters\n * @since 2.0.0\n */\nconst get = /*#__PURE__*/dual(2, (self, index) => {\n  const i = Math.floor(index);\n  return isOutOfBound(i, self) ? none() : some$1(self[i]);\n});\n\n/**\n * Gets an element unsafely, will throw on out of bounds.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeGet = /*#__PURE__*/dual(2, (self, index) => {\n  const i = Math.floor(index);\n  if (isOutOfBound(i, self)) {\n    throw new Error(`Index ${i} out of bounds`);\n  }\n  return self[i];\n});\n\n/**\n * Return a tuple containing the first element, and a new `Array` of the remaining elements, if any.\n *\n * @category getters\n * @since 2.0.0\n */\nconst unprepend = self => [headNonEmpty(self), tailNonEmpty(self)];\n\n/**\n * Return a tuple containing a copy of the `NonEmptyReadonlyArray` without its last element, and that last element.\n *\n * @category getters\n * @since 2.0.0\n */\nconst unappend = self => [initNonEmpty(self), lastNonEmpty(self)];\n\n/**\n * Get the first element of a `ReadonlyArray`, or `None` if the `ReadonlyArray` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nconst head = /*#__PURE__*/get(0);\n\n/**\n * @category getters\n * @since 2.0.0\n */\nconst headNonEmpty = /*#__PURE__*/unsafeGet(0);\n\n/**\n * Get the last element in a `ReadonlyArray`, or `None` if the `ReadonlyArray` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nconst last = self => isNonEmptyReadonlyArray(self) ? some$1(lastNonEmpty(self)) : none();\n\n/**\n * @category getters\n * @since 2.0.0\n */\nconst lastNonEmpty = self => self[self.length - 1];\n\n/**\n * Get all but the first element of an `Iterable`, creating a new `Array`, or `None` if the `Iterable` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nconst tail = self => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? some$1(tailNonEmpty(input)) : none();\n};\n\n/**\n * @category getters\n * @since 2.0.0\n */\nconst tailNonEmpty = self => self.slice(1);\n\n/**\n * Get all but the last element of an `Iterable`, creating a new `Array`, or `None` if the `Iterable` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nconst init = self => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? some$1(initNonEmpty(input)) : none();\n};\n\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @category getters\n * @since 2.0.0\n */\nconst initNonEmpty = self => self.slice(0, -1);\n\n/**\n * Keep only a max number of elements from the start of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @category getters\n * @since 2.0.0\n */\nconst take = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return input.slice(0, clamp(n, input));\n});\n\n/**\n * Keep only a max number of elements from the end of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @category getters\n * @since 2.0.0\n */\nconst takeRight = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  const i = clamp(n, input);\n  return i === 0 ? [] : input.slice(-i);\n});\n\n/**\n * Calculate the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n *\n * @category getters\n * @since 2.0.0\n */\nconst takeWhile = /*#__PURE__*/dual(2, (self, predicate) => {\n  const out = [];\n  for (const a of self) {\n    if (!predicate(a)) {\n      break;\n    }\n    out.push(a);\n  }\n  return out;\n});\nconst spanIndex = (self, predicate) => {\n  let i = 0;\n  for (const a of self) {\n    if (!predicate(a)) {\n      break;\n    }\n    i++;\n  }\n  return i;\n};\n\n/**\n * Split an `Iterable` into two parts:\n *\n * 1. the longest initial subarray for which all elements satisfy the specified predicate\n * 2. the remaining elements\n *\n * @category filtering\n * @since 2.0.0\n */\nconst span = /*#__PURE__*/dual(2, (self, predicate) => splitAt(self, spanIndex(self, predicate)));\n\n/**\n * Drop a max number of elements from the start of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @category getters\n * @since 2.0.0\n */\nconst drop = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return input.slice(clamp(n, input), input.length);\n});\n\n/**\n * Drop a max number of elements from the end of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @category getters\n * @since 2.0.0\n */\nconst dropRight = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return input.slice(0, input.length - clamp(n, input));\n});\n\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n *\n * @category getters\n * @since 2.0.0\n */\nconst dropWhile = /*#__PURE__*/dual(2, (self, predicate) => fromIterable(self).slice(spanIndex(self, predicate)));\n\n/**\n * Return the first index for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findFirstIndex = /*#__PURE__*/dual(2, (self, predicate) => {\n  let i = 0;\n  for (const a of self) {\n    if (predicate(a)) {\n      return some$1(i);\n    }\n    i++;\n  }\n  return none();\n});\n\n/**\n * Return the last index for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findLastIndex = /*#__PURE__*/dual(2, (self, predicate) => {\n  const input = fromIterable(self);\n  for (let i = input.length - 1; i >= 0; i--) {\n    if (predicate(input[i])) {\n      return some$1(i);\n    }\n  }\n  return none();\n});\n\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findFirst = /*#__PURE__*/dual(2, (self, predicate) => {\n  const input = fromIterable(self);\n  for (let i = 0; i < input.length; i++) {\n    if (predicate(input[i])) {\n      return some$1(input[i]);\n    }\n  }\n  return none();\n});\n\n/**\n * Find the last element for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findLast = /*#__PURE__*/dual(2, (self, predicate) => {\n  const input = fromIterable(self);\n  for (let i = input.length - 1; i >= 0; i--) {\n    if (predicate(input[i])) {\n      return some$1(input[i]);\n    }\n  }\n  return none();\n});\n\n/**\n * Insert an element at the specified index, creating a new `NonEmptyArray`,\n * or return `None` if the index is out of bounds.\n *\n * @since 2.0.0\n */\nconst insertAt = /*#__PURE__*/dual(3, (self, i, b) => {\n  const out = Array.from(self);\n  //             v--- `= self.length` is ok, it means inserting in last position\n  if (i < 0 || i > out.length) {\n    return none();\n  }\n  out.splice(i, 0, b);\n  return some$1(out);\n});\n\n/**\n * Change the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * @since 2.0.0\n */\nconst replace = /*#__PURE__*/dual(3, (self, i, b) => modify(self, i, () => b));\n\n/**\n * @since 2.0.0\n */\nconst replaceOption = /*#__PURE__*/dual(3, (self, i, b) => modifyOption(self, i, () => b));\n\n/**\n * Apply a function to the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * @since 2.0.0\n */\nconst modify = /*#__PURE__*/dual(3, (self, i, f) => getOrElse(modifyOption(self, i, f), () => Array.from(self)));\n\n/**\n * Apply a function to the element at the specified index, creating a new `Array`,\n * or return `None` if the index is out of bounds.\n *\n * @since 2.0.0\n */\nconst modifyOption = /*#__PURE__*/dual(3, (self, i, f) => {\n  const out = Array.from(self);\n  if (isOutOfBound(i, out)) {\n    return none();\n  }\n  const next = f(out[i]);\n  // @ts-expect-error\n  out[i] = next;\n  return some$1(out);\n});\n\n/**\n * Delete the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * @since 2.0.0\n */\nconst remove = /*#__PURE__*/dual(2, (self, i) => {\n  const out = Array.from(self);\n  if (isOutOfBound(i, out)) {\n    return out;\n  }\n  out.splice(i, 1);\n  return out;\n});\n\n/**\n * Reverse an `Iterable`, creating a new `Array`.\n *\n * @category elements\n * @since 2.0.0\n */\nconst reverse = self => Array.from(self).reverse();\n\n/**\n * @category elements\n * @since 2.0.0\n */\nconst reverseNonEmpty = self => [lastNonEmpty(self), ...self.slice(0, -1).reverse()];\n\n/**\n * Sort the elements of an `Iterable` in increasing order, creating a new `Array`.\n *\n * @category sorting\n * @since 2.0.0\n */\nconst sort = /*#__PURE__*/dual(2, (self, O) => {\n  const out = Array.from(self);\n  out.sort(O);\n  return out;\n});\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst sortWith = /*#__PURE__*/dual(3, (self, f, order) => sort(self, mapInput(order, f)));\n\n/**\n * Sort the elements of a `NonEmptyReadonlyArray` in increasing order, creating a new `NonEmptyArray`.\n *\n * @category sorting\n * @since 2.0.0\n */\nconst sortNonEmpty = /*#__PURE__*/dual(2, (self, O) => sort(O)(self));\n\n/**\n * Sort the elements of an `Iterable` in increasing order, where elements are compared\n * using first `orders[0]`, then `orders[1]`, etc...\n *\n * @category sorting\n * @since 2.0.0\n */\nconst sortBy = (...orders) => self => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? sortByNonEmpty(...orders)(input) : [];\n};\n\n/**\n * @category sorting\n * @since 2.0.0\n */\nconst sortByNonEmpty = (...orders) => sortNonEmpty(combineAll(orders));\n\n/**\n * Takes two `Iterable`s and returns an `Array` of corresponding pairs.\n * If one input `Iterable` is short, excess elements of the\n * longer `Iterable` are discarded.\n *\n * @since 2.0.0\n */\nconst zip = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (a, b) => [a, b]));\n\n/**\n * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results in a new `Array`. If one\n * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n *\n * @since 2.0.0\n */\nconst zipWith = /*#__PURE__*/dual(3, (self, that, f) => {\n  const as = fromIterable(self);\n  const bs = fromIterable(that);\n  return isNonEmptyReadonlyArray(as) && isNonEmptyReadonlyArray(bs) ? zipNonEmptyWith(bs, f)(as) : [];\n});\n\n/**\n * @since 2.0.0\n */\nconst zipNonEmpty = /*#__PURE__*/dual(2, (self, that) => zipNonEmptyWith(self, that, (a, b) => [a, b]));\n\n/**\n * @since 2.0.0\n */\nconst zipNonEmptyWith = /*#__PURE__*/dual(3, (self, that, f) => {\n  const cs = [f(headNonEmpty(self), headNonEmpty(that))];\n  const len = Math.min(self.length, that.length);\n  for (let i = 1; i < len; i++) {\n    cs[i] = f(self[i], that[i]);\n  }\n  return cs;\n});\n\n/**\n * This function is the inverse of `zip`. Takes an `Iterable` of pairs and return two corresponding `Array`s.\n *\n * @since 2.0.0\n */\nconst unzip = self => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? unzipNonEmpty(input) : [[], []];\n};\n\n/**\n * @since 2.0.0\n */\nconst unzipNonEmpty = self => {\n  const fa = [self[0][0]];\n  const fb = [self[0][1]];\n  for (let i = 1; i < self.length; i++) {\n    fa[i] = self[i][0];\n    fb[i] = self[i][1];\n  }\n  return [fa, fb];\n};\n\n/**\n * Places an element in between members of an `Iterable`\n *\n * @since 2.0.0\n */\nconst intersperse = /*#__PURE__*/dual(2, (self, middle) => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? intersperseNonEmpty(input, middle) : [];\n});\n\n/**\n * Places an element in between members of a `NonEmptyReadonlyArray`\n *\n * @since 2.0.0\n */\nconst intersperseNonEmpty = /*#__PURE__*/dual(2, (self, middle) => {\n  const out = [headNonEmpty(self)];\n  const tail = tailNonEmpty(self);\n  for (let i = 0; i < tail.length; i++) {\n    if (i < tail.length) {\n      out.push(middle);\n    }\n    out.push(tail[i]);\n  }\n  return out;\n});\n\n/**\n * Apply a function to the head, creating a new `NonEmptyReadonlyArray`.\n *\n * @since 2.0.0\n */\nconst modifyNonEmptyHead = /*#__PURE__*/dual(2, (self, f) => [f(headNonEmpty(self)), ...tailNonEmpty(self)]);\n\n/**\n * Change the head, creating a new `NonEmptyReadonlyArray`.\n *\n * @since 2.0.0\n */\nconst setNonEmptyHead = /*#__PURE__*/dual(2, (self, b) => modifyNonEmptyHead(self, () => b));\n\n/**\n * Apply a function to the last element, creating a new `NonEmptyReadonlyArray`.\n *\n * @since 2.0.0\n */\nconst modifyNonEmptyLast = /*#__PURE__*/dual(2, (self, f) => append(initNonEmpty(self), f(lastNonEmpty(self))));\n\n/**\n * Change the last element, creating a new `NonEmptyReadonlyArray`.\n *\n * @since 2.0.0\n */\nconst setNonEmptyLast = /*#__PURE__*/dual(2, (self, b) => modifyNonEmptyLast(self, () => b));\n\n/**\n * Rotate an `Iterable` by `n` steps.\n *\n * @since 2.0.0\n */\nconst rotate = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? rotateNonEmpty(input, n) : [];\n});\n\n/**\n * Rotate a `NonEmptyReadonlyArray` by `n` steps.\n *\n * @since 2.0.0\n */\nconst rotateNonEmpty = /*#__PURE__*/dual(2, (self, n) => {\n  const len = self.length;\n  const m = Math.round(n) % len;\n  if (isOutOfBound(Math.abs(m), self) || m === 0) {\n    return copy(self);\n  }\n  if (m < 0) {\n    const [f, s] = splitNonEmptyAt(self, -m);\n    return appendAllNonEmpty(s, f);\n  } else {\n    return rotateNonEmpty(self, m - len);\n  }\n});\n\n/**\n * Returns a function that checks if a `ReadonlyArray` contains a given value using a provided `isEquivalent` function.\n *\n * @category elements\n * @since 2.0.0\n */\nconst containsWith = isEquivalent => dual(2, (self, a) => {\n  for (const i of self) {\n    if (isEquivalent(a, i)) {\n      return true;\n    }\n  }\n  return false;\n});\nconst _equivalence = /*#__PURE__*/equivalence();\n\n/**\n * Returns a function that checks if a `ReadonlyArray` contains a given value using the default `Equivalence`.\n *\n * @category elements\n * @since 2.0.0\n */\nconst contains = /*#__PURE__*/containsWith(_equivalence);\n\n/**\n * Remove duplicates from a `NonEmptyReadonlyArray`, keeping the first occurrence of an element using the provided `isEquivalent` function.\n *\n * @since 2.0.0\n */\nconst dedupeNonEmptyWith = /*#__PURE__*/dual(2, (self, isEquivalent) => {\n  const out = [headNonEmpty(self)];\n  const rest = tailNonEmpty(self);\n  for (const a of rest) {\n    if (out.every(o => !isEquivalent(a, o))) {\n      out.push(a);\n    }\n  }\n  return out;\n});\n\n/**\n * Remove duplicates from a `NonEmptyReadonlyArray`, keeping the first occurrence of an element.\n *\n * @since 2.0.0\n */\nconst dedupeNonEmpty = /*#__PURE__*/dedupeNonEmptyWith( /*#__PURE__*/equivalence());\n\n/**\n * A useful recursion pattern for processing an `Iterable` to produce a new `Array`, often used for \"chopping\" up the input\n * `Iterable`. Typically chop is called with some function that will consume an initial prefix of the `Iterable` and produce a\n * value and the rest of the `Array`.\n *\n * @since 2.0.0\n */\nconst chop = /*#__PURE__*/dual(2, (self, f) => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? chopNonEmpty(input, f) : [];\n});\n\n/**\n * A useful recursion pattern for processing a `NonEmptyReadonlyArray` to produce a new `NonEmptyReadonlyArray`, often used for \"chopping\" up the input\n * `NonEmptyReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `NonEmptyReadonlyArray` and produce a\n * value and the tail of the `NonEmptyReadonlyArray`.\n *\n * @since 2.0.0\n */\nconst chopNonEmpty = /*#__PURE__*/dual(2, (self, f) => {\n  const [b, rest] = f(self);\n  const out = [b];\n  let next = rest;\n  while (isNonEmptyArray$1(next)) {\n    const [b, rest] = f(next);\n    out.push(b);\n    next = rest;\n  }\n  return out;\n});\n\n/**\n * Splits an `Iterable` into two pieces, the first piece has max `n` elements.\n *\n * @category getters\n * @since 2.0.0\n */\nconst splitAt = /*#__PURE__*/dual(2, (self, n) => {\n  const input = Array.from(self);\n  return n >= 1 && isNonEmptyReadonlyArray(input) ? splitNonEmptyAt(input, n) : isEmptyReadonlyArray(input) ? [input, []] : [[], input];\n});\n\n/**\n * @since 2.0.0\n */\nconst copy = self => self.slice();\n\n/**\n * Splits a `NonEmptyReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category getters\n * @since 2.0.0\n */\nconst splitNonEmptyAt = /*#__PURE__*/dual(2, (self, n) => {\n  const m = Math.max(1, n);\n  return m >= self.length ? [copy(self), []] : [prepend(self.slice(1, m), headNonEmpty(self)), self.slice(m)];\n});\n\n/**\n * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `Iterable`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `self`.\n *\n * @category getters\n * @since 2.0.0\n */\nconst chunksOf = /*#__PURE__*/dual(2, (self, n) => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? chunksOfNonEmpty(input, n) : [];\n});\n\n/**\n * Splits a `NonEmptyReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `NonEmptyReadonlyArray`.\n *\n * @category getters\n * @since 2.0.0\n */\nconst chunksOfNonEmpty = /*#__PURE__*/dual(2, (self, n) => chopNonEmpty(self, splitNonEmptyAt(n)));\n\n/**\n * Group equal, consecutive elements of a `NonEmptyReadonlyArray` into `NonEmptyArray`s using the provided `isEquivalent` function.\n *\n * @category grouping\n * @since 2.0.0\n */\nconst groupWith = /*#__PURE__*/dual(2, (self, isEquivalent) => chopNonEmpty(self, as => {\n  const h = headNonEmpty(as);\n  const out = [h];\n  let i = 1;\n  for (; i < as.length; i++) {\n    const a = as[i];\n    if (isEquivalent(a, h)) {\n      out.push(a);\n    } else {\n      break;\n    }\n  }\n  return [out, as.slice(i)];\n}));\n\n/**\n * Group equal, consecutive elements of a `NonEmptyReadonlyArray` into `NonEmptyArray`s.\n *\n * @category grouping\n * @since 2.0.0\n */\nconst group = /*#__PURE__*/groupWith( /*#__PURE__*/equivalence());\n\n/**\n * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @category grouping\n * @since 2.0.0\n */\nconst groupBy = /*#__PURE__*/dual(2, (self, f) => {\n  const out = {};\n  for (const a of self) {\n    const k = f(a);\n    if (Object.prototype.hasOwnProperty.call(out, k)) {\n      out[k].push(a);\n    } else {\n      out[k] = [a];\n    }\n  }\n  return out;\n});\n\n/**\n * @since 2.0.0\n */\nconst unionWith = isEquivalent => dual(2, (self, that) => {\n  const a = fromIterable(self);\n  const b = fromIterable(that);\n  return isNonEmptyReadonlyArray(a) && isNonEmptyReadonlyArray(b) ? unionNonEmptyWith(isEquivalent)(a, b) : isNonEmptyReadonlyArray(a) ? a : b;\n});\n\n/**\n * @since 2.0.0\n */\nconst union = /*#__PURE__*/unionWith(_equivalence);\n\n/**\n * @since 2.0.0\n */\nconst unionNonEmptyWith = isEquivalent => {\n  const dedupe = dedupeNonEmptyWith(isEquivalent);\n  return dual(2, (self, that) => dedupe(appendAllNonEmpty(self, that)));\n};\n\n/**\n * @since 2.0.0\n */\nconst unionNonEmpty = /*#__PURE__*/unionNonEmptyWith(_equivalence);\n\n/**\n * Creates an `Array` of unique values that are included in all given `Iterable`s using the provided `isEquivalent` function.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * @since 2.0.0\n */\nconst intersectionWith = isEquivalent => {\n  const has = containsWith(isEquivalent);\n  return dual(2, (self, that) => fromIterable(self).filter(a => has(that, a)));\n};\n\n/**\n * Creates an `Array` of unique values that are included in all given `Iterable`s.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * @since 2.0.0\n */\nconst intersection = /*#__PURE__*/intersectionWith(_equivalence);\n\n/**\n * Creates a `Array` of values not included in the other given `Iterable` using the provided `isEquivalent` function.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * @since 2.0.0\n */\nconst differenceWith = isEquivalent => {\n  const has = containsWith(isEquivalent);\n  return dual(2, (self, that) => fromIterable(self).filter(a => !has(that, a)));\n};\n\n/**\n * Creates a `Array` of values not included in the other given `Iterable` using the provided `isEquivalent` function.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * @since 2.0.0\n */\nconst difference = /*#__PURE__*/differenceWith(_equivalence);\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nconst empty = () => [];\n\n/**\n * Constructs a new `NonEmptyArray<A>` from the specified value.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst of = a => [a];\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @category mapping\n * @since 2.0.0\n */\nconst map = /*#__PURE__*/dual(2, (self, f) => self.map(f));\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  if (isEmptyReadonlyArray(self)) {\n    return [];\n  }\n  const out = [];\n  for (let i = 0; i < self.length; i++) {\n    out.push(...f(self[i], i));\n  }\n  return out;\n});\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nconst flatMapNonEmpty = flatMap;\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nconst flatten = /*#__PURE__*/flatMap(identity);\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nconst flattenNonEmpty = /*#__PURE__*/flatMapNonEmpty(identity);\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nconst filterMap = /*#__PURE__*/dual(2, (self, f) => {\n  const as = fromIterable(self);\n  const out = [];\n  for (let i = 0; i < as.length; i++) {\n    const o = f(as[i], i);\n    if (isSome(o)) {\n      out.push(o.value);\n    }\n  }\n  return out;\n});\n\n/**\n * Transforms all elements of the `readonlyArray` for as long as the specified function returns some value\n *\n * @category filtering\n * @since 2.0.0\n */\nconst filterMapWhile = /*#__PURE__*/dual(2, (self, f) => {\n  const out = [];\n  for (const a of self) {\n    const b = f(a);\n    if (isSome(b)) {\n      out.push(b.value);\n    } else {\n      break;\n    }\n  }\n  return out;\n});\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nconst partitionMap = /*#__PURE__*/dual(2, (self, f) => {\n  const left = [];\n  const right = [];\n  const as = fromIterable(self);\n  for (let i = 0; i < as.length; i++) {\n    const e = f(as[i], i);\n    if (isLeft(e)) {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n  return [left, right];\n});\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nconst compact = /*#__PURE__*/filterMap(identity);\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nconst filter = /*#__PURE__*/dual(2, (self, predicate) => {\n  const as = fromIterable(self);\n  const out = [];\n  for (let i = 0; i < as.length; i++) {\n    if (predicate(as[i], i)) {\n      out.push(as[i]);\n    }\n  }\n  return out;\n});\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nconst partition = /*#__PURE__*/dual(2, (self, predicate) => {\n  const left = [];\n  const right = [];\n  const as = fromIterable(self);\n  for (let i = 0; i < as.length; i++) {\n    if (predicate(as[i], i)) {\n      right.push(as[i]);\n    } else {\n      left.push(as[i]);\n    }\n  }\n  return [left, right];\n});\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nconst separate = /*#__PURE__*/partitionMap(identity);\n\n/**\n * @category folding\n * @since 2.0.0\n */\nconst reduce = /*#__PURE__*/dual(3, (self, b, f) => fromIterable(self).reduce((b, a, i) => f(b, a, i), b));\n\n/**\n * @category folding\n * @since 2.0.0\n */\nconst reduceRight = /*#__PURE__*/dual(3, (self, b, f) => fromIterable(self).reduceRight((b, a, i) => f(b, a, i), b));\n\n/**\n * @category lifting\n * @since 2.0.0\n */\nconst liftPredicate = predicate => b => predicate(b) ? [b] : [];\n\n/**\n * @category lifting\n * @since 2.0.0\n */\nconst liftOption = f => (...a) => fromOption(f(...a));\n\n/**\n * @category conversions\n * @since 2.0.0\n */\nconst fromNullable = a => a == null ? empty() : [a];\n\n/**\n * @category lifting\n * @since 2.0.0\n */\nconst liftNullable = f => (...a) => fromNullable(f(...a));\n\n/**\n * @category combining\n * @since 2.0.0\n */\nconst flatMapNullable = /*#__PURE__*/dual(2, (self, f) => isNonEmptyReadonlyArray(self) ? fromNullable(f(headNonEmpty(self))) : empty());\n\n/**\n * @category lifting\n * @since 2.0.0\n */\nconst liftEither = f => (...a) => {\n  const e = f(...a);\n  return isLeft(e) ? [] : [e.right];\n};\n\n/**\n * Check if a predicate holds true for every `ReadonlyArray` element.\n *\n * @category elements\n * @since 2.0.0\n */\nconst every = /*#__PURE__*/dual(2, (self, refinement) => self.every(refinement));\n\n/**\n * Check if a predicate holds true for some `ReadonlyArray` element.\n *\n * @category elements\n * @since 2.0.0\n */\nconst some = /*#__PURE__*/dual(2, (self, predicate) => self.some(predicate));\n\n/**\n * @since 2.0.0\n */\nconst extend = /*#__PURE__*/dual(2, (self, f) => self.map((_, i, as) => f(as.slice(i))));\n\n/**\n * @since 2.0.0\n */\nconst min = /*#__PURE__*/dual(2, (self, O) => self.reduce(min$1(O)));\n\n/**\n * @since 2.0.0\n */\nconst max = /*#__PURE__*/dual(2, (self, O) => self.reduce(max$1(O)));\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nconst unfold = (b, f) => {\n  const out = [];\n  let next = b;\n  let o;\n  while (isSome(o = f(next))) {\n    const [a, b] = o.value;\n    out.push(a);\n    next = b;\n  }\n  return out;\n};\n\n/**\n * This function creates and returns a new `Order` for an array of values based on a given `Order` for the elements of the array.\n * The returned `Order` compares two arrays by applying the given `Order` to each element in the arrays.\n * If all elements are equal, the arrays are then compared based on their length.\n * It is useful when you need to compare two arrays of the same type and you have a specific way of comparing each element of the array.\n *\n * @category instances\n * @since 2.0.0\n */\nconst getOrder = array;\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst getEquivalence = array$1;\n\n/**\n * Iterate over the `Iterable` applying `f`.\n *\n * @since 2.0.0\n */\nconst forEach = /*#__PURE__*/dual(2, (self, f) => fromIterable(self).forEach((a, i) => f(a, i)));\n\n/**\n * Remove duplicates from am `Iterable` using the provided `isEquivalent` function, keeping the first occurrence of an element.\n *\n * @since 2.0.0\n */\nconst dedupeWith = /*#__PURE__*/dual(2, (self, isEquivalent) => {\n  const input = fromIterable(self);\n  return isNonEmptyReadonlyArray(input) ? dedupeNonEmptyWith(isEquivalent)(input) : [];\n});\n\n/**\n * Remove duplicates from am `Iterable`, keeping the first occurrence of an element.\n *\n * @since 2.0.0\n */\nconst dedupe = /*#__PURE__*/dedupeWith( /*#__PURE__*/equivalence());\n\n/**\n * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n *\n * @since 2.0.0\n */\nconst dedupeAdjacentWith = /*#__PURE__*/dual(2, (self, isEquivalent) => {\n  const out = [];\n  let lastA = none();\n  for (const a of self) {\n    if (isNone(lastA) || !isEquivalent(a, lastA.value)) {\n      out.push(a);\n      lastA = some$1(a);\n    }\n  }\n  return out;\n});\n\n/**\n * Deduplicates adjacent elements that are identical.\n *\n * @since 2.0.0\n */\nconst dedupeAdjacent = /*#__PURE__*/dedupeAdjacentWith( /*#__PURE__*/equivalence());\n\n/**\n * Joins the elements together with \"sep\" in the middle.\n *\n * @since 2.0.0\n * @category folding\n */\nconst join = /*#__PURE__*/dual(2, (self, sep) => fromIterable(self).join(sep));\n\n/**\n * Statefully maps over the chunk, producing new elements of type `B`.\n *\n * @since 2.0.0\n * @category folding\n */\nconst mapAccum = /*#__PURE__*/dual(3, (self, s, f) => {\n  let s1 = s;\n  const out = [];\n  for (const a of self) {\n    const r = f(s1, a);\n    s1 = r[0];\n    out.push(r[1]);\n  }\n  return [s1, out];\n});\n\n/**\n * Zips this chunk crosswise with the specified chunk using the specified combiner.\n *\n * @since 2.0.0\n * @category elements\n */\nconst cartesianWith = /*#__PURE__*/dual(3, (self, that, f) => flatMap(self, a => map(that, b => f(a, b))));\n\n/**\n * Zips this chunk crosswise with the specified chunk.\n *\n * @since 2.0.0\n * @category elements\n */\nconst cartesian = /*#__PURE__*/dual(2, (self, that) => cartesianWith(self, that, (a, b) => [a, b]));\n\nexport { append, appendAll, appendAllNonEmpty, cartesian, cartesianWith, chop, chopNonEmpty, chunksOf, chunksOfNonEmpty, compact, contains, containsWith, copy, dedupe, dedupeAdjacent, dedupeAdjacentWith, dedupeNonEmpty, dedupeNonEmptyWith, dedupeWith, difference, differenceWith, drop, dropRight, dropWhile, empty, every, extend, filter, filterMap, filterMapWhile, findFirst, findFirstIndex, findLast, findLastIndex, flatMap, flatMapNonEmpty, flatMapNullable, flatten, flattenNonEmpty, forEach, fromIterable, fromNullable, fromOption, fromRecord, get, getEquivalence, getOrder, group, groupBy, groupWith, head, headNonEmpty, init, initNonEmpty, insertAt, intersection, intersectionWith, intersperse, intersperseNonEmpty, isEmptyArray, isEmptyReadonlyArray, isNonEmptyArray, isNonEmptyReadonlyArray, join, last, lastNonEmpty, length, liftEither, liftNullable, liftOption, liftPredicate, make, makeBy, map, mapAccum, match, matchLeft, matchRight, max, min, modify, modifyNonEmptyHead, modifyNonEmptyLast, modifyOption, of, partition, partitionMap, prepend, prependAll, prependAllNonEmpty, range, reduce, reduceRight, remove, replace, replaceOption, replicate, reverse, reverseNonEmpty, rotate, rotateNonEmpty, scan, scanRight, separate, setNonEmptyHead, setNonEmptyLast, some, sort, sortBy, sortByNonEmpty, sortNonEmpty, sortWith, span, splitAt, splitNonEmptyAt, tail, tailNonEmpty, take, takeRight, takeWhile, unappend, unfold, union, unionNonEmpty, unionNonEmptyWith, unionWith, unprepend, unsafeGet, unzip, unzipNonEmpty, zip, zipNonEmpty, zipNonEmptyWith, zipWith };\n","/** @internal */\nconst SIZE = 5;\n\n/** @internal */\nconst BUCKET_SIZE = /*#__PURE__*/Math.pow(2, SIZE);\n\n/** @internal */\nconst MASK = BUCKET_SIZE - 1;\n\n/** @internal */\nconst MAX_INDEX_NODE = BUCKET_SIZE / 2;\n\n/** @internal */\nconst MIN_ARRAY_NODE = BUCKET_SIZE / 4;\n\nexport { BUCKET_SIZE, MASK, MAX_INDEX_NODE, MIN_ARRAY_NODE, SIZE };\n","import { MASK } from './config.esm.js';\n\n/**\n * Hamming weight.\n *\n * Taken from: http://jsperf.com/hamming-weight\n *\n * @internal\n */\nfunction popcount(x) {\n  x -= x >> 1 & 0x55555555;\n  x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n  x = x + (x >> 4) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n}\n\n/** @internal */\nfunction hashFragment(shift, h) {\n  return h >>> shift & MASK;\n}\n\n/** @internal */\nfunction toBitmap(x) {\n  return 1 << x;\n}\n\n/** @internal */\nfunction fromBitmap(bitmap, bit) {\n  return popcount(bitmap & bit - 1);\n}\n\nexport { fromBitmap, hashFragment, popcount, toBitmap };\n","/** @internal */\nfunction arrayUpdate(mutate, at, v, arr) {\n  let out = arr;\n  if (!mutate) {\n    const len = arr.length;\n    out = new Array(len);\n    for (let i = 0; i < len; ++i) out[i] = arr[i];\n  }\n  out[at] = v;\n  return out;\n}\n\n/** @internal */\nfunction arraySpliceOut(mutate, at, arr) {\n  const newLen = arr.length - 1;\n  let i = 0;\n  let g = 0;\n  let out = arr;\n  if (mutate) {\n    i = g = at;\n  } else {\n    out = new Array(newLen);\n    while (i < at) out[g++] = arr[i++];\n  }\n  ++i;\n  while (i <= newLen) out[g++] = arr[i++];\n  if (mutate) {\n    out.length = newLen;\n  }\n  return out;\n}\n\n/** @internal */\nfunction arraySpliceIn(mutate, at, v, arr) {\n  const len = arr.length;\n  if (mutate) {\n    let i = len;\n    while (i >= at) arr[i--] = arr[i];\n    arr[at] = v;\n    return arr;\n  }\n  let i = 0,\n    g = 0;\n  const out = new Array(len + 1);\n  while (i < at) out[g++] = arr[i++];\n  out[at] = v;\n  while (i < len) out[++g] = arr[i++];\n  return out;\n}\n\nexport { arraySpliceIn, arraySpliceOut, arrayUpdate };\n","/** @internal */\nclass Stack {\n  constructor(value, previous) {\n    this.value = value;\n    this.previous = previous;\n  }\n}\n\nexport { Stack };\n","import { equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { arraySpliceOut, arrayUpdate, arraySpliceIn } from './array.esm.js';\nimport { hashFragment, toBitmap, fromBitmap } from './bitwise.esm.js';\nimport { SIZE, MAX_INDEX_NODE, MIN_ARRAY_NODE } from './config.esm.js';\nimport { Stack } from '../Stack.esm.js';\nimport { none, isNone } from '../../Option/dist/effect-Option.esm.js';\nimport { isTagged } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nclass EmptyNode {\n  _tag = \"EmptyNode\";\n  modify(edit, _shift, f, hash, key, size) {\n    const v = f(none());\n    if (isNone(v)) return new EmptyNode();\n    ++size.value;\n    return new LeafNode(edit, hash, key, v);\n  }\n}\n\n/** @internal */\nfunction isEmptyNode(a) {\n  return isTagged(a, \"EmptyNode\");\n}\n\n/** @internal */\nfunction isLeafNode(node) {\n  return isEmptyNode(node) || node._tag === \"LeafNode\" || node._tag === \"CollisionNode\";\n}\n\n/** @internal */\nfunction canEditNode(node, edit) {\n  return isEmptyNode(node) ? false : edit === node.edit;\n}\n\n/** @internal */\nclass LeafNode {\n  _tag = \"LeafNode\";\n  constructor(edit, hash, key, value) {\n    this.edit = edit;\n    this.hash = hash;\n    this.key = key;\n    this.value = value;\n  }\n  modify(edit, shift, f, hash, key, size) {\n    if (equals(key, this.key)) {\n      const v = f(this.value);\n      if (v === this.value) return this;else if (isNone(v)) {\n        --size.value;\n        return new EmptyNode();\n      }\n      if (canEditNode(this, edit)) {\n        this.value = v;\n        return this;\n      }\n      return new LeafNode(edit, hash, key, v);\n    }\n    const v = f(none());\n    if (isNone(v)) return this;\n    ++size.value;\n    return mergeLeaves(edit, shift, this.hash, this, hash, new LeafNode(edit, hash, key, v));\n  }\n}\n\n/** @internal */\nclass CollisionNode {\n  _tag = \"CollisionNode\";\n  constructor(edit, hash, children) {\n    this.edit = edit;\n    this.hash = hash;\n    this.children = children;\n  }\n  modify(edit, shift, f, hash, key, size) {\n    if (hash === this.hash) {\n      const canEdit = canEditNode(this, edit);\n      const list = this.updateCollisionList(canEdit, edit, this.hash, this.children, f, key, size);\n      if (list === this.children) return this;\n      return list.length > 1 ? new CollisionNode(edit, this.hash, list) : list[0]; // collapse single element collision list\n    }\n\n    const v = f(none());\n    if (isNone(v)) return this;\n    ++size.value;\n    return mergeLeaves(edit, shift, this.hash, this, hash, new LeafNode(edit, hash, key, v));\n  }\n  updateCollisionList(mutate, edit, hash, list, f, key, size) {\n    const len = list.length;\n    for (let i = 0; i < len; ++i) {\n      const child = list[i];\n      if (\"key\" in child && equals(key, child.key)) {\n        const value = child.value;\n        const newValue = f(value);\n        if (newValue === value) return list;\n        if (isNone(newValue)) {\n          --size.value;\n          return arraySpliceOut(mutate, i, list);\n        }\n        return arrayUpdate(mutate, i, new LeafNode(edit, hash, key, newValue), list);\n      }\n    }\n    const newValue = f(none());\n    if (isNone(newValue)) return list;\n    ++size.value;\n    return arrayUpdate(mutate, len, new LeafNode(edit, hash, key, newValue), list);\n  }\n}\n\n/** @internal */\nclass IndexedNode {\n  _tag = \"IndexedNode\";\n  constructor(edit, mask, children) {\n    this.edit = edit;\n    this.mask = mask;\n    this.children = children;\n  }\n  modify(edit, shift, f, hash, key, size) {\n    const mask = this.mask;\n    const children = this.children;\n    const frag = hashFragment(shift, hash);\n    const bit = toBitmap(frag);\n    const indx = fromBitmap(mask, bit);\n    const exists = mask & bit;\n    const canEdit = canEditNode(this, edit);\n    if (!exists) {\n      const _newChild = new EmptyNode().modify(edit, shift + SIZE, f, hash, key, size);\n      if (!_newChild) return this;\n      return children.length >= MAX_INDEX_NODE ? expand(edit, frag, _newChild, mask, children) : new IndexedNode(edit, mask | bit, arraySpliceIn(canEdit, indx, _newChild, children));\n    }\n    const current = children[indx];\n    const child = current.modify(edit, shift + SIZE, f, hash, key, size);\n    if (current === child) return this;\n    let bitmap = mask;\n    let newChildren;\n    if (isEmptyNode(child)) {\n      // remove\n      bitmap &= ~bit;\n      if (!bitmap) return new EmptyNode();\n      if (children.length <= 2 && isLeafNode(children[indx ^ 1])) {\n        return children[indx ^ 1]; // collapse\n      }\n\n      newChildren = arraySpliceOut(canEdit, indx, children);\n    } else {\n      // modify\n      newChildren = arrayUpdate(canEdit, indx, child, children);\n    }\n    if (canEdit) {\n      this.mask = bitmap;\n      this.children = newChildren;\n      return this;\n    }\n    return new IndexedNode(edit, bitmap, newChildren);\n  }\n}\n\n/** @internal */\nclass ArrayNode {\n  _tag = \"ArrayNode\";\n  constructor(edit, size, children) {\n    this.edit = edit;\n    this.size = size;\n    this.children = children;\n  }\n  modify(edit, shift, f, hash, key, size) {\n    let count = this.size;\n    const children = this.children;\n    const frag = hashFragment(shift, hash);\n    const child = children[frag];\n    const newChild = (child || new EmptyNode()).modify(edit, shift + SIZE, f, hash, key, size);\n    if (child === newChild) return this;\n    const canEdit = canEditNode(this, edit);\n    let newChildren;\n    if (isEmptyNode(child) && !isEmptyNode(newChild)) {\n      ++count;\n      newChildren = arrayUpdate(canEdit, frag, newChild, children);\n    } else if (!isEmptyNode(child) && isEmptyNode(newChild)) {\n      --count;\n      if (count <= MIN_ARRAY_NODE) {\n        return pack(edit, count, frag, children);\n      }\n      newChildren = arrayUpdate(canEdit, frag, new EmptyNode(), children);\n    } else {\n      // modify\n      newChildren = arrayUpdate(canEdit, frag, newChild, children);\n    }\n    if (canEdit) {\n      this.size = count;\n      this.children = newChildren;\n      return this;\n    }\n    return new ArrayNode(edit, count, newChildren);\n  }\n}\nfunction pack(edit, count, removed, elements) {\n  const children = new Array(count - 1);\n  let g = 0;\n  let bitmap = 0;\n  for (let i = 0, len = elements.length; i < len; ++i) {\n    if (i !== removed) {\n      const elem = elements[i];\n      if (elem && !isEmptyNode(elem)) {\n        children[g++] = elem;\n        bitmap |= 1 << i;\n      }\n    }\n  }\n  return new IndexedNode(edit, bitmap, children);\n}\nfunction expand(edit, frag, child, bitmap, subNodes) {\n  const arr = [];\n  let bit = bitmap;\n  let count = 0;\n  for (let i = 0; bit; ++i) {\n    if (bit & 1) arr[i] = subNodes[count++];\n    bit >>>= 1;\n  }\n  arr[frag] = child;\n  return new ArrayNode(edit, count + 1, arr);\n}\nfunction mergeLeavesInner(edit, shift, h1, n1, h2, n2) {\n  if (h1 === h2) return new CollisionNode(edit, h1, [n2, n1]);\n  const subH1 = hashFragment(shift, h1);\n  const subH2 = hashFragment(shift, h2);\n  if (subH1 === subH2) {\n    return child => new IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), [child]);\n  } else {\n    const children = subH1 < subH2 ? [n1, n2] : [n2, n1];\n    return new IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), children);\n  }\n}\nfunction mergeLeaves(edit, shift, h1, n1, h2, n2) {\n  let stack = undefined;\n  let currentShift = shift;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const res = mergeLeavesInner(edit, currentShift, h1, n1, h2, n2);\n    if (typeof res === \"function\") {\n      stack = new Stack(res, stack);\n      currentShift = currentShift + SIZE;\n    } else {\n      let final = res;\n      while (stack != null) {\n        final = stack.value(final);\n        stack = stack.previous;\n      }\n      return final;\n    }\n  }\n}\n\nexport { ArrayNode, CollisionNode, EmptyNode, IndexedNode, LeafNode, canEditNode, isEmptyNode, isLeafNode };\n","import { equals, symbol as symbol$1 } from '../Equal/dist/effect-Equal.esm.js';\nimport { dual, pipe, identity } from '../Function/dist/effect-Function.esm.js';\nimport { hash, symbol, combine } from '../Hash/dist/effect-Hash.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { hashFragment, fromBitmap, toBitmap } from './HashMap/bitwise.esm.js';\nimport { SIZE } from './HashMap/config.esm.js';\nimport { isEmptyNode, EmptyNode } from './HashMap/node.esm.js';\nimport { none, isNone, isSome, some, map as map$1 } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst HashMapTypeId = /*#__PURE__*/Symbol.for(\"effect/HashMap\");\n\n/** @internal */\n\nconst HashMapProto = {\n  [HashMapTypeId]: HashMapTypeId,\n  [Symbol.iterator]() {\n    return new HashMapIterator(this, (k, v) => [k, v]);\n  },\n  [symbol]() {\n    let hash$1 = hash(\"HashMap\");\n    for (const item of this) {\n      hash$1 ^= combine(hash(item[0]))(hash(item[1]));\n    }\n    return hash$1;\n  },\n  [symbol$1](that) {\n    if (isHashMap(that)) {\n      if (that._size !== this._size) {\n        return false;\n      }\n      for (const item of this) {\n        const elem = pipe(that, getHash(item[0], hash(item[0])));\n        if (isNone(elem)) {\n          return false;\n        } else {\n          if (!equals(item[1], elem.value)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"HashMap\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst makeImpl = (editable, edit, root, size) => {\n  const map = Object.create(HashMapProto);\n  map._editable = editable;\n  map._edit = edit;\n  map._root = root;\n  map._size = size;\n  return map;\n};\nclass HashMapIterator {\n  constructor(map, f) {\n    this.map = map;\n    this.f = f;\n    this.v = visitLazy(this.map._root, this.f, undefined);\n  }\n  next() {\n    if (isNone(this.v)) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n    const v0 = this.v.value;\n    this.v = applyCont(v0.cont);\n    return {\n      done: false,\n      value: v0.value\n    };\n  }\n  [Symbol.iterator]() {\n    return new HashMapIterator(this.map, this.f);\n  }\n}\nconst applyCont = cont => cont ? visitLazyChildren(cont[0], cont[1], cont[2], cont[3], cont[4]) : none();\nconst visitLazy = (node, f, cont = undefined) => {\n  switch (node._tag) {\n    case \"LeafNode\":\n      {\n        if (isSome(node.value)) {\n          return some({\n            value: f(node.key, node.value.value),\n            cont\n          });\n        }\n        return applyCont(cont);\n      }\n    case \"CollisionNode\":\n    case \"ArrayNode\":\n    case \"IndexedNode\":\n      {\n        const children = node.children;\n        return visitLazyChildren(children.length, children, 0, f, cont);\n      }\n    default:\n      {\n        return applyCont(cont);\n      }\n  }\n};\nconst visitLazyChildren = (len, children, i, f, cont) => {\n  while (i < len) {\n    const child = children[i++];\n    if (child && !isEmptyNode(child)) {\n      return visitLazy(child, f, [len, children, i, f, cont]);\n    }\n  }\n  return applyCont(cont);\n};\nconst _empty = /*#__PURE__*/makeImpl(false, 0, /*#__PURE__*/new EmptyNode(), 0);\n\n/** @internal */\nconst empty = () => _empty;\n\n/** @internal */\nconst make = (...entries) => fromIterable(entries);\n\n/** @internal */\nconst fromIterable = entries => {\n  const map = beginMutation(empty());\n  for (const entry of entries) {\n    set(entry[0], entry[1])(map);\n  }\n  return endMutation(map);\n};\n\n/** @internal */\nconst isHashMap = u => hasProperty(u, HashMapTypeId);\n\n/** @internal */\nconst isEmpty = self => self && isEmptyNode(self._root);\n\n/** @internal */\nconst get = /*#__PURE__*/dual(2, (self, key) => getHash(self, key, hash(key)));\n\n/** @internal */\nconst getHash = /*#__PURE__*/dual(3, (self, key, hash) => {\n  let node = self._root;\n  let shift = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    switch (node._tag) {\n      case \"LeafNode\":\n        {\n          return equals(key, node.key) ? node.value : none();\n        }\n      case \"CollisionNode\":\n        {\n          if (hash === node.hash) {\n            const children = node.children;\n            for (let i = 0, len = children.length; i < len; ++i) {\n              const child = children[i];\n              if (\"key\" in child && equals(key, child.key)) {\n                return child.value;\n              }\n            }\n          }\n          return none();\n        }\n      case \"IndexedNode\":\n        {\n          const frag = hashFragment(shift, hash);\n          const bit = toBitmap(frag);\n          if (node.mask & bit) {\n            node = node.children[fromBitmap(node.mask, bit)];\n            shift += SIZE;\n            break;\n          }\n          return none();\n        }\n      case \"ArrayNode\":\n        {\n          node = node.children[hashFragment(shift, hash)];\n          if (node) {\n            shift += SIZE;\n            break;\n          }\n          return none();\n        }\n      default:\n        return none();\n    }\n  }\n});\n\n/** @internal */\nconst unsafeGet = /*#__PURE__*/dual(2, (self, key) => {\n  const element = getHash(self, key, hash(key));\n  if (isNone(element)) {\n    throw new Error(\"Error: Expected map to contain key\");\n  }\n  return element.value;\n});\n\n/** @internal */\nconst has = /*#__PURE__*/dual(2, (self, key) => isSome(getHash(self, key, hash(key))));\n\n/** @internal */\nconst hasHash = /*#__PURE__*/dual(3, (self, key, hash) => isSome(getHash(self, key, hash)));\n\n/** @internal */\nconst set = /*#__PURE__*/dual(3, (self, key, value) => modifyAt(self, key, () => some(value)));\n\n/** @internal */\nconst setTree = /*#__PURE__*/dual(3, (self, newRoot, newSize) => {\n  if (self._editable) {\n    self._root = newRoot;\n    self._size = newSize;\n    return self;\n  }\n  return newRoot === self._root ? self : makeImpl(self._editable, self._edit, newRoot, newSize);\n});\n\n/** @internal */\nconst keys = self => new HashMapIterator(self, key => key);\n\n/** @internal */\nconst values = self => new HashMapIterator(self, (_, value) => value);\n\n/** @internal */\nconst size = self => self._size;\n\n/** @internal */\nconst beginMutation = self => makeImpl(true, self._edit + 1, self._root, self._size);\n\n/** @internal */\nconst endMutation = self => {\n  self._editable = false;\n  return self;\n};\n\n/** @internal */\nconst mutate = /*#__PURE__*/dual(2, (self, f) => {\n  const transient = beginMutation(self);\n  f(transient);\n  return endMutation(transient);\n});\n\n/** @internal */\nconst modifyAt = /*#__PURE__*/dual(3, (self, key, f) => modifyHash(self, key, hash(key), f));\n\n/** @internal */\nconst modifyHash = /*#__PURE__*/dual(4, (self, key, hash, f) => {\n  const size = {\n    value: self._size\n  };\n  const newRoot = self._root.modify(self._editable ? self._edit : NaN, 0, f, hash, key, size);\n  return pipe(self, setTree(newRoot, size.value));\n});\n\n/** @internal */\nconst modify = /*#__PURE__*/dual(3, (self, key, f) => modifyAt(self, key, map$1(f)));\n\n/** @internal */\nconst union = /*#__PURE__*/dual(2, (self, that) => {\n  const result = beginMutation(self);\n  forEach(that, (v, k) => set(result, k, v));\n  return endMutation(result);\n});\n\n/** @internal */\nconst remove = /*#__PURE__*/dual(2, (self, key) => modifyAt(self, key, none));\n\n/** @internal */\nconst removeMany = /*#__PURE__*/dual(2, (self, keys) => mutate(self, map => {\n  for (const key of keys) {\n    remove(key)(map);\n  }\n}));\n\n/**\n * Maps over the entries of the `HashMap` using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = /*#__PURE__*/dual(2, (self, f) => reduce(self, empty(), (map, value, key) => set(map, key, f(value, key))));\n\n/** @internal */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => reduce(self, empty(), (zero, value, key) => mutate(zero, map => forEach(f(value, key), (value, key) => set(map, key, value)))));\n\n/** @internal */\nconst forEach = /*#__PURE__*/dual(2, (self, f) => reduce(self, void 0, (_, value, key) => f(value, key)));\n\n/** @internal */\nconst reduce = /*#__PURE__*/dual(3, (self, zero, f) => {\n  const root = self._root;\n  if (root._tag === \"LeafNode\") {\n    return isSome(root.value) ? f(zero, root.value.value, root.key) : zero;\n  }\n  if (root._tag === \"EmptyNode\") {\n    return zero;\n  }\n  const toVisit = [root.children];\n  let children;\n  while (children = toVisit.pop()) {\n    for (let i = 0, len = children.length; i < len;) {\n      const child = children[i++];\n      if (child && !isEmptyNode(child)) {\n        if (child._tag === \"LeafNode\") {\n          if (isSome(child.value)) {\n            zero = f(zero, child.value.value, child.key);\n          }\n        } else {\n          toVisit.push(child.children);\n        }\n      }\n    }\n  }\n  return zero;\n});\n\n/** @internal */\nconst filter = /*#__PURE__*/dual(2, (self, f) => mutate(empty(), map => {\n  for (const [k, a] of self) {\n    if (f(a, k)) {\n      set(map, k, a);\n    }\n  }\n}));\n\n/** @internal */\nconst compact = self => filterMap(self, identity);\n\n/** @internal */\nconst filterMap = /*#__PURE__*/dual(2, (self, f) => mutate(empty(), map => {\n  for (const [k, a] of self) {\n    const option = f(a, k);\n    if (isSome(option)) {\n      set(map, k, option.value);\n    }\n  }\n}));\n\n/** @internal */\nconst findFirst = /*#__PURE__*/dual(2, (self, predicate) => {\n  for (const ka of self) {\n    if (predicate(ka[0], ka[1])) {\n      return some(ka);\n    }\n  }\n  return none();\n});\n\nexport { HashMapTypeId, beginMutation, compact, empty, endMutation, filter, filterMap, findFirst, flatMap, forEach, fromIterable, get, getHash, has, hasHash, isEmpty, isHashMap, keys, make, map, modify, modifyAt, modifyHash, mutate, reduce, remove, removeMany, set, setTree, size, union, unsafeGet, values };\n","import { symbol as symbol$1, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { dual } from '../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { has as has$1, keys, size as size$1, beginMutation as beginMutation$1, set, remove as remove$1, forEach as forEach$1, reduce as reduce$1, empty as empty$1 } from './HashMap.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst HashSetTypeId = /*#__PURE__*/Symbol.for(\"effect/HashSet\");\n\n/** @internal */\n\nconst HashSetProto = {\n  [HashSetTypeId]: HashSetTypeId,\n  [Symbol.iterator]() {\n    return keys(this._keyMap);\n  },\n  [symbol]() {\n    return combine(hash(this._keyMap))(hash(\"HashSet\"));\n  },\n  [symbol$1](that) {\n    if (isHashSet(that)) {\n      return size$1(this._keyMap) === size$1(that._keyMap) && equals(this._keyMap, that._keyMap);\n    }\n    return false;\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"HashSet\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst makeImpl = keyMap => {\n  const set = Object.create(HashSetProto);\n  set._keyMap = keyMap;\n  return set;\n};\n\n/** @internal */\nconst isHashSet = u => hasProperty(u, HashSetTypeId);\nconst _empty = /*#__PURE__*/makeImpl( /*#__PURE__*/empty$1());\n\n/** @internal */\nconst empty = () => _empty;\n\n/** @internal */\nconst fromIterable = elements => {\n  const set = beginMutation(empty());\n  for (const value of elements) {\n    add(set, value);\n  }\n  return endMutation(set);\n};\n\n/** @internal */\nconst make = (...elements) => {\n  const set = beginMutation(empty());\n  for (const value of elements) {\n    add(set, value);\n  }\n  return endMutation(set);\n};\n\n/** @internal */\nconst has = /*#__PURE__*/dual(2, (self, value) => has$1(self._keyMap, value));\n\n/** @internal */\nconst some = /*#__PURE__*/dual(2, (self, f) => {\n  let found = false;\n  for (const value of self) {\n    found = f(value);\n    if (found) {\n      break;\n    }\n  }\n  return found;\n});\n\n/** @internal */\nconst every = /*#__PURE__*/dual(2, (self, refinement) => !some(self, a => !refinement(a)));\n\n/** @internal */\nconst isSubset = /*#__PURE__*/dual(2, (self, that) => every(self, value => has(that, value)));\n\n/** @internal */\nconst values = self => keys(self._keyMap);\n\n/** @internal */\nconst size = self => size$1(self._keyMap);\n\n/** @internal */\nconst beginMutation = self => makeImpl(beginMutation$1(self._keyMap));\n\n/** @internal */\nconst endMutation = self => {\n  self._keyMap._editable = false;\n  return self;\n};\n\n/** @internal */\nconst mutate = /*#__PURE__*/dual(2, (self, f) => {\n  const transient = beginMutation(self);\n  f(transient);\n  return endMutation(transient);\n});\n\n/** @internal */\nconst add = /*#__PURE__*/dual(2, (self, value) => self._keyMap._editable ? (set(value, true)(self._keyMap), self) : makeImpl(set(value, true)(self._keyMap)));\n\n/** @internal */\nconst remove = /*#__PURE__*/dual(2, (self, value) => self._keyMap._editable ? (remove$1(value)(self._keyMap), self) : makeImpl(remove$1(value)(self._keyMap)));\n\n/** @internal */\nconst difference = /*#__PURE__*/dual(2, (self, that) => mutate(self, set => {\n  for (const value of that) {\n    remove(set, value);\n  }\n}));\n\n/** @internal */\nconst intersection = /*#__PURE__*/dual(2, (self, that) => mutate(empty(), set => {\n  for (const value of that) {\n    if (has(value)(self)) {\n      add(value)(set);\n    }\n  }\n}));\n\n/** @internal */\nconst union = /*#__PURE__*/dual(2, (self, that) => mutate(empty(), set => {\n  forEach(self, value => add(set, value));\n  for (const value of that) {\n    add(set, value);\n  }\n}));\n\n/** @internal */\nconst toggle = /*#__PURE__*/dual(2, (self, value) => has(self, value) ? remove(self, value) : add(self, value));\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => mutate(empty(), set => {\n  forEach(self, a => {\n    const b = f(a);\n    if (!has(set, b)) {\n      add(set, b);\n    }\n  });\n}));\n\n/** @internal */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => mutate(empty(), set => {\n  forEach(self, a => {\n    for (const b of f(a)) {\n      if (!has(set, b)) {\n        add(set, b);\n      }\n    }\n  });\n}));\n\n/** @internal */\nconst forEach = /*#__PURE__*/dual(2, (self, f) => forEach$1(self._keyMap, (_, k) => f(k)));\n\n/** @internal */\nconst reduce = /*#__PURE__*/dual(3, (self, zero, f) => reduce$1(self._keyMap, zero, (z, _, a) => f(z, a)));\n\n/** @internal */\nconst filter = /*#__PURE__*/dual(2, (self, f) => {\n  return mutate(empty(), set => {\n    const iterator = values(self);\n    let next;\n    while (!(next = iterator.next()).done) {\n      const value = next.value;\n      if (f(value)) {\n        add(set, value);\n      }\n    }\n  });\n});\n\n/** @internal */\nconst partition = /*#__PURE__*/dual(2, (self, f) => {\n  const iterator = values(self);\n  let next;\n  const right = beginMutation(empty());\n  const left = beginMutation(empty());\n  while (!(next = iterator.next()).done) {\n    const value = next.value;\n    if (f(value)) {\n      add(right, value);\n    } else {\n      add(left, value);\n    }\n  }\n  return [endMutation(left), endMutation(right)];\n});\n\nexport { HashSetTypeId, add, beginMutation, difference, empty, endMutation, every, filter, flatMap, forEach, fromIterable, has, intersection, isHashSet, isSubset, make, makeImpl, map, mutate, partition, reduce, remove, size, some, toggle, union, values };\n","import { isHashSet as isHashSet$1, empty as empty$1, fromIterable as fromIterable$1, make as make$1, has as has$1, some as some$1, every as every$1, isSubset as isSubset$1, values as values$1, size as size$1, beginMutation as beginMutation$1, endMutation as endMutation$1, mutate as mutate$1, add as add$1, remove as remove$1, difference as difference$1, intersection as intersection$1, union as union$1, toggle as toggle$1, map as map$1, flatMap as flatMap$1, forEach as forEach$1, reduce as reduce$1, filter as filter$1, partition as partition$1 } from '../../internal/HashSet.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isHashSet = isHashSet$1;\n\n/**\n * Creates an empty `HashSet`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Construct a new `HashSet` from a `Collection` of values\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = fromIterable$1;\n\n/**\n * Construct a new `HashSet` from a variable number of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Checks if the specified value exists in the `HashSet`.\n *\n * @since 2.0.0\n * @category elements\n */\nconst has = has$1;\n\n/**\n * Check if a predicate holds true for some `HashSet` element.\n *\n * @since 2.0.0\n * @category elements\n */\nconst some = some$1;\n\n/**\n * Check if a predicate holds true for every `HashSet` element.\n *\n * @since 2.0.0\n * @category elements\n */\nconst every = every$1;\n\n/**\n * Returns `true` if and only if every element in the this `HashSet` is an\n * element of the second set,\n *\n * **NOTE**: the hash and equal of both sets must be the same.\n *\n * @since 2.0.0\n * @category elements\n */\nconst isSubset = isSubset$1;\n\n/**\n * Returns an `IterableIterator` of the values in the `HashSet`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst values = values$1;\n\n/**\n * Calculates the number of values in the `HashSet`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst size = size$1;\n\n/**\n * Marks the `HashSet` as mutable.\n *\n * @since 2.0.0\n */\nconst beginMutation = beginMutation$1;\n\n/**\n * Marks the `HashSet` as immutable.\n *\n * @since 2.0.0\n */\nconst endMutation = endMutation$1;\n\n/**\n * Mutates the `HashSet` within the context of the provided function.\n *\n * @since 2.0.0\n */\nconst mutate = mutate$1;\n\n/**\n * Adds a value to the `HashSet`.\n *\n * @since 2.0.0\n */\nconst add = add$1;\n\n/**\n * Removes a value from the `HashSet`.\n *\n * @since 2.0.0\n */\nconst remove = remove$1;\n\n/**\n * Computes the set difference between this `HashSet` and the specified\n * `Iterable<A>`.\n *\n * **NOTE**: the hash and equal of the values in both the set and the iterable\n * must be the same.\n *\n * @since 2.0.0\n */\nconst difference = difference$1;\n\n/**\n * Returns a `HashSet` of values which are present in both this set and that\n * `Iterable<A>`.\n *\n * **NOTE**: the hash and equal of the values in both the set and the iterable\n * must be the same.\n *\n * @since 2.0.0\n */\nconst intersection = intersection$1;\n\n/**\n * Computes the set union `(`self` + `that`)` between this `HashSet` and the\n * specified `Iterable<A>`.\n *\n * **NOTE**: the hash and equal of the values in both the set and the iterable\n * must be the same.\n *\n * @since 2.0.0\n */\nconst union = union$1;\n\n/**\n * Checks if a value is present in the `HashSet`. If it is present, the value\n * will be removed from the `HashSet`, otherwise the value will be added to the\n * `HashSet`.\n *\n * @since 2.0.0\n */\nconst toggle = toggle$1;\n\n/**\n * Maps over the values of the `HashSet` using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = map$1;\n\n/**\n * Chains over the values of the `HashSet` using the specified function.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = flatMap$1;\n\n/**\n * Applies the specified function to the values of the `HashSet`.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst forEach = forEach$1;\n\n/**\n * Reduces the specified state over the values of the `HashSet`.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduce = reduce$1;\n\n/**\n * Filters values out of a `HashSet` using the specified predicate.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filter = filter$1;\n\n/**\n * Partition the values of a `HashSet` using the specified predicate.\n *\n * If a value matches the predicate, it will be placed into the `HashSet` on the\n * right side of the resulting `Tuple`, otherwise the value will be placed into\n * the left side.\n *\n * @since 2.0.0\n * @category partitioning\n */\nconst partition = partition$1;\n\nexport { add, beginMutation, difference, empty, endMutation, every, filter, flatMap, forEach, fromIterable, has, intersection, isHashSet, isSubset, make, map, mutate, partition, reduce, remove, size, some, toggle, union, values };\n","import { equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/MutableRef\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst MutableRefProto = {\n  [TypeId]: TypeId,\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"MutableRef\",\n      current: toJSON(this.current)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = value => {\n  const ref = Object.create(MutableRefProto);\n  ref.current = value;\n  return ref;\n};\n\n/**\n * @since 2.0.0\n * @category general\n */\nconst compareAndSet = /*#__PURE__*/dual(3, (self, oldValue, newValue) => {\n  if (equals(oldValue, self.current)) {\n    self.current = newValue;\n    return true;\n  }\n  return false;\n});\n\n/**\n * @since 2.0.0\n * @category numeric\n */\nconst decrement = self => update(self, n => n - 1);\n\n/**\n * @since 2.0.0\n * @category numeric\n */\nconst decrementAndGet = self => updateAndGet(self, n => n - 1);\n\n/**\n * @since 2.0.0\n * @category general\n */\nconst get = self => self.current;\n\n/**\n * @since 2.0.0\n * @category numeric\n */\nconst getAndDecrement = self => getAndUpdate(self, n => n - 1);\n\n/**\n * @since 2.0.0\n * @category numeric\n */\nconst getAndIncrement = self => getAndUpdate(self, n => n + 1);\n\n/**\n * @since 2.0.0\n * @category general\n */\nconst getAndSet = /*#__PURE__*/dual(2, (self, value) => {\n  const ret = self.current;\n  self.current = value;\n  return ret;\n});\n\n/**\n * @since 2.0.0\n * @category general\n */\nconst getAndUpdate = /*#__PURE__*/dual(2, (self, f) => getAndSet(self, f(get(self))));\n\n/**\n * @since 2.0.0\n * @category numeric\n */\nconst increment = self => update(self, n => n + 1);\n\n/**\n * @since 2.0.0\n * @category numeric\n */\nconst incrementAndGet = self => updateAndGet(self, n => n + 1);\n\n/**\n * @since 2.0.0\n * @category general\n */\nconst set = /*#__PURE__*/dual(2, (self, value) => {\n  self.current = value;\n  return self;\n});\n\n/**\n * @since 2.0.0\n * @category general\n */\nconst setAndGet = /*#__PURE__*/dual(2, (self, value) => {\n  self.current = value;\n  return self.current;\n});\n\n/**\n * @since 2.0.0\n * @category general\n */\nconst update = /*#__PURE__*/dual(2, (self, f) => set(self, f(get(self))));\n\n/**\n * @since 2.0.0\n * @category general\n */\nconst updateAndGet = /*#__PURE__*/dual(2, (self, f) => setAndGet(self, f(get(self))));\n\n/**\n * @since 2.0.0\n * @category boolean\n */\nconst toggle = self => update(self, _ => !_);\n\nexport { compareAndSet, decrement, decrementAndGet, get, getAndDecrement, getAndIncrement, getAndSet, getAndUpdate, increment, incrementAndGet, make, set, setAndGet, toggle, update, updateAndGet };\n","import { symbol as symbol$1, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { pipe, dual } from '../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { symbol, combine as combine$1, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { every, reduce, union, make as make$1, empty, size } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { toString, NodeInspectSymbol, toJSON } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { get, set, make as make$2 } from '../MutableRef/dist/effect-MutableRef.esm.js';\nimport { none as none$1, some } from '../Option/dist/effect-Option.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst FiberIdSymbolKey = \"effect/FiberId\";\n\n/** @internal */\nconst FiberIdTypeId = /*#__PURE__*/Symbol.for(FiberIdSymbolKey);\n\n/** @internal */\nconst OP_NONE = \"None\";\n\n/** @internal */\n\n/** @internal */\nconst OP_RUNTIME = \"Runtime\";\n\n/** @internal */\n\n/** @internal */\nconst OP_COMPOSITE = \"Composite\";\n\n/** @internal */\n\n/** @internal */\nclass None {\n  [FiberIdTypeId] = FiberIdTypeId;\n  _tag = OP_NONE;\n  [symbol]() {\n    return pipe(hash(FiberIdSymbolKey), combine$1(hash(this._tag)));\n  }\n  [symbol$1](that) {\n    return isFiberId(that) && that._tag === OP_NONE;\n  }\n  toString() {\n    return toString(this.toJSON());\n  }\n  toJSON() {\n    return {\n      _id: \"FiberId\",\n      _tag: this._tag\n    };\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n\n/** @internal */\nclass Runtime {\n  [FiberIdTypeId] = FiberIdTypeId;\n  _tag = OP_RUNTIME;\n  constructor(id, startTimeMillis) {\n    this.id = id;\n    this.startTimeMillis = startTimeMillis;\n  }\n  [symbol]() {\n    return pipe(hash(FiberIdSymbolKey), combine$1(hash(this._tag)), combine$1(hash(this.id)), combine$1(hash(this.startTimeMillis)));\n  }\n  [symbol$1](that) {\n    return isFiberId(that) && that._tag === OP_RUNTIME && this.id === that.id && this.startTimeMillis === that.startTimeMillis;\n  }\n  toString() {\n    return toString(this.toJSON());\n  }\n  toJSON() {\n    return {\n      _id: \"FiberId\",\n      _tag: this._tag,\n      id: this.id,\n      startTimeMillis: this.startTimeMillis\n    };\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n\n/** @internal */\nclass Composite {\n  [FiberIdTypeId] = FiberIdTypeId;\n  _tag = OP_COMPOSITE;\n  constructor(left, right) {\n    this.left = left;\n    this.right = right;\n  }\n  [symbol]() {\n    return pipe(hash(FiberIdSymbolKey), combine$1(hash(this._tag)), combine$1(hash(this.left)), combine$1(hash(this.right)));\n  }\n  [symbol$1](that) {\n    return isFiberId(that) && that._tag === OP_COMPOSITE && equals(this.left, that.left) && equals(this.right, that.right);\n  }\n  toString() {\n    return toString(this.toJSON());\n  }\n  toJSON() {\n    return {\n      _id: \"FiberId\",\n      _tag: this._tag,\n      left: toJSON(this.left),\n      right: toJSON(this.right)\n    };\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n\n/** @internal */\nconst none = /*#__PURE__*/new None();\n\n/** @internal */\nconst runtime = (id, startTimeMillis) => {\n  return new Runtime(id, startTimeMillis);\n};\n\n/** @internal */\nconst composite = (left, right) => {\n  return new Composite(left, right);\n};\n\n/** @internal */\nconst isFiberId = self => hasProperty(self, FiberIdTypeId);\n\n/** @internal */\nconst isNone = self => {\n  return self._tag === OP_NONE || pipe(toSet(self), every(id => isNone(id)));\n};\n\n/** @internal */\nconst isRuntime = self => {\n  return self._tag === OP_RUNTIME;\n};\n\n/** @internal */\nconst isComposite = self => {\n  return self._tag === OP_COMPOSITE;\n};\n\n/** @internal */\nconst combine = /*#__PURE__*/dual(2, (self, that) => {\n  if (self._tag === OP_NONE) {\n    return that;\n  }\n  if (that._tag === OP_NONE) {\n    return self;\n  }\n  return new Composite(self, that);\n});\n\n/** @internal */\nconst combineAll = fiberIds => {\n  return pipe(fiberIds, reduce(none, (a, b) => combine(b)(a)));\n};\n\n/** @internal */\nconst getOrElse = /*#__PURE__*/dual(2, (self, that) => isNone(self) ? that : self);\n\n/** @internal */\nconst ids = self => {\n  switch (self._tag) {\n    case OP_NONE:\n      {\n        return empty();\n      }\n    case OP_RUNTIME:\n      {\n        return make$1(self.id);\n      }\n    case OP_COMPOSITE:\n      {\n        return pipe(ids(self.left), union(ids(self.right)));\n      }\n  }\n};\nconst _fiberCounter = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Fiber/Id/_fiberCounter\"), () => make$2(0));\n\n/** @internal */\nconst make = (id, startTimeSeconds) => {\n  return new Runtime(id, startTimeSeconds);\n};\n\n/** @internal */\nconst threadName = self => {\n  const identifiers = Array.from(ids(self)).map(n => `#${n}`).join(\",\");\n  return identifiers;\n};\n\n/** @internal */\nconst toOption = self => {\n  const fiberIds = toSet(self);\n  if (size(fiberIds) === 0) {\n    return none$1();\n  }\n  let first = true;\n  let acc;\n  for (const fiberId of fiberIds) {\n    if (first) {\n      acc = fiberId;\n      first = false;\n    } else {\n      // @ts-expect-error\n      acc = pipe(acc, combine(fiberId));\n    }\n  }\n  // @ts-expect-error\n  return some(acc);\n};\n\n/** @internal */\nconst toSet = self => {\n  switch (self._tag) {\n    case OP_NONE:\n      {\n        return empty();\n      }\n    case OP_RUNTIME:\n      {\n        return make$1(self);\n      }\n    case OP_COMPOSITE:\n      {\n        return pipe(toSet(self.left), union(toSet(self.right)));\n      }\n  }\n};\n\n/** @internal */\nconst unsafeMake = () => {\n  const id = get(_fiberCounter);\n  pipe(_fiberCounter, set(id + 1));\n  return new Runtime(id, new Date().getTime());\n};\n\nexport { FiberIdTypeId, combine, combineAll, composite, getOrElse, ids, isComposite, isFiberId, isNone, isRuntime, make, none, runtime, threadName, toOption, toSet, unsafeMake };\n","import { FiberIdTypeId as FiberIdTypeId$1, none as none$1, runtime as runtime$1, composite as composite$1, isFiberId as isFiberId$1, isNone as isNone$1, isRuntime as isRuntime$1, isComposite as isComposite$1, combine as combine$1, combineAll as combineAll$1, getOrElse as getOrElse$1, ids as ids$1, make as make$1, threadName as threadName$1, toOption as toOption$1, toSet as toSet$1, unsafeMake as unsafeMake$1 } from '../../internal/fiberId.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst FiberIdTypeId = FiberIdTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst none = none$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst runtime = runtime$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst composite = composite$1;\n\n/**\n * Returns `true` if the specified unknown value is a `FiberId`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isFiberId = isFiberId$1;\n\n/**\n * Returns `true` if the `FiberId` is a `None`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isNone = isNone$1;\n\n/**\n * Returns `true` if the `FiberId` is a `Runtime`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isRuntime = isRuntime$1;\n\n/**\n * Returns `true` if the `FiberId` is a `Composite`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isComposite = isComposite$1;\n\n/**\n * Combine two `FiberId`s.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst combine = combine$1;\n\n/**\n * Combines a set of `FiberId`s into a single `FiberId`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst combineAll = combineAll$1;\n\n/**\n * Returns this `FiberId` if it is not `None`, otherwise returns that `FiberId`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst getOrElse = getOrElse$1;\n\n/**\n * Get the set of identifiers for this `FiberId`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst ids = ids$1;\n\n/**\n * Creates a new `FiberId`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Creates a string representing the name of the current thread of execution\n * represented by the specified `FiberId`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst threadName = threadName$1;\n\n/**\n * Convert a `FiberId` into an `Option<FiberId>`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst toOption = toOption$1;\n\n/**\n * Convert a `FiberId` into a `HashSet<FiberId>`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst toSet = toSet$1;\n\n/**\n * Unsafely creates a new `FiberId`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeMake = unsafeMake$1;\n\nexport { FiberIdTypeId, combine, combineAll, composite, getOrElse, ids, isComposite, isFiberId, isNone, isRuntime, make, none, runtime, threadName, toOption, toSet, unsafeMake };\n","/** @internal */\nconst OP_DIE = \"Die\";\n\n/** @internal */\n\n/** @internal */\nconst OP_EMPTY = \"Empty\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FAIL = \"Fail\";\n\n/** @internal */\n\n/** @internal */\nconst OP_INTERRUPT = \"Interrupt\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PARALLEL = \"Parallel\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SEQUENTIAL = \"Sequential\";\n\n/** @internal */\n\nexport { OP_DIE, OP_EMPTY, OP_FAIL, OP_INTERRUPT, OP_PARALLEL, OP_SEQUENTIAL };\n","import { reverse, empty as empty$1, prepend, of, isNonEmpty, appendAll, headNonEmpty, head, isEmpty as isEmpty$1 } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { left, right } from '../Either/dist/effect-Either.esm.js';\nimport { equals, symbol as symbol$1 } from '../Equal/dist/effect-Equal.esm.js';\nimport { ids } from '../FiberId/dist/effect-FiberId.esm.js';\nimport { pipe, dual, identity, constTrue, constFalse } from '../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { empty as empty$2, add, make, flatMap as flatMap$1, map as map$2, union, size as size$1 } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { toJSON, NodeInspectSymbol } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { none, some, isSome, map as map$1, isNone, match as match$1, getOrUndefined } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty, isFunction } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { reduce as reduce$1 } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\nimport { OP_EMPTY, OP_FAIL, OP_DIE, OP_INTERRUPT, OP_PARALLEL, OP_SEQUENTIAL } from './opCodes/cause.esm.js';\n\n// -----------------------------------------------------------------------------\n// Models\n// -----------------------------------------------------------------------------\n/** @internal */\nconst CauseSymbolKey = \"effect/Cause\";\n\n/** @internal */\nconst CauseTypeId = /*#__PURE__*/Symbol.for(CauseSymbolKey);\n\n/** @internal */\nconst variance = {\n  _E: _ => _\n};\n\n/** @internal */\nconst proto = {\n  [CauseTypeId]: variance,\n  [symbol]() {\n    return pipe(hash(CauseSymbolKey), combine(hash(flattenCause(this))));\n  },\n  [symbol$1](that) {\n    return isCause(that) && causeEquals(this, that);\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  toJSON() {\n    switch (this._tag) {\n      case \"Empty\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag\n        };\n      case \"Die\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag,\n          defect: toJSON(this.defect)\n        };\n      case \"Interrupt\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag,\n          fiberId: this.fiberId.toJSON()\n        };\n      case \"Fail\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag,\n          failure: toJSON(this.error)\n        };\n      case \"Sequential\":\n      case \"Parallel\":\n        return {\n          _id: \"Cause\",\n          _tag: this._tag,\n          left: toJSON(this.left),\n          right: toJSON(this.right)\n        };\n    }\n  },\n  toString() {\n    return pretty(this);\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Constructors\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst empty = /*#__PURE__*/(() => {\n  const o = /*#__PURE__*/Object.create(proto);\n  o._tag = OP_EMPTY;\n  return o;\n})();\n\n/** @internal */\nconst fail = error => {\n  const o = Object.create(proto);\n  o._tag = OP_FAIL;\n  o.error = error;\n  return o;\n};\n\n/** @internal */\nconst die = defect => {\n  const o = Object.create(proto);\n  o._tag = OP_DIE;\n  o.defect = defect;\n  return o;\n};\n\n/** @internal */\nconst interrupt = fiberId => {\n  const o = Object.create(proto);\n  o._tag = OP_INTERRUPT;\n  o.fiberId = fiberId;\n  return o;\n};\n\n/** @internal */\nconst parallel = (left, right) => {\n  const o = Object.create(proto);\n  o._tag = OP_PARALLEL;\n  o.left = left;\n  o.right = right;\n  return o;\n};\n\n/** @internal */\nconst sequential = (left, right) => {\n  const o = Object.create(proto);\n  o._tag = OP_SEQUENTIAL;\n  o.left = left;\n  o.right = right;\n  return o;\n};\n\n// -----------------------------------------------------------------------------\n// Refinements\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst isCause = u => hasProperty(u, CauseTypeId);\n\n/** @internal */\nconst isEmptyType = self => self._tag === OP_EMPTY;\n\n/** @internal */\nconst isFailType = self => self._tag === OP_FAIL;\n\n/** @internal */\nconst isDieType = self => self._tag === OP_DIE;\n\n/** @internal */\nconst isInterruptType = self => self._tag === OP_INTERRUPT;\n\n/** @internal */\nconst isSequentialType = self => self._tag === OP_SEQUENTIAL;\n\n/** @internal */\nconst isParallelType = self => self._tag === OP_PARALLEL;\n\n// -----------------------------------------------------------------------------\n// Getters\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst size = self => reduceWithContext(self, void 0, SizeCauseReducer);\n\n/** @internal */\nconst isEmpty = self => {\n  if (self._tag === OP_EMPTY) {\n    return true;\n  }\n  return reduce(self, true, (acc, cause) => {\n    switch (cause._tag) {\n      case OP_EMPTY:\n        {\n          return some(acc);\n        }\n      case OP_DIE:\n      case OP_FAIL:\n      case OP_INTERRUPT:\n        {\n          return some(false);\n        }\n      default:\n        {\n          return none();\n        }\n    }\n  });\n};\n\n/** @internal */\nconst isFailure = self => isSome(failureOption(self));\n\n/** @internal */\nconst isDie = self => isSome(dieOption(self));\n\n/** @internal */\nconst isInterrupted = self => isSome(interruptOption(self));\n\n/** @internal */\nconst isInterruptedOnly = self => reduceWithContext(undefined, IsInterruptedOnlyCauseReducer)(self);\n\n/** @internal */\nconst failures = self => reverse(reduce(self, empty$1(), (list, cause) => cause._tag === OP_FAIL ? some(pipe(list, prepend(cause.error))) : none()));\n\n/** @internal */\nconst defects = self => reverse(reduce(self, empty$1(), (list, cause) => cause._tag === OP_DIE ? some(pipe(list, prepend(cause.defect))) : none()));\n\n/** @internal */\nconst interruptors = self => reduce(self, empty$2(), (set, cause) => cause._tag === OP_INTERRUPT ? some(pipe(set, add(cause.fiberId))) : none());\n\n/** @internal */\nconst failureOption = self => find(self, cause => cause._tag === OP_FAIL ? some(cause.error) : none());\n\n/** @internal */\nconst failureOrCause = self => {\n  const option = failureOption(self);\n  switch (option._tag) {\n    case \"None\":\n      {\n        // no `E` inside this `Cause`, so it can be safely cast to `never`\n        return right(self);\n      }\n    case \"Some\":\n      {\n        return left(option.value);\n      }\n  }\n};\n\n/** @internal */\nconst dieOption = self => find(self, cause => cause._tag === OP_DIE ? some(cause.defect) : none());\n\n/** @internal */\nconst flipCauseOption = self => match(self, {\n  onEmpty: some(empty),\n  onFail: failureOption => pipe(failureOption, map$1(fail)),\n  onDie: defect => some(die(defect)),\n  onInterrupt: fiberId => some(interrupt(fiberId)),\n  onSequential: (left, right) => {\n    if (isSome(left) && isSome(right)) {\n      return some(sequential(left.value, right.value));\n    }\n    if (isNone(left) && isSome(right)) {\n      return some(right.value);\n    }\n    if (isSome(left) && isNone(right)) {\n      return some(left.value);\n    }\n    return none();\n  },\n  onParallel: (left, right) => {\n    if (isSome(left) && isSome(right)) {\n      return some(parallel(left.value, right.value));\n    }\n    if (isNone(left) && isSome(right)) {\n      return some(right.value);\n    }\n    if (isSome(left) && isNone(right)) {\n      return some(left.value);\n    }\n    return none();\n  }\n});\n\n/** @internal */\nconst interruptOption = self => find(self, cause => cause._tag === OP_INTERRUPT ? some(cause.fiberId) : none());\n\n/** @internal */\nconst keepDefects = self => match(self, {\n  onEmpty: none(),\n  onFail: () => none(),\n  onDie: defect => some(die(defect)),\n  onInterrupt: () => none(),\n  onSequential: (left, right) => {\n    if (isSome(left) && isSome(right)) {\n      return some(sequential(left.value, right.value));\n    }\n    if (isSome(left) && isNone(right)) {\n      return some(left.value);\n    }\n    if (isNone(left) && isSome(right)) {\n      return some(right.value);\n    }\n    return none();\n  },\n  onParallel: (left, right) => {\n    if (isSome(left) && isSome(right)) {\n      return some(parallel(left.value, right.value));\n    }\n    if (isSome(left) && isNone(right)) {\n      return some(left.value);\n    }\n    if (isNone(left) && isSome(right)) {\n      return some(right.value);\n    }\n    return none();\n  }\n});\n\n/** @internal */\nconst keepDefectsAndElectFailures = self => match(self, {\n  onEmpty: none(),\n  onFail: failure => some(die(failure)),\n  onDie: defect => some(die(defect)),\n  onInterrupt: () => none(),\n  onSequential: (left, right) => {\n    if (isSome(left) && isSome(right)) {\n      return some(sequential(left.value, right.value));\n    }\n    if (isSome(left) && isNone(right)) {\n      return some(left.value);\n    }\n    if (isNone(left) && isSome(right)) {\n      return some(right.value);\n    }\n    return none();\n  },\n  onParallel: (left, right) => {\n    if (isSome(left) && isSome(right)) {\n      return some(parallel(left.value, right.value));\n    }\n    if (isSome(left) && isNone(right)) {\n      return some(left.value);\n    }\n    if (isNone(left) && isSome(right)) {\n      return some(right.value);\n    }\n    return none();\n  }\n});\n\n/** @internal */\nconst linearize = self => match(self, {\n  onEmpty: empty$2(),\n  onFail: error => make(fail(error)),\n  onDie: defect => make(die(defect)),\n  onInterrupt: fiberId => make(interrupt(fiberId)),\n  onSequential: (leftSet, rightSet) => pipe(leftSet, flatMap$1(leftCause => pipe(rightSet, map$2(rightCause => sequential(leftCause, rightCause))))),\n  onParallel: (leftSet, rightSet) => pipe(leftSet, flatMap$1(leftCause => pipe(rightSet, map$2(rightCause => parallel(leftCause, rightCause)))))\n});\n\n/** @internal */\nconst stripFailures = self => match(self, {\n  onEmpty: empty,\n  onFail: () => empty,\n  onDie: defect => die(defect),\n  onInterrupt: fiberId => interrupt(fiberId),\n  onSequential: sequential,\n  onParallel: parallel\n});\n\n/** @internal */\nconst electFailures = self => match(self, {\n  onEmpty: empty,\n  onFail: failure => die(failure),\n  onDie: defect => die(defect),\n  onInterrupt: fiberId => interrupt(fiberId),\n  onSequential: (left, right) => sequential(left, right),\n  onParallel: (left, right) => parallel(left, right)\n});\n\n/** @internal */\nconst stripSomeDefects = /*#__PURE__*/dual(2, (self, pf) => match(self, {\n  onEmpty: some(empty),\n  onFail: error => some(fail(error)),\n  onDie: defect => {\n    const option = pf(defect);\n    return isSome(option) ? none() : some(die(defect));\n  },\n  onInterrupt: fiberId => some(interrupt(fiberId)),\n  onSequential: (left, right) => {\n    if (isSome(left) && isSome(right)) {\n      return some(sequential(left.value, right.value));\n    }\n    if (isSome(left) && isNone(right)) {\n      return some(left.value);\n    }\n    if (isNone(left) && isSome(right)) {\n      return some(right.value);\n    }\n    return none();\n  },\n  onParallel: (left, right) => {\n    if (isSome(left) && isSome(right)) {\n      return some(parallel(left.value, right.value));\n    }\n    if (isSome(left) && isNone(right)) {\n      return some(left.value);\n    }\n    if (isNone(left) && isSome(right)) {\n      return some(right.value);\n    }\n    return none();\n  }\n}));\n\n// -----------------------------------------------------------------------------\n// Mapping\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst as = /*#__PURE__*/dual(2, (self, error) => map(self, () => error));\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => flatMap(self, e => fail(f(e))));\n\n// -----------------------------------------------------------------------------\n// Sequencing\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => match(self, {\n  onEmpty: empty,\n  onFail: error => f(error),\n  onDie: defect => die(defect),\n  onInterrupt: fiberId => interrupt(fiberId),\n  onSequential: (left, right) => sequential(left, right),\n  onParallel: (left, right) => parallel(left, right)\n}));\n\n/** @internal */\nconst flatten = self => flatMap(self, identity);\n\n// -----------------------------------------------------------------------------\n// Equality\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst contains = /*#__PURE__*/dual(2, (self, that) => {\n  if (that._tag === OP_EMPTY || self === that) {\n    return true;\n  }\n  return reduce(self, false, (accumulator, cause) => {\n    return some(accumulator || causeEquals(cause, that));\n  });\n});\n\n/** @internal */\nconst causeEquals = (left, right) => {\n  let leftStack = of(left);\n  let rightStack = of(right);\n  while (isNonEmpty(leftStack) && isNonEmpty(rightStack)) {\n    const [leftParallel, leftSequential] = pipe(headNonEmpty(leftStack), reduce([empty$2(), empty$1()], ([parallel, sequential], cause) => {\n      const [par, seq] = evaluateCause(cause);\n      return some([pipe(parallel, union(par)), pipe(sequential, appendAll(seq))]);\n    }));\n    const [rightParallel, rightSequential] = pipe(headNonEmpty(rightStack), reduce([empty$2(), empty$1()], ([parallel, sequential], cause) => {\n      const [par, seq] = evaluateCause(cause);\n      return some([pipe(parallel, union(par)), pipe(sequential, appendAll(seq))]);\n    }));\n    if (!equals(leftParallel, rightParallel)) {\n      return false;\n    }\n    leftStack = leftSequential;\n    rightStack = rightSequential;\n  }\n  return true;\n};\n\n// -----------------------------------------------------------------------------\n// Flattening\n// -----------------------------------------------------------------------------\n\n/**\n * Flattens a cause to a sequence of sets of causes, where each set represents\n * causes that fail in parallel and sequential sets represent causes that fail\n * after each other.\n *\n * @internal\n */\nconst flattenCause = cause => {\n  return flattenCauseLoop(of(cause), empty$1());\n};\n\n/** @internal */\nconst flattenCauseLoop = (causes, flattened) => {\n  // eslint-disable-next-line no-constant-condition\n  while (1) {\n    const [parallel, sequential] = pipe(causes, reduce$1([empty$2(), empty$1()], ([parallel, sequential], cause) => {\n      const [par, seq] = evaluateCause(cause);\n      return [pipe(parallel, union(par)), pipe(sequential, appendAll(seq))];\n    }));\n    const updated = size$1(parallel) > 0 ? pipe(flattened, prepend(parallel)) : flattened;\n    if (isEmpty$1(sequential)) {\n      return reverse(updated);\n    }\n    causes = sequential;\n    flattened = updated;\n  }\n  throw new Error(\"BUG: Cause.flattenCauseLoop - please report an issue at https://github.com/Effect-TS/io/issues\");\n};\n\n// -----------------------------------------------------------------------------\n// Squashing\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst squash = self => {\n  return squashWith(identity)(self);\n};\n\n/** @internal */\nconst squashWith = /*#__PURE__*/dual(2, (self, f) => {\n  const option = pipe(self, failureOption, map$1(f));\n  switch (option._tag) {\n    case \"None\":\n      {\n        return pipe(defects(self), head, match$1({\n          onNone: () => {\n            const interrupts = Array.from(interruptors(self)).flatMap(fiberId => Array.from(ids(fiberId)).map(id => `#${id}`));\n            return InterruptedException(interrupts ? `Interrupted by fibers: ${interrupts.join(\", \")}` : void 0);\n          },\n          onSome: identity\n        }));\n      }\n    case \"Some\":\n      {\n        return option.value;\n      }\n  }\n});\n\n// -----------------------------------------------------------------------------\n// Finding\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst find = /*#__PURE__*/dual(2, (self, pf) => {\n  const stack = [self];\n  while (stack.length > 0) {\n    const item = stack.pop();\n    const option = pf(item);\n    switch (option._tag) {\n      case \"None\":\n        {\n          switch (item._tag) {\n            case OP_SEQUENTIAL:\n            case OP_PARALLEL:\n              {\n                stack.push(item.right);\n                stack.push(item.left);\n                break;\n              }\n          }\n          break;\n        }\n      case \"Some\":\n        {\n          return option;\n        }\n    }\n  }\n  return none();\n});\n\n// -----------------------------------------------------------------------------\n// Filtering\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst filter = /*#__PURE__*/dual(2, (self, predicate) => reduceWithContext(self, void 0, FilterCauseReducer(predicate)));\n\n// -----------------------------------------------------------------------------\n// Evaluation\n// -----------------------------------------------------------------------------\n\n/**\n * Takes one step in evaluating a cause, returning a set of causes that fail\n * in parallel and a list of causes that fail sequentially after those causes.\n *\n * @internal\n */\nconst evaluateCause = self => {\n  let cause = self;\n  const stack = [];\n  let _parallel = empty$2();\n  let _sequential = empty$1();\n  while (cause !== undefined) {\n    switch (cause._tag) {\n      case OP_EMPTY:\n        {\n          if (stack.length === 0) {\n            return [_parallel, _sequential];\n          }\n          cause = stack.pop();\n          break;\n        }\n      case OP_FAIL:\n        {\n          if (stack.length === 0) {\n            return [pipe(_parallel, add(cause.error)), _sequential];\n          }\n          _parallel = pipe(_parallel, add(cause.error));\n          cause = stack.pop();\n          break;\n        }\n      case OP_DIE:\n        {\n          if (stack.length === 0) {\n            return [pipe(_parallel, add(cause.defect)), _sequential];\n          }\n          _parallel = pipe(_parallel, add(cause.defect));\n          cause = stack.pop();\n          break;\n        }\n      case OP_INTERRUPT:\n        {\n          if (stack.length === 0) {\n            return [pipe(_parallel, add(cause.fiberId)), _sequential];\n          }\n          _parallel = pipe(_parallel, add(cause.fiberId));\n          cause = stack.pop();\n          break;\n        }\n      case OP_SEQUENTIAL:\n        {\n          switch (cause.left._tag) {\n            case OP_EMPTY:\n              {\n                cause = cause.right;\n                break;\n              }\n            case OP_SEQUENTIAL:\n              {\n                cause = sequential(cause.left.left, sequential(cause.left.right, cause.right));\n                break;\n              }\n            case OP_PARALLEL:\n              {\n                cause = parallel(sequential(cause.left.left, cause.right), sequential(cause.left.right, cause.right));\n                break;\n              }\n            default:\n              {\n                _sequential = pipe(_sequential, prepend(cause.right));\n                cause = cause.left;\n                break;\n              }\n          }\n          break;\n        }\n      case OP_PARALLEL:\n        {\n          stack.push(cause.right);\n          cause = cause.left;\n          break;\n        }\n    }\n  }\n  throw new Error(\"BUG: Cause.evaluateCauseLoop - please report an issue at https://github.com/Effect-TS/io/issues\");\n};\n\n// -----------------------------------------------------------------------------\n// Reducing\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst SizeCauseReducer = {\n  emptyCase: () => 0,\n  failCase: () => 1,\n  dieCase: () => 1,\n  interruptCase: () => 1,\n  sequentialCase: (_, left, right) => left + right,\n  parallelCase: (_, left, right) => left + right\n};\n\n/** @internal */\nconst IsInterruptedOnlyCauseReducer = {\n  emptyCase: constTrue,\n  failCase: constFalse,\n  dieCase: constFalse,\n  interruptCase: constTrue,\n  sequentialCase: (_, left, right) => left && right,\n  parallelCase: (_, left, right) => left && right\n};\n\n/** @internal */\nconst FilterCauseReducer = predicate => ({\n  emptyCase: () => empty,\n  failCase: (_, error) => fail(error),\n  dieCase: (_, defect) => die(defect),\n  interruptCase: (_, fiberId) => interrupt(fiberId),\n  sequentialCase: (_, left, right) => {\n    if (predicate(left)) {\n      if (predicate(right)) {\n        return sequential(left, right);\n      }\n      return left;\n    }\n    if (predicate(right)) {\n      return right;\n    }\n    return empty;\n  },\n  parallelCase: (_, left, right) => {\n    if (predicate(left)) {\n      if (predicate(right)) {\n        return parallel(left, right);\n      }\n      return left;\n    }\n    if (predicate(right)) {\n      return right;\n    }\n    return empty;\n  }\n});\n\n/** @internal */\n\nconst OP_SEQUENTIAL_CASE = \"SequentialCase\";\nconst OP_PARALLEL_CASE = \"ParallelCase\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onDie,\n  onEmpty,\n  onFail,\n  onInterrupt,\n  onParallel,\n  onSequential\n}) => {\n  return reduceWithContext(self, void 0, {\n    emptyCase: () => onEmpty,\n    failCase: (_, error) => onFail(error),\n    dieCase: (_, defect) => onDie(defect),\n    interruptCase: (_, fiberId) => onInterrupt(fiberId),\n    sequentialCase: (_, left, right) => onSequential(left, right),\n    parallelCase: (_, left, right) => onParallel(left, right)\n  });\n});\n\n/** @internal */\nconst reduce = /*#__PURE__*/dual(3, (self, zero, pf) => {\n  let accumulator = zero;\n  let cause = self;\n  const causes = [];\n  while (cause !== undefined) {\n    const option = pf(accumulator, cause);\n    accumulator = isSome(option) ? option.value : accumulator;\n    switch (cause._tag) {\n      case OP_SEQUENTIAL:\n        {\n          causes.push(cause.right);\n          cause = cause.left;\n          break;\n        }\n      case OP_PARALLEL:\n        {\n          causes.push(cause.right);\n          cause = cause.left;\n          break;\n        }\n      default:\n        {\n          cause = undefined;\n          break;\n        }\n    }\n    if (cause === undefined && causes.length > 0) {\n      cause = causes.pop();\n    }\n  }\n  return accumulator;\n});\n\n/** @internal */\nconst reduceWithContext = /*#__PURE__*/dual(3, (self, context, reducer) => {\n  const input = [self];\n  const output = [];\n  while (input.length > 0) {\n    const cause = input.pop();\n    switch (cause._tag) {\n      case OP_EMPTY:\n        {\n          output.push(right(reducer.emptyCase(context)));\n          break;\n        }\n      case OP_FAIL:\n        {\n          output.push(right(reducer.failCase(context, cause.error)));\n          break;\n        }\n      case OP_DIE:\n        {\n          output.push(right(reducer.dieCase(context, cause.defect)));\n          break;\n        }\n      case OP_INTERRUPT:\n        {\n          output.push(right(reducer.interruptCase(context, cause.fiberId)));\n          break;\n        }\n      case OP_SEQUENTIAL:\n        {\n          input.push(cause.right);\n          input.push(cause.left);\n          output.push(left({\n            _tag: OP_SEQUENTIAL_CASE\n          }));\n          break;\n        }\n      case OP_PARALLEL:\n        {\n          input.push(cause.right);\n          input.push(cause.left);\n          output.push(left({\n            _tag: OP_PARALLEL_CASE\n          }));\n          break;\n        }\n    }\n  }\n  const accumulator = [];\n  while (output.length > 0) {\n    const either = output.pop();\n    switch (either._tag) {\n      case \"Left\":\n        {\n          switch (either.left._tag) {\n            case OP_SEQUENTIAL_CASE:\n              {\n                const left = accumulator.pop();\n                const right = accumulator.pop();\n                const value = reducer.sequentialCase(context, left, right);\n                accumulator.push(value);\n                break;\n              }\n            case OP_PARALLEL_CASE:\n              {\n                const left = accumulator.pop();\n                const right = accumulator.pop();\n                const value = reducer.parallelCase(context, left, right);\n                accumulator.push(value);\n                break;\n              }\n          }\n          break;\n        }\n      case \"Right\":\n        {\n          accumulator.push(either.right);\n          break;\n        }\n    }\n  }\n  if (accumulator.length === 0) {\n    throw new Error(\"BUG: Cause.reduceWithContext - please report an issue at https://github.com/Effect-TS/io/issues\");\n  }\n  return accumulator.pop();\n});\n\n// -----------------------------------------------------------------------------\n// Errors\n// -----------------------------------------------------------------------------\n\nconst makeException = (proto, tag) => {\n  const _tag = {\n    value: tag,\n    enumerable: true\n  };\n  const protoWithToString = {\n    ...proto,\n    toString() {\n      return `${this._tag}: ${this.message}`;\n    }\n  };\n  return message => Object.create(protoWithToString, {\n    _tag,\n    message: {\n      value: message,\n      enumerable: true\n    }\n  });\n};\n\n/** @internal */\nconst RuntimeExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/RuntimeException\");\n\n/** @internal */\nconst RuntimeException = /*#__PURE__*/makeException({\n  [RuntimeExceptionTypeId]: RuntimeExceptionTypeId\n}, \"RuntimeException\");\n\n/** @internal */\nconst isRuntimeException = u => hasProperty(u, RuntimeExceptionTypeId);\n\n/** @internal */\nconst InterruptedExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/InterruptedException\");\n\n/** @internal */\nconst InterruptedException = /*#__PURE__*/makeException({\n  [InterruptedExceptionTypeId]: InterruptedExceptionTypeId\n}, \"InterruptedException\");\n\n/** @internal */\nconst isInterruptedException = u => hasProperty(u, InterruptedExceptionTypeId);\n\n/** @internal */\nconst IllegalArgumentExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/IllegalArgument\");\n\n/** @internal */\nconst IllegalArgumentException = /*#__PURE__*/makeException({\n  [IllegalArgumentExceptionTypeId]: IllegalArgumentExceptionTypeId\n}, \"IllegalArgumentException\");\n\n/** @internal */\nconst isIllegalArgumentException = u => hasProperty(u, IllegalArgumentExceptionTypeId);\n\n/** @internal */\nconst NoSuchElementExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/NoSuchElement\");\n\n/** @internal */\nconst NoSuchElementException = /*#__PURE__*/makeException({\n  [NoSuchElementExceptionTypeId]: NoSuchElementExceptionTypeId\n}, \"NoSuchElementException\");\n\n/** @internal */\nconst isNoSuchElementException = u => hasProperty(u, NoSuchElementExceptionTypeId);\n\n/** @internal */\nconst InvalidPubSubCapacityExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Cause/errors/InvalidPubSubCapacityException\");\n\n/** @internal */\nconst InvalidPubSubCapacityException = /*#__PURE__*/makeException({\n  [InvalidPubSubCapacityExceptionTypeId]: InvalidPubSubCapacityExceptionTypeId\n}, \"InvalidPubSubCapacityException\");\n\n// -----------------------------------------------------------------------------\n// Pretty Printing\n// -----------------------------------------------------------------------------\n\nconst filterStack = stack => {\n  const lines = stack.split(\"\\n\");\n  const out = [];\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].includes(\"EffectPrimitive\") || lines[i].includes(\"Generator.next\") || lines[i].includes(\"FiberRuntime\")) {\n      return out.join(\"\\n\");\n    } else {\n      out.push(lines[i]);\n    }\n  }\n  return out.join(\"\\n\");\n};\n\n/** @internal */\nconst pretty = cause => {\n  if (isInterruptedOnly(cause)) {\n    return \"All fibers interrupted without errors.\";\n  }\n  const final = prettyErrors(cause).map(e => {\n    let message = e.message;\n    if (e.stack) {\n      message += `\\r\\n${filterStack(e.stack)}`;\n    }\n    if (e.span) {\n      let current = e.span;\n      let i = 0;\n      while (current && current._tag === \"Span\" && i < 10) {\n        message += `\\r\\n    at ${current.name}`;\n        current = getOrUndefined(current.parent);\n        i++;\n      }\n    }\n    return message;\n  }).join(\"\\r\\n\");\n  return final;\n};\nclass PrettyError {\n  constructor(message, stack, span) {\n    this.message = message;\n    this.stack = stack;\n    this.span = span;\n  }\n  toJSON() {\n    const out = {\n      message: this.message\n    };\n    if (this.stack) {\n      out.stack = this.stack;\n    }\n    if (this.span) {\n      out.span = this.span;\n    }\n    return out;\n  }\n}\n\n/**\n * A utility function for generating human-readable error messages from a generic error of type `unknown`.\n *\n * Rules:\n *\n * 1) If the input `u` is already a string, it's considered a message, and \"Error\" is added as a prefix.\n * 2) If `u` has a user-defined `toString()` method, it uses that method and adds \"Error\" as a prefix.\n * 3) If `u` is an object and its only (optional) properties are \"name\", \"message\", or \"_tag\", it constructs\n *    an error message based on those properties.\n * 4) Otherwise, it uses `JSON.stringify` to produce a string representation and uses it as the error message,\n *   with \"Error\" added as a prefix.\n *\n * @internal\n */\nconst prettyErrorMessage = u => {\n  // 1)\n  if (typeof u === \"string\") {\n    return `Error: ${u}`;\n  }\n  // 2)\n  if (hasProperty(u, \"toString\") && isFunction(u[\"toString\"]) && u[\"toString\"] !== Object.prototype.toString) {\n    return u[\"toString\"]();\n  }\n  // 3)\n  return `Error: ${JSON.stringify(u)}`;\n};\nconst spanSymbol = /*#__PURE__*/Symbol.for(\"effect/SpanAnnotation\");\nconst defaultRenderError = error => {\n  const span = hasProperty(error, spanSymbol) && error[spanSymbol];\n  if (error instanceof Error) {\n    return new PrettyError(prettyErrorMessage(error), error.stack?.split(\"\\n\").filter(_ => _.match(/at (.*)/)).join(\"\\n\"), span);\n  }\n  return new PrettyError(prettyErrorMessage(error), void 0, span);\n};\n\n/** @internal */\nconst prettyErrors = cause => reduceWithContext(cause, void 0, {\n  emptyCase: () => [],\n  dieCase: (_, unknownError) => {\n    return [defaultRenderError(unknownError)];\n  },\n  failCase: (_, error) => {\n    return [defaultRenderError(error)];\n  },\n  interruptCase: () => [],\n  parallelCase: (_, l, r) => [...l, ...r],\n  sequentialCase: (_, l, r) => [...l, ...r]\n});\n\nexport { CauseTypeId, IllegalArgumentException, IllegalArgumentExceptionTypeId, InterruptedException, InterruptedExceptionTypeId, InvalidPubSubCapacityException, InvalidPubSubCapacityExceptionTypeId, NoSuchElementException, NoSuchElementExceptionTypeId, RuntimeException, RuntimeExceptionTypeId, as, contains, defects, die, dieOption, electFailures, empty, fail, failureOption, failureOrCause, failures, filter, find, flatMap, flatten, flipCauseOption, interrupt, interruptOption, interruptors, isCause, isDie, isDieType, isEmpty, isEmptyType, isFailType, isFailure, isIllegalArgumentException, isInterruptType, isInterrupted, isInterruptedException, isInterruptedOnly, isNoSuchElementException, isParallelType, isRuntimeException, isSequentialType, keepDefects, keepDefectsAndElectFailures, linearize, map, match, parallel, pretty, prettyErrorMessage, prettyErrors, reduce, reduceWithContext, sequential, size, squash, squashWith, stripFailures, stripSomeDefects };\n","import { makeTag, makeContext, isContext as isContext$1, isTag as isTag$1, empty as empty$1, make as make$1, add as add$1, get as get$1, unsafeGet as unsafeGet$1, getOption as getOption$1, merge as merge$1, pick as pick$1, omit as omit$1 } from '../../internal/Context.esm.js';\n\n/**\n * This module provides a data structure called `Context` that can be used for dependency injection in effectful\n * programs. It is essentially a table mapping `Tag`s to their implementations (called `Service`s), and can be used to\n * manage dependencies in a type-safe way. The `Context` data structure is essentially a way of providing access to a set\n * of related services that can be passed around as a single unit. This module provides functions to create, modify, and\n * query the contents of a `Context`, as well as a number of utility types for working with tags and services.\n *\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Creates a new `Tag` instance with an optional key parameter.\n *\n * Specifying the `key` will make the `Tag` global, meaning two tags with the same\n * key will map to the same instance.\n *\n * Note: this is useful for cases where live reload can happen and it is\n * desireable to preserve the instance across reloads.\n *\n * @param key - An optional key that makes the `Tag` global.\n *\n * @example\n * import * as Context from \"effect/Context\"\n *\n * assert.strictEqual(Context.Tag() === Context.Tag(), false)\n * assert.strictEqual(Context.Tag(\"PORT\") === Context.Tag(\"PORT\"), true)\n *\n * @since 2.0.0\n * @category constructors\n */\nconst Tag = makeTag;\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst unsafeMake = makeContext;\n\n/**\n * Checks if the provided argument is a `Context`.\n *\n * @param input - The value to be checked if it is a `Context`.\n *\n * @example\n * import * as Context from \"effect/Context\"\n *\n * assert.strictEqual(Context.isContext(Context.empty()), true)\n *\n * @since 2.0.0\n * @category guards\n */\nconst isContext = isContext$1;\n\n/**\n * Checks if the provided argument is a `Tag`.\n *\n * @param input - The value to be checked if it is a `Tag`.\n *\n * @example\n * import * as Context from \"effect/Context\"\n *\n * assert.strictEqual(Context.isTag(Context.Tag()), true)\n *\n * @since 2.0.0\n * @category guards\n */\nconst isTag = isTag$1;\n\n/**\n * Returns an empty `Context`.\n *\n * @example\n * import * as Context from \"effect/Context\"\n *\n * assert.strictEqual(Context.isContext(Context.empty()), true)\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Creates a new `Context` with a single service associated to the tag.\n *\n * @example\n * import * as Context from \"effect/Context\"\n *\n * const Port = Context.Tag<{ PORT: number }>()\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Adds a service to a given `Context`.\n *\n * @example\n * import * as Context from \"effect/Context\"\n * import { pipe } from \"effect/Function\"\n *\n * const Port = Context.Tag<{ PORT: number }>()\n * const Timeout = Context.Tag<{ TIMEOUT: number }>()\n *\n * const someContext = Context.make(Port, { PORT: 8080 })\n *\n * const Services = pipe(\n *   someContext,\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n *\n * @since 2.0.0\n */\nconst add = add$1;\n\n/**\n * Get a service from the context that corresponds to the given tag.\n *\n * @param self - The `Context` to search for the service.\n * @param tag - The `Tag` of the service to retrieve.\n *\n * @example\n * import * as Context from \"effect/Context\"\n * import { pipe } from \"effect/Function\"\n *\n * const Port = Context.Tag<{ PORT: number }>()\n * const Timeout = Context.Tag<{ TIMEOUT: number }>()\n *\n * const Services = pipe(\n *   Context.make(Port, { PORT: 8080 }),\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n *\n * @since 2.0.0\n * @category getters\n */\nconst get = get$1;\n\n/**\n * Get a service from the context that corresponds to the given tag.\n * This function is unsafe because if the tag is not present in the context, a runtime error will be thrown.\n *\n * For a safer version see {@link getOption}.\n *\n * @param self - The `Context` to search for the service.\n * @param tag - The `Tag` of the service to retrieve.\n *\n * @example\n * import * as Context from \"effect/Context\"\n *\n * const Port = Context.Tag<{ PORT: number }>()\n * const Timeout = Context.Tag<{ TIMEOUT: number }>()\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.unsafeGet(Services, Port), { PORT: 8080 })\n * assert.throws(() => Context.unsafeGet(Services, Timeout))\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeGet = unsafeGet$1;\n\n/**\n * Get the value associated with the specified tag from the context wrapped in an `Option` object. If the tag is not\n * found, the `Option` object will be `None`.\n *\n * @param self - The `Context` to search for the service.\n * @param tag - The `Tag` of the service to retrieve.\n *\n * @example\n * import * as Context from \"effect/Context\"\n * import * as O from \"effect/Option\"\n *\n * const Port = Context.Tag<{ PORT: number }>()\n * const Timeout = Context.Tag<{ TIMEOUT: number }>()\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.getOption(Services, Port), O.some({ PORT: 8080 }))\n * assert.deepStrictEqual(Context.getOption(Services, Timeout), O.none())\n *\n * @since 2.0.0\n * @category getters\n */\nconst getOption = getOption$1;\n\n/**\n * Merges two `Context`s, returning a new `Context` containing the services of both.\n *\n * @param self - The first `Context` to merge.\n * @param that - The second `Context` to merge.\n *\n * @example\n * import * as Context from \"effect/Context\"\n *\n * const Port = Context.Tag<{ PORT: number }>()\n * const Timeout = Context.Tag<{ TIMEOUT: number }>()\n *\n * const firstContext = Context.make(Port, { PORT: 8080 })\n * const secondContext = Context.make(Timeout, { TIMEOUT: 5000 })\n *\n * const Services = Context.merge(firstContext, secondContext)\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n *\n * @since 2.0.0\n */\nconst merge = merge$1;\n\n/**\n * Returns a new `Context` that contains only the specified services.\n *\n * @param self - The `Context` to prune services from.\n * @param tags - The list of `Tag`s to be included in the new `Context`.\n *\n * @example\n * import * as Context from \"effect/Context\"\n * import { pipe } from \"effect/Function\"\n * import * as O from \"effect/Option\"\n *\n * const Port = Context.Tag<{ PORT: number }>()\n * const Timeout = Context.Tag<{ TIMEOUT: number }>()\n *\n * const someContext = pipe(\n *   Context.make(Port, { PORT: 8080 }),\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * const Services = pipe(someContext, Context.pick(Port))\n *\n * assert.deepStrictEqual(Context.getOption(Services, Port), O.some({ PORT: 8080 }))\n * assert.deepStrictEqual(Context.getOption(Services, Timeout), O.none())\n *\n * @since 2.0.0\n */\nconst pick = pick$1;\n\n/**\n * @since 2.0.0\n */\nconst omit = omit$1;\n\nexport { Tag, add, empty, get, getOption, isContext, isTag, make, merge, omit, pick, unsafeGet, unsafeMake };\n","import { symbol, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { dual } from '../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { symbol as symbol$1, number } from '../Hash/dist/effect-Hash.esm.js';\nimport { toString, NodeInspectSymbol, toJSON } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { EffectPrototype, effectVariance } from './Effectable.esm.js';\nimport { none, some } from './Option.esm.js';\n\n/** @internal */\nconst TagTypeId = /*#__PURE__*/Symbol.for(\"effect/Context/Tag\");\n\n/** @internal */\nconst STMSymbolKey = \"effect/STM\";\n\n/** @internal */\nconst STMTypeId = /*#__PURE__*/Symbol.for(STMSymbolKey);\n\n/** @internal */\nconst TagProto = {\n  ...EffectPrototype,\n  _tag: \"Tag\",\n  _op: \"Tag\",\n  [STMTypeId]: effectVariance,\n  [TagTypeId]: {\n    _S: _ => _,\n    _I: _ => _\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"Tag\",\n      identifier: this.identifier,\n      stack: this.stack\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  of(self) {\n    return self;\n  },\n  context(self) {\n    return make(this, self);\n  }\n};\nconst tagRegistry = /*#__PURE__*/globalValue(\"effect/Context/Tag/tagRegistry\", () => new Map());\n\n/** @internal */\nconst makeTag = identifier => {\n  if (identifier && tagRegistry.has(identifier)) {\n    return tagRegistry.get(identifier);\n  }\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 2;\n  const creationError = new Error();\n  Error.stackTraceLimit = limit;\n  const tag = Object.create(TagProto);\n  Object.defineProperty(tag, \"stack\", {\n    get() {\n      return creationError.stack;\n    }\n  });\n  if (identifier) {\n    tag.identifier = identifier;\n    tagRegistry.set(identifier, tag);\n  }\n  return tag;\n};\n\n/** @internal */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Context\");\n\n/** @internal */\nconst ContextProto = {\n  [TypeId]: {\n    _S: _ => _\n  },\n  [symbol](that) {\n    if (isContext(that)) {\n      if (this.unsafeMap.size === that.unsafeMap.size) {\n        for (const k of this.unsafeMap.keys()) {\n          if (!that.unsafeMap.has(k) || !equals(this.unsafeMap.get(k), that.unsafeMap.get(k))) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  },\n  [symbol$1]() {\n    return number(this.unsafeMap.size);\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"Context\",\n      services: Array.from(this.unsafeMap).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n};\n\n/** @internal */\nconst makeContext = unsafeMap => {\n  const context = Object.create(ContextProto);\n  context.unsafeMap = unsafeMap;\n  return context;\n};\nconst serviceNotFoundError = tag => {\n  const error = new Error(`Service not found${tag.identifier ? `: ${String(tag.identifier)}` : \"\"}`);\n  if (tag.stack) {\n    const lines = tag.stack.split(\"\\n\");\n    if (lines.length > 2) {\n      const afterAt = lines[2].match(/at (.*)/);\n      if (afterAt) {\n        error.message = error.message + ` (defined at ${afterAt[1]})`;\n      }\n    }\n  }\n  if (error.stack) {\n    const lines = error.stack.split(\"\\n\");\n    lines.splice(1, 3);\n    error.stack = lines.join(\"\\n\");\n  }\n  return error;\n};\n\n/** @internal */\nconst isContext = u => hasProperty(u, TypeId);\n\n/** @internal */\nconst isTag = u => hasProperty(u, TagTypeId);\nconst _empty = /*#__PURE__*/makeContext( /*#__PURE__*/new Map());\n\n/** @internal */\nconst empty = () => _empty;\n\n/** @internal */\nconst make = (tag, service) => makeContext(new Map([[tag, service]]));\n\n/** @internal */\nconst add = /*#__PURE__*/dual(3, (self, tag, service) => {\n  const map = new Map(self.unsafeMap);\n  map.set(tag, service);\n  return makeContext(map);\n});\n\n/** @internal */\nconst unsafeGet = /*#__PURE__*/dual(2, (self, tag) => {\n  if (!self.unsafeMap.has(tag)) {\n    throw serviceNotFoundError(tag);\n  }\n  return self.unsafeMap.get(tag);\n});\n\n/** @internal */\nconst get = unsafeGet;\n\n/** @internal */\nconst getOption = /*#__PURE__*/dual(2, (self, tag) => {\n  if (!self.unsafeMap.has(tag)) {\n    return none;\n  }\n  return some(self.unsafeMap.get(tag));\n});\n\n/** @internal */\nconst merge = /*#__PURE__*/dual(2, (self, that) => {\n  const map = new Map(self.unsafeMap);\n  for (const [tag, s] of that.unsafeMap) {\n    map.set(tag, s);\n  }\n  return makeContext(map);\n});\n\n/** @internal */\nconst pick = (...tags) => self => {\n  const tagSet = new Set(tags);\n  const newEnv = new Map();\n  for (const [tag, s] of self.unsafeMap.entries()) {\n    if (tagSet.has(tag)) {\n      newEnv.set(tag, s);\n    }\n  }\n  return makeContext(newEnv);\n};\n\n/** @internal */\nconst omit = (...tags) => self => {\n  const newEnv = new Map(self.unsafeMap);\n  for (const tag of tags) {\n    newEnv.delete(tag);\n  }\n  return makeContext(newEnv);\n};\n\nexport { ContextProto, STMTypeId, TagProto, TagTypeId, TypeId, add, empty, get, getOption, isContext, isTag, make, makeContext, makeTag, merge, omit, pick, unsafeGet };\n","import { of, isNonEmpty, headNonEmpty, tailNonEmpty, prepend } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { makeContext } from '../Context.esm.js';\nimport { Structural } from '../Data.esm.js';\n\n/** @internal */\nconst ContextPatchTypeId = /*#__PURE__*/Symbol.for(\"effect/DifferContextPatch\");\nfunction variance(a) {\n  return a;\n}\n\n/** @internal */\nconst PatchProto = {\n  ...Structural.prototype,\n  [ContextPatchTypeId]: {\n    _Value: variance,\n    _Patch: variance\n  }\n};\nconst EmptyProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Empty\"\n});\nconst _empty = /*#__PURE__*/Object.create(EmptyProto);\n\n/**\n * @internal\n */\nconst empty = () => _empty;\n\n/** @internal */\n\nconst AndThenProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"AndThen\"\n});\nconst makeAndThen = (first, second) => {\n  const o = Object.create(AndThenProto);\n  o.first = first;\n  o.second = second;\n  return o;\n};\n\n/** @internal */\n\nconst AddServiceProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"AddService\"\n});\nconst makeAddService = (tag, service) => {\n  const o = Object.create(AddServiceProto);\n  o.tag = tag;\n  o.service = service;\n  return o;\n};\n\n/** @internal */\n\nconst RemoveServiceProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"RemoveService\"\n});\nconst makeRemoveService = tag => {\n  const o = Object.create(RemoveServiceProto);\n  o.tag = tag;\n  return o;\n};\n\n/** @internal */\n\nconst UpdateServiceProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"UpdateService\"\n});\nconst makeUpdateService = (tag, update) => {\n  const o = Object.create(UpdateServiceProto);\n  o.tag = tag;\n  o.update = update;\n  return o;\n};\n/** @internal */\nconst diff = (oldValue, newValue) => {\n  const missingServices = new Map(oldValue.unsafeMap);\n  let patch = empty();\n  for (const [tag, newService] of newValue.unsafeMap.entries()) {\n    if (missingServices.has(tag)) {\n      const old = missingServices.get(tag);\n      missingServices.delete(tag);\n      if (!equals(old, newService)) {\n        patch = combine(makeUpdateService(tag, () => newService))(patch);\n      }\n    } else {\n      missingServices.delete(tag);\n      patch = combine(makeAddService(tag, newService))(patch);\n    }\n  }\n  for (const [tag] of missingServices.entries()) {\n    patch = combine(makeRemoveService(tag))(patch);\n  }\n  return patch;\n};\n\n/** @internal */\nconst combine = /*#__PURE__*/dual(2, (self, that) => makeAndThen(self, that));\n\n/** @internal */\nconst patch = /*#__PURE__*/dual(2, (self, context) => {\n  let wasServiceUpdated = false;\n  let patches = of(self);\n  const updatedContext = new Map(context.unsafeMap);\n  while (isNonEmpty(patches)) {\n    const head = headNonEmpty(patches);\n    const tail = tailNonEmpty(patches);\n    switch (head._tag) {\n      case \"Empty\":\n        {\n          patches = tail;\n          break;\n        }\n      case \"AddService\":\n        {\n          updatedContext.set(head.tag, head.service);\n          patches = tail;\n          break;\n        }\n      case \"AndThen\":\n        {\n          patches = prepend(prepend(tail, head.second), head.first);\n          break;\n        }\n      case \"RemoveService\":\n        {\n          updatedContext.delete(head.tag);\n          patches = tail;\n          break;\n        }\n      case \"UpdateService\":\n        {\n          updatedContext.set(head.tag, head.update(updatedContext.get(head.tag)));\n          wasServiceUpdated = true;\n          patches = tail;\n          break;\n        }\n    }\n  }\n  if (!wasServiceUpdated) {\n    return makeContext(updatedContext);\n  }\n  const map = new Map();\n  for (const [tag] of context.unsafeMap) {\n    if (updatedContext.has(tag)) {\n      map.set(tag, updatedContext.get(tag));\n      updatedContext.delete(tag);\n    }\n  }\n  for (const [tag, s] of updatedContext) {\n    map.set(tag, s);\n  }\n  return makeContext(map);\n});\n\nexport { ContextPatchTypeId, combine, diff, empty, patch };\n","import { isHashMap as isHashMap$1, empty as empty$1, make as make$1, fromIterable as fromIterable$1, isEmpty as isEmpty$1, get as get$1, getHash as getHash$1, unsafeGet as unsafeGet$1, has as has$1, hasHash as hasHash$1, set as set$1, keys as keys$1, values as values$1, size as size$1, beginMutation as beginMutation$1, endMutation as endMutation$1, mutate as mutate$1, modifyAt as modifyAt$1, modifyHash as modifyHash$1, modify as modify$1, union as union$1, remove as remove$1, removeMany as removeMany$1, map as map$1, flatMap as flatMap$1, forEach as forEach$1, reduce as reduce$1, filter as filter$1, compact as compact$1, filterMap as filterMap$1, findFirst as findFirst$1 } from '../../internal/HashMap.esm.js';\nimport { keySet as keySet$1 } from '../../internal/HashMap/keySet.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isHashMap = isHashMap$1;\n\n/**\n * Creates a new `HashMap`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Constructs a new `HashMap` from an array of key/value pairs.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Constructs a new `HashMap` from an iterable of key/value pairs.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = fromIterable$1;\n\n/**\n * Checks if the `HashMap` contains any entries.\n *\n * @since 2.0.0\n * @category elements\n */\nconst isEmpty = isEmpty$1;\n\n/**\n * Safely lookup the value for the specified key in the `HashMap` using the\n * internal hashing function.\n *\n * @since 2.0.0\n * @category elements\n */\nconst get = get$1;\n\n/**\n * Lookup the value for the specified key in the `HashMap` using a custom hash.\n *\n * @since 2.0.0\n * @category elements\n */\nconst getHash = getHash$1;\n\n/**\n * Unsafely lookup the value for the specified key in the `HashMap` using the\n * internal hashing function.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeGet = unsafeGet$1;\n\n/**\n * Checks if the specified key has an entry in the `HashMap`.\n *\n * @since 2.0.0\n * @category elements\n */\nconst has = has$1;\n\n/**\n * Checks if the specified key has an entry in the `HashMap` using a custom\n * hash.\n *\n * @since 2.0.0\n * @category elements\n */\nconst hasHash = hasHash$1;\n\n/**\n * Sets the specified key to the specified value using the internal hashing\n * function.\n *\n * @since 2.0.0\n */\nconst set = set$1;\n\n/**\n * Returns an `IterableIterator` of the keys within the `HashMap`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst keys = keys$1;\n\n/**\n * Returns a `HashSet` of keys within the `HashMap`.\n *\n * @since 2.0.0\n * @category getter\n */\nconst keySet = keySet$1;\n\n/**\n * Returns an `IterableIterator` of the values within the `HashMap`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst values = values$1;\n\n/**\n * Returns the number of entries within the `HashMap`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst size = size$1;\n\n/**\n * Marks the `HashMap` as mutable.\n *\n * @since 2.0.0\n */\nconst beginMutation = beginMutation$1;\n\n/**\n * Marks the `HashMap` as immutable.\n *\n * @since 2.0.0\n */\nconst endMutation = endMutation$1;\n\n/**\n * Mutates the `HashMap` within the context of the provided function.\n *\n * @since 2.0.0\n */\nconst mutate = mutate$1;\n\n/**\n * Set or remove the specified key in the `HashMap` using the specified\n * update function. The value of the specified key will be computed using the\n * provided hash.\n *\n * The update function will be invoked with the current value of the key if it\n * exists, or `None` if no such value exists.\n *\n * @since 2.0.0\n */\nconst modifyAt = modifyAt$1;\n\n/**\n * Alter the value of the specified key in the `HashMap` using the specified\n * update function. The value of the specified key will be computed using the\n * provided hash.\n *\n * The update function will be invoked with the current value of the key if it\n * exists, or `None` if no such value exists.\n *\n * This function will always either update or insert a value into the `HashMap`.\n *\n * @since 2.0.0\n */\nconst modifyHash = modifyHash$1;\n\n/**\n * Updates the value of the specified key within the `HashMap` if it exists.\n *\n * @since 2.0.0\n */\nconst modify = modify$1;\n\n/**\n * Performs a union of this `HashMap` and that `HashMap`.\n *\n * @since 2.0.0\n */\nconst union = union$1;\n\n/**\n * Remove the entry for the specified key in the `HashMap` using the internal\n * hashing function.\n *\n * @since 2.0.0\n */\nconst remove = remove$1;\n\n/**\n * Removes all entries in the `HashMap` which have the specified keys.\n *\n * @since 2.0.0\n */\nconst removeMany = removeMany$1;\n\n/**\n * Maps over the entries of the `HashMap` using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = map$1;\n\n/**\n * Chains over the entries of the `HashMap` using the specified function.\n *\n * **NOTE**: the hash and equal of both maps have to be the same.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = flatMap$1;\n\n/**\n * Applies the specified function to the entries of the `HashMap`.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst forEach = forEach$1;\n\n/**\n * Reduces the specified state over the entries of the `HashMap`.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduce = reduce$1;\n\n/**\n * Filters entries out of a `HashMap` using the specified predicate.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filter = filter$1;\n\n/**\n * Filters out `None` values from a `HashMap` of `Options`s.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst compact = compact$1;\n\n/**\n * Maps over the entries of the `HashMap` using the specified partial function\n * and filters out `None` values.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filterMap = filterMap$1;\n\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findFirst = findFirst$1;\n\nexport { beginMutation, compact, empty, endMutation, filter, filterMap, findFirst, flatMap, forEach, fromIterable, get, getHash, has, hasHash, isEmpty, isHashMap, keySet, keys, make, map, modify, modifyAt, modifyHash, mutate, reduce, remove, removeMany, set, size, union, unsafeGet, values };\n","import { of, isNonEmpty, headNonEmpty, tailNonEmpty, prepend } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { Structural } from '../Data.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { reduce, has, remove, add } from '../../HashSet/dist/effect-HashSet.esm.js';\n\n/** @internal */\nconst HashSetPatchTypeId = /*#__PURE__*/Symbol.for(\"effect/DifferHashSetPatch\");\nfunction variance(a) {\n  return a;\n}\n\n/** @internal */\nconst PatchProto = {\n  ...Structural.prototype,\n  [HashSetPatchTypeId]: {\n    _Value: variance,\n    _Key: variance,\n    _Patch: variance\n  }\n};\nconst EmptyProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Empty\"\n});\nconst _empty = /*#__PURE__*/Object.create(EmptyProto);\n\n/** @internal */\nconst empty = () => _empty;\nconst AndThenProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"AndThen\"\n});\n\n/** @internal */\nconst makeAndThen = (first, second) => {\n  const o = Object.create(AndThenProto);\n  o.first = first;\n  o.second = second;\n  return o;\n};\nconst AddProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Add\"\n});\n\n/** @internal */\nconst makeAdd = value => {\n  const o = Object.create(AddProto);\n  o.value = value;\n  return o;\n};\nconst RemoveProto = /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(PatchProto), {\n  _tag: \"Remove\"\n});\n\n/** @internal */\nconst makeRemove = value => {\n  const o = Object.create(RemoveProto);\n  o.value = value;\n  return o;\n};\n/** @internal */\nconst diff = (oldValue, newValue) => {\n  const [removed, patch] = reduce([oldValue, empty()], ([set, patch], value) => {\n    if (has(value)(set)) {\n      return [remove(value)(set), patch];\n    }\n    return [set, combine(makeAdd(value))(patch)];\n  })(newValue);\n  return reduce(patch, (patch, value) => combine(makeRemove(value))(patch))(removed);\n};\n\n/** @internal */\nconst combine = /*#__PURE__*/dual(2, (self, that) => makeAndThen(self, that));\n\n/** @internal */\nconst patch = /*#__PURE__*/dual(2, (self, oldValue) => {\n  let set = oldValue;\n  let patches = of(self);\n  while (isNonEmpty(patches)) {\n    const head = headNonEmpty(patches);\n    const tail = tailNonEmpty(patches);\n    switch (head._tag) {\n      case \"Empty\":\n        {\n          patches = tail;\n          break;\n        }\n      case \"AndThen\":\n        {\n          patches = prepend(head.first)(prepend(head.second)(tail));\n          break;\n        }\n      case \"Add\":\n        {\n          set = add(head.value)(set);\n          patches = tail;\n          break;\n        }\n      case \"Remove\":\n        {\n          set = remove(head.value)(set);\n          patches = tail;\n        }\n    }\n  }\n  return set;\n});\n\nexport { HashSetPatchTypeId, combine, diff, empty, makeAdd, makeAndThen, makeRemove, patch };\n","import { equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { dual, identity, constant } from '../Function/dist/effect-Function.esm.js';\nimport { empty as empty$1, combine as combine$1, diff as diff$1, patch as patch$1 } from './Differ/ChunkPatch.esm.js';\nimport { empty, combine, diff, patch } from './Differ/ContextPatch.esm.js';\nimport { empty as empty$2, combine as combine$2, diff as diff$2, patch as patch$2 } from './Differ/HashMapPatch.esm.js';\nimport { empty as empty$3, combine as combine$3, diff as diff$3, patch as patch$3 } from './Differ/HashSetPatch.esm.js';\nimport { empty as empty$4, combine as combine$4, diff as diff$4, patch as patch$4 } from './Differ/OrPatch.esm.js';\n\n/** @internal */\nconst DifferTypeId = /*#__PURE__*/Symbol.for(\"effect/Differ\");\n\n/** @internal */\nconst DifferProto = {\n  [DifferTypeId]: {\n    _P: identity,\n    _V: identity\n  }\n};\n\n/** @internal */\nconst make = params => {\n  const differ = Object.create(DifferProto);\n  differ.empty = params.empty;\n  differ.diff = params.diff;\n  differ.combine = params.combine;\n  differ.patch = params.patch;\n  return differ;\n};\n\n/** @internal */\nconst environment = () => make({\n  empty: empty(),\n  combine: (first, second) => combine(second)(first),\n  diff: (oldValue, newValue) => diff(oldValue, newValue),\n  patch: (patch$1, oldValue) => patch(oldValue)(patch$1)\n});\n\n/** @internal */\nconst chunk = differ => make({\n  empty: empty$1(),\n  combine: (first, second) => combine$1(second)(first),\n  diff: (oldValue, newValue) => diff$1({\n    oldValue,\n    newValue,\n    differ\n  }),\n  patch: (patch, oldValue) => patch$1(oldValue, differ)(patch)\n});\n\n/** @internal */\nconst hashMap = differ => make({\n  empty: empty$2(),\n  combine: (first, second) => combine$2(second)(first),\n  diff: (oldValue, newValue) => diff$2({\n    oldValue,\n    newValue,\n    differ\n  }),\n  patch: (patch, oldValue) => patch$2(oldValue, differ)(patch)\n});\n\n/** @internal */\nconst hashSet = () => make({\n  empty: empty$3(),\n  combine: (first, second) => combine$3(second)(first),\n  diff: (oldValue, newValue) => diff$3(oldValue, newValue),\n  patch: (patch, oldValue) => patch$3(oldValue)(patch)\n});\n\n/** @internal */\nconst orElseEither = /*#__PURE__*/dual(2, (self, that) => make({\n  empty: empty$4(),\n  combine: (first, second) => combine$4(first, second),\n  diff: (oldValue, newValue) => diff$4({\n    oldValue,\n    newValue,\n    left: self,\n    right: that\n  }),\n  patch: (patch, oldValue) => patch$4(patch, {\n    oldValue,\n    left: self,\n    right: that\n  })\n}));\n\n/** @internal */\nconst transform = /*#__PURE__*/dual(2, (self, {\n  toNew,\n  toOld\n}) => make({\n  empty: self.empty,\n  combine: (first, second) => self.combine(first, second),\n  diff: (oldValue, newValue) => self.diff(toOld(oldValue), toOld(newValue)),\n  patch: (patch, oldValue) => toNew(self.patch(patch, toOld(oldValue)))\n}));\n\n/** @internal */\nconst update = () => updateWith((_, a) => a);\n\n/** @internal */\nconst updateWith = f => make({\n  empty: identity,\n  combine: (first, second) => {\n    if (first === identity) {\n      return second;\n    }\n    if (second === identity) {\n      return first;\n    }\n    return a => second(first(a));\n  },\n  diff: (oldValue, newValue) => {\n    if (equals(oldValue, newValue)) {\n      return identity;\n    }\n    return constant(newValue);\n  },\n  patch: (patch, oldValue) => f(oldValue, patch(oldValue))\n});\n\n/** @internal */\nconst zip = /*#__PURE__*/dual(2, (self, that) => make({\n  empty: [self.empty, that.empty],\n  combine: (first, second) => [self.combine(first[0], second[0]), that.combine(first[1], second[1])],\n  diff: (oldValue, newValue) => [self.diff(oldValue[0], newValue[0]), that.diff(oldValue[1], newValue[1])],\n  patch: (patch, oldValue) => [self.patch(patch[0], oldValue[0]), that.patch(patch[1], oldValue[1])]\n}));\n\nexport { DifferProto, DifferTypeId, chunk, environment, hashMap, hashSet, make, orElseEither, transform, update, updateWith, zip };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { DifferTypeId, make as make$1, environment as environment$1, chunk as chunk$1, hashMap as hashMap$1, hashSet as hashSet$1, orElseEither as orElseEither$1, transform as transform$1, update as update$1, updateWith as updateWith$1, zip as zip$1 } from '../../internal/Differ.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbol\n */\nconst TypeId = DifferTypeId;\n\n/**\n * @since 2.0.0\n */\n\n/**\n * An empty patch that describes no changes.\n *\n * @since 2.0.0\n * @category patch\n */\nconst empty = self => self.empty;\n\n/**\n * @since 2.0.0\n * @category patch\n */\nconst diff = /*#__PURE__*/dual(3, (self, oldValue, newValue) => self.diff(oldValue, newValue));\n\n/**\n * Combines two patches to produce a new patch that describes the updates of\n * the first patch and then the updates of the second patch. The combine\n * operation should be associative. In addition, if the combine operation is\n * commutative then joining multiple fibers concurrently will result in\n * deterministic `FiberRef` values.\n *\n * @since 2.0.0\n * @category patch\n */\nconst combine = /*#__PURE__*/dual(3, (self, first, second) => self.combine(first, second));\n\n/**\n * Applies a patch to an old value to produce a new value that is equal to the\n * old value with the updates described by the patch.\n *\n * @since 2.0.0\n * @category patch\n */\nconst patch = /*#__PURE__*/dual(3, (self, patch, oldValue) => self.patch(patch, oldValue));\n\n/**\n * Constructs a new `Differ`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Constructs a differ that knows how to diff `Env` values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst environment = environment$1;\n\n/**\n * Constructs a differ that knows how to diff a `Chunk` of values given a\n * differ that knows how to diff the values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst chunk = chunk$1;\n\n/**\n * Constructs a differ that knows how to diff a `HashMap` of keys and values given\n * a differ that knows how to diff the values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst hashMap = hashMap$1;\n\n/**\n * Constructs a differ that knows how to diff a `HashSet` of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst hashSet = hashSet$1;\n\n/**\n * Combines this differ and the specified differ to produce a differ that\n * knows how to diff the sum of their values.\n *\n * @since 2.0.0\n */\nconst orElseEither = orElseEither$1;\n\n/**\n * Transforms the type of values that this differ knows how to differ using\n * the specified functions that map the new and old value types to each other.\n *\n * @since 2.0.0\n */\nconst transform = transform$1;\n\n/**\n * Constructs a differ that just diffs two values by returning a function that\n * sets the value to the new value. This differ does not support combining\n * multiple updates to the value compositionally and should only be used when\n * there is no compositional way to update them.\n *\n * @since 2.0.0\n */\nconst update = update$1;\n\n/**\n * A variant of `update` that allows specifying the function that will be used\n * to combine old values with new values.\n *\n * @since 2.0.0\n */\nconst updateWith = updateWith$1;\n\n/**\n * Combines this differ and the specified differ to produce a new differ that\n * knows how to diff the product of their values.\n *\n * @since 2.0.0\n */\nconst zip = zip$1;\n\nexport { TypeId, chunk, combine, diff, empty, environment, hashMap, hashSet, make, orElseEither, patch, transform, update, updateWith, zip };\n","import { fromIterable as fromIterable$1 } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { isLeft } from '../../Either/dist/effect-Either.esm.js';\nimport { symbol as symbol$1, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { mapInput } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual, unsafeCoerce, identity } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, array } from '../../Hash/dist/effect-Hash.esm.js';\nimport { toString, NodeInspectSymbol, toJSON } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { isSome, some as some$1, none } from '../../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { getEquivalence as getEquivalence$1 } from '../../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/**\n * A data type for immutable linked lists representing ordered collections of elements of type `A`.\n *\n * This data type is optimal for last-in-first-out (LIFO), stack-like access patterns. If you need another access pattern, for example, random access or FIFO, consider using a collection more suited to this than `List`.\n *\n * **Performance**\n *\n * - Time: `List` has `O(1)` prepend and head/tail access. Most other operations are `O(n)` on the number of elements in the list. This includes the index-based lookup of elements, `length`, `append` and `reverse`.\n * - Space: `List` implements structural sharing of the tail list. This means that many operations are either zero- or constant-memory cost.\n *\n * @since 2.0.0\n */\n\n/**\n * Represents an immutable linked list of elements of type `A`.\n *\n * A `List` is optimal for last-in-first-out (LIFO), stack-like access patterns.\n * If you need another access pattern, for example, random access or FIFO,\n * consider using a collection more suited for that other than `List`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category symbol\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/List\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Converts the specified `List` to a `ReadonlyArray`.\n *\n * @category conversions\n * @since 2.0.0\n */\nconst toReadonlyArray = self => Array.from(self);\n\n/**\n * @category equivalence\n * @since 2.0.0\n */\nconst getEquivalence = isEquivalent => mapInput(getEquivalence$1(isEquivalent), toReadonlyArray);\nconst _equivalence = /*#__PURE__*/getEquivalence(equals);\nconst ConsProto = {\n  [TypeId]: TypeId,\n  _tag: \"Cons\",\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"List\",\n      _tag: \"Cons\",\n      values: toReadonlyArray(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  [symbol$1](that) {\n    return isList(that) && this._tag === that._tag && _equivalence(this, that);\n  },\n  [symbol]() {\n    return array(toReadonlyArray(this));\n  },\n  [Symbol.iterator]() {\n    let done = false;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let self = this;\n    return {\n      next() {\n        if (done) {\n          return this.return();\n        }\n        if (self._tag === \"Nil\") {\n          done = true;\n          return this.return();\n        }\n        const value = self.head;\n        self = self.tail;\n        return {\n          done,\n          value\n        };\n      },\n      return(value) {\n        if (!done) {\n          done = true;\n        }\n        return {\n          done: true,\n          value\n        };\n      }\n    };\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst makeCons = (head, tail) => {\n  const cons = Object.create(ConsProto);\n  cons.head = head;\n  cons.tail = tail;\n  return cons;\n};\nconst NilProto = {\n  [TypeId]: TypeId,\n  _tag: \"Nil\",\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"List\",\n      _tag: \"Nil\"\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  [symbol]() {\n    return array(toReadonlyArray(this));\n  },\n  [symbol$1](that) {\n    return isList(that) && this._tag === that._tag;\n  },\n  [Symbol.iterator]() {\n    return {\n      next() {\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst _Nil = /*#__PURE__*/Object.create(NilProto);\n\n/**\n * Returns `true` if the specified value is a `List`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isList = u => hasProperty(u, TypeId);\n\n/**\n * Returns `true` if the specified value is a `List.Nil<A>`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isNil = self => self._tag === \"Nil\";\n\n/**\n * Returns `true` if the specified value is a `List.Cons<A>`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isCons = self => self._tag === \"Cons\";\n\n/**\n * Returns the number of elements contained in the specified `List`\n *\n * @since 2.0.0\n * @category getters\n */\nconst size = self => {\n  let these = self;\n  let len = 0;\n  while (!isNil(these)) {\n    len += 1;\n    these = these.tail;\n  }\n  return len;\n};\n\n/**\n * Constructs a new empty `List<A>`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst nil = () => _Nil;\n\n/**\n * Constructs a new `List.Cons<A>` from the specified `head` and `tail` values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst cons = (head, tail) => makeCons(head, tail);\n\n/**\n * Constructs a new empty `List<A>`.\n *\n * Alias of {@link nil}.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = nil;\n\n/**\n * Constructs a new `List<A>` from the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst of = value => makeCons(value, _Nil);\n\n/**\n * Constructs a new `List<A>` from the specified `Iterable<A>`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = prefix => {\n  const iterator = prefix[Symbol.iterator]();\n  let next;\n  if ((next = iterator.next()) && !next.done) {\n    const result = makeCons(next.value, _Nil);\n    let curr = result;\n    while ((next = iterator.next()) && !next.done) {\n      const temp = makeCons(next.value, _Nil);\n      curr.tail = temp;\n      curr = temp;\n    }\n    return result;\n  } else {\n    return _Nil;\n  }\n};\n\n/**\n * Constructs a new `List<A>` from the specified values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = (...elements) => fromIterable(elements);\n\n/**\n * Appends the specified element to the end of the `List`, creating a new `Cons`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst append = /*#__PURE__*/dual(2, (self, element) => appendAllNonEmpty(self, of(element)));\n\n/**\n * Concatentates the specified lists together.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst appendAll = /*#__PURE__*/dual(2, (self, that) => prependAll(that, self));\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst appendAllNonEmpty = /*#__PURE__*/dual(2, (self, that) => appendAll(self, that));\n\n/**\n * Prepends the specified element to the beginning of the list.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst prepend = /*#__PURE__*/dual(2, (self, element) => cons(element, self));\n\n/**\n * Prepends the specified prefix list to the beginning of the specified list.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst prependAll = /*#__PURE__*/dual(2, (self, prefix) => {\n  if (isNil(self)) {\n    return prefix;\n  } else if (isNil(prefix)) {\n    return self;\n  } else {\n    const result = makeCons(prefix.head, self);\n    let curr = result;\n    let that = prefix.tail;\n    while (!isNil(that)) {\n      const temp = makeCons(that.head, self);\n      curr.tail = temp;\n      curr = temp;\n      that = that.tail;\n    }\n    return result;\n  }\n});\n\n/**\n * @category concatenating\n * @since 2.0.0\n */\nconst prependAllNonEmpty = /*#__PURE__*/dual(2, (self, that) => prependAll(self, that));\n\n/**\n * Prepends the specified prefix list (in reverse order) to the beginning of the\n * specified list.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst prependAllReversed = /*#__PURE__*/dual(2, (self, prefix) => {\n  let out = self;\n  let pres = prefix;\n  while (isCons(pres)) {\n    out = makeCons(pres.head, out);\n    pres = pres.tail;\n  }\n  return out;\n});\n\n/**\n * Drops the first `n` elements from the specified list.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst drop = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return self;\n  }\n  if (n >= size(self)) {\n    return _Nil;\n  }\n  let these = self;\n  let i = 0;\n  while (!isNil(these) && i < n) {\n    these = these.tail;\n    i += 1;\n  }\n  return these;\n});\n\n/**\n * Check if a predicate holds true for every `List` element.\n *\n * @since 2.0.0\n * @category elements\n */\nconst every = /*#__PURE__*/dual(2, (self, refinement) => {\n  for (const a of self) {\n    if (!refinement(a)) {\n      return false;\n    }\n  }\n  return true;\n});\n\n/**\n * Check if a predicate holds true for some `List` element.\n *\n * @since 2.0.0\n * @category elements\n */\nconst some = /*#__PURE__*/dual(2, (self, predicate) => {\n  let these = self;\n  while (!isNil(these)) {\n    if (predicate(these.head)) {\n      return true;\n    }\n    these = these.tail;\n  }\n  return false;\n});\n\n/**\n * Filters a list using the specified predicate.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst filter = /*#__PURE__*/dual(2, (self, predicate) => noneIn(self, predicate, false));\n\n// everything seen so far is not included\nconst noneIn = (self, predicate, isFlipped) => {\n  /* eslint-disable no-constant-condition */\n  while (true) {\n    if (isNil(self)) {\n      return _Nil;\n    } else {\n      if (predicate(self.head) !== isFlipped) {\n        return allIn(self, self.tail, predicate, isFlipped);\n      } else {\n        self = self.tail;\n      }\n    }\n  }\n};\n\n// everything from 'start' is included, if everything from this point is in we can return the origin\n// start otherwise if we discover an element that is out we must create a new partial list.\nconst allIn = (start, remaining, predicate, isFlipped) => {\n  /* eslint-disable no-constant-condition */\n  while (true) {\n    if (isNil(remaining)) {\n      return start;\n    } else {\n      if (predicate(remaining.head) !== isFlipped) {\n        remaining = remaining.tail;\n      } else {\n        return partialFill(start, remaining, predicate, isFlipped);\n      }\n    }\n  }\n};\n\n// we have seen elements that should be included then one that should be excluded, start building\nconst partialFill = (origStart, firstMiss, predicate, isFlipped) => {\n  const newHead = makeCons(unsafeHead(origStart), _Nil);\n  let toProcess = unsafeTail(origStart);\n  let currentLast = newHead;\n\n  // we know that all elements are :: until at least firstMiss.tail\n  while (!(toProcess === firstMiss)) {\n    const newElem = makeCons(unsafeHead(toProcess), _Nil);\n    currentLast.tail = newElem;\n    currentLast = unsafeCoerce(newElem);\n    toProcess = unsafeCoerce(toProcess.tail);\n  }\n\n  // at this point newHead points to a list which is a duplicate of all the 'in' elements up to the first miss.\n  // currentLast is the last element in that list.\n\n  // now we are going to try and share as much of the tail as we can, only moving elements across when we have to.\n  let next = firstMiss.tail;\n  let nextToCopy = unsafeCoerce(next); // the next element we would need to copy to our list if we cant share.\n  while (!isNil(next)) {\n    // generally recommended is next.isNonEmpty but this incurs an extra method call.\n    const head = unsafeHead(next);\n    if (predicate(head) !== isFlipped) {\n      next = next.tail;\n    } else {\n      // its not a match - do we have outstanding elements?\n      while (!(nextToCopy === next)) {\n        const newElem = makeCons(unsafeHead(nextToCopy), _Nil);\n        currentLast.tail = newElem;\n        currentLast = newElem;\n        nextToCopy = unsafeCoerce(nextToCopy.tail);\n      }\n      nextToCopy = unsafeCoerce(next.tail);\n      next = next.tail;\n    }\n  }\n\n  // we have remaining elements - they are unchanged attach them to the end\n  if (!isNil(nextToCopy)) {\n    currentLast.tail = nextToCopy;\n  }\n  return newHead;\n};\n\n/**\n * Filters and maps a list using the specified partial function. The resulting\n * list may be smaller than the input list due to the possibility of the partial\n * function not being defined for some elements.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst filterMap = /*#__PURE__*/dual(2, (self, f) => {\n  const bs = [];\n  for (const a of self) {\n    const oa = f(a);\n    if (isSome(oa)) {\n      bs.push(oa.value);\n    }\n  }\n  return fromIterable(bs);\n});\n\n/**\n * Removes all `None` values from the specified list.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst compact = self => filterMap(self, identity);\n\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findFirst = /*#__PURE__*/dual(2, (self, predicate) => {\n  let these = self;\n  while (!isNil(these)) {\n    if (predicate(these.head)) {\n      return some$1(these.head);\n    }\n    these = these.tail;\n  }\n  return none();\n});\n\n/**\n * Flat maps a list using the specified function.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  let rest = self;\n  let head = undefined;\n  let tail = undefined;\n  while (!isNil(rest)) {\n    let bs = f(rest.head);\n    while (!isNil(bs)) {\n      const next = makeCons(bs.head, _Nil);\n      if (tail === undefined) {\n        head = next;\n      } else {\n        tail.tail = next;\n      }\n      tail = next;\n      bs = bs.tail;\n    }\n    rest = rest.tail;\n  }\n  if (head === undefined) {\n    return _Nil;\n  }\n  return head;\n});\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nconst flatMapNonEmpty = flatMap;\n\n/**\n * Applies the specified function to each element of the `List`.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst forEach = /*#__PURE__*/dual(2, (self, f) => {\n  let these = self;\n  while (!isNil(these)) {\n    f(these.head);\n    these = these.tail;\n  }\n});\n\n/**\n * Returns the first element of the specified list, or `None` if the list is\n * empty.\n *\n * @since 2.0.0\n * @category getters\n */\nconst head = self => isNil(self) ? none() : some$1(self.head);\n\n/**\n * Returns the last element of the specified list, or `None` if the list is\n * empty.\n *\n * @since 2.0.0\n * @category getters\n */\nconst last = self => isNil(self) ? none() : some$1(unsafeLast(self));\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Applies the specified mapping function to each element of the list.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst map = /*#__PURE__*/dual(2, (self, f) => {\n  if (isNil(self)) {\n    return self;\n  } else {\n    let i = 0;\n    const head = makeCons(f(self.head, i++), _Nil);\n    let nextHead = head;\n    let rest = self.tail;\n    while (!isNil(rest)) {\n      const next = makeCons(f(rest.head, i++), _Nil);\n      nextHead.tail = next;\n      nextHead = next;\n      rest = rest.tail;\n    }\n    return head;\n  }\n});\n\n/**\n * Partition a list into two lists, where the first list contains all elements\n * that did not satisfy the specified predicate, and the second list contains\n * all elements that did satisfy the specified predicate.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst partition = /*#__PURE__*/dual(2, (self, predicate) => {\n  const left = [];\n  const right = [];\n  for (const a of self) {\n    if (predicate(a)) {\n      right.push(a);\n    } else {\n      left.push(a);\n    }\n  }\n  return [fromIterable(left), fromIterable(right)];\n});\n\n/**\n * Partition a list into two lists, where the first list contains all elements\n * for which the specified function returned a `Left`, and the second list\n * contains all elements for which the specified function returned a `Right`.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst partitionMap = /*#__PURE__*/dual(2, (self, f) => {\n  const left = [];\n  const right = [];\n  for (const a of self) {\n    const e = f(a);\n    if (isLeft(e)) {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n  return [fromIterable(left), fromIterable(right)];\n});\n\n/**\n * Folds over the elements of the list using the specified function, using the\n * specified initial value.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduce = /*#__PURE__*/dual(3, (self, zero, f) => {\n  let acc = zero;\n  let these = self;\n  while (!isNil(these)) {\n    acc = f(acc, these.head);\n    these = these.tail;\n  }\n  return acc;\n});\n\n/**\n * Folds over the elements of the list using the specified function, beginning\n * with the last element of the list, using the specified initial value.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduceRight = /*#__PURE__*/dual(3, (self, zero, f) => {\n  let acc = zero;\n  let these = reverse(self);\n  while (!isNil(these)) {\n    acc = f(acc, these.head);\n    these = these.tail;\n  }\n  return acc;\n});\n\n/**\n * Returns a new list with the elements of the specified list in reverse order.\n *\n * @since 2.0.0\n * @category elements\n */\nconst reverse = self => {\n  let result = empty();\n  let these = self;\n  while (!isNil(these)) {\n    result = prepend(result, these.head);\n    these = these.tail;\n  }\n  return result;\n};\n\n/**\n * Splits the specified list into two lists at the specified index.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst splitAt = /*#__PURE__*/dual(2, (self, n) => [take(self, n), drop(self, n)]);\n\n/**\n * Returns the tail of the specified list, or `None` if the list is empty.\n *\n * @since 2.0.0\n * @category getters\n */\nconst tail = self => isNil(self) ? none() : some$1(self.tail);\n\n/**\n * Takes the specified number of elements from the beginning of the specified\n * list.\n *\n * @since 2.0.0\n * @category combinators\n */\nconst take = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return _Nil;\n  }\n  if (n >= size(self)) {\n    return self;\n  }\n  let these = make(unsafeHead(self));\n  let current = unsafeTail(self);\n  for (let i = 1; i < n; i++) {\n    these = makeCons(unsafeHead(current), these);\n    current = unsafeTail(current);\n  }\n  return reverse(these);\n});\n\n/**\n * Converts the specified `List` to a `Chunk`.\n *\n * @since 2.0.0\n * @category conversions\n */\nconst toChunk = self => fromIterable$1(self);\n\n/**\n * Unsafely returns the first element of the specified `List`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeHead = self => {\n  if (isNil(self)) {\n    throw new Error(\"Expected List to be non-empty\");\n  }\n  return self.head;\n};\n\n/**\n * Unsafely returns the last element of the specified `List`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeLast = self => {\n  if (isNil(self)) {\n    throw new Error(\"Expected List to be non-empty\");\n  }\n  let these = self;\n  let scout = self.tail;\n  while (!isNil(scout)) {\n    these = scout;\n    scout = scout.tail;\n  }\n  return these.head;\n};\n\n/**\n * Unsafely returns the tail of the specified `List`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeTail = self => {\n  if (isNil(self)) {\n    throw new Error(\"Expected List to be non-empty\");\n  }\n  return self.tail;\n};\n\nexport { TypeId, append, appendAll, appendAllNonEmpty, compact, cons, drop, empty, every, filter, filterMap, findFirst, flatMap, flatMapNonEmpty, forEach, fromIterable, getEquivalence, head, isCons, isList, isNil, last, make, map, nil, of, partition, partitionMap, prepend, prependAll, prependAllNonEmpty, prependAllReversed, reduce, reduceRight, reverse, size, some, splitAt, tail, take, toChunk, toReadonlyArray, unsafeHead, unsafeLast, unsafeTail };\n","import { right, left } from '../Either/dist/effect-Either.esm.js';\nimport { equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { empty as empty$2, make, reduce as reduce$2, set, get, isEmpty, keys, map } from '../HashMap/dist/effect-HashMap.esm.js';\nimport { of, isCons, cons, reduce as reduce$1, empty as empty$1, unsafeHead, unsafeTail, isNil, appendAll, reverse } from '../List/dist/effect-List.esm.js';\nimport { match } from '../Option/dist/effect-Option.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst empty = {\n  _tag: \"Empty\"\n};\n\n/**\n * Combines this collection of blocked requests with the specified collection\n * of blocked requests, in parallel.\n *\n * @internal\n */\nconst par = (self, that) => ({\n  _tag: \"Par\",\n  left: self,\n  right: that\n});\n\n/**\n * Combines this collection of blocked requests with the specified collection\n * of blocked requests, in sequence.\n *\n * @internal\n */\nconst seq = (self, that) => ({\n  _tag: \"Seq\",\n  left: self,\n  right: that\n});\n\n/**\n * Constructs a collection of blocked requests from the specified blocked\n * request and data source.\n *\n * @internal\n */\nconst single = (dataSource, blockedRequest) => ({\n  _tag: \"Single\",\n  dataSource,\n  blockedRequest\n});\n\n/** @internal */\nconst MapRequestResolversReducer = f => ({\n  emptyCase: () => empty,\n  parCase: (left, right) => par(left, right),\n  seqCase: (left, right) => seq(left, right),\n  singleCase: (dataSource, blockedRequest) => single(f(dataSource), blockedRequest)\n});\n/**\n * Transforms all data sources with the specified data source aspect, which\n * can change the environment type of data sources but must preserve the\n * request type of each data source.\n *\n * @internal\n */\nconst mapRequestResolvers = (self, f) => reduce(self, MapRequestResolversReducer(f));\n\n/**\n * Folds over the cases of this collection of blocked requests with the\n * specified functions.\n *\n * @internal\n */\nconst reduce = (self, reducer) => {\n  let input = of(self);\n  let output = empty$1();\n  while (isCons(input)) {\n    const current = input.head;\n    switch (current._tag) {\n      case \"Empty\":\n        {\n          output = cons(right(reducer.emptyCase()), output);\n          input = input.tail;\n          break;\n        }\n      case \"Par\":\n        {\n          output = cons(left({\n            _tag: \"ParCase\"\n          }), output);\n          input = cons(current.left, cons(current.right, input.tail));\n          break;\n        }\n      case \"Seq\":\n        {\n          output = cons(left({\n            _tag: \"SeqCase\"\n          }), output);\n          input = cons(current.left, cons(current.right, input.tail));\n          break;\n        }\n      case \"Single\":\n        {\n          const result = reducer.singleCase(current.dataSource, current.blockedRequest);\n          output = cons(right(result), output);\n          input = input.tail;\n          break;\n        }\n    }\n  }\n  const result = reduce$1(output, empty$1(), (acc, current) => {\n    switch (current._tag) {\n      case \"Left\":\n        {\n          const left = unsafeHead(acc);\n          const right = unsafeHead(unsafeTail(acc));\n          const tail = unsafeTail(unsafeTail(acc));\n          switch (current.left._tag) {\n            case \"ParCase\":\n              {\n                return cons(reducer.parCase(left, right), tail);\n              }\n            case \"SeqCase\":\n              {\n                return cons(reducer.seqCase(left, right), tail);\n              }\n          }\n        }\n      case \"Right\":\n        {\n          return cons(current.right, acc);\n        }\n    }\n  });\n  if (isNil(result)) {\n    throw new Error(\"BUG: BlockedRequests.reduce - please report an issue at https://github.com/Effect-TS/query/issues\");\n  }\n  return result.head;\n};\n\n/**\n * Flattens a collection of blocked requests into a collection of pipelined\n * and batched requests that can be submitted for execution.\n *\n * @internal\n */\nconst flatten = self => {\n  let current = of(self);\n  let updated = empty$1();\n  // eslint-disable-next-line no-constant-condition\n  while (1) {\n    const [parallel, sequential] = reduce$1(current, [parallelCollectionEmpty(), empty$1()], ([parallel, sequential], blockedRequest) => {\n      const [par, seq] = step(blockedRequest);\n      return [parallelCollectionCombine(parallel, par), appendAll(sequential, seq)];\n    });\n    updated = merge(updated, parallel);\n    if (isNil(sequential)) {\n      return reverse(updated);\n    }\n    current = sequential;\n  }\n  throw new Error(\"BUG: BlockedRequests.flatten - please report an issue at https://github.com/Effect-TS/query/issues\");\n};\n\n/**\n * Takes one step in evaluating a collection of blocked requests, returning a\n * collection of blocked requests that can be performed in parallel and a list\n * of blocked requests that must be performed sequentially after those\n * requests.\n */\nconst step = requests => {\n  let current = requests;\n  let parallel = parallelCollectionEmpty();\n  let stack = empty$1();\n  let sequential = empty$1();\n  // eslint-disable-next-line no-constant-condition\n  while (1) {\n    switch (current._tag) {\n      case \"Empty\":\n        {\n          if (isNil(stack)) {\n            return [parallel, sequential];\n          }\n          current = stack.head;\n          stack = stack.tail;\n          break;\n        }\n      case \"Par\":\n        {\n          stack = cons(current.right, stack);\n          current = current.left;\n          break;\n        }\n      case \"Seq\":\n        {\n          const left = current.left;\n          const right = current.right;\n          switch (left._tag) {\n            case \"Empty\":\n              {\n                current = right;\n                break;\n              }\n            case \"Par\":\n              {\n                const l = left.left;\n                const r = left.right;\n                current = par(seq(l, right), seq(r, right));\n                break;\n              }\n            case \"Seq\":\n              {\n                const l = left.left;\n                const r = left.right;\n                current = seq(l, seq(r, right));\n                break;\n              }\n            case \"Single\":\n              {\n                current = left;\n                sequential = cons(right, sequential);\n                break;\n              }\n          }\n          break;\n        }\n      case \"Single\":\n        {\n          parallel = parallelCollectionCombine(parallel, parallelCollectionMake(current.dataSource, current.blockedRequest));\n          if (isNil(stack)) {\n            return [parallel, sequential];\n          }\n          current = stack.head;\n          stack = stack.tail;\n          break;\n        }\n    }\n  }\n  throw new Error(\"BUG: BlockedRequests.step - please report an issue at https://github.com/Effect-TS/query/issues\");\n};\n\n/**\n * Merges a collection of requests that must be executed sequentially with a\n * collection of requests that can be executed in parallel. If the collections\n * are both from the same single data source then the requests can be\n * pipelined while preserving ordering guarantees.\n */\nconst merge = (sequential, parallel) => {\n  if (isNil(sequential)) {\n    return of(parallelCollectionToSequentialCollection(parallel));\n  }\n  if (parallelCollectionIsEmpty(parallel)) {\n    return sequential;\n  }\n  const seqHeadKeys = sequentialCollectionKeys(sequential.head);\n  const parKeys = parallelCollectionKeys(parallel);\n  if (seqHeadKeys.length === 1 && parKeys.length === 1 && equals(seqHeadKeys[0], parKeys[0])) {\n    return cons(sequentialCollectionCombine(sequential.head, parallelCollectionToSequentialCollection(parallel)), sequential.tail);\n  }\n  return cons(parallelCollectionToSequentialCollection(parallel), sequential);\n};\n\n//\n// circular\n//\n\n/** @internal */\nconst EntryTypeId = /*#__PURE__*/Symbol.for(\"effect/RequestBlock/Entry\");\n\n/** @internal */\nclass EntryImpl {\n  [EntryTypeId] = blockedRequestVariance;\n  constructor(request, result, listeners, ownerId, state) {\n    this.request = request;\n    this.result = result;\n    this.listeners = listeners;\n    this.ownerId = ownerId;\n    this.state = state;\n  }\n}\n\n/** @internal */\nconst blockedRequestVariance = {\n  _R: _ => _\n};\n\n/** @internal */\nconst isEntry = u => hasProperty(u, EntryTypeId);\n\n/** @internal */\nconst makeEntry = options => new EntryImpl(options.request, options.result, options.listeners, options.ownerId, options.state);\n\n/** @internal */\nconst RequestBlockParallelTypeId = /*#__PURE__*/Symbol.for(\"effect/RequestBlock/RequestBlockParallel\");\nconst parallelVariance = {\n  _R: _ => _\n};\nclass ParallelImpl {\n  [RequestBlockParallelTypeId] = parallelVariance;\n  constructor(map) {\n    this.map = map;\n  }\n}\n\n/** @internal */\nconst parallelCollectionEmpty = () => new ParallelImpl(empty$2());\n\n/** @internal */\nconst parallelCollectionMake = (dataSource, blockedRequest) => new ParallelImpl(make([dataSource, Array.of(blockedRequest)]));\n\n/** @internal */\nconst parallelCollectionCombine = (self, that) => new ParallelImpl(reduce$2(self.map, that.map, (map, value, key) => set(map, key, match(get(map, key), {\n  onNone: () => value,\n  onSome: a => [...a, ...value]\n}))));\n\n/** @internal */\nconst parallelCollectionIsEmpty = self => isEmpty(self.map);\n\n/** @internal */\nconst parallelCollectionKeys = self => Array.from(keys(self.map));\n\n/** @internal */\nconst parallelCollectionToSequentialCollection = self => sequentialCollectionMake(map(self.map, x => Array.of(x)));\n\n/** @internal */\nconst SequentialCollectionTypeId = /*#__PURE__*/Symbol.for(\"effect/RequestBlock/RequestBlockSequential\");\n\n/** @internal */\nconst sequentialVariance = {\n  _R: _ => _\n};\nclass SequentialImpl {\n  [SequentialCollectionTypeId] = sequentialVariance;\n  constructor(map) {\n    this.map = map;\n  }\n}\n\n/** @internal */\nconst sequentialCollectionMake = map => new SequentialImpl(map);\n\n/** @internal */\nconst sequentialCollectionCombine = (self, that) => new SequentialImpl(reduce$2(that.map, self.map, (map, value, key) => set(map, key, match(get(map, key), {\n  onNone: () => [],\n  onSome: a => [...a, ...value]\n}))));\n\n/** @internal */\nconst sequentialCollectionKeys = self => Array.from(keys(self.map));\n\n/** @internal */\nconst sequentialCollectionToChunk = self => Array.from(self.map);\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\nexport { EntryTypeId, MapRequestResolversReducer, RequestBlockParallelTypeId, SequentialCollectionTypeId, empty, flatten, isEntry, makeEntry, mapRequestResolvers, par, parallelCollectionCombine, parallelCollectionEmpty, parallelCollectionIsEmpty, parallelCollectionKeys, parallelCollectionMake, parallelCollectionToSequentialCollection, reduce, seq, sequentialCollectionCombine, sequentialCollectionKeys, sequentialCollectionMake, sequentialCollectionToChunk, single };\n","/** @internal */\nconst OP_STATE_PENDING = \"Pending\";\n\n/** @internal */\n\n/** @internal */\nconst OP_STATE_DONE = \"Done\";\n\n/** @internal */\n\nexport { OP_STATE_DONE, OP_STATE_PENDING };\n","import { OP_STATE_PENDING, OP_STATE_DONE } from './opCodes/deferred.esm.js';\n\n/** @internal */\nconst DeferredSymbolKey = \"effect/Deferred\";\n\n/** @internal */\nconst DeferredTypeId = /*#__PURE__*/Symbol.for(DeferredSymbolKey);\n\n/** @internal */\nconst deferredVariance = {\n  _E: _ => _,\n  _A: _ => _\n};\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst pending = joiners => {\n  return {\n    _tag: OP_STATE_PENDING,\n    joiners\n  };\n};\n\n/** @internal */\nconst done = effect => {\n  return {\n    _tag: OP_STATE_DONE,\n    effect\n  };\n};\n\nexport { DeferredTypeId, deferredVariance, done, pending };\n","import { dual } from '../Function/dist/effect-Function.esm.js';\n\n/** @internal */\nconst BIT_MASK = 0xff;\n\n/** @internal */\nconst BIT_SHIFT = 0x08;\n\n/** @internal */\nconst active = patch => patch & BIT_MASK;\n\n/** @internal */\nconst enabled = patch => patch >> BIT_SHIFT & BIT_MASK;\n\n/** @internal */\nconst make = (active, enabled) => (active & BIT_MASK) + ((enabled & active & BIT_MASK) << BIT_SHIFT);\n\n/** @internal */\nconst empty = /*#__PURE__*/make(0, 0);\n\n/** @internal */\nconst enable = flag => make(flag, flag);\n\n/** @internal */\nconst disable = flag => make(flag, 0);\n\n/** @internal */\nconst isEmpty = patch => patch === 0;\n\n/** @internal */\nconst isActive = /*#__PURE__*/dual(2, (self, flag) => (active(self) & flag) !== 0);\n\n/** @internal */\nconst isEnabled = /*#__PURE__*/dual(2, (self, flag) => (enabled(self) & flag) !== 0);\n\n/** @internal */\nconst isDisabled = /*#__PURE__*/dual(2, (self, flag) => (active(self) & flag) !== 0 && (enabled(self) & flag) === 0);\n\n/** @internal */\nconst exclude = /*#__PURE__*/dual(2, (self, flag) => make(active(self) & ~flag, enabled(self)));\n\n/** @internal */\nconst both = /*#__PURE__*/dual(2, (self, that) => make(active(self) | active(that), enabled(self) & enabled(that)));\n\n/** @internal */\nconst either = /*#__PURE__*/dual(2, (self, that) => make(active(self) | active(that), enabled(self) | enabled(that)));\n\n/** @internal */\nconst andThen = /*#__PURE__*/dual(2, (self, that) => self | that);\n\n/** @internal */\nconst inverse = patch => make(enabled(patch), invert(active(patch)));\n\n/** @internal */\nconst invert = n => ~n >>> 0 & BIT_MASK;\n\nexport { active, andThen, both, disable, either, empty, enable, enabled, exclude, inverse, invert, isActive, isDisabled, isEmpty, isEnabled, make };\n","import { make as make$2 } from '../Differ/dist/effect-Differ.esm.js';\nimport { dual } from '../Function/dist/effect-Function.esm.js';\nimport { active, enabled, make as make$1, invert, empty, andThen } from './runtimeFlagsPatch.esm.js';\n\n/** @internal */\nconst None = 0;\n\n/** @internal */\nconst Interruption = 1 << 0;\n\n/** @internal */\nconst OpSupervision = 1 << 1;\n\n/** @internal */\nconst RuntimeMetrics = 1 << 2;\n\n/** @internal */\nconst WindDown = 1 << 4;\n\n/** @internal */\nconst CooperativeYielding = 1 << 5;\n\n/** @internal */\nconst allFlags = [None, Interruption, OpSupervision, RuntimeMetrics, WindDown, CooperativeYielding];\nconst print = flag => {\n  switch (flag) {\n    case CooperativeYielding:\n      {\n        return \"CooperativeYielding\";\n      }\n    case WindDown:\n      {\n        return \"WindDown\";\n      }\n    case RuntimeMetrics:\n      {\n        return \"RuntimeMetrics\";\n      }\n    case OpSupervision:\n      {\n        return \"OpSupervision\";\n      }\n    case Interruption:\n      {\n        return \"Interruption\";\n      }\n    case None:\n      {\n        return \"None\";\n      }\n  }\n};\n\n/** @internal */\nconst cooperativeYielding = self => isEnabled(self, CooperativeYielding);\n\n/** @internal */\nconst disable = /*#__PURE__*/dual(2, (self, flag) => self & ~flag);\n\n/** @internal */\nconst disableAll = /*#__PURE__*/dual(2, (self, flags) => self & ~flags);\n\n/** @internal */\nconst enable = /*#__PURE__*/dual(2, (self, flag) => self | flag);\n\n/** @internal */\nconst enableAll = /*#__PURE__*/dual(2, (self, flags) => self | flags);\n\n/** @internal */\nconst interruptible = self => interruption(self) && !windDown(self);\n\n/** @internal */\nconst interruption = self => isEnabled(self, Interruption);\n\n/** @internal */\nconst isDisabled = /*#__PURE__*/dual(2, (self, flag) => !isEnabled(self, flag));\n\n/** @internal */\nconst isEnabled = /*#__PURE__*/dual(2, (self, flag) => (self & flag) !== 0);\n\n/** @internal */\nconst make = (...flags) => flags.reduce((a, b) => a | b, 0);\n\n/** @internal */\nconst none = /*#__PURE__*/make(None);\n\n/** @internal */\nconst opSupervision = self => isEnabled(self, OpSupervision);\n\n/** @internal */\nconst render = self => {\n  const active = [];\n  allFlags.forEach(flag => {\n    if (isEnabled(self, flag)) {\n      active.push(`${print(flag)}`);\n    }\n  });\n  return `RuntimeFlags(${active.join(\", \")})`;\n};\n\n/** @internal */\nconst runtimeMetrics = self => isEnabled(self, RuntimeMetrics);\n\n/** @internal */\nconst toSet = self => new Set(allFlags.filter(flag => isEnabled(self, flag)));\nconst windDown = self => isEnabled(self, WindDown);\n\n// circular with RuntimeFlagsPatch\n\n/** @internal */\nconst enabledSet = self => toSet(active(self) & enabled(self));\n\n/** @internal */\nconst disabledSet = self => toSet(active(self) & ~enabled(self));\n\n/** @internal */\nconst diff = /*#__PURE__*/dual(2, (self, that) => make$1(self ^ that, that));\n\n/** @internal */\nconst patch = /*#__PURE__*/dual(2, (self, patch) => self & (invert(active(patch)) | enabled(patch)) | active(patch) & enabled(patch));\n\n/** @internal */\nconst renderPatch = self => {\n  const enabled = Array.from(enabledSet(self)).map(flag => print(flag)).join(\", \");\n  const disabled = Array.from(disabledSet(self)).map(flag => print(flag)).join(\", \");\n  return `RuntimeFlagsPatch(enabled = (${enabled}), disabled = (${disabled}))`;\n};\n\n/** @internal */\nconst differ = /*#__PURE__*/make$2({\n  empty: empty,\n  diff: (oldValue, newValue) => diff(oldValue, newValue),\n  combine: (first, second) => andThen(second)(first),\n  patch: (_patch, oldValue) => patch(oldValue, _patch)\n});\n\nexport { CooperativeYielding, Interruption, None, OpSupervision, RuntimeMetrics, WindDown, allFlags, cooperativeYielding, diff, differ, disable, disableAll, disabledSet, enable, enableAll, enabledSet, interruptible, interruption, isDisabled, isEnabled, make, none, opSupervision, patch, render, renderPatch, runtimeMetrics, toSet, windDown };\n","import { Tag, empty } from '../Context/dist/effect-Context.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { incrementAndGet, make as make$1 } from '../MutableRef/dist/effect-MutableRef.esm.js';\n\n/**\n * @since 2.0.0\n */\n/** @internal */\nconst TracerTypeId = /*#__PURE__*/Symbol.for(\"effect/Tracer\");\n\n/** @internal */\nconst make = options => ({\n  [TracerTypeId]: TracerTypeId,\n  ...options\n});\n\n/** @internal */\nconst tracerTag = /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/Tracer\"));\n\n/** @internal */\nconst spanTag = /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/ParentSpan\"));\nconst ids = /*#__PURE__*/globalValue(\"effect/Tracer/SpanId.ids\", () => make$1(0));\n\n/** @internal */\nclass NativeSpan {\n  _tag = \"Span\";\n  traceId = \"native\";\n  sampled = true;\n  events = [];\n  constructor(name, parent, context, links, startTime) {\n    this.name = name;\n    this.parent = parent;\n    this.context = context;\n    this.links = links;\n    this.startTime = startTime;\n    this.status = {\n      _tag: \"Started\",\n      startTime\n    };\n    this.attributes = new Map();\n    this.spanId = `span${incrementAndGet(ids)}`;\n  }\n  end = (endTime, exit) => {\n    this.status = {\n      _tag: \"Ended\",\n      endTime,\n      exit,\n      startTime: this.status.startTime\n    };\n  };\n  attribute = (key, value) => {\n    this.attributes.set(key, value);\n  };\n  event = (name, startTime, attributes) => {\n    this.events.push([name, startTime, attributes ?? {}]);\n  };\n}\n\n/** @internal */\nconst nativeTracer = /*#__PURE__*/make({\n  span: (name, parent, context, links, startTime) => new NativeSpan(name, parent, context, links, startTime),\n  context: f => f()\n});\n\n/** @internal */\nconst externalSpan = options => ({\n  _tag: \"ExternalSpan\",\n  spanId: options.spanId,\n  traceId: options.traceId,\n  sampled: options.sampled ?? true,\n  context: options.context ?? empty()\n});\n\nexport { NativeSpan, TracerTypeId, externalSpan, make, nativeTracer, spanTag, tracerTag };\n","import { enabledSet as enabledSet$1, disabledSet as disabledSet$1, renderPatch } from '../../internal/runtimeFlags.esm.js';\nimport { empty as empty$1, make as make$1, enable as enable$1, disable as disable$1, isEmpty as isEmpty$1, isActive as isActive$1, isEnabled as isEnabled$1, isDisabled as isDisabled$1, andThen as andThen$1, both as both$1, either as either$1, exclude as exclude$1, inverse as inverse$1 } from '../../internal/runtimeFlagsPatch.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * The empty `RuntimeFlagsPatch`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Creates a `RuntimeFlagsPatch` describing enabling the provided `RuntimeFlag`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst enable = enable$1;\n\n/**\n * Creates a `RuntimeFlagsPatch` describing disabling the provided `RuntimeFlag`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst disable = disable$1;\n\n/**\n * Returns `true` if the specified `RuntimeFlagsPatch` is empty.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isEmpty = isEmpty$1;\n\n/**\n * Returns `true` if the `RuntimeFlagsPatch` describes the specified\n * `RuntimeFlag` as active.\n *\n * @since 2.0.0\n * @category elements\n */\nconst isActive = isActive$1;\n\n/**\n * Returns `true` if the `RuntimeFlagsPatch` describes the specified\n * `RuntimeFlag` as enabled.\n *\n * @since 2.0.0\n * @category elements\n */\nconst isEnabled = isEnabled$1;\n\n/**\n * Returns `true` if the `RuntimeFlagsPatch` describes the specified\n * `RuntimeFlag` as disabled.\n *\n * @since 2.0.0\n * @category elements\n */\nconst isDisabled = isDisabled$1;\n\n/**\n * Returns `true` if the `RuntimeFlagsPatch` includes the specified\n * `RuntimeFlag`, `false` otherwise.\n *\n * @since 2.0.0\n * @category elements\n */\nconst includes = isActive$1;\n\n/**\n * Creates a `RuntimeFlagsPatch` describing the application of the `self` patch,\n * followed by `that` patch.\n *\n * @since 2.0.0\n * @category utils\n */\nconst andThen = andThen$1;\n\n/**\n * Creates a `RuntimeFlagsPatch` describing application of both the `self` patch\n * and `that` patch.\n *\n * @since 2.0.0\n * @category utils\n */\nconst both = both$1;\n\n/**\n * Creates a `RuntimeFlagsPatch` describing application of either the `self`\n * patch or `that` patch.\n *\n * @since 2.0.0\n * @category utils\n */\nconst either = either$1;\n\n/**\n * Creates a `RuntimeFlagsPatch` which describes exclusion of the specified\n * `RuntimeFlag` from the set of `RuntimeFlags`.\n *\n * @category utils\n * @since 2.0.0\n */\nconst exclude = exclude$1;\n\n/**\n * Creates a `RuntimeFlagsPatch` which describes the inverse of the patch\n * specified by the provided `RuntimeFlagsPatch`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst inverse = inverse$1;\n\n/**\n * Returns a `ReadonlySet<number>` containing the `RuntimeFlags` described as\n * enabled by the specified `RuntimeFlagsPatch`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst enabledSet = enabledSet$1;\n\n/**\n * Returns a `ReadonlySet<number>` containing the `RuntimeFlags` described as\n * disabled by the specified `RuntimeFlagsPatch`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst disabledSet = disabledSet$1;\n\n/**\n * Renders the provided `RuntimeFlagsPatch` to a string.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst render = renderPatch;\n\nexport { andThen, both, disable, disabledSet, either, empty, enable, enabledSet, exclude, includes, inverse, isActive, isDisabled, isEmpty, isEnabled, make, render };\n","import { unsafeHead, make, empty as empty$6, fromIterable, isNonEmpty, reverse, headNonEmpty, of, prepend, tailNonEmpty } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { empty as empty$1, merge } from '../Context/dist/effect-Context.esm.js';\nimport { update, hashSet, environment } from '../Differ/dist/effect-Differ.esm.js';\nimport { isRight, left, right } from '../Either/dist/effect-Either.esm.js';\nimport { symbol, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { none } from '../FiberId/dist/effect-FiberId.esm.js';\nimport { dual, pipe, identity } from '../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { symbol as symbol$1, random, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { empty as empty$2 } from '../HashMap/dist/effect-HashMap.esm.js';\nimport { empty as empty$4 } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { toJSON, toString, NodeInspectSymbol } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { reduce, empty, par, seq, single } from './blockedRequests.esm.js';\nimport { failureOrCause, die as die$1, fail as fail$1, failures, defects, electFailures, interrupt as interrupt$1, isInterruptedOnly, interruptors, keepDefectsAndElectFailures, empty as empty$5, isInterrupted, parallel, sequential, map as map$1, RuntimeException } from './cause.esm.js';\nimport { DeferredTypeId, deferredVariance, pending, done } from './deferred.esm.js';\nimport { OP_STATE_PENDING, OP_STATE_DONE } from './opCodes/deferred.esm.js';\nimport { OP_SUCCESS, OP_FAILURE, OP_WITH_RUNTIME, OP_ON_FAILURE, OP_ON_SUCCESS, OP_ON_SUCCESS_AND_FAILURE, OP_UPDATE_RUNTIME_FLAGS, OP_SYNC, OP_WHILE, OP_YIELD, OP_REVERT_FLAGS, OP_ASYNC } from './opCodes/effect.esm.js';\nimport { Interruption, interruption, differ } from './runtimeFlags.esm.js';\nimport { spanTag } from './tracer.esm.js';\nimport { empty as empty$3 } from '../List/dist/effect-List.esm.js';\nimport { make as make$1, get, set } from '../MutableRef/dist/effect-MutableRef.esm.js';\nimport { getOrElse, getOrThrow, some, none as none$1, match, isSome } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty, isObject } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { reduce as reduce$1, fromIterable as fromIterable$1 } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\nimport { enable, disable } from '../RuntimeFlagsPatch/dist/effect-RuntimeFlagsPatch.esm.js';\nimport { effectVariance } from './Effectable.esm.js';\n\n// -----------------------------------------------------------------------------\n// Effect\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst EffectErrorSymbolKey = \"effect/EffectError\";\n\n/** @internal */\nconst EffectErrorTypeId = /*#__PURE__*/Symbol.for(EffectErrorSymbolKey);\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst isEffectError = u => hasProperty(u, EffectErrorTypeId);\n\n/** @internal */\nconst makeEffectError = cause => ({\n  [EffectErrorTypeId]: EffectErrorTypeId,\n  _tag: \"EffectError\",\n  cause\n});\n\n/**\n * @internal\n */\nconst blocked = (blockedRequests, _continue) => {\n  const effect = new EffectPrimitive(\"Blocked\");\n  effect.i0 = blockedRequests;\n  effect.i1 = _continue;\n  return effect;\n};\n\n/**\n * @internal\n */\nconst runRequestBlock = blockedRequests => {\n  const effect = new EffectPrimitive(\"RunBlocked\");\n  effect.i0 = blockedRequests;\n  return effect;\n};\n\n/** @internal */\nconst EffectTypeId = /*#__PURE__*/Symbol.for(\"effect/Effect\");\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nclass RevertFlags {\n  _op = OP_REVERT_FLAGS;\n  constructor(patch, op) {\n    this.patch = patch;\n    this.op = op;\n  }\n}\n\n/** @internal */\nclass EffectPrimitive {\n  i0 = undefined;\n  i1 = undefined;\n  i2 = undefined;\n  trace = undefined;\n  [EffectTypeId] = effectVariance;\n  constructor(_op) {\n    this._op = _op;\n  }\n  [symbol](that) {\n    return this === that;\n  }\n  [symbol$1]() {\n    return random(this);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  toJSON() {\n    return {\n      _id: \"Effect\",\n      _op: this._op,\n      i0: toJSON(this.i0),\n      i1: toJSON(this.i1),\n      i2: toJSON(this.i2)\n    };\n  }\n  toString() {\n    return toString(this.toJSON());\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n\n/** @internal */\nclass EffectPrimitiveFailure {\n  i0 = undefined;\n  i1 = undefined;\n  i2 = undefined;\n  trace = undefined;\n  [EffectTypeId] = effectVariance;\n  constructor(_op) {\n    this._op = _op;\n    // @ts-expect-error\n    this._tag = _op;\n  }\n  [symbol](that) {\n    return this === that;\n  }\n  [symbol$1]() {\n    return random(this);\n  }\n  get cause() {\n    return this.i0;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  toJSON() {\n    return {\n      _id: \"Exit\",\n      _tag: this._op,\n      cause: this.cause.toJSON()\n    };\n  }\n  toString() {\n    return toString(this.toJSON());\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n\n/** @internal */\nclass EffectPrimitiveSuccess {\n  i0 = undefined;\n  i1 = undefined;\n  i2 = undefined;\n  trace = undefined;\n  [EffectTypeId] = effectVariance;\n  constructor(_op) {\n    this._op = _op;\n    // @ts-expect-error\n    this._tag = _op;\n  }\n  [symbol](that) {\n    return this === that;\n  }\n  [symbol$1]() {\n    return random(this);\n  }\n  get value() {\n    return this.i0;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  toJSON() {\n    return {\n      _id: \"Exit\",\n      _tag: this._op,\n      value: toJSON(this.value)\n    };\n  }\n  toString() {\n    return toString(this.toJSON());\n  }\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  }\n}\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst isEffect = u => hasProperty(u, EffectTypeId);\n\n/* @internal */\nconst withFiberRuntime = withRuntime => {\n  const effect = new EffectPrimitive(OP_WITH_RUNTIME);\n  effect.i0 = withRuntime;\n  return effect;\n};\n\n/* @internal */\nconst acquireUseRelease = /*#__PURE__*/dual(3, (acquire, use, release) => uninterruptibleMask(restore => flatMap(acquire, a => flatMap(exit(suspend(() => restore(step(use(a))))), exit => {\n  if (exit._tag === \"Success\" && exit.value._op === \"Blocked\") {\n    const value = exit.value;\n    return blocked(value.i0, acquireUseRelease(succeed(a), () => value.i1, release));\n  }\n  const flat = exitFlatten(exit);\n  return suspend(() => release(a, flat)).pipe(matchCauseEffect({\n    onFailure: cause => {\n      switch (flat._tag) {\n        case OP_FAILURE:\n          {\n            return failCause(parallel(flat.i0, cause));\n          }\n        case OP_SUCCESS:\n          {\n            return failCause(cause);\n          }\n      }\n    },\n    onSuccess: () => flat\n  }));\n}))));\n\n/* @internal */\nconst as = /*#__PURE__*/dual(2, (self, value) => flatMap(self, () => succeed(value)));\n\n/* @internal */\nconst asUnit = self => as(self, void 0);\n\n/* @internal */\nconst async = (register, blockingOn = none) => suspend(() => {\n  let cancelerRef = undefined;\n  let controllerRef = undefined;\n  const effect = new EffectPrimitive(OP_ASYNC);\n  if (register.length !== 1) {\n    const controller = new AbortController();\n    controllerRef = controller;\n    effect.i0 = resume => {\n      cancelerRef = register(resume, controller.signal);\n    };\n  } else {\n    effect.i0 = resume => {\n      // @ts-expect-error\n      cancelerRef = register(resume);\n    };\n  }\n  effect.i1 = blockingOn;\n  return onInterrupt(effect, () => {\n    if (controllerRef) {\n      controllerRef.abort();\n    }\n    return cancelerRef ?? unit;\n  });\n});\n\n/* @internal */\nconst asyncEither = (register, blockingOn = none) => async(resume => {\n  const result = register(resume);\n  if (isRight(result)) {\n    resume(result.right);\n  } else {\n    return result.left;\n  }\n}, blockingOn);\n\n/* @internal */\nconst catchAllCause = /*#__PURE__*/dual(2, (self, f) => {\n  const effect = new EffectPrimitive(OP_ON_FAILURE);\n  effect.i0 = self;\n  effect.i1 = f;\n  return effect;\n});\n\n/* @internal */\nconst catchAll = /*#__PURE__*/dual(2, (self, f) => matchEffect(self, {\n  onFailure: f,\n  onSuccess: succeed\n}));\n\n/**\n * @macro identity\n * @internal\n */\nconst unified = f => (...args) => f(...args);\n\n/* @internal */\nconst catchIf = /*#__PURE__*/dual(3, (self, predicate, f) => catchAllCause(self, cause => {\n  const either = failureOrCause(cause);\n  switch (either._tag) {\n    case \"Left\":\n      {\n        return predicate(either.left) ? f(either.left) : failCause(cause);\n      }\n    case \"Right\":\n      {\n        return failCause(either.right);\n      }\n  }\n}));\n\n/* @internal */\nconst catchSome = /*#__PURE__*/dual(2, (self, pf) => catchAllCause(self, cause => {\n  const either = failureOrCause(cause);\n  switch (either._tag) {\n    case \"Left\":\n      {\n        return pipe(pf(either.left), getOrElse(() => failCause(cause)));\n      }\n    case \"Right\":\n      {\n        return failCause(either.right);\n      }\n  }\n}));\n\n/* @internal */\nconst checkInterruptible = f => withFiberRuntime((_, status) => f(interruption(status.runtimeFlags)));\nconst spanSymbol = /*#__PURE__*/Symbol.for(\"effect/SpanAnnotation\");\nconst originalSymbol = /*#__PURE__*/Symbol.for(\"effect/OriginalAnnotation\");\n\n/* @internal */\nconst originalInstance = obj => {\n  if (hasProperty(obj, originalSymbol)) {\n    // @ts-expect-error\n    return obj[originalSymbol];\n  }\n  return obj;\n};\n\n/* @internal */\nconst capture = (obj, span) => {\n  if (isSome(span)) {\n    return new Proxy(obj, {\n      has(target, p) {\n        return p === spanSymbol || p === originalSymbol || p in target;\n      },\n      get(target, p) {\n        if (p === spanSymbol) {\n          return span.value;\n        }\n        if (p === originalSymbol) {\n          return obj;\n        }\n        // @ts-expect-error\n        return target[p];\n      }\n    });\n  }\n  return obj;\n};\n\n/* @internal */\nconst die = defect => isObject(defect) && !(spanSymbol in defect) ? withFiberRuntime(fiber => failCause(die$1(capture(defect, currentSpanFromFiber(fiber))))) : failCause(die$1(defect));\n\n/* @internal */\nconst dieMessage = message => failCauseSync(() => die$1(RuntimeException(message)));\n\n/* @internal */\nconst dieSync = evaluate => flatMap(sync(evaluate), die);\n\n/* @internal */\nconst either = self => matchEffect(self, {\n  onFailure: e => succeed(left(e)),\n  onSuccess: a => succeed(right(a))\n});\n\n/* @internal */\nconst exit = self => matchCause(self, {\n  onFailure: exitFailCause,\n  onSuccess: exitSucceed\n});\n\n/* @internal */\nconst fail = error => isObject(error) && !(spanSymbol in error) ? withFiberRuntime(fiber => failCause(fail$1(capture(error, currentSpanFromFiber(fiber))))) : failCause(fail$1(error));\n\n/* @internal */\nconst failSync = evaluate => flatMap(sync(evaluate), fail);\n\n/* @internal */\nconst failCause = cause => {\n  const effect = new EffectPrimitiveFailure(OP_FAILURE);\n  effect.i0 = cause;\n  return effect;\n};\n\n/* @internal */\nconst failCauseSync = evaluate => flatMap(sync(evaluate), failCause);\n\n/* @internal */\nconst fiberId = /*#__PURE__*/withFiberRuntime(state => succeed(state.id()));\n\n/* @internal */\nconst fiberIdWith = f => withFiberRuntime(state => f(state.id()));\n\n/* @internal */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  const effect = new EffectPrimitive(OP_ON_SUCCESS);\n  effect.i0 = self;\n  effect.i1 = f;\n  return effect;\n});\n\n/* @internal */\nconst step = self => {\n  const effect = new EffectPrimitive(\"OnStep\");\n  effect.i0 = self;\n  effect.i1 = exitSucceed;\n  return effect;\n};\n\n/* @internal */\nconst flatMapStep = (self, f) => {\n  const effect = new EffectPrimitive(\"OnStep\");\n  effect.i0 = self;\n  effect.i1 = f;\n  return effect;\n};\n\n/* @internal */\nconst flatten = self => flatMap(self, identity);\n\n/* @internal */\nconst flip = self => matchEffect(self, {\n  onFailure: succeed,\n  onSuccess: fail\n});\n\n/* @internal */\nconst matchCause = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => matchCauseEffect(self, {\n  onFailure: cause => succeed(onFailure(cause)),\n  onSuccess: a => succeed(onSuccess(a))\n}));\n\n/* @internal */\nconst matchCauseEffect = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => {\n  const effect = new EffectPrimitive(OP_ON_SUCCESS_AND_FAILURE);\n  effect.i0 = self;\n  effect.i1 = onFailure;\n  effect.i2 = onSuccess;\n  return effect;\n});\n\n/* @internal */\nconst matchEffect = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const failures$1 = failures(cause);\n    const defects$1 = defects(cause);\n    if (defects$1.length > 0) {\n      return failCause(electFailures(cause));\n    }\n    if (failures$1.length > 0) {\n      return onFailure(unsafeHead(failures$1));\n    }\n    return failCause(cause);\n  },\n  onSuccess\n}));\n\n/* @internal */\nconst forEachSequential = /*#__PURE__*/dual(2, (self, f) => suspend(() => {\n  const arr = fromIterable$1(self);\n  const ret = new Array(arr.length);\n  let i = 0;\n  return as(whileLoop({\n    while: () => i < arr.length,\n    body: () => f(arr[i], i),\n    step: b => {\n      ret[i++] = b;\n    }\n  }), ret);\n}));\n\n/* @internal */\nconst forEachSequentialDiscard = /*#__PURE__*/dual(2, (self, f) => suspend(() => {\n  const arr = fromIterable$1(self);\n  let i = 0;\n  return whileLoop({\n    while: () => i < arr.length,\n    body: () => f(arr[i], i),\n    step: () => {\n      i++;\n    }\n  });\n}));\n\n/* @internal */\nconst if_ = /*#__PURE__*/dual(args => typeof args[0] === \"boolean\" || isEffect(args[0]), (self, {\n  onFalse,\n  onTrue\n}) => typeof self === \"boolean\" ? self ? onTrue : onFalse : flatMap(self, unified(b => b ? onTrue : onFalse)));\n\n/* @internal */\nconst interrupt = /*#__PURE__*/flatMap(fiberId, fiberId => interruptWith(fiberId));\n\n/* @internal */\nconst interruptWith = fiberId => failCause(interrupt$1(fiberId));\n\n/* @internal */\nconst interruptible = self => {\n  const effect = new EffectPrimitive(OP_UPDATE_RUNTIME_FLAGS);\n  effect.i0 = enable(Interruption);\n  const _continue = orBlock => {\n    if (orBlock._tag === \"Blocked\") {\n      return blocked(orBlock.i0, interruptible(orBlock.i1));\n    } else {\n      return orBlock;\n    }\n  };\n  effect.i1 = () => flatMapStep(self, _continue);\n  return effect;\n};\n\n/* @internal */\nconst interruptibleMask = f => {\n  const effect = new EffectPrimitive(OP_UPDATE_RUNTIME_FLAGS);\n  effect.i0 = enable(Interruption);\n  const _continue = step => {\n    if (step._op === \"Blocked\") {\n      return blocked(step.i0, interruptible(step.i1));\n    }\n    return step;\n  };\n  effect.i1 = oldFlags => interruption(oldFlags) ? step(f(interruptible)) : step(f(uninterruptible));\n  return flatMap(effect, _continue);\n};\n\n/* @internal */\nconst intoDeferred = /*#__PURE__*/dual(2, (self, deferred) => uninterruptibleMask(restore => flatMap(exit(restore(self)), exit => deferredDone(deferred, exit))));\n\n/* @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => sync(() => f(a))));\n\n/* @internal */\nconst mapBoth = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => matchEffect(self, {\n  onFailure: e => failSync(() => onFailure(e)),\n  onSuccess: a => sync(() => onSuccess(a))\n}));\n\n/* @internal */\nconst mapError = /*#__PURE__*/dual(2, (self, f) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const either = failureOrCause(cause);\n    switch (either._tag) {\n      case \"Left\":\n        {\n          return failSync(() => f(either.left));\n        }\n      case \"Right\":\n        {\n          return failCause(either.right);\n        }\n    }\n  },\n  onSuccess: succeed\n}));\n\n/* @internal */\nconst onError = /*#__PURE__*/dual(2, (self, cleanup) => onExit(self, unified(exit => exitIsSuccess(exit) ? unit : cleanup(exit.i0))));\n\n/* @internal */\nconst onExit = /*#__PURE__*/dual(2, (self, cleanup) => uninterruptibleMask(restore => matchCauseEffect(restore(self), {\n  onFailure: cause1 => {\n    const result = exitFailCause(cause1);\n    return matchCauseEffect(cleanup(result), {\n      onFailure: cause2 => exitFailCause(sequential(cause1, cause2)),\n      onSuccess: () => result\n    });\n  },\n  onSuccess: success => {\n    const result = exitSucceed(success);\n    return zipRight(cleanup(result), result);\n  }\n})));\n\n/* @internal */\nconst onInterrupt = /*#__PURE__*/dual(2, (self, cleanup) => onExit(self, exitMatch({\n  onFailure: cause => isInterruptedOnly(cause) ? asUnit(cleanup(interruptors(cause))) : unit,\n  onSuccess: () => unit\n})));\n\n/* @internal */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => attemptOrElse(self, that, succeed));\n\n/* @internal */\nconst orDie = self => orDieWith(self, identity);\n\n/* @internal */\nconst orDieWith = /*#__PURE__*/dual(2, (self, f) => matchEffect(self, {\n  onFailure: e => die(f(e)),\n  onSuccess: succeed\n}));\n\n/* @internal */\nconst partitionMap = (elements, f) => fromIterable$1(elements).reduceRight(([lefts, rights], current) => {\n  const either = f(current);\n  switch (either._tag) {\n    case \"Left\":\n      {\n        return [[either.left, ...lefts], rights];\n      }\n    case \"Right\":\n      {\n        return [lefts, [either.right, ...rights]];\n      }\n  }\n}, [new Array(), new Array()]);\n\n/* @internal */\nconst runtimeFlags = /*#__PURE__*/withFiberRuntime((_, status) => succeed(status.runtimeFlags));\n\n/* @internal */\nconst succeed = value => {\n  const effect = new EffectPrimitiveSuccess(OP_SUCCESS);\n  effect.i0 = value;\n  return effect;\n};\n\n/* @internal */\nconst suspend = effect => flatMap(sync(effect), identity);\n\n/* @internal */\nconst sync = evaluate => {\n  const effect = new EffectPrimitive(OP_SYNC);\n  effect.i0 = evaluate;\n  return effect;\n};\n\n/* @internal */\nconst tap = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => as(f(a), a)));\n\n/* @internal */\nconst transplant = f => withFiberRuntime(state => {\n  const scopeOverride = state.getFiberRef(currentForkScopeOverride);\n  const scope = pipe(scopeOverride, getOrElse(() => state.scope()));\n  return f(fiberRefLocally(currentForkScopeOverride, some(scope)));\n});\n\n/* @internal */\nconst attemptOrElse = /*#__PURE__*/dual(3, (self, that, onSuccess) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const defects$1 = defects(cause);\n    if (defects$1.length > 0) {\n      return failCause(getOrThrow(keepDefectsAndElectFailures(cause)));\n    }\n    return that();\n  },\n  onSuccess\n}));\n\n/* @internal */\nconst uninterruptible = self => {\n  const effect = new EffectPrimitive(OP_UPDATE_RUNTIME_FLAGS);\n  effect.i0 = disable(Interruption);\n  effect.i1 = () => flatMapStep(self, _continue);\n  const _continue = orBlock => {\n    if (orBlock._tag === \"Blocked\") {\n      return blocked(orBlock.i0, uninterruptible(orBlock.i1));\n    } else {\n      return orBlock;\n    }\n  };\n  return effect;\n};\n\n/* @internal */\nconst uninterruptibleMask = f => {\n  const effect = new EffectPrimitive(OP_UPDATE_RUNTIME_FLAGS);\n  effect.i0 = disable(Interruption);\n  const _continue = step => {\n    if (step._op === \"Blocked\") {\n      return blocked(step.i0, uninterruptible(step.i1));\n    }\n    return step;\n  };\n  effect.i1 = oldFlags => interruption(oldFlags) ? step(f(interruptible)) : step(f(uninterruptible));\n  return flatMap(effect, _continue);\n};\n\n/* @internal */\nconst unit = /*#__PURE__*/succeed(void 0);\n\n/* @internal */\nconst updateRuntimeFlags = patch => {\n  const effect = new EffectPrimitive(OP_UPDATE_RUNTIME_FLAGS);\n  effect.i0 = patch;\n  effect.i1 = void 0;\n  return effect;\n};\n\n/* @internal */\nconst whenEffect = /*#__PURE__*/dual(2, (self, predicate) => flatMap(predicate, b => {\n  if (b) {\n    return pipe(self, map(some));\n  }\n  return succeed(none$1());\n}));\n\n/* @internal */\nconst whileLoop = options => {\n  const effect = new EffectPrimitive(OP_WHILE);\n  effect.i0 = options.while;\n  effect.i1 = options.body;\n  effect.i2 = options.step;\n  return effect;\n};\n\n/* @internal */\nconst withConcurrency = /*#__PURE__*/dual(2, (self, concurrency) => fiberRefLocally(self, currentConcurrency, concurrency));\n\n/* @internal */\nconst withRequestBatching = /*#__PURE__*/dual(2, (self, requestBatching) => fiberRefLocally(self, currentRequestBatching, requestBatching));\n\n/* @internal */\nconst withRuntimeFlags = /*#__PURE__*/dual(2, (self, update) => {\n  const effect = new EffectPrimitive(OP_UPDATE_RUNTIME_FLAGS);\n  effect.i0 = update;\n  effect.i1 = () => self;\n  return effect;\n});\n\n/** @internal */\nconst withTracerTiming = /*#__PURE__*/dual(2, (effect, enabled) => fiberRefLocally(effect, currentTracerTimingEnabled, enabled));\n\n/* @internal */\nconst yieldNow = options => {\n  const effect = new EffectPrimitive(OP_YIELD);\n  return typeof options?.priority !== \"undefined\" ? withSchedulingPriority(options.priority)(effect) : effect;\n};\n\n/* @internal */\nconst zip = /*#__PURE__*/dual(2, (self, that) => flatMap(self, a => map(that, b => [a, b])));\n\n/* @internal */\nconst zipLeft = /*#__PURE__*/dual(2, (self, that) => flatMap(self, a => as(that, a)));\n\n/* @internal */\nconst zipRight = /*#__PURE__*/dual(2, (self, that) => flatMap(self, () => that));\n\n/* @internal */\nconst zipWith = /*#__PURE__*/dual(3, (self, that, f) => flatMap(self, a => map(that, b => f(a, b))));\n\n/* @internal */\nconst never = /*#__PURE__*/asyncEither(() => {\n  const interval = setInterval(() => {\n    //\n  }, 2 ** 31 - 1);\n  return left(sync(() => clearInterval(interval)));\n});\n\n// -----------------------------------------------------------------------------\n// Fiber\n// -----------------------------------------------------------------------------\n\n/* @internal */\nconst interruptFiber = self => flatMap(fiberId, fiberId => pipe(self, interruptAsFiber(fiberId)));\n\n/* @internal */\nconst interruptAsFiber = /*#__PURE__*/dual(2, (self, fiberId) => flatMap(self.interruptAsFork(fiberId), () => self.await()));\n\n// -----------------------------------------------------------------------------\n// LogLevel\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst logLevelAll = {\n  _tag: \"All\",\n  syslog: 0,\n  label: \"ALL\",\n  ordinal: Number.MIN_SAFE_INTEGER,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst logLevelFatal = {\n  _tag: \"Fatal\",\n  syslog: 2,\n  label: \"FATAL\",\n  ordinal: 50000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst logLevelError = {\n  _tag: \"Error\",\n  syslog: 3,\n  label: \"ERROR\",\n  ordinal: 40000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst logLevelWarning = {\n  _tag: \"Warning\",\n  syslog: 4,\n  label: \"WARN\",\n  ordinal: 30000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst logLevelInfo = {\n  _tag: \"Info\",\n  syslog: 6,\n  label: \"INFO\",\n  ordinal: 20000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst logLevelDebug = {\n  _tag: \"Debug\",\n  syslog: 7,\n  label: \"DEBUG\",\n  ordinal: 10000,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst logLevelTrace = {\n  _tag: \"Trace\",\n  syslog: 7,\n  label: \"TRACE\",\n  ordinal: 0,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst logLevelNone = {\n  _tag: \"None\",\n  syslog: 7,\n  label: \"OFF\",\n  ordinal: Number.MAX_SAFE_INTEGER,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst allLogLevels = [logLevelAll, logLevelTrace, logLevelDebug, logLevelInfo, logLevelWarning, logLevelError, logLevelFatal, logLevelNone];\n\n// -----------------------------------------------------------------------------\n// FiberRef\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst FiberRefSymbolKey = \"effect/FiberRef\";\n\n/** @internal */\nconst FiberRefTypeId = /*#__PURE__*/Symbol.for(FiberRefSymbolKey);\n\n/** @internal */\nconst fiberRefVariance = {\n  _A: _ => _\n};\n\n/* @internal */\nconst fiberRefGet = self => fiberRefModify(self, a => [a, a]);\n\n/* @internal */\nconst fiberRefGetAndSet = /*#__PURE__*/dual(2, (self, value) => fiberRefModify(self, v => [v, value]));\n\n/* @internal */\nconst fiberRefGetAndUpdate = /*#__PURE__*/dual(2, (self, f) => fiberRefModify(self, v => [v, f(v)]));\n\n/* @internal */\nconst fiberRefGetAndUpdateSome = /*#__PURE__*/dual(2, (self, pf) => fiberRefModify(self, v => [v, getOrElse(pf(v), () => v)]));\n\n/* @internal */\nconst fiberRefGetWith = /*#__PURE__*/dual(2, (self, f) => flatMap(fiberRefGet(self), f));\n\n/* @internal */\nconst fiberRefSet = /*#__PURE__*/dual(2, (self, value) => fiberRefModify(self, () => [void 0, value]));\n\n/* @internal */\nconst fiberRefDelete = self => withFiberRuntime(state => {\n  state.unsafeDeleteFiberRef(self);\n  return unit;\n});\n\n/* @internal */\nconst fiberRefReset = self => fiberRefSet(self, self.initial);\n\n/* @internal */\nconst fiberRefModify = /*#__PURE__*/dual(2, (self, f) => withFiberRuntime(state => {\n  const [b, a] = f(state.getFiberRef(self));\n  state.setFiberRef(self, a);\n  return succeed(b);\n}));\n\n/* @internal */\nconst fiberRefModifySome = (self, def, f) => fiberRefModify(self, v => getOrElse(f(v), () => [def, v]));\n\n/* @internal */\nconst fiberRefUpdate = /*#__PURE__*/dual(2, (self, f) => fiberRefModify(self, v => [void 0, f(v)]));\n\n/* @internal */\nconst fiberRefUpdateSome = /*#__PURE__*/dual(2, (self, pf) => fiberRefModify(self, v => [void 0, getOrElse(pf(v), () => v)]));\n\n/* @internal */\nconst fiberRefUpdateAndGet = /*#__PURE__*/dual(2, (self, f) => fiberRefModify(self, v => {\n  const result = f(v);\n  return [result, result];\n}));\n\n/* @internal */\nconst fiberRefUpdateSomeAndGet = /*#__PURE__*/dual(2, (self, pf) => fiberRefModify(self, v => {\n  const result = getOrElse(pf(v), () => v);\n  return [result, result];\n}));\n\n// circular\n/** @internal */\nconst RequestResolverSymbolKey = \"effect/RequestResolver\";\n\n/** @internal */\nconst RequestResolverTypeId = /*#__PURE__*/Symbol.for(RequestResolverSymbolKey);\nconst dataSourceVariance = {\n  _R: _ => _,\n  _A: _ => _\n};\n\n/** @internal */\nclass RequestResolverImpl {\n  [RequestResolverTypeId] = dataSourceVariance;\n  constructor(runAll, target) {\n    this.runAll = runAll;\n    this.target = target;\n    this.runAll = runAll;\n  }\n  [symbol$1]() {\n    return this.target ? hash(this.target) : random(this);\n  }\n  [symbol](that) {\n    return this.target ? isRequestResolver(that) && equals(this.target, that.target) : this === that;\n  }\n  identified(...ids) {\n    return new RequestResolverImpl(this.runAll, fromIterable(ids));\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst isRequestResolver = u => hasProperty(u, RequestResolverTypeId);\n\n// end\n\n/** @internal */\nconst resolverLocally = /*#__PURE__*/dual(3, (use, self, value) => new RequestResolverImpl(requests => fiberRefLocally(use.runAll(requests), self, value), make(\"Locally\", use, self, value)));\n\n/** @internal */\nconst requestBlockLocally = (self, ref, value) => reduce(self, LocallyReducer(ref, value));\nconst LocallyReducer = (ref, value) => ({\n  emptyCase: () => empty,\n  parCase: (left, right) => par(left, right),\n  seqCase: (left, right) => seq(left, right),\n  singleCase: (dataSource, blockedRequest) => single(resolverLocally(dataSource, ref, value), blockedRequest)\n});\n\n/* @internal */\nconst fiberRefLocally = /*#__PURE__*/dual(3, (use, self, value) => flatMap(acquireUseRelease(zipLeft(fiberRefGet(self), fiberRefSet(self, value)), () => step(use), oldValue => fiberRefSet(self, oldValue)), res => {\n  if (res._op === \"Blocked\") {\n    return blocked(res.i0, fiberRefLocally(res.i1, self, value));\n  }\n  return res;\n}));\n\n/* @internal */\nconst fiberRefLocallyWith = /*#__PURE__*/dual(3, (use, self, f) => fiberRefGetWith(self, a => fiberRefLocally(use, self, f(a))));\n\n/** @internal */\nconst fiberRefUnsafeMake = (initial, options) => fiberRefUnsafeMakePatch(initial, {\n  differ: update(),\n  fork: options?.fork ?? identity,\n  join: options?.join\n});\n\n/** @internal */\nconst fiberRefUnsafeMakeHashSet = initial => {\n  const differ = hashSet();\n  return fiberRefUnsafeMakePatch(initial, {\n    differ,\n    fork: differ.empty\n  });\n};\n\n/** @internal */\nconst fiberRefUnsafeMakeContext = initial => {\n  const differ = environment();\n  return fiberRefUnsafeMakePatch(initial, {\n    differ,\n    fork: differ.empty\n  });\n};\n\n/** @internal */\nconst fiberRefUnsafeMakePatch = (initial, options) => ({\n  [FiberRefTypeId]: fiberRefVariance,\n  initial,\n  diff: (oldValue, newValue) => options.differ.diff(oldValue, newValue),\n  combine: (first, second) => options.differ.combine(first, second),\n  patch: patch => oldValue => options.differ.patch(patch, oldValue),\n  fork: options.fork,\n  join: options.join ?? ((_, n) => n),\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n});\n\n/** @internal */\nconst fiberRefUnsafeMakeRuntimeFlags = initial => fiberRefUnsafeMakePatch(initial, {\n  differ: differ,\n  fork: differ.empty\n});\n\n/** @internal */\nconst currentContext = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentContext\"), () => fiberRefUnsafeMakeContext(empty$1()));\n\n/** @internal */\nconst currentSchedulingPriority = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentSchedulingPriority\"), () => fiberRefUnsafeMake(0));\n\n/** @internal */\nconst currentMaxOpsBeforeYield = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentMaxOpsBeforeYield\"), () => fiberRefUnsafeMake(2048));\n\n/** @internal */\nconst currentLogAnnotations = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentLogAnnotation\"), () => fiberRefUnsafeMake(empty$2()));\n\n/** @internal */\nconst currentLogLevel = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentLogLevel\"), () => fiberRefUnsafeMake(logLevelInfo));\n\n/** @internal */\nconst currentLogSpan = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentLogSpan\"), () => fiberRefUnsafeMake(empty$3()));\n\n/** @internal */\nconst withSchedulingPriority = /*#__PURE__*/dual(2, (self, scheduler) => fiberRefLocally(self, currentSchedulingPriority, scheduler));\n\n/** @internal */\nconst withMaxOpsBeforeYield = /*#__PURE__*/dual(2, (self, scheduler) => fiberRefLocally(self, currentMaxOpsBeforeYield, scheduler));\n\n/** @internal */\nconst currentConcurrency = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentConcurrency\"), () => fiberRefUnsafeMake(\"unbounded\"));\n\n/**\n * @internal\n */\nconst currentRequestBatching = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentRequestBatching\"), () => fiberRefUnsafeMake(true));\n\n/** @internal */\nconst currentUnhandledErrorLogLevel = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentUnhandledErrorLogLevel\"), () => fiberRefUnsafeMake(some(logLevelDebug)));\n\n/** @internal */\nconst withUnhandledErrorLogLevel = /*#__PURE__*/dual(2, (self, level) => fiberRefLocally(self, currentUnhandledErrorLogLevel, level));\n\n/** @internal */\nconst currentMetricLabels = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentMetricLabels\"), () => fiberRefUnsafeMakeHashSet(empty$4()));\n\n/* @internal */\nconst metricLabels = /*#__PURE__*/fiberRefGet(currentMetricLabels);\n\n/** @internal */\nconst currentForkScopeOverride = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentForkScopeOverride\"), () => fiberRefUnsafeMake(none$1(), {\n  fork: () => none$1(),\n  join: (parent, _) => parent\n}));\n\n/** @internal */\nconst currentInterruptedCause = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentInterruptedCause\"), () => fiberRefUnsafeMake(empty$5, {\n  fork: () => empty$5,\n  join: (parent, _) => parent\n}));\n\n/** @internal */\nconst currentTracerTimingEnabled = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentTracerTiming\"), () => fiberRefUnsafeMake(true));\n\n/** @internal */\nconst currentTracerSpanAnnotations = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentTracerSpanAnnotations\"), () => fiberRefUnsafeMake(empty$2()));\n\n/** @internal */\nconst currentTracerSpanLinks = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentTracerSpanLinks\"), () => fiberRefUnsafeMake(empty$6()));\n\n// -----------------------------------------------------------------------------\n// Scope\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst ScopeTypeId = /*#__PURE__*/Symbol.for(\"effect/Scope\");\n\n/** @internal */\nconst CloseableScopeTypeId = /*#__PURE__*/Symbol.for(\"effect/CloseableScope\");\n\n/* @internal */\nconst scopeAddFinalizer = (self, finalizer) => self.addFinalizer(() => asUnit(finalizer));\n\n/* @internal */\nconst scopeAddFinalizerExit = (self, finalizer) => self.addFinalizer(finalizer);\n\n/* @internal */\nconst scopeClose = (self, exit) => self.close(exit);\n\n/* @internal */\nconst scopeFork = (self, strategy) => self.fork(strategy);\n\n// -----------------------------------------------------------------------------\n// ReleaseMap\n// -----------------------------------------------------------------------------\n\n/** @internal */\n/** @internal */\n/* @internal */\nconst releaseMapAdd = /*#__PURE__*/dual(2, (self, finalizer) => map(releaseMapAddIfOpen(self, finalizer), match({\n  onNone: () => () => unit,\n  onSome: key => exit => releaseMapRelease(key, exit)(self)\n})));\n\n/* @internal */\nconst releaseMapRelease = /*#__PURE__*/dual(3, (self, key, exit) => suspend(() => {\n  switch (self.state._tag) {\n    case \"Exited\":\n      {\n        return unit;\n      }\n    case \"Running\":\n      {\n        const finalizer = self.state.finalizers.get(key);\n        self.state.finalizers.delete(key);\n        if (finalizer != null) {\n          return self.state.update(finalizer)(exit);\n        }\n        return unit;\n      }\n  }\n}));\n\n/* @internal */\nconst releaseMapAddIfOpen = /*#__PURE__*/dual(2, (self, finalizer) => suspend(() => {\n  switch (self.state._tag) {\n    case \"Exited\":\n      {\n        self.state.nextKey += 1;\n        return as(finalizer(self.state.exit), none$1());\n      }\n    case \"Running\":\n      {\n        const key = self.state.nextKey;\n        self.state.finalizers.set(key, finalizer);\n        self.state.nextKey += 1;\n        return succeed(some(key));\n      }\n  }\n}));\n\n/* @internal */\nconst releaseMapMake = /*#__PURE__*/sync(() => ({\n  state: {\n    _tag: \"Running\",\n    nextKey: 0,\n    finalizers: new Map(),\n    update: identity\n  }\n}));\n\n// -----------------------------------------------------------------------------\n// Exit\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst exitIsExit = u => isEffect(u) && \"_tag\" in u && (u._tag === \"Success\" || u._tag === \"Failure\");\n\n/** @internal */\nconst exitIsFailure = self => self._tag === \"Failure\";\n\n/** @internal */\nconst exitIsSuccess = self => self._tag === \"Success\";\n\n/** @internal */\nconst exitIsInterrupted = self => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return isInterrupted(self.i0);\n      }\n    case OP_SUCCESS:\n      {\n        return false;\n      }\n  }\n};\n\n/** @internal */\nconst exitAs = /*#__PURE__*/dual(2, (self, value) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return exitFailCause(self.i0);\n      }\n    case OP_SUCCESS:\n      {\n        return exitSucceed(value);\n      }\n  }\n});\n\n/** @internal */\nconst exitAsUnit = self => exitAs(self, void 0);\n\n/** @internal */\nconst exitCauseOption = self => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return some(self.i0);\n      }\n    case OP_SUCCESS:\n      {\n        return none$1();\n      }\n  }\n};\n\n/** @internal */\nconst exitCollectAll = (exits, options) => exitCollectAllInternal(exits, options?.parallel ? parallel : sequential);\n\n/** @internal */\nconst exitDie = defect => exitFailCause(die$1(defect));\n\n/** @internal */\nconst exitExists = /*#__PURE__*/dual(2, (self, predicate) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return false;\n      }\n    case OP_SUCCESS:\n      {\n        return predicate(self.i0);\n      }\n  }\n});\n\n/** @internal */\nconst exitFail = error => exitFailCause(fail$1(error));\n\n/** @internal */\nconst exitFailCause = cause => {\n  const effect = new EffectPrimitiveFailure(OP_FAILURE);\n  effect.i0 = cause;\n  return effect;\n};\n\n/** @internal */\nconst exitFlatMap = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return exitFailCause(self.i0);\n      }\n    case OP_SUCCESS:\n      {\n        return f(self.i0);\n      }\n  }\n});\n\n/** @internal */\nconst exitFlatMapEffect = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return succeed(exitFailCause(self.i0));\n      }\n    case OP_SUCCESS:\n      {\n        return f(self.i0);\n      }\n  }\n});\n\n/** @internal */\nconst exitFlatten = self => pipe(self, exitFlatMap(identity));\n\n/** @internal */\nconst exitForEachEffect = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return succeed(exitFailCause(self.i0));\n      }\n    case OP_SUCCESS:\n      {\n        return exit(f(self.i0));\n      }\n  }\n});\n\n/** @internal */\nconst exitFromEither = either => {\n  switch (either._tag) {\n    case \"Left\":\n      {\n        return exitFail(either.left);\n      }\n    case \"Right\":\n      {\n        return exitSucceed(either.right);\n      }\n  }\n};\n\n/** @internal */\nconst exitFromOption = option => {\n  switch (option._tag) {\n    case \"None\":\n      {\n        return exitFail(void 0);\n      }\n    case \"Some\":\n      {\n        return exitSucceed(option.value);\n      }\n  }\n};\n\n/** @internal */\nconst exitGetOrElse = /*#__PURE__*/dual(2, (self, orElse) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return orElse(self.i0);\n      }\n    case OP_SUCCESS:\n      {\n        return self.i0;\n      }\n  }\n});\n\n/** @internal */\nconst exitInterrupt = fiberId => exitFailCause(interrupt$1(fiberId));\n\n/** @internal */\nconst exitMap = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return exitFailCause(self.i0);\n      }\n    case OP_SUCCESS:\n      {\n        return exitSucceed(f(self.i0));\n      }\n  }\n});\n\n/** @internal */\nconst exitMapBoth = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return exitFailCause(pipe(self.i0, map$1(onFailure)));\n      }\n    case OP_SUCCESS:\n      {\n        return exitSucceed(onSuccess(self.i0));\n      }\n  }\n});\n\n/** @internal */\nconst exitMapError = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return exitFailCause(pipe(self.i0, map$1(f)));\n      }\n    case OP_SUCCESS:\n      {\n        return exitSucceed(self.i0);\n      }\n  }\n});\n\n/** @internal */\nconst exitMapErrorCause = /*#__PURE__*/dual(2, (self, f) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return exitFailCause(f(self.i0));\n      }\n    case OP_SUCCESS:\n      {\n        return exitSucceed(self.i0);\n      }\n  }\n});\n\n/** @internal */\nconst exitMatch = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return onFailure(self.i0);\n      }\n    case OP_SUCCESS:\n      {\n        return onSuccess(self.i0);\n      }\n  }\n});\n\n/** @internal */\nconst exitMatchEffect = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        return onFailure(self.i0);\n      }\n    case OP_SUCCESS:\n      {\n        return onSuccess(self.i0);\n      }\n  }\n});\n\n/** @internal */\nconst exitSucceed = value => {\n  const effect = new EffectPrimitiveSuccess(OP_SUCCESS);\n  effect.i0 = value;\n  return effect;\n};\n\n/** @internal */\nconst exitUnit = /*#__PURE__*/exitSucceed(void 0);\n\n/** @internal */\nconst exitZip = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (a, a2) => [a, a2],\n  onFailure: sequential\n}));\n\n/** @internal */\nconst exitZipLeft = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (a, _) => a,\n  onFailure: sequential\n}));\n\n/** @internal */\nconst exitZipRight = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (_, a2) => a2,\n  onFailure: sequential\n}));\n\n/** @internal */\nconst exitZipPar = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (a, a2) => [a, a2],\n  onFailure: parallel\n}));\n\n/** @internal */\nconst exitZipParLeft = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (a, _) => a,\n  onFailure: parallel\n}));\n\n/** @internal */\nconst exitZipParRight = /*#__PURE__*/dual(2, (self, that) => exitZipWith(self, that, {\n  onSuccess: (_, a2) => a2,\n  onFailure: parallel\n}));\n\n/** @internal */\nconst exitZipWith = /*#__PURE__*/dual(3, (self, that, {\n  onFailure,\n  onSuccess\n}) => {\n  switch (self._tag) {\n    case OP_FAILURE:\n      {\n        switch (that._tag) {\n          case OP_SUCCESS:\n            {\n              return exitFailCause(self.i0);\n            }\n          case OP_FAILURE:\n            {\n              return exitFailCause(onFailure(self.i0, that.i0));\n            }\n        }\n      }\n    case OP_SUCCESS:\n      {\n        switch (that._tag) {\n          case OP_SUCCESS:\n            {\n              return exitSucceed(onSuccess(self.i0, that.i0));\n            }\n          case OP_FAILURE:\n            {\n              return exitFailCause(that.i0);\n            }\n        }\n      }\n  }\n});\nconst exitCollectAllInternal = (exits, combineCauses) => {\n  const list = fromIterable(exits);\n  if (!isNonEmpty(list)) {\n    return none$1();\n  }\n  return pipe(tailNonEmpty(list), reduce$1(pipe(headNonEmpty(list), exitMap(of)), (accumulator, current) => pipe(accumulator, exitZipWith(current, {\n    onSuccess: (list, value) => pipe(list, prepend(value)),\n    onFailure: combineCauses\n  }))), exitMap(reverse), exitMap(chunk => Array.from(chunk)), some);\n};\n\n// -----------------------------------------------------------------------------\n// Deferred\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst deferredUnsafeMake = fiberId => ({\n  [DeferredTypeId]: deferredVariance,\n  state: make$1(pending([])),\n  blockingOn: fiberId,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n});\n\n/* @internal */\nconst deferredMake = () => flatMap(fiberId, id => deferredMakeAs(id));\n\n/* @internal */\nconst deferredMakeAs = fiberId => sync(() => deferredUnsafeMake(fiberId));\n\n/* @internal */\nconst deferredAwait = self => asyncEither(k => {\n  const state = get(self.state);\n  switch (state._tag) {\n    case OP_STATE_DONE:\n      {\n        return right(state.effect);\n      }\n    case OP_STATE_PENDING:\n      {\n        pipe(self.state, set(pending([k, ...state.joiners])));\n        return left(deferredInterruptJoiner(self, k));\n      }\n  }\n}, self.blockingOn);\n\n/* @internal */\nconst deferredComplete = /*#__PURE__*/dual(2, (self, effect) => intoDeferred(effect, self));\n\n/* @internal */\nconst deferredCompleteWith = /*#__PURE__*/dual(2, (self, effect) => sync(() => {\n  const state = get(self.state);\n  switch (state._tag) {\n    case OP_STATE_DONE:\n      {\n        return false;\n      }\n    case OP_STATE_PENDING:\n      {\n        pipe(self.state, set(done(effect)));\n        for (let i = 0; i < state.joiners.length; i++) {\n          state.joiners[i](effect);\n        }\n        return true;\n      }\n  }\n}));\n\n/* @internal */\nconst deferredDone = /*#__PURE__*/dual(2, (self, exit) => deferredCompleteWith(self, exit));\n\n/* @internal */\nconst deferredFail = /*#__PURE__*/dual(2, (self, error) => deferredCompleteWith(self, fail(error)));\n\n/* @internal */\nconst deferredFailSync = /*#__PURE__*/dual(2, (self, evaluate) => deferredCompleteWith(self, failSync(evaluate)));\n\n/* @internal */\nconst deferredFailCause = /*#__PURE__*/dual(2, (self, cause) => deferredCompleteWith(self, failCause(cause)));\n\n/* @internal */\nconst deferredFailCauseSync = /*#__PURE__*/dual(2, (self, evaluate) => deferredCompleteWith(self, failCauseSync(evaluate)));\n\n/* @internal */\nconst deferredDie = /*#__PURE__*/dual(2, (self, defect) => deferredCompleteWith(self, die(defect)));\n\n/* @internal */\nconst deferredDieSync = /*#__PURE__*/dual(2, (self, evaluate) => deferredCompleteWith(self, dieSync(evaluate)));\n\n/* @internal */\nconst deferredInterrupt = self => flatMap(fiberId, fiberId => deferredCompleteWith(self, interruptWith(fiberId)));\n\n/* @internal */\nconst deferredInterruptWith = /*#__PURE__*/dual(2, (self, fiberId) => deferredCompleteWith(self, interruptWith(fiberId)));\n\n/* @internal */\nconst deferredIsDone = self => sync(() => get(self.state)._tag === OP_STATE_DONE);\n\n/* @internal */\nconst deferredPoll = self => sync(() => {\n  const state = get(self.state);\n  switch (state._tag) {\n    case OP_STATE_DONE:\n      {\n        return some(state.effect);\n      }\n    case OP_STATE_PENDING:\n      {\n        return none$1();\n      }\n  }\n});\n\n/* @internal */\nconst deferredSucceed = /*#__PURE__*/dual(2, (self, value) => deferredCompleteWith(self, succeed(value)));\n\n/* @internal */\nconst deferredSync = /*#__PURE__*/dual(2, (self, evaluate) => deferredCompleteWith(self, sync(evaluate)));\n\n/** @internal */\nconst deferredUnsafeDone = (self, effect) => {\n  const state = get(self.state);\n  if (state._tag === OP_STATE_PENDING) {\n    pipe(self.state, set(done(effect)));\n    for (let i = state.joiners.length - 1; i >= 0; i--) {\n      state.joiners[i](effect);\n    }\n  }\n};\nconst deferredInterruptJoiner = (self, joiner) => sync(() => {\n  const state = get(self.state);\n  if (state._tag === OP_STATE_PENDING) {\n    pipe(self.state, set(pending(state.joiners.filter(j => j !== joiner))));\n  }\n});\n\n// -----------------------------------------------------------------------------\n// Context\n// -----------------------------------------------------------------------------\n\nconst constContext = /*#__PURE__*/fiberRefGet(currentContext);\n\n/* @internal */\nconst context = () => constContext;\n\n/* @internal */\nconst contextWithEffect = f => flatMap(context(), f);\n\n/* @internal */\nconst provideContext = /*#__PURE__*/dual(2, (self, context) => fiberRefLocally(currentContext, context)(self));\n\n/* @internal */\nconst provideSomeContext = /*#__PURE__*/dual(2, (self, context) => fiberRefLocallyWith(currentContext, parent => merge(parent, context))(self));\n\n/* @internal */\nconst mapInputContext = /*#__PURE__*/dual(2, (self, f) => contextWithEffect(context => provideContext(self, f(context))));\n\n// -----------------------------------------------------------------------------\n// Tracing\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst currentSpanFromFiber = fiber => {\n  const span = fiber.getFiberRef(currentContext).unsafeMap.get(spanTag);\n  return span !== undefined && span._tag === \"Span\" ? some(span) : none$1();\n};\n\nexport { CloseableScopeTypeId, EffectErrorTypeId, EffectTypeId, FiberRefTypeId, RequestResolverImpl, RequestResolverTypeId, RevertFlags, ScopeTypeId, acquireUseRelease, allLogLevels, as, asUnit, async, asyncEither, attemptOrElse, blocked, catchAll, catchAllCause, catchIf, catchSome, checkInterruptible, context, contextWithEffect, currentConcurrency, currentContext, currentForkScopeOverride, currentInterruptedCause, currentLogAnnotations, currentLogLevel, currentLogSpan, currentMaxOpsBeforeYield, currentMetricLabels, currentRequestBatching, currentSchedulingPriority, currentSpanFromFiber, currentTracerSpanAnnotations, currentTracerSpanLinks, currentTracerTimingEnabled, currentUnhandledErrorLogLevel, deferredAwait, deferredComplete, deferredCompleteWith, deferredDie, deferredDieSync, deferredDone, deferredFail, deferredFailCause, deferredFailCauseSync, deferredFailSync, deferredInterrupt, deferredInterruptWith, deferredIsDone, deferredMake, deferredMakeAs, deferredPoll, deferredSucceed, deferredSync, deferredUnsafeDone, deferredUnsafeMake, die, dieMessage, dieSync, either, exit, exitAs, exitAsUnit, exitCauseOption, exitCollectAll, exitDie, exitExists, exitFail, exitFailCause, exitFlatMap, exitFlatMapEffect, exitFlatten, exitForEachEffect, exitFromEither, exitFromOption, exitGetOrElse, exitInterrupt, exitIsExit, exitIsFailure, exitIsInterrupted, exitIsSuccess, exitMap, exitMapBoth, exitMapError, exitMapErrorCause, exitMatch, exitMatchEffect, exitSucceed, exitUnit, exitZip, exitZipLeft, exitZipPar, exitZipParLeft, exitZipParRight, exitZipRight, exitZipWith, fail, failCause, failCauseSync, failSync, fiberId, fiberIdWith, fiberRefDelete, fiberRefGet, fiberRefGetAndSet, fiberRefGetAndUpdate, fiberRefGetAndUpdateSome, fiberRefGetWith, fiberRefLocally, fiberRefLocallyWith, fiberRefModify, fiberRefModifySome, fiberRefReset, fiberRefSet, fiberRefUnsafeMake, fiberRefUnsafeMakeContext, fiberRefUnsafeMakeHashSet, fiberRefUnsafeMakePatch, fiberRefUnsafeMakeRuntimeFlags, fiberRefUpdate, fiberRefUpdateAndGet, fiberRefUpdateSome, fiberRefUpdateSomeAndGet, flatMap, flatMapStep, flatten, flip, forEachSequential, forEachSequentialDiscard, if_, interrupt, interruptAsFiber, interruptFiber, interruptWith, interruptible, interruptibleMask, intoDeferred, isEffect, isEffectError, isRequestResolver, logLevelAll, logLevelDebug, logLevelError, logLevelFatal, logLevelInfo, logLevelNone, logLevelTrace, logLevelWarning, makeEffectError, map, mapBoth, mapError, mapInputContext, matchCause, matchCauseEffect, matchEffect, metricLabels, never, onError, onExit, onInterrupt, orDie, orDieWith, orElse, originalInstance, partitionMap, provideContext, provideSomeContext, releaseMapAdd, releaseMapAddIfOpen, releaseMapMake, releaseMapRelease, requestBlockLocally, resolverLocally, runRequestBlock, runtimeFlags, scopeAddFinalizer, scopeAddFinalizerExit, scopeClose, scopeFork, step, succeed, suspend, sync, tap, transplant, unified, uninterruptible, uninterruptibleMask, unit, updateRuntimeFlags, whenEffect, whileLoop, withConcurrency, withFiberRuntime, withMaxOpsBeforeYield, withRequestBatching, withRuntimeFlags, withSchedulingPriority, withTracerTiming, withUnhandledErrorLogLevel, yieldNow, zip, zipLeft, zipRight, zipWith };\n","import { CauseTypeId as CauseTypeId$1, RuntimeExceptionTypeId as RuntimeExceptionTypeId$1, InterruptedExceptionTypeId as InterruptedExceptionTypeId$1, IllegalArgumentExceptionTypeId as IllegalArgumentExceptionTypeId$1, NoSuchElementExceptionTypeId as NoSuchElementExceptionTypeId$1, InvalidPubSubCapacityExceptionTypeId as InvalidPubSubCapacityExceptionTypeId$1, empty as empty$1, fail as fail$1, die as die$1, interrupt as interrupt$1, parallel as parallel$1, sequential as sequential$1, isCause as isCause$1, isEmptyType as isEmptyType$1, isFailType as isFailType$1, isDieType as isDieType$1, isInterruptType as isInterruptType$1, isSequentialType as isSequentialType$1, isParallelType as isParallelType$1, size as size$1, isEmpty as isEmpty$1, isFailure as isFailure$1, isDie as isDie$1, isInterrupted as isInterrupted$1, isInterruptedOnly as isInterruptedOnly$1, failures as failures$1, defects as defects$1, interruptors as interruptors$1, failureOption as failureOption$1, failureOrCause as failureOrCause$1, flipCauseOption as flipCauseOption$1, dieOption as dieOption$1, interruptOption as interruptOption$1, keepDefects as keepDefects$1, linearize as linearize$1, stripFailures as stripFailures$1, stripSomeDefects as stripSomeDefects$1, as as as$1, map as map$1, flatMap as flatMap$1, flatten as flatten$1, contains as contains$1, squash as squash$1, squashWith as squashWith$1, find as find$1, filter as filter$1, match as match$1, reduce as reduce$1, reduceWithContext as reduceWithContext$1, InterruptedException as InterruptedException$1, isInterruptedException as isInterruptedException$1, IllegalArgumentException as IllegalArgumentException$1, isIllegalArgumentException as isIllegalArgumentException$1, NoSuchElementException as NoSuchElementException$1, isNoSuchElementException as isNoSuchElementException$1, RuntimeException as RuntimeException$1, isRuntimeException as isRuntimeException$1, pretty as pretty$1 } from '../../internal/cause.esm.js';\nimport { originalInstance } from '../../internal/core.esm.js';\n\n/**\n * The `Effect<R, E, A>` type is polymorphic in values of type `E` and we can\n * work with any error type that we want. However, there is a lot of information\n * that is not inside an arbitrary `E` value. So as a result, an `Effect` needs\n * somewhere to store things like unexpected errors or defects, stack and\n * execution traces, causes of fiber interruptions, and so forth.\n *\n * Effect-TS is very strict about preserving the full information related to a\n * failure. It captures all type of errors into the `Cause` data type. `Effect`\n * uses the `Cause<E>` data type to store the full story of failure. So its\n * error model is lossless. It doesn't throw information related to the failure\n * result. So we can figure out exactly what happened during the operation of\n * our effects.\n *\n * It is important to note that `Cause` is an underlying data type representing\n * errors occuring within an `Effect` workflow. Thus, we don't usually deal with\n * `Cause`s directly. Even though it is not a data type that we deal with very\n * often, the `Cause` of a failing `Effect` workflow can be accessed at any\n * time, which gives us total access to all parallel and sequential errors in\n * occurring within our codebase.\n *\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst CauseTypeId = CauseTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst RuntimeExceptionTypeId = RuntimeExceptionTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst InterruptedExceptionTypeId = InterruptedExceptionTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst IllegalArgumentExceptionTypeId = IllegalArgumentExceptionTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst NoSuchElementExceptionTypeId = NoSuchElementExceptionTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst InvalidPubSubCapacityExceptionTypeId = InvalidPubSubCapacityExceptionTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * A `Cause` represents the full history of a failure resulting from running an\n * `Effect` workflow.\n *\n * Effect-TS uses a data structure from functional programming called a semiring\n * to represent the `Cause` data type. This allows us to take a base type `E`\n * (which represents the error type of an `Effect`) and capture the sequential\n * and parallel composition of errors in a fully lossless fashion.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Represents a set of methods that can be used to reduce a `Cause<E>` to a\n * specified value of type `Z` with access to a context of type `C`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Represents a generic checked exception which occurs at runtime.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Represents a checked exception which occurs when a `Fiber` is interrupted.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Represents a checked exception which occurs when an invalid argument is\n * provided to a method.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Represents a checked exception which occurs when an expected element was\n * unable to be found.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Represents a checked exception which occurs when attempting to construct a\n * `PubSub` with an invalid capacity.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * The `Empty` cause represents a lack of errors.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * The `Fail` cause represents a `Cause` which failed with an expected error of\n * type `E`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * The `Die` cause represents a `Cause` which failed as a result of a defect, or\n * in other words, an unexpected error.\n *\n * type `E`.\n * @since 2.0.0\n * @category models\n */\n\n/**\n * The `Interrupt` cause represents failure due to `Fiber` interruption, which\n * contains the `FiberId` of the interrupted `Fiber`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * The `Parallel` cause represents the composition of two causes which occurred\n * in parallel.\n *\n * In Effect-TS programs, it is possible that two operations may be performed in\n * parallel. In these cases, the `Effect` workflow can fail for more than one\n * reason. If both computations fail, then there are actually two errors which\n * occurred in parallel. In these cases, the errors can be represented by the\n * `Parallel` cause.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * The `Sequential` cause represents the composition of two causes which occurred\n * sequentially.\n *\n * For example, if we perform Effect-TS's analog of `try-finally` (i.e.\n * `Effect.ensuring`), and both the `try` and `finally` blocks fail, we have two\n * errors which occurred sequentially. In these cases, the errors can be\n * represented by the `Sequential` cause.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Constructs a new `Empty` cause.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Constructs a new `Fail` cause from the specified `error`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fail = fail$1;\n\n/**\n * Constructs a new `Die` cause from the specified `defect`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst die = die$1;\n\n/**\n * Constructs a new `Interrupt` cause from the specified `fiberId`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst interrupt = interrupt$1;\n\n/**\n * Constructs a new `Parallel` cause from the specified `left` and `right`\n * causes.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst parallel = parallel$1;\n\n/**\n * Constructs a new `Sequential` cause from the specified pecified `left` and\n * `right` causes.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst sequential = sequential$1;\n\n/**\n * Returns `true` if the specified value is a `Cause`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isCause = isCause$1;\n\n/**\n * Returns `true` if the specified `Cause` is an `Empty` type, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isEmptyType = isEmptyType$1;\n\n/**\n * Returns `true` if the specified `Cause` is a `Fail` type, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isFailType = isFailType$1;\n\n/**\n * Returns `true` if the specified `Cause` is a `Die` type, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isDieType = isDieType$1;\n\n/**\n * Returns `true` if the specified `Cause` is an `Interrupt` type, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isInterruptType = isInterruptType$1;\n\n/**\n * Returns `true` if the specified `Cause` is a `Sequential` type, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isSequentialType = isSequentialType$1;\n\n/**\n * Returns `true` if the specified `Cause` is a `Parallel` type, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isParallelType = isParallelType$1;\n\n/**\n * Returns the size of the cause, calculated as the number of individual `Cause`\n * nodes found in the `Cause` semiring structure.\n *\n * @since 2.0.0\n * @category getters\n */\nconst size = size$1;\n\n/**\n * Returns `true` if the specified cause is empty, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isEmpty = isEmpty$1;\n\n/**\n * Returns `true` if the specified cause contains a failure, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isFailure = isFailure$1;\n\n/**\n * Returns `true` if the specified cause contains a defect, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isDie = isDie$1;\n\n/**\n * Returns `true` if the specified cause contains an interruption, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isInterrupted = isInterrupted$1;\n\n/**\n * Returns `true` if the specified cause contains only interruptions (without\n * any `Die` or `Fail` causes), `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isInterruptedOnly = isInterruptedOnly$1;\n\n/**\n * Returns a `List` of all recoverable errors of type `E` in the specified\n * cause.\n *\n * @since 2.0.0\n * @category getters\n */\nconst failures = failures$1;\n\n/**\n * Returns a `List` of all unrecoverable defects in the specified cause.\n *\n * @since 2.0.0\n * @category getters\n */\nconst defects = defects$1;\n\n/**\n * Returns a `HashSet` of `FiberId`s for all fibers that interrupted the fiber\n * described by the specified cause.\n *\n * @since 2.0.0\n * @category getters\n */\nconst interruptors = interruptors$1;\n\n/**\n * Returns the `E` associated with the first `Fail` in this `Cause`, if one\n * exists.\n *\n * @since 2.0.0\n * @category getters\n */\nconst failureOption = failureOption$1;\n\n/**\n * Returns the first checked error on the `Left` if available, if there are\n * no checked errors return the rest of the `Cause` that is known to contain\n * only `Die` or `Interrupt` causes.\n *\n * @since 2.0.0\n * @category getters\n */\nconst failureOrCause = failureOrCause$1;\n\n/**\n * Converts the specified `Cause<Option<E>>` to an `Option<Cause<E>>` by\n * recursively stripping out any failures with the error `None`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst flipCauseOption = flipCauseOption$1;\n\n/**\n * Returns the defect associated with the first `Die` in this `Cause`, if one\n * exists.\n *\n * @since 2.0.0\n * @category getters\n */\nconst dieOption = dieOption$1;\n\n/**\n * Returns the `FiberId` associated with the first `Interrupt` in the specified\n * cause, if one exists.\n *\n * @since 2.0.0\n * @category getters\n */\nconst interruptOption = interruptOption$1;\n\n/**\n * Remove all `Fail` and `Interrupt` nodes from the specified cause, and return\n * a cause containing only `Die` cause/finalizer defects.\n *\n * @since 2.0.0\n * @category getters\n */\nconst keepDefects = keepDefects$1;\n\n/**\n * Linearizes the specified cause into a `HashSet` of parallel causes where each\n * parallel cause contains a linear sequence of failures.\n *\n * @since 2.0.0\n * @category getters\n */\nconst linearize = linearize$1;\n\n/**\n * Remove all `Fail` and `Interrupt` nodes from the specified cause, and return\n * a cause containing only `Die` cause/finalizer defects.\n *\n * @since 2.0.0\n * @category getters\n */\nconst stripFailures = stripFailures$1;\n\n/**\n * Remove all `Die` causes that the specified partial function is defined at,\n * returning `Some` with the remaining causes or `None` if there are no\n * remaining causes.\n *\n * @since 2.0.0\n * @category getters\n */\nconst stripSomeDefects = stripSomeDefects$1;\n\n/**\n * @since 2.0.0\n * @category mapping\n */\nconst as = as$1;\n\n/**\n * @since 2.0.0\n * @category mapping\n */\nconst map = map$1;\n\n/**\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = flatMap$1;\n\n/**\n * @since 2.0.0\n * @category sequencing\n */\nconst flatten = flatten$1;\n\n/**\n * Returns `true` if the `self` cause contains or is equal to `that` cause,\n * `false` otherwise.\n *\n * @since 2.0.0\n * @category elements\n */\nconst contains = contains$1;\n\n/**\n * Squashes a `Cause` down to a single defect, chosen to be the \"most important\"\n * defect.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst squash = squash$1;\n\n/**\n * Squashes a `Cause` down to a single defect, chosen to be the \"most important\"\n * defect. If a recoverable error is found, the provided function will be used\n * to map the error a defect, and the resulting value will be returned.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst squashWith = squashWith$1;\n\n/**\n * Uses the provided partial function to search the specified cause and attempt\n * to extract information from it.\n *\n * @since 2.0.0\n * @category elements\n */\nconst find = find$1;\n\n/**\n * Filters causes which match the provided predicate out of the specified cause.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filter = filter$1;\n\n/**\n * Folds the specified cause into a value of type `Z`.\n *\n * @since 2.0.0\n * @category folding\n */\nconst match = match$1;\n\n/**\n * Reduces the specified cause into a value of type `Z`, beginning with the\n * provided `zero` value.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduce = reduce$1;\n\n/**\n * Reduces the specified cause into a value of type `Z` using a `Cause.Reducer`.\n * Also allows for accessing the provided context during reduction.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduceWithContext = reduceWithContext$1;\n\n/**\n * Represents a checked exception which occurs when a `Fiber` is interrupted.\n *\n * @since 2.0.0\n * @category errors\n */\nconst InterruptedException = InterruptedException$1;\n\n/**\n * Returns `true` if the specified value is an `InterruptedException`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isInterruptedException = isInterruptedException$1;\n\n/**\n * Represents a checked exception which occurs when an invalid argument is\n * provided to a method.\n *\n * @since 2.0.0\n * @category errors\n */\nconst IllegalArgumentException = IllegalArgumentException$1;\n\n/**\n * Returns `true` if the specified value is an `IllegalArgumentException`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isIllegalArgumentException = isIllegalArgumentException$1;\n\n/**\n * Represents a checked exception which occurs when an expected element was\n * unable to be found.\n *\n * @since 2.0.0\n * @category errors\n */\nconst NoSuchElementException = NoSuchElementException$1;\n\n/**\n * Returns `true` if the specified value is an `NoSuchElementException`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isNoSuchElementException = isNoSuchElementException$1;\n\n/**\n * Represents a generic checked exception which occurs at runtime.\n *\n * @since 2.0.0\n * @category errors\n */\nconst RuntimeException = RuntimeException$1;\n\n/**\n * Returns `true` if the specified value is an `RuntimeException`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isRuntimeException = isRuntimeException$1;\n\n/**\n * Returns the specified `Cause` as a pretty-printed string.\n *\n * @since 2.0.0\n * @category rendering\n */\nconst pretty = pretty$1;\n\n/**\n * Returns the original, unproxied, instance of a thrown error\n *\n * @since 2.0.0\n * @category errors\n */\nconst originalError = originalInstance;\n\nexport { CauseTypeId, IllegalArgumentException, IllegalArgumentExceptionTypeId, InterruptedException, InterruptedExceptionTypeId, InvalidPubSubCapacityExceptionTypeId, NoSuchElementException, NoSuchElementExceptionTypeId, RuntimeException, RuntimeExceptionTypeId, as, contains, defects, die, dieOption, empty, fail, failureOption, failureOrCause, failures, filter, find, flatMap, flatten, flipCauseOption, interrupt, interruptOption, interruptors, isCause, isDie, isDieType, isEmpty, isEmptyType, isFailType, isFailure, isIllegalArgumentException, isInterruptType, isInterrupted, isInterruptedException, isInterruptedOnly, isNoSuchElementException, isParallelType, isRuntimeException, isSequentialType, keepDefects, linearize, map, match, originalError, parallel, pretty, reduce, reduceWithContext, sequential, size, squash, squashWith, stripFailures, stripSomeDefects };\n","import { exitIsExit, exitIsFailure, exitIsSuccess, exitIsInterrupted, exitAs, exitAsUnit, exitCauseOption, exitCollectAll, exitDie, exitExists, exitFail, exitFailCause, exitFlatMap, exitFlatMapEffect, exitFlatten, exitForEachEffect, exitFromEither, exitFromOption, exitGetOrElse, exitInterrupt, exitMap, exitMapBoth, exitMapError, exitMapErrorCause, exitMatch, exitMatchEffect, exitSucceed, exitUnit, exitZip, exitZipLeft, exitZipRight, exitZipPar, exitZipParLeft, exitZipParRight, exitZipWith } from '../../internal/core.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * An `Exit<E, A>` describes the result of a executing an `Effect` workflow.\n *\n * There are two possible values for an `Exit<E, A>`:\n *   - `Exit.Success` contain a success value of type `A`\n *   - `Exit.Failure` contains a failure `Cause` of type `E`\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Represents a failed `Effect` workflow containing the `Cause` of the failure\n * of type `E`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * Represents a successful `Effect` workflow and containing the returned value\n * of type `A`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Returns `true` if the specified value is an `Exit`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isExit = exitIsExit;\n\n/**\n * Returns `true` if the specified `Exit` is a `Failure`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isFailure = exitIsFailure;\n\n/**\n * Returns `true` if the specified `Exit` is a `Success`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isSuccess = exitIsSuccess;\n\n/**\n * Returns `true` if the specified exit is a `Failure` **and** the `Cause` of\n * the failure was due to interruption, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isInterrupted = exitIsInterrupted;\n\n/**\n * Maps the `Success` value of the specified exit to the provided constant\n * value.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst as = exitAs;\n\n/**\n * Maps the `Success` value of the specified exit to a void.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst asUnit = exitAsUnit;\n\n/**\n * Returns a `Some<Cause<E>>` if the specified exit is a `Failure`, `None`\n * otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst causeOption = exitCauseOption;\n\n/**\n * Collects all of the specified exit values into a `Some<Exit<E, List<A>>>`. If\n * the provided iterable contains no elements, `None` will be returned.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst all = exitCollectAll;\n\n/**\n * Constructs a new `Exit.Failure` from the specified unrecoverable defect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst die = exitDie;\n\n/**\n * Executes the predicate on the value of the specified exit if it is a\n * `Success`, otherwise returns `false`.\n *\n * @since 2.0.0\n * @category elements\n */\nconst exists = exitExists;\n\n/**\n * Constructs a new `Exit.Failure` from the specified recoverable error of type\n * `E`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fail = exitFail;\n\n/**\n * Constructs a new `Exit.Failure` from the specified `Cause` of type `E`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst failCause = exitFailCause;\n\n/**\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = exitFlatMap;\n\n/**\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMapEffect = exitFlatMapEffect;\n\n/**\n * @since 2.0.0\n * @category sequencing\n */\nconst flatten = exitFlatten;\n\n/**\n * @since 2.0.0\n * @category traversing\n */\nconst forEachEffect = exitForEachEffect;\n\n/**\n * Converts an `Either<E, A>` into an `Exit<E, A>`.\n *\n * @since 2.0.0\n * @category conversions\n */\nconst fromEither = exitFromEither;\n\n/**\n * Converts an `Option<A>` into an `Exit<void, A>`.\n *\n * @since 2.0.0\n * @category conversions\n */\nconst fromOption = exitFromOption;\n\n/**\n * Returns the `A` if specified exit is a `Success`, otherwise returns the\n * alternate `A` value computed from the specified function which receives the\n * `Cause<E>` of the exit `Failure`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst getOrElse = exitGetOrElse;\n\n/**\n * Constructs a new `Exit.Failure` from the specified `FiberId` indicating that\n * the `Fiber` running an `Effect` workflow was terminated due to interruption.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst interrupt = exitInterrupt;\n\n/**\n * Maps over the `Success` value of the specified exit using the provided\n * function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = exitMap;\n\n/**\n * Maps over the `Success` and `Failure` cases of the specified exit using the\n * provided functions.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapBoth = exitMapBoth;\n\n/**\n * Maps over the error contained in the `Failure` of the specified exit using\n * the provided function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapError = exitMapError;\n\n/**\n * Maps over the `Cause` contained in the `Failure` of the specified exit using\n * the provided function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapErrorCause = exitMapErrorCause;\n\n/**\n * @since 2.0.0\n * @category folding\n */\nconst match = exitMatch;\n\n/**\n * @since 2.0.0\n * @category folding\n */\nconst matchEffect = exitMatchEffect;\n\n/**\n * Constructs a new `Exit.Success` containing the specified value of type `A`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeed = exitSucceed;\n\n/**\n * Represents an `Exit` which succeeds with `undefined`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unit = exitUnit;\n\n/**\n * Sequentially zips the this result with the specified result or else returns\n * the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zip = exitZip;\n\n/**\n * Sequentially zips the this result with the specified result discarding the\n * second element of the tuple or else returns the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipLeft = exitZipLeft;\n\n/**\n * Sequentially zips the this result with the specified result discarding the\n * first element of the tuple or else returns the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipRight = exitZipRight;\n\n/**\n * Parallelly zips the this result with the specified result or else returns\n * the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipPar = exitZipPar;\n\n/**\n * Parallelly zips the this result with the specified result discarding the\n * second element of the tuple or else returns the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipParLeft = exitZipParLeft;\n\n/**\n * Parallelly zips the this result with the specified result discarding the\n * first element of the tuple or else returns the failed `Cause<E | E2>`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipParRight = exitZipParRight;\n\n/**\n * Zips this exit together with that exit using the specified combination\n * functions.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWith = exitZipWith;\n\nexport { all, as, asUnit, causeOption, die, exists, fail, failCause, flatMap, flatMapEffect, flatten, forEachEffect, fromEither, fromOption, getOrElse, interrupt, isExit, isFailure, isInterrupted, isSuccess, map, mapBoth, mapError, mapErrorCause, match, matchEffect, succeed, unit, zip, zipLeft, zipPar, zipParLeft, zipParRight, zipRight, zipWith };\n","import * as Cause from 'effect/Cause';\nimport * as Exit from 'effect/Exit';\n\n/**\n * @since 1.0.0\n */\n\n/**\n * @category model\n * @since 1.0.0\n */\n\n/**\n * @category teardown\n * @since 1.0.0\n */\nconst defaultTeardown = (exit, onExit) => {\n  onExit(Exit.isFailure(exit) && !Cause.isInterruptedOnly(exit.cause) ? 1 : 0);\n};\n\n/**\n * @category model\n * @since 1.0.0\n */\n\nexport { defaultTeardown };\n","import { identity, dual } from '../../Function/dist/effect-Function.esm.js';\nimport { EffectTypeId as EffectTypeId$1, isEffect as isEffect$1, async as async$1, asyncEither as asyncEither$1, fail as fail$1, failSync as failSync$1, failCause as failCause$1, failCauseSync as failCauseSync$1, die as die$1, dieMessage as dieMessage$1, dieSync as dieSync$1, never as never$1, succeed as succeed$1, suspend as suspend$1, sync as sync$1, unit as unit$1, yieldNow as yieldNow$1, catchAll as catchAll$1, catchAllCause as catchAllCause$1, catchIf as catchIf$1, catchSome as catchSome$1, checkInterruptible as checkInterruptible$1, interrupt as interrupt$1, interruptWith as interruptWith$1, interruptible as interruptible$1, interruptibleMask as interruptibleMask$1, onInterrupt as onInterrupt$1, uninterruptible as uninterruptible$1, uninterruptibleMask as uninterruptibleMask$1, as as as$1, asUnit as asUnit$1, flip as flip$1, map as map$1, mapBoth as mapBoth$1, mapError as mapError$1, acquireUseRelease as acquireUseRelease$1, onError as onError$1, onExit as onExit$1, fiberId as fiberId$1, fiberIdWith as fiberIdWith$1, transplant as transplant$1, withConcurrency as withConcurrency$1, withSchedulingPriority as withSchedulingPriority$1, withMaxOpsBeforeYield as withMaxOpsBeforeYield$1, context as context$1, contextWithEffect as contextWithEffect$1, mapInputContext as mapInputContext$1, either as either$1, exit as exit$1, intoDeferred as intoDeferred$1, if_ as if_$1, whenEffect as whenEffect$1, flatMap as flatMap$1, flatten as flatten$1, tap as tap$1, whileLoop as whileLoop$1, fiberRefLocally, fiberRefLocallyWith, matchCause as matchCause$1, matchCauseEffect as matchCauseEffect$1, matchEffect as matchEffect$1, withUnhandledErrorLogLevel as withUnhandledErrorLogLevel$1, orDie as orDie$1, orDieWith as orDieWith$1, orElse as orElse$1, runtimeFlags, updateRuntimeFlags, withRuntimeFlags, metricLabels as metricLabels$1, unified as unified$1, blocked as blocked$1, runRequestBlock as runRequestBlock$1, step as step$1, flatMapStep as flatMapStep$1, withRequestBatching as withRequestBatching$1, withTracerTiming as withTracerTiming$1 } from '../../internal/core.esm.js';\nimport { memoize, once as once$1, dropUntil as dropUntil$1, dropWhile as dropWhile$1, every as every$1, findFirst as findFirst$1, firstSuccessOf as firstSuccessOf$1, head as head$1, reduce as reduce$1, reduceRight as reduceRight$1, reduceWhile as reduceWhile$1, takeUntil as takeUntil$1, takeWhile as takeWhile$1, asyncOption as asyncOption$1, gen as gen$1, none as none$1, promise as promise$1, succeedNone as succeedNone$1, succeedSome as succeedSome$1, _catch as _catch$1, catchAllDefect as catchAllDefect$1, catchSomeCause as catchSomeCause$1, catchSomeDefect as catchSomeDefect$1, catchTag as catchTag$1, catchTags as catchTags$1, cause as cause$1, eventually as eventually$1, ignore as ignore$1, ignoreLogged as ignoreLogged$1, parallelErrors as parallelErrors$1, sandbox as sandbox$1, try_ as try_$1, tryMap as tryMap$1, tryMapPromise as tryMapPromise$1, tryPromise as tryPromise$1, unsandbox as unsandbox$1, allowInterrupt as allowInterrupt$1, asSome as asSome$1, asSomeError as asSomeError$1, flipWith as flipWith$1, mapAccum as mapAccum$1, mapErrorCause as mapErrorCause$1, merge as merge$1, negate as negate$1, descriptor as descriptor$1, descriptorWith as descriptorWith$1, diffFiberRefs as diffFiberRefs$1, clock as clock$1, clockWith as clockWith$1, delay as delay$1, sleep as sleep$1, timed as timed$1, timedWith as timedWith$1, contextWith as contextWith$1, provideService as provideService$1, provideServiceEffect as provideServiceEffect$1, serviceFunction as serviceFunction$1, serviceFunctionEffect as serviceFunctionEffect$1, serviceFunctions as serviceFunctions$1, serviceConstants as serviceConstants$1, serviceMembers as serviceMembers$1, serviceOption as serviceOption$1, updateService as updateService$1, Do as Do$1, bind as bind$1, bindTo as bindTo$1, bindValue, option as option$1, filterOrDie as filterOrDie$1, filterOrDieMessage as filterOrDieMessage$1, filterOrElse as filterOrElse$1, filterOrFail as filterOrFail$1, unless as unless$1, unlessEffect as unlessEffect$1, when as when$1, whenFiberRef as whenFiberRef$1, whenRef as whenRef$1, summarized as summarized$1, tapBoth as tapBoth$1, tapDefect as tapDefect$1, tapError as tapError$1, tapErrorTag as tapErrorTag$1, tapErrorCause as tapErrorCause$1, forever as forever$1, iterate as iterate$1, loop as loop$1, repeatN as repeatN$1, fiberRefs, inheritFiberRefs as inheritFiberRefs$1, patchFiberRefs as patchFiberRefs$1, setFiberRefs as setFiberRefs$1, updateFiberRefs as updateFiberRefs$1, isFailure as isFailure$1, isSuccess as isSuccess$1, match as match$1, log as log$1, logTrace as logTrace$1, logDebug as logDebug$1, logInfo as logInfo$1, logWarning as logWarning$1, logError as logError$1, logFatal as logFatal$1, withLogSpan as withLogSpan$1, annotateLogs as annotateLogs$1, logAnnotations as logAnnotations$1, orElseFail as orElseFail$1, orElseSucceed as orElseSucceed$1, random as random$1, tagMetrics as tagMetrics$1, labelMetrics as labelMetrics$1, labelMetricsSet as labelMetricsSet$1, withMetric as withMetric$1, tracer as tracer$1, annotateSpans as annotateSpans$1, annotateCurrentSpan as annotateCurrentSpan$1, currentSpan as currentSpan$1, currentParentSpan as currentParentSpan$1, spanAnnotations as spanAnnotations$1, spanLinks as spanLinks$1, linkSpans as linkSpans$1, makeSpan as makeSpan$1, useSpan as useSpan$1, withSpan as withSpan$1, withParentSpan as withParentSpan$1, fromNullable as fromNullable$1, optionFromOptional as optionFromOptional$1 } from '../../internal/core-effect.esm.js';\nimport { withClock as withClock$1, config as config$1, configProviderWith as configProviderWith$1, withConfigProvider as withConfigProvider$1, randomWith as randomWith$1, tracerWith as tracerWith$1, withTracer as withTracer$1 } from '../../internal/defaultServices.esm.js';\nimport { cached as cached$1, cachedInvalidate, memoizeFunction, awaitAllChildren as awaitAllChildren$1, ensuringChild as ensuringChild$1, ensuringChildren as ensuringChildren$1, forkAll as forkAll$1, forkIn as forkIn$1, forkScoped as forkScoped$1, fromFiber as fromFiber$1, fromFiberEffect as fromFiberEffect$1, supervised as supervised$1, timeout as timeout$1, timeoutFail as timeoutFail$1, timeoutFailCause as timeoutFailCause$1, timeoutTo as timeoutTo$1, raceFirst as raceFirst$1, scheduleForked as scheduleForked$1, unsafeMakeSemaphore as unsafeMakeSemaphore$1, makeSemaphore as makeSemaphore$1 } from '../../internal/effect/circular.esm.js';\nimport { all as all$1, allWith as allWith$1, allSuccesses as allSuccesses$1, exists as exists$1, filter as filter$1, forEachOptions, mergeAll as mergeAll$1, partition as partition$1, reduceEffect as reduceEffect$1, replicate as replicate$1, replicateEffect as replicateEffect$1, validateAll as validateAll$1, validateFirst as validateFirst$1, disconnect as disconnect$1, acquireRelease as acquireRelease$1, acquireReleaseInterruptible as acquireReleaseInterruptible$1, addFinalizer as addFinalizer$1, ensuring as ensuring$1, parallelFinalizers as parallelFinalizers$1, finalizersMask as finalizersMask$1, sequentialFinalizers as sequentialFinalizers$1, scope as scope$1, scopeWith as scopeWith$1, scopedEffect, using as using$1, withEarlyRelease as withEarlyRelease$1, daemonChildren as daemonChildren$1, fork as fork$1, forkDaemon as forkDaemon$1, forkWithErrorHandler as forkWithErrorHandler$1, withClockScoped as withClockScoped$1, withConfigProviderScoped as withConfigProviderScoped$1, raceAll as raceAll$1, race as race$1, raceWith as raceWith$1, fiberRefLocallyScoped, fiberRefLocallyScopedWith, withRuntimeFlagsScoped, tagMetricsScoped as tagMetricsScoped$1, labelMetricsScoped as labelMetricsScoped$1, labelMetricsScopedSet as labelMetricsScopedSet$1, validate as validate$1, validateWith as validateWith$1, zipOptions, zipLeftOptions, zipRightOptions, zipWithOptions, withTracerScoped as withTracerScoped$1, makeSpanScoped as makeSpanScoped$1, withSpanScoped as withSpanScoped$1 } from '../../internal/fiberRuntime.esm.js';\nimport { effect_provide } from '../../internal/layer.esm.js';\nimport { fromRequest, cacheRequest, withRequestCaching as withRequestCaching$1, withRequestCache as withRequestCache$1 } from '../../internal/query.esm.js';\nimport { asyncEffect as asyncEffect$1, runtime as runtime$1, unsafeForkEffect, unsafeRunEffect, unsafeRunPromiseEffect, unsafeRunPromiseExitEffect, unsafeRunSyncEffect, unsafeRunSyncExitEffect } from '../../internal/runtime.esm.js';\nimport { retry_Effect, retryN_Effect, retryOrElse_Effect, retryUntil_Effect, retryUntilEffect_Effect, retryWhile_Effect, retryWhileEffect_Effect, repeat_Effect, repeatOrElse_Effect, repeatUntil_Effect, repeatUntilEffect_Effect, repeatWhile_Effect, repeatWhileEffect_Effect, schedule_Effect, scheduleFrom_Effect } from '../../internal/schedule.esm.js';\nimport { withScheduler as withScheduler$1 } from '../../Scheduler/dist/effect-Scheduler.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n// -------------------------------------------------------------------------------------\n// models\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst EffectTypeId = EffectTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * The `Effect` interface defines a value that lazily describes a workflow or job.\n * The workflow requires some context `R`, and may fail with an error of type `E`,\n * or succeed with a value of type `A`.\n *\n * `Effect` values model resourceful interaction with the outside world, including\n * synchronous, asynchronous, concurrent, and parallel interaction. They use a\n * fiber-based concurrency model, with built-in support for scheduling, fine-grained\n * interruption, structured concurrency, and high scalability.\n *\n * To run an `Effect` value, you need a `Runtime`, which is a type that is capable\n * of executing `Effect` values.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * This function returns `true` if the specified value is an `Effect` value,\n * `false` otherwise.\n *\n * This function can be useful for checking the type of a value before\n * attempting to operate on it as an `Effect` value. For example, you could\n * use `isEffect` to check the type of a value before using it as an\n * argument to a function that expects an `Effect` value.\n *\n * @param u - The value to check for being an `Effect` value.\n *\n * @returns `true` if the specified value is an `Effect` value, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isEffect = isEffect$1;\n\n// -------------------------------------------------------------------------------------\n// caching\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns an effect that, if evaluated, will return the cached result of this\n * effect. Cached results will expire after `timeToLive` duration.\n *\n * @since 2.0.0\n * @category caching\n */\nconst cachedWithTTL = cached$1;\n\n/**\n * Returns an effect that, if evaluated, will return the cached result of this\n * effect. Cached results will expire after `timeToLive` duration. In\n * addition, returns an effect that can be used to invalidate the current\n * cached value before the `timeToLive` duration expires.\n *\n * @since 2.0.0\n * @category caching\n */\nconst cachedInvalidateWithTTL = cachedInvalidate;\n\n/**\n * Returns an effect that, if evaluated, will return the lazily computed\n * result of this effect.\n *\n * @since 2.0.0\n * @category caching\n */\nconst cached = memoize;\n\n/**\n * Returns a memoized version of the specified effectual function.\n *\n * @since 2.0.0\n * @category caching\n */\nconst cachedFunction = memoizeFunction;\n\n/**\n * Returns an effect that will be executed at most once, even if it is\n * evaluated multiple times.\n *\n * @since 2.0.0\n * @category caching\n */\nconst once = once$1;\n\n// -------------------------------------------------------------------------------------\n// collecting & elements\n// -------------------------------------------------------------------------------------\n\n/**\n * Runs all the provided effects in sequence respecting the structure provided in input.\n *\n * Supports multiple arguments, a single argument tuple / array or record / struct.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst all = all$1;\n\n/**\n * Data-last variant of `Effect.all`.\n *\n * Runs all the provided effects in sequence respecting the structure provided in input.\n *\n * Supports multiple arguments, a single argument tuple / array or record / struct.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst allWith = allWith$1;\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Evaluate and run each effect in the structure and collect the results,\n * discarding results from failed effects.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst allSuccesses = allSuccesses$1;\n\n/**\n * Drops all elements until the effectful predicate returns true.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst dropUntil = dropUntil$1;\n\n/**\n * Drops all elements so long as the predicate returns true.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst dropWhile = dropWhile$1;\n\n/**\n * Determines whether all elements of the `Collection<A>` satisfies the effectual\n * predicate `f`.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst every = every$1;\n\n/**\n * Determines whether any element of the `Iterable<A>` satisfies the effectual\n * predicate `f`.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst exists = exists$1;\n\n/**\n * Filters the collection using the specified effectful predicate.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst filter = filter$1;\n\n/**\n * Returns the first element that satisfies the effectful predicate.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst findFirst = findFirst$1;\n\n/**\n * This function takes an iterable of `Effect` values and returns a new\n * `Effect` value that represents the first `Effect` value in the iterable\n * that succeeds. If all of the `Effect` values in the iterable fail, then\n * the resulting `Effect` value will fail as well.\n *\n * This function is sequential, meaning that the `Effect` values in the\n * iterable will be executed in sequence, and the first one that succeeds\n * will determine the outcome of the resulting `Effect` value.\n *\n * @param effects - The iterable of `Effect` values to evaluate.\n *\n * @returns A new `Effect` value that represents the first successful\n * `Effect` value in the iterable, or a failed `Effect` value if all of the\n * `Effect` values in the iterable fail.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst firstSuccessOf = firstSuccessOf$1;\n\n/**\n * @since 2.0.0\n * @category collecting & elements\n */\nconst forEach = forEachOptions;\n\n/**\n * Returns a successful effect with the head of the collection if the collection\n * is non-empty, or fails with the error `None` if the collection is empty.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst head = head$1;\n\n/**\n * Merges an `Iterable<Effect<R, E, A>>` to a single effect, working\n * sequentially.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst mergeAll = mergeAll$1;\n\n/**\n * Feeds elements of type `A` to a function `f` that returns an effect.\n * Collects all successes and failures in a tupled fashion.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst partition = partition$1;\n\n/**\n * Folds an `Iterable<A>` using an effectual function f, working sequentially\n * from left to right.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst reduce = reduce$1;\n\n/**\n * Reduces an `Iterable<Effect<R, E, A>>` to a single effect.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst reduceEffect = reduceEffect$1;\n\n/**\n * Folds an `Iterable<A>` using an effectual function f, working sequentially from left to right.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst reduceRight = reduceRight$1;\n\n/**\n * Folds over the elements in this chunk from the left, stopping the fold early\n * when the predicate is not satisfied.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst reduceWhile = reduceWhile$1;\n\n/**\n * Replicates the given effect `n` times.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst replicate = replicate$1;\n\n/**\n * Performs this effect the specified number of times and collects the\n * results.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst replicateEffect = replicateEffect$1;\n\n/**\n * Takes elements until the effectual predicate returns true.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst takeUntil = takeUntil$1;\n\n/**\n * Takes all elements so long as the effectual predicate returns true.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst takeWhile = takeWhile$1;\n\n/**\n * Feeds elements of type `A` to `f` and accumulates all errors in error\n * channel or successes in success channel.\n *\n * This combinator is lossy meaning that if there are errors all successes\n * will be lost. To retain all information please use `partition`.\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst validateAll = validateAll$1;\n\n/**\n * Feeds elements of type `A` to `f` until it succeeds. Returns first success\n * or the accumulation of all errors.\n *\n * If `elements` is empty then `Effect.fail([])` is returned.\n *\n * @example\n * import * as Effect from \"effect/Effect\"\n * import * as Exit from \"effect/Exit\"\n *\n * const f = (n: number) => (n > 0 ? Effect.succeed(n) : Effect.fail(`${n} is negative`))\n *\n * assert.deepStrictEqual(Effect.runSyncExit(Effect.validateFirst([], f)), Exit.fail([]))\n * assert.deepStrictEqual(Effect.runSyncExit(Effect.validateFirst([1, 2], f)), Exit.succeed(1))\n * assert.deepStrictEqual(Effect.runSyncExit(Effect.validateFirst([1, -1], f)), Exit.succeed(1))\n * assert.deepStrictEqual(Effect.runSyncExit(Effect.validateFirst([-1, 2], f)), Exit.succeed(2))\n * assert.deepStrictEqual(Effect.runSyncExit(Effect.validateFirst([-1, -2], f)), Exit.fail(['-1 is negative', '-2 is negative']))\n *\n * @since 2.0.0\n * @category collecting & elements\n */\nconst validateFirst = validateFirst$1;\n\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Imports an asynchronous side-effect into a pure `Effect` value.\n * The callback function `Effect<R, E, A> => void` must be called at most once.\n *\n * If an Effect is returned by the registration function, it will be executed\n * if the fiber executing the effect is interrupted.\n *\n * The registration function can also receive an `AbortSignal` if required for\n * interruption.\n *\n * The `FiberId` of the fiber that may complete the async callback may be\n * provided to allow for better diagnostics.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst async = async$1;\n\n/**\n * Converts an asynchronous, callback-style API into an `Effect`, which will\n * be executed asynchronously.\n *\n * With this variant, the registration function may return a an `Effect`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst asyncEffect = asyncEffect$1;\n\n/**\n * Imports an asynchronous effect into a pure `Effect` value, possibly returning\n * the value synchronously.\n *\n * If the register function returns a value synchronously, then the callback\n * function `Effect<R, E, A> => void` must not be called. Otherwise the callback\n * function must be called at most once.\n *\n * The `FiberId` of the fiber that may complete the async callback may be\n * provided to allow for better diagnostics.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst asyncOption = asyncOption$1;\n\n/**\n * Imports an asynchronous side-effect into an effect. It has the option of\n * returning the value synchronously, which is useful in cases where it cannot\n * be determined if the effect is synchronous or asynchronous until the register\n * is actually executed. It also has the option of returning a canceler,\n * which will be used by the runtime to cancel the asynchronous effect if the fiber\n * executing the effect is interrupted.\n *\n * If the register function returns a value synchronously, then the callback\n * function `Effect<R, E, A> => void` must not be called. Otherwise the callback\n * function must be called at most once.\n *\n * The `FiberId` of the fiber that may complete the async callback may be\n * provided to allow for better diagnostics.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst asyncEither = asyncEither$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst fail = fail$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst failSync = failSync$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst failCause = failCause$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst failCauseSync = failCauseSync$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst die = die$1;\n\n/**\n * Returns an effect that dies with a `RuntimeException` having the specified\n * text message. This method can be used for terminating a fiber because a\n * defect has been detected in the code.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst dieMessage = dieMessage$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst dieSync = dieSync$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst gen = gen$1;\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Returns a effect that will never produce anything. The moral equivalent of\n * `while(true) {}`, only without the wasted CPU cycles.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst never = never$1;\n\n/**\n * Requires the option produced by this value to be `None`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst none = none$1;\n\n/**\n * Like `tryPromise` but produces a defect in case of errors.\n *\n * An optional `AbortSignal` can be provided to allow for interruption of the\n * wrapped Promise api.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst promise = promise$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst succeed = succeed$1;\n\n/**\n * Returns an effect which succeeds with `None`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeedNone = succeedNone$1;\n\n/**\n * Returns an effect which succeeds with the value wrapped in a `Some`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeedSome = succeedSome$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst suspend = suspend$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst sync = sync$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst unit = unit$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst yieldNow = yieldNow$1;\n\n// -------------------------------------------------------------------------------------\n// error handling\n// -------------------------------------------------------------------------------------\n\nconst _catch = _catch$1;\n\n/**\n * Recovers from all recoverable errors.\n *\n * **Note**: that `Effect.catchAll` will not recover from unrecoverable defects. To\n * recover from both recoverable and unrecoverable errors use\n * `Effect.catchAllCause`.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchAll = catchAll$1;\n\n/**\n * Recovers from both recoverable and unrecoverable errors.\n *\n * See `absorb`, `sandbox`, `mapErrorCause` for other functions that can\n * recover from defects.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchAllCause = catchAllCause$1;\n\n/**\n * Recovers from all defects with provided function.\n *\n * **WARNING**: There is no sensible way to recover from defects. This\n * method should be used only at the boundary between Effect and an external\n * system, to transmit information on a defect for diagnostic or explanatory\n * purposes.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchAllDefect = catchAllDefect$1;\n\n/**\n * Recovers from errors that match the given predicate.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchIf = catchIf$1;\n\n/**\n * Recovers from some or all of the error cases.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchSome = catchSome$1;\n\n/**\n * Recovers from some or all of the error cases with provided cause.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchSomeCause = catchSomeCause$1;\n\n/**\n * Recovers from some or all of the defects with provided partial function.\n *\n * **WARNING**: There is no sensible way to recover from defects. This\n * method should be used only at the boundary between Effect and an external\n * system, to transmit information on a defect for diagnostic or explanatory\n * purposes.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchSomeDefect = catchSomeDefect$1;\n\n/**\n * Recovers from the specified tagged error.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchTag = catchTag$1;\n\n/**\n * Recovers from the specified tagged errors.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchTags = catchTags$1;\n\n/**\n * Returns an effect that succeeds with the cause of failure of this effect,\n * or `Cause.empty` if the effect did succeed.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst cause = cause$1;\n\n/**\n * Returns an effect that ignores errors and runs repeatedly until it\n * eventually succeeds.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst eventually = eventually$1;\n\n/**\n * Returns a new effect that ignores the success or failure of this effect.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst ignore = ignore$1;\n\n/**\n * Returns a new effect that ignores the success or failure of this effect,\n * but which also logs failures at the Debug level, just in case the failure\n * turns out to be important.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst ignoreLogged = ignoreLogged$1;\n\n/**\n * Exposes all parallel errors in a single call.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst parallelErrors = parallelErrors$1;\n\n/**\n * Exposes the full `Cause` of failure for the specified effect.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst sandbox = sandbox$1;\n\n/**\n * Retries with the specified retry policy. Retries are done following the\n * failure of the original `io` (up to a fixed maximum with `once` or `recurs`\n * for example), so that that `io.retry(Schedule.once)` means \"execute `io`\n * and in case of failure, try again once\".\n *\n * @since 2.0.0\n * @category error handling\n */\nconst retry = retry_Effect;\n\n/**\n * Retries this effect the specified number of times.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst retryN = retryN_Effect;\n\n/**\n * Retries with the specified schedule, until it fails, and then both the\n * value produced by the schedule together with the last error are passed to\n * the recovery function.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst retryOrElse = retryOrElse_Effect;\n\n/**\n * Retries this effect until its error satisfies the specified predicate.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst retryUntil = retryUntil_Effect;\n\n/**\n * Retries this effect until its error satisfies the specified effectful\n * predicate.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst retryUntilEffect = retryUntilEffect_Effect;\n\n/**\n * Retries this effect while its error satisfies the specified predicate.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst retryWhile = retryWhile_Effect;\n\n/**\n * Retries this effect while its error satisfies the specified effectful\n * predicate.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst retryWhileEffect = retryWhileEffect_Effect;\nconst try_ = try_$1;\n\n/**\n * Returns an effect whose success is mapped by the specified side effecting\n * `try` function, translating any promise rejections into typed failed effects\n * via the `catch` function.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst tryMap = tryMap$1;\n\n/**\n * Returns an effect whose success is mapped by the specified side effecting\n * `try` function, translating any promise rejections into typed failed effects\n * via the `catch` function.\n *\n * An optional `AbortSignal` can be provided to allow for interruption of the\n * wrapped Promise api.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst tryMapPromise = tryMapPromise$1;\n\n/**\n * Create an `Effect` that when executed will construct `promise` and wait for\n * its result, errors will produce failure as `unknown`.\n *\n * An optional `AbortSignal` can be provided to allow for interruption of the\n * wrapped Promise api.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst tryPromise = tryPromise$1;\n\n/**\n * The inverse operation `sandbox(effect)`\n *\n * Terminates with exceptions on the `Left` side of the `Either` error, if it\n * exists. Otherwise extracts the contained `Effect<R, E, A>`\n *\n * @since 2.0.0\n * @category error handling\n */\nconst unsandbox = unsandbox$1;\n\n// -------------------------------------------------------------------------------------\n// interuption\n// -------------------------------------------------------------------------------------\n\n/**\n * This function checks if any fibers are attempting to interrupt the current\n * fiber, and if so, performs self-interruption.\n *\n * Note that this allows for interruption to occur in uninterruptible regions.\n *\n * @returns A new `Effect` value that represents the check for interruption\n * and the potential self-interruption of the current fiber.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst allowInterrupt = allowInterrupt$1;\n\n/**\n * Checks the interrupt status, and produces the effect returned by the\n * specified callback.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst checkInterruptible = checkInterruptible$1;\n\n/**\n * Returns an effect whose interruption will be disconnected from the\n * fiber's own interruption, being performed in the background without\n * slowing down the fiber's interruption.\n *\n * This method is useful to create \"fast interrupting\" effects. For\n * example, if you call this on a bracketed effect, then even if the\n * effect is \"stuck\" in acquire or release, its interruption will return\n * immediately, while the acquire / release are performed in the\n * background.\n *\n * See timeout and race for other applications.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst disconnect = disconnect$1;\n\n/**\n * @since 2.0.0\n * @category interruption\n */\nconst interrupt = interrupt$1;\n\n/**\n * @since 2.0.0\n * @category interruption\n */\nconst interruptWith = interruptWith$1;\n\n/**\n * @since 2.0.0\n * @category interruption\n */\nconst interruptible = interruptible$1;\n\n/**\n * @since 2.0.0\n * @category interruption\n */\nconst interruptibleMask = interruptibleMask$1;\n\n/**\n * @since 2.0.0\n * @category interruption\n */\nconst onInterrupt = onInterrupt$1;\n\n/**\n * @since 2.0.0\n * @category interruption\n */\nconst uninterruptible = uninterruptible$1;\n\n/**\n * @since 2.0.0\n * @category interruption\n */\nconst uninterruptibleMask = uninterruptibleMask$1;\n\n// -------------------------------------------------------------------------------------\n// mapping\n// -------------------------------------------------------------------------------------\n\n/**\n * This function maps the success value of an `Effect` value to a specified\n * constant value.\n *\n * @param value - The constant value that the success value of the `Effect`\n * value will be mapped to.\n * @param self - The `Effect` value whose success value will be mapped to the\n * specified constant value.\n *\n * @returns A new `Effect` value that represents the mapping of the success\n * value of the original `Effect` value to the specified constant value.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst as = as$1;\n\n/**\n * This function maps the success value of an `Effect` value to a `Some` value\n * in an `Option` value. If the original `Effect` value fails, the returned\n * `Effect` value will also fail.\n *\n * @param self - The `Effect` value whose success value will be mapped to a\n * `Some` value in an `Option` value.\n *\n * @returns A new `Effect` value that represents the mapping of the success\n * value of the original `Effect` value to a `Some` value in an `Option`\n * value. The returned `Effect` value may fail if the original `Effect` value\n * fails.\n *\n * @category mapping\n * @since 2.0.0\n */\nconst asSome = asSome$1;\n\n/**\n * This function maps the error value of an `Effect` value to a `Some` value\n * in an `Option` value. If the original `Effect` value succeeds, the returned\n * `Effect` value will also succeed.\n *\n * @param self - The `Effect` value whose error value will be mapped to a\n * `Some` value in an `Option` value.\n *\n * @returns A new `Effect` value that represents the mapping of the error\n * value of the original `Effect` value to a `Some` value in an `Option`\n * value. The returned `Effect` value may succeed if the original `Effect`\n * value succeeds.\n *\n * @category mapping\n * @since 2.0.0\n */\nconst asSomeError = asSomeError$1;\n\n/**\n * This function maps the success value of an `Effect` value to `void`. If the\n * original `Effect` value succeeds, the returned `Effect` value will also\n * succeed. If the original `Effect` value fails, the returned `Effect` value\n * will fail with the same error.\n *\n * @param self - The `Effect` value whose success value will be mapped to `void`.\n *\n * @returns A new `Effect` value that represents the mapping of the success\n * value of the original `Effect` value to `void`.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst asUnit = asUnit$1;\n\n/**\n * Returns an effect that swaps the error/success cases. This allows you to\n * use all methods on the error channel, possibly before flipping back.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst flip = flip$1;\n\n/**\n * Swaps the error/value parameters, applies the function `f` and flips the\n * parameters back\n *\n * @since 2.0.0\n * @category mapping\n */\nconst flipWith = flipWith$1;\n\n/**\n * @since 2.0.0\n * @category mapping\n */\nconst map = map$1;\n\n/**\n * Statefully and effectfully maps over the elements of this chunk to produce\n * new elements.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapAccum = mapAccum$1;\n\n/**\n * Returns an effect whose failure and success channels have been mapped by\n * the specified `onFailure` and `onSuccess` functions.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapBoth = mapBoth$1;\n\n/**\n * Returns an effect with its error channel mapped using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapError = mapError$1;\n\n/**\n * Returns an effect with its full cause of failure mapped using the specified\n * function. This can be used to transform errors while preserving the\n * original structure of `Cause`.\n *\n * See `absorb`, `sandbox`, `catchAllCause` for other functions for dealing\n * with defects.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapErrorCause = mapErrorCause$1;\n\n/**\n * Returns a new effect where the error channel has been merged into the\n * success channel to their common combined type.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst merge = merge$1;\n\n/**\n * Returns a new effect where boolean value of this effect is negated.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst negate = negate$1;\n\n// -------------------------------------------------------------------------------------\n// scoping, resources & finalization\n// -------------------------------------------------------------------------------------\n\n/**\n * This function constructs a scoped resource from an `acquire` and `release`\n * `Effect` value.\n *\n * If the `acquire` `Effect` value successfully completes execution, then the\n * `release` `Effect` value will be added to the finalizers associated with the\n * scope of this `Effect` value, and it is guaranteed to be run when the scope\n * is closed.\n *\n * The `acquire` and `release` `Effect` values will be run uninterruptibly.\n * Additionally, the `release` `Effect` value may depend on the `Exit` value\n * specified when the scope is closed.\n *\n * @param acquire - The `Effect` value that acquires the resource.\n * @param release - The `Effect` value that releases the resource.\n *\n * @returns A new `Effect` value that represents the scoped resource.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst acquireRelease = acquireRelease$1;\n\n/**\n * This function constructs a scoped resource from an `acquire` and `release`\n * `Effect` value.\n *\n * If the `acquire` `Effect` value successfully completes execution, then the\n * `release` `Effect` value will be added to the finalizers associated with the\n * scope of this `Effect` value, and it is guaranteed to be run when the scope\n * is closed.\n *\n * The `acquire` `Effect` values will be run interruptibly.\n * The `release` `Effect` values will be run uninterruptibly.\n *\n * Additionally, the `release` `Effect` value may depend on the `Exit` value\n * specified when the scope is closed.\n *\n * @param acquire - The `Effect` value that acquires the resource.\n * @param release - The `Effect` value that releases the resource.\n *\n * @returns A new `Effect` value that represents the scoped resource.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst acquireReleaseInterruptible = acquireReleaseInterruptible$1;\n\n/**\n * This function is used to ensure that an `Effect` value that represents the\n * acquisition of a resource (for example, opening a file, launching a thread,\n * etc.) will not be interrupted, and that the resource will always be released\n * when the `Effect` value completes execution.\n *\n * `acquireUseRelease` does the following:\n *\n *   1. Ensures that the `Effect` value that acquires the resource will not be\n *      interrupted. Note that acquisition may still fail due to internal\n *      reasons (such as an uncaught exception).\n *   2. Ensures that the `release` `Effect` value will not be interrupted,\n *      and will be executed as long as the acquisition `Effect` value\n *      successfully acquires the resource.\n *\n * During the time period between the acquisition and release of the resource,\n * the `use` `Effect` value will be executed.\n *\n * If the `release` `Effect` value fails, then the entire `Effect` value will\n * fail, even if the `use` `Effect` value succeeds. If this fail-fast behavior\n * is not desired, errors produced by the `release` `Effect` value can be caught\n * and ignored.\n *\n * @param acquire - The `Effect` value that acquires the resource.\n * @param use - The `Effect` value that is executed between the acquisition\n * and release of the resource.\n * @param release - The `Effect` value that releases the resource.\n *\n * @returns A new `Effect` value that represents the acquisition, use, and\n * release of the resource.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst acquireUseRelease = acquireUseRelease$1;\n\n/**\n * This function adds a finalizer to the scope of the calling `Effect` value.\n * The finalizer is guaranteed to be run when the scope is closed, and it may\n * depend on the `Exit` value that the scope is closed with.\n *\n * @param finalizer - The finalizer to add to the scope of the calling\n * `Effect` value. This function must take an `Exit` value as its parameter,\n * and return a new `Effect` value.\n *\n * @returns A new `Effect` value that represents the addition of the finalizer\n * to the scope of the calling `Effect` value.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst addFinalizer = addFinalizer$1;\n\n/**\n * Returns an effect that, if this effect _starts_ execution, then the\n * specified `finalizer` is guaranteed to be executed, whether this effect\n * succeeds, fails, or is interrupted.\n *\n * For use cases that need access to the effect's result, see `onExit`.\n *\n * Finalizers offer very powerful guarantees, but they are low-level, and\n * should generally not be used for releasing resources. For higher-level\n * logic built on `ensuring`, see the `acquireRelease` family of methods.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst ensuring = ensuring$1;\n\n/**\n * Runs the specified effect if this effect fails, providing the error to the\n * effect if it exists. The provided effect will not be interrupted.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst onError = onError$1;\n\n/**\n * Ensures that a cleanup functions runs, whether this effect succeeds, fails,\n * or is interrupted.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst onExit = onExit$1;\n\n/**\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst parallelFinalizers = parallelFinalizers$1;\n\n/**\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst finalizersMask = finalizersMask$1;\n\n/**\n * Returns a new scoped workflow that runs finalizers added to the scope of\n * this workflow sequentially in the reverse of the order in which they were\n * added. Note that finalizers are run sequentially by default so this only\n * has meaning if used within a scope where finalizers are being run in\n * parallel.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst sequentialFinalizers = sequentialFinalizers$1;\n\n/**\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst scope = scope$1;\n\n/**\n * Accesses the current scope and uses it to perform the specified effect.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst scopeWith = scopeWith$1;\n\n/**\n * Scopes all resources uses in this workflow to the lifetime of the workflow,\n * ensuring that their finalizers are run as soon as this workflow completes\n * execution, whether by success, failure, or interruption.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst scoped = scopedEffect;\n\n/**\n * Scopes all resources acquired by `resource` to the lifetime of `use`\n * without effecting the scope of any resources acquired by `use`.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst using = using$1;\n\n/**\n * Returns a new scoped workflow that returns the result of this workflow as\n * well as a finalizer that can be run to close the scope of this workflow.\n *\n * @since 2.0.0\n * @category scoping, resources & finalization\n */\nconst withEarlyRelease = withEarlyRelease$1;\n\n// -------------------------------------------------------------------------------------\n// supervision & fibers\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns a new effect that will not succeed with its value before first\n * waiting for the end of all child fibers forked by the effect.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst awaitAllChildren = awaitAllChildren$1;\n\n/**\n * Returns a new workflow that will not supervise any fibers forked by this\n * workflow.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst daemonChildren = daemonChildren$1;\n\n/**\n * Constructs an effect with information about the current `Fiber`.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst descriptor = descriptor$1;\n\n/**\n * Constructs an effect based on information about the current `Fiber`.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst descriptorWith = descriptorWith$1;\n\n/**\n * Returns a new workflow that executes this one and captures the changes in\n * `FiberRef` values.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst diffFiberRefs = diffFiberRefs$1;\n\n/**\n * Acts on the children of this fiber (collected into a single fiber),\n * guaranteeing the specified callback will be invoked, whether or not this\n * effect succeeds.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst ensuringChild = ensuringChild$1;\n\n/**\n * Acts on the children of this fiber, guaranteeing the specified callback\n * will be invoked, whether or not this effect succeeds.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst ensuringChildren = ensuringChildren$1;\n\n/**\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst fiberId = fiberId$1;\n\n/**\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst fiberIdWith = fiberIdWith$1;\n\n/**\n * Returns an effect that forks this effect into its own separate fiber,\n * returning the fiber immediately, without waiting for it to begin executing\n * the effect.\n *\n * You can use the `fork` method whenever you want to execute an effect in a\n * new fiber, concurrently and without \"blocking\" the fiber executing other\n * effects. Using fibers can be tricky, so instead of using this method\n * directly, consider other higher-level methods, such as `raceWith`,\n * `zipPar`, and so forth.\n *\n * The fiber returned by this method has methods to interrupt the fiber and to\n * wait for it to finish executing the effect. See `Fiber` for more\n * information.\n *\n * Whenever you use this method to launch a new fiber, the new fiber is\n * attached to the parent fiber's scope. This means when the parent fiber\n * terminates, the child fiber will be terminated as well, ensuring that no\n * fibers leak. This behavior is called \"auto supervision\", and if this\n * behavior is not desired, you may use the `forkDaemon` or `forkIn` methods.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst fork = fork$1;\n\n/**\n * Forks the effect into a new fiber attached to the global scope. Because the\n * new fiber is attached to the global scope, when the fiber executing the\n * returned effect terminates, the forked fiber will continue running.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst forkDaemon = forkDaemon$1;\n\n/**\n * Returns an effect that forks all of the specified values, and returns a\n * composite fiber that produces a list of their results, in order.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst forkAll = forkAll$1;\n\n/**\n * Forks the effect in the specified scope. The fiber will be interrupted\n * when the scope is closed.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst forkIn = forkIn$1;\n\n/**\n * Forks the fiber in a `Scope`, interrupting it when the scope is closed.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst forkScoped = forkScoped$1;\n\n/**\n * Like fork but handles an error with the provided handler.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst forkWithErrorHandler = forkWithErrorHandler$1;\n\n/**\n * Creates an `Effect` value that represents the exit value of the specified\n * fiber.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst fromFiber = fromFiber$1;\n\n/**\n * Creates an `Effect` value that represents the exit value of the specified\n * fiber.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst fromFiberEffect = fromFiberEffect$1;\n\n/**\n * Returns an effect with the behavior of this one, but where all child fibers\n * forked in the effect are reported to the specified supervisor.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst supervised = supervised$1;\n\n/**\n * Transplants specified effects so that when those effects fork other\n * effects, the forked effects will be governed by the scope of the fiber that\n * executes this effect.\n *\n * This can be used to \"graft\" deep grandchildren onto a higher-level scope,\n * effectively extending their lifespans into the parent scope.\n *\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst transplant = transplant$1;\n\n/**\n * @since 2.0.0\n * @category supervision & fibers\n */\nconst withConcurrency = withConcurrency$1;\n\n// ---------------------------------------------------------------------------------------\n// scheduler\n// ---------------------------------------------------------------------------------------\n\n/**\n * Sets the provided scheduler for usage in the wrapped effect\n *\n * @since 2.0.0\n * @category scheduler\n */\nconst withScheduler = withScheduler$1;\n\n/**\n * Sets the scheduling priority used when yielding\n *\n * @since 2.0.0\n * @category utils\n */\nconst withSchedulingPriority = withSchedulingPriority$1;\n\n/**\n * Sets the maximum number of operations before yield by the default schedulers\n *\n * @since 2.0.0\n * @category utils\n */\nconst withMaxOpsBeforeYield = withMaxOpsBeforeYield$1;\n\n// ---------------------------------------------------------------------------------------\n// clock\n// ---------------------------------------------------------------------------------------\n\n/**\n * Retreives the `Clock` service from the context\n *\n * @since 2.0.0\n * @category clock\n */\nconst clock = clock$1;\n\n/**\n * Retreives the `Clock` service from the context and provides it to the\n * specified effectful function.\n *\n * @since 2.0.0\n * @category clock\n */\nconst clockWith = clockWith$1;\n\n/**\n * Sets the implementation of the clock service to the specified value and\n * restores it to its original value when the scope is closed.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst withClockScoped = withClockScoped$1;\n\n/**\n * Executes the specified workflow with the specified implementation of the\n * clock service.\n *\n * @since 2.0.0\n * @category clock\n */\nconst withClock = withClock$1;\n\n// ---------------------------------------------------------------------------------------\n// delays & timeouts\n// ---------------------------------------------------------------------------------------\n\n/**\n * Returns an effect that is delayed from this effect by the specified\n * `Duration`.\n *\n * @since 2.0.0\n * @category delays & timeouts\n */\nconst delay = delay$1;\n\n/**\n * Returns an effect that suspends for the specified duration. This method is\n * asynchronous, and does not actually block the fiber executing the effect.\n *\n * @since 2.0.0\n * @category delays & timeouts\n */\nconst sleep = sleep$1;\n\n/**\n * Returns a new effect that executes this one and times the execution.\n *\n * @since 2.0.0\n * @category delays & timeouts\n */\nconst timed = timed$1;\n\n/**\n * A more powerful variation of `timed` that allows specifying the clock.\n *\n * @since 2.0.0\n * @category delays & timeouts\n */\nconst timedWith = timedWith$1;\n\n/**\n * Returns an effect that will timeout this effect, returning `None` if the\n * timeout elapses before the effect has produced a value; and returning\n * `Some` of the produced value otherwise.\n *\n * If the timeout elapses without producing a value, the running effect will\n * be safely interrupted.\n *\n * WARNING: The effect returned by this method will not itself return until\n * the underlying effect is actually interrupted. This leads to more\n * predictable resource utilization. If early return is desired, then instead\n * of using `effect.timeout(d)`, use `effect.disconnect.timeout(d)`, which\n * first disconnects the effect's interruption signal before performing the\n * timeout, resulting in earliest possible return, before an underlying effect\n * has been successfully interrupted.\n *\n * @since 2.0.0\n * @category delays & timeouts\n */\nconst timeout = timeout$1;\n\n/**\n * The same as `timeout`, but instead of producing a `None` in the event of\n * timeout, it will produce the specified error.\n *\n * @since 2.0.0\n * @category delays & timeouts\n */\nconst timeoutFail = timeoutFail$1;\n\n/**\n * The same as `timeout`, but instead of producing a `None` in the event of\n * timeout, it will produce the specified failure.\n *\n * @since 2.0.0\n * @category delays & timeouts\n */\nconst timeoutFailCause = timeoutFailCause$1;\n\n/**\n * Returns an effect that will timeout this effect, returning either the\n * default value if the timeout elapses before the effect has produced a\n * value or returning the result of applying the function `onSuccess` to the\n * success value of the effect.\n *\n * If the timeout elapses without producing a value, the running effect will\n * be safely interrupted.\n *\n * @since 2.0.0\n * @category delays & timeouts\n */\nconst timeoutTo = timeoutTo$1;\n\n// -------------------------------------------------------------------------------------\n// config\n// -------------------------------------------------------------------------------------\n\n/**\n * Uses the default config provider to load the specified config, or fail with\n * an error of type Config.Error.\n *\n * @since 2.0.0\n * @category config\n */\nconst config = config$1;\n\n/**\n * Retrieves the default config provider, and passes it to the specified\n * function, which may return an effect that uses the provider to perform some\n * work or compute some value.\n *\n * @since 2.0.0\n * @category config\n */\nconst configProviderWith = configProviderWith$1;\n\n/**\n * Executes the specified workflow with the specified configuration provider.\n *\n * @since 2.0.0\n * @category config\n */\nconst withConfigProvider = withConfigProvider$1;\n\n/**\n * Sets the configuration provider to the specified value and restores it to its original value\n * when the scope is closed.\n *\n * @since 2.0.0\n * @category config\n */\nconst withConfigProviderScoped = withConfigProviderScoped$1;\n\n// -------------------------------------------------------------------------------------\n// context\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst context = context$1;\n\n/**\n * Accesses the context of the effect.\n *\n * @since 2.0.0\n * @category context\n */\nconst contextWith = contextWith$1;\n\n/**\n * Effectually accesses the context of the effect.\n *\n * @since 2.0.0\n * @category context\n */\nconst contextWithEffect = contextWithEffect$1;\n\n/**\n * Provides some of the context required to run this effect,\n * leaving the remainder `R0`.\n *\n * @since 2.0.0\n * @category context\n */\nconst mapInputContext = mapInputContext$1;\n\n/**\n * Splits the context into two parts, providing one part using the\n * specified layer/context/runtime and leaving the remainder `R0`\n *\n * @since 2.0.0\n * @category context\n */\nconst provide = effect_provide;\n\n/**\n * Provides the effect with the single service it requires. If the effect\n * requires more than one service use `provideContext` instead.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideService = provideService$1;\n\n/**\n * Provides the effect with the single service it requires. If the effect\n * requires more than one service use `provideContext` instead.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideServiceEffect = provideServiceEffect$1;\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst serviceFunction = serviceFunction$1;\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst serviceFunctionEffect = serviceFunctionEffect$1;\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst serviceFunctions = serviceFunctions$1;\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst serviceConstants = serviceConstants$1;\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst serviceMembers = serviceMembers$1;\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst serviceOption = serviceOption$1;\n\n/**\n * Updates the service with the required service entry.\n *\n * @since 2.0.0\n * @category context\n */\nconst updateService = updateService$1;\n\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.0.0\n * @category do notation\n */\nconst Do = Do$1;\n\n/**\n * Binds an effectful value in a `do` scope\n *\n * @since 2.0.0\n * @category do notation\n */\nconst bind = bind$1;\n\n/**\n * @category do notation\n * @since 2.0.0\n */\nconst bindTo = bindTo$1;\nconst let_ = bindValue;\n\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns an effect whose failure and success have been lifted into an\n * `Either`. The resulting effect cannot fail, because the failure case has\n * been exposed as part of the `Either` success case.\n *\n * This method is useful for recovering from effects that may fail.\n *\n * The error parameter of the returned `Effect` is `never`, since it is\n * guaranteed the effect does not model failure.\n *\n * @since 2.0.0\n * @category conversions\n */\nconst either = either$1;\n\n/**\n * @since 2.0.0\n * @category conversions\n */\nconst exit = exit$1;\n\n/**\n * @since 2.0.0\n * @category conversions\n */\nconst intoDeferred = intoDeferred$1;\n\n/**\n * Executes this effect, skipping the error but returning optionally the\n * success.\n *\n * @since 2.0.0\n * @category conversions\n */\nconst option = option$1;\n\n// -------------------------------------------------------------------------------------\n// filtering & conditionals\n// -------------------------------------------------------------------------------------\n\nconst if_ = if_$1;\n\n/**\n * Filter the specified effect with the provided function, dying with specified\n * defect if the predicate fails.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst filterOrDie = filterOrDie$1;\n\n/**\n * Filter the specified effect with the provided function, dying with specified\n * message if the predicate fails.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst filterOrDieMessage = filterOrDieMessage$1;\n\n/**\n * Filters the specified effect with the provided function returning the value\n * of the effect if it is successful, otherwise returns the value of `orElse`.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst filterOrElse = filterOrElse$1;\n\n/**\n * Filter the specified effect with the provided function, failing with specified\n * error if the predicate fails.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst filterOrFail = filterOrFail$1;\n\n/**\n * The moral equivalent of `if (!p) exp`.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst unless = unless$1;\n\n/**\n * The moral equivalent of `if (!p) exp` when `p` has side-effects.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst unlessEffect = unlessEffect$1;\n\n/**\n * The moral equivalent of `if (p) exp`.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst when = when$1;\n\n/**\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst whenEffect = whenEffect$1;\n\n/**\n * Executes this workflow when value of the specified `FiberRef` satisfies the\n * predicate.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst whenFiberRef = whenFiberRef$1;\n\n/**\n * Executes this workflow when the value of the `Ref` satisfies the predicate.\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nconst whenRef = whenRef$1;\n\n// -------------------------------------------------------------------------------------\n// sequencing\n// -------------------------------------------------------------------------------------\n\n/**\n * This function is a pipeable operator that maps over an `Effect` value,\n * flattening the result of the mapping function into a new `Effect` value.\n *\n * @param f - The mapping function to apply to the `Effect` value.\n * This function must return another `Effect` value.\n *\n * @returns A new `Effect` value that is the result of flattening the\n * mapped `Effect` value.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = flatMap$1;\n\n/**\n * @since 2.0.0\n * @category sequencing\n */\nconst flatten = flatten$1;\n\n/**\n * Returns an effect that races this effect with all the specified effects,\n * yielding the value of the first effect to succeed with a value. Losers of\n * the race will be interrupted immediately\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst raceAll = raceAll$1;\n\n/**\n * Returns an effect that races this effect with the specified effect,\n * returning the first successful `A` from the faster side. If one effect\n * succeeds, the other will be interrupted. If neither succeeds, then the\n * effect will fail with some error.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst race = race$1;\n\n/**\n * Returns an effect that races this effect with the specified effect,\n * yielding the first result to complete, whether by success or failure. If\n * neither effect completes, then the composed effect will not complete.\n *\n * WARNING: The raced effect will safely interrupt the \"loser\", but will not\n * resume until the loser has been cleanly terminated. If early return is\n * desired, then instead of performing `l raceFirst r`, perform\n * `l.disconnect raceFirst r.disconnect`, which disconnects left and right\n * interrupt signal, allowing a fast return, with interruption performed\n * in the background.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst raceFirst = raceFirst$1;\n\n/**\n * Returns an effect that races this effect with the specified effect, calling\n * the specified finisher as soon as one result or the other has been computed.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst raceWith = raceWith$1;\n\n/**\n * Summarizes a effect by computing some value before and after execution, and\n * then combining the values to produce a summary, together with the result of\n * execution.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst summarized = summarized$1;\n\n/**\n * @since 2.0.0\n * @category sequencing\n */\nconst tap = tap$1;\n\n/**\n * Returns an effect that effectfully \"peeks\" at the failure or success of\n * this effect.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapBoth = tapBoth$1;\n\n/**\n * Returns an effect that effectually \"peeks\" at the defect of this effect.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapDefect = tapDefect$1;\n\n/**\n * Returns an effect that effectfully \"peeks\" at the failure of this effect.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapError = tapError$1;\n\n/**\n * Returns an effect that effectfully \"peeks\" at the specific tagged failure of this effect.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapErrorTag = tapErrorTag$1;\n\n/**\n * Returns an effect that effectually \"peeks\" at the cause of the failure of\n * this effect.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapErrorCause = tapErrorCause$1;\n\n// -------------------------------------------------------------------------------------\n// repetition / recursion\n// -------------------------------------------------------------------------------------\n\n/**\n * Repeats this effect forever (until the first error).\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst forever = forever$1;\n\n/**\n * Iterates with the specified effectual function. The moral equivalent of:\n *\n * ```ts\n * let s = initial\n *\n * while (cont(s)) {\n *   s = body(s)\n * }\n *\n * return s\n * ```\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst iterate = iterate$1;\n\n/**\n * Loops with the specified effectual function, collecting the results into a\n * list. The moral equivalent of:\n *\n * ```ts\n * let s  = initial\n * let as = [] as readonly A[]\n *\n * while (cont(s)) {\n *   as = [body(s), ...as]\n *   s  = inc(s)\n * }\n *\n * A.reverse(as)\n * ```\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst loop = loop$1;\n\n/**\n * Returns a new effect that repeats this effect according to the specified\n * schedule or until the first failure. Scheduled recurrences are in addition\n * to the first execution, so that `io.repeat(Schedule.once)` yields an effect\n * that executes `io`, and then if that succeeds, executes `io` an additional\n * time.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst repeat = repeat_Effect;\n\n/**\n * Returns a new effect that repeats this effect the specified number of times\n * or until the first failure. Repeats are in addition to the first execution,\n * so that `io.repeatN(1)` yields an effect that executes `io`, and then if\n * that succeeds, executes `io` an additional time.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst repeatN = repeatN$1;\n\n/**\n * Returns a new effect that repeats this effect according to the specified\n * schedule or until the first failure, at which point, the failure value and\n * schedule output are passed to the specified handler.\n *\n * Scheduled recurrences are in addition to the first execution, so that\n * `pipe(effect, Effect.repeat(Schedule.once()))` yields an effect that executes\n * `effect`, and then if that succeeds, executes `effect` an additional time.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst repeatOrElse = repeatOrElse_Effect;\n\n/**\n * Repeats this effect until its value satisfies the specified predicate or\n * until the first failure.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst repeatUntil = repeatUntil_Effect;\n\n/**\n * Repeats this effect until its value satisfies the specified effectful\n * predicate or until the first failure.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst repeatUntilEffect = repeatUntilEffect_Effect;\n\n/**\n * Repeats this effect while its value satisfies the specified effectful\n * predicate or until the first failure.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst repeatWhile = repeatWhile_Effect;\n\n/**\n * Repeats this effect while its value satisfies the specified effectful\n * predicate or until the first failure.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst repeatWhileEffect = repeatWhileEffect_Effect;\n\n/**\n * Runs this effect according to the specified schedule.\n *\n * See `scheduleFrom` for a variant that allows the schedule's decision to\n * depend on the result of this effect.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst schedule = schedule_Effect;\n\n/**\n * Runs this effect according to the specified schedule in a new fiber\n * attached to the current scope.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst scheduleForked = scheduleForked$1;\n\n/**\n * Runs this effect according to the specified schedule starting from the\n * specified input value.\n *\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst scheduleFrom = scheduleFrom_Effect;\n\n/**\n * @since 2.0.0\n * @category repetition / recursion\n */\nconst whileLoop = whileLoop$1;\n\n// -------------------------------------------------------------------------------------\n// fiber refs\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns a collection of all `FiberRef` values for the fiber running this\n * effect.\n *\n * @since 2.0.0\n * @category fiber refs\n */\nconst getFiberRefs = fiberRefs;\n\n/**\n * Inherits values from all `FiberRef` instances into current fiber.\n *\n * @since 2.0.0\n * @category fiber refs\n */\nconst inheritFiberRefs = inheritFiberRefs$1;\n\n/**\n * @since 2.0.0\n * @category fiber refs\n */\nconst locally = fiberRefLocally;\n\n/**\n * @since 2.0.0\n * @category fiber refs\n */\nconst locallyWith = fiberRefLocallyWith;\n\n/**\n * @since 2.0.0\n * @category fiber refs\n */\nconst locallyScoped = fiberRefLocallyScoped;\n\n/**\n * @since 2.0.0\n * @category fiber refs\n */\nconst locallyScopedWith = fiberRefLocallyScopedWith;\n\n/**\n * Applies the specified changes to the `FiberRef` values for the fiber\n * running this workflow.\n *\n * @since 2.0.0\n * @category fiber refs\n */\nconst patchFiberRefs = patchFiberRefs$1;\n\n/**\n * Sets the `FiberRef` values for the fiber running this effect to the values\n * in the specified collection of `FiberRef` values.\n *\n * @since 2.0.0\n * @category fiber refs\n */\nconst setFiberRefs = setFiberRefs$1;\n\n/**\n * Updates the `FiberRef` values for the fiber running this effect using the\n * specified function.\n *\n * @since 2.0.0\n * @category fiber refs\n */\nconst updateFiberRefs = updateFiberRefs$1;\n\n// -------------------------------------------------------------------------------------\n// getters & folding\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns `true` if this effect is a failure, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters & folding\n */\nconst isFailure = isFailure$1;\n\n/**\n * Returns `true` if this effect is a success, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters & folding\n */\nconst isSuccess = isSuccess$1;\n\n/**\n * Folds over the failure value or the success value to yield an effect that\n * does not fail, but succeeds with the value returned by the left or right\n * function passed to `match`.\n *\n * @since 2.0.0\n * @category getters & folding\n */\nconst match = match$1;\n\n/**\n * @since 2.0.0\n * @category getters & folding\n */\nconst matchCause = matchCause$1;\n\n/**\n * @since 2.0.0\n * @category getters & folding\n */\nconst matchCauseEffect = matchCauseEffect$1;\n\n/**\n * @since 2.0.0\n * @category getters & folding\n */\nconst matchEffect = matchEffect$1;\n\n// -------------------------------------------------------------------------------------\n// logging\n// -------------------------------------------------------------------------------------\n\n/**\n * Logs the specified message or cause at the current log level.\n *\n * You can set the current log level using `FiberRef.currentLogLevel`.\n *\n * @since 2.0.0\n * @category logging\n */\nconst log = log$1;\n\n/**\n * Logs the specified message or cause at the Trace log level.\n *\n * @since 2.0.0\n * @category logging\n */\nconst logTrace = logTrace$1;\n\n/**\n * Logs the specified message or cause at the Debug log level.\n *\n * @since 2.0.0\n * @category logging\n */\nconst logDebug = logDebug$1;\n\n/**\n * Logs the specified message or cause at the Info log level.\n *\n * @since 2.0.0\n * @category logging\n */\nconst logInfo = logInfo$1;\n\n/**\n * Logs the specified message or cause at the Warning log level.\n *\n * @since 2.0.0\n * @category logging\n */\nconst logWarning = logWarning$1;\n\n/**\n * Logs the specified message or cause at the Error log level.\n *\n * @since 2.0.0\n * @category logging\n */\nconst logError = logError$1;\n\n/**\n * Logs the specified message or cause at the Fatal log level.\n *\n * @since 2.0.0\n * @category logging\n */\nconst logFatal = logFatal$1;\n\n/**\n * Adjusts the label for the current logging span.\n *\n * @since 2.0.0\n * @category logging\n */\nconst withLogSpan = withLogSpan$1;\n\n/**\n * Annotates each log in this effect with the specified log annotation.\n *\n * @since 2.0.0\n * @category logging\n */\nconst annotateLogs = annotateLogs$1;\n\n/**\n * Retrieves the log annotations associated with the current scope.\n *\n * @since 2.0.0\n * @category logging\n */\nconst logAnnotations = logAnnotations$1;\n\n/**\n * Decides wether child fibers will report or not unhandled errors via the logger\n *\n * @since 2.0.0\n * @category logging\n */\nconst withUnhandledErrorLogLevel = withUnhandledErrorLogLevel$1;\n\n// -------------------------------------------------------------------------------------\n// alternatives\n// -------------------------------------------------------------------------------------\n\n/**\n * Translates effect failure into death of the fiber, making all failures\n * unchecked and not a part of the type of the effect.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst orDie = orDie$1;\n\n/**\n * Keeps none of the errors, and terminates the fiber with them, using the\n * specified function to convert the `E` into a `Throwable`.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst orDieWith = orDieWith$1;\n\n/**\n * Executes this effect and returns its value, if it succeeds, but otherwise\n * executes the specified effect.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst orElse = orElse$1;\n\n/**\n * Executes this effect and returns its value, if it succeeds, but otherwise\n * fails with the specified error.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst orElseFail = orElseFail$1;\n\n/**\n * Executes this effect and returns its value, if it succeeds, but\n * otherwise succeeds with the specified value.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst orElseSucceed = orElseSucceed$1;\n\n// -------------------------------------------------------------------------------------\n// random\n// -------------------------------------------------------------------------------------\n\n/**\n * Retreives the `Random` service from the context.\n *\n * @since 2.0.0\n * @category random\n */\nconst random = random$1;\n\n/**\n * Retreives the `Random` service from the context and uses it to run the\n * specified workflow.\n *\n * @since 2.0.0\n * @category random\n */\nconst randomWith = randomWith$1;\n\n// -------------------------------------------------------------------------------------\n// runtime\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns an effect that accesses the runtime, which can be used to\n * (unsafely) execute tasks. This is useful for integration with legacy code\n * that must call back into Effect code.\n *\n * @since 2.0.0\n * @category runtime\n */\nconst runtime = runtime$1;\n\n/**\n * Retrieves an effect that succeeds with the current runtime flags, which\n * govern behavior and features of the runtime system.\n *\n * @since 2.0.0\n * @category runtime\n */\nconst getRuntimeFlags = runtimeFlags;\n\n/**\n * @since 2.0.0\n * @category runtime\n */\nconst patchRuntimeFlags = updateRuntimeFlags;\n\n/**\n * @since 2.0.0\n * @category runtime\n */\nconst withRuntimeFlagsPatch = withRuntimeFlags;\n\n/**\n * @since 2.0.0\n * @category runtime\n */\nconst withRuntimeFlagsPatchScoped = withRuntimeFlagsScoped;\n\n// -------------------------------------------------------------------------------------\n// metrics\n// -------------------------------------------------------------------------------------\n\n/**\n * Tags each metric in this effect with the specific tag.\n *\n * @since 2.0.0\n * @category metrics\n */\nconst tagMetrics = tagMetrics$1;\n\n/**\n * Tags each metric in this effect with the specific tag.\n *\n * @since 2.0.0\n * @category metrics\n */\nconst labelMetrics = labelMetrics$1;\n\n/**\n * Tags each metric in this effect with the specific tag.\n *\n * @since 2.0.0\n * @category metrics\n */\nconst labelMetricsSet = labelMetricsSet$1;\n\n/**\n * Tags each metric in a scope with a the specific tag.\n *\n * @since 2.0.0\n * @category metrics\n */\nconst tagMetricsScoped = tagMetricsScoped$1;\n\n/**\n * Tags each metric in a scope with a the specific tag.\n *\n * @since 2.0.0\n * @category metrics\n */\nconst labelMetricsScoped = labelMetricsScoped$1;\n\n/**\n * Tags each metric in a scope with a the specific tag.\n *\n * @since 2.0.0\n * @category metrics\n */\nconst labelMetricsScopedSet = labelMetricsScopedSet$1;\n\n/**\n * Retrieves the metric labels associated with the current scope.\n *\n * @since 2.0.0\n * @category metrics\n */\nconst metricLabels = metricLabels$1;\n\n/**\n * @since 2.0.0\n * @category metrics\n */\nconst withMetric = withMetric$1;\n\n// -------------------------------------------------------------------------------------\n// unify\n// -------------------------------------------------------------------------------------\n\n/**\n * Used to unify functions that would otherwise return `Effect<A, B, C> | Effect<D, E, F>`\n *\n * @category unify\n * @since 2.0.0\n */\nconst unifiedFn = unified$1;\n\n/**\n * Used to unify effects that would otherwise be `Effect<A, B, C> | Effect<D, E, F>`\n *\n * @category unify\n * @since 2.0.0\n */\nconst unified = identity;\n\n// -------------------------------------------------------------------------------------\n// semaphore\n// -------------------------------------------------------------------------------------\n\n/**\n * @category semaphore\n * @since 2.0.0\n */\n/**\n * @category semaphore\n * @since 2.0.0\n */\n/**\n * Unsafely creates a new Semaphore\n *\n * @since 2.0.0\n * @category semaphore\n */\nconst unsafeMakeSemaphore = unsafeMakeSemaphore$1;\n\n/**\n * Creates a new Semaphore\n *\n * @since 2.0.0\n * @category semaphore\n */\nconst makeSemaphore = makeSemaphore$1;\n\n// -------------------------------------------------------------------------------------\n// execution\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.0.0\n * @category execution\n */\nconst runFork = unsafeForkEffect;\n\n/**\n * @since 2.0.0\n * @category execution\n */\nconst runCallback = unsafeRunEffect;\n\n/**\n * Runs an `Effect` workflow, returning a `Promise` which resolves with the\n * result of the workflow or rejects with an error.\n *\n * @since 2.0.0\n * @category execution\n */\nconst runPromise = unsafeRunPromiseEffect;\n\n/**\n * Runs an `Effect` workflow, returning a `Promise` which resolves with the\n * `Exit` value of the workflow.\n *\n * @since 2.0.0\n * @category execution\n */\nconst runPromiseExit = unsafeRunPromiseExitEffect;\n\n/**\n * @since 2.0.0\n * @category execution\n */\nconst runSync = unsafeRunSyncEffect;\n\n/**\n * @since 2.0.0\n * @category execution\n */\nconst runSyncExit = unsafeRunSyncExitEffect;\n\n// -------------------------------------------------------------------------------------\n// zipping\n// -------------------------------------------------------------------------------------\n\n/**\n * Sequentially zips the this result with the specified result. Combines both\n * `Cause`s when both effects fail.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst validate = validate$1;\n\n/**\n * Sequentially zips this effect with the specified effect using the specified\n * combiner function. Combines the causes in case both effect fail.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst validateWith = validateWith$1;\n\n/**\n * @since 2.0.0\n * @category zipping\n */\nconst zip = zipOptions;\n\n/**\n * @since 2.0.0\n * @category zipping\n */\nconst zipLeft = zipLeftOptions;\n\n/**\n * @since 2.0.0\n * @category zipping\n */\nconst zipRight = zipRightOptions;\n\n/**\n * @since 2.0.0\n * @category zipping\n */\nconst zipWith = zipWithOptions;\n\n// -------------------------------------------------------------------------------------\n// applicatives\n// -------------------------------------------------------------------------------------\n/**\n * @category combining\n * @since 2.0.0\n */\nconst ap = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (f, a) => f(a)));\n// -------------------------------------------------------------------------------------\n// requests & batching\n// -------------------------------------------------------------------------------------\n\n/**\n * @category requests & batching\n * @since 2.0.0\n */\nconst blocked = blocked$1;\n\n/**\n * @category requests & batching\n * @since 2.0.0\n */\nconst runRequestBlock = runRequestBlock$1;\n\n/**\n * @category requests & batching\n * @since 2.0.0\n */\nconst step = step$1;\n\n/**\n * @category requests & batching\n * @since 2.0.0\n */\nconst flatMapStep = flatMapStep$1;\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nconst request = fromRequest;\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nconst cacheRequestResult = cacheRequest;\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nconst withRequestBatching = withRequestBatching$1;\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nconst withRequestCaching = withRequestCaching$1;\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nconst withRequestCache = withRequestCache$1;\n\n// -------------------------------------------------------------------------------------\n// tracing\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst tracer = tracer$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst tracerWith = tracerWith$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst withTracer = withTracer$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst withTracerScoped = withTracerScoped$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst withTracerTiming = withTracerTiming$1;\n\n/**\n * Adds an annotation to each span in this effect.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst annotateSpans = annotateSpans$1;\n\n/**\n * Adds an annotation to the current span if available\n *\n * @since 2.0.0\n * @category tracing\n */\nconst annotateCurrentSpan = annotateCurrentSpan$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst currentSpan = currentSpan$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst currentParentSpan = currentParentSpan$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst spanAnnotations = spanAnnotations$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst spanLinks = spanLinks$1;\n\n/**\n * For all spans in this effect, add a link with the provided span.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst linkSpans = linkSpans$1;\n\n/**\n * Create a new span for tracing.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst makeSpan = makeSpan$1;\n\n/**\n * Create a new span for tracing, and automatically close it when the Scope\n * finalizes.\n *\n * The span is not added to the current span stack, so no child spans will be\n * created for it.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst makeSpanScoped = makeSpanScoped$1;\n\n/**\n * Create a new span for tracing, and automatically close it when the effect\n * completes.\n *\n * The span is not added to the current span stack, so no child spans will be\n * created for it.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst useSpan = useSpan$1;\n\n/**\n * Wraps the effect with a new span for tracing.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst withSpan = withSpan$1;\n\n/**\n * Wraps the effect with a new span for tracing.\n *\n * The span is ended when the Scope is finalized.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst withSpanScoped = withSpanScoped$1;\n\n/**\n * Adds the provided span to the current span stack.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst withParentSpan = withParentSpan$1;\n\n// -------------------------------------------------------------------------------------\n// optionality\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns an effect that errors with `NoSuchElementException` if the value is\n * null or undefined, otherwise succeeds with the value.\n *\n * @since 2.0.0\n * @category optionality\n */\nconst fromNullable = fromNullable$1;\n\n/**\n * Wraps the success value of this effect with `Option.some`, and maps\n * `Cause.NoSuchElementException` to `Option.none`.\n *\n * @since 2.0.0\n * @category optionality\n */\nconst optionFromOptional = optionFromOptional$1;\n\nexport { Do, EffectTypeId, acquireRelease, acquireReleaseInterruptible, acquireUseRelease, addFinalizer, all, allSuccesses, allWith, allowInterrupt, annotateCurrentSpan, annotateLogs, annotateSpans, ap, as, asSome, asSomeError, asUnit, async, asyncEffect, asyncEither, asyncOption, awaitAllChildren, bind, bindTo, blocked, cacheRequestResult, cached, cachedFunction, cachedInvalidateWithTTL, cachedWithTTL, _catch as catch, catchAll, catchAllCause, catchAllDefect, catchIf, catchSome, catchSomeCause, catchSomeDefect, catchTag, catchTags, cause, checkInterruptible, clock, clockWith, config, configProviderWith, context, contextWith, contextWithEffect, currentParentSpan, currentSpan, daemonChildren, delay, descriptor, descriptorWith, die, dieMessage, dieSync, diffFiberRefs, disconnect, dropUntil, dropWhile, either, ensuring, ensuringChild, ensuringChildren, eventually, every, exists, exit, fail, failCause, failCauseSync, failSync, fiberId, fiberIdWith, filter, filterOrDie, filterOrDieMessage, filterOrElse, filterOrFail, finalizersMask, findFirst, firstSuccessOf, flatMap, flatMapStep, flatten, flip, flipWith, forEach, forever, fork, forkAll, forkDaemon, forkIn, forkScoped, forkWithErrorHandler, fromFiber, fromFiberEffect, fromNullable, gen, getFiberRefs, getRuntimeFlags, head, if_ as if, ignore, ignoreLogged, inheritFiberRefs, interrupt, interruptWith, interruptible, interruptibleMask, intoDeferred, isEffect, isFailure, isSuccess, iterate, labelMetrics, labelMetricsScoped, labelMetricsScopedSet, labelMetricsSet, let_ as let, linkSpans, locally, locallyScoped, locallyScopedWith, locallyWith, log, logAnnotations, logDebug, logError, logFatal, logInfo, logTrace, logWarning, loop, makeSemaphore, makeSpan, makeSpanScoped, map, mapAccum, mapBoth, mapError, mapErrorCause, mapInputContext, match, matchCause, matchCauseEffect, matchEffect, merge, mergeAll, metricLabels, negate, never, none, onError, onExit, onInterrupt, once, option, optionFromOptional, orDie, orDieWith, orElse, orElseFail, orElseSucceed, parallelErrors, parallelFinalizers, partition, patchFiberRefs, patchRuntimeFlags, promise, provide, provideService, provideServiceEffect, race, raceAll, raceFirst, raceWith, random, randomWith, reduce, reduceEffect, reduceRight, reduceWhile, repeat, repeatN, repeatOrElse, repeatUntil, repeatUntilEffect, repeatWhile, repeatWhileEffect, replicate, replicateEffect, request, retry, retryN, retryOrElse, retryUntil, retryUntilEffect, retryWhile, retryWhileEffect, runCallback, runFork, runPromise, runPromiseExit, runRequestBlock, runSync, runSyncExit, runtime, sandbox, schedule, scheduleForked, scheduleFrom, scope, scopeWith, scoped, sequentialFinalizers, serviceConstants, serviceFunction, serviceFunctionEffect, serviceFunctions, serviceMembers, serviceOption, setFiberRefs, sleep, spanAnnotations, spanLinks, step, succeed, succeedNone, succeedSome, summarized, supervised, suspend, sync, tagMetrics, tagMetricsScoped, takeUntil, takeWhile, tap, tapBoth, tapDefect, tapError, tapErrorCause, tapErrorTag, timed, timedWith, timeout, timeoutFail, timeoutFailCause, timeoutTo, tracer, tracerWith, transplant, try_ as try, tryMap, tryMapPromise, tryPromise, unified, unifiedFn, uninterruptible, uninterruptibleMask, unit, unless, unlessEffect, unsafeMakeSemaphore, unsandbox, updateFiberRefs, updateService, useSpan, using, validate, validateAll, validateFirst, validateWith, when, whenEffect, whenFiberRef, whenRef, whileLoop, withClock, withClockScoped, withConcurrency, withConfigProvider, withConfigProviderScoped, withEarlyRelease, withLogSpan, withMaxOpsBeforeYield, withMetric, withParentSpan, withRequestBatching, withRequestCache, withRequestCaching, withRuntimeFlagsPatch, withRuntimeFlagsPatchScoped, withScheduler, withSchedulingPriority, withSpan, withSpanScoped, withTracer, withTracerScoped, withTracerTiming, withUnhandledErrorLogLevel, yieldNow, zip, zipLeft, zipRight, zipWith };\n","import { symbol as symbol$1 } from '../../Equal/dist/effect-Equal.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, structure } from '../../Hash/dist/effect-Hash.esm.js';\nimport { toString, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { some, none } from '../../Option/dist/effect-Option.esm.js';\nimport { make as make$1, between as between$1, mapInput, min as min$1, max as max$1, clamp as clamp$1 } from '../../Order/dist/effect-Order.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { isNumber, isBigInt, hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Duration\");\nconst bigint1e3 = /*#__PURE__*/BigInt(1_000);\nconst bigint1e9 = /*#__PURE__*/BigInt(1_000_000_000);\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst DURATION_REGEX = /^(-?\\d+(?:\\.\\d+)?)\\s+(nanos|micros|millis|seconds|minutes|hours|days|weeks)$/;\n\n/**\n * @since 2.0.0\n */\nconst decode = input => {\n  if (isDuration(input)) {\n    return input;\n  } else if (isNumber(input)) {\n    return millis(input);\n  } else if (isBigInt(input)) {\n    return nanos(input);\n  } else {\n    DURATION_REGEX.lastIndex = 0; // Reset the lastIndex before each use\n    const match = DURATION_REGEX.exec(input);\n    if (match) {\n      const [_, valueStr, unit] = match;\n      const value = Number(valueStr);\n      switch (unit) {\n        case \"nanos\":\n          return nanos(BigInt(valueStr));\n        case \"micros\":\n          return micros(BigInt(valueStr));\n        case \"millis\":\n          return millis(value);\n        case \"seconds\":\n          return seconds(value);\n        case \"minutes\":\n          return minutes(value);\n        case \"hours\":\n          return hours(value);\n        case \"days\":\n          return days(value);\n        case \"weeks\":\n          return weeks(value);\n      }\n    }\n  }\n  throw new Error(\"Invalid duration input\");\n};\nconst zeroValue = {\n  _tag: \"Millis\",\n  millis: 0\n};\nconst infinityValue = {\n  _tag: \"Infinity\"\n};\nconst DurationProto = {\n  [TypeId]: TypeId,\n  [symbol]() {\n    return structure(this.value);\n  },\n  [symbol$1](that) {\n    return isDuration(that) && equals(this, that);\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    switch (this.value._tag) {\n      case \"Millis\":\n        return {\n          _id: \"Duration\",\n          _tag: \"Millis\",\n          millis: this.value.millis\n        };\n      case \"Nanos\":\n        return {\n          _id: \"Duration\",\n          _tag: \"Nanos\",\n          hrtime: toHrTime(this)\n        };\n      case \"Infinity\":\n        return {\n          _id: \"Duration\",\n          _tag: \"Infinity\"\n        };\n    }\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst make = input => {\n  const duration = Object.create(DurationProto);\n  if (isNumber(input)) {\n    if (isNaN(input) || input < 0) {\n      duration.value = zeroValue;\n    } else if (!Number.isFinite(input)) {\n      duration.value = infinityValue;\n    } else if (!Number.isInteger(input)) {\n      duration.value = {\n        _tag: \"Nanos\",\n        nanos: BigInt(Math.round(input * 1_000_000))\n      };\n    } else {\n      duration.value = {\n        _tag: \"Millis\",\n        millis: input\n      };\n    }\n  } else if (input < BigInt(0)) {\n    duration.value = zeroValue;\n  } else {\n    duration.value = {\n      _tag: \"Nanos\",\n      nanos: input\n    };\n  }\n  return duration;\n};\n\n/**\n * @since 2.0.0\n * @category guards\n */\nconst isDuration = u => hasProperty(u, TypeId);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst zero = /*#__PURE__*/make(0);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst infinity = /*#__PURE__*/make(Infinity);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst nanos = nanos => make(nanos);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst micros = micros => make(micros * bigint1e3);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst millis = millis => make(millis);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst seconds = seconds => make(seconds * 1000);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst minutes = minutes => make(minutes * 60_000);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst hours = hours => make(hours * 3_600_000);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst days = days => make(days * 86_400_000);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst weeks = weeks => make(weeks * 604_800_000);\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst toMillis = self => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Infinity\":\n      return Infinity;\n    case \"Nanos\":\n      return Number(_self.value.nanos) / 1_000_000;\n    case \"Millis\":\n      return _self.value.millis;\n  }\n};\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst toSeconds = self => toMillis(self) / 1_000;\n\n/**\n * Get the duration in nanoseconds as a bigint.\n *\n * If the duration is infinite, returns `Option.none()`\n *\n * @since 2.0.0\n * @category getters\n */\nconst toNanos = self => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Infinity\":\n      return none();\n    case \"Nanos\":\n      return some(_self.value.nanos);\n    case \"Millis\":\n      return some(BigInt(Math.round(_self.value.millis * 1_000_000)));\n  }\n};\n\n/**\n * Get the duration in nanoseconds as a bigint.\n *\n * If the duration is infinite, it throws an error.\n *\n * @since 2.0.0\n * @category getters\n */\nconst unsafeToNanos = self => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Infinity\":\n      throw new Error(\"Cannot convert infinite duration to nanos\");\n    case \"Nanos\":\n      return _self.value.nanos;\n    case \"Millis\":\n      return BigInt(Math.round(_self.value.millis * 1_000_000));\n  }\n};\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst toHrTime = self => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Infinity\":\n      return [Infinity, 0];\n    case \"Nanos\":\n      return [Number(_self.value.nanos / bigint1e9), Number(_self.value.nanos % bigint1e9)];\n    case \"Millis\":\n      return [Math.floor(_self.value.millis / 1000), Math.round(_self.value.millis % 1000 * 1_000_000)];\n  }\n};\n\n/**\n * @since 2.0.0\n * @category pattern matching\n */\nconst match = /*#__PURE__*/dual(2, (self, options) => {\n  const _self = decode(self);\n  switch (_self.value._tag) {\n    case \"Nanos\":\n      return options.onNanos(_self.value.nanos);\n    case \"Infinity\":\n      return options.onMillis(Infinity);\n    case \"Millis\":\n      return options.onMillis(_self.value.millis);\n  }\n});\n\n/**\n * @since 2.0.0\n * @category pattern matching\n */\nconst matchWith = /*#__PURE__*/dual(3, (self, that, options) => {\n  const _self = decode(self);\n  const _that = decode(that);\n  if (_self.value._tag === \"Infinity\" || _that.value._tag === \"Infinity\") {\n    return options.onMillis(toMillis(_self), toMillis(_that));\n  } else if (_self.value._tag === \"Nanos\" || _that.value._tag === \"Nanos\") {\n    const selfNanos = _self.value._tag === \"Nanos\" ? _self.value.nanos : BigInt(Math.round(_self.value.millis * 1_000_000));\n    const thatNanos = _that.value._tag === \"Nanos\" ? _that.value.nanos : BigInt(Math.round(_that.value.millis * 1_000_000));\n    return options.onNanos(selfNanos, thatNanos);\n  }\n  return options.onMillis(_self.value.millis, _that.value.millis);\n});\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Order = /*#__PURE__*/make$1((self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self < that ? -1 : self > that ? 1 : 0,\n  onNanos: (self, that) => self < that ? -1 : self > that ? 1 : 0\n}));\n\n/**\n * Checks if a `Duration` is between a `minimum` and `maximum` value.\n *\n * @category predicates\n * @since 2.0.0\n */\nconst between = /*#__PURE__*/between$1( /*#__PURE__*/mapInput(Order, decode));\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Equivalence = (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self === that,\n  onNanos: (self, that) => self === that\n});\nconst _min = /*#__PURE__*/min$1(Order);\n\n/**\n * @since 2.0.0\n */\nconst min = /*#__PURE__*/dual(2, (self, that) => _min(decode(self), decode(that)));\nconst _max = /*#__PURE__*/max$1(Order);\n\n/**\n * @since 2.0.0\n */\nconst max = /*#__PURE__*/dual(2, (self, that) => _max(decode(self), decode(that)));\nconst _clamp = /*#__PURE__*/clamp$1(Order);\n\n/**\n * @since 2.0.0\n */\nconst clamp = /*#__PURE__*/dual(3, (self, minimum, maximum) => _clamp(decode(self), decode(minimum), decode(maximum)));\n\n/**\n * @since 2.0.0\n * @category math\n */\nconst times = /*#__PURE__*/dual(2, (self, times) => match(self, {\n  onMillis: millis => make(millis * times),\n  onNanos: nanos => make(nanos * BigInt(times))\n}));\n\n/**\n * @since 2.0.0\n * @category math\n */\nconst sum = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => make(self + that),\n  onNanos: (self, that) => make(self + that)\n}));\n\n/**\n * @since 2.0.0\n * @category predicates\n */\nconst lessThan = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self < that,\n  onNanos: (self, that) => self < that\n}));\n\n/**\n * @since 2.0.0\n * @category predicates\n */\nconst lessThanOrEqualTo = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self <= that,\n  onNanos: (self, that) => self <= that\n}));\n\n/**\n * @since 2.0.0\n * @category predicates\n */\nconst greaterThan = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self > that,\n  onNanos: (self, that) => self > that\n}));\n\n/**\n * @since 2.0.0\n * @category predicates\n */\nconst greaterThanOrEqualTo = /*#__PURE__*/dual(2, (self, that) => matchWith(self, that, {\n  onMillis: (self, that) => self >= that,\n  onNanos: (self, that) => self >= that\n}));\n\n/**\n * @since 2.0.0\n * @category predicates\n */\nconst equals = /*#__PURE__*/dual(2, (self, that) => Equivalence(decode(self), decode(that)));\n\nexport { Equivalence, Order, between, clamp, days, decode, equals, greaterThan, greaterThanOrEqualTo, hours, infinity, isDuration, lessThan, lessThanOrEqualTo, match, matchWith, max, micros, millis, min, minutes, nanos, seconds, sum, times, toHrTime, toMillis, toNanos, toSeconds, unsafeToNanos, weeks, zero };\n","/**\n * Bun currently has a bug where `setTimeout` doesn't behave correctly with a 0ms delay.\n *\n * @see https://github.com/oven-sh/bun/issues/3333\n */\n\n/** @internal */\nconst isBun = typeof process === \"undefined\" ? false : !!process?.isBun;\n\n/** @internal */\nconst clear = isBun ? id => clearInterval(id) : id => clearTimeout(id);\n\n/** @internal */\nconst set = isBun ? (fn, ms) => {\n  const id = setInterval(() => {\n    fn();\n    clearInterval(id);\n  }, ms);\n  return id;\n} : (fn, ms) => setTimeout(fn, ms);\n\nexport { clear, set };\n","import { Tag } from '../Context/dist/effect-Context.esm.js';\nimport { toMillis } from '../Duration/dist/effect-Duration.esm.js';\nimport { left } from '../Either/dist/effect-Either.esm.js';\nimport { constFalse } from '../Function/dist/effect-Function.esm.js';\nimport { sync, succeed, asyncEither, unit, asUnit } from './core.esm.js';\nimport { set, clear } from './timeout.esm.js';\n\n/** @internal */\nconst ClockSymbolKey = \"effect/Clock\";\n\n/** @internal */\nconst ClockTypeId = /*#__PURE__*/Symbol.for(ClockSymbolKey);\n\n/** @internal */\nconst clockTag = /*#__PURE__*/Tag(ClockTypeId);\n\n/** @internal */\nconst MAX_TIMER_MILLIS = 2 ** 31 - 1;\n\n/** @internal */\nconst globalClockScheduler = {\n  unsafeSchedule(task, duration) {\n    const millis = toMillis(duration);\n    // If the duration is greater than the value allowable by the JS timer\n    // functions, treat the value as an infinite duration\n    if (millis > MAX_TIMER_MILLIS) {\n      return constFalse;\n    }\n    let completed = false;\n    const handle = set(() => {\n      completed = true;\n      task();\n    }, millis);\n    return () => {\n      clear(handle);\n      return !completed;\n    };\n  }\n};\nconst performanceNowNanos = /*#__PURE__*/function () {\n  const bigint1e6 = /*#__PURE__*/BigInt(1_000_000);\n  if (typeof performance === \"undefined\") {\n    return () => BigInt(Date.now()) * bigint1e6;\n  }\n  const origin = \"timeOrigin\" in performance && typeof performance.timeOrigin === \"number\" ? /*#__PURE__*/BigInt( /*#__PURE__*/Math.round(performance.timeOrigin * 1_000_000)) : /*#__PURE__*/BigInt( /*#__PURE__*/Date.now()) * bigint1e6 - /*#__PURE__*/BigInt( /*#__PURE__*/Math.round( /*#__PURE__*/performance.now() * 1_000_000));\n  return () => origin + BigInt(Math.round(performance.now() * 1_000_000));\n}();\nconst processOrPerformanceNow = /*#__PURE__*/function () {\n  const processHrtime = typeof process === \"object\" && \"hrtime\" in process && typeof process.hrtime.bigint === \"function\" ? process.hrtime : undefined;\n  if (!processHrtime) {\n    return performanceNowNanos;\n  }\n  const origin = /*#__PURE__*/performanceNowNanos() - /*#__PURE__*/processHrtime.bigint();\n  return () => origin + processHrtime.bigint();\n}();\n\n/** @internal */\nclass ClockImpl {\n  [ClockTypeId] = ClockTypeId;\n  unsafeCurrentTimeMillis() {\n    return Date.now();\n  }\n  unsafeCurrentTimeNanos() {\n    return processOrPerformanceNow();\n  }\n  currentTimeMillis = sync(() => this.unsafeCurrentTimeMillis());\n  currentTimeNanos = sync(() => this.unsafeCurrentTimeNanos());\n  scheduler() {\n    return succeed(globalClockScheduler);\n  }\n  sleep(duration) {\n    return asyncEither(cb => {\n      const canceler = globalClockScheduler.unsafeSchedule(() => cb(unit), duration);\n      return left(asUnit(sync(canceler)));\n    });\n  }\n}\n\n/** @internal */\nconst make = () => new ClockImpl();\n\nexport { ClockTypeId, MAX_TIMER_MILLIS, clockTag, globalClockScheduler, make };\n","import { ConfigErrorTypeId as ConfigErrorTypeId$1, And as And$1, Or as Or$1, MissingData as MissingData$1, InvalidData as InvalidData$1, SourceUnavailable as SourceUnavailable$1, Unsupported as Unsupported$1, isConfigError as isConfigError$1, isAnd as isAnd$1, isOr as isOr$1, isInvalidData as isInvalidData$1, isMissingData as isMissingData$1, isMissingDataOnly as isMissingDataOnly$1, isSourceUnavailable as isSourceUnavailable$1, isUnsupported as isUnsupported$1, prefixed as prefixed$1, reduceWithContext as reduceWithContext$1 } from '../../internal/configError.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst ConfigErrorTypeId = ConfigErrorTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * The possible ways that loading configuration data may fail.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst And = And$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Or = Or$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst MissingData = MissingData$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst InvalidData = InvalidData$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst SourceUnavailable = SourceUnavailable$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Unsupported = Unsupported$1;\n\n/**\n * Returns `true` if the specified value is a `ConfigError`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isConfigError = isConfigError$1;\n\n/**\n * Returns `true` if the specified `ConfigError` is an `And`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isAnd = isAnd$1;\n\n/**\n * Returns `true` if the specified `ConfigError` is an `Or`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isOr = isOr$1;\n\n/**\n * Returns `true` if the specified `ConfigError` is an `InvalidData`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isInvalidData = isInvalidData$1;\n\n/**\n * Returns `true` if the specified `ConfigError` is an `MissingData`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isMissingData = isMissingData$1;\n\n/**\n * Returns `true` if the specified `ConfigError` contains only `MissingData` errors, `false` otherwise.\n *\n * @since 2.0.0\n * @categer getters\n */\nconst isMissingDataOnly = isMissingDataOnly$1;\n\n/**\n * Returns `true` if the specified `ConfigError` is a `SourceUnavailable`,\n * `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isSourceUnavailable = isSourceUnavailable$1;\n\n/**\n * Returns `true` if the specified `ConfigError` is an `Unsupported`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isUnsupported = isUnsupported$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst prefixed = prefixed$1;\n\n/**\n * @since 2.0.0\n * @category folding\n */\nconst reduceWithContext = reduceWithContext$1;\n\nexport { And, ConfigErrorTypeId, InvalidData, MissingData, Or, SourceUnavailable, Unsupported, isAnd, isConfigError, isInvalidData, isMissingData, isMissingDataOnly, isOr, isSourceUnavailable, isUnsupported, prefixed, reduceWithContext };\n","/** @internal */\n\n/** @internal */\nconst OP_AND = \"And\";\n\n/** @internal */\n\n/** @internal */\nconst OP_OR = \"Or\";\n\n/** @internal */\n\n/** @internal */\nconst OP_INVALID_DATA = \"InvalidData\";\n\n/** @internal */\n\n/** @internal */\nconst OP_MISSING_DATA = \"MissingData\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SOURCE_UNAVAILABLE = \"SourceUnavailable\";\n\n/** @internal */\n\n/** @internal */\nconst OP_UNSUPPORTED = \"Unsupported\";\n\nexport { OP_AND, OP_INVALID_DATA, OP_MISSING_DATA, OP_OR, OP_SOURCE_UNAVAILABLE, OP_UNSUPPORTED };\n","import { right, left } from '../Either/dist/effect-Either.esm.js';\nimport { pipe, dual, constFalse, constTrue } from '../Function/dist/effect-Function.esm.js';\nimport { OP_AND, OP_OR, OP_INVALID_DATA, OP_MISSING_DATA, OP_SOURCE_UNAVAILABLE, OP_UNSUPPORTED } from './opCodes/configError.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { join } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/** @internal */\nconst ConfigErrorSymbolKey = \"effect/ConfigError\";\n\n/** @internal */\nconst ConfigErrorTypeId = /*#__PURE__*/Symbol.for(ConfigErrorSymbolKey);\n\n/** @internal */\nconst proto = {\n  [ConfigErrorTypeId]: ConfigErrorTypeId\n};\n\n/** @internal */\nconst And = (self, that) => {\n  const error = Object.create(proto);\n  error._tag = OP_AND;\n  error.left = self;\n  error.right = that;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      return `${this.left} and ${this.right}`;\n    }\n  });\n  return error;\n};\n\n/** @internal */\nconst Or = (self, that) => {\n  const error = Object.create(proto);\n  error._tag = OP_OR;\n  error.left = self;\n  error.right = that;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      return `${this.left} or ${this.right}`;\n    }\n  });\n  return error;\n};\n\n/** @internal */\nconst InvalidData = (path, message, options = {\n  pathDelim: \".\"\n}) => {\n  const error = Object.create(proto);\n  error._tag = OP_INVALID_DATA;\n  error.path = path;\n  error.message = message;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      const path = pipe(this.path, join(options.pathDelim));\n      return `(Invalid data at ${path}: \"${this.message}\")`;\n    }\n  });\n  return error;\n};\n\n/** @internal */\nconst MissingData = (path, message, options = {\n  pathDelim: \".\"\n}) => {\n  const error = Object.create(proto);\n  error._tag = OP_MISSING_DATA;\n  error.path = path;\n  error.message = message;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      const path = pipe(this.path, join(options.pathDelim));\n      return `(Missing data at ${path}: \"${this.message}\")`;\n    }\n  });\n  return error;\n};\n\n/** @internal */\nconst SourceUnavailable = (path, message, cause, options = {\n  pathDelim: \".\"\n}) => {\n  const error = Object.create(proto);\n  error._tag = OP_SOURCE_UNAVAILABLE;\n  error.path = path;\n  error.message = message;\n  error.cause = cause;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      const path = pipe(this.path, join(options.pathDelim));\n      return `(Source unavailable at ${path}: \"${this.message}\")`;\n    }\n  });\n  return error;\n};\n\n/** @internal */\nconst Unsupported = (path, message, options = {\n  pathDelim: \".\"\n}) => {\n  const error = Object.create(proto);\n  error._tag = OP_UNSUPPORTED;\n  error.path = path;\n  error.message = message;\n  Object.defineProperty(error, \"toString\", {\n    enumerable: false,\n    value() {\n      const path = pipe(this.path, join(options.pathDelim));\n      return `(Unsupported operation at ${path}: \"${this.message}\")`;\n    }\n  });\n  return error;\n};\n\n/** @internal */\nconst isConfigError = u => hasProperty(u, ConfigErrorTypeId);\n\n/** @internal */\nconst isAnd = self => self._tag === OP_AND;\n\n/** @internal */\nconst isOr = self => self._tag === OP_OR;\n\n/** @internal */\nconst isInvalidData = self => self._tag === OP_INVALID_DATA;\n\n/** @internal */\nconst isMissingData = self => self._tag === OP_MISSING_DATA;\n\n/** @internal */\nconst isSourceUnavailable = self => self._tag === OP_SOURCE_UNAVAILABLE;\n\n/** @internal */\nconst isUnsupported = self => self._tag === OP_UNSUPPORTED;\n\n/** @internal */\nconst prefixed = /*#__PURE__*/dual(2, (self, prefix) => {\n  switch (self._tag) {\n    case OP_AND:\n      {\n        return And(prefixed(prefix)(self.left), prefixed(prefix)(self.right));\n      }\n    case OP_OR:\n      {\n        return Or(prefixed(prefix)(self.left), prefixed(prefix)(self.right));\n      }\n    case OP_INVALID_DATA:\n      {\n        return InvalidData([...prefix, ...self.path], self.message);\n      }\n    case OP_MISSING_DATA:\n      {\n        return MissingData([...prefix, ...self.path], self.message);\n      }\n    case OP_SOURCE_UNAVAILABLE:\n      {\n        return SourceUnavailable([...prefix, ...self.path], self.message, self.cause);\n      }\n    case OP_UNSUPPORTED:\n      {\n        return Unsupported([...prefix, ...self.path], self.message);\n      }\n  }\n});\n\n/** @internal */\nconst IsMissingDataOnlyReducer = {\n  andCase: (_, left, right) => left && right,\n  orCase: (_, left, right) => left && right,\n  invalidDataCase: constFalse,\n  missingDataCase: constTrue,\n  sourceUnavailableCase: constFalse,\n  unsupportedCase: constFalse\n};\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst reduceWithContext = /*#__PURE__*/dual(3, (self, context, reducer) => {\n  const input = [self];\n  const output = [];\n  while (input.length > 0) {\n    const error = input.pop();\n    switch (error._tag) {\n      case OP_AND:\n        {\n          input.push(error.right);\n          input.push(error.left);\n          output.push(left({\n            _tag: \"AndCase\"\n          }));\n          break;\n        }\n      case OP_OR:\n        {\n          input.push(error.right);\n          input.push(error.left);\n          output.push(left({\n            _tag: \"OrCase\"\n          }));\n          break;\n        }\n      case OP_INVALID_DATA:\n        {\n          output.push(right(reducer.invalidDataCase(context, error.path, error.message)));\n          break;\n        }\n      case OP_MISSING_DATA:\n        {\n          output.push(right(reducer.missingDataCase(context, error.path, error.message)));\n          break;\n        }\n      case OP_SOURCE_UNAVAILABLE:\n        {\n          output.push(right(reducer.sourceUnavailableCase(context, error.path, error.message, error.cause)));\n          break;\n        }\n      case OP_UNSUPPORTED:\n        {\n          output.push(right(reducer.unsupportedCase(context, error.path, error.message)));\n          break;\n        }\n    }\n  }\n  const accumulator = [];\n  while (output.length > 0) {\n    const either = output.pop();\n    switch (either._tag) {\n      case \"Left\":\n        {\n          switch (either.left._tag) {\n            case \"AndCase\":\n              {\n                const left = accumulator.pop();\n                const right = accumulator.pop();\n                const value = reducer.andCase(context, left, right);\n                accumulator.push(value);\n                break;\n              }\n            case \"OrCase\":\n              {\n                const left = accumulator.pop();\n                const right = accumulator.pop();\n                const value = reducer.orCase(context, left, right);\n                accumulator.push(value);\n                break;\n              }\n          }\n          break;\n        }\n      case \"Right\":\n        {\n          accumulator.push(either.right);\n          break;\n        }\n    }\n  }\n  if (accumulator.length === 0) {\n    throw new Error(\"BUG: ConfigError.reduceWithContext - please report an issue at https://github.com/Effect-TS/io/issues\");\n  }\n  return accumulator.pop();\n});\n\n/** @internal */\nconst isMissingDataOnly = self => reduceWithContext(self, void 0, IsMissingDataOnlyReducer);\n\nexport { And, ConfigErrorTypeId, InvalidData, MissingData, Or, SourceUnavailable, Unsupported, isAnd, isConfigError, isInvalidData, isMissingData, isMissingDataOnly, isOr, isSourceUnavailable, isUnsupported, prefixed, proto, reduceWithContext };\n","import { toReadonlyArray } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { symbol as symbol$1, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, array, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst ConfigSecretSymbolKey = \"effect/ConfigSecret\";\n\n/** @internal */\nconst ConfigSecretTypeId = /*#__PURE__*/Symbol.for(ConfigSecretSymbolKey);\n\n/** @internal */\nconst proto = {\n  [ConfigSecretTypeId]: ConfigSecretTypeId,\n  [symbol]() {\n    return pipe(hash(ConfigSecretSymbolKey), combine(array(this.raw)));\n  },\n  [symbol$1](that) {\n    return isConfigSecret(that) && this.raw.length === that.raw.length && this.raw.every((v, i) => equals(v, that.raw[i]));\n  }\n};\n\n/** @internal */\nconst isConfigSecret = u => hasProperty(u, ConfigSecretTypeId);\n\n/** @internal */\nconst make = bytes => {\n  const secret = Object.create(proto);\n  Object.defineProperty(secret, \"toString\", {\n    enumerable: false,\n    value() {\n      return \"ConfigSecret(<redacted>)\";\n    }\n  });\n  Object.defineProperty(secret, \"raw\", {\n    enumerable: false,\n    value: bytes\n  });\n  return secret;\n};\n\n/** @internal */\nconst fromChunk = chunk => {\n  return make(toReadonlyArray(chunk).map(char => char.charCodeAt(0)));\n};\n\n/** @internal */\nconst fromString = text => {\n  return make(text.split(\"\").map(char => char.charCodeAt(0)));\n};\n\n/** @internal */\nconst value = self => {\n  return self.raw.map(byte => String.fromCharCode(byte)).join(\"\");\n};\n\n/** @internal */\nconst unsafeWipe = self => {\n  for (let i = 0; i < self.raw.length; i++) {\n    self.raw[i] = 0;\n  }\n};\n\nexport { ConfigSecretTypeId, fromChunk, fromString, isConfigSecret, make, proto, unsafeWipe, value };\n","/** @internal */\n\n/** @internal */\nconst OP_CONSTANT = \"Constant\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FAIL = \"Fail\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FALLBACK = \"Fallback\";\n\n/** @internal */\n\n/** @internal */\nconst OP_DESCRIBED = \"Described\";\n\n/** @internal */\n\n/** @internal */\nconst OP_LAZY = \"Lazy\";\n\n/** @internal */\n\n/** @internal */\nconst OP_MAP_OR_FAIL = \"MapOrFail\";\n\n/** @internal */\n\n/** @internal */\nconst OP_NESTED = \"Nested\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PRIMITIVE = \"Primitive\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SEQUENCE = \"Sequence\";\n\n/** @internal */\n\n/** @internal */\nconst OP_HASHMAP = \"HashMap\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ZIP_WITH = \"ZipWith\";\n\nexport { OP_CONSTANT, OP_DESCRIBED, OP_FAIL, OP_FALLBACK, OP_HASHMAP, OP_LAZY, OP_MAP_OR_FAIL, OP_NESTED, OP_PRIMITIVE, OP_SEQUENCE, OP_ZIP_WITH };\n","import { toReadonlyArray, unsafeFromArray } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { isMissingDataOnly } from '../ConfigError/dist/effect-ConfigError.esm.js';\nimport { left, right } from '../Either/dist/effect-Either.esm.js';\nimport { pipe, dual, constTrue } from '../Function/dist/effect-Function.esm.js';\nimport { fromIterable } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { Unsupported, InvalidData, MissingData } from './configError.esm.js';\nimport { fromString } from './configSecret.esm.js';\nimport { allLogLevels } from './core.esm.js';\nimport { OP_FAIL, OP_MAP_OR_FAIL, OP_NESTED, OP_FALLBACK, OP_PRIMITIVE, OP_SEQUENCE, OP_CONSTANT, OP_LAZY, OP_HASHMAP, OP_DESCRIBED, OP_ZIP_WITH } from './opCodes/config.esm.js';\nimport { some, none } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst ConfigSymbolKey = \"effect/Config\";\n\n/** @internal */\nconst ConfigTypeId = /*#__PURE__*/Symbol.for(ConfigSymbolKey);\n\n/** @internal */\n\n/** @internal */\nconst configVariance = {\n  _A: _ => _\n};\n\n/** @internal */\nconst proto = {\n  [ConfigTypeId]: configVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst boolean = name => {\n  const config = primitive(\"a boolean property\", text => {\n    switch (text) {\n      case \"true\":\n      case \"yes\":\n      case \"on\":\n      case \"1\":\n        {\n          return right(true);\n        }\n      case \"false\":\n      case \"no\":\n      case \"off\":\n      case \"0\":\n        {\n          return right(false);\n        }\n      default:\n        {\n          const error = InvalidData([], `Expected a boolean value, but received ${text}`);\n          return left(error);\n        }\n    }\n  });\n  return name === undefined ? config : nested(name)(config);\n};\n\n/** @internal */\nconst array = (config, name) => {\n  return pipe(chunk(config, name), map(toReadonlyArray));\n};\n\n/** @internal */\nconst chunk = (config, name) => {\n  return map(name === undefined ? repeat(config) : nested(name)(repeat(config)), unsafeFromArray);\n};\n\n/** @internal */\nconst date = name => {\n  const config = primitive(\"a date property\", text => {\n    const result = Date.parse(text);\n    if (Number.isNaN(result)) {\n      return left(InvalidData([], `Expected a date value but received ${text}`));\n    }\n    return right(new Date(result));\n  });\n  return name === undefined ? config : nested(name)(config);\n};\n\n/** @internal */\nconst fail = message => {\n  const fail = Object.create(proto);\n  fail._tag = OP_FAIL;\n  fail.message = message;\n  fail.parse = () => left(Unsupported([], message));\n  return fail;\n};\n\n/** @internal */\nconst number = name => {\n  const config = primitive(\"a number property\", text => {\n    const result = Number.parseFloat(text);\n    if (Number.isNaN(result)) {\n      return left(InvalidData([], `Expected an number value but received ${text}`));\n    }\n    return right(result);\n  });\n  return name === undefined ? config : nested(name)(config);\n};\n\n/** @internal */\nconst integer = name => {\n  const config = primitive(\"an integer property\", text => {\n    const result = Number.parseInt(text, 10);\n    if (Number.isNaN(result)) {\n      return left(InvalidData([], `Expected an integer value but received ${text}`));\n    }\n    return right(result);\n  });\n  return name === undefined ? config : nested(name)(config);\n};\n\n/** @internal */\nconst logLevel = name => {\n  const config = mapOrFail(string(), value => {\n    const label = value.toUpperCase();\n    const level = allLogLevels.find(level => level.label === label);\n    return level === undefined ? left(InvalidData([], `Expected a log level, but found: ${value}`)) : right(level);\n  });\n  return name === undefined ? config : nested(config, name);\n};\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => mapOrFail(self, a => right(f(a))));\n\n/** @internal */\nconst mapAttempt = /*#__PURE__*/dual(2, (self, f) => mapOrFail(self, a => {\n  try {\n    return right(f(a));\n  } catch (error) {\n    return left(InvalidData([], error instanceof Error ? error.message : `${error}`));\n  }\n}));\n\n/** @internal */\nconst mapOrFail = /*#__PURE__*/dual(2, (self, f) => {\n  const mapOrFail = Object.create(proto);\n  mapOrFail._tag = OP_MAP_OR_FAIL;\n  mapOrFail.original = self;\n  mapOrFail.mapOrFail = f;\n  return mapOrFail;\n});\n\n/** @internal */\nconst missingError = name => {\n  return self => {\n    return MissingData([], `Expected ${self.description} with name ${name}`);\n  };\n};\n\n/** @internal */\nconst nested = /*#__PURE__*/dual(2, (self, name) => {\n  const nested = Object.create(proto);\n  nested._tag = OP_NESTED;\n  nested.name = name;\n  nested.config = self;\n  return nested;\n});\n\n/** @internal */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => {\n  const fallback = Object.create(proto);\n  fallback._tag = OP_FALLBACK;\n  fallback.first = self;\n  fallback.second = suspend(that);\n  fallback.condition = constTrue;\n  return fallback;\n});\n\n/** @internal */\nconst orElseIf = /*#__PURE__*/dual(2, (self, options) => {\n  const fallback = Object.create(proto);\n  fallback._tag = OP_FALLBACK;\n  fallback.first = self;\n  fallback.second = suspend(options.orElse);\n  fallback.condition = options.if;\n  return fallback;\n});\n\n/** @internal */\nconst option = self => {\n  return pipe(self, map(some), orElseIf({\n    orElse: () => succeed(none()),\n    if: isMissingDataOnly\n  }));\n};\n\n/** @internal */\nconst primitive = (description, parse) => {\n  const primitive = Object.create(proto);\n  primitive._tag = OP_PRIMITIVE;\n  primitive.description = description;\n  primitive.parse = parse;\n  return primitive;\n};\n\n/** @internal */\nconst repeat = self => {\n  const repeat = Object.create(proto);\n  repeat._tag = OP_SEQUENCE;\n  repeat.config = self;\n  return repeat;\n};\n\n/** @internal */\nconst secret = name => {\n  const config = primitive(\"a secret property\", text => right(fromString(text)));\n  return name === undefined ? config : nested(name)(config);\n};\n\n/** @internal */\nconst hashSet = (config, name) => {\n  const newConfig = map(chunk(config), fromIterable);\n  return name === undefined ? newConfig : nested(name)(newConfig);\n};\n\n/** @internal */\nconst string = name => {\n  const config = primitive(\"a text property\", right);\n  return name === undefined ? config : nested(name)(config);\n};\nconst all = arg => {\n  if (Array.isArray(arg)) {\n    return tuple(arg);\n  } else if (Symbol.iterator in arg) {\n    return tuple([...arg]);\n  }\n  return struct(arg);\n};\nconst struct = r => {\n  const entries = Object.entries(r);\n  let result = pipe(entries[0][1], map(value => ({\n    [entries[0][0]]: value\n  })));\n  if (entries.length === 1) {\n    return result;\n  }\n  const rest = entries.slice(1);\n  for (const [key, config] of rest) {\n    result = pipe(result, zipWith(config, (record, value) => ({\n      ...record,\n      [key]: value\n    })));\n  }\n  return result;\n};\n\n/** @internal */\nconst succeed = value => {\n  const constant = Object.create(proto);\n  constant._tag = OP_CONSTANT;\n  constant.value = value;\n  constant.parse = () => right(value);\n  return constant;\n};\n\n/** @internal */\nconst suspend = config => {\n  const lazy = Object.create(proto);\n  lazy._tag = OP_LAZY;\n  lazy.config = config;\n  return lazy;\n};\n\n/** @internal */\nconst sync = value => {\n  return suspend(() => succeed(value()));\n};\n\n/** @internal */\nconst hashMap = (config, name) => {\n  const table = Object.create(proto);\n  table._tag = OP_HASHMAP;\n  table.valueConfig = config;\n  return name === undefined ? table : nested(name)(table);\n};\n\n/** @internal */\nconst isConfig = u => hasProperty(u, ConfigTypeId);\n\n/** @internal */\nconst tuple = tuple => {\n  if (tuple.length === 0) {\n    return succeed([]);\n  }\n  if (tuple.length === 1) {\n    return map(tuple[0], x => [x]);\n  }\n  let result = map(tuple[0], x => [x]);\n  for (let i = 1; i < tuple.length; i++) {\n    const config = tuple[i];\n    result = pipe(result, zipWith(config, (tuple, value) => [...tuple, value]));\n  }\n  return result;\n};\n\n/**\n * @internal\n */\nconst unwrap = wrapped => {\n  if (isConfig(wrapped)) {\n    return wrapped;\n  }\n  return struct(Object.fromEntries(Object.entries(wrapped).map(([k, a]) => [k, unwrap(a)])));\n};\n\n/** @internal */\nconst validate = /*#__PURE__*/dual(2, (self, {\n  message,\n  validation\n}) => mapOrFail(self, a => {\n  if (validation(a)) {\n    return right(a);\n  }\n  return left(InvalidData([], message));\n}));\n\n/** @internal */\nconst withDefault = /*#__PURE__*/dual(2, (self, def) => orElseIf(self, {\n  orElse: () => succeed(def),\n  if: isMissingDataOnly\n}));\n\n/** @internal */\nconst withDescription = /*#__PURE__*/dual(2, (self, description) => {\n  const described = Object.create(proto);\n  described._tag = OP_DESCRIBED;\n  described.config = self;\n  described.description = description;\n  return described;\n});\n\n/** @internal */\nconst zip = /*#__PURE__*/dual(2, (self, that) => zipWith(self, that, (a, b) => [a, b]));\n\n/** @internal */\nconst zipWith = /*#__PURE__*/dual(3, (self, that, f) => {\n  const zipWith = Object.create(proto);\n  zipWith._tag = OP_ZIP_WITH;\n  zipWith.left = self;\n  zipWith.right = that;\n  zipWith.zip = f;\n  return zipWith;\n});\n\nexport { ConfigTypeId, all, array, boolean, chunk, date, fail, hashMap, hashSet, integer, isConfig, logLevel, map, mapAttempt, mapOrFail, missingError, nested, number, option, orElse, orElseIf, primitive, repeat, secret, string, succeed, suspend, sync, unwrap, validate, withDefault, withDescription, zip, zipWith };\n","import { left, right } from '../../Either/dist/effect-Either.esm.js';\nimport { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { MissingData } from '../configError.esm.js';\nimport { of, isCons, cons } from '../../List/dist/effect-List.esm.js';\nimport { contains } from '../../Option/dist/effect-Option.esm.js';\nimport { head, tailNonEmpty, prepend, map } from '../../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/** @internal */\nconst empty = {\n  _tag: \"Empty\"\n};\n\n/** @internal */\nconst andThen = /*#__PURE__*/dual(2, (self, that) => ({\n  _tag: \"AndThen\",\n  first: self,\n  second: that\n}));\n\n/** @internal */\nconst mapName = /*#__PURE__*/dual(2, (self, f) => andThen(self, {\n  _tag: \"MapName\",\n  f\n}));\n\n/** @internal */\nconst nested = /*#__PURE__*/dual(2, (self, name) => andThen(self, {\n  _tag: \"Nested\",\n  name\n}));\n\n/** @internal */\nconst unnested = /*#__PURE__*/dual(2, (self, name) => andThen(self, {\n  _tag: \"Unnested\",\n  name\n}));\n\n/** @internal */\nconst patch = /*#__PURE__*/dual(2, (path, patch) => {\n  let input = of(patch);\n  let output = path;\n  while (isCons(input)) {\n    const patch = input.head;\n    switch (patch._tag) {\n      case \"Empty\":\n        {\n          input = input.tail;\n          break;\n        }\n      case \"AndThen\":\n        {\n          input = cons(patch.first, cons(patch.second, input.tail));\n          break;\n        }\n      case \"MapName\":\n        {\n          output = map(output, patch.f);\n          input = input.tail;\n          break;\n        }\n      case \"Nested\":\n        {\n          output = prepend(output, patch.name);\n          input = input.tail;\n          break;\n        }\n      case \"Unnested\":\n        {\n          const containsName = pipe(head(output), contains(patch.name));\n          if (containsName) {\n            output = tailNonEmpty(output);\n            input = input.tail;\n          } else {\n            return left(MissingData(output, `Expected ${patch.name} to be in path in ConfigProvider#unnested`));\n          }\n          break;\n        }\n    }\n  }\n  return right(output);\n});\n\nexport { andThen, empty, mapName, nested, patch, unnested };\n","import { number } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { none, some } from '../../internal/Option.esm.js';\nimport { number as number$1, lessThan as lessThan$1, lessThanOrEqualTo as lessThanOrEqualTo$1, greaterThan as greaterThan$1, greaterThanOrEqualTo as greaterThanOrEqualTo$1, between as between$1, clamp as clamp$1, min as min$1, max as max$1 } from '../../Order/dist/effect-Order.esm.js';\nimport { isNumber as isNumber$1 } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * This module provides utility functions and type class instances for working with the `number` type in TypeScript.\n * It includes functions for basic arithmetic operations, as well as type class instances for\n * `Equivalence` and `Order`.\n *\n * @since 2.0.0\n */\n\n/**\n * Tests if a value is a `number`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isNumber } from 'effect/Number'\n *\n * assert.deepStrictEqual(isNumber(2), true)\n * assert.deepStrictEqual(isNumber(\"2\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isNumber = isNumber$1;\n\n/**\n * Provides an addition operation on `number`s.\n *\n * @param self - The first operand.\n * @param that - The second operand.\n *\n * @example\n * import { sum } from 'effect/Number'\n *\n * assert.deepStrictEqual(sum(2, 3), 5)\n *\n * @category math\n * @since 2.0.0\n */\nconst sum = /*#__PURE__*/dual(2, (self, that) => self + that);\n\n/**\n * Provides a multiplication operation on `number`s.\n *\n * @param self - The first operand.\n * @param that - The second operand.\n *\n * @example\n * import { multiply } from 'effect/Number'\n *\n * assert.deepStrictEqual(multiply(2, 3), 6)\n *\n * @category math\n * @since 2.0.0\n */\nconst multiply = /*#__PURE__*/dual(2, (self, that) => self * that);\n\n/**\n * Provides a subtraction operation on `number`s.\n *\n * @param self - The first operand.\n * @param that - The second operand.\n *\n * @example\n * import { subtract } from 'effect/Number'\n *\n * assert.deepStrictEqual(subtract(2, 3), -1)\n *\n * @category math\n * @since 2.0.0\n */\nconst subtract = /*#__PURE__*/dual(2, (self, that) => self - that);\n\n/**\n * Provides a division operation on `number`s.\n *\n * @param self - The dividend operand.\n * @param that - The divisor operand.\n *\n * @example\n * import { divide } from 'effect/Number'\n * import { some, none } from 'effect/Option'\n *\n * assert.deepStrictEqual(divide(6, 3), some(2))\n * assert.deepStrictEqual(divide(6, 0), none())\n *\n * @category math\n * @since 2.0.0\n */\nconst divide = /*#__PURE__*/dual(2, (self, that) => that === 0 ? none : some(self / that));\n\n/**\n * Provides a division operation on `number`s.\n *\n * Throws a `RangeError` if the divisor is `0`.\n *\n * @param self - The dividend operand.\n * @param that - The divisor operand.\n *\n * @example\n * import { unsafeDivide } from 'effect/Number'\n *\n * assert.deepStrictEqual(unsafeDivide(6, 3), 2)\n *\n * @category math\n * @since 2.0.0\n */\nconst unsafeDivide = /*#__PURE__*/dual(2, (self, that) => self / that);\n\n/**\n * Returns the result of adding `1` to a given number.\n *\n * @param n - A `number` to be incremented.\n *\n * @example\n * import { increment } from 'effect/Number'\n *\n * assert.deepStrictEqual(increment(2), 3)\n *\n * @category math\n * @since 2.0.0\n */\nconst increment = n => n + 1;\n\n/**\n * Decrements a number by `1`.\n *\n * @param n - A `number` to be decremented.\n *\n * @example\n * import { decrement } from 'effect/Number'\n *\n * assert.deepStrictEqual(decrement(3), 2)\n *\n * @category math\n * @since 2.0.0\n */\nconst decrement = n => n - 1;\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Equivalence = number;\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Order = number$1;\n\n/**\n * Returns `true` if the first argument is less than the second, otherwise `false`.\n *\n * @param self - The first argument.\n * @param that - The second argument.\n *\n * @example\n * import { lessThan } from 'effect/Number'\n *\n * assert.deepStrictEqual(lessThan(2, 3), true)\n * assert.deepStrictEqual(lessThan(3, 3), false)\n * assert.deepStrictEqual(lessThan(4, 3), false)\n *\n * @category predicates\n * @since 2.0.0\n */\nconst lessThan = /*#__PURE__*/lessThan$1(Order);\n\n/**\n * Returns a function that checks if a given `number` is less than or equal to the provided one.\n *\n * @param self - The first `number` to compare with.\n * @param that - The second `number` to compare with.\n *\n * @example\n * import { lessThanOrEqualTo } from 'effect/Number'\n *\n * assert.deepStrictEqual(lessThanOrEqualTo(2, 3), true)\n * assert.deepStrictEqual(lessThanOrEqualTo(3, 3), true)\n * assert.deepStrictEqual(lessThanOrEqualTo(4, 3), false)\n *\n * @category predicates\n * @since 2.0.0\n */\nconst lessThanOrEqualTo = /*#__PURE__*/lessThanOrEqualTo$1(Order);\n\n/**\n * Returns `true` if the first argument is greater than the second, otherwise `false`.\n *\n * @param self - The first argument.\n * @param that - The second argument.\n *\n * @example\n * import { greaterThan } from 'effect/Number'\n *\n * assert.deepStrictEqual(greaterThan(2, 3), false)\n * assert.deepStrictEqual(greaterThan(3, 3), false)\n * assert.deepStrictEqual(greaterThan(4, 3), true)\n *\n * @category predicates\n * @since 2.0.0\n */\nconst greaterThan = /*#__PURE__*/greaterThan$1(Order);\n\n/**\n * Returns a function that checks if a given `number` is greater than or equal to the provided one.\n *\n * @param self - The first `number` to compare with.\n * @param that - The second `number` to compare with.\n *\n * @example\n * import { greaterThanOrEqualTo } from 'effect/Number'\n *\n * assert.deepStrictEqual(greaterThanOrEqualTo(2, 3), false)\n * assert.deepStrictEqual(greaterThanOrEqualTo(3, 3), true)\n * assert.deepStrictEqual(greaterThanOrEqualTo(4, 3), true)\n *\n * @category predicates\n * @since 2.0.0\n */\nconst greaterThanOrEqualTo = /*#__PURE__*/greaterThanOrEqualTo$1(Order);\n\n/**\n * Checks if a `number` is between a `minimum` and `maximum` value (inclusive).\n *\n * @param self - The `number` to check.\n * @param minimum - The `minimum` value to check.\n * @param maximum - The `maximum` value to check.\n *\n * @example\n * import { between } from 'effect/Number'\n *\n * assert.deepStrictEqual(between(0, 5)(3), true)\n * assert.deepStrictEqual(between(0, 5)(-1), false)\n * assert.deepStrictEqual(between(0, 5)(6), false)\n *\n * @category predicates\n * @since 2.0.0\n */\nconst between = /*#__PURE__*/between$1(Order);\n\n/**\n * Restricts the given `number` to be within the range specified by the `minimum` and `maximum` values.\n *\n * - If the `number` is less than the `minimum` value, the function returns the `minimum` value.\n * - If the `number` is greater than the `maximum` value, the function returns the `maximum` value.\n * - Otherwise, it returns the original `number`.\n *\n * @param self - The `number` to be clamped.\n * @param minimum - The lower end of the range.\n * @param maximum - The upper end of the range.\n *\n * @example\n * import { clamp } from 'effect/Number'\n *\n * assert.deepStrictEqual(clamp(0, 5)(3), 3)\n * assert.deepStrictEqual(clamp(0, 5)(-1), 0)\n * assert.deepStrictEqual(clamp(0, 5)(6), 5)\n *\n * @since 2.0.0\n */\nconst clamp = /*#__PURE__*/clamp$1(Order);\n\n/**\n * Returns the minimum between two `number`s.\n *\n * @param self - The first `number`.\n * @param that - The second `number`.\n *\n * @example\n * import { min } from 'effect/Number'\n *\n * assert.deepStrictEqual(min(2, 3), 2)\n *\n * @since 2.0.0\n */\nconst min = /*#__PURE__*/min$1(Order);\n\n/**\n * Returns the maximum between two `number`s.\n *\n * @param self - The first `number`.\n * @param that - The second `number`.\n *\n * @example\n * import { max } from 'effect/Number'\n *\n * assert.deepStrictEqual(max(2, 3), 3)\n *\n * @since 2.0.0\n */\nconst max = /*#__PURE__*/max$1(Order);\n\n/**\n * Determines the sign of a given `number`.\n *\n * @param n - The `number` to determine the sign of.\n *\n * @example\n * import { sign } from 'effect/Number'\n *\n * assert.deepStrictEqual(sign(-5), -1)\n * assert.deepStrictEqual(sign(0), 0)\n * assert.deepStrictEqual(sign(5), 1)\n *\n * @category math\n * @since 2.0.0\n */\nconst sign = n => Order(n, 0);\n\n/**\n * Takes an `Iterable` of `number`s and returns their sum as a single `number`.\n *\n * @param collection - The collection of `number`s to sum.\n *\n * @example\n * import { sumAll } from 'effect/Number'\n *\n * assert.deepStrictEqual(sumAll([2, 3, 4]), 9)\n *\n * @category math\n * @since 2.0.0\n */\nconst sumAll = collection => {\n  let out = 0;\n  for (const n of collection) {\n    out += n;\n  }\n  return out;\n};\n\n/**\n * Takes an `Iterable` of `number`s and returns their multiplication as a single `number`.\n *\n * @param collection - The collection of `number`s to multiply.\n *\n * @example\n * import { multiplyAll } from 'effect/Number'\n *\n * assert.deepStrictEqual(multiplyAll([2, 3, 4]), 24)\n *\n * @category math\n * @since 2.0.0\n */\nconst multiplyAll = collection => {\n  let out = 1;\n  for (const n of collection) {\n    if (n === 0) {\n      return 0;\n    }\n    out *= n;\n  }\n  return out;\n};\n\n/**\n * Returns the remainder left over when one operand is divided by a second operand.\n *\n * It always takes the sign of the dividend.\n *\n * @param self - The dividend.\n * @param divisor - The divisor.\n *\n * @example\n * import { remainder } from \"effect/Number\"\n *\n * assert.deepStrictEqual(remainder(2, 2), 0)\n * assert.deepStrictEqual(remainder(3, 2), 1)\n * assert.deepStrictEqual(remainder(-4, 2), -0)\n *\n * @category math\n * @since 2.0.0\n */\nconst remainder = /*#__PURE__*/dual(2, (self, divisor) => {\n  // https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\n  const selfDecCount = (self.toString().split(\".\")[1] || \"\").length;\n  const divisorDecCount = (divisor.toString().split(\".\")[1] || \"\").length;\n  const decCount = selfDecCount > divisorDecCount ? selfDecCount : divisorDecCount;\n  const selfInt = parseInt(self.toFixed(decCount).replace(\".\", \"\"));\n  const divisorInt = parseInt(divisor.toFixed(decCount).replace(\".\", \"\"));\n  return selfInt % divisorInt / Math.pow(10, decCount);\n});\n\nexport { Equivalence, Order, between, clamp, decrement, divide, greaterThan, greaterThanOrEqualTo, increment, isNumber, lessThan, lessThanOrEqualTo, max, min, multiply, multiplyAll, remainder, sign, subtract, sum, sumAll, unsafeDivide };\n","import { Tag } from '../Context/dist/effect-Context.esm.js';\nimport { isLeft, isRight, merge, right, left } from '../Either/dist/effect-Either.esm.js';\nimport { pipe, dual } from '../Function/dist/effect-Function.esm.js';\nimport { empty as empty$2, fromIterable as fromIterable$1 } from '../HashMap/dist/effect-HashMap.esm.js';\nimport { union, fromIterable } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { missingError } from './config.esm.js';\nimport { MissingData, Or, And, prefixed } from './configError.esm.js';\nimport { empty as empty$1, patch, mapName, nested as nested$1, unnested as unnested$1 } from './configProvider/pathPatch.esm.js';\nimport { flatMap, fail, succeed, suspend, forEachSequential, map, catchAll, sync, either, mapBoth, mapError, zip as zip$1 } from './core.esm.js';\nimport { OP_ZIP_WITH, OP_HASHMAP, OP_SEQUENCE, OP_PRIMITIVE, OP_NESTED, OP_MAP_OR_FAIL, OP_LAZY, OP_FALLBACK, OP_FAIL, OP_DESCRIBED, OP_CONSTANT } from './opCodes/config.esm.js';\nimport { constantCase as constantCase$1, kebabCase as kebabCase$1, lowerCase as lowerCase$1, snakeCase as snakeCase$1, upperCase as upperCase$1 } from './string-utils.esm.js';\nimport { Order } from '../Number/dist/effect-Number.esm.js';\nimport { match, getOrElse, flatMap as flatMap$1, some, none, all } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { head, empty, append, flatten, of, last, reduce, reduceRight, sort, flatMap as flatMap$2, make as make$1, unsafeGet, join, map as map$1, zip, fromIterable as fromIterable$2, unfold } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\nconst concat = (l, r) => [...l, ...r];\n\n/** @internal */\nconst ConfigProviderSymbolKey = \"effect/ConfigProvider\";\n\n/** @internal */\nconst ConfigProviderTypeId = /*#__PURE__*/Symbol.for(ConfigProviderSymbolKey);\n\n/** @internal */\nconst configProviderTag = /*#__PURE__*/Tag(ConfigProviderTypeId);\n\n/** @internal */\nconst FlatConfigProviderSymbolKey = \"effect/ConfigProviderFlat\";\n\n/** @internal */\nconst FlatConfigProviderTypeId = /*#__PURE__*/Symbol.for(FlatConfigProviderSymbolKey);\n\n/** @internal */\nconst make = options => ({\n  [ConfigProviderTypeId]: ConfigProviderTypeId,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  ...options\n});\n\n/** @internal */\nconst makeFlat = options => ({\n  [FlatConfigProviderTypeId]: FlatConfigProviderTypeId,\n  patch: options.patch,\n  load: (path, config, split = true) => options.load(path, config, split),\n  enumerateChildren: options.enumerateChildren\n});\n\n/** @internal */\nconst fromFlat = flat => make({\n  load: config => flatMap(fromFlatLoop(flat, empty(), config, false), chunk => match(head(chunk), {\n    onNone: () => fail(MissingData(empty(), `Expected a single value having structure: ${config}`)),\n    onSome: succeed\n  })),\n  flattened: flat\n});\n\n/** @internal */\nconst fromEnv = (config = {}) => {\n  const {\n    pathDelim,\n    seqDelim\n  } = Object.assign({}, {\n    pathDelim: \"_\",\n    seqDelim: \",\"\n  }, config);\n  const makePathString = path => pipe(path, join(pathDelim));\n  const unmakePathString = pathString => pathString.split(pathDelim);\n  const getEnv = () => typeof process !== \"undefined\" && \"env\" in process && typeof process.env === \"object\" ? process.env : {};\n  const load = (path, primitive, split = true) => {\n    const pathString = makePathString(path);\n    const current = getEnv();\n    const valueOpt = pathString in current ? some(current[pathString]) : none();\n    return pipe(valueOpt, mapError(() => MissingData(path, `Expected ${pathString} to exist in the process context`)), flatMap(value => parsePrimitive(value, path, primitive, seqDelim, split)));\n  };\n  const enumerateChildren = path => sync(() => {\n    const current = getEnv();\n    const keys = Object.keys(current);\n    const keyPaths = Array.from(keys).map(value => unmakePathString(value.toUpperCase()));\n    const filteredKeyPaths = keyPaths.filter(keyPath => {\n      for (let i = 0; i < path.length; i++) {\n        const pathComponent = pipe(path, unsafeGet(i));\n        const currentElement = keyPath[i];\n        if (currentElement === undefined || pathComponent !== currentElement) {\n          return false;\n        }\n      }\n      return true;\n    }).flatMap(keyPath => keyPath.slice(path.length, path.length + 1));\n    return fromIterable(filteredKeyPaths);\n  });\n  return fromFlat(makeFlat({\n    load,\n    enumerateChildren,\n    patch: empty$1\n  }));\n};\n\n/** @internal */\nconst fromMap = (map, config = {}) => {\n  const {\n    pathDelim,\n    seqDelim\n  } = Object.assign({\n    seqDelim: \",\",\n    pathDelim: \".\"\n  }, config);\n  const makePathString = path => pipe(path, join(pathDelim));\n  const unmakePathString = pathString => pathString.split(pathDelim);\n  const mapWithIndexSplit = splitIndexInKeys(map, str => Array.from(unmakePathString(str)), makePathString);\n  const load = (path, primitive, split = true) => {\n    const pathString = makePathString(path);\n    const valueOpt = mapWithIndexSplit.has(pathString) ? some(mapWithIndexSplit.get(pathString)) : none();\n    return pipe(valueOpt, mapError(() => MissingData(path, `Expected ${pathString} to exist in the provided map`)), flatMap(value => parsePrimitive(value, path, primitive, seqDelim, split)));\n  };\n  const enumerateChildren = path => sync(() => {\n    const keyPaths = Array.from(mapWithIndexSplit.keys()).map(unmakePathString);\n    const filteredKeyPaths = keyPaths.filter(keyPath => {\n      for (let i = 0; i < path.length; i++) {\n        const pathComponent = pipe(path, unsafeGet(i));\n        const currentElement = keyPath[i];\n        if (currentElement === undefined || pathComponent !== currentElement) {\n          return false;\n        }\n      }\n      return true;\n    }).flatMap(keyPath => keyPath.slice(path.length, path.length + 1));\n    return fromIterable(filteredKeyPaths);\n  });\n  return fromFlat(makeFlat({\n    load,\n    enumerateChildren,\n    patch: empty$1\n  }));\n};\nconst extend = (leftDef, rightDef, left, right) => {\n  const leftPad = unfold(left.length, index => index >= right.length ? none() : some([leftDef(index), index + 1]));\n  const rightPad = unfold(right.length, index => index >= left.length ? none() : some([rightDef(index), index + 1]));\n  const leftExtension = concat(left, leftPad);\n  const rightExtension = concat(right, rightPad);\n  return [leftExtension, rightExtension];\n};\nconst fromFlatLoop = (flat, prefix, config, split) => {\n  const op = config;\n  switch (op._tag) {\n    case OP_CONSTANT:\n      {\n        return succeed(of(op.value));\n      }\n    case OP_DESCRIBED:\n      {\n        return suspend(() => fromFlatLoop(flat, prefix, op.config, split));\n      }\n    case OP_FAIL:\n      {\n        return fail(MissingData(prefix, op.message));\n      }\n    case OP_FALLBACK:\n      {\n        return pipe(suspend(() => fromFlatLoop(flat, prefix, op.first, split)), catchAll(error1 => {\n          if (op.condition(error1)) {\n            return pipe(fromFlatLoop(flat, prefix, op.second, split), catchAll(error2 => fail(Or(error1, error2))));\n          }\n          return fail(error1);\n        }));\n      }\n    case OP_LAZY:\n      {\n        return suspend(() => fromFlatLoop(flat, prefix, op.config(), split));\n      }\n    case OP_MAP_OR_FAIL:\n      {\n        return suspend(() => pipe(fromFlatLoop(flat, prefix, op.original, split), flatMap(forEachSequential(a => pipe(op.mapOrFail(a), mapError(prefixed(prefix)))))));\n      }\n    case OP_NESTED:\n      {\n        return suspend(() => fromFlatLoop(flat, concat(prefix, of(op.name)), op.config, split));\n      }\n    case OP_PRIMITIVE:\n      {\n        return pipe(patch(prefix, flat.patch), flatMap(prefix => pipe(flat.load(prefix, op, split), flatMap(values => {\n          if (values.length === 0) {\n            const name = pipe(last(prefix), getOrElse(() => \"<n/a>\"));\n            return fail(missingError(name));\n          }\n          return succeed(values);\n        }))));\n      }\n    case OP_SEQUENCE:\n      {\n        return pipe(patch(prefix, flat.patch), flatMap(patchedPrefix => pipe(flat.enumerateChildren(patchedPrefix), flatMap(indicesFrom), flatMap(indices => {\n          if (indices.length === 0) {\n            return suspend(() => map(fromFlatLoop(flat, patchedPrefix, op.config, true), of));\n          }\n          return pipe(forEachSequential(indices, index => fromFlatLoop(flat, append(prefix, `[${index}]`), op.config, true)), map(chunkChunk => {\n            const flattened = flatten(chunkChunk);\n            if (flattened.length === 0) {\n              return of(empty());\n            }\n            return of(flattened);\n          }));\n        }))));\n      }\n    case OP_HASHMAP:\n      {\n        return suspend(() => pipe(patch(prefix, flat.patch), flatMap(prefix => pipe(flat.enumerateChildren(prefix), flatMap(keys => {\n          return pipe(keys, forEachSequential(key => fromFlatLoop(flat, concat(prefix, of(key)), op.valueConfig, split)), map(values => {\n            if (values.length === 0) {\n              return of(empty$2());\n            }\n            const matrix = values.map(x => Array.from(x));\n            return pipe(transpose(matrix), map$1(values => fromIterable$1(zip(fromIterable$2(keys), values))));\n          }));\n        })))));\n      }\n    case OP_ZIP_WITH:\n      {\n        return suspend(() => pipe(fromFlatLoop(flat, prefix, op.left, split), either, flatMap(left => pipe(fromFlatLoop(flat, prefix, op.right, split), either, flatMap(right$1 => {\n          if (isLeft(left) && isLeft(right$1)) {\n            return fail(And(left.left, right$1.left));\n          }\n          if (isLeft(left) && isRight(right$1)) {\n            return fail(left.left);\n          }\n          if (isRight(left) && isLeft(right$1)) {\n            return fail(right$1.left);\n          }\n          if (isRight(left) && isRight(right$1)) {\n            const path = pipe(prefix, join(\".\"));\n            const fail = fromFlatLoopFail(prefix, path);\n            const [lefts, rights] = extend(fail, fail, pipe(left.right, map$1(right)), pipe(right$1.right, map$1(right)));\n            return pipe(lefts, zip(rights), forEachSequential(([left, right]) => pipe(zip$1(left, right), map(([left, right]) => op.zip(left, right)))));\n          }\n          throw new Error(\"BUG: ConfigProvider.fromFlatLoop - please report an issue at https://github.com/Effect-TS/io/issues\");\n        })))));\n      }\n  }\n};\nconst fromFlatLoopFail = (prefix, path) => index => left(MissingData(prefix, `The element at index ${index} in a sequence at path \"${path}\" was missing`));\n\n/** @internal */\nconst mapInputPath = /*#__PURE__*/dual(2, (self, f) => fromFlat(mapInputPathFlat(self.flattened, f)));\nconst mapInputPathFlat = (self, f) => makeFlat({\n  load: (path, config, split = true) => self.load(path, config, split),\n  enumerateChildren: path => self.enumerateChildren(path),\n  patch: mapName(self.patch, f)\n});\n\n/** @internal */\nconst nested = /*#__PURE__*/dual(2, (self, name) => fromFlat(makeFlat({\n  load: (path, config) => self.flattened.load(path, config, true),\n  enumerateChildren: path => self.flattened.enumerateChildren(path),\n  patch: nested$1(self.flattened.patch, name)\n})));\n\n/** @internal */\nconst unnested = /*#__PURE__*/dual(2, (self, name) => fromFlat(makeFlat({\n  load: (path, config) => self.flattened.load(path, config, true),\n  enumerateChildren: path => self.flattened.enumerateChildren(path),\n  patch: unnested$1(self.flattened.patch, name)\n})));\n\n/** @internal */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => fromFlat(orElseFlat(self.flattened, () => that().flattened)));\nconst orElseFlat = (self, that) => makeFlat({\n  load: (path, config, split) => pipe(patch(path, self.patch), flatMap(patch => self.load(patch, config, split)), catchAll(error1 => pipe(sync(that), flatMap(that => pipe(patch(path, that.patch), flatMap(patch => that.load(patch, config, split)), catchAll(error2 => fail(Or(error1, error2)))))))),\n  enumerateChildren: path => pipe(patch(path, self.patch), flatMap(patch => self.enumerateChildren(patch)), either, flatMap(left => pipe(sync(that), flatMap(that => pipe(patch(path, that.patch), flatMap(patch => that.enumerateChildren(patch)), either, flatMap(right => {\n    if (isLeft(left) && isLeft(right)) {\n      return fail(And(left.left, right.left));\n    }\n    if (isLeft(left) && isRight(right)) {\n      return succeed(right.right);\n    }\n    if (isRight(left) && isLeft(right)) {\n      return succeed(left.right);\n    }\n    if (isRight(left) && isRight(right)) {\n      return succeed(pipe(left.right, union(right.right)));\n    }\n    throw new Error(\"BUG: ConfigProvider.orElseFlat - please report an issue at https://github.com/Effect-TS/io/issues\");\n  })))))),\n  patch: empty$1\n});\n\n/** @internal */\nconst constantCase = self => mapInputPath(self, constantCase$1);\n\n/** @internal */\nconst kebabCase = self => mapInputPath(self, kebabCase$1);\n\n/** @internal */\nconst lowerCase = self => mapInputPath(self, lowerCase$1);\n\n/** @internal */\nconst snakeCase = self => mapInputPath(self, snakeCase$1);\n\n/** @internal */\nconst upperCase = self => mapInputPath(self, upperCase$1);\n\n/** @internal */\nconst within = /*#__PURE__*/dual(3, (self, path, f) => {\n  const unnest = reduce(path, self, (provider, name) => unnested(provider, name));\n  const nest = reduceRight(path, f(unnest), (provider, name) => nested(provider, name));\n  return orElse(nest, () => self);\n});\nconst splitPathString = (text, delim) => {\n  const split = text.split(new RegExp(`\\\\s*${escapeRegex(delim)}\\\\s*`));\n  return split;\n};\nconst parsePrimitive = (text, path, primitive, delimiter, split) => {\n  if (!split) {\n    return pipe(primitive.parse(text), map(of), mapError(prefixed(path)));\n  }\n  return pipe(splitPathString(text, delimiter), forEachSequential(char => primitive.parse(char.trim())), mapError(prefixed(path)));\n};\nconst transpose = array => {\n  return Object.keys(array[0]).map(column => array.map(row => row[column]));\n};\nconst escapeRegex = string => {\n  return string.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n};\nconst indicesFrom = quotedIndices => pipe(forEachSequential(quotedIndices, parseQuotedIndex), mapBoth({\n  onFailure: () => empty(),\n  onSuccess: sort(Order)\n}), either, map(merge));\nconst STR_INDEX_REGEX = /(^.+)(\\[(\\d+)\\])$/;\nconst QUOTED_INDEX_REGEX = /^(\\[(\\d+)\\])$/;\nconst parseQuotedIndex = str => {\n  const match = str.match(QUOTED_INDEX_REGEX);\n  if (match !== null) {\n    const matchedIndex = match[2];\n    return pipe(matchedIndex !== undefined && matchedIndex.length > 0 ? some(matchedIndex) : none(), flatMap$1(parseInteger));\n  }\n  return none();\n};\nconst splitIndexInKeys = (map, unmakePathString, makePathString) => {\n  const newMap = new Map();\n  for (const [pathString, value] of map) {\n    const keyWithIndex = pipe(unmakePathString(pathString), flatMap$2(key => match(splitIndexFrom(key), {\n      onNone: () => of(key),\n      onSome: ([key, index]) => make$1(key, `[${index}]`)\n    })));\n    newMap.set(makePathString(keyWithIndex), value);\n  }\n  return newMap;\n};\nconst splitIndexFrom = key => {\n  const match = key.match(STR_INDEX_REGEX);\n  if (match !== null) {\n    const matchedString = match[1];\n    const matchedIndex = match[3];\n    const optionalString = matchedString !== undefined && matchedString.length > 0 ? some(matchedString) : none();\n    const optionalIndex = pipe(matchedIndex !== undefined && matchedIndex.length > 0 ? some(matchedIndex) : none(), flatMap$1(parseInteger));\n    return all([optionalString, optionalIndex]);\n  }\n  return none();\n};\nconst parseInteger = str => {\n  const parsedIndex = Number.parseInt(str);\n  return Number.isNaN(parsedIndex) ? none() : some(parsedIndex);\n};\n\nexport { ConfigProviderTypeId, FlatConfigProviderTypeId, configProviderTag, constantCase, fromEnv, fromFlat, fromMap, kebabCase, lowerCase, make, makeFlat, mapInputPath, nested, orElse, snakeCase, unnested, upperCase, within };\n","import { Tag } from '../../Context/dist/effect-Context.esm.js';\nimport { sync } from '../core.esm.js';\n\n/** @internal */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/Console\");\n\n/** @internal */\nconst consoleTag = /*#__PURE__*/Tag(TypeId);\n\n/** @internal */\nconst defaultConsole = {\n  [TypeId]: TypeId,\n  assert(condition, ...args) {\n    return sync(() => {\n      console.assert(condition, ...args);\n    });\n  },\n  clear: /*#__PURE__*/sync(() => {\n    console.clear();\n  }),\n  count(label) {\n    return sync(() => {\n      console.count(label);\n    });\n  },\n  countReset(label) {\n    return sync(() => {\n      console.countReset(label);\n    });\n  },\n  debug(...args) {\n    return sync(() => {\n      console.debug(...args);\n    });\n  },\n  dir(item, options) {\n    return sync(() => {\n      console.dir(item, options);\n    });\n  },\n  dirxml(...args) {\n    return sync(() => {\n      console.dirxml(...args);\n    });\n  },\n  error(...args) {\n    return sync(() => {\n      console.error(...args);\n    });\n  },\n  group(options) {\n    return options?.collapsed ? sync(() => console.groupCollapsed(options?.label)) : sync(() => console.group(options?.label));\n  },\n  groupEnd: /*#__PURE__*/sync(() => {\n    console.groupEnd();\n  }),\n  info(...args) {\n    return sync(() => {\n      console.info(...args);\n    });\n  },\n  log(...args) {\n    return sync(() => {\n      console.log(...args);\n    });\n  },\n  table(tabularData, properties) {\n    return sync(() => {\n      console.table(tabularData, properties);\n    });\n  },\n  time(label) {\n    return sync(() => console.time(label));\n  },\n  timeEnd(label) {\n    return sync(() => console.timeEnd(label));\n  },\n  timeLog(label, ...args) {\n    return sync(() => {\n      console.timeLog(label, ...args);\n    });\n  },\n  trace(...args) {\n    return sync(() => {\n      console.trace(...args);\n    });\n  },\n  warn(...args) {\n    return sync(() => {\n      console.warn(...args);\n    });\n  },\n  unsafe: console\n};\n\nexport { TypeId, consoleTag, defaultConsole };\n","import { fromIterable } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { Tag } from '../Context/dist/effect-Context.esm.js';\nimport { pipe } from '../Function/dist/effect-Function.esm.js';\nimport { sync, map, suspend, flatMap, forEachSequentialDiscard, as } from './core.esm.js';\nimport { PCGRandom } from '../Utils/dist/effect-Utils.esm.js';\n\n/** @internal */\nconst RandomSymbolKey = \"effect/Random\";\n\n/** @internal */\nconst RandomTypeId = /*#__PURE__*/Symbol.for(RandomSymbolKey);\n\n/** @internal */\nconst randomTag = /*#__PURE__*/Tag(RandomTypeId);\n/** @internal */\nclass RandomImpl {\n  [RandomTypeId] = RandomTypeId;\n  constructor(seed) {\n    this.seed = seed;\n    this.PRNG = new PCGRandom(seed);\n  }\n  next() {\n    return sync(() => this.PRNG.number());\n  }\n  nextBoolean() {\n    return map(this.next(), n => n > 0.5);\n  }\n  nextInt() {\n    return sync(() => this.PRNG.integer(Number.MAX_SAFE_INTEGER));\n  }\n  nextRange(min, max) {\n    return map(this.next(), n => (max - min) * n + min);\n  }\n  nextIntBetween(min, max) {\n    return sync(() => this.PRNG.integer(max - min) + min);\n  }\n  shuffle(elements) {\n    return shuffleWith(elements, n => this.nextIntBetween(0, n + 1));\n  }\n}\nconst shuffleWith = (elements, nextIntBounded) => {\n  return suspend(() => pipe(sync(() => Array.from(elements)), flatMap(buffer => {\n    const numbers = [];\n    for (let i = buffer.length; i >= 2; i = i - 1) {\n      numbers.push(i);\n    }\n    return pipe(numbers, forEachSequentialDiscard(n => pipe(nextIntBounded(n), map(k => swap(buffer, n - 1, k)))), as(fromIterable(buffer)));\n  })));\n};\nconst swap = (buffer, index1, index2) => {\n  const tmp = buffer[index1];\n  buffer[index1] = buffer[index2];\n  buffer[index2] = tmp;\n  return buffer;\n};\nconst make = seed => new RandomImpl(seed);\n\nexport { RandomTypeId, make, randomTag };\n","import { add, empty, get } from '../Context/dist/effect-Context.esm.js';\nimport { decode } from '../Duration/dist/effect-Duration.esm.js';\nimport { pipe, dual } from '../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { clockTag, make as make$1 } from './clock.esm.js';\nimport { configProviderTag, fromEnv } from './configProvider.esm.js';\nimport { fiberRefUnsafeMakeContext, fiberRefGetWith, fiberRefLocallyWith } from './core.esm.js';\nimport { consoleTag, defaultConsole } from './defaultServices/console.esm.js';\nimport { randomTag, make } from './random.esm.js';\nimport { tracerTag, nativeTracer } from './tracer.esm.js';\n\n/** @internal */\nconst liveServices = /*#__PURE__*/pipe( /*#__PURE__*/empty(), /*#__PURE__*/add(clockTag, /*#__PURE__*/make$1()), /*#__PURE__*/add(consoleTag, defaultConsole), /*#__PURE__*/add(randomTag, /*#__PURE__*/make( /*#__PURE__*/Math.random() * 4294967296 >>> 0)), /*#__PURE__*/add(configProviderTag, /*#__PURE__*/fromEnv()), /*#__PURE__*/add(tracerTag, nativeTracer));\n\n/**\n * The `FiberRef` holding the default `Effect` services.\n *\n * @since 2.0.0\n * @category fiberRefs\n */\nconst currentServices = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/DefaultServices/currentServices\"), () => fiberRefUnsafeMakeContext(liveServices));\n\n// circular with Clock\n\n/** @internal */\nconst sleep = duration => {\n  const decodedDuration = decode(duration);\n  return clockWith(clock => clock.sleep(decodedDuration));\n};\n\n/** @internal */\nconst clockWith = f => fiberRefGetWith(currentServices, services => f(get(services, clockTag)));\n\n/** @internal */\nconst currentTimeMillis = /*#__PURE__*/clockWith(clock => clock.currentTimeMillis);\n\n/** @internal */\nconst currentTimeNanos = /*#__PURE__*/clockWith(clock => clock.currentTimeNanos);\n\n/** @internal */\nconst withClock = /*#__PURE__*/dual(2, (effect, value) => fiberRefLocallyWith(currentServices, add(clockTag, value))(effect));\n\n// circular with ConfigProvider\n\n/** @internal */\nconst withConfigProvider = /*#__PURE__*/dual(2, (effect, value) => fiberRefLocallyWith(currentServices, add(configProviderTag, value))(effect));\n\n/** @internal */\nconst configProviderWith = f => fiberRefGetWith(currentServices, services => f(get(services, configProviderTag)));\n\n/** @internal */\nconst config = config => configProviderWith(_ => _.load(config));\n\n// circular with Random\n\n/** @internal */\nconst randomWith = f => fiberRefGetWith(currentServices, services => f(get(services, randomTag)));\n\n/** @internal */\nconst next = /*#__PURE__*/randomWith(random => random.next());\n\n/** @internal */\nconst nextInt = /*#__PURE__*/randomWith(random => random.nextInt());\n\n/** @internal */\nconst nextBoolean = /*#__PURE__*/randomWith(random => random.nextBoolean());\n\n/** @internal */\nconst nextRange = (min, max) => randomWith(random => random.nextRange(min, max));\n\n/** @internal */\nconst nextIntBetween = (min, max) => randomWith(random => random.nextIntBetween(min, max));\n\n/** @internal */\nconst shuffle = elements => randomWith(random => random.shuffle(elements));\n\n// circular with Tracer\n\n/** @internal */\nconst tracerWith = f => fiberRefGetWith(currentServices, services => f(get(services, tracerTag)));\n\n/** @internal */\nconst withTracer = /*#__PURE__*/dual(2, (effect, value) => fiberRefLocallyWith(currentServices, add(tracerTag, value))(effect));\n\nexport { clockWith, config, configProviderWith, currentServices, currentTimeMillis, currentTimeNanos, liveServices, next, nextBoolean, nextInt, nextIntBetween, nextRange, randomWith, shuffle, sleep, tracerWith, withClock, withConfigProvider, withTracer };\n","import { ClockTypeId as ClockTypeId$1, make as make$1, clockTag } from '../../internal/clock.esm.js';\nimport { sleep as sleep$1, currentTimeMillis as currentTimeMillis$1, currentTimeNanos as currentTimeNanos$1, clockWith as clockWith$1 } from '../../internal/defaultServices.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst ClockTypeId = ClockTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * Represents a time-based clock which provides functionality related to time\n * and scheduling.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst sleep = sleep$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst currentTimeMillis = currentTimeMillis$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst currentTimeNanos = currentTimeNanos$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst clockWith = clockWith$1;\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst Clock = clockTag;\n\nexport { Clock, ClockTypeId, clockWith, currentTimeMillis, currentTimeNanos, make, sleep };\n","import { equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { dual, pipe } from '../Function/dist/effect-Function.esm.js';\nimport { fromIterable } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { forEachSequentialDiscard, fiberRefSet } from './core.esm.js';\nimport { none, some, getOrElse } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { headNonEmpty, prepend, tailNonEmpty, empty as empty$1, isEmptyReadonlyArray, isNonEmptyReadonlyArray, of } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/** @internal */\nfunction unsafeMake(fiberRefLocals) {\n  return new FiberRefsImpl(fiberRefLocals);\n}\n\n/** @internal */\nfunction empty() {\n  return unsafeMake(new Map());\n}\n\n/** @internal */\nconst FiberRefsSym = /*#__PURE__*/Symbol.for(\"effect/FiberRefs\");\n\n/** @internal */\nclass FiberRefsImpl {\n  [FiberRefsSym] = FiberRefsSym;\n  constructor(locals) {\n    this.locals = locals;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst findAncestor = (_ref, _parentStack, _childStack, _childModified = false) => {\n  const ref = _ref;\n  let parentStack = _parentStack;\n  let childStack = _childStack;\n  let childModified = _childModified;\n  let ret = undefined;\n  while (ret === undefined) {\n    if (isNonEmptyReadonlyArray(parentStack) && isNonEmptyReadonlyArray(childStack)) {\n      const parentFiberId = headNonEmpty(parentStack)[0];\n      const parentAncestors = tailNonEmpty(parentStack);\n      const childFiberId = headNonEmpty(childStack)[0];\n      const childRefValue = headNonEmpty(childStack)[1];\n      const childAncestors = tailNonEmpty(childStack);\n      if (parentFiberId.startTimeMillis < childFiberId.startTimeMillis) {\n        childStack = childAncestors;\n        childModified = true;\n      } else if (parentFiberId.startTimeMillis > childFiberId.startTimeMillis) {\n        parentStack = parentAncestors;\n      } else {\n        if (parentFiberId.id < childFiberId.id) {\n          childStack = childAncestors;\n          childModified = true;\n        } else if (parentFiberId.id > childFiberId.id) {\n          parentStack = parentAncestors;\n        } else {\n          ret = [childRefValue, childModified];\n        }\n      }\n    } else {\n      ret = [ref.initial, true];\n    }\n  }\n  return ret;\n};\n\n/** @internal */\nconst joinAs = /*#__PURE__*/dual(3, (self, fiberId, that) => {\n  const parentFiberRefs = new Map(self.locals);\n  for (const [fiberRef, childStack] of that.locals) {\n    const childValue = headNonEmpty(childStack)[1];\n    if (!equals(headNonEmpty(childStack)[0], fiberId)) {\n      if (!parentFiberRefs.has(fiberRef)) {\n        if (equals(childValue, fiberRef.initial)) {\n          continue;\n        }\n        parentFiberRefs.set(fiberRef, [[fiberId, fiberRef.join(fiberRef.initial, childValue)]]);\n        continue;\n      }\n      const parentStack = parentFiberRefs.get(fiberRef);\n      const [ancestor, wasModified] = findAncestor(fiberRef, parentStack, childStack);\n      if (wasModified) {\n        const patch = fiberRef.diff(ancestor, childValue);\n        const oldValue = headNonEmpty(parentStack)[1];\n        const newValue = fiberRef.join(oldValue, fiberRef.patch(patch)(oldValue));\n        if (!equals(oldValue, newValue)) {\n          let newStack;\n          const parentFiberId = headNonEmpty(parentStack)[0];\n          if (equals(parentFiberId, fiberId)) {\n            newStack = prepend([parentFiberId, newValue])(tailNonEmpty(parentStack));\n          } else {\n            newStack = prepend([fiberId, newValue])(parentStack);\n          }\n          parentFiberRefs.set(fiberRef, newStack);\n        }\n      }\n    }\n  }\n  return new FiberRefsImpl(new Map(parentFiberRefs));\n});\n\n/** @internal */\nconst forkAs = /*#__PURE__*/dual(2, (self, childId) => {\n  const map = new Map();\n  for (const [fiberRef, stack] of self.locals.entries()) {\n    const oldValue = headNonEmpty(stack)[1];\n    const newValue = fiberRef.patch(fiberRef.fork)(oldValue);\n    if (equals(oldValue, newValue)) {\n      map.set(fiberRef, stack);\n    } else {\n      map.set(fiberRef, prepend([childId, newValue])(stack));\n    }\n  }\n  return new FiberRefsImpl(map);\n});\n\n/** @internal */\nconst fiberRefs = self => fromIterable(self.locals.keys());\n\n/** @internal */\nconst setAll = self => forEachSequentialDiscard(fiberRefs(self), fiberRef => fiberRefSet(fiberRef, getOrDefault(self, fiberRef)));\n\n/** @internal */\nconst delete_ = /*#__PURE__*/dual(2, (self, fiberRef) => {\n  const locals = new Map(self.locals);\n  locals.delete(fiberRef);\n  return new FiberRefsImpl(locals);\n});\n\n/** @internal */\nconst get = /*#__PURE__*/dual(2, (self, fiberRef) => {\n  if (!self.locals.has(fiberRef)) {\n    return none();\n  }\n  return some(headNonEmpty(self.locals.get(fiberRef))[1]);\n});\n\n/** @internal */\nconst getOrDefault = /*#__PURE__*/dual(2, (self, fiberRef) => pipe(get(self, fiberRef), getOrElse(() => fiberRef.initial)));\n\n/** @internal */\nconst updatedAs = /*#__PURE__*/dual(2, (self, {\n  fiberId,\n  fiberRef,\n  value\n}) => {\n  const oldStack = self.locals.has(fiberRef) ? self.locals.get(fiberRef) : empty$1();\n  let newStack;\n  if (isEmptyReadonlyArray(oldStack)) {\n    newStack = of([fiberId, value]);\n  } else {\n    const [currentId, currentValue] = headNonEmpty(oldStack);\n    if (equals(currentId, fiberId)) {\n      if (equals(currentValue, value)) {\n        return self;\n      } else {\n        newStack = prepend([fiberId, value])(tailNonEmpty(oldStack));\n      }\n    } else {\n      newStack = prepend([fiberId, value])(oldStack);\n    }\n  }\n  const locals = new Map(self.locals);\n  return new FiberRefsImpl(locals.set(fiberRef, newStack));\n});\n\nexport { FiberRefsImpl, FiberRefsSym, delete_, empty, fiberRefs, forkAs, get, getOrDefault, joinAs, setAll, unsafeMake, updatedAs };\n","import { FiberRefsSym as FiberRefsSym$1, delete_ as delete_$1, fiberRefs as fiberRefs$1, forkAs as forkAs$1, get as get$1, getOrDefault as getOrDefault$1, joinAs as joinAs$1, setAll as setAll$1, updatedAs as updatedAs$1, unsafeMake as unsafeMake$1, empty as empty$1 } from '../../internal/fiberRefs.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst FiberRefsSym = FiberRefsSym$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * `FiberRefs` is a data type that represents a collection of `FiberRef` values.\n *\n * This allows safely propagating `FiberRef` values across fiber boundaries, for\n * example between an asynchronous producer and consumer.\n *\n * @since 2.0.0\n * @category models\n */\n\nconst delete_ = delete_$1;\n\n/**\n * Returns a set of each `FiberRef` in this collection.\n *\n * @since 2.0.0\n * @category getters\n */\nconst fiberRefs = fiberRefs$1;\n\n/**\n * Forks this collection of fiber refs as the specified child fiber id. This\n * will potentially modify the value of the fiber refs, as determined by the\n * individual fiber refs that make up the collection.\n *\n * @since 2.0.0\n * @category utils\n */\nconst forkAs = forkAs$1;\n\n/**\n * Gets the value of the specified `FiberRef` in this collection of `FiberRef`\n * values if it exists or `None` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst get = get$1;\n\n/**\n * Gets the value of the specified `FiberRef` in this collection of `FiberRef`\n * values if it exists or the `initial` value of the `FiberRef` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst getOrDefault = getOrDefault$1;\n\n/**\n * Joins this collection of fiber refs to the specified collection, as the\n * specified fiber id. This will perform diffing and merging to ensure\n * preservation of maximum information from both child and parent refs.\n *\n * @since 2.0.0\n * @category utils\n */\nconst joinAs = joinAs$1;\n\n/**\n * Set each ref to either its value or its default.\n *\n * @since 2.0.0\n * @category utils\n */\nconst setAll = setAll$1;\n\n/**\n * Updates the value of the specified `FiberRef` using the provided `FiberId`\n *\n * @since 2.0.0\n * @category utils\n */\nconst updatedAs = updatedAs$1;\n\n/**\n * Note: it will not copy the provided Map, make sure to provide a fresh one.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeMake = unsafeMake$1;\n\n/**\n * The empty collection of `FiberRef` values.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst empty = empty$1;\n\nexport { FiberRefsSym, delete_ as delete, empty, fiberRefs, forkAs, get, getOrDefault, joinAs, setAll, unsafeMake, updatedAs };\n","import { equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { getOrDefault, updatedAs, delete_ } from '../fiberRefs.esm.js';\nimport { headNonEmpty, isNonEmptyReadonlyArray, tailNonEmpty, prepend, of } from '../../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/** @internal */\nconst OP_EMPTY = \"Empty\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ADD = \"Add\";\n\n/** @internal */\n\n/** @internal */\nconst OP_REMOVE = \"Remove\";\n\n/** @internal */\n\n/** @internal */\nconst OP_UPDATE = \"Update\";\n\n/** @internal */\n\n/** @internal */\nconst OP_AND_THEN = \"AndThen\";\n\n/** @internal */\n\n/** @internal */\nconst empty = {\n  _tag: OP_EMPTY\n};\n\n/** @internal */\nconst diff = (oldValue, newValue) => {\n  const missingLocals = new Map(oldValue.locals);\n  let patch = empty;\n  for (const [fiberRef, pairs] of newValue.locals.entries()) {\n    const newValue = headNonEmpty(pairs)[1];\n    const old = missingLocals.get(fiberRef);\n    if (old !== undefined) {\n      const oldValue = headNonEmpty(old)[1];\n      if (!equals(oldValue, newValue)) {\n        patch = combine({\n          _tag: OP_UPDATE,\n          fiberRef,\n          patch: fiberRef.diff(oldValue, newValue)\n        })(patch);\n      }\n    } else {\n      patch = combine({\n        _tag: OP_ADD,\n        fiberRef,\n        value: newValue\n      })(patch);\n    }\n    missingLocals.delete(fiberRef);\n  }\n  for (const [fiberRef] of missingLocals.entries()) {\n    patch = combine({\n      _tag: OP_REMOVE,\n      fiberRef\n    })(patch);\n  }\n  return patch;\n};\n\n/** @internal */\nconst combine = /*#__PURE__*/dual(2, (self, that) => ({\n  _tag: OP_AND_THEN,\n  first: self,\n  second: that\n}));\n\n/** @internal */\nconst patch = /*#__PURE__*/dual(3, (self, fiberId, oldValue) => {\n  let fiberRefs = oldValue;\n  let patches = of(self);\n  while (isNonEmptyReadonlyArray(patches)) {\n    const head = headNonEmpty(patches);\n    const tail = tailNonEmpty(patches);\n    switch (head._tag) {\n      case OP_EMPTY:\n        {\n          patches = tail;\n          break;\n        }\n      case OP_ADD:\n        {\n          fiberRefs = updatedAs(fiberRefs, {\n            fiberId,\n            fiberRef: head.fiberRef,\n            value: head.value\n          });\n          patches = tail;\n          break;\n        }\n      case OP_REMOVE:\n        {\n          fiberRefs = delete_(fiberRefs, head.fiberRef);\n          patches = tail;\n          break;\n        }\n      case OP_UPDATE:\n        {\n          const value = getOrDefault(fiberRefs, head.fiberRef);\n          fiberRefs = updatedAs(fiberRefs, {\n            fiberId,\n            fiberRef: head.fiberRef,\n            value: head.fiberRef.patch(head.patch)(value)\n          });\n          patches = tail;\n          break;\n        }\n      case OP_AND_THEN:\n        {\n          patches = prepend(head.first)(prepend(head.second)(tail));\n          break;\n        }\n    }\n  }\n  return fiberRefs;\n});\n\nexport { OP_ADD, OP_AND_THEN, OP_EMPTY, OP_REMOVE, OP_UPDATE, combine, diff, empty, patch };\n","import { symbol as symbol$1 } from '../../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst MetricLabelSymbolKey = \"effect/MetricLabel\";\n\n/** @internal */\nconst MetricLabelTypeId = /*#__PURE__*/Symbol.for(MetricLabelSymbolKey);\n\n/** @internal */\nclass MetricLabelImpl {\n  [MetricLabelTypeId] = MetricLabelTypeId;\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n  [symbol]() {\n    return pipe(hash(MetricLabelSymbolKey), combine(hash(this.key)), combine(hash(this.value)));\n  }\n  [symbol$1](that) {\n    return isMetricLabel(that) && this.key === that.key && this.value === that.value;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst make = (key, value) => {\n  return new MetricLabelImpl(key, value);\n};\n\n/** @internal */\nconst isMetricLabel = u => hasProperty(u, MetricLabelTypeId);\n\nexport { MetricLabelTypeId, isMetricLabel, make };\n","/** @internal */\nclass SingleShotGen {\n  called = false;\n  constructor(self) {\n    this.self = self;\n  }\n  next(a) {\n    return this.called ? {\n      value: a,\n      done: true\n    } : (this.called = true, {\n      value: this.self,\n      done: false\n    });\n  }\n  return(a) {\n    return {\n      value: a,\n      done: true\n    };\n  }\n  throw(e) {\n    throw e;\n  }\n  [Symbol.iterator]() {\n    return new SingleShotGen(this.self);\n  }\n}\n\nexport { SingleShotGen };\n","import { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { logLevelAll, logLevelFatal, logLevelError, logLevelWarning, logLevelInfo, logLevelDebug, logLevelTrace, logLevelNone, allLogLevels, fiberRefLocally, currentLogLevel } from '../../internal/core.esm.js';\nimport { Order as Order$1 } from '../../Number/dist/effect-Number.esm.js';\nimport { mapInput, lessThan as lessThan$1, lessThanOrEqualTo, greaterThan as greaterThan$1, greaterThanOrEqualTo } from '../../Order/dist/effect-Order.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * A `LogLevel` represents the log level associated with an individual logging\n * operation. Log levels are used both to describe the granularity (or\n * importance) of individual log statements, as well as to enable tuning\n * verbosity of log output.\n *\n * @since 2.0.0\n * @category model\n * @property ordinal - The priority of the log message. Larger values indicate higher priority.\n * @property label - A label associated with the log level.\n * @property syslog -The syslog severity level of the log level.\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst All = logLevelAll;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Fatal = logLevelFatal;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Error = logLevelError;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Warning = logLevelWarning;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Info = logLevelInfo;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Debug = logLevelDebug;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Trace = logLevelTrace;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst None = logLevelNone;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst allLevels = allLogLevels;\n\n/**\n * Locally applies the specified `LogLevel` to an `Effect` workflow, reverting\n * to the previous `LogLevel` after the `Effect` workflow completes.\n *\n * @since 2.0.0\n * @category utils\n */\nconst locally = /*#__PURE__*/dual(2, (use, self) => fiberRefLocally(use, currentLogLevel, self));\n\n/**\n * @since 2.0.0\n * @category instances\n */\nconst Order = /*#__PURE__*/pipe(Order$1, /*#__PURE__*/mapInput(level => level.ordinal));\n\n/**\n * @since 2.0.0\n * @category ordering\n */\nconst lessThan = /*#__PURE__*/lessThan$1(Order);\n\n/**\n * @since 2.0.0\n * @category ordering\n */\nconst lessThanEqual = /*#__PURE__*/lessThanOrEqualTo(Order);\n\n/**\n * @since 2.0.0\n * @category ordering\n */\nconst greaterThan = /*#__PURE__*/greaterThan$1(Order);\n\n/**\n * @since 2.0.0\n * @category ordering\n */\nconst greaterThanEqual = /*#__PURE__*/greaterThanOrEqualTo(Order);\n\n/**\n * @since 2.0.0\n * @category conversions\n */\nconst fromLiteral = _ => {\n  switch (_) {\n    case \"All\":\n      {\n        return All;\n      }\n    case \"Debug\":\n      {\n        return Debug;\n      }\n    case \"Error\":\n      {\n        return Error;\n      }\n    case \"Fatal\":\n      {\n        return Fatal;\n      }\n    case \"Info\":\n      {\n        return Info;\n      }\n    case \"Trace\":\n      {\n        return Trace;\n      }\n    case \"None\":\n      {\n        return None;\n      }\n    case \"Warning\":\n      {\n        return Warning;\n      }\n  }\n};\n\nexport { All, Debug, Error, Fatal, Info, None, Order, Trace, Warning, allLevels, fromLiteral, greaterThan, greaterThanEqual, lessThan, lessThanEqual, locally };\n","/** @internal */\nconst make = (label, startTime) => ({\n  label,\n  startTime\n});\n\n/** @internal */\nconst render = now => {\n  return self => {\n    const label = self.label.replace(/[\\s=\"]/g, \"_\");\n    return `${label}=${now - self.startTime}ms`;\n  };\n};\n\nexport { make, render };\n","import { make as make$1, render as render$1 } from '../../internal/logSpan.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * @since 2.0.0\n * @category destructors\n */\nconst render = render$1;\n\nexport { make, render };\n","import { dual } from '../Function/dist/effect-Function.esm.js';\nimport { sync } from './core.esm.js';\nimport { make as make$1, get as get$1, set as set$1 } from '../MutableRef/dist/effect-MutableRef.esm.js';\nimport { match } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\n\n/** @internal */\nconst RefTypeId = /*#__PURE__*/Symbol.for(\"effect/Ref\");\n\n/** @internal */\nconst refVariance = {\n  _A: _ => _\n};\nclass RefImpl {\n  [RefTypeId] = refVariance;\n  constructor(ref) {\n    this.ref = ref;\n  }\n  modify(f) {\n    return sync(() => {\n      const current = get$1(this.ref);\n      const [b, a] = f(current);\n      if (current !== a) {\n        set$1(a)(this.ref);\n      }\n      return b;\n    });\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst unsafeMake = value => new RefImpl(make$1(value));\n\n/** @internal */\nconst make = value => sync(() => unsafeMake(value));\n\n/** @internal */\nconst get = self => self.modify(a => [a, a]);\n\n/** @internal */\nconst set = /*#__PURE__*/dual(2, (self, value) => self.modify(() => [void 0, value]));\n\n/** @internal */\nconst getAndSet = /*#__PURE__*/dual(2, (self, value) => self.modify(a => [a, value]));\n\n/** @internal */\nconst getAndUpdate = /*#__PURE__*/dual(2, (self, f) => self.modify(a => [a, f(a)]));\n\n/** @internal */\nconst getAndUpdateSome = /*#__PURE__*/dual(2, (self, pf) => self.modify(value => {\n  const option = pf(value);\n  switch (option._tag) {\n    case \"None\":\n      {\n        return [value, value];\n      }\n    case \"Some\":\n      {\n        return [value, option.value];\n      }\n  }\n}));\n\n/** @internal */\nconst setAndGet = /*#__PURE__*/dual(2, (self, value) => self.modify(() => [value, value]));\n\n/** @internal */\nconst modify = /*#__PURE__*/dual(2, (self, f) => self.modify(f));\n\n/** @internal */\nconst modifySome = /*#__PURE__*/dual(3, (self, fallback, pf) => self.modify(value => {\n  const option = pf(value);\n  switch (option._tag) {\n    case \"None\":\n      {\n        return [fallback, value];\n      }\n    case \"Some\":\n      {\n        return option.value;\n      }\n  }\n}));\n\n/** @internal */\nconst update = /*#__PURE__*/dual(2, (self, f) => self.modify(a => [void 0, f(a)]));\n\n/** @internal */\nconst updateAndGet = /*#__PURE__*/dual(2, (self, f) => self.modify(a => {\n  const result = f(a);\n  return [result, result];\n}));\n\n/** @internal */\nconst updateSome = /*#__PURE__*/dual(2, (self, f) => self.modify(a => [void 0, match(f(a), {\n  onNone: () => a,\n  onSome: b => b\n})]));\n\n/** @internal */\nconst updateSomeAndGet = /*#__PURE__*/dual(2, (self, pf) => self.modify(value => {\n  const option = pf(value);\n  switch (option._tag) {\n    case \"None\":\n      {\n        return [value, value];\n      }\n    case \"Some\":\n      {\n        return [option.value, option.value];\n      }\n  }\n}));\n\n/** @internal */\nconst unsafeGet = self => get$1(self.ref);\n\nexport { RefTypeId, get, getAndSet, getAndUpdate, getAndUpdateSome, make, modify, modifySome, refVariance, set, setAndGet, unsafeGet, unsafeMake, update, updateAndGet, updateSome, updateSomeAndGet };\n","import { RefTypeId as RefTypeId$1, make as make$1, get as get$1, getAndSet as getAndSet$1, getAndUpdate as getAndUpdate$1, getAndUpdateSome as getAndUpdateSome$1, modify as modify$1, modifySome as modifySome$1, set as set$1, setAndGet as setAndGet$1, update as update$1, updateAndGet as updateAndGet$1, updateSome as updateSome$1, updateSomeAndGet as updateSomeAndGet$1, unsafeMake as unsafeMake$1 } from '../../internal/ref.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst RefTypeId = RefTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst get = get$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst getAndSet = getAndSet$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst getAndUpdate = getAndUpdate$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst getAndUpdateSome = getAndUpdateSome$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst modify = modify$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst modifySome = modifySome$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst set = set$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst setAndGet = setAndGet$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst update = update$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst updateAndGet = updateAndGet$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst updateSome = updateSome$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst updateSomeAndGet = updateSomeAndGet$1;\n\n/**\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeMake = unsafeMake$1;\n\nexport { RefTypeId, get, getAndSet, getAndUpdate, getAndUpdateSome, make, modify, modifySome, set, setAndGet, unsafeMake, update, updateAndGet, updateSome, updateSomeAndGet };\n","import { tracerWith as tracerWith$1 } from '../../internal/defaultServices.esm.js';\nimport { TracerTypeId as TracerTypeId$1, spanTag, tracerTag, make as make$1, externalSpan as externalSpan$1 } from '../../internal/tracer.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n */\nconst TracerTypeId = TracerTypeId$1;\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category tags\n */\nconst ParentSpan = spanTag;\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category tags\n */\nconst Tracer = tracerTag;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst externalSpan = externalSpan$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst tracerWith = tracerWith$1;\n\nexport { ParentSpan, Tracer, TracerTypeId, externalSpan, make, tracerWith };\n","import { append, toReadonlyArray, fromIterable as fromIterable$2, isNonEmpty, headNonEmpty, tailNonEmpty } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { clockWith as clockWith$1, sleep as sleep$1, currentTimeMillis, currentTimeNanos } from '../Clock/dist/effect-Clock.esm.js';\nimport { add, unsafeGet, getOption, empty as empty$1 } from '../Context/dist/effect-Context.esm.js';\nimport { nanos } from '../Duration/dist/effect-Duration.esm.js';\nimport { right, left } from '../Either/dist/effect-Either.esm.js';\nimport { none as none$1 } from '../FiberId/dist/effect-FiberId.esm.js';\nimport { setAll, joinAs } from '../FiberRefs/dist/effect-FiberRefs.esm.js';\nimport { dual, identity, constVoid, constTrue, constFalse, pipe } from '../Function/dist/effect-Function.esm.js';\nimport { set, forEach } from '../HashMap/dist/effect-HashMap.esm.js';\nimport { fromIterable as fromIterable$1, union, size } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { fail, find, isDieType, empty, failures, failureOrCause, keepDefects, flatten, NoSuchElementException, isNoSuchElementException, interruptors, IllegalArgumentException, isCause } from './cause.esm.js';\nimport { fiberRefLocallyWith, currentLogAnnotations, isEffect, map, mapError, asyncEither, unit, sync, makeEffectError, catchAll, fail as fail$1, catchAllCause, unified, failCause, matchCauseEffect, succeed, catchIf, matchCause, zipRight, withFiberRuntime, flatMap, suspend, context, orElse, yieldNow, dieSync, dieMessage, failSync, flip, matchEffect, currentLogSpan, fiberRefGet, failCauseSync, intoDeferred, deferredAwait, as, zip, updateRuntimeFlags, deferredMake, asUnit, whenEffect, async, contextWithEffect, provideContext, currentMetricLabels, mapInputContext, currentTracerSpanAnnotations, currentTracerSpanLinks, acquireUseRelease, currentInterruptedCause, interrupt, runtimeFlags, fiberRefGetWith, currentTracerTimingEnabled, exitSucceed, exitDie } from './core.esm.js';\nimport { randomWith } from './defaultServices.esm.js';\nimport { diff, patch } from './fiberRefs/patch.esm.js';\nimport { make as make$2 } from './metric/label.esm.js';\nimport { diff as diff$1 } from './runtimeFlags.esm.js';\nimport { SingleShotGen } from './singleShotGen.esm.js';\nimport { spanTag } from './tracer.esm.js';\nimport { prepend, empty as empty$2 } from '../List/dist/effect-List.esm.js';\nimport { Trace, Debug, Info, Warning, Error, Fatal } from '../LogLevel/dist/effect-LogLevel.esm.js';\nimport { make } from '../LogSpan/dist/effect-LogSpan.esm.js';\nimport { some, none as none$2, match as match$1, fromNullable as fromNullable$1 } from '../Option/dist/effect-Option.esm.js';\nimport { hasProperty, isTagged, isString } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { fromIterable, reduce as reduce$1 } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\nimport { make as make$1, getAndSet, get } from '../Ref/dist/effect-Ref.esm.js';\nimport { tracerWith as tracerWith$1 } from '../Tracer/dist/effect-Tracer.esm.js';\n\n/* @internal */\nconst annotateLogs = /*#__PURE__*/dual(args => isEffect(args[0]), function () {\n  const args = arguments;\n  return fiberRefLocallyWith(args[0], currentLogAnnotations, typeof args[1] === \"string\" ? set(args[1], args[2]) : annotations => Object.entries(args[1]).reduce((acc, [key, value]) => set(acc, key, value), annotations));\n});\n\n/* @internal */\nconst asSome = self => map(self, some);\n\n/* @internal */\nconst asSomeError = self => mapError(self, some);\n\n/* @internal */\nconst asyncOption = (register, blockingOn = none$1) => asyncEither(cb => {\n  const option = register(cb);\n  switch (option._tag) {\n    case \"None\":\n      {\n        return left(unit);\n      }\n    case \"Some\":\n      {\n        return right(option.value);\n      }\n  }\n}, blockingOn);\n\n/* @internal */\nconst try_ = arg => {\n  let evaluate;\n  let onFailure = undefined;\n  if (typeof arg === \"function\") {\n    evaluate = arg;\n  } else {\n    evaluate = arg.try;\n    onFailure = arg.catch;\n  }\n  return sync(() => {\n    try {\n      return evaluate();\n    } catch (error) {\n      throw makeEffectError(fail(onFailure ? onFailure(error) : error));\n    }\n  });\n};\n\n/* @internal */\nconst _catch = /*#__PURE__*/dual(\n// @ts-expect-error\n3, (self, tag, options) => catchAll(self, e => {\n  if (hasProperty(e, tag) && e[tag] === options.failure) {\n    return options.onFailure(e);\n  }\n  return fail$1(e);\n}));\n\n/* @internal */\nconst catchAllDefect = /*#__PURE__*/dual(2, (self, f) => catchAllCause(self, unified(cause => {\n  const option = find(cause, _ => isDieType(_) ? some(_) : none$2());\n  switch (option._tag) {\n    case \"None\":\n      {\n        return failCause(cause);\n      }\n    case \"Some\":\n      {\n        return f(option.value.defect);\n      }\n  }\n})));\n\n/* @internal */\nconst catchSomeCause = /*#__PURE__*/dual(2, (self, f) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const option = f(cause);\n    switch (option._tag) {\n      case \"None\":\n        {\n          return failCause(cause);\n        }\n      case \"Some\":\n        {\n          return option.value;\n        }\n    }\n  },\n  onSuccess: succeed\n}));\n\n/* @internal */\nconst catchSomeDefect = /*#__PURE__*/dual(2, (self, pf) => catchAllCause(self, unified(cause => {\n  const option = find(cause, _ => isDieType(_) ? some(_) : none$2());\n  switch (option._tag) {\n    case \"None\":\n      {\n        return failCause(cause);\n      }\n    case \"Some\":\n      {\n        const optionEffect = pf(option.value.defect);\n        return optionEffect._tag === \"Some\" ? optionEffect.value : failCause(cause);\n      }\n  }\n})));\n\n/* @internal */\nconst catchTag = /*#__PURE__*/dual(3, (self, k, f) => catchIf(self, isTagged(k), f));\n\n/** @internal */\nconst catchTags = /*#__PURE__*/dual(2, (self, cases) => {\n  let keys;\n  return catchIf(self, e => {\n    keys ??= Object.keys(cases);\n    return hasProperty(e, \"_tag\") && isString(e[\"_tag\"]) && keys.includes(e[\"_tag\"]);\n  }, e => cases[e[\"_tag\"]](e));\n});\n\n/* @internal */\nconst cause = self => matchCause(self, {\n  onFailure: identity,\n  onSuccess: () => empty\n});\n\n/* @internal */\nconst clockWith = clockWith$1;\n\n/* @internal */\nconst clock = /*#__PURE__*/clockWith(succeed);\n\n/* @internal */\nconst delay = /*#__PURE__*/dual(2, (self, duration) => zipRight(sleep$1(duration), self));\n\n/* @internal */\nconst descriptorWith = f => withFiberRuntime((state, status) => f({\n  id: state.id(),\n  status,\n  interruptors: interruptors(state.getFiberRef(currentInterruptedCause))\n}));\n\n/* @internal */\nconst allowInterrupt = /*#__PURE__*/descriptorWith(descriptor => size(descriptor.interruptors) > 0 ? interrupt : unit);\n\n/* @internal */\nconst descriptor = /*#__PURE__*/descriptorWith(succeed);\n\n/* @internal */\nconst diffFiberRefs = self => summarized(self, fiberRefs, diff);\n\n/* @internal */\nconst diffFiberRefsAndRuntimeFlags = self => summarized(self, zip(fiberRefs, runtimeFlags), ([refs, flags], [refsNew, flagsNew]) => [diff(refs, refsNew), diff$1(flags, flagsNew)]);\n\n/* @internal */\nconst Do = /*#__PURE__*/succeed({});\n\n/* @internal */\nconst bind = /*#__PURE__*/dual(3, (self, tag, f) => flatMap(self, k => map(f(k), a => ({\n  ...k,\n  [tag]: a\n}))));\n\n/* @internal */\nconst bindTo = /*#__PURE__*/dual(2, (self, tag) => map(self, a => ({\n  [tag]: a\n})));\n\n/* @internal */\nconst bindValue = /*#__PURE__*/dual(3, (self, tag, f) => map(self, k => ({\n  ...k,\n  [tag]: f(k)\n})));\n\n/* @internal */\nconst dropUntil = /*#__PURE__*/dual(2, (elements, predicate) => suspend(() => {\n  const iterator = elements[Symbol.iterator]();\n  const builder = [];\n  let next;\n  let dropping = succeed(false);\n  let i = 0;\n  while ((next = iterator.next()) && !next.done) {\n    const a = next.value;\n    const index = i++;\n    dropping = flatMap(dropping, bool => {\n      if (bool) {\n        builder.push(a);\n        return succeed(true);\n      }\n      return predicate(a, index);\n    });\n  }\n  return map(dropping, () => builder);\n}));\n\n/* @internal */\nconst dropWhile = /*#__PURE__*/dual(2, (elements, f) => suspend(() => {\n  const iterator = elements[Symbol.iterator]();\n  const builder = [];\n  let next;\n  let dropping = succeed(true);\n  let i = 0;\n  while ((next = iterator.next()) && !next.done) {\n    const a = next.value;\n    const index = i++;\n    dropping = flatMap(dropping, d => map(d ? f(a, index) : succeed(false), b => {\n      if (!b) {\n        builder.push(a);\n      }\n      return b;\n    }));\n  }\n  return map(dropping, () => builder);\n}));\n\n/* @internal */\nconst contextWith = f => map(context(), f);\n\n/* @internal */\nconst eventually = self => orElse(self, () => flatMap(yieldNow(), () => eventually(self)));\n\n/* @internal */\nconst filterOrDie = /*#__PURE__*/dual(3, (self, filter, orDieWith) => filterOrElse(self, filter, a => dieSync(() => orDieWith(a))));\n\n/* @internal */\nconst filterOrDieMessage = /*#__PURE__*/dual(3, (self, filter, message) => filterOrElse(self, filter, () => dieMessage(message)));\n\n/* @internal */\nconst filterOrElse = /*#__PURE__*/dual(3, (self, filter, orElse) => flatMap(self, a => filter(a) ? succeed(a) : orElse(a)));\n\n/* @internal */\nconst filterOrFail = /*#__PURE__*/dual(3, (self, filter, orFailWith) => filterOrElse(self, filter, a => failSync(() => orFailWith(a))));\n\n/* @internal */\nconst findFirst = /*#__PURE__*/dual(2, (elements, f) => suspend(() => {\n  const iterator = elements[Symbol.iterator]();\n  const next = iterator.next();\n  if (!next.done) {\n    return findLoop(iterator, 0, f, next.value);\n  }\n  return succeed(none$2());\n}));\nconst findLoop = (iterator, index, f, value) => flatMap(f(value, index), result => {\n  if (result) {\n    return succeed(some(value));\n  }\n  const next = iterator.next();\n  if (!next.done) {\n    return findLoop(iterator, index + 1, f, next.value);\n  }\n  return succeed(none$2());\n});\n\n/* @internal */\nconst firstSuccessOf = effects => suspend(() => {\n  const list = fromIterable$2(effects);\n  if (!isNonEmpty(list)) {\n    return dieSync(() => IllegalArgumentException(`Received an empty collection of effects`));\n  }\n  return pipe(tailNonEmpty(list), reduce$1(headNonEmpty(list), (left, right) => orElse(left, () => right)));\n});\n\n/* @internal */\nconst flipWith = /*#__PURE__*/dual(2, (self, f) => flip(f(flip(self))));\n\n/* @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => matchEffect(self, {\n  onFailure: e => succeed(onFailure(e)),\n  onSuccess: a => succeed(onSuccess(a))\n}));\n\n/* @internal */\nconst every = /*#__PURE__*/dual(2, (elements, f) => suspend(() => forAllLoop(elements[Symbol.iterator](), 0, f)));\nconst forAllLoop = (iterator, index, f) => {\n  const next = iterator.next();\n  return next.done ? succeed(true) : flatMap(f(next.value, index), b => b ? forAllLoop(iterator, index + 1, f) : succeed(b));\n};\n\n/* @internal */\nconst forever = self => {\n  const loop = flatMap(flatMap(self, () => yieldNow()), () => loop);\n  return loop;\n};\n\n/** @internal */\nclass EffectGen {\n  constructor(value) {\n    this.value = value;\n  }\n  [Symbol.iterator]() {\n    return new SingleShotGen(this);\n  }\n}\nconst adapter = function () {\n  let x = arguments[0];\n  for (let i = 1; i < arguments.length; i++) {\n    x = arguments[i](x);\n  }\n  return new EffectGen(x);\n};\n\n/**\n * Inspired by https://github.com/tusharmath/qio/pull/22 (revised)\n  @internal */\nconst gen = function () {\n  let f;\n  if (arguments.length === 1) {\n    f = arguments[0];\n  } else {\n    f = arguments[1].bind(arguments[0]);\n  }\n  return suspend(() => {\n    const iterator = f(adapter);\n    const state = iterator.next();\n    const run = state => state.done ? succeed(state.value) : pipe(state.value.value, flatMap(val => run(iterator.next(val))));\n    return run(state);\n  });\n};\n\n/* @internal */\nconst fiberRefs = /*#__PURE__*/withFiberRuntime(state => succeed(state.getFiberRefs()));\n\n/* @internal */\nconst head = self => matchEffect(self, {\n  onFailure: e => fail$1(some(e)),\n  onSuccess: as => {\n    const iterator = as[Symbol.iterator]();\n    const next = iterator.next();\n    if (next.done) {\n      return fail$1(none$2());\n    }\n    return succeed(next.value);\n  }\n});\n\n/* @internal */\nconst ignore = self => match(self, {\n  onFailure: constVoid,\n  onSuccess: constVoid\n});\n\n/* @internal */\nconst ignoreLogged = self => matchCauseEffect(self, {\n  onFailure: cause => logDebug(cause, \"An error was silently ignored because it is not anticipated to be useful\"),\n  onSuccess: () => unit\n});\n\n/* @internal */\nconst inheritFiberRefs = childFiberRefs => updateFiberRefs((parentFiberId, parentFiberRefs) => joinAs(parentFiberRefs, parentFiberId, childFiberRefs));\n\n/* @internal */\nconst isFailure = self => match(self, {\n  onFailure: constTrue,\n  onSuccess: constFalse\n});\n\n/* @internal */\nconst isSuccess = self => match(self, {\n  onFailure: constFalse,\n  onSuccess: constTrue\n});\n\n/* @internal */\nconst iterate = (initial, options) => suspend(() => {\n  if (options.while(initial)) {\n    return flatMap(options.body(initial), z2 => iterate(z2, options));\n  }\n  return succeed(initial);\n});\nconst logWithLevel = level => (messageOrCause, supplementary) => {\n  const levelOption = fromNullable$1(level);\n  let message;\n  let cause;\n  if (isCause(messageOrCause)) {\n    cause = messageOrCause;\n    message = supplementary ?? \"\";\n  } else {\n    message = messageOrCause;\n    cause = supplementary ?? empty;\n  }\n  return withFiberRuntime(fiberState => {\n    fiberState.log(message, cause, levelOption);\n    return unit;\n  });\n};\n\n/** @internal */\nconst log = /*#__PURE__*/logWithLevel();\n\n/** @internal */\nconst logTrace = /*#__PURE__*/logWithLevel(Trace);\n\n/** @internal */\nconst logDebug = /*#__PURE__*/logWithLevel(Debug);\n\n/** @internal */\nconst logInfo = /*#__PURE__*/logWithLevel(Info);\n\n/** @internal */\nconst logWarning = /*#__PURE__*/logWithLevel(Warning);\n\n/** @internal */\nconst logError = /*#__PURE__*/logWithLevel(Error);\n\n/** @internal */\nconst logFatal = /*#__PURE__*/logWithLevel(Fatal);\n\n/* @internal */\nconst withLogSpan = /*#__PURE__*/dual(2, (effect, label) => flatMap(currentTimeMillis, now => fiberRefLocallyWith(effect, currentLogSpan, prepend(make(label, now)))));\n\n/* @internal */\nconst logAnnotations = /*#__PURE__*/fiberRefGet(currentLogAnnotations);\n\n/* @internal */\n// @ts-expect-error\nconst loop = (initial, options) => options.discard ? loopDiscard(initial, options.while, options.step, options.body) : map(loopInternal(initial, options.while, options.step, options.body), x => Array.from(x));\nconst loopInternal = (initial, cont, inc, body) => suspend(() => cont(initial) ? flatMap(body(initial), a => map(loopInternal(inc(initial), cont, inc, body), prepend(a))) : sync(() => empty$2()));\nconst loopDiscard = (initial, cont, inc, body) => suspend(() => cont(initial) ? flatMap(body(initial), () => loopDiscard(inc(initial), cont, inc, body)) : unit);\n\n/* @internal */\nconst mapAccum = /*#__PURE__*/dual(3, (elements, zero, f) => suspend(() => {\n  const iterator = elements[Symbol.iterator]();\n  const builder = [];\n  let result = succeed(zero);\n  let next;\n  let i = 0;\n  while (!(next = iterator.next()).done) {\n    const index = i++;\n    result = flatMap(result, state => map(f(state, next.value, index), ([z, b]) => {\n      builder.push(b);\n      return z;\n    }));\n  }\n  return map(result, z => [z, builder]);\n}));\n\n/* @internal */\nconst mapErrorCause = /*#__PURE__*/dual(2, (self, f) => matchCauseEffect(self, {\n  onFailure: c => failCauseSync(() => f(c)),\n  onSuccess: succeed\n}));\n\n/* @internal */\nconst memoize = self => pipe(deferredMake(), flatMap(deferred => pipe(diffFiberRefsAndRuntimeFlags(self), intoDeferred(deferred), once, map(complete => zipRight(complete, pipe(deferredAwait(deferred), flatMap(([patch, a]) => as(zip(patchFiberRefs(patch[0]), updateRuntimeFlags(patch[1])), a))))))));\n\n/* @internal */\nconst merge = self => matchEffect(self, {\n  onFailure: e => succeed(e),\n  onSuccess: succeed\n});\n\n/* @internal */\nconst negate = self => map(self, b => !b);\n\n/* @internal */\nconst none = self => matchEffect(self, {\n  onFailure: e => fail$1(some(e)),\n  onSuccess: option => {\n    switch (option._tag) {\n      case \"None\":\n        {\n          return unit;\n        }\n      case \"Some\":\n        {\n          return fail$1(none$2());\n        }\n    }\n  }\n});\n\n/* @internal */\nconst once = self => map(make$1(true), ref => asUnit(whenEffect(self, getAndSet(ref, false))));\n\n/* @internal */\nconst option = self => matchEffect(self, {\n  onFailure: () => succeed(none$2()),\n  onSuccess: a => succeed(some(a))\n});\n\n/* @internal */\nconst orElseFail = /*#__PURE__*/dual(2, (self, evaluate) => orElse(self, () => failSync(evaluate)));\n\n/* @internal */\nconst orElseSucceed = /*#__PURE__*/dual(2, (self, evaluate) => orElse(self, () => sync(evaluate)));\n\n/* @internal */\nconst parallelErrors = self => matchCauseEffect(self, {\n  onFailure: cause => {\n    const errors = Array.from(failures(cause));\n    return errors.length === 0 ? failCause(cause) : fail$1(errors);\n  },\n  onSuccess: succeed\n});\n\n/* @internal */\nconst patchFiberRefs = patch$1 => updateFiberRefs((fiberId, fiberRefs) => pipe(patch$1, patch(fiberId, fiberRefs)));\n\n/* @internal */\nconst promise = evaluate => evaluate.length >= 1 ? async((resolve, signal) => {\n  evaluate(signal).then(a => resolve(exitSucceed(a))).catch(e => resolve(exitDie(e)));\n}) : async(resolve => {\n  evaluate().then(a => resolve(exitSucceed(a))).catch(e => resolve(exitDie(e)));\n});\n\n/* @internal */\nconst provideService = /*#__PURE__*/dual(3, (self, tag, service) => contextWithEffect(env => provideContext(self, add(env, tag, service))));\n\n/* @internal */\nconst provideServiceEffect = /*#__PURE__*/dual(3, (self, tag, effect) => contextWithEffect(env => flatMap(effect, service => provideContext(self, pipe(env, add(tag, service))))));\n\n/* @internal */\nconst random = /*#__PURE__*/randomWith(succeed);\n\n/* @internal */\nconst reduce = /*#__PURE__*/dual(3, (elements, zero, f) => fromIterable(elements).reduce((acc, el, i) => flatMap(acc, a => f(a, el, i)), succeed(zero)));\n\n/* @internal */\nconst reduceRight = /*#__PURE__*/dual(3, (elements, zero, f) => fromIterable(elements).reduceRight((acc, el, i) => flatMap(acc, a => f(el, a, i)), succeed(zero)));\n\n/* @internal */\nconst reduceWhile = /*#__PURE__*/dual(3, (elements, zero, options) => flatMap(sync(() => elements[Symbol.iterator]()), iterator => reduceWhileLoop(iterator, 0, zero, options.while, options.body)));\nconst reduceWhileLoop = (iterator, index, state, predicate, f) => {\n  const next = iterator.next();\n  if (!next.done && predicate(state)) {\n    return flatMap(f(state, next.value, index), nextState => reduceWhileLoop(iterator, index + 1, nextState, predicate, f));\n  }\n  return succeed(state);\n};\n\n/* @internal */\nconst repeatN = /*#__PURE__*/dual(2, (self, n) => suspend(() => repeatNLoop(self, n)));\n\n/* @internal */\nconst repeatNLoop = (self, n) => flatMap(self, a => n <= 0 ? succeed(a) : zipRight(yieldNow(), repeatNLoop(self, n - 1)));\n\n/* @internal */\nconst sandbox = self => matchCauseEffect(self, {\n  onFailure: fail$1,\n  onSuccess: succeed\n});\n\n/* @internal */\nconst setFiberRefs = fiberRefs => suspend(() => setAll(fiberRefs));\n\n/* @internal */\nconst sleep = sleep$1;\n\n/* @internal */\nconst succeedNone = /*#__PURE__*/succeed( /*#__PURE__*/none$2());\n\n/* @internal */\nconst succeedSome = value => succeed(some(value));\n\n/* @internal */\nconst summarized = /*#__PURE__*/dual(3, (self, summary, f) => flatMap(summary, start => flatMap(self, value => map(summary, end => [f(start, end), value]))));\n\n/* @internal */\nconst tagMetrics = /*#__PURE__*/dual(args => isEffect(args[0]), function () {\n  return labelMetrics(arguments[0], typeof arguments[1] === \"string\" ? [make$2(arguments[1], arguments[2])] : Object.entries(arguments[1]).map(([k, v]) => make$2(k, v)));\n});\n\n/* @internal */\nconst labelMetrics = /*#__PURE__*/dual(2, (self, labels) => labelMetricsSet(self, fromIterable$1(labels)));\n\n/* @internal */\nconst labelMetricsSet = /*#__PURE__*/dual(2, (self, labels) => fiberRefLocallyWith(currentMetricLabels, set => pipe(set, union(labels)))(self));\n\n/* @internal */\nconst takeUntil = /*#__PURE__*/dual(2, (elements, predicate) => suspend(() => {\n  const iterator = elements[Symbol.iterator]();\n  const builder = [];\n  let next;\n  let effect = succeed(false);\n  let i = 0;\n  while ((next = iterator.next()) && !next.done) {\n    const a = next.value;\n    const index = i++;\n    effect = flatMap(effect, bool => {\n      if (bool) {\n        return succeed(true);\n      }\n      builder.push(a);\n      return predicate(a, index);\n    });\n  }\n  return map(effect, () => builder);\n}));\n\n/* @internal */\nconst takeWhile = /*#__PURE__*/dual(2, (elements, predicate) => suspend(() => {\n  const iterator = elements[Symbol.iterator]();\n  const builder = [];\n  let next;\n  let taking = succeed(true);\n  let i = 0;\n  while ((next = iterator.next()) && !next.done) {\n    const a = next.value;\n    const index = i++;\n    taking = flatMap(taking, taking => pipe(taking ? predicate(a, index) : succeed(false), map(bool => {\n      if (bool) {\n        builder.push(a);\n      }\n      return bool;\n    })));\n  }\n  return map(taking, () => builder);\n}));\n\n/* @internal */\nconst tapBoth = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const either = failureOrCause(cause);\n    switch (either._tag) {\n      case \"Left\":\n        {\n          return zipRight(onFailure(either.left), failCause(cause));\n        }\n      case \"Right\":\n        {\n          return failCause(cause);\n        }\n    }\n  },\n  onSuccess: a => as(onSuccess(a), a)\n}));\n\n/* @internal */\nconst tapDefect = /*#__PURE__*/dual(2, (self, f) => catchAllCause(self, cause => match$1(keepDefects(cause), {\n  onNone: () => failCause(cause),\n  onSome: a => zipRight(f(a), failCause(cause))\n})));\n\n/* @internal */\nconst tapError = /*#__PURE__*/dual(2, (self, f) => matchCauseEffect(self, {\n  onFailure: cause => {\n    const either = failureOrCause(cause);\n    switch (either._tag) {\n      case \"Left\":\n        {\n          return zipRight(f(either.left), failCause(cause));\n        }\n      case \"Right\":\n        {\n          return failCause(cause);\n        }\n    }\n  },\n  onSuccess: succeed\n}));\n\n/* @internal */\nconst tapErrorTag = /*#__PURE__*/dual(3, (self, k, f) => tapError(self, e => {\n  if (isTagged(e, k)) {\n    return f(e);\n  }\n  return unit;\n}));\n\n/* @internal */\nconst tapErrorCause = /*#__PURE__*/dual(2, (self, f) => matchCauseEffect(self, {\n  onFailure: cause => zipRight(f(cause), failCause(cause)),\n  onSuccess: succeed\n}));\n\n/* @internal */\nconst timed = self => timedWith(self, currentTimeNanos);\n\n/* @internal */\nconst timedWith = /*#__PURE__*/dual(2, (self, nanos$1) => summarized(self, nanos$1, (start, end) => nanos(end - start)));\n\n/* @internal */\nconst tracerWith = tracerWith$1;\n\n/** @internal */\nconst tracer = /*#__PURE__*/tracerWith(succeed);\n\n/* @internal */\nconst tryPromise = arg => {\n  let evaluate;\n  let catcher = undefined;\n  if (typeof arg === \"function\") {\n    evaluate = arg;\n  } else {\n    evaluate = arg.try;\n    catcher = arg.catch;\n  }\n  if (evaluate.length >= 1) {\n    return suspend(() => {\n      const controller = new AbortController();\n      return flatMap(try_(() => evaluate(controller.signal)), promise => async(resolve => {\n        promise.then(a => resolve(exitSucceed(a))).catch(e => resolve(fail$1(catcher ? catcher(e) : e)));\n        return sync(() => controller.abort());\n      }));\n    });\n  }\n  return flatMap(try_(arg), promise => async(resolve => {\n    promise.then(a => resolve(exitSucceed(a))).catch(e => resolve(fail$1(catcher ? catcher(e) : e)));\n  }));\n};\n\n/* @internal */\nconst tryMap = /*#__PURE__*/dual(2, (self, options) => flatMap(self, a => try_({\n  try: () => options.try(a),\n  catch: options.catch\n})));\n\n/* @internal */\nconst tryMapPromise = /*#__PURE__*/dual(2, (self, options) => flatMap(self, a => tryPromise({\n  try: options.try.length >= 1 ? signal => options.try(a, signal) : () => options.try(a),\n  catch: options.catch\n})));\n\n/* @internal */\nconst unless = /*#__PURE__*/dual(2, (self, predicate) => suspend(() => predicate() ? succeedNone : asSome(self)));\n\n/* @internal */\nconst unlessEffect = /*#__PURE__*/dual(2, (self, predicate) => flatMap(predicate, b => b ? succeedNone : asSome(self)));\n\n/* @internal */\nconst unsandbox = self => mapErrorCause(self, flatten);\n\n/* @internal */\nconst updateFiberRefs = f => withFiberRuntime(state => {\n  state.setFiberRefs(f(state.id(), state.getFiberRefs()));\n  return unit;\n});\n\n/* @internal */\nconst updateService = /*#__PURE__*/dual(3, (self, tag, f) => mapInputContext(self, context => add(context, tag, f(unsafeGet(context, tag)))));\n\n/* @internal */\nconst when = /*#__PURE__*/dual(2, (self, predicate) => suspend(() => predicate() ? map(self, some) : succeed(none$2())));\n\n/* @internal */\nconst whenFiberRef = /*#__PURE__*/dual(3, (self, fiberRef, predicate) => flatMap(fiberRefGet(fiberRef), s => predicate(s) ? map(self, a => [s, some(a)]) : succeed([s, none$2()])));\n\n/* @internal */\nconst whenRef = /*#__PURE__*/dual(3, (self, ref, predicate) => flatMap(get(ref), s => predicate(s) ? map(self, a => [s, some(a)]) : succeed([s, none$2()])));\n\n/* @internal */\nconst withMetric = /*#__PURE__*/dual(2, (self, metric) => metric(self));\n\n/** @internal */\nconst serviceFunctionEffect = (service, f) => (...args) => flatMap(service, a => f(a)(...args));\n\n/** @internal */\nconst serviceFunction = (service, f) => (...args) => map(service, a => f(a)(...args));\n\n/** @internal */\nconst serviceFunctions = tag => new Proxy({}, {\n  get(_target, prop, _receiver) {\n    return (...args) => flatMap(tag, s => s[prop](...args));\n  }\n});\n\n/** @internal */\nconst serviceConstants = tag => new Proxy({}, {\n  get(_target, prop, _receiver) {\n    return flatMap(tag, s => s[prop]);\n  }\n});\n\n/** @internal */\nconst serviceMembers = tag => ({\n  functions: serviceFunctions(tag),\n  constants: serviceConstants(tag)\n});\n\n/** @internal */\nconst serviceOption = tag => map(context(), getOption(tag));\n\n// -----------------------------------------------------------------------------\n// tracing\n// -----------------------------------------------------------------------------\n\n/* @internal */\nconst annotateCurrentSpan = function () {\n  const args = arguments;\n  return flatMap(currentSpan, span => span._tag === \"Some\" ? sync(() => {\n    if (typeof args[0] === \"string\") {\n      span.value.attribute(args[0], args[1]);\n    } else {\n      for (const key in args[0]) {\n        span.value.attribute(key, args[0][key]);\n      }\n    }\n  }) : unit);\n};\n\n/* @internal */\nconst annotateSpans = /*#__PURE__*/dual(args => isEffect(args[0]), function () {\n  const args = arguments;\n  return fiberRefLocallyWith(args[0], currentTracerSpanAnnotations, typeof args[1] === \"string\" ? set(args[1], args[2]) : annotations => Object.entries(args[1]).reduce((acc, [key, value]) => set(acc, key, value), annotations));\n});\n\n/** @internal */\nconst currentParentSpan = /*#__PURE__*/serviceOption(spanTag);\n\n/** @internal */\nconst currentSpan = /*#__PURE__*/map( /*#__PURE__*/context(), context => {\n  const span = context.unsafeMap.get(spanTag);\n  return span !== undefined && span._tag === \"Span\" ? some(span) : none$2();\n});\nconst bigint0 = /*#__PURE__*/BigInt(0);\n/** @internal */\nconst currentTimeNanosTracing = /*#__PURE__*/fiberRefGetWith(currentTracerTimingEnabled, enabled => enabled ? currentTimeNanos : succeed(bigint0));\n\n/* @internal */\nconst linkSpans = /*#__PURE__*/dual(args => isEffect(args[0]), (self, span, attributes) => fiberRefLocallyWith(self, currentTracerSpanLinks, append({\n  _tag: \"SpanLink\",\n  span,\n  attributes: attributes ?? {}\n})));\n\n/** @internal */\nconst makeSpan = (name, options) => tracerWith(tracer => flatMap(options?.parent ? succeedSome(options.parent) : options?.root ? succeedNone : currentParentSpan, parent => flatMap(fiberRefGet(currentTracerSpanAnnotations), annotations => flatMap(fiberRefGet(currentTracerSpanLinks), links => flatMap(currentTimeNanosTracing, startTime => sync(() => {\n  const linksArray = options?.links ? [...toReadonlyArray(links), ...options.links] : toReadonlyArray(links);\n  const span = tracer.span(name, parent, options?.context ?? empty$1(), linksArray, startTime);\n  forEach(annotations, (value, key) => span.attribute(key, value));\n  Object.entries(options?.attributes ?? {}).forEach(([k, v]) => span.attribute(k, v));\n  return span;\n}))))));\n\n/* @internal */\nconst spanAnnotations = /*#__PURE__*/fiberRefGet(currentTracerSpanAnnotations);\n\n/* @internal */\nconst spanLinks = /*#__PURE__*/fiberRefGet(currentTracerSpanLinks);\n\n/** @internal */\nconst useSpan = (name, ...args) => {\n  const options = args.length === 1 ? undefined : args[0];\n  const evaluate = args[args.length - 1];\n  return acquireUseRelease(makeSpan(name, options), evaluate, (span, exit) => flatMap(currentTimeNanosTracing, endTime => sync(() => span.end(endTime, exit))));\n};\n\n/** @internal */\nconst withParentSpan = /*#__PURE__*/dual(2, (self, span) => provideService(self, spanTag, span));\n\n/** @internal */\nconst withSpan = /*#__PURE__*/dual(args => typeof args[0] !== \"string\", (self, name, options) => useSpan(name, options ?? {}, span => withParentSpan(self, span)));\n\n// -------------------------------------------------------------------------------------\n// optionality\n// -------------------------------------------------------------------------------------\n\n/* @internal */\nconst fromNullable = value => value == null ? fail$1(NoSuchElementException()) : succeed(value);\n\n/* @internal */\nconst optionFromOptional = self => catchAll(map(self, some), error => isNoSuchElementException(error) ? succeedNone : fail$1(error));\n\nexport { Do, _catch, allowInterrupt, annotateCurrentSpan, annotateLogs, annotateSpans, asSome, asSomeError, asyncOption, bind, bindTo, bindValue, catchAllDefect, catchSomeCause, catchSomeDefect, catchTag, catchTags, cause, clock, clockWith, contextWith, currentParentSpan, currentSpan, currentTimeNanosTracing, delay, descriptor, descriptorWith, diffFiberRefs, diffFiberRefsAndRuntimeFlags, dropUntil, dropWhile, eventually, every, fiberRefs, filterOrDie, filterOrDieMessage, filterOrElse, filterOrFail, findFirst, firstSuccessOf, flipWith, forever, fromNullable, gen, head, ignore, ignoreLogged, inheritFiberRefs, isFailure, isSuccess, iterate, labelMetrics, labelMetricsSet, linkSpans, log, logAnnotations, logDebug, logError, logFatal, logInfo, logTrace, logWarning, loop, makeSpan, mapAccum, mapErrorCause, match, memoize, merge, negate, none, once, option, optionFromOptional, orElseFail, orElseSucceed, parallelErrors, patchFiberRefs, promise, provideService, provideServiceEffect, random, reduce, reduceRight, reduceWhile, repeatN, sandbox, serviceConstants, serviceFunction, serviceFunctionEffect, serviceFunctions, serviceMembers, serviceOption, setFiberRefs, sleep, spanAnnotations, spanLinks, succeedNone, succeedSome, summarized, tagMetrics, takeUntil, takeWhile, tapBoth, tapDefect, tapError, tapErrorCause, tapErrorTag, timed, timedWith, tracer, tracerWith, tryMap, tryMapPromise, tryPromise, try_, unless, unlessEffect, unsandbox, updateFiberRefs, updateService, useSpan, when, whenFiberRef, whenRef, withLogSpan, withMetric, withParentSpan, withSpan };\n","import { dual } from '../Function/dist/effect-Function.esm.js';\n\n/** @internal */\nconst OP_SEQUENTIAL = \"Sequential\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PARALLEL = \"Parallel\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PARALLEL_N = \"ParallelN\";\n\n/** @internal */\n\n/** @internal */\nconst sequential = {\n  _tag: OP_SEQUENTIAL\n};\n\n/** @internal */\nconst parallel = {\n  _tag: OP_PARALLEL\n};\n\n/** @internal */\nconst parallelN = parallelism => ({\n  _tag: OP_PARALLEL_N,\n  parallelism\n});\n\n/** @internal */\nconst isSequential = self => self._tag === OP_SEQUENTIAL;\n\n/** @internal */\nconst isParallel = self => self._tag === OP_PARALLEL;\n\n/** @internal */\nconst isParallelN = self => self._tag === OP_PARALLEL_N;\n\n/** @internal */\nconst match = /*#__PURE__*/dual(4, (self, onSequential, onParallel, onParallelN) => {\n  switch (self._tag) {\n    case OP_SEQUENTIAL:\n      {\n        return onSequential();\n      }\n    case OP_PARALLEL:\n      {\n        return onParallel();\n      }\n    case OP_PARALLEL_N:\n      {\n        return onParallelN(self.parallelism);\n      }\n  }\n});\n\nexport { OP_PARALLEL, OP_PARALLEL_N, OP_SEQUENTIAL, isParallel, isParallelN, isSequential, match, parallel, parallelN, sequential };\n","import { symbol as symbol$1, equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\nconst FiberStatusSymbolKey = \"effect/FiberStatus\";\n\n/** @internal */\nconst FiberStatusTypeId = /*#__PURE__*/Symbol.for(FiberStatusSymbolKey);\n\n/** @internal */\nconst OP_DONE = \"Done\";\n\n/** @internal */\n\n/** @internal */\nconst OP_RUNNING = \"Running\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SUSPENDED = \"Suspended\";\n\n/** @internal */\n\n/** @internal */\nclass Done {\n  [FiberStatusTypeId] = FiberStatusTypeId;\n  _tag = OP_DONE;\n  [symbol]() {\n    return pipe(hash(FiberStatusSymbolKey), combine(hash(this._tag)));\n  }\n  [symbol$1](that) {\n    return isFiberStatus(that) && that._tag === OP_DONE;\n  }\n}\n\n/** @internal */\nclass Running {\n  [FiberStatusTypeId] = FiberStatusTypeId;\n  _tag = OP_RUNNING;\n  constructor(runtimeFlags) {\n    this.runtimeFlags = runtimeFlags;\n  }\n  [symbol]() {\n    return pipe(hash(FiberStatusSymbolKey), combine(hash(this._tag)), combine(hash(this.runtimeFlags)));\n  }\n  [symbol$1](that) {\n    return isFiberStatus(that) && that._tag === OP_RUNNING && this.runtimeFlags === that.runtimeFlags;\n  }\n}\n\n/** @internal */\nclass Suspended {\n  [FiberStatusTypeId] = FiberStatusTypeId;\n  _tag = OP_SUSPENDED;\n  constructor(runtimeFlags, blockingOn) {\n    this.runtimeFlags = runtimeFlags;\n    this.blockingOn = blockingOn;\n  }\n  [symbol]() {\n    return pipe(hash(FiberStatusSymbolKey), combine(hash(this._tag)), combine(hash(this.runtimeFlags)), combine(hash(this.blockingOn)));\n  }\n  [symbol$1](that) {\n    return isFiberStatus(that) && that._tag === OP_SUSPENDED && this.runtimeFlags === that.runtimeFlags && equals(this.blockingOn, that.blockingOn);\n  }\n}\n\n/** @internal */\nconst done = /*#__PURE__*/new Done();\n\n/** @internal */\nconst running = runtimeFlags => new Running(runtimeFlags);\n\n/** @internal */\nconst suspended = (runtimeFlags, blockingOn) => new Suspended(runtimeFlags, blockingOn);\n\n/** @internal */\nconst isFiberStatus = u => hasProperty(u, FiberStatusTypeId);\n\n/** @internal */\nconst isDone = self => self._tag === OP_DONE;\n\n/** @internal */\nconst isRunning = self => self._tag === OP_RUNNING;\n\n/** @internal */\nconst isSuspended = self => self._tag === OP_SUSPENDED;\n\nexport { FiberStatusTypeId, OP_DONE, OP_RUNNING, OP_SUSPENDED, done, isDone, isFiberStatus, isRunning, isSuspended, running, suspended };\n","import { FiberStatusTypeId as FiberStatusTypeId$1, done as done$1, running as running$1, suspended as suspended$1, isFiberStatus as isFiberStatus$1, isDone as isDone$1, isRunning as isRunning$1, isSuspended as isSuspended$1 } from '../../internal/fiberStatus.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst FiberStatusTypeId = FiberStatusTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst done = done$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst running = running$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst suspended = suspended$1;\n\n/**\n * Returns `true` if the specified value is a `FiberStatus`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isFiberStatus = isFiberStatus$1;\n\n/**\n * Returns `true` if the specified `FiberStatus` is `Done`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isDone = isDone$1;\n\n/**\n * Returns `true` if the specified `FiberStatus` is `Running`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isRunning = isRunning$1;\n\n/**\n * Returns `true` if the specified `FiberStatus` is `Suspended`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isSuspended = isSuspended$1;\n\nexport { FiberStatusTypeId, done, isDone, isFiberStatus, isRunning, isSuspended, running, suspended };\n","/** @internal */\n\n/** @internal */\nconst OP_INTERRUPT_SIGNAL = \"InterruptSignal\";\n\n/** @internal */\n\n/** @internal */\nconst OP_STATEFUL = \"Stateful\";\n\n/** @internal */\n\n/** @internal */\nconst OP_RESUME = \"Resume\";\n\n/** @internal */\n\n/** @internal */\nconst OP_YIELD_NOW = \"YieldNow\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst interruptSignal = cause => ({\n  _tag: OP_INTERRUPT_SIGNAL,\n  cause\n});\n\n/** @internal */\nconst stateful = onFiber => ({\n  _tag: OP_STATEFUL,\n  onFiber\n});\n\n/** @internal */\nconst resume = effect => ({\n  _tag: OP_RESUME,\n  effect\n});\n\n/** @internal */\nconst yieldNow = () => ({\n  _tag: OP_YIELD_NOW\n});\n\nexport { OP_INTERRUPT_SIGNAL, OP_RESUME, OP_STATEFUL, OP_YIELD_NOW, interruptSignal, resume, stateful, yieldNow };\n","import { none } from '../FiberId/dist/effect-FiberId.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { stateful } from './fiberMessage.esm.js';\n\n/** @internal */\nconst FiberScopeSymbolKey = \"effect/FiberScope\";\n\n/** @internal */\nconst FiberScopeTypeId = /*#__PURE__*/Symbol.for(FiberScopeSymbolKey);\n\n/**\n * A `FiberScope` represents the scope of a fiber lifetime. The scope of a\n * fiber can be retrieved using `Effect.descriptor`, and when forking fibers,\n * you can specify a custom scope to fork them on by using the `forkIn`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/** @internal */\nclass Global {\n  [FiberScopeTypeId] = FiberScopeTypeId;\n  fiberId = none;\n  roots = new Set();\n  add(_runtimeFlags, child) {\n    this.roots.add(child);\n    child.addObserver(() => {\n      this.roots.delete(child);\n    });\n  }\n}\n\n/** @internal */\nclass Local {\n  [FiberScopeTypeId] = FiberScopeTypeId;\n  constructor(fiberId, parent) {\n    this.fiberId = fiberId;\n    this.parent = parent;\n  }\n  add(_runtimeFlags, child) {\n    this.parent.tell(stateful(parentFiber => {\n      parentFiber.addChild(child);\n      child.addObserver(() => {\n        parentFiber.removeChild(child);\n      });\n    }));\n  }\n}\n\n/** @internal */\nconst unsafeMake = fiber => {\n  return new Local(fiber.id(), fiber);\n};\n\n/** @internal */\nconst globalScope = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberScope/Global\"), () => new Global());\n\nexport { FiberScopeTypeId, globalScope, unsafeMake };\n","import { currentTimeMillis } from '../Clock/dist/effect-Clock.esm.js';\nimport { left, right } from '../Either/dist/effect-Either.esm.js';\nimport { fail as fail$1, failCause as failCause$1, interrupt, forEachEffect, match as match$1, isSuccess, succeed as succeed$2 } from '../Exit/dist/effect-Exit.esm.js';\nimport { none, getOrElse, ids } from '../FiberId/dist/effect-FiberId.esm.js';\nimport { isSuspended, isDone, isRunning } from '../FiberStatus/dist/effect-FiberStatus.esm.js';\nimport { pipe, dual } from '../Function/dist/effect-Function.esm.js';\nimport { size } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { succeed as succeed$1, unit as unit$1, map as map$1, forEachSequential, exit, flatMap, fiberId, zipRight, forEachSequentialDiscard, zipLeft, flatten, sync, never as never$1, zipWith, asUnit, interruptAsFiber } from './core.esm.js';\nimport { globalScope } from './fiberScope.esm.js';\nimport { interruptible } from './runtimeFlags.esm.js';\nimport { Order as Order$1 } from '../Number/dist/effect-Number.esm.js';\nimport { some, none as none$1, fromNullable } from '../Option/dist/effect-Option.esm.js';\nimport { mapInput, tuple } from '../Order/dist/effect-Order.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst FiberSymbolKey = \"effect/Fiber\";\n\n/** @internal */\nconst FiberTypeId = /*#__PURE__*/Symbol.for(FiberSymbolKey);\n\n/** @internal */\nconst fiberVariance = {\n  _E: _ => _,\n  _A: _ => _\n};\n\n/** @internal */\nconst fiberProto = {\n  [FiberTypeId]: fiberVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst RuntimeFiberSymbolKey = \"effect/Fiber\";\n\n/** @internal */\nconst RuntimeFiberTypeId = /*#__PURE__*/Symbol.for(RuntimeFiberSymbolKey);\n\n/** @internal */\nconst Order = /*#__PURE__*/pipe( /*#__PURE__*/tuple(Order$1, Order$1), /*#__PURE__*/mapInput(fiber => [fiber.id().startTimeMillis, fiber.id().id]));\n\n/** @internal */\nconst isFiber = u => hasProperty(u, FiberTypeId);\n\n/** @internal */\nconst isRuntimeFiber = self => RuntimeFiberTypeId in self;\n\n/** @internal */\nconst _await = self => self.await();\n\n/** @internal */\nconst children = self => self.children();\n\n/** @internal */\nconst done = exit => ({\n  ...fiberProto,\n  id: () => none,\n  await: () => succeed$1(exit),\n  children: () => succeed$1([]),\n  inheritAll: () => unit$1,\n  poll: () => succeed$1(some(exit)),\n  interruptAsFork: () => unit$1\n});\n\n/** @internal */\nconst dump = self => map$1(self.status(), status => ({\n  id: self.id(),\n  status\n}));\n\n/** @internal */\nconst dumpAll = fibers => forEachSequential(fibers, dump);\n\n/** @internal */\nconst fail = error => done(fail$1(error));\n\n/** @internal */\nconst failCause = cause => done(failCause$1(cause));\n\n/** @internal */\nconst fromEffect = effect => map$1(exit(effect), done);\n\n/** @internal */\nconst id = self => self.id();\n\n/** @internal */\nconst inheritAll = self => self.inheritAll();\n\n/** @internal */\nconst interrupted = fiberId => done(interrupt(fiberId));\n\n/** @internal */\nconst interruptAll = fibers => flatMap(fiberId, fiberId => pipe(fibers, interruptAllAs(fiberId)));\n\n/** @internal */\nconst interruptAllAs = /*#__PURE__*/dual(2, (fibers, fiberId) => pipe(forEachSequentialDiscard(fibers, interruptAsFork(fiberId)), zipRight(pipe(fibers, forEachSequentialDiscard(_await)))));\n\n/** @internal */\nconst interruptAsFork = /*#__PURE__*/dual(2, (self, fiberId) => self.interruptAsFork(fiberId));\n\n/** @internal */\nconst join = self => zipLeft(flatten(self.await()), self.inheritAll());\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => mapEffect(self, a => sync(() => f(a))));\n\n/** @internal */\nconst mapEffect = /*#__PURE__*/dual(2, (self, f) => ({\n  ...fiberProto,\n  id: () => self.id(),\n  await: () => flatMap(self.await(), forEachEffect(f)),\n  children: () => self.children(),\n  inheritAll: () => self.inheritAll(),\n  poll: () => flatMap(self.poll(), result => {\n    switch (result._tag) {\n      case \"None\":\n        {\n          return succeed$1(none$1());\n        }\n      case \"Some\":\n        {\n          return pipe(forEachEffect(result.value, f), map$1(some));\n        }\n    }\n  }),\n  interruptAsFork: id => self.interruptAsFork(id)\n}));\n\n/** @internal */\nconst mapFiber = /*#__PURE__*/dual(2, (self, f) => map$1(self.await(), match$1({\n  onFailure: cause => failCause(cause),\n  onSuccess: a => f(a)\n})));\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onFiber,\n  onRuntimeFiber\n}) => {\n  if (isRuntimeFiber(self)) {\n    return onRuntimeFiber(self);\n  }\n  return onFiber(self);\n});\n\n/** @internal */\nconst never = {\n  ...fiberProto,\n  id: () => none,\n  await: () => never$1,\n  children: () => succeed$1([]),\n  inheritAll: () => never$1,\n  poll: () => succeed$1(none$1()),\n  interruptAsFork: () => never$1\n};\n\n/** @internal */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => ({\n  ...fiberProto,\n  id: () => getOrElse(self.id(), that.id()),\n  await: () => zipWith(self.await(), that.await(), (exit1, exit2) => isSuccess(exit1) ? exit1 : exit2),\n  children: () => self.children(),\n  inheritAll: () => zipRight(that.inheritAll(), self.inheritAll()),\n  poll: () => zipWith(self.poll(), that.poll(), (option1, option2) => {\n    switch (option1._tag) {\n      case \"None\":\n        {\n          return none$1();\n        }\n      case \"Some\":\n        {\n          return isSuccess(option1.value) ? option1 : option2;\n        }\n    }\n  }),\n  interruptAsFork: id => pipe(interruptAsFiber(self, id), zipRight(pipe(that, interruptAsFiber(id))), asUnit)\n}));\n\n/** @internal */\nconst orElseEither = /*#__PURE__*/dual(2, (self, that) => orElse(map(self, left), map(that, right)));\n\n/** @internal */\nconst poll = self => self.poll();\n\n// forked from https://github.com/sindresorhus/parse-ms/blob/4da2ffbdba02c6e288c08236695bdece0adca173/index.js\n// MIT License\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n/** @internal */\nconst parseMs = milliseconds => {\n  const roundTowardsZero = milliseconds > 0 ? Math.floor : Math.ceil;\n  return {\n    days: roundTowardsZero(milliseconds / 86400000),\n    hours: roundTowardsZero(milliseconds / 3600000) % 24,\n    minutes: roundTowardsZero(milliseconds / 60000) % 60,\n    seconds: roundTowardsZero(milliseconds / 1000) % 60,\n    milliseconds: roundTowardsZero(milliseconds) % 1000,\n    microseconds: roundTowardsZero(milliseconds * 1000) % 1000,\n    nanoseconds: roundTowardsZero(milliseconds * 1e6) % 1000\n  };\n};\n\n/** @internal */\nconst renderStatus = status => {\n  if (isDone(status)) {\n    return \"Done\";\n  }\n  if (isRunning(status)) {\n    return \"Running\";\n  }\n  const isInterruptible = interruptible(status.runtimeFlags) ? \"interruptible\" : \"uninterruptible\";\n  return `Suspended(${isInterruptible})`;\n};\n\n/** @internal */\nconst pretty = self => flatMap(currentTimeMillis, now => map$1(dump(self), dump => {\n  const time = now - dump.id.startTimeMillis;\n  const {\n    days,\n    hours,\n    milliseconds,\n    minutes,\n    seconds\n  } = parseMs(time);\n  const lifeMsg = (days === 0 ? \"\" : `${days}d`) + (days === 0 && hours === 0 ? \"\" : `${hours}h`) + (days === 0 && hours === 0 && minutes === 0 ? \"\" : `${minutes}m`) + (days === 0 && hours === 0 && minutes === 0 && seconds === 0 ? \"\" : `${seconds}s`) + `${milliseconds}ms`;\n  const waitMsg = isSuspended(dump.status) ? (() => {\n    const ids$1 = ids(dump.status.blockingOn);\n    return size(ids$1) > 0 ? `waiting on ` + Array.from(ids$1).map(id => `${id}`).join(\", \") : \"\";\n  })() : \"\";\n  const statusMsg = renderStatus(dump.status);\n  return `[Fiber](#${dump.id.id}) (${lifeMsg}) ${waitMsg}\\n   Status: ${statusMsg}`;\n}));\n\n/** @internal */\nconst unsafeRoots = () => Array.from(globalScope.roots);\n\n/** @internal */\nconst roots = /*#__PURE__*/sync(unsafeRoots);\n\n/** @internal */\nconst status = self => self.status();\n\n/** @internal */\nconst succeed = value => done(succeed$2(value));\n\n/** @internal */\nconst unit = /*#__PURE__*/succeed(void 0);\n\n/** @internal */\nconst currentFiberURI = \"effect/FiberCurrent\";\n\n/** @internal */\nconst getCurrentFiber = () => fromNullable(globalThis[currentFiberURI]);\n\nexport { FiberTypeId, Order, RuntimeFiberTypeId, _await, children, currentFiberURI, done, dump, dumpAll, fail, failCause, fiberVariance, fromEffect, getCurrentFiber, id, inheritAll, interruptAll, interruptAllAs, interruptAsFork, interrupted, isFiber, isRuntimeFiber, join, map, mapEffect, mapFiber, match, never, orElse, orElseEither, poll, pretty, roots, status, succeed, unit, unsafeRoots };\n","import { boolean } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { boolean as boolean$1 } from '../../Order/dist/effect-Order.esm.js';\nimport { isBoolean as isBoolean$1 } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * This module provides utility functions and type class instances for working with the `boolean` type in TypeScript.\n * It includes functions for basic boolean operations, as well as type class instances for\n * `Equivalence` and `Order`.\n *\n * @since 2.0.0\n */\n\n/**\n * Tests if a value is a `boolean`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isBoolean } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(isBoolean(true), true)\n * assert.deepStrictEqual(isBoolean(\"true\"), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isBoolean = isBoolean$1;\n\n/**\n * This function returns the result of either of the given functions depending on the value of the boolean parameter.\n * It is useful when you have to run one of two functions depending on the boolean value.\n *\n * @param value - the boolean value that decides which function will be executed.\n * @param onFalse - a lazy evaluation function that will be executed when the `value` is `false`.\n * @param onTrue - a lazy evaluation function that will be executed when the `value` is `true`.\n *\n * @example\n * import * as B from \"effect/Boolean\"\n *\n * assert.deepStrictEqual(B.match(true, { onFalse: () => \"It's false!\", onTrue: () => \"It's true!\" }), \"It's true!\")\n *\n * @category pattern matching\n * @since 2.0.0\n */\nconst match = /*#__PURE__*/dual(2, (value, options) => value ? options.onTrue() : options.onFalse());\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Equivalence = boolean;\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Order = boolean$1;\n\n/**\n * Negates the given boolean: `!self`\n *\n * @example\n * import { not } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(not(true), false)\n * assert.deepStrictEqual(not(false), true)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst not = self => !self;\n\n/**\n * Combines two boolean using AND: `self && that`.\n *\n * @example\n * import { and } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(and(true, true), true)\n * assert.deepStrictEqual(and(true, false), false)\n * assert.deepStrictEqual(and(false, true), false)\n * assert.deepStrictEqual(and(false, false), false)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst and = /*#__PURE__*/dual(2, (self, that) => self && that);\n\n/**\n * Combines two boolean using NAND: `!(self && that)`.\n *\n * @example\n * import { nand } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(nand(true, true), false)\n * assert.deepStrictEqual(nand(true, false), true)\n * assert.deepStrictEqual(nand(false, true), true)\n * assert.deepStrictEqual(nand(false, false), true)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst nand = /*#__PURE__*/dual(2, (self, that) => !(self && that));\n\n/**\n * Combines two boolean using OR: `self || that`.\n *\n * @example\n * import { or } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(or(true, true), true)\n * assert.deepStrictEqual(or(true, false), true)\n * assert.deepStrictEqual(or(false, true), true)\n * assert.deepStrictEqual(or(false, false), false)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst or = /*#__PURE__*/dual(2, (self, that) => self || that);\n\n/**\n * Combines two booleans using NOR: `!(self || that)`.\n *\n * @example\n * import { nor } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(nor(true, true), false)\n * assert.deepStrictEqual(nor(true, false), false)\n * assert.deepStrictEqual(nor(false, true), false)\n * assert.deepStrictEqual(nor(false, false), true)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst nor = /*#__PURE__*/dual(2, (self, that) => !(self || that));\n\n/**\n * Combines two booleans using XOR: `(!self && that) || (self && !that)`.\n *\n * @example\n * import { xor } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(xor(true, true), false)\n * assert.deepStrictEqual(xor(true, false), true)\n * assert.deepStrictEqual(xor(false, true), true)\n * assert.deepStrictEqual(xor(false, false), false)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst xor = /*#__PURE__*/dual(2, (self, that) => !self && that || self && !that);\n\n/**\n * Combines two booleans using EQV (aka XNOR): `!xor(self, that)`.\n *\n * @example\n * import { eqv } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(eqv(true, true), true)\n * assert.deepStrictEqual(eqv(true, false), false)\n * assert.deepStrictEqual(eqv(false, true), false)\n * assert.deepStrictEqual(eqv(false, false), true)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst eqv = /*#__PURE__*/dual(2, (self, that) => !xor(self, that));\n\n/**\n * Combines two booleans using an implication: `(!self || that)`.\n *\n * @example\n * import { implies } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(implies(true, true), true)\n * assert.deepStrictEqual(implies(true, false), false)\n * assert.deepStrictEqual(implies(false, true), true)\n * assert.deepStrictEqual(implies(false, false), true)\n *\n * @category combinators\n * @since 2.0.0\n */\nconst implies = /*#__PURE__*/dual(2, (self, that) => self ? that : true);\n\n/**\n * This utility function is used to check if all the elements in a collection of boolean values are `true`.\n *\n * @param collection - An iterable collection of booleans.\n *\n * @example\n * import { every } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(every([true, true, true]), true)\n * assert.deepStrictEqual(every([true, false, true]), false)\n *\n * @since 2.0.0\n */\nconst every = collection => {\n  for (const b of collection) {\n    if (!b) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * This utility function is used to check if at least one of the elements in a collection of boolean values is `true`.\n *\n * @param collection - An iterable collection of booleans.\n *\n * @example\n * import { some } from 'effect/Boolean'\n *\n * assert.deepStrictEqual(some([true, false, true]), true)\n * assert.deepStrictEqual(some([false, false, false]), false)\n *\n * @since 2.0.0\n */\nconst some = collection => {\n  for (const b of collection) {\n    if (b) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport { Equivalence, Order, and, eqv, every, implies, isBoolean, match, nand, nor, not, or, some, xor };\n","import { deferredMake, deferredMakeAs, deferredAwait, deferredComplete, deferredCompleteWith, deferredDone, deferredFail, deferredFailSync, deferredFailCause, deferredFailCauseSync, deferredDie, deferredDieSync, deferredInterrupt, deferredInterruptWith, deferredIsDone, deferredPoll, deferredSucceed, deferredSync, deferredUnsafeMake, deferredUnsafeDone } from '../../internal/core.esm.js';\nimport { DeferredTypeId as DeferredTypeId$1 } from '../../internal/deferred.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst DeferredTypeId = DeferredTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * A `Deferred` represents an asynchronous variable that can be set exactly\n * once, with the ability for an arbitrary number of fibers to suspend (by\n * calling `Deferred.await`) and automatically resume when the variable is set.\n *\n * `Deferred` can be used for building primitive actions whose completions\n * require the coordinated action of multiple fibers, and for building\n * higher-level concurrent or asynchronous structures.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Creates a new `Deferred`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = deferredMake;\n\n/**\n * Creates a new `Deferred` from the specified `FiberId`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst makeAs = deferredMakeAs;\nconst _await = deferredAwait;\n\n/**\n * Completes the deferred with the result of the specified effect. If the\n * deferred has already been completed, the method will produce false.\n *\n * Note that `Deferred.completeWith` will be much faster, so consider using\n * that if you do not need to memoize the result of the specified effect.\n *\n * @since 2.0.0\n * @category utils\n */\nconst complete = deferredComplete;\n\n/**\n * Completes the deferred with the result of the specified effect. If the\n * deferred has already been completed, the method will produce false.\n *\n * @since 2.0.0\n * @category utils\n */\nconst completeWith = deferredCompleteWith;\n\n/**\n * Exits the `Deferred` with the specified `Exit` value, which will be\n * propagated to all fibers waiting on the value of the `Deferred`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst done = deferredDone;\n\n/**\n * Fails the `Deferred` with the specified error, which will be propagated to\n * all fibers waiting on the value of the `Deferred`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst fail = deferredFail;\n\n/**\n * Fails the `Deferred` with the specified error, which will be propagated to\n * all fibers waiting on the value of the `Deferred`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst failSync = deferredFailSync;\n\n/**\n * Fails the `Deferred` with the specified `Cause`, which will be propagated to\n * all fibers waiting on the value of the `Deferred`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst failCause = deferredFailCause;\n\n/**\n * Fails the `Deferred` with the specified `Cause`, which will be propagated to\n * all fibers waiting on the value of the `Deferred`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst failCauseSync = deferredFailCauseSync;\n\n/**\n * Kills the `Deferred` with the specified defect, which will be propagated to\n * all fibers waiting on the value of the `Deferred`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst die = deferredDie;\n\n/**\n * Kills the `Deferred` with the specified defect, which will be propagated to\n * all fibers waiting on the value of the `Deferred`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst dieSync = deferredDieSync;\n\n/**\n * Completes the `Deferred` with interruption. This will interrupt all fibers\n * waiting on the value of the `Deferred` with the `FiberId` of the fiber\n * calling this method.\n *\n * @since 2.0.0\n * @category utils\n */\nconst interrupt = deferredInterrupt;\n\n/**\n * Completes the `Deferred` with interruption. This will interrupt all fibers\n * waiting on the value of the `Deferred` with the specified `FiberId`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst interruptWith = deferredInterruptWith;\n\n/**\n * Returns `true` if this `Deferred` has already been completed with a value or\n * an error, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isDone = deferredIsDone;\n\n/**\n * Returns a `Some<Effect<R, E, A>>` from the `Deferred` if this `Deferred` has\n * already been completed, `None` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst poll = deferredPoll;\n\n/**\n * Completes the `Deferred` with the specified value.\n *\n * @since 2.0.0\n * @category utils\n */\nconst succeed = deferredSucceed;\n\n/**\n * Completes the `Deferred` with the specified lazily evaluated value.\n *\n * @since 2.0.0\n * @category utils\n */\nconst sync = deferredSync;\n\n/**\n * Unsafely creates a new `Deferred` from the specified `FiberId`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeMake = deferredUnsafeMake;\n\n/**\n * Unsafely exits the `Deferred` with the specified `Exit` value, which will be\n * propagated to all fibers waiting on the value of the `Deferred`.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeDone = deferredUnsafeDone;\n\nexport { DeferredTypeId, _await as await, complete, completeWith, die, dieSync, done, fail, failCause, failCauseSync, failSync, interrupt, interruptWith, isDone, make, makeAs, poll, succeed, sync, unsafeDone, unsafeMake };\n","import { EffectTypeId as EffectTypeId$1, StreamTypeId as StreamTypeId$1, SinkTypeId as SinkTypeId$1, ChannelTypeId as ChannelTypeId$1, EffectPrototype as EffectPrototype$1, CommitPrototype as CommitPrototype$1, StructuralCommitPrototype as StructuralCommitPrototype$1, Base as Base$1, StructuralBase as StructuralBase$1 } from '../../internal/Effectable.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category type ids\n */\nconst EffectTypeId = EffectTypeId$1;\n\n/**\n * @since 2.0.0\n * @category type ids\n */\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nconst StreamTypeId = StreamTypeId$1;\n\n/**\n * @since 2.0.0\n * @category type ids\n */\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nconst SinkTypeId = SinkTypeId$1;\n\n/**\n * @since 2.0.0\n * @category type ids\n */\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nconst ChannelTypeId = ChannelTypeId$1;\n\n/**\n * @since 2.0.0\n * @category type ids\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category prototypes\n */\nconst EffectPrototype = EffectPrototype$1;\n\n/**\n * @since 2.0.0\n * @category prototypes\n */\nconst CommitPrototype = CommitPrototype$1;\n\n/**\n * @since 2.0.0\n * @category prototypes\n */\nconst StructuralCommitPrototype = StructuralCommitPrototype$1;\nconst Base = Base$1;\nconst StructuralBase = StructuralBase$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nclass Class extends Base {}\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nclass StructuralClass extends StructuralBase {}\n\nexport { ChannelTypeId, Class, CommitPrototype, EffectPrototype, EffectTypeId, SinkTypeId, StreamTypeId, StructuralClass, StructuralCommitPrototype };\n","import { sequential as sequential$1, parallel as parallel$1, parallelN as parallelN$1, isSequential as isSequential$1, isParallel as isParallel$1, isParallelN as isParallelN$1, match as match$1 } from '../../internal/executionStrategy.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Describes a strategy for evaluating multiple effects, potentially in\n * parallel.\n *\n * There are 3 possible execution strategies: `Sequential`, `Parallel`,\n * `ParallelN`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Execute effects sequentially.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Execute effects in parallel.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Execute effects in parallel, up to the specified number of concurrent fibers.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Execute effects sequentially.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst sequential = sequential$1;\n\n/**\n * Execute effects in parallel.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst parallel = parallel$1;\n\n/**\n * Execute effects in parallel, up to the specified number of concurrent fibers.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst parallelN = parallelN$1;\n\n/**\n * Returns `true` if the specified `ExecutionStrategy` is an instance of\n * `Sequential`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isSequential = isSequential$1;\n\n/**\n * Returns `true` if the specified `ExecutionStrategy` is an instance of\n * `Sequential`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isParallel = isParallel$1;\n\n/**\n * Returns `true` if the specified `ExecutionStrategy` is an instance of\n * `Sequential`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isParallelN = isParallelN$1;\n\n/**\n * Folds over the specified `ExecutionStrategy` using the provided case\n * functions.\n *\n * @since 2.0.0\n * @category folding\n */\nconst match = match$1;\n\nexport { isParallel, isParallelN, isSequential, match, parallel, parallelN, sequential };\n","import { empty as empty$1, diff as diff$1, combine as combine$1, patch as patch$1 } from '../../internal/fiberRefs/patch.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * A `FiberRefsPatch` captures the changes in `FiberRef` values made by a single\n * fiber as a value. This allows fibers to apply the changes made by a workflow\n * without inheriting all the `FiberRef` values of the fiber that executed the\n * workflow.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Constructs a patch that describes the changes between the specified\n * collections of `FiberRef`\n *\n * @since 2.0.0\n * @category constructors\n */\nconst diff = diff$1;\n\n/**\n * Combines this patch and the specified patch to create a new patch that\n * describes applying the changes from this patch and the specified patch\n * sequentially.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst combine = combine$1;\n\n/**\n * Applies the changes described by this patch to the specified collection\n * of `FiberRef` values.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst patch = patch$1;\n\nexport { combine, diff, empty, patch };\n","import { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { fiberRefUnsafeMake } from './core.esm.js';\n\n/** @internal */\nconst currentRequestMap = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentRequestMap\"), () => fiberRefUnsafeMake(new Map()));\n\nexport { currentRequestMap };\n","import { fiberRefGetWith, currentConcurrency } from './core.esm.js';\n\n/** @internal */\nconst match = (options, sequential, unbounded, bounded) => {\n  switch (options?.concurrency) {\n    case undefined:\n      {\n        return sequential();\n      }\n    case \"unbounded\":\n      {\n        return unbounded();\n      }\n    case \"inherit\":\n      {\n        return fiberRefGetWith(currentConcurrency, concurrency => concurrency === \"unbounded\" ? unbounded() : concurrency > 1 ? bounded(concurrency) : sequential());\n      }\n    default:\n      {\n        return options.concurrency > 1 ? bounded(options.concurrency) : sequential();\n      }\n  }\n};\n\n/** @internal */\nconst matchSimple = (options, sequential, concurrent) => {\n  switch (options?.concurrency) {\n    case undefined:\n      {\n        return sequential();\n      }\n    case \"unbounded\":\n      {\n        return concurrent();\n      }\n    case \"inherit\":\n      {\n        return fiberRefGetWith(currentConcurrency, concurrency => concurrency === \"unbounded\" ? concurrent() : concurrency > 1 ? concurrent() : sequential());\n      }\n    default:\n      {\n        return options.concurrency > 1 ? concurrent() : sequential();\n      }\n  }\n};\n\nexport { match, matchSimple };\n","import { dual, constVoid, pipe } from '../Function/dist/effect-Function.esm.js';\nimport { size } from '../HashMap/dist/effect-HashMap.esm.js';\nimport { pretty } from './cause.esm.js';\nimport { threadName } from './fiberId.esm.js';\nimport { isCons } from '../List/dist/effect-List.esm.js';\nimport { render } from '../LogSpan/dist/effect-LogSpan.esm.js';\nimport { some, none as none$1 } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\n\n/** @internal */\nconst LoggerSymbolKey = \"effect/Logger\";\n\n/** @internal */\nconst LoggerTypeId = /*#__PURE__*/Symbol.for(LoggerSymbolKey);\n\n/** @internal */\nconst loggerVariance = {\n  _Message: _ => _,\n  _Output: _ => _\n};\n\n/** @internal */\nconst makeLogger = log => ({\n  [LoggerTypeId]: loggerVariance,\n  log,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n});\n\n/** @internal */\nconst mapInput = /*#__PURE__*/dual(2, (self, f) => makeLogger(options => self.log({\n  ...options,\n  message: f(options.message)\n})));\n\n/** @internal */\nconst filterLogLevel = /*#__PURE__*/dual(2, (self, f) => makeLogger(options => f(options.logLevel) ? some(self.log(options)) : none$1()));\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => makeLogger(options => f(self.log(options))));\n\n/** @internal */\nconst none = {\n  [LoggerTypeId]: loggerVariance,\n  log: constVoid,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\nconst simple = log => ({\n  [LoggerTypeId]: loggerVariance,\n  log: ({\n    message\n  }) => log(message),\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n});\n\n/** @internal */\nconst succeed = value => {\n  return simple(() => value);\n};\n\n/** @internal */\nconst sync = evaluate => {\n  return simple(evaluate);\n};\n\n/** @internal */\nconst zip = /*#__PURE__*/dual(2, (self, that) => makeLogger(options => [self.log(options), that.log(options)]));\n\n/** @internal */\nconst zipLeft = /*#__PURE__*/dual(2, (self, that) => map(zip(self, that), tuple => tuple[0]));\n\n/** @internal */\nconst zipRight = /*#__PURE__*/dual(2, (self, that) => map(zip(self, that), tuple => tuple[1]));\n\n/** @internal */\nconst stringLogger = /*#__PURE__*/makeLogger(({\n  annotations,\n  cause,\n  date,\n  fiberId,\n  logLevel,\n  message,\n  spans\n}) => {\n  const nowMillis = date.getTime();\n  const outputArray = [`timestamp=${date.toISOString()}`, `level=${logLevel.label}`, `fiber=${threadName(fiberId)}`];\n  let output = outputArray.join(\" \");\n  const stringMessage = serializeUnknown(message);\n  if (stringMessage.length > 0) {\n    output = output + \" message=\";\n    output = appendQuoted(stringMessage, output);\n  }\n  if (cause != null && cause._tag !== \"Empty\") {\n    output = output + \" cause=\";\n    output = appendQuoted(pretty(cause), output);\n  }\n  if (isCons(spans)) {\n    output = output + \" \";\n    let first = true;\n    for (const span of spans) {\n      if (first) {\n        first = false;\n      } else {\n        output = output + \" \";\n      }\n      output = output + pipe(span, render(nowMillis));\n    }\n  }\n  if (pipe(annotations, size) > 0) {\n    output = output + \" \";\n    let first = true;\n    for (const [key, value] of annotations) {\n      if (first) {\n        first = false;\n      } else {\n        output = output + \" \";\n      }\n      output = output + filterKeyName(key);\n      output = output + \"=\";\n      output = appendQuoted(serializeUnknown(value), output);\n    }\n  }\n  return output;\n});\nconst serializeUnknown = u => {\n  try {\n    return typeof u === \"object\" ? JSON.stringify(u) : String(u);\n  } catch (_) {\n    return String(u);\n  }\n};\n\n/** @internal */\nconst escapeDoubleQuotes = str => `\"${str.replace(/\\\\([\\s\\S])|(\")/g, \"\\\\$1$2\")}\"`;\nconst textOnly = /^[^\\s\"=]+$/;\n\n/** @internal */\nconst appendQuoted = (label, output) => output + (label.match(textOnly) ? label : escapeDoubleQuotes(label));\n\n/** @internal */\nconst logfmtLogger = /*#__PURE__*/makeLogger(({\n  annotations,\n  cause,\n  date,\n  fiberId,\n  logLevel,\n  message,\n  spans\n}) => {\n  const nowMillis = date.getTime();\n  const outputArray = [`timestamp=${date.toISOString()}`, `level=${logLevel.label}`, `fiber=${threadName(fiberId)}`];\n  let output = outputArray.join(\" \");\n  const stringMessage = serializeUnknown(message);\n  if (stringMessage.length > 0) {\n    output = output + \" message=\";\n    output = appendQuotedLogfmt(stringMessage, output);\n  }\n  if (cause != null && cause._tag !== \"Empty\") {\n    output = output + \" cause=\";\n    output = appendQuotedLogfmt(pretty(cause), output);\n  }\n  if (isCons(spans)) {\n    output = output + \" \";\n    let first = true;\n    for (const span of spans) {\n      if (first) {\n        first = false;\n      } else {\n        output = output + \" \";\n      }\n      output = output + pipe(span, renderLogSpanLogfmt(nowMillis));\n    }\n  }\n  if (pipe(annotations, size) > 0) {\n    output = output + \" \";\n    let first = true;\n    for (const [key, value] of annotations) {\n      if (first) {\n        first = false;\n      } else {\n        output = output + \" \";\n      }\n      output = output + filterKeyName(key);\n      output = output + \"=\";\n      output = appendQuotedLogfmt(serializeUnknown(value), output);\n    }\n  }\n  return output;\n});\n\n/** @internal */\nconst filterKeyName = key => key.replace(/[\\s=\"]/g, \"_\");\n\n/** @internal */\nconst escapeDoubleQuotesLogfmt = str => JSON.stringify(str);\n\n/** @internal */\nconst appendQuotedLogfmt = (label, output) => output + (label.match(textOnly) ? label : escapeDoubleQuotesLogfmt(label));\n\n/** @internal */\nconst renderLogSpanLogfmt = now => self => {\n  const label = filterKeyName(self.label);\n  return `${label}=${now - self.startTime}ms`;\n};\n\nexport { LoggerTypeId, filterLogLevel, logfmtLogger, makeLogger, map, mapInput, none, serializeUnknown, simple, stringLogger, succeed, sync, zip, zipLeft, zipRight };\n","import { dedupe, appendAll, of, unsafeFromArray } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { symbol as symbol$1, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { makeBy } from '../../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/** @internal */\nconst MetricBoundariesSymbolKey = \"effect/MetricBoundaries\";\n\n/** @internal */\nconst MetricBoundariesTypeId = /*#__PURE__*/Symbol.for(MetricBoundariesSymbolKey);\n\n/** @internal */\nclass MetricBoundariesImpl {\n  [MetricBoundariesTypeId] = MetricBoundariesTypeId;\n  constructor(values) {\n    this.values = values;\n  }\n  [symbol]() {\n    return pipe(hash(MetricBoundariesSymbolKey), combine(hash(this.values)));\n  }\n  [symbol$1](u) {\n    return isMetricBoundaries(u) && equals(this.values, u.values);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst isMetricBoundaries = u => hasProperty(u, MetricBoundariesTypeId);\n\n/** @internal */\nconst fromChunk = chunk => {\n  const values = pipe(chunk, appendAll(of(Number.POSITIVE_INFINITY)), dedupe);\n  return new MetricBoundariesImpl(values);\n};\n\n/** @internal */\nconst linear = options => pipe(makeBy(options.count - 1, i => options.start + i * options.width), unsafeFromArray, fromChunk);\n\n/** @internal */\nconst exponential = options => pipe(makeBy(options.count - 1, i => options.start * Math.pow(options.factor, i)), unsafeFromArray, fromChunk);\n\nexport { MetricBoundariesTypeId, exponential, fromChunk, isMetricBoundaries, linear };\n","import { decode } from '../../Duration/dist/effect-Duration.esm.js';\nimport { symbol as symbol$1, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, hash, combine } from '../../Hash/dist/effect-Hash.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst MetricKeyTypeSymbolKey = \"effect/MetricKeyType\";\n\n/** @internal */\nconst MetricKeyTypeTypeId = /*#__PURE__*/Symbol.for(MetricKeyTypeSymbolKey);\n\n/** @internal */\nconst CounterKeyTypeSymbolKey = \"effect/MetricKeyType/Counter\";\n\n/** @internal */\nconst CounterKeyTypeTypeId = /*#__PURE__*/Symbol.for(CounterKeyTypeSymbolKey);\n\n/** @internal */\nconst FrequencyKeyTypeSymbolKey = \"effect/MetricKeyType/Frequency\";\n\n/** @internal */\nconst FrequencyKeyTypeTypeId = /*#__PURE__*/Symbol.for(FrequencyKeyTypeSymbolKey);\n\n/** @internal */\nconst GaugeKeyTypeSymbolKey = \"effect/MetricKeyType/Gauge\";\n\n/** @internal */\nconst GaugeKeyTypeTypeId = /*#__PURE__*/Symbol.for(GaugeKeyTypeSymbolKey);\n\n/** @internal */\nconst HistogramKeyTypeSymbolKey = \"effect/MetricKeyType/Histogram\";\n\n/** @internal */\nconst HistogramKeyTypeTypeId = /*#__PURE__*/Symbol.for(HistogramKeyTypeSymbolKey);\n\n/** @internal */\nconst SummaryKeyTypeSymbolKey = \"effect/MetricKeyType/Summary\";\n\n/** @internal */\nconst SummaryKeyTypeTypeId = /*#__PURE__*/Symbol.for(SummaryKeyTypeSymbolKey);\n\n/** @internal */\nconst metricKeyTypeVariance = {\n  _In: _ => _,\n  _Out: _ => _\n};\n\n/** @internal */\nclass CounterKeyType {\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [CounterKeyTypeTypeId] = CounterKeyTypeTypeId;\n  constructor(incremental, bigint) {\n    this.incremental = incremental;\n    this.bigint = bigint;\n  }\n  [symbol]() {\n    return hash(CounterKeyTypeSymbolKey);\n  }\n  [symbol$1](that) {\n    return isCounterKey(that);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nclass FrequencyKeyType {\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [FrequencyKeyTypeTypeId] = FrequencyKeyTypeTypeId;\n  [symbol]() {\n    return hash(FrequencyKeyTypeSymbolKey);\n  }\n  [symbol$1](that) {\n    return isFrequencyKey(that);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nclass GaugeKeyType {\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [GaugeKeyTypeTypeId] = GaugeKeyTypeTypeId;\n  constructor(bigint) {\n    this.bigint = bigint;\n  }\n  [symbol]() {\n    return hash(GaugeKeyTypeSymbolKey);\n  }\n  [symbol$1](that) {\n    return isGaugeKey(that);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/**\n * @category model\n * @since 2.0.0\n */\nclass HistogramKeyType {\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [HistogramKeyTypeTypeId] = HistogramKeyTypeTypeId;\n  constructor(boundaries) {\n    this.boundaries = boundaries;\n  }\n  [symbol]() {\n    return pipe(hash(HistogramKeyTypeSymbolKey), combine(hash(this.boundaries)));\n  }\n  [symbol$1](that) {\n    return isHistogramKey(that) && equals(this.boundaries, that.boundaries);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nclass SummaryKeyType {\n  [MetricKeyTypeTypeId] = metricKeyTypeVariance;\n  [SummaryKeyTypeTypeId] = SummaryKeyTypeTypeId;\n  constructor(maxAge, maxSize, error, quantiles) {\n    this.maxAge = maxAge;\n    this.maxSize = maxSize;\n    this.error = error;\n    this.quantiles = quantiles;\n  }\n  [symbol]() {\n    return pipe(hash(SummaryKeyTypeSymbolKey), combine(hash(this.maxAge)), combine(hash(this.maxSize)), combine(hash(this.error)), combine(hash(this.quantiles)));\n  }\n  [symbol$1](that) {\n    return isSummaryKey(that) && equals(this.maxAge, that.maxAge) && this.maxSize === that.maxSize && this.error === that.error && equals(this.quantiles, that.quantiles);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst counter = options => new CounterKeyType(options?.incremental ?? false, options?.bigint ?? false);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst frequency = /*#__PURE__*/new FrequencyKeyType();\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst gauge = options => new GaugeKeyType(options?.bigint ?? false);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst histogram = boundaries => {\n  return new HistogramKeyType(boundaries);\n};\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst summary = options => {\n  return new SummaryKeyType(decode(options.maxAge), options.maxSize, options.error, options.quantiles);\n};\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isMetricKeyType = u => hasProperty(u, MetricKeyTypeTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isCounterKey = u => hasProperty(u, CounterKeyTypeTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isFrequencyKey = u => hasProperty(u, FrequencyKeyTypeTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isGaugeKey = u => hasProperty(u, GaugeKeyTypeTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isHistogramKey = u => hasProperty(u, HistogramKeyTypeTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isSummaryKey = u => hasProperty(u, SummaryKeyTypeTypeId);\n\nexport { CounterKeyTypeTypeId, FrequencyKeyTypeTypeId, GaugeKeyTypeTypeId, HistogramKeyType, HistogramKeyTypeTypeId, MetricKeyTypeTypeId, SummaryKeyTypeTypeId, counter, frequency, gauge, histogram, isCounterKey, isFrequencyKey, isGaugeKey, isHistogramKey, isMetricKeyType, isSummaryKey, summary };\n","import { symbol as symbol$1, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { make, fromIterable, size, union, empty } from '../../HashSet/dist/effect-HashSet.esm.js';\nimport { counter as counter$1, frequency as frequency$1, gauge as gauge$1, histogram as histogram$1, summary as summary$1 } from './keyType.esm.js';\nimport { make as make$1 } from './label.esm.js';\nimport { fromNullable } from '../../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst MetricKeySymbolKey = \"effect/MetricKey\";\n\n/** @internal */\nconst MetricKeyTypeId = /*#__PURE__*/Symbol.for(MetricKeySymbolKey);\n\n/** @internal */\nconst metricKeyVariance = {\n  _Type: _ => _\n};\n\n/** @internal */\nclass MetricKeyImpl {\n  [MetricKeyTypeId] = metricKeyVariance;\n  constructor(name, keyType, description, tags = empty()) {\n    this.name = name;\n    this.keyType = keyType;\n    this.description = description;\n    this.tags = tags;\n  }\n  [symbol]() {\n    return pipe(hash(this.name), combine(hash(this.keyType)), combine(hash(this.description)), combine(hash(this.tags)));\n  }\n  [symbol$1](u) {\n    return isMetricKey(u) && this.name === u.name && equals(this.keyType, u.keyType) && equals(this.description, u.description) && equals(this.tags, u.tags);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst isMetricKey = u => hasProperty(u, MetricKeyTypeId);\n\n/** @internal */\nconst counter = (name, options) => new MetricKeyImpl(name, counter$1(options), fromNullable(options?.description));\n\n/** @internal */\nconst frequency = (name, description) => new MetricKeyImpl(name, frequency$1, fromNullable(description));\n\n/** @internal */\nconst gauge = (name, options) => new MetricKeyImpl(name, gauge$1(options), fromNullable(options?.description));\n\n/** @internal */\nconst histogram = (name, boundaries, description) => new MetricKeyImpl(name, histogram$1(boundaries), fromNullable(description));\n\n/** @internal */\nconst summary = options => new MetricKeyImpl(options.name, summary$1(options), fromNullable(options.description));\n\n/** @internal */\nconst tagged = /*#__PURE__*/dual(3, (self, key, value) => taggedWithLabelSet(self, make(make$1(key, value))));\n\n/** @internal */\nconst taggedWithLabels = /*#__PURE__*/dual(2, (self, extraTags) => taggedWithLabelSet(self, fromIterable(extraTags)));\n\n/** @internal */\nconst taggedWithLabelSet = /*#__PURE__*/dual(2, (self, extraTags) => size(extraTags) === 0 ? self : new MetricKeyImpl(self.name, self.keyType, self.description, pipe(self.tags, union(extraTags))));\n\nexport { MetricKeyTypeId, counter, frequency, gauge, histogram, isMetricKey, summary, tagged, taggedWithLabelSet, taggedWithLabels };\n","import { symbol as symbol$1, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/** @internal */\nconst MetricStateSymbolKey = \"effect/MetricState\";\n\n/** @internal */\nconst MetricStateTypeId = /*#__PURE__*/Symbol.for(MetricStateSymbolKey);\n\n/** @internal */\nconst CounterStateSymbolKey = \"effect/MetricState/Counter\";\n\n/** @internal */\nconst CounterStateTypeId = /*#__PURE__*/Symbol.for(CounterStateSymbolKey);\n\n/** @internal */\nconst FrequencyStateSymbolKey = \"effect/MetricState/Frequency\";\n\n/** @internal */\nconst FrequencyStateTypeId = /*#__PURE__*/Symbol.for(FrequencyStateSymbolKey);\n\n/** @internal */\nconst GaugeStateSymbolKey = \"effect/MetricState/Gauge\";\n\n/** @internal */\nconst GaugeStateTypeId = /*#__PURE__*/Symbol.for(GaugeStateSymbolKey);\n\n/** @internal */\nconst HistogramStateSymbolKey = \"effect/MetricState/Histogram\";\n\n/** @internal */\nconst HistogramStateTypeId = /*#__PURE__*/Symbol.for(HistogramStateSymbolKey);\n\n/** @internal */\nconst SummaryStateSymbolKey = \"effect/MetricState/Summary\";\n\n/** @internal */\nconst SummaryStateTypeId = /*#__PURE__*/Symbol.for(SummaryStateSymbolKey);\n\n/** @internal */\nconst metricStateVariance = {\n  _A: _ => _\n};\n\n/** @internal */\nclass CounterState {\n  [MetricStateTypeId] = metricStateVariance;\n  [CounterStateTypeId] = CounterStateTypeId;\n  constructor(count) {\n    this.count = count;\n  }\n  [symbol]() {\n    return pipe(hash(CounterStateSymbolKey), combine(hash(this.count)));\n  }\n  [symbol$1](that) {\n    return isCounterState(that) && this.count === that.count;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nclass FrequencyState {\n  [MetricStateTypeId] = metricStateVariance;\n  [FrequencyStateTypeId] = FrequencyStateTypeId;\n  constructor(occurrences) {\n    this.occurrences = occurrences;\n  }\n  [symbol]() {\n    return pipe(hash(FrequencyStateSymbolKey), combine(hash(this.occurrences)));\n  }\n  [symbol$1](that) {\n    return isFrequencyState(that) && equals(this.occurrences, that.occurrences);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nclass GaugeState {\n  [MetricStateTypeId] = metricStateVariance;\n  [GaugeStateTypeId] = GaugeStateTypeId;\n  constructor(value) {\n    this.value = value;\n  }\n  [symbol]() {\n    return pipe(hash(GaugeStateSymbolKey), combine(hash(this.value)));\n  }\n  [symbol$1](u) {\n    return isGaugeState(u) && this.value === u.value;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nclass HistogramState {\n  [MetricStateTypeId] = metricStateVariance;\n  [HistogramStateTypeId] = HistogramStateTypeId;\n  constructor(buckets, count, min, max, sum) {\n    this.buckets = buckets;\n    this.count = count;\n    this.min = min;\n    this.max = max;\n    this.sum = sum;\n  }\n  [symbol]() {\n    return pipe(hash(HistogramStateSymbolKey), combine(hash(this.buckets)), combine(hash(this.count)), combine(hash(this.min)), combine(hash(this.max)), combine(hash(this.sum)));\n  }\n  [symbol$1](that) {\n    return isHistogramState(that) && equals(this.buckets, that.buckets) && this.count === that.count && this.min === that.min && this.max === that.max && this.sum === that.sum;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nclass SummaryState {\n  [MetricStateTypeId] = metricStateVariance;\n  [SummaryStateTypeId] = SummaryStateTypeId;\n  constructor(error, quantiles, count, min, max, sum) {\n    this.error = error;\n    this.quantiles = quantiles;\n    this.count = count;\n    this.min = min;\n    this.max = max;\n    this.sum = sum;\n  }\n  [symbol]() {\n    return pipe(hash(SummaryStateSymbolKey), combine(hash(this.error)), combine(hash(this.quantiles)), combine(hash(this.count)), combine(hash(this.min)), combine(hash(this.max)), combine(hash(this.sum)));\n  }\n  [symbol$1](that) {\n    return isSummaryState(that) && this.error === that.error && equals(this.quantiles, that.quantiles) && this.count === that.count && this.min === that.min && this.max === that.max && this.sum === that.sum;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst counter = count => new CounterState(count);\n\n/** @internal */\nconst frequency = occurrences => {\n  return new FrequencyState(occurrences);\n};\n\n/** @internal */\nconst gauge = count => new GaugeState(count);\n\n/** @internal */\nconst histogram = options => new HistogramState(options.buckets, options.count, options.min, options.max, options.sum);\n\n/** @internal */\nconst summary = options => new SummaryState(options.error, options.quantiles, options.count, options.min, options.max, options.sum);\n\n/** @internal */\nconst isMetricState = u => hasProperty(u, MetricStateTypeId);\n\n/** @internal */\nconst isCounterState = u => hasProperty(u, CounterStateTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isFrequencyState = u => hasProperty(u, FrequencyStateTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isGaugeState = u => hasProperty(u, GaugeStateTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isHistogramState = u => hasProperty(u, HistogramStateTypeId);\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isSummaryState = u => hasProperty(u, SummaryStateTypeId);\n\nexport { CounterStateTypeId, FrequencyStateTypeId, GaugeStateTypeId, HistogramState, HistogramStateTypeId, MetricStateTypeId, SummaryState, SummaryStateTypeId, counter, frequency, gauge, histogram, isCounterState, isFrequencyState, isGaugeState, isHistogramState, isMetricState, isSummaryState, summary };\n","import { map, sort, unsafeFromArray, isEmpty, empty, unsafeHead, drop, of, append, unsafeLast, splitWhere, head } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { millis, greaterThanOrEqualTo, zero } from '../../Duration/dist/effect-Duration.esm.js';\nimport { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { fromIterable } from '../../HashMap/dist/effect-HashMap.esm.js';\nimport { counter as counter$1, frequency as frequency$1, gauge as gauge$1, histogram as histogram$1, summary as summary$1 } from './state.esm.js';\nimport { Order } from '../../Number/dist/effect-Number.esm.js';\nimport { none, some } from '../../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { reduce } from '../../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/** @internal */\nconst MetricHookSymbolKey = \"effect/MetricHook\";\n\n/** @internal */\nconst MetricHookTypeId = /*#__PURE__*/Symbol.for(MetricHookSymbolKey);\n\n/** @internal */\nconst metricHookVariance = {\n  _In: _ => _,\n  _Out: _ => _\n};\n\n/** @internal */\nconst make = options => ({\n  [MetricHookTypeId]: metricHookVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  ...options\n});\n\n/** @internal */\nconst onUpdate = /*#__PURE__*/dual(2, (self, f) => ({\n  [MetricHookTypeId]: metricHookVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  get: self.get,\n  update: input => {\n    self.update(input);\n    return f(input);\n  }\n}));\nconst bigint0 = /*#__PURE__*/BigInt(0);\n\n/** @internal */\nconst counter = key => {\n  let sum = key.keyType.bigint ? bigint0 : 0;\n  const canUpdate = key.keyType.incremental ? key.keyType.bigint ? value => value >= bigint0 : value => value >= 0 : _value => true;\n  return make({\n    get: () => counter$1(sum),\n    update: value => {\n      if (canUpdate(value)) {\n        sum = sum + value;\n      }\n    }\n  });\n};\n\n/** @internal */\nconst frequency = _key => {\n  const values = new Map();\n  const update = word => {\n    const slotCount = values.get(word) ?? 0;\n    values.set(word, slotCount + 1);\n  };\n  const snapshot = () => fromIterable(values.entries());\n  return make({\n    get: () => frequency$1(snapshot()),\n    update\n  });\n};\n\n/** @internal */\nconst gauge = (_key, startAt) => {\n  let value = startAt;\n  return make({\n    get: () => gauge$1(value),\n    update: v => {\n      value = v;\n    }\n  });\n};\n\n/** @internal */\nconst histogram = key => {\n  const bounds = key.keyType.boundaries.values;\n  const size = bounds.length;\n  const values = new Uint32Array(size + 1);\n  const boundaries = new Float32Array(size);\n  let count = 0;\n  let sum = 0;\n  let min = Number.MAX_VALUE;\n  let max = Number.MIN_VALUE;\n  pipe(bounds, sort(Order), map((n, i) => {\n    boundaries[i] = n;\n  }));\n\n  // Insert the value into the right bucket with a binary search\n  const update = value => {\n    let from = 0;\n    let to = size;\n    while (from !== to) {\n      const mid = Math.floor(from + (to - from) / 2);\n      const boundary = boundaries[mid];\n      if (value <= boundary) {\n        to = mid;\n      } else {\n        from = mid;\n      }\n      // The special case when to / from have a distance of one\n      if (to === from + 1) {\n        if (value <= boundaries[from]) {\n          to = from;\n        } else {\n          from = to;\n        }\n      }\n    }\n    values[from] = values[from] + 1;\n    count = count + 1;\n    sum = sum + value;\n    if (value < min) {\n      min = value;\n    }\n    if (value > max) {\n      max = value;\n    }\n  };\n  const getBuckets = () => {\n    const builder = Array(size);\n    let cumulated = 0;\n    for (let i = 0; i < size; i++) {\n      const boundary = boundaries[i];\n      const value = values[i];\n      cumulated = cumulated + value;\n      builder[i] = [boundary, cumulated];\n    }\n    return unsafeFromArray(builder);\n  };\n  return make({\n    get: () => histogram$1({\n      buckets: getBuckets(),\n      count,\n      min,\n      max,\n      sum\n    }),\n    update\n  });\n};\n\n/** @internal */\nconst summary = key => {\n  const {\n    error,\n    maxAge,\n    maxSize,\n    quantiles\n  } = key.keyType;\n  const sortedQuantiles = pipe(quantiles, sort(Order));\n  const values = Array(maxSize);\n  let head = 0;\n  let count = 0;\n  let sum = 0;\n  let min = Number.MAX_VALUE;\n  let max = Number.MIN_VALUE;\n\n  // Just before the snapshot we filter out all values older than maxAge\n  const snapshot = now => {\n    const builder = [];\n    // If the buffer is not full yet it contains valid items at the 0..last\n    // indices and null values at the rest of the positions.\n    //\n    // If the buffer is already full then all elements contains a valid\n    // measurement with timestamp.\n    //\n    // At any given point in time we can enumerate all the non-null elements in\n    // the buffer and filter them by timestamp to get a valid view of a time\n    // window.\n    //\n    // The order does not matter because it gets sorted before passing to\n    // `calculateQuantiles`.\n    let i = 0;\n    while (i !== maxSize - 1) {\n      const item = values[i];\n      if (item != null) {\n        const [t, v] = item;\n        const age = millis(now - t);\n        if (greaterThanOrEqualTo(age, zero) && age <= maxAge) {\n          builder.push(v);\n        }\n      }\n      i = i + 1;\n    }\n    return calculateQuantiles(error, sortedQuantiles, pipe(unsafeFromArray(builder), sort(Order)));\n  };\n  const observe = (value, timestamp) => {\n    if (maxSize > 0) {\n      head = head + 1;\n      const target = head % maxSize;\n      values[target] = [timestamp, value];\n    }\n    count = count + 1;\n    sum = sum + value;\n    if (value < min) {\n      min = value;\n    }\n    if (value > max) {\n      max = value;\n    }\n  };\n  return make({\n    get: () => summary$1({\n      error,\n      quantiles: snapshot(Date.now()),\n      count,\n      min,\n      max,\n      sum\n    }),\n    update: ([value, timestamp]) => observe(value, timestamp)\n  });\n};\n\n/** @internal */\n\n/** @internal */\nconst calculateQuantiles = (error, sortedQuantiles, sortedSamples) => {\n  // The number of samples examined\n  const sampleCount = sortedSamples.length;\n  if (isEmpty(sortedQuantiles)) {\n    return empty();\n  }\n  const head = unsafeHead(sortedQuantiles);\n  const tail = pipe(sortedQuantiles, drop(1));\n  const resolved = pipe(tail, reduce(of(resolveQuantile(error, sampleCount, none(), 0, head, sortedSamples)), (accumulator, quantile) => {\n    const h = unsafeHead(accumulator);\n    return pipe(accumulator, append(resolveQuantile(error, sampleCount, h.value, h.consumed, quantile, h.rest)));\n  }));\n  return pipe(resolved, map(rq => [rq.quantile, rq.value]));\n};\n\n/** @internal */\nconst resolveQuantile = (error, sampleCount, current, consumed, quantile, rest) => {\n  let error_1 = error;\n  let sampleCount_1 = sampleCount;\n  let current_1 = current;\n  let consumed_1 = consumed;\n  let quantile_1 = quantile;\n  let rest_1 = rest;\n  let error_2 = error;\n  let sampleCount_2 = sampleCount;\n  let current_2 = current;\n  let consumed_2 = consumed;\n  let quantile_2 = quantile;\n  let rest_2 = rest;\n  // eslint-disable-next-line no-constant-condition\n  while (1) {\n    // If the remaining list of samples is empty, there is nothing more to resolve\n    if (isEmpty(rest_1)) {\n      return {\n        quantile: quantile_1,\n        value: none(),\n        consumed: consumed_1,\n        rest: empty()\n      };\n    }\n    // If the quantile is the 100% quantile, we can take the maximum of all the\n    // remaining values as the result\n    if (quantile_1 === 1) {\n      return {\n        quantile: quantile_1,\n        value: some(unsafeLast(rest_1)),\n        consumed: consumed_1 + rest_1.length,\n        rest: empty()\n      };\n    }\n    // Split into two chunks - the first chunk contains all elements of the same\n    // value as the chunk head\n    const sameHead = pipe(rest_1, splitWhere(n => n > unsafeHead(rest_1)));\n    // How many elements do we want to accept for this quantile\n    const desired = quantile_1 * sampleCount_1;\n    // The error margin\n    const allowedError = error_1 / 2 * desired;\n    // Taking into account the elements consumed from the samples so far and the\n    // number of same elements at the beginning of the chunk, calculate the number\n    // of elements we would have if we selected the current head as result\n    const candConsumed = consumed_1 + sameHead[0].length;\n    const candError = Math.abs(candConsumed - desired);\n    // If we haven't got enough elements yet, recurse\n    if (candConsumed < desired - allowedError) {\n      error_2 = error_1;\n      sampleCount_2 = sampleCount_1;\n      current_2 = head(rest_1);\n      consumed_2 = candConsumed;\n      quantile_2 = quantile_1;\n      rest_2 = sameHead[1];\n      error_1 = error_2;\n      sampleCount_1 = sampleCount_2;\n      current_1 = current_2;\n      consumed_1 = consumed_2;\n      quantile_1 = quantile_2;\n      rest_1 = rest_2;\n      continue;\n    }\n    // If we have too many elements, select the previous value and hand back the\n    // the rest as leftover\n    if (candConsumed > desired + allowedError) {\n      return {\n        quantile: quantile_1,\n        value: current_1,\n        consumed: consumed_1,\n        rest: rest_1\n      };\n    }\n    // If we are in the target interval, select the current head and hand back the leftover after dropping all elements\n    // from the sample chunk that are equal to the current head\n    switch (current_1._tag) {\n      case \"None\":\n        {\n          error_2 = error_1;\n          sampleCount_2 = sampleCount_1;\n          current_2 = head(rest_1);\n          consumed_2 = candConsumed;\n          quantile_2 = quantile_1;\n          rest_2 = sameHead[1];\n          error_1 = error_2;\n          sampleCount_1 = sampleCount_2;\n          current_1 = current_2;\n          consumed_1 = consumed_2;\n          quantile_1 = quantile_2;\n          rest_1 = rest_2;\n          continue;\n        }\n      case \"Some\":\n        {\n          const prevError = Math.abs(desired - current_1.value);\n          if (candError < prevError) {\n            error_2 = error_1;\n            sampleCount_2 = sampleCount_1;\n            current_2 = head(rest_1);\n            consumed_2 = candConsumed;\n            quantile_2 = quantile_1;\n            rest_2 = sameHead[1];\n            error_1 = error_2;\n            sampleCount_1 = sampleCount_2;\n            current_1 = current_2;\n            consumed_1 = consumed_2;\n            quantile_1 = quantile_2;\n            rest_1 = rest_2;\n            continue;\n          }\n          return {\n            quantile: quantile_1,\n            value: some(current_1.value),\n            consumed: consumed_1,\n            rest: rest_1\n          };\n        }\n    }\n  }\n  throw new Error(\"BUG: MetricHook.resolveQuantiles - please report an issue at https://github.com/Effect-TS/io/issues\");\n};\n\nexport { MetricHookTypeId, counter, frequency, gauge, histogram, make, onUpdate, summary };\n","import { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\n\n/** @internal */\nconst MetricPairSymbolKey = \"effect/MetricPair\";\n\n/** @internal */\nconst MetricPairTypeId = /*#__PURE__*/Symbol.for(MetricPairSymbolKey);\n\n/** @internal */\nconst metricPairVariance = {\n  _Type: _ => _\n};\n\n/** @internal */\nconst make = (metricKey, metricState) => {\n  return {\n    [MetricPairTypeId]: metricPairVariance,\n    metricKey,\n    metricState,\n    pipe() {\n      return pipeArguments(this, arguments);\n    }\n  };\n};\n\n/** @internal */\nconst unsafeMake = (metricKey, metricState) => {\n  return {\n    [MetricPairTypeId]: metricPairVariance,\n    metricKey,\n    metricState,\n    pipe() {\n      return pipeArguments(this, arguments);\n    }\n  };\n};\n\nexport { MetricPairTypeId, make, unsafeMake };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { empty as empty$1, fromIterable as fromIterable$1, get as get$1, modify as modify$1, remove as remove$1, set as set$1, size as size$1 } from '../../HashMap/dist/effect-HashMap.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { update, get as get$2, make as make$1 } from '../../MutableRef/dist/effect-MutableRef.esm.js';\nimport { isSome } from '../../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/MutableHashMap\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst MutableHashMapProto = {\n  [TypeId]: TypeId,\n  [Symbol.iterator]() {\n    return this.backingMap.current[Symbol.iterator]();\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"MutableHashMap\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst fromHashMap = backingMap => {\n  const map = Object.create(MutableHashMapProto);\n  map.backingMap = make$1(backingMap);\n  return map;\n};\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst empty = () => fromHashMap(empty$1());\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = (...entries) => fromIterable(entries);\n\n/**\n * @since 2.0.0\n * @category conversions\n */\nconst fromIterable = entries => fromHashMap(fromIterable$1(entries));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst get = /*#__PURE__*/dual(2, (self, key) => get$1(self.backingMap.current, key));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst has = /*#__PURE__*/dual(2, (self, key) => isSome(get(self, key)));\n\n/**\n * Updates the value of the specified key within the `MutableHashMap` if it exists.\n *\n * @since 2.0.0\n */\nconst modify = /*#__PURE__*/dual(3, (self, key, f) => {\n  update(self.backingMap, modify$1(key, f));\n  return self;\n});\n\n/**\n * Set or remove the specified key in the `MutableHashMap` using the specified\n * update function.\n *\n * @since 2.0.0\n */\nconst modifyAt = /*#__PURE__*/dual(3, (self, key, f) => {\n  const result = f(get(self, key));\n  if (isSome(result)) {\n    set(self, key, result.value);\n  } else {\n    remove(self, key);\n  }\n  return self;\n});\n\n/**\n * @since 2.0.0\n */\nconst remove = /*#__PURE__*/dual(2, (self, key) => {\n  update(self.backingMap, remove$1(key));\n  return self;\n});\n\n/**\n * @since 2.0.0\n */\nconst set = /*#__PURE__*/dual(3, (self, key, value) => {\n  update(self.backingMap, set$1(key, value));\n  return self;\n});\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst size = self => size$1(get$2(self.backingMap));\n\nexport { empty, fromIterable, get, has, make, modify, modifyAt, remove, set, size };\n","import { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { fromIterable } from '../../HashSet/dist/effect-HashSet.esm.js';\nimport { counter, frequency, gauge, histogram, summary } from './hook.esm.js';\nimport { isCounterKey, isGaugeKey, isFrequencyKey, isHistogramKey, isSummaryKey } from './keyType.esm.js';\nimport { unsafeMake } from './pair.esm.js';\nimport { empty, get, has, set } from '../../MutableHashMap/dist/effect-MutableHashMap.esm.js';\nimport { getOrUndefined } from '../../Option/dist/effect-Option.esm.js';\n\n/** @internal */\nconst MetricRegistrySymbolKey = \"effect/MetricRegistry\";\n\n/** @internal */\nconst MetricRegistryTypeId = /*#__PURE__*/Symbol.for(MetricRegistrySymbolKey);\n\n/** @internal */\nclass MetricRegistryImpl {\n  [MetricRegistryTypeId] = MetricRegistryTypeId;\n  map = empty();\n  snapshot() {\n    const result = [];\n    for (const [key, hook] of this.map) {\n      result.push(unsafeMake(key, hook.get()));\n    }\n    return fromIterable(result);\n  }\n  get(key) {\n    const hook = pipe(this.map, get(key), getOrUndefined);\n    if (hook == null) {\n      if (isCounterKey(key.keyType)) {\n        return this.getCounter(key);\n      }\n      if (isGaugeKey(key.keyType)) {\n        return this.getGauge(key);\n      }\n      if (isFrequencyKey(key.keyType)) {\n        return this.getFrequency(key);\n      }\n      if (isHistogramKey(key.keyType)) {\n        return this.getHistogram(key);\n      }\n      if (isSummaryKey(key.keyType)) {\n        return this.getSummary(key);\n      }\n      throw new Error(\"BUG: MetricRegistry.get - unknown MetricKeyType - please report an issue at https://github.com/Effect-TS/io/issues\");\n    } else {\n      return hook;\n    }\n  }\n  getCounter(key) {\n    let value = pipe(this.map, get(key), getOrUndefined);\n    if (value == null) {\n      const counter$1 = counter(key);\n      if (!pipe(this.map, has(key))) {\n        pipe(this.map, set(key, counter$1));\n      }\n      value = counter$1;\n    }\n    return value;\n  }\n  getFrequency(key) {\n    let value = pipe(this.map, get(key), getOrUndefined);\n    if (value == null) {\n      const frequency$1 = frequency();\n      if (!pipe(this.map, has(key))) {\n        pipe(this.map, set(key, frequency$1));\n      }\n      value = frequency$1;\n    }\n    return value;\n  }\n  getGauge(key) {\n    let value = pipe(this.map, get(key), getOrUndefined);\n    if (value == null) {\n      const gauge$1 = gauge(key, key.keyType.bigint ? BigInt(0) : 0);\n      if (!pipe(this.map, has(key))) {\n        pipe(this.map, set(key, gauge$1));\n      }\n      value = gauge$1;\n    }\n    return value;\n  }\n  getHistogram(key) {\n    let value = pipe(this.map, get(key), getOrUndefined);\n    if (value == null) {\n      const histogram$1 = histogram(key);\n      if (!pipe(this.map, has(key))) {\n        pipe(this.map, set(key, histogram$1));\n      }\n      value = histogram$1;\n    }\n    return value;\n  }\n  getSummary(key) {\n    let value = pipe(this.map, get(key), getOrUndefined);\n    if (value == null) {\n      const summary$1 = summary(key);\n      if (!pipe(this.map, has(key))) {\n        pipe(this.map, set(key, summary$1));\n      }\n      value = summary$1;\n    }\n    return value;\n  }\n}\n\n/** @internal */\nconst make = () => {\n  return new MetricRegistryImpl();\n};\n\nexport { MetricRegistryTypeId, make };\n","import { clockWith } from '../Clock/dist/effect-Clock.esm.js';\nimport { toMillis, nanos } from '../Duration/dist/effect-Duration.esm.js';\nimport { dual, constVoid, pipe, identity } from '../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { empty, make as make$2, union, fromIterable, isHashSet } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { defects } from './cause.esm.js';\nimport { tap, sync as sync$1, matchCauseEffect, failCause, succeed as succeed$1, map as map$1, fiberRefGetWith, currentMetricLabels } from './core.esm.js';\nimport { exponential, fromChunk } from './metric/boundaries.esm.js';\nimport { counter as counter$1, frequency as frequency$1, gauge as gauge$1, histogram as histogram$1, summary as summary$1, taggedWithLabelSet } from './metric/key.esm.js';\nimport { make as make$3 } from './metric/label.esm.js';\nimport { make as make$1 } from './metric/registry.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { forEach } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\nimport { tapDefect, tapError } from './core-effect.esm.js';\n\n/** @internal */\nconst MetricSymbolKey = \"effect/Metric\";\n\n/** @internal */\nconst MetricTypeId = /*#__PURE__*/Symbol.for(MetricSymbolKey);\n\n/** @internal */\nconst metricVariance = {\n  _Type: _ => _,\n  _In: _ => _,\n  _Out: _ => _\n};\n\n/** @internal */\nconst globalMetricRegistry = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Metric/globalMetricRegistry\"), () => make$1());\n\n/** @internal */\nconst make = function (keyType, unsafeUpdate, unsafeValue) {\n  const metric = Object.assign(effect => tap(effect, a => sync$1(() => unsafeUpdate(a, empty()))), {\n    [MetricTypeId]: metricVariance,\n    keyType,\n    unsafeUpdate,\n    unsafeValue,\n    pipe() {\n      return pipeArguments(this, arguments);\n    }\n  });\n  return metric;\n};\n\n/** @internal */\nconst mapInput = /*#__PURE__*/dual(2, (self, f) => make(self.keyType, (input, extraTags) => self.unsafeUpdate(f(input), extraTags), self.unsafeValue));\n\n/** @internal */\nconst counter = (name, options) => fromMetricKey(counter$1(name, options));\n\n/** @internal */\nconst frequency = (name, description) => fromMetricKey(frequency$1(name, description));\n\n/** @internal */\nconst withConstantInput = /*#__PURE__*/dual(2, (self, input) => mapInput(self, () => input));\n\n/** @internal */\nconst fromMetricKey = key => {\n  const hook = extraTags => {\n    const fullKey = pipe(key, taggedWithLabelSet(extraTags));\n    return globalMetricRegistry.get(fullKey);\n  };\n  return make(key.keyType, (input, extraTags) => hook(extraTags).update(input), extraTags => hook(extraTags).get());\n};\n\n/** @internal */\nconst gauge = (name, options) => fromMetricKey(gauge$1(name, options));\n\n/** @internal */\nconst histogram = (name, boundaries, description) => fromMetricKey(histogram$1(name, boundaries, description));\n\n/* @internal */\nconst increment = self => update(self, self.keyType.bigint ? BigInt(1) : 1);\n\n/* @internal */\nconst incrementBy = /*#__PURE__*/dual(2, (self, amount) => update(self, amount));\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => make(self.keyType, self.unsafeUpdate, extraTags => f(self.unsafeValue(extraTags))));\n\n/** @internal */\nconst mapType = /*#__PURE__*/dual(2, (self, f) => make(f(self.keyType), self.unsafeUpdate, self.unsafeValue));\n\n/* @internal */\nconst set = /*#__PURE__*/dual(2, (self, value) => update(self, value));\n\n/** @internal */\nconst succeed = out => make(void 0, constVoid, () => out);\n\n/** @internal */\nconst sync = evaluate => make(void 0, constVoid, evaluate);\n\n/** @internal */\nconst summary = options => withNow(summaryTimestamp(options));\n\n/** @internal */\nconst summaryTimestamp = options => fromMetricKey(summary$1(options));\n\n/** @internal */\nconst tagged = /*#__PURE__*/dual(3, (self, key, value) => taggedWithLabels(self, make$2(make$3(key, value))));\n\n/** @internal */\nconst taggedWithLabelsInput = /*#__PURE__*/dual(2, (self, f) => map(make(self.keyType, (input, extraTags) => self.unsafeUpdate(input, union(fromIterable(f(input)), extraTags)), self.unsafeValue), constVoid));\n\n/** @internal */\nconst taggedWithLabels = /*#__PURE__*/dual(2, (self, extraTagsIterable) => {\n  const extraTags = isHashSet(extraTagsIterable) ? extraTagsIterable : fromIterable(extraTagsIterable);\n  return make(self.keyType, (input, extraTags1) => self.unsafeUpdate(input, pipe(extraTags, union(extraTags1))), extraTags1 => self.unsafeValue(pipe(extraTags, union(extraTags1))));\n});\n\n/** @internal */\nconst timer = name => {\n  const boundaries = exponential({\n    start: 1,\n    factor: 2,\n    count: 100\n  });\n  const base = pipe(histogram(name, boundaries), tagged(\"time_unit\", \"milliseconds\"));\n  return mapInput(base, toMillis);\n};\n\n/** @internal */\nconst timerWithBoundaries = (name, boundaries) => {\n  const base = pipe(histogram(name, fromChunk(boundaries)), tagged(\"time_unit\", \"milliseconds\"));\n  return mapInput(base, toMillis);\n};\n\n/* @internal */\nconst trackAll = /*#__PURE__*/dual(2, (self, input) => effect => matchCauseEffect(effect, {\n  onFailure: cause => {\n    self.unsafeUpdate(input, empty());\n    return failCause(cause);\n  },\n  onSuccess: value => {\n    self.unsafeUpdate(input, empty());\n    return succeed$1(value);\n  }\n}));\n\n/* @internal */\nconst trackDefect = /*#__PURE__*/dual(2, (self, metric) => trackDefectWith(self, metric, identity));\n\n/* @internal */\nconst trackDefectWith = /*#__PURE__*/dual(3, (self, metric, f) => {\n  const updater = defect => metric.unsafeUpdate(f(defect), empty());\n  return tapDefect(self, cause => sync$1(() => pipe(defects(cause), forEach(updater))));\n});\n\n/* @internal */\nconst trackDuration = /*#__PURE__*/dual(2, (self, metric) => trackDurationWith(self, metric, identity));\n\n/* @internal */\nconst trackDurationWith = /*#__PURE__*/dual(3, (self, metric, f) => clockWith(clock => {\n  const startTime = clock.unsafeCurrentTimeNanos();\n  return map$1(self, a => {\n    const endTime = clock.unsafeCurrentTimeNanos();\n    const duration = nanos(endTime - startTime);\n    metric.unsafeUpdate(f(duration), empty());\n    return a;\n  });\n}));\n\n/* @internal */\nconst trackError = /*#__PURE__*/dual(2, (self, metric) => trackErrorWith(self, metric, a => a));\n\n/* @internal */\nconst trackErrorWith = /*#__PURE__*/dual(3, (self, metric, f) => {\n  const updater = error => update(metric, f(error));\n  return tapError(self, updater);\n});\n\n/* @internal */\nconst trackSuccess = /*#__PURE__*/dual(2, (self, metric) => trackSuccessWith(self, metric, a => a));\n\n/* @internal */\nconst trackSuccessWith = /*#__PURE__*/dual(3, (self, metric, f) => {\n  const updater = value => update(metric, f(value));\n  return tap(self, updater);\n});\n\n/* @internal */\nconst update = /*#__PURE__*/dual(2, (self, input) => fiberRefGetWith(currentMetricLabels, tags => sync$1(() => self.unsafeUpdate(input, tags))));\n\n/* @internal */\nconst value = self => fiberRefGetWith(currentMetricLabels, tags => sync$1(() => self.unsafeValue(tags)));\n\n/** @internal */\nconst withNow = self => mapInput(self, input => [input, Date.now()]);\n\n/** @internal */\nconst zip = /*#__PURE__*/dual(2, (self, that) => make([self.keyType, that.keyType], (input, extraTags) => {\n  const [l, r] = input;\n  self.unsafeUpdate(l, extraTags);\n  that.unsafeUpdate(r, extraTags);\n}, extraTags => [self.unsafeValue(extraTags), that.unsafeValue(extraTags)]));\n\n/** @internal */\nconst unsafeSnapshot = () => globalMetricRegistry.snapshot();\n\n/** @internal */\nconst snapshot = /*#__PURE__*/sync$1(unsafeSnapshot);\n\nexport { MetricTypeId, counter, frequency, fromMetricKey, gauge, globalMetricRegistry, histogram, increment, incrementBy, make, map, mapInput, mapType, set, snapshot, succeed, summary, summaryTimestamp, sync, tagged, taggedWithLabels, taggedWithLabelsInput, timer, timerWithBoundaries, trackAll, trackDefect, trackDefectWith, trackDuration, trackDurationWith, trackError, trackErrorWith, trackSuccess, trackSuccessWith, unsafeSnapshot, update, value, withConstantInput, withNow, zip };\n","import { dual } from '../Function/dist/effect-Function.esm.js';\nimport { currentRequestMap } from './completedRequestMap.esm.js';\nimport { fiberRefGetWith, sync, deferredUnsafeDone, matchEffect, exitFail, exitSucceed } from './core.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { struct } from './Data.esm.js';\n\n/** @internal */\nconst RequestSymbolKey = \"effect/Request\";\n\n/** @internal */\nconst RequestTypeId = /*#__PURE__*/Symbol.for(RequestSymbolKey);\n\n/** @internal */\nconst requestVariance = {\n  _E: _ => _,\n  _A: _ => _\n};\n\n/** @internal */\nconst isRequest = u => hasProperty(u, RequestTypeId);\n\n/** @internal */\nconst of = () => args =>\n// @ts-expect-error\nstruct({\n  [RequestTypeId]: requestVariance,\n  ...args\n});\n\n/** @internal */\nconst tagged = tag => args =>\n// @ts-expect-error\nstruct({\n  [RequestTypeId]: requestVariance,\n  _tag: tag,\n  ...args\n});\n\n/** @internal */\nconst complete = /*#__PURE__*/dual(2, (self, result) => fiberRefGetWith(currentRequestMap, map => sync(() => {\n  if (map.has(self)) {\n    const entry = map.get(self);\n    if (!entry.state.completed) {\n      entry.state.completed = true;\n      deferredUnsafeDone(entry.result, result);\n    }\n  }\n})));\n\n/** @internal */\nconst completeEffect = /*#__PURE__*/dual(2, (self, effect) => matchEffect(effect, {\n  onFailure: error => complete(self, exitFail(error)),\n  onSuccess: value => complete(self, exitSucceed(value))\n}));\n\n/** @internal */\nconst fail = /*#__PURE__*/dual(2, (self, error) => complete(self, exitFail(error)));\n\n/** @internal */\nconst succeed = /*#__PURE__*/dual(2, (self, value) => complete(self, exitSucceed(value)));\n\n/** @internal */\nclass Listeners {\n  count = 0;\n  observers = new Set();\n  addObserver(f) {\n    this.observers.add(f);\n  }\n  removeObserver(f) {\n    this.observers.delete(f);\n  }\n  increment() {\n    this.count++;\n    this.observers.forEach(f => f(this.count));\n  }\n  decrement() {\n    this.count--;\n    this.observers.forEach(f => f(this.count));\n  }\n}\n\nexport { Listeners, RequestTypeId, complete, completeEffect, fail, isRequest, of, succeed, tagged };\n","import { some, none } from '../../Option/dist/effect-Option.esm.js';\n\n/** @internal */\nconst Direction = {\n  Forward: 0,\n  Backward: 1 << 0\n};\n\n/** @internal */\nclass RedBlackTreeIterator {\n  count = 0;\n  constructor(self, stack, direction) {\n    this.self = self;\n    this.stack = stack;\n    this.direction = direction;\n  }\n\n  /**\n   * Clones the iterator\n   */\n  clone() {\n    return new RedBlackTreeIterator(this.self, this.stack.slice(), this.direction);\n  }\n\n  /**\n   * Reverse the traversal direction\n   */\n  reversed() {\n    return new RedBlackTreeIterator(this.self, this.stack.slice(), this.direction === Direction.Forward ? Direction.Backward : Direction.Forward);\n  }\n\n  /**\n   * Iterator next\n   */\n  next() {\n    const entry = this.entry;\n    this.count++;\n    if (this.direction === Direction.Forward) {\n      this.moveNext();\n    } else {\n      this.movePrev();\n    }\n    switch (entry._tag) {\n      case \"None\":\n        {\n          return {\n            done: true,\n            value: this.count\n          };\n        }\n      case \"Some\":\n        {\n          return {\n            done: false,\n            value: entry.value\n          };\n        }\n    }\n  }\n\n  /**\n   * Returns the key\n   */\n  get key() {\n    if (this.stack.length > 0) {\n      return some(this.stack[this.stack.length - 1].key);\n    }\n    return none();\n  }\n\n  /**\n   * Returns the value\n   */\n  get value() {\n    if (this.stack.length > 0) {\n      return some(this.stack[this.stack.length - 1].value);\n    }\n    return none();\n  }\n\n  /**\n   * Returns the key\n   */\n  get entry() {\n    if (this.stack.length > 0) {\n      return some([this.stack[this.stack.length - 1].key, this.stack[this.stack.length - 1].value]);\n    }\n    return none();\n  }\n\n  /**\n   * Returns the position of this iterator in the sorted list\n   */\n  get index() {\n    let idx = 0;\n    const stack = this.stack;\n    if (stack.length === 0) {\n      const r = this.self._root;\n      if (r != null) {\n        return r.count;\n      }\n      return 0;\n    } else if (stack[stack.length - 1].left != null) {\n      idx = stack[stack.length - 1].left.count;\n    }\n    for (let s = stack.length - 2; s >= 0; --s) {\n      if (stack[s + 1] === stack[s].right) {\n        ++idx;\n        if (stack[s].left != null) {\n          idx += stack[s].left.count;\n        }\n      }\n    }\n    return idx;\n  }\n\n  /**\n   * Advances iterator to next element in list\n   */\n  moveNext() {\n    const stack = this.stack;\n    if (stack.length === 0) {\n      return;\n    }\n    let n = stack[stack.length - 1];\n    if (n.right != null) {\n      n = n.right;\n      while (n != null) {\n        stack.push(n);\n        n = n.left;\n      }\n    } else {\n      stack.pop();\n      while (stack.length > 0 && stack[stack.length - 1].right === n) {\n        n = stack[stack.length - 1];\n        stack.pop();\n      }\n    }\n  }\n\n  /**\n   * Checks if there is a next element\n   */\n  get hasNext() {\n    const stack = this.stack;\n    if (stack.length === 0) {\n      return false;\n    }\n    if (stack[stack.length - 1].right != null) {\n      return true;\n    }\n    for (let s = stack.length - 1; s > 0; --s) {\n      if (stack[s - 1].left === stack[s]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Advances iterator to previous element in list\n   */\n  movePrev() {\n    const stack = this.stack;\n    if (stack.length === 0) {\n      return;\n    }\n    let n = stack[stack.length - 1];\n    if (n != null && n.left != null) {\n      n = n.left;\n      while (n != null) {\n        stack.push(n);\n        n = n.right;\n      }\n    } else {\n      stack.pop();\n      while (stack.length > 0 && stack[stack.length - 1].left === n) {\n        n = stack[stack.length - 1];\n        stack.pop();\n      }\n    }\n  }\n\n  /**\n   * Checks if there is a previous element\n   */\n  get hasPrev() {\n    const stack = this.stack;\n    if (stack.length === 0) {\n      return false;\n    }\n    if (stack[stack.length - 1].left != null) {\n      return true;\n    }\n    for (let s = stack.length - 1; s > 0; --s) {\n      if (stack[s - 1].right === stack[s]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport { Direction, RedBlackTreeIterator };\n","/** @internal */\nconst Color = {\n  Red: 0,\n  Black: 1 << 0\n};\n/** @internal */\nclass Node {\n  constructor(color, key, value, left, right, count) {\n    this.color = color;\n    this.key = key;\n    this.value = value;\n    this.left = left;\n    this.right = right;\n    this.count = count;\n  }\n}\n\n/** @internal */\nfunction clone(node) {\n  return new Node(node.color, node.key, node.value, node.left, node.right, node.count);\n}\n\n/** @internal */\nfunction swap(n, v) {\n  n.key = v.key;\n  n.value = v.value;\n  n.left = v.left;\n  n.right = v.right;\n  n.color = v.color;\n  n.count = v.count;\n}\n\n/** @internal */\nfunction repaint(node, color) {\n  return new Node(color, node.key, node.value, node.left, node.right, node.count);\n}\n\n/** @internal */\nfunction recount(node) {\n  node.count = 1 + (node.left?.count ?? 0) + (node.right?.count ?? 0);\n}\n\nexport { Color, Node, clone, recount, repaint, swap };\n","import { prepend, empty as empty$1 } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { equals, symbol as symbol$1 } from '../Equal/dist/effect-Equal.esm.js';\nimport { dual } from '../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash, array } from '../Hash/dist/effect-Hash.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { Direction, RedBlackTreeIterator } from './RedBlackTree/iterator.esm.js';\nimport { Node, Color, repaint, recount, swap, clone } from './RedBlackTree/node.esm.js';\nimport { Stack } from './Stack.esm.js';\nimport { some, none, isSome } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\n\nconst RedBlackTreeSymbolKey = \"effect/RedBlackTree\";\n\n/** @internal */\nconst RedBlackTreeTypeId = /*#__PURE__*/Symbol.for(RedBlackTreeSymbolKey);\n\n/** @internal */\n\nconst RedBlackTreeProto = {\n  [RedBlackTreeTypeId]: RedBlackTreeTypeId,\n  [symbol]() {\n    return combine(hash(RedBlackTreeSymbolKey))(array(Array.from(this)));\n  },\n  [symbol$1](that) {\n    if (isRedBlackTree(that)) {\n      if ((this._root?.count ?? 0) !== (that._root?.count ?? 0)) {\n        return false;\n      }\n      return equals(Array.from(this), Array.from(that));\n    }\n    return false;\n  },\n  [Symbol.iterator]() {\n    const stack = [];\n    let n = this._root;\n    while (n != null) {\n      stack.push(n);\n      n = n.left;\n    }\n    return new RedBlackTreeIterator(this, stack, Direction.Forward);\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"RedBlackTree\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst makeImpl = (ord, root) => {\n  const tree = Object.create(RedBlackTreeProto);\n  tree._ord = ord;\n  tree._root = root;\n  return tree;\n};\n\n/** @internal */\nconst isRedBlackTree = u => hasProperty(u, RedBlackTreeTypeId);\n\n/** @internal */\nconst empty = ord => makeImpl(ord, undefined);\n\n/** @internal */\nconst fromIterable = ord => entries => {\n  let tree = empty(ord);\n  for (const [key, value] of entries) {\n    tree = insert(tree, key, value);\n  }\n  return tree;\n};\n\n/** @internal */\nconst make = ord => (...entries) => {\n  return fromIterable(ord)(entries);\n};\n\n/** @internal */\nconst atBackwards = /*#__PURE__*/dual(2, (self, index) => at(self, index, Direction.Backward));\n\n/** @internal */\nconst atForwards = /*#__PURE__*/dual(2, (self, index) => at(self, index, Direction.Forward));\nconst at = (self, index, direction) => {\n  return {\n    [Symbol.iterator]: () => {\n      if (index < 0) {\n        return new RedBlackTreeIterator(self, [], direction);\n      }\n      let node = self._root;\n      const stack = [];\n      while (node !== undefined) {\n        stack.push(node);\n        if (node.left !== undefined) {\n          if (index < node.left.count) {\n            node = node.left;\n            continue;\n          }\n          index -= node.left.count;\n        }\n        if (!index) {\n          return new RedBlackTreeIterator(self, stack, direction);\n        }\n        index -= 1;\n        if (node.right !== undefined) {\n          if (index >= node.right.count) {\n            break;\n          }\n          node = node.right;\n        } else {\n          break;\n        }\n      }\n      return new RedBlackTreeIterator(self, [], direction);\n    }\n  };\n};\n\n/** @internal */\nconst findAll = /*#__PURE__*/dual(2, (self, key) => {\n  const stack = [];\n  let node = self._root;\n  let result = empty$1();\n  while (node !== undefined || stack.length > 0) {\n    if (node) {\n      stack.push(node);\n      node = node.left;\n    } else {\n      const current = stack.pop();\n      if (equals(key, current.key)) {\n        result = prepend(current.value)(result);\n      }\n      node = current.right;\n    }\n  }\n  return result;\n});\n\n/** @internal */\nconst findFirst = /*#__PURE__*/dual(2, (self, key) => {\n  const cmp = self._ord;\n  let node = self._root;\n  while (node !== undefined) {\n    const d = cmp(key, node.key);\n    if (equals(key, node.key)) {\n      return some(node.value);\n    }\n    if (d <= 0) {\n      node = node.left;\n    } else {\n      node = node.right;\n    }\n  }\n  return none();\n});\n\n/** @internal */\nconst first = self => {\n  let node = self._root;\n  let current = self._root;\n  while (node !== undefined) {\n    current = node;\n    node = node.left;\n  }\n  return current ? some([current.key, current.value]) : none();\n};\n\n/** @internal */\nconst getAt = /*#__PURE__*/dual(2, (self, index) => {\n  if (index < 0) {\n    return none();\n  }\n  let root = self._root;\n  let node = undefined;\n  while (root !== undefined) {\n    node = root;\n    if (root.left) {\n      if (index < root.left.count) {\n        root = root.left;\n        continue;\n      }\n      index -= root.left.count;\n    }\n    if (!index) {\n      return some([node.key, node.value]);\n    }\n    index -= 1;\n    if (root.right) {\n      if (index >= root.right.count) {\n        break;\n      }\n      root = root.right;\n    } else {\n      break;\n    }\n  }\n  return none();\n});\n\n/** @internal */\nconst getOrder = tree => tree._ord;\n\n/** @internal */\nconst has = /*#__PURE__*/dual(2, (self, key) => isSome(findFirst(self, key)));\n\n/** @internal */\nconst insert = /*#__PURE__*/dual(3, (self, key, value) => {\n  const cmp = self._ord;\n  // Find point to insert new node at\n  let n = self._root;\n  const n_stack = [];\n  const d_stack = [];\n  while (n != null) {\n    const d = cmp(key, n.key);\n    n_stack.push(n);\n    d_stack.push(d);\n    if (d <= 0) {\n      n = n.left;\n    } else {\n      n = n.right;\n    }\n  }\n  // Rebuild path to leaf node\n  n_stack.push(new Node(Color.Red, key, value, undefined, undefined, 1));\n  for (let s = n_stack.length - 2; s >= 0; --s) {\n    const n2 = n_stack[s];\n    if (d_stack[s] <= 0) {\n      n_stack[s] = new Node(n2.color, n2.key, n2.value, n_stack[s + 1], n2.right, n2.count + 1);\n    } else {\n      n_stack[s] = new Node(n2.color, n2.key, n2.value, n2.left, n_stack[s + 1], n2.count + 1);\n    }\n  }\n  // Rebalance tree using rotations\n  for (let s = n_stack.length - 1; s > 1; --s) {\n    const p = n_stack[s - 1];\n    const n3 = n_stack[s];\n    if (p.color === Color.Black || n3.color === Color.Black) {\n      break;\n    }\n    const pp = n_stack[s - 2];\n    if (pp.left === p) {\n      if (p.left === n3) {\n        const y = pp.right;\n        if (y && y.color === Color.Red) {\n          p.color = Color.Black;\n          pp.right = repaint(y, Color.Black);\n          pp.color = Color.Red;\n          s -= 1;\n        } else {\n          pp.color = Color.Red;\n          pp.left = p.right;\n          p.color = Color.Black;\n          p.right = pp;\n          n_stack[s - 2] = p;\n          n_stack[s - 1] = n3;\n          recount(pp);\n          recount(p);\n          if (s >= 3) {\n            const ppp = n_stack[s - 3];\n            if (ppp.left === pp) {\n              ppp.left = p;\n            } else {\n              ppp.right = p;\n            }\n          }\n          break;\n        }\n      } else {\n        const y = pp.right;\n        if (y && y.color === Color.Red) {\n          p.color = Color.Black;\n          pp.right = repaint(y, Color.Black);\n          pp.color = Color.Red;\n          s -= 1;\n        } else {\n          p.right = n3.left;\n          pp.color = Color.Red;\n          pp.left = n3.right;\n          n3.color = Color.Black;\n          n3.left = p;\n          n3.right = pp;\n          n_stack[s - 2] = n3;\n          n_stack[s - 1] = p;\n          recount(pp);\n          recount(p);\n          recount(n3);\n          if (s >= 3) {\n            const ppp = n_stack[s - 3];\n            if (ppp.left === pp) {\n              ppp.left = n3;\n            } else {\n              ppp.right = n3;\n            }\n          }\n          break;\n        }\n      }\n    } else {\n      if (p.right === n3) {\n        const y = pp.left;\n        if (y && y.color === Color.Red) {\n          p.color = Color.Black;\n          pp.left = repaint(y, Color.Black);\n          pp.color = Color.Red;\n          s -= 1;\n        } else {\n          pp.color = Color.Red;\n          pp.right = p.left;\n          p.color = Color.Black;\n          p.left = pp;\n          n_stack[s - 2] = p;\n          n_stack[s - 1] = n3;\n          recount(pp);\n          recount(p);\n          if (s >= 3) {\n            const ppp = n_stack[s - 3];\n            if (ppp.right === pp) {\n              ppp.right = p;\n            } else {\n              ppp.left = p;\n            }\n          }\n          break;\n        }\n      } else {\n        const y = pp.left;\n        if (y && y.color === Color.Red) {\n          p.color = Color.Black;\n          pp.left = repaint(y, Color.Black);\n          pp.color = Color.Red;\n          s -= 1;\n        } else {\n          p.left = n3.right;\n          pp.color = Color.Red;\n          pp.right = n3.left;\n          n3.color = Color.Black;\n          n3.right = p;\n          n3.left = pp;\n          n_stack[s - 2] = n3;\n          n_stack[s - 1] = p;\n          recount(pp);\n          recount(p);\n          recount(n3);\n          if (s >= 3) {\n            const ppp = n_stack[s - 3];\n            if (ppp.right === pp) {\n              ppp.right = n3;\n            } else {\n              ppp.left = n3;\n            }\n          }\n          break;\n        }\n      }\n    }\n  }\n  // Return new tree\n  n_stack[0].color = Color.Black;\n  return makeImpl(self._ord, n_stack[0]);\n});\n\n/** @internal */\nconst keysForward = self => keys(self, Direction.Forward);\n\n/** @internal */\nconst keysBackward = self => keys(self, Direction.Backward);\nconst keys = (self, direction) => {\n  const begin = self[Symbol.iterator]();\n  let count = 0;\n  return {\n    [Symbol.iterator]: () => keys(self, direction),\n    next: () => {\n      count++;\n      const entry = begin.key;\n      if (direction === Direction.Forward) {\n        begin.moveNext();\n      } else {\n        begin.movePrev();\n      }\n      switch (entry._tag) {\n        case \"None\":\n          {\n            return {\n              done: true,\n              value: count\n            };\n          }\n        case \"Some\":\n          {\n            return {\n              done: false,\n              value: entry.value\n            };\n          }\n      }\n    }\n  };\n};\n\n/** @internal */\nconst last = self => {\n  let node = self._root;\n  let current = self._root;\n  while (node !== undefined) {\n    current = node;\n    node = node.right;\n  }\n  return current ? some([current.key, current.value]) : none();\n};\n\n/** @internal */\nconst reversed = self => {\n  return {\n    [Symbol.iterator]: () => {\n      const stack = [];\n      let node = self._root;\n      while (node !== undefined) {\n        stack.push(node);\n        node = node.right;\n      }\n      return new RedBlackTreeIterator(self, stack, Direction.Backward);\n    }\n  };\n};\n\n/** @internal */\nconst greaterThanBackwards = /*#__PURE__*/dual(2, (self, key) => greaterThan(self, key, Direction.Backward));\n\n/** @internal */\nconst greaterThanForwards = /*#__PURE__*/dual(2, (self, key) => greaterThan(self, key, Direction.Forward));\nconst greaterThan = (self, key, direction) => {\n  return {\n    [Symbol.iterator]: () => {\n      const cmp = self._ord;\n      let node = self._root;\n      const stack = [];\n      let last_ptr = 0;\n      while (node !== undefined) {\n        const d = cmp(key, node.key);\n        stack.push(node);\n        if (d < 0) {\n          last_ptr = stack.length;\n        }\n        if (d < 0) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      }\n      stack.length = last_ptr;\n      return new RedBlackTreeIterator(self, stack, direction);\n    }\n  };\n};\n\n/** @internal */\nconst greaterThanEqualBackwards = /*#__PURE__*/dual(2, (self, key) => greaterThanEqual(self, key, Direction.Backward));\n\n/** @internal */\nconst greaterThanEqualForwards = /*#__PURE__*/dual(2, (self, key) => greaterThanEqual(self, key, Direction.Forward));\nconst greaterThanEqual = (self, key, direction = Direction.Forward) => {\n  return {\n    [Symbol.iterator]: () => {\n      const cmp = self._ord;\n      let node = self._root;\n      const stack = [];\n      let last_ptr = 0;\n      while (node !== undefined) {\n        const d = cmp(key, node.key);\n        stack.push(node);\n        if (d <= 0) {\n          last_ptr = stack.length;\n        }\n        if (d <= 0) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      }\n      stack.length = last_ptr;\n      return new RedBlackTreeIterator(self, stack, direction);\n    }\n  };\n};\n\n/** @internal */\nconst lessThanBackwards = /*#__PURE__*/dual(2, (self, key) => lessThan(self, key, Direction.Backward));\n\n/** @internal */\nconst lessThanForwards = /*#__PURE__*/dual(2, (self, key) => lessThan(self, key, Direction.Forward));\nconst lessThan = (self, key, direction) => {\n  return {\n    [Symbol.iterator]: () => {\n      const cmp = self._ord;\n      let node = self._root;\n      const stack = [];\n      let last_ptr = 0;\n      while (node !== undefined) {\n        const d = cmp(key, node.key);\n        stack.push(node);\n        if (d > 0) {\n          last_ptr = stack.length;\n        }\n        if (d <= 0) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      }\n      stack.length = last_ptr;\n      return new RedBlackTreeIterator(self, stack, direction);\n    }\n  };\n};\n\n/** @internal */\nconst lessThanEqualBackwards = /*#__PURE__*/dual(2, (self, key) => lessThanEqual(self, key, Direction.Backward));\n\n/** @internal */\nconst lessThanEqualForwards = /*#__PURE__*/dual(2, (self, key) => lessThanEqual(self, key, Direction.Forward));\nconst lessThanEqual = (self, key, direction) => {\n  return {\n    [Symbol.iterator]: () => {\n      const cmp = self._ord;\n      let node = self._root;\n      const stack = [];\n      let last_ptr = 0;\n      while (node !== undefined) {\n        const d = cmp(key, node.key);\n        stack.push(node);\n        if (d >= 0) {\n          last_ptr = stack.length;\n        }\n        if (d < 0) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      }\n      stack.length = last_ptr;\n      return new RedBlackTreeIterator(self, stack, direction);\n    }\n  };\n};\n\n/** @internal */\nconst forEach = /*#__PURE__*/dual(2, (self, f) => {\n  const root = self._root;\n  if (root !== undefined) {\n    visitFull(root, (key, value) => {\n      f(key, value);\n      return none();\n    });\n  }\n});\n\n/** @internal */\nconst forEachGreaterThanEqual = /*#__PURE__*/dual(3, (self, min, f) => {\n  const root = self._root;\n  const ord = self._ord;\n  if (root !== undefined) {\n    visitGreaterThanEqual(root, min, ord, (key, value) => {\n      f(key, value);\n      return none();\n    });\n  }\n});\n\n/** @internal */\nconst forEachLessThan = /*#__PURE__*/dual(3, (self, max, f) => {\n  const root = self._root;\n  const ord = self._ord;\n  if (root !== undefined) {\n    visitLessThan(root, max, ord, (key, value) => {\n      f(key, value);\n      return none();\n    });\n  }\n});\n\n/** @internal */\nconst forEachBetween = /*#__PURE__*/dual(2, (self, {\n  body,\n  max,\n  min\n}) => {\n  const root = self._root;\n  const ord = self._ord;\n  if (root) {\n    visitBetween(root, min, max, ord, (key, value) => {\n      body(key, value);\n      return none();\n    });\n  }\n});\n\n/** @internal */\nconst reduce = /*#__PURE__*/dual(3, (self, zero, f) => {\n  let accumulator = zero;\n  for (const entry of self) {\n    accumulator = f(accumulator, entry[1], entry[0]);\n  }\n  return accumulator;\n});\n\n/** @internal */\nconst removeFirst = /*#__PURE__*/dual(2, (self, key) => {\n  if (!has(self, key)) {\n    return self;\n  }\n  const ord = self._ord;\n  const cmp = ord;\n  let node = self._root;\n  const stack = [];\n  while (node !== undefined) {\n    const d = cmp(key, node.key);\n    stack.push(node);\n    if (equals(key, node.key)) {\n      node = undefined;\n    } else if (d <= 0) {\n      node = node.left;\n    } else {\n      node = node.right;\n    }\n  }\n  if (stack.length === 0) {\n    return self;\n  }\n  const cstack = new Array(stack.length);\n  let n = stack[stack.length - 1];\n  cstack[cstack.length - 1] = new Node(n.color, n.key, n.value, n.left, n.right, n.count);\n  for (let i = stack.length - 2; i >= 0; --i) {\n    n = stack[i];\n    if (n.left === stack[i + 1]) {\n      cstack[i] = new Node(n.color, n.key, n.value, cstack[i + 1], n.right, n.count);\n    } else {\n      cstack[i] = new Node(n.color, n.key, n.value, n.left, cstack[i + 1], n.count);\n    }\n  }\n  // Get node\n  n = cstack[cstack.length - 1];\n  // If not leaf, then swap with previous node\n  if (n.left !== undefined && n.right !== undefined) {\n    // First walk to previous leaf\n    const split = cstack.length;\n    n = n.left;\n    while (n.right != null) {\n      cstack.push(n);\n      n = n.right;\n    }\n    // Copy path to leaf\n    const v = cstack[split - 1];\n    cstack.push(new Node(n.color, v.key, v.value, n.left, n.right, n.count));\n    cstack[split - 1].key = n.key;\n    cstack[split - 1].value = n.value;\n    // Fix up stack\n    for (let i = cstack.length - 2; i >= split; --i) {\n      n = cstack[i];\n      cstack[i] = new Node(n.color, n.key, n.value, n.left, cstack[i + 1], n.count);\n    }\n    cstack[split - 1].left = cstack[split];\n  }\n\n  // Remove leaf node\n  n = cstack[cstack.length - 1];\n  if (n.color === Color.Red) {\n    // Easy case: removing red leaf\n    const p = cstack[cstack.length - 2];\n    if (p.left === n) {\n      p.left = undefined;\n    } else if (p.right === n) {\n      p.right = undefined;\n    }\n    cstack.pop();\n    for (let i = 0; i < cstack.length; ++i) {\n      cstack[i].count--;\n    }\n    return makeImpl(ord, cstack[0]);\n  } else {\n    if (n.left !== undefined || n.right !== undefined) {\n      // Second easy case:  Single child black parent\n      if (n.left !== undefined) {\n        swap(n, n.left);\n      } else if (n.right !== undefined) {\n        swap(n, n.right);\n      }\n      // Child must be red, so repaint it black to balance color\n      n.color = Color.Black;\n      for (let i = 0; i < cstack.length - 1; ++i) {\n        cstack[i].count--;\n      }\n      return makeImpl(ord, cstack[0]);\n    } else if (cstack.length === 1) {\n      // Third easy case: root\n      return makeImpl(ord, undefined);\n    } else {\n      // Hard case: Repaint n, and then do some nasty stuff\n      for (let i = 0; i < cstack.length; ++i) {\n        cstack[i].count--;\n      }\n      const parent = cstack[cstack.length - 2];\n      fixDoubleBlack(cstack);\n      // Fix up links\n      if (parent.left === n) {\n        parent.left = undefined;\n      } else {\n        parent.right = undefined;\n      }\n    }\n  }\n  return makeImpl(ord, cstack[0]);\n});\n\n/** @internal */\nconst size = self => self._root?.count ?? 0;\n\n/** @internal */\nconst valuesForward = self => values(self, Direction.Forward);\n\n/** @internal */\nconst valuesBackward = self => values(self, Direction.Backward);\n\n/** @internal */\nconst values = (self, direction) => {\n  const begin = self[Symbol.iterator]();\n  let count = 0;\n  return {\n    [Symbol.iterator]: () => values(self, direction),\n    next: () => {\n      count++;\n      const entry = begin.value;\n      if (direction === Direction.Forward) {\n        begin.moveNext();\n      } else {\n        begin.movePrev();\n      }\n      switch (entry._tag) {\n        case \"None\":\n          {\n            return {\n              done: true,\n              value: count\n            };\n          }\n        case \"Some\":\n          {\n            return {\n              done: false,\n              value: entry.value\n            };\n          }\n      }\n    }\n  };\n};\nconst visitFull = (node, visit) => {\n  let current = node;\n  let stack = undefined;\n  let done = false;\n  while (!done) {\n    if (current != null) {\n      stack = new Stack(current, stack);\n      current = current.left;\n    } else if (stack != null) {\n      const value = visit(stack.value.key, stack.value.value);\n      if (isSome(value)) {\n        return value;\n      }\n      current = stack.value.right;\n      stack = stack.previous;\n    } else {\n      done = true;\n    }\n  }\n  return none();\n};\nconst visitGreaterThanEqual = (node, min, ord, visit) => {\n  let current = node;\n  let stack = undefined;\n  let done = false;\n  while (!done) {\n    if (current !== undefined) {\n      stack = new Stack(current, stack);\n      if (ord(min, current.key) <= 0) {\n        current = current.left;\n      } else {\n        current = undefined;\n      }\n    } else if (stack !== undefined) {\n      if (ord(min, stack.value.key) <= 0) {\n        const value = visit(stack.value.key, stack.value.value);\n        if (isSome(value)) {\n          return value;\n        }\n      }\n      current = stack.value.right;\n      stack = stack.previous;\n    } else {\n      done = true;\n    }\n  }\n  return none();\n};\nconst visitLessThan = (node, max, ord, visit) => {\n  let current = node;\n  let stack = undefined;\n  let done = false;\n  while (!done) {\n    if (current !== undefined) {\n      stack = new Stack(current, stack);\n      current = current.left;\n    } else if (stack !== undefined && ord(max, stack.value.key) > 0) {\n      const value = visit(stack.value.key, stack.value.value);\n      if (isSome(value)) {\n        return value;\n      }\n      current = stack.value.right;\n      stack = stack.previous;\n    } else {\n      done = true;\n    }\n  }\n  return none();\n};\nconst visitBetween = (node, min, max, ord, visit) => {\n  let current = node;\n  let stack = undefined;\n  let done = false;\n  while (!done) {\n    if (current !== undefined) {\n      stack = new Stack(current, stack);\n      if (ord(min, current.key) <= 0) {\n        current = current.left;\n      } else {\n        current = undefined;\n      }\n    } else if (stack !== undefined && ord(max, stack.value.key) > 0) {\n      if (ord(min, stack.value.key) <= 0) {\n        const value = visit(stack.value.key, stack.value.value);\n        if (isSome(value)) {\n          return value;\n        }\n      }\n      current = stack.value.right;\n      stack = stack.previous;\n    } else {\n      done = true;\n    }\n  }\n  return none();\n};\n\n/**\n * Fix up a double black node in a Red-Black Tree.\n */\nconst fixDoubleBlack = stack => {\n  let n, p, s, z;\n  for (let i = stack.length - 1; i >= 0; --i) {\n    n = stack[i];\n    if (i === 0) {\n      n.color = Color.Black;\n      return;\n    }\n    p = stack[i - 1];\n    if (p.left === n) {\n      s = p.right;\n      if (s !== undefined && s.right !== undefined && s.right.color === Color.Red) {\n        s = p.right = clone(s);\n        z = s.right = clone(s.right);\n        p.right = s.left;\n        s.left = p;\n        s.right = z;\n        s.color = p.color;\n        n.color = Color.Black;\n        p.color = Color.Black;\n        z.color = Color.Black;\n        recount(p);\n        recount(s);\n        if (i > 1) {\n          const pp = stack[i - 2];\n          if (pp.left === p) {\n            pp.left = s;\n          } else {\n            pp.right = s;\n          }\n        }\n        stack[i - 1] = s;\n        return;\n      } else if (s !== undefined && s.left !== undefined && s.left.color === Color.Red) {\n        s = p.right = clone(s);\n        z = s.left = clone(s.left);\n        p.right = z.left;\n        s.left = z.right;\n        z.left = p;\n        z.right = s;\n        z.color = p.color;\n        p.color = Color.Black;\n        s.color = Color.Black;\n        n.color = Color.Black;\n        recount(p);\n        recount(s);\n        recount(z);\n        if (i > 1) {\n          const pp = stack[i - 2];\n          if (pp.left === p) {\n            pp.left = z;\n          } else {\n            pp.right = z;\n          }\n        }\n        stack[i - 1] = z;\n        return;\n      }\n      if (s !== undefined && s.color === Color.Black) {\n        if (p.color === Color.Red) {\n          p.color = Color.Black;\n          p.right = repaint(s, Color.Red);\n          return;\n        } else {\n          p.right = repaint(s, Color.Red);\n          continue;\n        }\n      } else if (s !== undefined) {\n        s = clone(s);\n        p.right = s.left;\n        s.left = p;\n        s.color = p.color;\n        p.color = Color.Red;\n        recount(p);\n        recount(s);\n        if (i > 1) {\n          const pp = stack[i - 2];\n          if (pp.left === p) {\n            pp.left = s;\n          } else {\n            pp.right = s;\n          }\n        }\n        stack[i - 1] = s;\n        stack[i] = p;\n        if (i + 1 < stack.length) {\n          stack[i + 1] = n;\n        } else {\n          stack.push(n);\n        }\n        i = i + 2;\n      }\n    } else {\n      s = p.left;\n      if (s !== undefined && s.left !== undefined && s.left.color === Color.Red) {\n        s = p.left = clone(s);\n        z = s.left = clone(s.left);\n        p.left = s.right;\n        s.right = p;\n        s.left = z;\n        s.color = p.color;\n        n.color = Color.Black;\n        p.color = Color.Black;\n        z.color = Color.Black;\n        recount(p);\n        recount(s);\n        if (i > 1) {\n          const pp = stack[i - 2];\n          if (pp.right === p) {\n            pp.right = s;\n          } else {\n            pp.left = s;\n          }\n        }\n        stack[i - 1] = s;\n        return;\n      } else if (s !== undefined && s.right !== undefined && s.right.color === Color.Red) {\n        s = p.left = clone(s);\n        z = s.right = clone(s.right);\n        p.left = z.right;\n        s.right = z.left;\n        z.right = p;\n        z.left = s;\n        z.color = p.color;\n        p.color = Color.Black;\n        s.color = Color.Black;\n        n.color = Color.Black;\n        recount(p);\n        recount(s);\n        recount(z);\n        if (i > 1) {\n          const pp = stack[i - 2];\n          if (pp.right === p) {\n            pp.right = z;\n          } else {\n            pp.left = z;\n          }\n        }\n        stack[i - 1] = z;\n        return;\n      }\n      if (s !== undefined && s.color === Color.Black) {\n        if (p.color === Color.Red) {\n          p.color = Color.Black;\n          p.left = repaint(s, Color.Red);\n          return;\n        } else {\n          p.left = repaint(s, Color.Red);\n          continue;\n        }\n      } else if (s !== undefined) {\n        s = clone(s);\n        p.left = s.right;\n        s.right = p;\n        s.color = p.color;\n        p.color = Color.Red;\n        recount(p);\n        recount(s);\n        if (i > 1) {\n          const pp = stack[i - 2];\n          if (pp.right === p) {\n            pp.right = s;\n          } else {\n            pp.left = s;\n          }\n        }\n        stack[i - 1] = s;\n        stack[i] = p;\n        if (i + 1 < stack.length) {\n          stack[i + 1] = n;\n        } else {\n          stack.push(n);\n        }\n        i = i + 2;\n      }\n    }\n  }\n};\n\nexport { RedBlackTreeTypeId, atBackwards, atForwards, empty, findAll, findFirst, first, forEach, forEachBetween, forEachGreaterThanEqual, forEachLessThan, fromIterable, getAt, getOrder, greaterThanBackwards, greaterThanEqualBackwards, greaterThanEqualForwards, greaterThanForwards, has, insert, isRedBlackTree, keysBackward, keysForward, last, lessThanBackwards, lessThanEqualBackwards, lessThanEqualForwards, lessThanForwards, make, reduce, removeFirst, reversed, size, valuesBackward, valuesForward };\n","import { isRedBlackTree as isRedBlackTree$1, empty as empty$1, fromIterable as fromIterable$1, make as make$1, atForwards, atBackwards, findAll as findAll$1, findFirst as findFirst$1, first as first$1, getAt as getAt$1, getOrder as getOrder$1, greaterThanForwards, greaterThanBackwards, greaterThanEqualForwards, greaterThanEqualBackwards, has as has$1, insert as insert$1, keysForward, keysBackward, last as last$1, lessThanForwards, lessThanBackwards, lessThanEqualForwards, lessThanEqualBackwards, forEach as forEach$1, forEachGreaterThanEqual as forEachGreaterThanEqual$1, forEachLessThan as forEachLessThan$1, forEachBetween as forEachBetween$1, reduce as reduce$1, removeFirst as removeFirst$1, reversed as reversed$1, size as size$1, valuesForward, valuesBackward } from '../../internal/RedBlackTree.esm.js';\nimport { Direction as Direction$1 } from '../../internal/RedBlackTree/iterator.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category constants\n */\nconst Direction = Direction$1;\n\n/**\n * A Red-Black Tree.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isRedBlackTree = isRedBlackTree$1;\n\n/**\n * Creates an empty `RedBlackTree`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Constructs a new tree from an iterable of key-value pairs.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = fromIterable$1;\n\n/**\n * Constructs a new `RedBlackTree` from the specified entries.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Returns an iterator that points to the element at the specified index of the\n * tree.\n *\n * **Note**: The iterator will run through elements in order.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst at = atForwards;\n\n/**\n * Returns an iterator that points to the element at the specified index of the\n * tree.\n *\n * **Note**: The iterator will run through elements in reverse order.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst atReversed = atBackwards;\n\n/**\n * Finds all values in the tree associated with the specified key.\n *\n * @since 2.0.0\n * @category elements\n */\nconst findAll = findAll$1;\n\n/**\n * Finds the first value in the tree associated with the specified key, if it exists.\n *\n * @category elements\n * @since 2.0.0\n */\nconst findFirst = findFirst$1;\n\n/**\n * Returns the first entry in the tree, if it exists.\n *\n * @since 2.0.0\n * @category getters\n */\nconst first = first$1;\n\n/**\n * Returns the element at the specified index within the tree or `None` if the\n * specified index does not exist.\n *\n * @since 2.0.0\n * @category elements\n */\nconst getAt = getAt$1;\n\n/**\n * Gets the `Order<K>` that the `RedBlackTree<K, V>` is using.\n *\n * @since 2.0.0\n * @category getters\n */\nconst getOrder = getOrder$1;\n\n/**\n * Returns an iterator that traverse entries in order with keys greater than the\n * specified key.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst greaterThan = greaterThanForwards;\n\n/**\n * Returns an iterator that traverse entries in reverse order with keys greater\n * than the specified key.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst greaterThanReversed = greaterThanBackwards;\n\n/**\n * Returns an iterator that traverse entries in order with keys greater than or\n * equal to the specified key.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst greaterThanEqual = greaterThanEqualForwards;\n\n/**\n * Returns an iterator that traverse entries in reverse order with keys greater\n * than or equal to the specified key.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst greaterThanEqualReversed = greaterThanEqualBackwards;\n\n/**\n * Finds the item with key, if it exists.\n *\n * @since 2.0.0\n * @category elements\n */\nconst has = has$1;\n\n/**\n * Insert a new item into the tree.\n *\n * @since 2.0.0\n */\nconst insert = insert$1;\n\n/**\n * Get all the keys present in the tree in order.\n *\n * @since 2.0.0\n * @category getters\n */\nconst keys = keysForward;\n\n/**\n * Get all the keys present in the tree in reverse order.\n *\n * @since 2.0.0\n * @category getters\n */\nconst keysReversed = keysBackward;\n\n/**\n * Returns the last entry in the tree, if it exists.\n *\n * @since 2.0.0\n * @category getters\n */\nconst last = last$1;\n\n/**\n * Returns an iterator that traverse entries in order with keys less than the\n * specified key.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst lessThan = lessThanForwards;\n\n/**\n * Returns an iterator that traverse entries in reverse order with keys less\n * than the specified key.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst lessThanReversed = lessThanBackwards;\n\n/**\n * Returns an iterator that traverse entries in order with keys less than or\n * equal to the specified key.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst lessThanEqual = lessThanEqualForwards;\n\n/**\n * Returns an iterator that traverse entries in reverse order with keys less\n * than or equal to the specified key.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst lessThanEqualReversed = lessThanEqualBackwards;\n\n/**\n * Execute the specified function for each node of the tree, in order.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst forEach = forEach$1;\n\n/**\n * Visit each node of the tree in order with key greater then or equal to max.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst forEachGreaterThanEqual = forEachGreaterThanEqual$1;\n\n/**\n * Visit each node of the tree in order with key lower then max.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst forEachLessThan = forEachLessThan$1;\n\n/**\n * Visit each node of the tree in order with key lower than max and greater\n * than or equal to min.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst forEachBetween = forEachBetween$1;\n\n/**\n * Reduce a state over the entries of the tree.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduce = reduce$1;\n\n/**\n * Removes the entry with the specified key, if it exists.\n *\n * @since 2.0.0\n */\nconst removeFirst = removeFirst$1;\n\n/**\n * Traverse the tree in reverse order.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst reversed = reversed$1;\n\n/**\n * Returns the size of the tree.\n *\n * @since 2.0.0\n * @category getters\n */\nconst size = size$1;\n\n/**\n * Get all values present in the tree in order.\n *\n * @since 2.0.0\n * @category getters\n */\nconst values = valuesForward;\n\n/**\n * Get all values present in the tree in reverse order.\n *\n * @since 2.0.0\n * @category getters\n */\nconst valuesReversed = valuesBackward;\n\nexport { Direction, at, atReversed, empty, findAll, findFirst, first, forEach, forEachBetween, forEachGreaterThanEqual, forEachLessThan, fromIterable, getAt, getOrder, greaterThan, greaterThanEqual, greaterThanEqualReversed, greaterThanReversed, has, insert, isRedBlackTree, keys, keysReversed, last, lessThan, lessThanEqual, lessThanEqualReversed, lessThanReversed, make, reduce, removeFirst, reversed, size, values, valuesReversed };\n","import { symbol as symbol$1, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { empty as empty$1, fromIterable as fromIterable$1, has as has$1, insert, getOrder, forEach as forEach$1, removeFirst, size as size$1, keys } from '../../RedBlackTree/dist/effect-RedBlackTree.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/SortedSet\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst SortedSetProto = {\n  [TypeId]: {\n    _A: _ => _\n  },\n  [symbol]() {\n    return pipe(hash(this.keyTree), combine(hash(TypeId)));\n  },\n  [symbol$1](that) {\n    return isSortedSet(that) && equals(this.keyTree, that.keyTree);\n  },\n  [Symbol.iterator]() {\n    return keys(this.keyTree);\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"SortedSet\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst fromTree = keyTree => {\n  const a = Object.create(SortedSetProto);\n  a.keyTree = keyTree;\n  return a;\n};\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isSortedSet = u => hasProperty(u, TypeId);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst empty = O => fromTree(empty$1(O));\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = ord => iterable => fromTree(fromIterable$1(ord)(Array.from(iterable).map(k => [k, true])));\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = ord => (...entries) => fromIterable(ord)(entries);\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst add = /*#__PURE__*/dual(2, (self, value) => has$1(self.keyTree, value) ? self : fromTree(insert(self.keyTree, value, true)));\n\n/**\n * @since 2.0.0\n */\nconst difference = /*#__PURE__*/dual(2, (self, that) => {\n  let out = self;\n  for (const value of that) {\n    out = remove(out, value);\n  }\n  return out;\n});\n\n/**\n * Check if a predicate holds true for every `SortedSet` element.\n *\n * @since 2.0.0\n * @category elements\n */\nconst every = /*#__PURE__*/dual(2, (self, refinement) => {\n  for (const value of self) {\n    if (!refinement(value)) {\n      return false;\n    }\n  }\n  return true;\n});\n\n/**\n * @since 2.0.0\n * @category filtering\n */\nconst filter = /*#__PURE__*/dual(2, (self, predicate) => {\n  const ord = getOrder(self.keyTree);\n  let out = empty(ord);\n  for (const value of self) {\n    if (predicate(value)) {\n      out = add(out, value);\n    }\n  }\n  return out;\n});\n\n/**\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = /*#__PURE__*/dual(3, (self, O, f) => {\n  let out = empty(O);\n  forEach(self, a => {\n    for (const b of f(a)) {\n      out = add(out, b);\n    }\n  });\n  return out;\n});\n\n/**\n * @since 2.0.0\n * @category traversing\n */\nconst forEach = /*#__PURE__*/dual(2, (self, f) => forEach$1(self.keyTree, f));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst has = /*#__PURE__*/dual(2, (self, value) => has$1(self.keyTree, value));\n\n/**\n * @since 2.0.0\n */\nconst intersection = /*#__PURE__*/dual(2, (self, that) => {\n  const ord = getOrder(self.keyTree);\n  let out = empty(ord);\n  for (const value of that) {\n    if (has(self, value)) {\n      out = add(out, value);\n    }\n  }\n  return out;\n});\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst isSubset = /*#__PURE__*/dual(2, (self, that) => every(self, a => has(that, a)));\n\n/**\n * @since 2.0.0\n * @category mapping\n */\nconst map = /*#__PURE__*/dual(3, (self, O, f) => {\n  let out = empty(O);\n  forEach(self, a => {\n    const b = f(a);\n    if (!has(out, b)) {\n      out = add(out, b);\n    }\n  });\n  return out;\n});\n\n/**\n * @since 2.0.0\n * @category filtering\n */\nconst partition = /*#__PURE__*/dual(2, (self, predicate) => {\n  const ord = getOrder(self.keyTree);\n  let right = empty(ord);\n  let left = empty(ord);\n  for (const value of self) {\n    if (predicate(value)) {\n      right = add(right, value);\n    } else {\n      left = add(left, value);\n    }\n  }\n  return [left, right];\n});\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst remove = /*#__PURE__*/dual(2, (self, value) => fromTree(removeFirst(self.keyTree, value)));\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst size = self => size$1(self.keyTree);\n\n/**\n * Check if a predicate holds true for some `SortedSet` element.\n *\n * @since 2.0.0\n * @category elements\n */\nconst some = /*#__PURE__*/dual(2, (self, predicate) => {\n  for (const value of self) {\n    if (predicate(value)) {\n      return true;\n    }\n  }\n  return false;\n});\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst toggle = /*#__PURE__*/dual(2, (self, value) => has(self, value) ? remove(self, value) : add(self, value));\n\n/**\n * @since 2.0.0\n */\nconst union = /*#__PURE__*/dual(2, (self, that) => {\n  const ord = getOrder(self.keyTree);\n  let out = empty(ord);\n  for (const value of self) {\n    out = add(value)(out);\n  }\n  for (const value of that) {\n    out = add(value)(out);\n  }\n  return out;\n});\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst values = self => keys(self.keyTree);\n\nexport { add, difference, empty, every, filter, flatMap, forEach, fromIterable, has, intersection, isSortedSet, isSubset, make, map, partition, remove, size, some, toggle, union, values };\n","import { pipe } from '../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { map, zip, sync, unit } from './core.esm.js';\nimport { get, set } from '../MutableRef/dist/effect-MutableRef.esm.js';\nimport { hasProperty, isTagged } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { add, remove } from '../SortedSet/dist/effect-SortedSet.esm.js';\n\n/** @internal */\nconst SupervisorSymbolKey = \"effect/Supervisor\";\n\n/** @internal */\nconst SupervisorTypeId = /*#__PURE__*/Symbol.for(SupervisorSymbolKey);\n\n/** @internal */\nconst supervisorVariance = {\n  _T: _ => _\n};\n\n/** @internal */\nclass ProxySupervisor {\n  [SupervisorTypeId] = supervisorVariance;\n  constructor(underlying, value0) {\n    this.underlying = underlying;\n    this.value0 = value0;\n  }\n  value() {\n    return this.value0();\n  }\n  onStart(context, effect, parent, fiber) {\n    this.underlying.onStart(context, effect, parent, fiber);\n  }\n  onEnd(value, fiber) {\n    this.underlying.onEnd(value, fiber);\n  }\n  onEffect(fiber, effect) {\n    this.underlying.onEffect(fiber, effect);\n  }\n  onSuspend(fiber) {\n    this.underlying.onSuspend(fiber);\n  }\n  onResume(fiber) {\n    this.underlying.onResume(fiber);\n  }\n  map(f) {\n    return new ProxySupervisor(this, () => pipe(this.value(), map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n}\n\n/** @internal */\nclass Zip {\n  _tag = \"Zip\";\n  [SupervisorTypeId] = supervisorVariance;\n  constructor(left, right) {\n    this.left = left;\n    this.right = right;\n  }\n  value() {\n    return zip(this.left.value(), this.right.value());\n  }\n  onStart(context, effect, parent, fiber) {\n    this.left.onStart(context, effect, parent, fiber);\n    this.right.onStart(context, effect, parent, fiber);\n  }\n  onEnd(value, fiber) {\n    this.left.onEnd(value, fiber);\n    this.right.onEnd(value, fiber);\n  }\n  onEffect(fiber, effect) {\n    this.left.onEffect(fiber, effect);\n    this.right.onEffect(fiber, effect);\n  }\n  onSuspend(fiber) {\n    this.left.onSuspend(fiber);\n    this.right.onSuspend(fiber);\n  }\n  onResume(fiber) {\n    this.left.onResume(fiber);\n    this.right.onResume(fiber);\n  }\n  map(f) {\n    return new ProxySupervisor(this, () => pipe(this.value(), map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n}\nconst isZip = self => hasProperty(self, SupervisorTypeId) && isTagged(self, \"Zip\");\nclass Track {\n  [SupervisorTypeId] = supervisorVariance;\n  fibers = new Set();\n  value() {\n    return sync(() => Array.from(this.fibers));\n  }\n  onStart(_context, _effect, _parent, fiber) {\n    this.fibers.add(fiber);\n  }\n  onEnd(_value, fiber) {\n    this.fibers.delete(fiber);\n  }\n  onEffect(_fiber, _effect) {\n    //\n  }\n  onSuspend(_fiber) {\n    //\n  }\n  onResume(_fiber) {\n    //\n  }\n  map(f) {\n    return new ProxySupervisor(this, () => pipe(this.value(), map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n  onRun(execution, _fiber) {\n    return execution();\n  }\n}\nclass Const {\n  [SupervisorTypeId] = supervisorVariance;\n  constructor(effect) {\n    this.effect = effect;\n  }\n  value() {\n    return this.effect;\n  }\n  onStart(_context, _effect, _parent, _fiber) {\n    //\n  }\n  onEnd(_value, _fiber) {\n    //\n  }\n  onEffect(_fiber, _effect) {\n    //\n  }\n  onSuspend(_fiber) {\n    //\n  }\n  onResume(_fiber) {\n    //\n  }\n  map(f) {\n    return new ProxySupervisor(this, () => pipe(this.value(), map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n  onRun(execution, _fiber) {\n    return execution();\n  }\n}\nclass FibersIn {\n  [SupervisorTypeId] = supervisorVariance;\n  constructor(ref) {\n    this.ref = ref;\n  }\n  value() {\n    return sync(() => get(this.ref));\n  }\n  onStart(_context, _effect, _parent, fiber) {\n    pipe(this.ref, set(pipe(get(this.ref), add(fiber))));\n  }\n  onEnd(_value, fiber) {\n    pipe(this.ref, set(pipe(get(this.ref), remove(fiber))));\n  }\n  onEffect(_fiber, _effect) {\n    //\n  }\n  onSuspend(_fiber) {\n    //\n  }\n  onResume(_fiber) {\n    //\n  }\n  map(f) {\n    return new ProxySupervisor(this, () => pipe(this.value(), map(f)));\n  }\n  zip(right) {\n    return new Zip(this, right);\n  }\n  onRun(execution, _fiber) {\n    return execution();\n  }\n}\n\n/** @internal */\nconst unsafeTrack = () => {\n  return new Track();\n};\n\n/** @internal */\nconst track = /*#__PURE__*/sync(unsafeTrack);\n\n/** @internal */\nconst fromEffect = effect => {\n  return new Const(effect);\n};\n\n/** @internal */\nconst none = /*#__PURE__*/globalValue(\"effect/Supervisor/none\", () => fromEffect(unit));\n\n/** @internal */\nconst fibersIn = ref => sync(() => new FibersIn(ref));\n\nexport { Const, ProxySupervisor, SupervisorTypeId, Track, Zip, fibersIn, fromEffect, isZip, none, supervisorVariance, track, unsafeTrack };\n","import { of, isNonEmpty, headNonEmpty, prepend, tailNonEmpty } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { make } from '../../Differ/dist/effect-Differ.esm.js';\nimport { equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { reduce, difference, empty as empty$1, union, make as make$1 } from '../../HashSet/dist/effect-HashSet.esm.js';\nimport { none, isZip } from '../supervisor.esm.js';\n\n/** @internal */\n\n/** @internal */\nconst OP_EMPTY = \"Empty\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ADD_SUPERVISOR = \"AddSupervisor\";\n\n/** @internal */\n\n/** @internal */\nconst OP_REMOVE_SUPERVISOR = \"RemoveSupervisor\";\n\n/** @internal */\n\n/** @internal */\nconst OP_AND_THEN = \"AndThen\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/**\n * The empty `SupervisorPatch`.\n *\n * @internal\n */\nconst empty = {\n  _tag: OP_EMPTY\n};\n\n/**\n * Combines two patches to produce a new patch that describes applying the\n * updates from this patch and then the updates from the specified patch.\n *\n * @internal\n */\nconst combine = (self, that) => {\n  return {\n    _tag: OP_AND_THEN,\n    first: self,\n    second: that\n  };\n};\n\n/**\n * Applies a `SupervisorPatch` to a `Supervisor` to produce a new `Supervisor`.\n *\n * @internal\n */\nconst patch = (self, supervisor) => {\n  return patchLoop(supervisor, of(self));\n};\n\n/** @internal */\nconst patchLoop = (_supervisor, _patches) => {\n  let supervisor = _supervisor;\n  let patches = _patches;\n  while (isNonEmpty(patches)) {\n    const head = headNonEmpty(patches);\n    switch (head._tag) {\n      case OP_EMPTY:\n        {\n          patches = tailNonEmpty(patches);\n          break;\n        }\n      case OP_ADD_SUPERVISOR:\n        {\n          supervisor = supervisor.zip(head.supervisor);\n          patches = tailNonEmpty(patches);\n          break;\n        }\n      case OP_REMOVE_SUPERVISOR:\n        {\n          supervisor = removeSupervisor(supervisor, head.supervisor);\n          patches = tailNonEmpty(patches);\n          break;\n        }\n      case OP_AND_THEN:\n        {\n          patches = prepend(head.first)(prepend(head.second)(tailNonEmpty(patches)));\n          break;\n        }\n    }\n  }\n  return supervisor;\n};\n\n/** @internal */\nconst removeSupervisor = (self, that) => {\n  if (equals(self, that)) {\n    return none;\n  } else {\n    if (isZip(self)) {\n      return removeSupervisor(self.left, that).zip(removeSupervisor(self.right, that));\n    } else {\n      return self;\n    }\n  }\n};\n\n/** @internal */\nconst toSet = self => {\n  if (equals(self, none)) {\n    return empty$1();\n  } else {\n    if (isZip(self)) {\n      return pipe(toSet(self.left), union(toSet(self.right)));\n    } else {\n      return make$1(self);\n    }\n  }\n};\n\n/** @internal */\nconst diff = (oldValue, newValue) => {\n  if (equals(oldValue, newValue)) {\n    return empty;\n  }\n  const oldSupervisors = toSet(oldValue);\n  const newSupervisors = toSet(newValue);\n  const added = pipe(newSupervisors, difference(oldSupervisors), reduce(empty, (patch, supervisor) => combine(patch, {\n    _tag: OP_ADD_SUPERVISOR,\n    supervisor\n  })));\n  const removed = pipe(oldSupervisors, difference(newSupervisors), reduce(empty, (patch, supervisor) => combine(patch, {\n    _tag: OP_REMOVE_SUPERVISOR,\n    supervisor\n  })));\n  return combine(added, removed);\n};\n\n/** @internal */\nconst differ = /*#__PURE__*/make({\n  empty,\n  patch,\n  combine,\n  diff\n});\n\nexport { OP_ADD_SUPERVISOR, OP_AND_THEN, OP_EMPTY, OP_REMOVE_SUPERVISOR, combine, diff, differ, empty, patch };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { currentMaxOpsBeforeYield, currentSchedulingPriority, fiberRefUnsafeMake, fiberRefLocally } from '../../internal/core.esm.js';\nimport { set } from '../../internal/timeout.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category utils\n */\nclass PriorityBuckets {\n  /**\n   * @since 2.0.0\n   */\n  buckets = [];\n  /**\n   * @since 2.0.0\n   */\n  scheduleTask(task, priority) {\n    let bucket = undefined;\n    let index;\n    for (index = 0; index < this.buckets.length; index++) {\n      if (this.buckets[index][0] <= priority) {\n        bucket = this.buckets[index];\n      } else {\n        break;\n      }\n    }\n    if (bucket) {\n      bucket[1].push(task);\n    } else {\n      const newBuckets = [];\n      for (let i = 0; i < index; i++) {\n        newBuckets.push(this.buckets[i]);\n      }\n      newBuckets.push([priority, [task]]);\n      for (let i = index; i < this.buckets.length; i++) {\n        newBuckets.push(this.buckets[i]);\n      }\n      this.buckets = newBuckets;\n    }\n  }\n}\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nclass MixedScheduler {\n  /**\n   * @since 2.0.0\n   */\n  running = false;\n  /**\n   * @since 2.0.0\n   */\n  tasks = new PriorityBuckets();\n  constructor(\n  /**\n   * @since 2.0.0\n   */\n  maxNextTickBeforeTimer) {\n    this.maxNextTickBeforeTimer = maxNextTickBeforeTimer;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  starveInternal(depth) {\n    const tasks = this.tasks.buckets;\n    this.tasks.buckets = [];\n    for (const [_, toRun] of tasks) {\n      for (let i = 0; i < toRun.length; i++) {\n        toRun[i]();\n      }\n    }\n    if (this.tasks.buckets.length === 0) {\n      this.running = false;\n    } else {\n      this.starve(depth);\n    }\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  starve(depth = 0) {\n    if (depth >= this.maxNextTickBeforeTimer) {\n      set(() => this.starveInternal(0), 0);\n    } else {\n      Promise.resolve(void 0).then(() => this.starveInternal(depth + 1));\n    }\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  shouldYield(fiber) {\n    return fiber.currentOpCount > fiber.getFiberRef(currentMaxOpsBeforeYield) ? fiber.getFiberRef(currentSchedulingPriority) : false;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  scheduleTask(task, priority) {\n    this.tasks.scheduleTask(task, priority);\n    if (!this.running) {\n      this.running = true;\n      this.starve();\n    }\n  }\n}\n\n/**\n * @since 2.0.0\n * @category schedulers\n */\nconst defaultScheduler = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Scheduler/defaultScheduler\"), () => new MixedScheduler(2048));\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nclass SyncScheduler {\n  /**\n   * @since 2.0.0\n   */\n  tasks = new PriorityBuckets();\n\n  /**\n   * @since 2.0.0\n   */\n  deferred = false;\n\n  /**\n   * @since 2.0.0\n   */\n  scheduleTask(task, priority) {\n    if (this.deferred) {\n      defaultScheduler.scheduleTask(task, priority);\n    } else {\n      this.tasks.scheduleTask(task, priority);\n    }\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  shouldYield(fiber) {\n    return fiber.currentOpCount > fiber.getFiberRef(currentMaxOpsBeforeYield) ? fiber.getFiberRef(currentSchedulingPriority) : false;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  flush() {\n    while (this.tasks.buckets.length > 0) {\n      const tasks = this.tasks.buckets;\n      this.tasks.buckets = [];\n      for (const [_, toRun] of tasks) {\n        for (let i = 0; i < toRun.length; i++) {\n          toRun[i]();\n        }\n      }\n    }\n    this.deferred = true;\n  }\n}\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nclass ControlledScheduler {\n  /**\n   * @since 2.0.0\n   */\n  tasks = new PriorityBuckets();\n\n  /**\n   * @since 2.0.0\n   */\n  deferred = false;\n\n  /**\n   * @since 2.0.0\n   */\n  scheduleTask(task, priority) {\n    if (this.deferred) {\n      defaultScheduler.scheduleTask(task, priority);\n    } else {\n      this.tasks.scheduleTask(task, priority);\n    }\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  shouldYield(fiber) {\n    return fiber.currentOpCount > fiber.getFiberRef(currentMaxOpsBeforeYield) ? fiber.getFiberRef(currentSchedulingPriority) : false;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  step() {\n    const tasks = this.tasks.buckets;\n    this.tasks.buckets = [];\n    for (const [_, toRun] of tasks) {\n      for (let i = 0; i < toRun.length; i++) {\n        toRun[i]();\n      }\n    }\n  }\n}\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst makeMatrix = (...record) => {\n  const index = record.sort(([p0], [p1]) => p0 < p1 ? -1 : p0 > p1 ? 1 : 0);\n  return {\n    shouldYield(fiber) {\n      for (const scheduler of record) {\n        const priority = scheduler[1].shouldYield(fiber);\n        if (priority !== false) {\n          return priority;\n        }\n      }\n      return false;\n    },\n    scheduleTask(task, priority) {\n      let scheduler = undefined;\n      for (const i of index) {\n        if (priority >= i[0]) {\n          scheduler = i[1];\n        } else {\n          return (scheduler ?? defaultScheduler).scheduleTask(task, priority);\n        }\n      }\n      return (scheduler ?? defaultScheduler).scheduleTask(task, priority);\n    }\n  };\n};\n\n/**\n * @since 2.0.0\n * @category utilities\n */\nconst defaultShouldYield = fiber => {\n  return fiber.currentOpCount > fiber.getFiberRef(currentMaxOpsBeforeYield) ? fiber.getFiberRef(currentSchedulingPriority) : false;\n};\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = (scheduleTask, shouldYield = defaultShouldYield) => ({\n  scheduleTask,\n  shouldYield\n});\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst makeBatched = (callback, shouldYield = defaultShouldYield) => {\n  let running = false;\n  const tasks = new PriorityBuckets();\n  const starveInternal = () => {\n    const tasksToRun = tasks.buckets;\n    tasks.buckets = [];\n    for (const [_, toRun] of tasksToRun) {\n      for (let i = 0; i < toRun.length; i++) {\n        toRun[i]();\n      }\n    }\n    if (tasks.buckets.length === 0) {\n      running = false;\n    } else {\n      starve();\n    }\n  };\n  const starve = () => callback(starveInternal);\n  return make((task, priority) => {\n    tasks.scheduleTask(task, priority);\n    if (!running) {\n      running = true;\n      starve();\n    }\n  }, shouldYield);\n};\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst timer = (ms, shouldYield = defaultShouldYield) => make(task => set(task, ms), shouldYield);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst timerBatched = (ms, shouldYield = defaultShouldYield) => makeBatched(task => set(task, ms), shouldYield);\n\n/** @internal */\nconst currentScheduler = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentScheduler\"), () => fiberRefUnsafeMake(defaultScheduler));\n\n/** @internal */\nconst withScheduler = /*#__PURE__*/dual(2, (self, scheduler) => fiberRefLocally(self, currentScheduler, scheduler));\n\nexport { ControlledScheduler, MixedScheduler, PriorityBuckets, SyncScheduler, currentScheduler, defaultScheduler, defaultShouldYield, make, makeBatched, makeMatrix, timer, timerBatched, withScheduler };\n","import { not } from '../Boolean/dist/effect-Boolean.esm.js';\nimport { fromIterable as fromIterable$1, isNonEmpty, headNonEmpty, tailNonEmpty, unsafeFromArray, prepend } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { getOption, get as get$1, add, Tag, merge, make as make$2, unsafeGet } from '../Context/dist/effect-Context.esm.js';\nimport { await as _await$1 } from '../Deferred/dist/effect-Deferred.esm.js';\nimport { EffectTypeId } from '../Effectable/dist/effect-Effectable.esm.js';\nimport { parallel, sequential, parallelN } from '../ExecutionStrategy/dist/effect-ExecutionStrategy.esm.js';\nimport { threadName, combine, none as none$2, unsafeMake as unsafeMake$1 } from '../FiberId/dist/effect-FiberId.esm.js';\nimport { getOrDefault } from '../FiberRefs/dist/effect-FiberRefs.esm.js';\nimport { diff as diff$1, patch as patch$1 } from '../FiberRefsPatch/dist/effect-FiberRefsPatch.esm.js';\nimport { isDone, done, suspended, running } from '../FiberStatus/dist/effect-FiberStatus.esm.js';\nimport { dual, identity, pipe } from '../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { map as map$1 } from '../HashMap/dist/effect-HashMap.esm.js';\nimport { make, fromIterable as fromIterable$2, union, size } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { par, flatten as flatten$2, sequentialCollectionToChunk } from './blockedRequests.esm.js';\nimport { pretty, failureOrCause, parallel as parallel$1, sequential as sequential$1, interrupt, isEmpty, isInterruptedOnly, die, NoSuchElementException, stripFailures, isInterruptedException, IllegalArgumentException } from './cause.esm.js';\nimport { clockTag } from './clock.esm.js';\nimport { currentRequestMap } from './completedRequestMap.esm.js';\nimport { matchSimple, match as match$1 } from './concurrency.esm.js';\nimport { configProviderTag } from './configProvider.esm.js';\nimport { fiberRefUnsafeMake, currentContext, fiberRefUnsafeMakeHashSet, uninterruptible, tap, isEffect, withFiberRuntime, fiberRefLocally, currentForkScopeOverride, map as map$2, exit, exitIsSuccess, onError, failCause, partitionMap, either, flatMap as flatMap$1, unit, succeed, fail, dieSync, uninterruptibleMask, interruptible, forEachSequential, zipRight, asUnit, onInterrupt, zipLeft, interruptFiber, deferredMake, exitMatchEffect, flatten, deferredFailCause, deferredSucceed, contextWithEffect, scopeFork, currentMetricLabels, acquireUseRelease, scopeClose, exitZipWith, flip, fiberIdWith, updateRuntimeFlags, runtimeFlags, ScopeTypeId, releaseMapMake, CloseableScopeTypeId, releaseMapAdd, scopeAddFinalizerExit, as, mapInputContext, onExit, fiberRefUnsafeMakePatch, fiberRefGet, fiberRefSet, fiberRefGetWith, sync, fiberRefUpdate, fiberRefDelete, fiberRefUnsafeMakeContext, fiberRefUnsafeMakeRuntimeFlags, forEachSequentialDiscard, exitSucceed, matchCauseEffect, suspend, currentInterruptedCause, deferredUnsafeMake, deferredAwait, async, currentSchedulingPriority, whileLoop, currentUnhandledErrorLogLevel, currentLogLevel, currentLogSpan, currentLogAnnotations, exitFailCause, exitUnit, blocked, catchAllCause, runRequestBlock, RevertFlags, yieldNow as yieldNow$1, dieMessage, isEffectError, withRuntimeFlags, matchEffect, if_, zipWith, currentRequestBatching, transplant, step, deferredUnsafeDone, deferredFail, exitCollectAll, exitIsFailure, exitInterrupt, exitAsUnit, interruptAsFiber, flatMapStep } from './core.esm.js';\nimport { makeSpan, currentTimeNanosTracing, provideService, mapErrorCause } from './core-effect.esm.js';\nimport { currentServices } from './defaultServices.esm.js';\nimport { consoleTag } from './defaultServices/console.esm.js';\nimport { sequential as sequential$2, isSequential, isParallel } from './executionStrategy.esm.js';\nimport { _await, FiberTypeId, fiberVariance, join, RuntimeFiberTypeId, currentFiberURI, inheritAll, interruptAsFork } from './fiber.esm.js';\nimport { resume, stateful, interruptSignal, OP_STATEFUL, OP_RESUME, OP_INTERRUPT_SIGNAL, OP_YIELD_NOW, yieldNow } from './fiberMessage.esm.js';\nimport { get, joinAs, delete_, updatedAs, forkAs, getOrDefault as getOrDefault$1 } from './fiberRefs.esm.js';\nimport { globalScope, unsafeMake } from './fiberScope.esm.js';\nimport { makeLogger, stringLogger, logfmtLogger, serializeUnknown } from './logger.esm.js';\nimport { counter, tagged, histogram } from './metric.esm.js';\nimport { exponential } from './metric/boundaries.esm.js';\nimport { make as make$3 } from './metric/label.esm.js';\nimport { OP_FAILURE, OP_SUCCESS, OP_YIELD, OP_ASYNC, OP_ON_FAILURE, OP_ON_SUCCESS, OP_WHILE, OP_TAG, OP_SYNC, OP_REVERT_FLAGS, OP_ON_SUCCESS_AND_FAILURE, OP_WITH_RUNTIME, OP_UPDATE_RUNTIME_FLAGS, OP_COMMIT } from './opCodes/effect.esm.js';\nimport { complete } from './request.esm.js';\nimport { patch, diff, runtimeMetrics, WindDown, Interruption, interruptible as interruptible$1, enable, cooperativeYielding, OpSupervision, none as none$3 } from './runtimeFlags.esm.js';\nimport { none as none$1 } from './supervisor.esm.js';\nimport { differ, empty as empty$1 } from './supervisor/patch.esm.js';\nimport { spanTag, tracerTag } from './tracer.esm.js';\nimport { fromLiteral, greaterThan } from '../LogLevel/dist/effect-LogLevel.esm.js';\nimport { make as make$4, compareAndSet } from '../MutableRef/dist/effect-MutableRef.esm.js';\nimport { flatMap, map, some, none, match, fromNullable, isSome, getOrElse } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { isIterable } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { fromIterable, filterMap, reduce, flatten as flatten$1, reduceRight, compact } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\nimport { make as make$1, modify, update, get as get$2 } from '../Ref/dist/effect-Ref.esm.js';\nimport { empty, exclude } from '../RuntimeFlagsPatch/dist/effect-RuntimeFlagsPatch.esm.js';\nimport { currentScheduler } from '../Scheduler/dist/effect-Scheduler.esm.js';\nimport { moduleVersion } from './version.esm.js';\n\n/** @internal */\nconst fiberStarted = /*#__PURE__*/counter(\"effect_fiber_started\");\n/** @internal */\nconst fiberActive = /*#__PURE__*/counter(\"effect_fiber_active\");\n/** @internal */\nconst fiberSuccesses = /*#__PURE__*/counter(\"effect_fiber_successes\");\n/** @internal */\nconst fiberFailures = /*#__PURE__*/counter(\"effect_fiber_failures\");\n/** @internal */\nconst fiberLifetimes = /*#__PURE__*/tagged( /*#__PURE__*/histogram(\"effect_fiber_lifetimes\", /*#__PURE__*/exponential({\n  start: 1.0,\n  factor: 1.3,\n  count: 100\n})), \"time_unit\", \"milliseconds\");\n\n/** @internal */\n\n/** @internal */\nconst EvaluationSignalContinue = \"Continue\";\n\n/** @internal */\n\n/** @internal */\nconst EvaluationSignalDone = \"Done\";\n\n/** @internal */\n\n/** @internal */\nconst EvaluationSignalYieldNow = \"Yield\";\n\n/** @internal */\n\n/** @internal */\nconst runtimeFiberVariance = {\n  _E: _ => _,\n  _A: _ => _\n};\nconst absurd = _ => {\n  throw new Error(`BUG: FiberRuntime - ${JSON.stringify(_)} - please report an issue at https://github.com/Effect-TS/io/issues`);\n};\nconst contOpSuccess = {\n  [OP_ON_SUCCESS]: (_, cont, value) => {\n    return cont.i1(value);\n  },\n  [\"OnStep\"]: (_, cont, value) => {\n    return cont.i1(exitSucceed(value));\n  },\n  [OP_ON_SUCCESS_AND_FAILURE]: (_, cont, value) => {\n    return cont.i2(value);\n  },\n  [OP_REVERT_FLAGS]: (self, cont, value) => {\n    self.patchRuntimeFlags(self._runtimeFlags, cont.patch);\n    if (interruptible$1(self._runtimeFlags) && self.isInterrupted()) {\n      return exitFailCause(self.getInterruptedCause());\n    } else {\n      return exitSucceed(value);\n    }\n  },\n  [OP_WHILE]: (self, cont, value) => {\n    cont.i2(value);\n    if (cont.i0()) {\n      self.pushStack(cont);\n      return cont.i1();\n    } else {\n      return unit;\n    }\n  }\n};\nconst drainQueueWhileRunningTable = {\n  [OP_INTERRUPT_SIGNAL]: (self, runtimeFlags, cur, message) => {\n    self.processNewInterruptSignal(message.cause);\n    return interruptible$1(runtimeFlags) ? exitFailCause(message.cause) : cur;\n  },\n  [OP_RESUME]: (_self, _runtimeFlags, _cur, _message) => {\n    throw new Error(\"It is illegal to have multiple concurrent run loops in a single fiber\");\n  },\n  [OP_STATEFUL]: (self, runtimeFlags, cur, message) => {\n    message.onFiber(self, running(runtimeFlags));\n    return cur;\n  },\n  [OP_YIELD_NOW]: (_self, _runtimeFlags, cur, _message) => {\n    return flatMap$1(yieldNow$1(), () => cur);\n  }\n};\n\n/**\n * Executes all requests, submitting requests to each data source in parallel.\n */\nconst runBlockedRequests = self => forEachSequentialDiscard(flatten$2(self), requestsByRequestResolver => forEachParUnboundedDiscard(sequentialCollectionToChunk(requestsByRequestResolver), ([dataSource, sequential]) => {\n  const map = new Map();\n  for (const block of sequential) {\n    for (const entry of block) {\n      map.set(entry.request, entry);\n    }\n  }\n  return fiberRefLocally(invokeWithInterrupt(dataSource.runAll(sequential), sequential.flat()), currentRequestMap, map);\n}, false));\n\n/** @internal */\nclass FiberRuntime {\n  [FiberTypeId] = fiberVariance;\n  [RuntimeFiberTypeId] = runtimeFiberVariance;\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  _queue = new Array();\n  _children = null;\n  _observers = new Array();\n  _running = false;\n  _stack = [];\n  _asyncInterruptor = null;\n  _asyncBlockingOn = null;\n  _exitValue = null;\n  _steps = [false];\n  currentOpCount = 0;\n  isYielding = false;\n  constructor(fiberId, fiberRefs0, runtimeFlags0) {\n    this._runtimeFlags = runtimeFlags0;\n    this._fiberId = fiberId;\n    this._fiberRefs = fiberRefs0;\n    this._supervisor = this.getFiberRef(currentSupervisor);\n    this._scheduler = this.getFiberRef(currentScheduler);\n    if (runtimeMetrics(runtimeFlags0)) {\n      const tags = this.getFiberRef(currentMetricLabels);\n      fiberStarted.unsafeUpdate(1, tags);\n      fiberActive.unsafeUpdate(1, tags);\n    }\n    this._tracer = get$1(this.getFiberRef(currentServices), tracerTag);\n  }\n\n  /**\n   * The identity of the fiber.\n   */\n  id() {\n    return this._fiberId;\n  }\n\n  /**\n   * Begins execution of the effect associated with this fiber on in the\n   * background. This can be called to \"kick off\" execution of a fiber after\n   * it has been created.\n   */\n  resume(effect) {\n    this.tell(resume(effect));\n  }\n\n  /**\n   * The status of the fiber.\n   */\n  status() {\n    return this.ask((_, status) => status);\n  }\n\n  /**\n   * Gets the fiber runtime flags.\n   */\n  runtimeFlags() {\n    return this.ask((state, status) => {\n      if (isDone(status)) {\n        return state._runtimeFlags;\n      }\n      return status.runtimeFlags;\n    });\n  }\n\n  /**\n   * Returns the current `FiberScope` for the fiber.\n   */\n  scope() {\n    return unsafeMake(this);\n  }\n\n  /**\n   * Retrieves the immediate children of the fiber.\n   */\n  children() {\n    return this.ask(fiber => Array.from(fiber.getChildren()));\n  }\n\n  /**\n   * Gets the fiber's set of children.\n   */\n  getChildren() {\n    if (this._children === null) {\n      this._children = new Set();\n    }\n    return this._children;\n  }\n\n  /**\n   * Retrieves the interrupted cause of the fiber, which will be `Cause.empty`\n   * if the fiber has not been interrupted.\n   *\n   * **NOTE**: This method is safe to invoke on any fiber, but if not invoked\n   * on this fiber, then values derived from the fiber's state (including the\n   * log annotations and log level) may not be up-to-date.\n   */\n  getInterruptedCause() {\n    return this.getFiberRef(currentInterruptedCause);\n  }\n\n  /**\n   * Retrieves the whole set of fiber refs.\n   */\n  fiberRefs() {\n    return this.ask(fiber => fiber.getFiberRefs());\n  }\n\n  /**\n   * Returns an effect that will contain information computed from the fiber\n   * state and status while running on the fiber.\n   *\n   * This allows the outside world to interact safely with mutable fiber state\n   * without locks or immutable data.\n   */\n  ask(f) {\n    return suspend(() => {\n      const deferred = deferredUnsafeMake(this._fiberId);\n      this.tell(stateful((fiber, status) => {\n        deferredUnsafeDone(deferred, sync(() => f(fiber, status)));\n      }));\n      return deferredAwait(deferred);\n    });\n  }\n\n  /**\n   * Adds a message to be processed by the fiber on the fiber.\n   */\n  tell(message) {\n    this._queue.push(message);\n    if (!this._running) {\n      this._running = true;\n      this.drainQueueLaterOnExecutor();\n    }\n  }\n  await() {\n    return async(resume => {\n      const cb = exit => resume(succeed(exit));\n      this.tell(stateful((fiber, _) => {\n        if (fiber._exitValue !== null) {\n          cb(this._exitValue);\n        } else {\n          fiber.addObserver(cb);\n        }\n      }));\n      return sync(() => this.tell(stateful((fiber, _) => {\n        fiber.removeObserver(cb);\n      })));\n    }, this.id());\n  }\n  inheritAll() {\n    return withFiberRuntime((parentFiber, parentStatus) => {\n      const parentFiberId = parentFiber.id();\n      const parentFiberRefs = parentFiber.getFiberRefs();\n      const parentRuntimeFlags = parentStatus.runtimeFlags;\n      const childFiberRefs = this.getFiberRefs();\n      const updatedFiberRefs = joinAs(parentFiberRefs, parentFiberId, childFiberRefs);\n      parentFiber.setFiberRefs(updatedFiberRefs);\n      const updatedRuntimeFlags = parentFiber.getFiberRef(currentRuntimeFlags);\n      const patch = pipe(diff(parentRuntimeFlags, updatedRuntimeFlags),\n      // Do not inherit WindDown or Interruption!\n      exclude(Interruption), exclude(WindDown));\n      return updateRuntimeFlags(patch);\n    });\n  }\n\n  /**\n   * Tentatively observes the fiber, but returns immediately if it is not\n   * already done.\n   */\n  poll() {\n    return sync(() => fromNullable(this._exitValue));\n  }\n\n  /**\n   * Unsafely observes the fiber, but returns immediately if it is not\n   * already done.\n   */\n  unsafePoll() {\n    return this._exitValue;\n  }\n\n  /**\n   * In the background, interrupts the fiber as if interrupted from the specified fiber.\n   */\n  interruptAsFork(fiberId) {\n    return sync(() => this.tell(interruptSignal(interrupt(fiberId))));\n  }\n\n  /**\n   * Adds an observer to the list of observers.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  addObserver(observer) {\n    if (this._exitValue !== null) {\n      observer(this._exitValue);\n    } else {\n      this._observers.push(observer);\n    }\n  }\n\n  /**\n   * Removes the specified observer from the list of observers that will be\n   * notified when the fiber exits.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  removeObserver(observer) {\n    this._observers = this._observers.filter(o => o !== observer);\n  }\n  /**\n   * Retrieves all fiber refs of the fiber.\n   *\n   * **NOTE**: This method is safe to invoke on any fiber, but if not invoked\n   * on this fiber, then values derived from the fiber's state (including the\n   * log annotations and log level) may not be up-to-date.\n   */\n  getFiberRefs() {\n    this.setFiberRef(currentRuntimeFlags, this._runtimeFlags);\n    return this._fiberRefs;\n  }\n\n  /**\n   * Deletes the specified fiber ref.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  unsafeDeleteFiberRef(fiberRef) {\n    this._fiberRefs = delete_(this._fiberRefs, fiberRef);\n  }\n\n  /**\n   * Retrieves the state of the fiber ref, or else its initial value.\n   *\n   * **NOTE**: This method is safe to invoke on any fiber, but if not invoked\n   * on this fiber, then values derived from the fiber's state (including the\n   * log annotations and log level) may not be up-to-date.\n   */\n  getFiberRef(fiberRef) {\n    if (this._fiberRefs.locals.has(fiberRef)) {\n      return this._fiberRefs.locals.get(fiberRef)[0][1];\n    }\n    return fiberRef.initial;\n  }\n\n  /**\n   * Sets the fiber ref to the specified value.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  setFiberRef(fiberRef, value) {\n    this._fiberRefs = updatedAs(this._fiberRefs, {\n      fiberId: this._fiberId,\n      fiberRef,\n      value\n    });\n    this.refreshRefCache();\n  }\n  refreshRefCache() {\n    this._tracer = get$1(this.getFiberRef(currentServices), tracerTag);\n    this._supervisor = this.getFiberRef(currentSupervisor);\n    this._scheduler = this.getFiberRef(currentScheduler);\n  }\n\n  /**\n   * Wholesale replaces all fiber refs of this fiber.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  setFiberRefs(fiberRefs) {\n    this._fiberRefs = fiberRefs;\n    this.refreshRefCache();\n  }\n\n  /**\n   * Adds a reference to the specified fiber inside the children set.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  addChild(child) {\n    this.getChildren().add(child);\n  }\n\n  /**\n   * Removes a reference to the specified fiber inside the children set.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  removeChild(child) {\n    this.getChildren().delete(child);\n  }\n\n  /**\n   * On the current thread, executes all messages in the fiber's inbox. This\n   * method may return before all work is done, in the event the fiber executes\n   * an asynchronous operation.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  drainQueueOnCurrentThread() {\n    let recurse = true;\n    while (recurse) {\n      let evaluationSignal = EvaluationSignalContinue;\n      const prev = globalThis[currentFiberURI];\n      globalThis[currentFiberURI] = this;\n      try {\n        while (evaluationSignal === EvaluationSignalContinue) {\n          evaluationSignal = this._queue.length === 0 ? EvaluationSignalDone : this.evaluateMessageWhileSuspended(this._queue.splice(0, 1)[0]);\n        }\n      } finally {\n        this._running = false;\n        globalThis[currentFiberURI] = prev;\n      }\n      // Maybe someone added something to the queue between us checking, and us\n      // giving up the drain. If so, we need to restart the draining, but only\n      // if we beat everyone else to the restart:\n      if (this._queue.length > 0 && !this._running) {\n        this._running = true;\n        if (evaluationSignal === EvaluationSignalYieldNow) {\n          this.drainQueueLaterOnExecutor();\n          recurse = false;\n        } else {\n          recurse = true;\n        }\n      } else {\n        recurse = false;\n      }\n    }\n  }\n\n  /**\n   * Schedules the execution of all messages in the fiber's inbox.\n   *\n   * This method will return immediately after the scheduling\n   * operation is completed, but potentially before such messages have been\n   * executed.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  drainQueueLaterOnExecutor() {\n    this._scheduler.scheduleTask(this.run, this.getFiberRef(currentSchedulingPriority));\n  }\n\n  /**\n   * Drains the fiber's message queue while the fiber is actively running,\n   * returning the next effect to execute, which may be the input effect if no\n   * additional effect needs to be executed.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  drainQueueWhileRunning(runtimeFlags, cur0) {\n    let cur = cur0;\n    while (this._queue.length > 0) {\n      const message = this._queue.splice(0, 1)[0];\n      // @ts-expect-error\n      cur = drainQueueWhileRunningTable[message._tag](this, runtimeFlags, cur, message);\n    }\n    return cur;\n  }\n\n  /**\n   * Determines if the fiber is interrupted.\n   *\n   * **NOTE**: This method is safe to invoke on any fiber, but if not invoked\n   * on this fiber, then values derived from the fiber's state (including the\n   * log annotations and log level) may not be up-to-date.\n   */\n  isInterrupted() {\n    return !isEmpty(this.getFiberRef(currentInterruptedCause));\n  }\n\n  /**\n   * Adds an interruptor to the set of interruptors that are interrupting this\n   * fiber.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  addInterruptedCause(cause) {\n    const oldSC = this.getFiberRef(currentInterruptedCause);\n    this.setFiberRef(currentInterruptedCause, sequential$1(oldSC, cause));\n  }\n\n  /**\n   * Processes a new incoming interrupt signal.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  processNewInterruptSignal(cause) {\n    this.addInterruptedCause(cause);\n    this.sendInterruptSignalToAllChildren();\n  }\n\n  /**\n   * Interrupts all children of the current fiber, returning an effect that will\n   * await the exit of the children. This method will return null if the fiber\n   * has no children.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  sendInterruptSignalToAllChildren() {\n    if (this._children === null || this._children.size === 0) {\n      return false;\n    }\n    let told = false;\n    for (const child of this._children) {\n      child.tell(interruptSignal(interrupt(this.id())));\n      told = true;\n    }\n    return told;\n  }\n\n  /**\n   * Interrupts all children of the current fiber, returning an effect that will\n   * await the exit of the children. This method will return null if the fiber\n   * has no children.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  interruptAllChildren() {\n    if (this.sendInterruptSignalToAllChildren()) {\n      const it = this._children.values();\n      this._children = null;\n      let isDone = false;\n      const body = () => {\n        const next = it.next();\n        if (!next.done) {\n          return asUnit(next.value.await());\n        } else {\n          return sync(() => {\n            isDone = true;\n          });\n        }\n      };\n      return whileLoop({\n        while: () => !isDone,\n        body,\n        step: () => {\n          //\n        }\n      });\n    }\n    return null;\n  }\n  reportExitValue(exit) {\n    if (runtimeMetrics(this._runtimeFlags)) {\n      const tags = this.getFiberRef(currentMetricLabels);\n      fiberActive.unsafeUpdate(-1, tags);\n      switch (exit._tag) {\n        case OP_SUCCESS:\n          {\n            fiberSuccesses.unsafeUpdate(1, tags);\n            break;\n          }\n        case OP_FAILURE:\n          {\n            fiberFailures.unsafeUpdate(1, tags);\n            break;\n          }\n      }\n    }\n    if (exit._tag === \"Failure\") {\n      const level = this.getFiberRef(currentUnhandledErrorLogLevel);\n      if (!isInterruptedOnly(exit.cause) && level._tag === \"Some\") {\n        this.log(\"Fiber terminated with a non handled error\", exit.cause, level);\n      }\n    }\n  }\n  setExitValue(exit) {\n    this._exitValue = exit;\n    if (runtimeMetrics(this._runtimeFlags)) {\n      const tags = this.getFiberRef(currentMetricLabels);\n      const startTimeMillis = this.id().startTimeMillis;\n      const endTimeMillis = new Date().getTime();\n      fiberLifetimes.unsafeUpdate(endTimeMillis - startTimeMillis, tags);\n    }\n    this.reportExitValue(exit);\n    for (let i = this._observers.length - 1; i >= 0; i--) {\n      this._observers[i](exit);\n    }\n  }\n  getLoggers() {\n    return this.getFiberRef(currentLoggers);\n  }\n  log(message, cause, overrideLogLevel) {\n    const logLevel = isSome(overrideLogLevel) ? overrideLogLevel.value : this.getFiberRef(currentLogLevel);\n    const minimumLogLevel = this.getFiberRef(currentMinimumLogLevel);\n    if (greaterThan(minimumLogLevel, logLevel)) {\n      return;\n    }\n    const spans = this.getFiberRef(currentLogSpan);\n    const annotations = this.getFiberRef(currentLogAnnotations);\n    const loggers = this.getLoggers();\n    const contextMap = this.getFiberRefs();\n    if (size(loggers) > 0) {\n      const clockService = get$1(this.getFiberRef(currentServices), clockTag);\n      const date = new Date(clockService.unsafeCurrentTimeMillis());\n      for (const logger of loggers) {\n        logger.log({\n          fiberId: this.id(),\n          logLevel,\n          message,\n          cause,\n          context: contextMap,\n          spans,\n          annotations,\n          date\n        });\n      }\n    }\n  }\n\n  /**\n   * Evaluates a single message on the current thread, while the fiber is\n   * suspended. This method should only be called while evaluation of the\n   * fiber's effect is suspended due to an asynchronous operation.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  evaluateMessageWhileSuspended(message) {\n    switch (message._tag) {\n      case OP_YIELD_NOW:\n        {\n          return EvaluationSignalYieldNow;\n        }\n      case OP_INTERRUPT_SIGNAL:\n        {\n          this.processNewInterruptSignal(message.cause);\n          if (this._asyncInterruptor !== null) {\n            this._asyncInterruptor(exitFailCause(message.cause));\n            this._asyncInterruptor = null;\n          }\n          return EvaluationSignalContinue;\n        }\n      case OP_RESUME:\n        {\n          this._asyncInterruptor = null;\n          this._asyncBlockingOn = null;\n          this.evaluateEffect(message.effect);\n          return EvaluationSignalContinue;\n        }\n      case OP_STATEFUL:\n        {\n          message.onFiber(this, this._exitValue !== null ? done : suspended(this._runtimeFlags, this._asyncBlockingOn));\n          return EvaluationSignalContinue;\n        }\n      default:\n        {\n          return absurd(message);\n        }\n    }\n  }\n\n  /**\n   * Evaluates an effect until completion, potentially asynchronously.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  evaluateEffect(effect0) {\n    this._supervisor.onResume(this);\n    try {\n      let effect = interruptible$1(this._runtimeFlags) && this.isInterrupted() ? exitFailCause(this.getInterruptedCause()) : effect0;\n      while (effect !== null) {\n        try {\n          const eff = effect;\n          const exit = this.runLoop(eff);\n          this._runtimeFlags = pipe(this._runtimeFlags, enable(WindDown));\n          const interruption = this.interruptAllChildren();\n          if (interruption !== null) {\n            effect = flatMap$1(interruption, () => exit);\n          } else {\n            if (this._queue.length === 0) {\n              // No more messages to process, so we will allow the fiber to end life:\n              this.setExitValue(exit);\n            } else {\n              // There are messages, possibly added by the final op executed by\n              // the fiber. To be safe, we should execute those now before we\n              // allow the fiber to end life:\n              this.tell(resume(exit));\n            }\n            effect = null;\n          }\n        } catch (e) {\n          if (isEffect(e)) {\n            if (e._op === OP_YIELD) {\n              if (cooperativeYielding(this._runtimeFlags)) {\n                this.tell(yieldNow());\n                this.tell(resume(exitUnit));\n                effect = null;\n              } else {\n                effect = exitUnit;\n              }\n            } else if (e._op === OP_ASYNC) {\n              // Terminate this evaluation, async resumption will continue evaluation:\n              effect = null;\n            }\n          } else {\n            throw e;\n          }\n        }\n      }\n    } finally {\n      this._supervisor.onSuspend(this);\n    }\n  }\n\n  /**\n   * Begins execution of the effect associated with this fiber on the current\n   * thread. This can be called to \"kick off\" execution of a fiber after it has\n   * been created, in hopes that the effect can be executed synchronously.\n   *\n   * This is not the normal way of starting a fiber, but it is useful when the\n   * express goal of executing the fiber is to synchronously produce its exit.\n   */\n  start(effect) {\n    if (!this._running) {\n      this._running = true;\n      const prev = globalThis[currentFiberURI];\n      globalThis[currentFiberURI] = this;\n      try {\n        this.evaluateEffect(effect);\n      } finally {\n        this._running = false;\n        globalThis[currentFiberURI] = prev;\n        // Because we're special casing `start`, we have to be responsible\n        // for spinning up the fiber if there were new messages added to\n        // the queue between the completion of the effect and the transition\n        // to the not running state.\n        if (this._queue.length > 0) {\n          this.drainQueueLaterOnExecutor();\n        }\n      }\n    } else {\n      this.tell(resume(effect));\n    }\n  }\n\n  /**\n   * Begins execution of the effect associated with this fiber on in the\n   * background, and on the correct thread pool. This can be called to \"kick\n   * off\" execution of a fiber after it has been created, in hopes that the\n   * effect can be executed synchronously.\n   */\n  startFork(effect) {\n    this.tell(resume(effect));\n  }\n\n  /**\n   * Takes the current runtime flags, patches them to return the new runtime\n   * flags, and then makes any changes necessary to fiber state based on the\n   * specified patch.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  patchRuntimeFlags(oldRuntimeFlags, patch$1) {\n    const newRuntimeFlags = patch(oldRuntimeFlags, patch$1);\n    globalThis[currentFiberURI] = this;\n    this._runtimeFlags = newRuntimeFlags;\n    return newRuntimeFlags;\n  }\n\n  /**\n   * Initiates an asynchronous operation, by building a callback that will\n   * resume execution, and then feeding that callback to the registration\n   * function, handling error cases and repeated resumptions appropriately.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  initiateAsync(runtimeFlags, asyncRegister) {\n    let alreadyCalled = false;\n    const callback = effect => {\n      if (!alreadyCalled) {\n        alreadyCalled = true;\n        this.tell(resume(effect));\n      }\n    };\n    if (interruptible$1(runtimeFlags)) {\n      this._asyncInterruptor = callback;\n    }\n    try {\n      asyncRegister(callback);\n    } catch (e) {\n      callback(failCause(die(e)));\n    }\n  }\n  pushStack(cont) {\n    this._stack.push(cont);\n    if (cont._op === \"OnStep\") {\n      this._steps.push(true);\n    }\n    if (cont._op === \"RevertFlags\") {\n      this._steps.push(false);\n    }\n  }\n  popStack() {\n    const item = this._stack.pop();\n    if (item) {\n      if (item._op === \"OnStep\" || item._op === \"RevertFlags\") {\n        this._steps.pop();\n      }\n      return item;\n    }\n    return;\n  }\n  getNextSuccessCont() {\n    let frame = this.popStack();\n    while (frame) {\n      if (frame._op !== OP_ON_FAILURE) {\n        return frame;\n      }\n      frame = this.popStack();\n    }\n  }\n  getNextFailCont() {\n    let frame = this.popStack();\n    while (frame) {\n      if (frame._op !== OP_ON_SUCCESS && frame._op !== OP_WHILE) {\n        return frame;\n      }\n      frame = this.popStack();\n    }\n  }\n  [OP_TAG](op) {\n    return map$2(fiberRefGet(currentContext), context => {\n      try {\n        return unsafeGet(context, op);\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    });\n  }\n  [\"Left\"](op) {\n    return fail(op.left);\n  }\n  [\"None\"](_) {\n    return fail(NoSuchElementException());\n  }\n  [\"Right\"](op) {\n    return exitSucceed(op.right);\n  }\n  [\"Some\"](op) {\n    return exitSucceed(op.value);\n  }\n  [OP_SYNC](op) {\n    const value = op.i0();\n    const cont = this.getNextSuccessCont();\n    if (cont !== undefined) {\n      if (!(cont._op in contOpSuccess)) {\n        // @ts-expect-error\n        absurd(cont);\n      }\n      // @ts-expect-error\n      return contOpSuccess[cont._op](this, cont, value);\n    } else {\n      throw exitSucceed(value);\n    }\n  }\n  [OP_SUCCESS](op) {\n    const oldCur = op;\n    const cont = this.getNextSuccessCont();\n    if (cont !== undefined) {\n      if (!(cont._op in contOpSuccess)) {\n        // @ts-expect-error\n        absurd(cont);\n      }\n      // @ts-expect-error\n      return contOpSuccess[cont._op](this, cont, oldCur.i0);\n    } else {\n      throw oldCur;\n    }\n  }\n  [OP_FAILURE](op) {\n    const cause = op.i0;\n    const cont = this.getNextFailCont();\n    if (cont !== undefined) {\n      switch (cont._op) {\n        case OP_ON_FAILURE:\n        case OP_ON_SUCCESS_AND_FAILURE:\n          {\n            if (!(interruptible$1(this._runtimeFlags) && this.isInterrupted())) {\n              return cont.i1(cause);\n            } else {\n              return exitFailCause(stripFailures(cause));\n            }\n          }\n        case \"OnStep\":\n          {\n            if (!(interruptible$1(this._runtimeFlags) && this.isInterrupted())) {\n              return cont.i1(exitFailCause(cause));\n            } else {\n              return exitFailCause(stripFailures(cause));\n            }\n          }\n        case OP_REVERT_FLAGS:\n          {\n            this.patchRuntimeFlags(this._runtimeFlags, cont.patch);\n            if (interruptible$1(this._runtimeFlags) && this.isInterrupted()) {\n              return exitFailCause(sequential$1(cause, this.getInterruptedCause()));\n            } else {\n              return exitFailCause(cause);\n            }\n          }\n        default:\n          {\n            absurd(cont);\n          }\n      }\n    } else {\n      throw exitFailCause(cause);\n    }\n  }\n  [OP_WITH_RUNTIME](op) {\n    return op.i0(this, running(this._runtimeFlags));\n  }\n  [\"Blocked\"](op) {\n    if (this._steps[this._steps.length - 1]) {\n      const nextOp = this.popStack();\n      if (nextOp) {\n        switch (nextOp._op) {\n          case \"OnStep\":\n            {\n              return nextOp.i1(op);\n            }\n          case \"OnSuccess\":\n            {\n              return blocked(op.i0, flatMap$1(op.i1, nextOp.i1));\n            }\n          case \"OnSuccessAndFailure\":\n            {\n              return blocked(op.i0, matchCauseEffect(op.i1, {\n                onFailure: nextOp.i1,\n                onSuccess: nextOp.i2\n              }));\n            }\n          case \"OnFailure\":\n            {\n              return blocked(op.i0, catchAllCause(op.i1, nextOp.i1));\n            }\n          case \"While\":\n            {\n              return blocked(op.i0, flatMap$1(op.i1, a => {\n                nextOp.i2(a);\n                if (nextOp.i0()) {\n                  return whileLoop({\n                    while: nextOp.i0,\n                    body: nextOp.i1,\n                    step: nextOp.i2\n                  });\n                }\n                return unit;\n              }));\n            }\n          case \"RevertFlags\":\n            {\n              this.pushStack(nextOp);\n              break;\n            }\n        }\n      }\n    }\n    return uninterruptibleMask(restore => flatMap$1(fork(runRequestBlock(op.i0)), () => restore(op.i1)));\n  }\n  [\"RunBlocked\"](op) {\n    return runBlockedRequests(op.i0);\n  }\n  [OP_UPDATE_RUNTIME_FLAGS](op) {\n    const updateFlags = op.i0;\n    const oldRuntimeFlags = this._runtimeFlags;\n    const newRuntimeFlags = patch(oldRuntimeFlags, updateFlags);\n    // One more chance to short circuit: if we're immediately going\n    // to interrupt. Interruption will cause immediate reversion of\n    // the flag, so as long as we \"peek ahead\", there's no need to\n    // set them to begin with.\n    if (interruptible$1(newRuntimeFlags) && this.isInterrupted()) {\n      return exitFailCause(this.getInterruptedCause());\n    } else {\n      // Impossible to short circuit, so record the changes\n      this.patchRuntimeFlags(this._runtimeFlags, updateFlags);\n      if (op.i1) {\n        // Since we updated the flags, we need to revert them\n        const revertFlags = diff(newRuntimeFlags, oldRuntimeFlags);\n        this.pushStack(new RevertFlags(revertFlags, op));\n        return op.i1(oldRuntimeFlags);\n      } else {\n        return exitUnit;\n      }\n    }\n  }\n  [OP_ON_SUCCESS](op) {\n    this.pushStack(op);\n    return op.i0;\n  }\n  [\"OnStep\"](op) {\n    this.pushStack(op);\n    return op.i0;\n  }\n  [OP_ON_FAILURE](op) {\n    this.pushStack(op);\n    return op.i0;\n  }\n  [OP_ON_SUCCESS_AND_FAILURE](op) {\n    this.pushStack(op);\n    return op.i0;\n  }\n  [OP_ASYNC](op) {\n    this._asyncBlockingOn = op.i1;\n    this.initiateAsync(this._runtimeFlags, op.i0);\n    throw op;\n  }\n  [OP_YIELD](op) {\n    this.isYielding = false;\n    throw op;\n  }\n  [OP_WHILE](op) {\n    const check = op.i0;\n    const body = op.i1;\n    if (check()) {\n      this.pushStack(op);\n      return body();\n    } else {\n      return exitUnit;\n    }\n  }\n  [OP_COMMIT](op) {\n    return op.commit();\n  }\n\n  /**\n   * The main run-loop for evaluating effects.\n   *\n   * **NOTE**: This method must be invoked by the fiber itself.\n   */\n  runLoop(effect0) {\n    let cur = effect0;\n    this.currentOpCount = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      if ((this._runtimeFlags & OpSupervision) !== 0) {\n        this._supervisor.onEffect(this, cur);\n      }\n      if (this._queue.length > 0) {\n        cur = this.drainQueueWhileRunning(this._runtimeFlags, cur);\n      }\n      if (!this.isYielding) {\n        this.currentOpCount += 1;\n        const shouldYield = this._scheduler.shouldYield(this);\n        if (shouldYield !== false) {\n          this.isYielding = true;\n          this.currentOpCount = 0;\n          const oldCur = cur;\n          cur = flatMap$1(yieldNow$1({\n            priority: shouldYield\n          }), () => oldCur);\n        }\n      }\n      try {\n        if (!(\"_op\" in cur) || !(cur._op in this)) {\n          console.log(cur);\n          // @ts-expect-error\n          absurd(cur);\n        }\n\n        // @ts-expect-error\n        cur = this._tracer.context(() => {\n          if (moduleVersion !== cur[EffectTypeId]._V) {\n            return dieMessage(`Cannot execute an Effect versioned ${cur[EffectTypeId]._V} with a Runtime of version ${moduleVersion}`);\n          }\n          // @ts-expect-error\n          return this[cur._op](cur);\n        }, this);\n      } catch (e) {\n        if (isEffect(e)) {\n          if (e._op === OP_YIELD || e._op === OP_ASYNC) {\n            throw e;\n          }\n          if (e._op === OP_SUCCESS || e._op === OP_FAILURE) {\n            return e;\n          }\n        } else {\n          if (isEffectError(e)) {\n            cur = exitFailCause(e.cause);\n          } else if (isInterruptedException(e)) {\n            cur = exitFailCause(sequential$1(die(e), interrupt(none$2)));\n          } else {\n            cur = exitFailCause(die(e));\n          }\n        }\n      }\n    }\n  }\n  run = () => {\n    this.drainQueueOnCurrentThread();\n  };\n}\n\n// circular with Logger\n\n/** @internal */\nconst currentMinimumLogLevel = /*#__PURE__*/globalValue(\"effect/FiberRef/currentMinimumLogLevel\", () => fiberRefUnsafeMake(fromLiteral(\"Info\")));\n\n/** @internal */\nconst getConsole = refs => {\n  const defaultServicesValue = getOrDefault(refs, currentServices);\n  const cnsl = get$1(defaultServicesValue, consoleTag);\n  return cnsl.unsafe;\n};\n\n/** @internal */\nconst defaultLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/defaultLogger\"), () => makeLogger(options => {\n  const formatted = stringLogger.log(options);\n  getConsole(options.context).log(formatted);\n}));\n\n/** @internal */\nconst logFmtLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/logFmtLogger\"), () => makeLogger(options => {\n  const formatted = logfmtLogger.log(options);\n  getConsole(options.context).log(formatted);\n}));\n\n/** @internal */\nconst tracerLogger = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/Logger/tracerLogger\"), () => makeLogger(({\n  annotations,\n  cause,\n  context,\n  fiberId,\n  logLevel,\n  message\n}) => {\n  const span = flatMap(get(context, currentContext), getOption(spanTag));\n  const clockService = map(get(context, currentServices), _ => get$1(_, clockTag));\n  if (span._tag === \"None\" || span.value._tag === \"ExternalSpan\" || clockService._tag === \"None\") {\n    return;\n  }\n  const attributes = Object.fromEntries(map$1(annotations, value => serializeUnknown(value)));\n  attributes[\"effect.fiberId\"] = threadName(fiberId);\n  attributes[\"effect.logLevel\"] = logLevel.label;\n  if (cause !== null && cause._tag !== \"Empty\") {\n    attributes[\"effect.cause\"] = pretty(cause);\n  }\n  span.value.event(String(message), clockService.value.unsafeCurrentTimeNanos(), attributes);\n}));\n\n/** @internal */\nconst currentLoggers = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentLoggers\"), () => fiberRefUnsafeMakeHashSet(make(defaultLogger, tracerLogger)));\n\n// circular with Effect\n\n/* @internal */\nconst acquireRelease = /*#__PURE__*/dual(args => isEffect(args[0]), (acquire, release) => {\n  return uninterruptible(tap(acquire, a => addFinalizer(exit => release(a, exit))));\n});\n\n/* @internal */\nconst acquireReleaseInterruptible = /*#__PURE__*/dual(args => isEffect(args[0]), (acquire, release) => {\n  return ensuring(acquire, addFinalizer(exit => release(exit)));\n});\n\n/* @internal */\nconst addFinalizer = finalizer => withFiberRuntime(runtime => {\n  const acquireRefs = runtime.getFiberRefs();\n  const acquireFlags = runtime._runtimeFlags;\n  return flatMap$1(scope, scope => scopeAddFinalizerExit(scope, exit => withFiberRuntime(runtimeFinalizer => {\n    const preRefs = runtimeFinalizer.getFiberRefs();\n    const preFlags = runtimeFinalizer._runtimeFlags;\n    const patchRefs = diff$1(preRefs, acquireRefs);\n    const patchFlags = diff(preFlags, acquireFlags);\n    const inverseRefs = diff$1(acquireRefs, preRefs);\n    runtimeFinalizer.setFiberRefs(patch$1(patchRefs, runtimeFinalizer.id(), acquireRefs));\n    return ensuring(withRuntimeFlags(finalizer(exit), patchFlags), sync(() => {\n      runtimeFinalizer.setFiberRefs(patch$1(inverseRefs, runtimeFinalizer.id(), runtimeFinalizer.getFiberRefs()));\n    }));\n  })));\n});\n\n/* @internal */\nconst daemonChildren = self => {\n  const forkScope = fiberRefLocally(currentForkScopeOverride, some(globalScope));\n  return forkScope(self);\n};\n\n/** @internal */\nconst _existsParFound = /*#__PURE__*/Symbol.for(\"effect/Effect/existsPar/found\");\n\n/* @internal */\nconst exists = /*#__PURE__*/dual(args => isIterable(args[0]), (elements, f, options) => matchSimple(options, () => suspend(() => existsLoop(elements[Symbol.iterator](), 0, f)), () => matchEffect(forEachOptions(elements, (a, i) => if_(f(a, i), {\n  onTrue: fail(_existsParFound),\n  onFalse: unit\n}), options), {\n  onFailure: e => e === _existsParFound ? succeed(true) : fail(e),\n  onSuccess: () => succeed(false)\n})));\nconst existsLoop = (iterator, index, f) => {\n  const next = iterator.next();\n  if (next.done) {\n    return succeed(false);\n  }\n  return pipe(flatMap$1(f(next.value, index), b => b ? succeed(b) : existsLoop(iterator, index + 1, f)));\n};\n\n/* @internal */\nconst filter = /*#__PURE__*/dual(args => isIterable(args[0]), (elements, f, options) => {\n  const predicate = options?.negate ? (a, i) => map$2(f(a, i), not) : f;\n  return matchSimple(options, () => suspend(() => fromIterable(elements).reduceRight((effect, a, i) => zipWith(effect, suspend(() => predicate(a, i)), (list, b) => b ? [a, ...list] : list), sync(() => new Array()))), () => map$2(forEachOptions(elements, (a, i) => map$2(predicate(a, i), b => b ? some(a) : none()), options), compact));\n});\n\n// === all\n\nconst allResolveInput = input => {\n  if (Array.isArray(input) || isIterable(input)) {\n    return [input, none()];\n  }\n  const keys = Object.keys(input);\n  const size = keys.length;\n  return [keys.map(k => input[k]), some(values => {\n    const res = {};\n    for (let i = 0; i < size; i++) {\n      res[keys[i]] = values[i];\n    }\n    return res;\n  })];\n};\nconst allValidate = (effects, reconcile, options) => {\n  const eitherEffects = [];\n  for (const effect of effects) {\n    eitherEffects.push(either(effect));\n  }\n  return flatMap$1(forEachOptions(eitherEffects, identity, {\n    concurrency: options?.concurrency,\n    batching: options?.batching\n  }), eithers => {\n    const none$1 = none();\n    const size = eithers.length;\n    const errors = new Array(size);\n    const successes = new Array(size);\n    let errored = false;\n    for (let i = 0; i < size; i++) {\n      const either = eithers[i];\n      if (either._tag === \"Left\") {\n        errors[i] = some(either.left);\n        errored = true;\n      } else {\n        successes[i] = either.right;\n        errors[i] = none$1;\n      }\n    }\n    if (errored) {\n      return reconcile._tag === \"Some\" ? fail(reconcile.value(errors)) : fail(errors);\n    } else if (options?.discard) {\n      return unit;\n    }\n    return reconcile._tag === \"Some\" ? succeed(reconcile.value(successes)) : succeed(successes);\n  });\n};\nconst allEither = (effects, reconcile, options) => {\n  const eitherEffects = [];\n  for (const effect of effects) {\n    eitherEffects.push(either(effect));\n  }\n  if (options?.discard) {\n    return forEachOptions(eitherEffects, identity, {\n      concurrency: options?.concurrency,\n      batching: options?.batching,\n      discard: true\n    });\n  }\n  return map$2(forEachOptions(eitherEffects, identity, {\n    concurrency: options?.concurrency,\n    batching: options?.batching\n  }), eithers => reconcile._tag === \"Some\" ? reconcile.value(eithers) : eithers);\n};\n\n/* @internal */\nconst all = (arg, options) => {\n  const [effects, reconcile] = allResolveInput(arg);\n  if (options?.mode === \"validate\") {\n    return allValidate(effects, reconcile, options);\n  } else if (options?.mode === \"either\") {\n    return allEither(effects, reconcile, options);\n  }\n  return reconcile._tag === \"Some\" ? map$2(forEachOptions(effects, identity, options), reconcile.value) : forEachOptions(effects, identity, options);\n};\n\n/* @internal */\nconst allWith = options => arg => all(arg, options);\n\n/* @internal */\nconst allSuccesses = (elements, options) => map$2(all(fromIterable(elements).map(exit), options), filterMap(exit => exitIsSuccess(exit) ? some(exit.i0) : none()));\n\n/* @internal */\nconst replicate = /*#__PURE__*/dual(2, (self, n) => Array.from({\n  length: n\n}, () => self));\n\n/* @internal */\nconst replicateEffect = /*#__PURE__*/dual(args => isEffect(args[0]), (self, n, options) => all(replicate(self, n), options));\n\n// @ts-expect-error\nconst forEachOptions = /*#__PURE__*/dual(args => isIterable(args[0]), (self, f, options) => withFiberRuntime(r => {\n  const requestBatchingEnabled = options?.batching === true || options?.batching === \"inherit\" && r.getFiberRef(currentRequestBatching);\n  if (options?.discard) {\n    return match$1(options, () => finalizersMask(sequential)(restore => requestBatchingEnabled ? forEachBatchedDiscard(self, (a, i) => restore(f(a, i))) : forEachSequentialDiscard(self, (a, i) => restore(f(a, i)))), () => finalizersMask(parallel)(restore => forEachParUnboundedDiscard(self, (a, i) => restore(f(a, i)), requestBatchingEnabled)), n => finalizersMask(parallelN(n))(restore => forEachParNDiscard(self, n, (a, i) => restore(f(a, i)), requestBatchingEnabled)));\n  }\n  return match$1(options, () => finalizersMask(sequential)(restore => requestBatchingEnabled ? forEachParN(self, 1, (a, i) => restore(f(a, i)), true) : forEachSequential(self, (a, i) => restore(f(a, i)))), () => finalizersMask(parallel)(restore => forEachParUnbounded(self, (a, i) => restore(f(a, i)), requestBatchingEnabled)), n => finalizersMask(parallelN(n))(restore => forEachParN(self, n, (a, i) => restore(f(a, i)), requestBatchingEnabled)));\n}));\n\n/* @internal */\nconst forEachParUnbounded = (self, f, batching) => suspend(() => {\n  const as = fromIterable(self);\n  const array = new Array(as.length);\n  const fn = (a, i) => flatMap$1(f(a, i), b => sync(() => array[i] = b));\n  return zipRight(forEachParUnboundedDiscard(as, fn, batching), succeed(array));\n});\nconst forEachBatchedDiscard = (self, f) => suspend(() => {\n  const as = fromIterable(self);\n  const size = as.length;\n  if (size === 0) {\n    return unit;\n  } else if (size === 1) {\n    return asUnit(f(as[0], 0));\n  }\n  const effects = as.map(f);\n  const blocked$1 = new Array();\n  const loop = i => i === effects.length ? suspend(() => {\n    if (blocked$1.length > 0) {\n      const requests = blocked$1.map(b => b.i0).reduce(par);\n      return blocked(requests, forEachBatchedDiscard(blocked$1.map(b => b.i1), identity));\n    }\n    return unit;\n  }) : flatMapStep(effects[i], s => {\n    if (s._op === \"Blocked\") {\n      blocked$1.push(s);\n      return loop(i + 1);\n    } else if (s._op === \"Failure\") {\n      return suspend(() => {\n        if (blocked$1.length > 0) {\n          const requests = blocked$1.map(b => b.i0).reduce(par);\n          return blocked(requests, flatMap$1(forEachBatchedDiscard(blocked$1.map(b => b.i1), identity), () => s));\n        }\n        return unit;\n      });\n    } else {\n      return loop(i + 1);\n    }\n  });\n  return loop(0);\n});\n\n/* @internal */\nconst forEachParUnboundedDiscard = (self, f, batching) => suspend(() => {\n  const as = fromIterable(self);\n  const size = as.length;\n  if (size === 0) {\n    return unit;\n  } else if (size === 1) {\n    return asUnit(f(as[0], 0));\n  }\n  return uninterruptibleMask(restore => {\n    const deferred = deferredUnsafeMake(none$2);\n    let ref = 0;\n    const residual = [];\n    const joinOrder = [];\n    const process = transplant(graft => forEachSequential(as, (a, i) => pipe(graft(pipe(suspend(() => restore((batching ? step : exit)(f(a, i)))), flatMap$1(exit => {\n      switch (exit._op) {\n        case \"Failure\":\n          {\n            if (residual.length > 0) {\n              const requests = residual.map(blocked => blocked.i0).reduce(par);\n              const _continue = forEachParUnboundedDiscard(residual, blocked => blocked.i1, batching);\n              return blocked(requests, matchCauseEffect(_continue, {\n                onFailure: cause => zipRight(deferredFail(deferred, void 0), failCause(parallel$1(cause, exit.cause))),\n                onSuccess: () => zipRight(deferredFail(deferred, void 0), failCause(exit.cause))\n              }));\n            }\n            return zipRight(deferredFail(deferred, void 0), failCause(exit.cause));\n          }\n        default:\n          {\n            if (exit._op === \"Blocked\") {\n              residual.push(exit);\n            }\n            if (ref + 1 === size) {\n              if (residual.length > 0) {\n                const requests = residual.map(blocked => blocked.i0).reduce(par);\n                const _continue = forEachParUnboundedDiscard(residual, blocked => blocked.i1, batching);\n                return deferredSucceed(deferred, blocked(requests, _continue));\n              } else {\n                deferredUnsafeDone(deferred, exitSucceed(exitUnit));\n              }\n            } else {\n              ref = ref + 1;\n            }\n            return unit;\n          }\n      }\n    }))), forkDaemon, map$2(fiber => {\n      fiber.addObserver(() => {\n        joinOrder.push(fiber);\n      });\n      return fiber;\n    }))));\n    return flatMap$1(process, fibers => matchCauseEffect(restore(deferredAwait(deferred)), {\n      onFailure: cause => flatMap$1(forEachParUnbounded(fibers, interruptFiber, batching), exits => {\n        const exit = exitCollectAll(exits, {\n          parallel: true\n        });\n        if (exit._tag === \"Some\" && exitIsFailure(exit.value)) {\n          return failCause(parallel$1(stripFailures(cause), exit.value.i0));\n        } else {\n          return failCause(stripFailures(cause));\n        }\n      }),\n      onSuccess: rest => flatMap$1(rest, () => forEachSequentialDiscard(joinOrder, f => f.inheritAll()))\n    }));\n  });\n});\n\n/* @internal */\nconst forEachParN = (self, n, f, batching) => suspend(() => {\n  const as = fromIterable(self);\n  const array = new Array(as.length);\n  const fn = (a, i) => map$2(f(a, i), b => array[i] = b);\n  return zipRight(forEachParNDiscard(as, n, fn, batching), succeed(array));\n});\n\n/* @internal */\nconst forEachParNDiscard = (self, n, f, batching) => suspend(() => {\n  let i = 0;\n  const iterator = self[Symbol.iterator]();\n  const residual = [];\n  const worker = flatMap$1(sync(() => iterator.next()), next => next.done ? unit : flatMap$1((batching ? step : exit)(asUnit(f(next.value, i++))), res => {\n    switch (res._op) {\n      case \"Blocked\":\n        {\n          residual.push(res);\n          return worker;\n        }\n      case \"Failure\":\n        {\n          return res;\n        }\n      case \"Success\":\n        return worker;\n    }\n  }));\n  const effects = [];\n  for (let i = 0; i < n; i++) {\n    effects.push(worker);\n  }\n  return flatMap$1(exit(forEachParUnboundedDiscard(effects, identity, batching)), exit => {\n    if (residual.length === 0) {\n      return exit;\n    }\n    const requests = residual.map(blocked => blocked.i0).reduce(par);\n    const _continue = forEachParNDiscard(residual, n, blocked => blocked.i1, batching);\n    if (exit._tag === \"Failure\") {\n      return blocked(requests, matchCauseEffect(_continue, {\n        onFailure: cause => exitFailCause(parallel$1(exit.cause, cause)),\n        onSuccess: () => exit\n      }));\n    }\n    return blocked(requests, _continue);\n  });\n});\n\n/* @internal */\nconst fork = self => withFiberRuntime((state, status) => succeed(unsafeFork(self, state, status.runtimeFlags)));\n\n/* @internal */\nconst forkDaemon = self => forkWithScopeOverride(self, globalScope);\n\n/* @internal */\nconst forkWithErrorHandler = /*#__PURE__*/dual(2, (self, handler) => fork(onError(self, cause => {\n  const either = failureOrCause(cause);\n  switch (either._tag) {\n    case \"Left\":\n      {\n        return handler(either.left);\n      }\n    case \"Right\":\n      {\n        return failCause(either.right);\n      }\n  }\n})));\n\n/** @internal */\nconst unsafeFork = (effect, parentFiber, parentRuntimeFlags, overrideScope = null) => {\n  const childFiber = unsafeMakeChildFiber(effect, parentFiber, parentRuntimeFlags, overrideScope);\n  childFiber.resume(effect);\n  return childFiber;\n};\n\n/** @internal */\nconst unsafeMakeChildFiber = (effect, parentFiber, parentRuntimeFlags, overrideScope = null) => {\n  const childId = unsafeMake$1();\n  const parentFiberRefs = parentFiber.getFiberRefs();\n  const childFiberRefs = forkAs(parentFiberRefs, childId);\n  const childFiber = new FiberRuntime(childId, childFiberRefs, parentRuntimeFlags);\n  const childContext = getOrDefault$1(childFiberRefs, currentContext);\n  const supervisor = childFiber._supervisor;\n  supervisor.onStart(childContext, effect, some(parentFiber), childFiber);\n  childFiber.addObserver(exit => supervisor.onEnd(exit, childFiber));\n  const parentScope = overrideScope !== null ? overrideScope : pipe(parentFiber.getFiberRef(currentForkScopeOverride), getOrElse(() => parentFiber.scope()));\n  parentScope.add(parentRuntimeFlags, childFiber);\n  return childFiber;\n};\n\n/* @internal */\nconst forkWithScopeOverride = (self, scopeOverride) => withFiberRuntime((parentFiber, parentStatus) => succeed(unsafeFork(self, parentFiber, parentStatus.runtimeFlags, scopeOverride)));\n\n/* @internal */\nconst mergeAll = /*#__PURE__*/dual(args => isIterable(args[0]), (elements, zero, f, options) => matchSimple(options, () => fromIterable(elements).reduce((acc, a, i) => zipWith(acc, a, (acc, a) => f(acc, a, i)), succeed(zero)), () => flatMap$1(make$1(zero), acc => flatMap$1(forEachOptions(elements, (effect, i) => flatMap$1(effect, a => update(acc, b => f(b, a, i))), options), () => get$2(acc)))));\n\n/* @internal */\nconst partition = /*#__PURE__*/dual(args => isIterable(args[0]), (elements, f, options) => pipe(forEachOptions(elements, (a, i) => either(f(a, i)), options), map$2(chunk => partitionMap(chunk, identity))));\n\n/* @internal */\nconst validateAll = /*#__PURE__*/dual(args => isIterable(args[0]), (elements, f, options) => flatMap$1(partition(elements, f, {\n  concurrency: options?.concurrency,\n  batching: options?.batching\n}), ([es, bs]) => es.length === 0 ? options?.discard ? unit : succeed(bs) : fail(es)));\n\n/* @internal */\nconst raceAll = all => {\n  const list = fromIterable$1(all);\n  if (!isNonEmpty(list)) {\n    return dieSync(() => IllegalArgumentException(`Received an empty collection of effects`));\n  }\n  const self = headNonEmpty(list);\n  const effects = tailNonEmpty(list);\n  const inheritAll$1 = res => pipe(inheritAll(res[1]), as(res[0]));\n  return pipe(deferredMake(), flatMap$1(done => pipe(make$1(effects.length), flatMap$1(fails => uninterruptibleMask(restore => pipe(fork(interruptible(self)), flatMap$1(head => pipe(effects, forEachSequential(effect => fork(interruptible(effect))), map$2(unsafeFromArray), map$2(tail => pipe(tail, prepend(head))), tap(fibers => pipe(fibers, reduce(unit, (effect, fiber) => pipe(effect, zipRight(pipe(_await(fiber), flatMap$1(raceAllArbiter(fibers, fiber, done, fails)), fork, asUnit)))))), flatMap$1(fibers => pipe(restore(pipe(_await$1(done), flatMap$1(inheritAll$1))), onInterrupt(() => pipe(fibers, reduce(unit, (effect, fiber) => pipe(effect, zipLeft(interruptFiber(fiber))))))))))))))));\n};\n\n/* @internal */\nconst raceAllArbiter = (fibers, winner, deferred, fails) => exit => exitMatchEffect(exit, {\n  onFailure: cause => pipe(modify(fails, fails => [fails === 0 ? pipe(deferredFailCause(deferred, cause), asUnit) : unit, fails - 1]), flatten),\n  onSuccess: value => pipe(deferredSucceed(deferred, [value, winner]), flatMap$1(set => set ? pipe(fromIterable$1(fibers), reduce(unit, (effect, fiber) => fiber === winner ? effect : pipe(effect, zipLeft(interruptFiber(fiber))))) : unit))\n});\n\n/* @internal */\nconst reduceEffect = /*#__PURE__*/dual(args => isIterable(args[0]), (elements, zero, f, options) => matchSimple(options, () => fromIterable(elements).reduce((acc, a, i) => zipWith(acc, a, (acc, a) => f(acc, a, i)), zero), () => suspend(() => pipe(mergeAll([zero, ...elements], none(), (acc, elem, i) => {\n  switch (acc._tag) {\n    case \"None\":\n      {\n        return some(elem);\n      }\n    case \"Some\":\n      {\n        return some(f(acc.value, elem, i));\n      }\n  }\n}, options), map$2(option => {\n  switch (option._tag) {\n    case \"None\":\n      {\n        throw new Error(\"BUG: Effect.reduceEffect - please report an issue at https://github.com/Effect-TS/io/issues\");\n      }\n    case \"Some\":\n      {\n        return option.value;\n      }\n  }\n})))));\n\n/* @internal */\nconst parallelFinalizers = self => contextWithEffect(context => match(getOption(context, scopeTag), {\n  onNone: () => self,\n  onSome: scope => {\n    switch (scope.strategy._tag) {\n      case \"Parallel\":\n        return self;\n      case \"Sequential\":\n      case \"ParallelN\":\n        return flatMap$1(scopeFork(scope, parallel), inner => scopeExtend(self, inner));\n    }\n  }\n}));\n\n/* @internal */\nconst parallelNFinalizers = parallelism => self => contextWithEffect(context => match(getOption(context, scopeTag), {\n  onNone: () => self,\n  onSome: scope => {\n    if (scope.strategy._tag === \"ParallelN\" && scope.strategy.parallelism === parallelism) {\n      return self;\n    }\n    return flatMap$1(scopeFork(scope, parallelN(parallelism)), inner => scopeExtend(self, inner));\n  }\n}));\n\n/* @internal */\nconst finalizersMask = strategy => self => contextWithEffect(context => match(getOption(context, scopeTag), {\n  onNone: () => self(identity),\n  onSome: scope => {\n    const patch = strategy._tag === \"Parallel\" ? parallelFinalizers : strategy._tag === \"Sequential\" ? sequentialFinalizers : parallelNFinalizers(strategy.parallelism);\n    switch (scope.strategy._tag) {\n      case \"Parallel\":\n        return patch(self(parallelFinalizers));\n      case \"Sequential\":\n        return patch(self(sequentialFinalizers));\n      case \"ParallelN\":\n        return patch(self(parallelNFinalizers(scope.strategy.parallelism)));\n    }\n  }\n}));\n\n/* @internal */\nconst scopeWith = f => flatMap$1(scopeTag, f);\n\n/* @internal */\nconst scopedEffect = effect => flatMap$1(scopeMake(), scope => scopeUse(scope)(effect));\n\n/* @internal */\nconst sequentialFinalizers = self => contextWithEffect(context => match(getOption(context, scopeTag), {\n  onNone: () => self,\n  onSome: scope => {\n    switch (scope.strategy._tag) {\n      case \"Sequential\":\n        return self;\n      case \"Parallel\":\n      case \"ParallelN\":\n        return flatMap$1(scopeFork(scope, sequential), inner => scopeExtend(self, inner));\n    }\n  }\n}));\n\n/* @internal */\nconst tagMetricsScoped = (key, value) => labelMetricsScoped([make$3(key, value)]);\n\n/* @internal */\nconst labelMetricsScoped = labels => labelMetricsScopedSet(fromIterable$2(labels));\n\n/* @internal */\nconst labelMetricsScopedSet = labels => fiberRefLocallyScopedWith(currentMetricLabels, set => pipe(set, union(labels)));\n\n/* @internal */\nconst using = /*#__PURE__*/dual(2, (self, use) => acquireUseRelease(scopeMake(), scope => flatMap$1(scopeExtend(self, scope), use), (scope, exit) => scopeClose(scope, exit)));\n\n/** @internal */\nconst validate = /*#__PURE__*/dual(args => isEffect(args[1]), (self, that, options) => validateWith(self, that, (a, b) => [a, b], options));\n\n/** @internal */\nconst validateWith = /*#__PURE__*/dual(args => isEffect(args[1]), (self, that, f, options) => flatten(zipWithOptions(exit(self), exit(that), (ea, eb) => exitZipWith(ea, eb, {\n  onSuccess: f,\n  onFailure: (ca, cb) => options?.concurrent ? parallel$1(ca, cb) : sequential$1(ca, cb)\n}), options)));\n\n/* @internal */\nconst validateFirst = /*#__PURE__*/dual(args => isIterable(args[0]), (elements, f, options) => flip(forEachOptions(elements, (a, i) => flip(f(a, i)), options)));\n\n/* @internal */\nconst withClockScoped = value => fiberRefLocallyScopedWith(currentServices, add(clockTag, value));\n\n/* @internal */\nconst withConfigProviderScoped = value => fiberRefLocallyScopedWith(currentServices, add(configProviderTag, value));\n\n/* @internal */\nconst withEarlyRelease = self => scopeWith(parent => flatMap$1(scopeFork(parent, sequential$2), child => pipe(self, scopeExtend(child), map$2(value => [fiberIdWith(fiberId => scopeClose(child, exitInterrupt(fiberId))), value]))));\n\n/** @internal */\nconst zipOptions = /*#__PURE__*/dual(args => isEffect(args[1]), (self, that, options) => zipWithOptions(self, that, (a, b) => [a, b], options));\n\n/** @internal */\nconst zipLeftOptions = /*#__PURE__*/dual(args => isEffect(args[1]), (self, that, options) => zipWithOptions(self, that, (a, _) => a, options));\n\n/** @internal */\nconst zipRightOptions = /*#__PURE__*/dual(args => isEffect(args[1]), (self, that, options) => zipWithOptions(self, that, (_, b) => b, options));\n\n/** @internal */\nconst zipWithOptions = /*#__PURE__*/dual(args => isEffect(args[1]), (self, that, f, options) => map$2(all([self, that], {\n  concurrency: options?.concurrent ? 2 : 1,\n  batching: options?.batching\n}), ([a, a2]) => f(a, a2)));\n\n/* @internal */\nconst withRuntimeFlagsScoped = update => {\n  if (update === empty) {\n    return unit;\n  }\n  return pipe(runtimeFlags, flatMap$1(runtimeFlags => {\n    const updatedRuntimeFlags = patch(runtimeFlags, update);\n    const revertRuntimeFlags = diff(updatedRuntimeFlags, runtimeFlags);\n    return pipe(updateRuntimeFlags(update), zipRight(addFinalizer(() => updateRuntimeFlags(revertRuntimeFlags))), asUnit);\n  }), uninterruptible);\n};\n\n// circular with ReleaseMap\n\n/* @internal */\nconst releaseMapReleaseAll = (strategy, exit$1) => self => suspend(() => {\n  switch (self.state._tag) {\n    case \"Exited\":\n      {\n        return unit;\n      }\n    case \"Running\":\n      {\n        const finalizersMap = self.state.finalizers;\n        const update = self.state.update;\n        const finalizers = Array.from(finalizersMap.keys()).sort((a, b) => b - a).map(key => finalizersMap.get(key));\n        self.state = {\n          _tag: \"Exited\",\n          nextKey: self.state.nextKey,\n          exit: exit$1,\n          update\n        };\n        return isSequential(strategy) ? pipe(finalizers, forEachSequential(fin => exit(update(fin)(exit$1))), flatMap$1(results => pipe(exitCollectAll(results), map(exitAsUnit), getOrElse(() => exitUnit)))) : isParallel(strategy) ? pipe(forEachParUnbounded(finalizers, fin => exit(update(fin)(exit$1)), false), flatMap$1(results => pipe(exitCollectAll(results, {\n          parallel: true\n        }), map(exitAsUnit), getOrElse(() => exitUnit)))) : pipe(forEachParN(finalizers, strategy.parallelism, fin => exit(update(fin)(exit$1)), false), flatMap$1(results => pipe(exitCollectAll(results, {\n          parallel: true\n        }), map(exitAsUnit), getOrElse(() => exitUnit))));\n      }\n  }\n});\n\n// circular with Scope\n\n/** @internal */\nconst scopeTag = /*#__PURE__*/Tag(ScopeTypeId);\n\n/* @internal */\nconst scope = scopeTag;\n\n/* @internal */\nconst scopeMake = (strategy = sequential$2) => map$2(releaseMapMake, rm => ({\n  [ScopeTypeId]: ScopeTypeId,\n  [CloseableScopeTypeId]: CloseableScopeTypeId,\n  strategy,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  fork: strategy => uninterruptible(pipe(scopeMake(strategy), flatMap$1(scope => pipe(releaseMapAdd(rm, exit => scopeClose(scope, exit)), tap(fin => scopeAddFinalizerExit(scope, fin)), as(scope))))),\n  close: exit => asUnit(releaseMapReleaseAll(strategy, exit)(rm)),\n  addFinalizer: fin => asUnit(releaseMapAdd(fin)(rm))\n}));\n\n/* @internal */\nconst scopeExtend = /*#__PURE__*/dual(2, (effect, scope) => mapInputContext(effect,\n// @ts-expect-error\nmerge(make$2(scopeTag, scope))));\n\n/* @internal */\nconst scopeUse = /*#__PURE__*/dual(2, (effect, scope) => pipe(effect, scopeExtend(scope), onExit(exit => scope.close(exit))));\n\n// circular with Supervisor\n\n/** @internal */\nconst fiberRefUnsafeMakeSupervisor = initial => fiberRefUnsafeMakePatch(initial, {\n  differ: differ,\n  fork: empty$1\n});\n\n// circular with FiberRef\n\n/* @internal */\nconst fiberRefLocallyScoped = /*#__PURE__*/dual(2, (self, value) => asUnit(acquireRelease(flatMap$1(fiberRefGet(self), oldValue => as(fiberRefSet(self, value), oldValue)), oldValue => fiberRefSet(self, oldValue))));\n\n/* @internal */\nconst fiberRefLocallyScopedWith = /*#__PURE__*/dual(2, (self, f) => fiberRefGetWith(self, a => fiberRefLocallyScoped(self, f(a))));\n\n/* @internal */\nconst fiberRefMake = (initial, options) => fiberRefMakeWith(() => fiberRefUnsafeMake(initial, options));\n\n/* @internal */\nconst fiberRefMakeWith = ref => acquireRelease(tap(sync(ref), ref => fiberRefUpdate(ref, identity)), fiberRef => fiberRefDelete(fiberRef));\n\n/* @internal */\nconst fiberRefMakeContext = initial => fiberRefMakeWith(() => fiberRefUnsafeMakeContext(initial));\n\n/* @internal */\nconst fiberRefMakeRuntimeFlags = initial => fiberRefMakeWith(() => fiberRefUnsafeMakeRuntimeFlags(initial));\n\n/** @internal */\nconst currentRuntimeFlags = /*#__PURE__*/fiberRefUnsafeMakeRuntimeFlags(none$3);\n\n/** @internal */\nconst currentSupervisor = /*#__PURE__*/fiberRefUnsafeMakeSupervisor(none$1);\n\n// circular with Fiber\n\n/* @internal */\nconst fiberAwaitAll = fibers => asUnit(_await(fiberAll(fibers)));\n\n/** @internal */\nconst fiberAll = fibers => ({\n  [FiberTypeId]: fiberVariance,\n  id: () => fromIterable(fibers).reduce((id, fiber) => combine(id, fiber.id()), none$2),\n  await: () => exit(forEachParUnbounded(fibers, fiber => flatten(fiber.await()), false)),\n  children: () => map$2(forEachParUnbounded(fibers, fiber => fiber.children(), false), flatten$1),\n  inheritAll: () => forEachSequentialDiscard(fibers, fiber => fiber.inheritAll()),\n  poll: () => map$2(forEachSequential(fibers, fiber => fiber.poll()), reduceRight(some(exitSucceed(new Array())), (optionB, optionA) => {\n    switch (optionA._tag) {\n      case \"None\":\n        {\n          return none();\n        }\n      case \"Some\":\n        {\n          switch (optionB._tag) {\n            case \"None\":\n              {\n                return none();\n              }\n            case \"Some\":\n              {\n                return some(exitZipWith(optionA.value, optionB.value, {\n                  onSuccess: (a, chunk) => [a, ...chunk],\n                  onFailure: parallel$1\n                }));\n              }\n          }\n        }\n    }\n  })),\n  interruptAsFork: fiberId => forEachSequentialDiscard(fibers, fiber => fiber.interruptAsFork(fiberId)),\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n});\n\n/* @internal */\nconst fiberInterruptFork = self => asUnit(forkDaemon(interruptFiber(self)));\n\n/* @internal */\nconst fiberJoinAll = fibers => asUnit(join(fiberAll(fibers)));\n\n/* @internal */\nconst fiberScoped = self => acquireRelease(succeed(self), interruptFiber);\n\n//\n// circular race\n//\n\n/** @internal */\nconst raceWith = /*#__PURE__*/dual(3, (self, other, options) => raceFibersWith(self, other, {\n  onSelfWin: (winner, loser) => flatMap$1(winner.await(), exit => {\n    switch (exit._tag) {\n      case OP_SUCCESS:\n        {\n          return flatMap$1(winner.inheritAll(), () => options.onSelfDone(exit, loser));\n        }\n      case OP_FAILURE:\n        {\n          return options.onSelfDone(exit, loser);\n        }\n    }\n  }),\n  onOtherWin: (winner, loser) => flatMap$1(winner.await(), exit => {\n    switch (exit._tag) {\n      case OP_SUCCESS:\n        {\n          return flatMap$1(winner.inheritAll(), () => options.onOtherDone(exit, loser));\n        }\n      case OP_FAILURE:\n        {\n          return options.onOtherDone(exit, loser);\n        }\n    }\n  })\n}));\n\n/** @internal */\nconst disconnect = self => uninterruptibleMask(restore => fiberIdWith(fiberId => flatMap$1(forkDaemon(restore(self)), fiber => pipe(restore(join(fiber)), onInterrupt(() => pipe(fiber, interruptAsFork(fiberId)))))));\n\n/** @internal */\nconst race = /*#__PURE__*/dual(2, (self, that) => fiberIdWith(parentFiberId => raceWith(self, that, {\n  onSelfDone: (exit, right) => exitMatchEffect(exit, {\n    onFailure: cause => pipe(join(right), mapErrorCause(cause2 => parallel$1(cause, cause2))),\n    onSuccess: value => pipe(right, interruptAsFiber(parentFiberId), as(value))\n  }),\n  onOtherDone: (exit, left) => exitMatchEffect(exit, {\n    onFailure: cause => pipe(join(left), mapErrorCause(cause2 => parallel$1(cause2, cause))),\n    onSuccess: value => pipe(left, interruptAsFiber(parentFiberId), as(value))\n  })\n})));\n\n/** @internal */\nconst raceFibersWith = /*#__PURE__*/dual(3, (self, other, options) => withFiberRuntime((parentFiber, parentStatus) => {\n  const parentRuntimeFlags = parentStatus.runtimeFlags;\n  const raceIndicator = make$4(true);\n  const leftFiber = unsafeMakeChildFiber(self, parentFiber, parentRuntimeFlags, options.selfScope);\n  const rightFiber = unsafeMakeChildFiber(other, parentFiber, parentRuntimeFlags, options.otherScope);\n  return async(cb => {\n    leftFiber.addObserver(() => completeRace(leftFiber, rightFiber, options.onSelfWin, raceIndicator, cb));\n    rightFiber.addObserver(() => completeRace(rightFiber, leftFiber, options.onOtherWin, raceIndicator, cb));\n    leftFiber.startFork(self);\n    rightFiber.startFork(other);\n  }, combine(leftFiber.id(), rightFiber.id()));\n}));\nconst completeRace = (winner, loser, cont, ab, cb) => {\n  if (compareAndSet(true, false)(ab)) {\n    cb(cont(winner, loser));\n  }\n};\n\n/** @internal */\nconst ensuring = /*#__PURE__*/dual(2, (self, finalizer) => uninterruptibleMask(restore => matchCauseEffect(restore(self), {\n  onFailure: cause1 => matchCauseEffect(finalizer, {\n    onFailure: cause2 => failCause(sequential$1(cause1, cause2)),\n    onSuccess: () => failCause(cause1)\n  }),\n  onSuccess: a => as(finalizer, a)\n})));\n\n/** @internal */\nconst invokeWithInterrupt = (dataSource, all) => fiberIdWith(id => flatMap$1(flatMap$1(forkDaemon(interruptible(dataSource)), processing => async(cb => {\n  const counts = all.map(_ => _.listeners.count);\n  const checkDone = () => {\n    if (counts.every(count => count === 0)) {\n      cleanup.forEach(f => f());\n      cb(interruptFiber(processing));\n    }\n  };\n  processing.addObserver(exit => {\n    cleanup.forEach(f => f());\n    cb(exit);\n  });\n  const cleanup = all.map((r, i) => {\n    const observer = count => {\n      counts[i] = count;\n      checkDone();\n    };\n    r.listeners.addObserver(observer);\n    return () => r.listeners.removeObserver(observer);\n  });\n  checkDone();\n  return sync(() => {\n    cleanup.forEach(f => f());\n  });\n})), () => suspend(() => {\n  const residual = all.flatMap(entry => {\n    if (!entry.state.completed) {\n      return [entry];\n    }\n    return [];\n  });\n  return forEachSequentialDiscard(residual, entry => complete(entry.request, exitInterrupt(id)));\n})));\n\n/** @internal */\nconst interruptWhenPossible = /*#__PURE__*/dual(2, (self, all) => fiberRefGetWith(currentRequestMap, map => suspend(() => {\n  const entries = fromIterable(all).flatMap(_ => map.has(_) ? [map.get(_)] : []);\n  return invokeWithInterrupt(self, entries);\n})));\n\n// circular Tracer\n\n/** @internal */\nconst makeSpanScoped = (name, options) => acquireRelease(makeSpan(name, options), (span, exit) => flatMap$1(currentTimeNanosTracing, endTime => sync(() => span.end(endTime, exit))));\n\n/* @internal */\nconst withTracerScoped = value => fiberRefLocallyScopedWith(currentServices, add(tracerTag, value));\n\n/** @internal */\nconst withSpanScoped = /*#__PURE__*/dual(args => typeof args[0] !== \"string\", (self, name, options) => flatMap$1(makeSpanScoped(name, options), span => provideService(self, spanTag, span)));\n\nexport { FiberRuntime, acquireRelease, acquireReleaseInterruptible, addFinalizer, all, allSuccesses, allWith, currentLoggers, currentMinimumLogLevel, currentRuntimeFlags, currentSupervisor, daemonChildren, defaultLogger, disconnect, ensuring, exists, fiberActive, fiberAll, fiberAwaitAll, fiberFailures, fiberInterruptFork, fiberJoinAll, fiberLifetimes, fiberRefLocallyScoped, fiberRefLocallyScopedWith, fiberRefMake, fiberRefMakeContext, fiberRefMakeRuntimeFlags, fiberRefMakeWith, fiberRefUnsafeMakeSupervisor, fiberScoped, fiberStarted, fiberSuccesses, filter, finalizersMask, forEachOptions, forEachParN, forEachParNDiscard, forEachParUnbounded, forEachParUnboundedDiscard, fork, forkDaemon, forkWithErrorHandler, getConsole, interruptWhenPossible, invokeWithInterrupt, labelMetricsScoped, labelMetricsScopedSet, logFmtLogger, makeSpanScoped, mergeAll, parallelFinalizers, parallelNFinalizers, partition, race, raceAll, raceFibersWith, raceWith, reduceEffect, releaseMapReleaseAll, replicate, replicateEffect, runtimeFiberVariance, scope, scopeExtend, scopeMake, scopeTag, scopeUse, scopeWith, scopedEffect, sequentialFinalizers, tagMetricsScoped, tracerLogger, unsafeFork, unsafeMakeChildFiber, using, validate, validateAll, validateFirst, validateWith, withClockScoped, withConfigProviderScoped, withEarlyRelease, withRuntimeFlagsScoped, withSpanScoped, withTracerScoped, zipLeftOptions, zipOptions, zipRightOptions, zipWithOptions };\n","import { millis } from '../../Duration/dist/effect-Duration.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { none, some } from '../../Option/dist/effect-Option.esm.js';\n\n/** @internal */\nconst IntervalSymbolKey = \"effect/ScheduleInterval\";\n\n/** @internal */\nconst IntervalTypeId = /*#__PURE__*/Symbol.for(IntervalSymbolKey);\n\n/** @internal */\nconst empty = {\n  [IntervalTypeId]: IntervalTypeId,\n  startMillis: 0,\n  endMillis: 0\n};\n\n/** @internal */\nconst make = (startMillis, endMillis) => {\n  if (startMillis > endMillis) {\n    return empty;\n  }\n  return {\n    [IntervalTypeId]: IntervalTypeId,\n    startMillis,\n    endMillis\n  };\n};\n\n/** @internal */\nconst lessThan = /*#__PURE__*/dual(2, (self, that) => min(self, that) === self);\n\n/** @internal */\nconst min = /*#__PURE__*/dual(2, (self, that) => {\n  if (self.endMillis <= that.startMillis) return self;\n  if (that.endMillis <= self.startMillis) return that;\n  if (self.startMillis < that.startMillis) return self;\n  if (that.startMillis < self.startMillis) return that;\n  if (self.endMillis <= that.endMillis) return self;\n  return that;\n});\n\n/** @internal */\nconst max = /*#__PURE__*/dual(2, (self, that) => min(self, that) === self ? that : self);\n\n/** @internal */\nconst isEmpty = self => {\n  return self.startMillis >= self.endMillis;\n};\n\n/** @internal */\nconst isNonEmpty = self => {\n  return !isEmpty(self);\n};\n\n/** @internal */\nconst intersect = /*#__PURE__*/dual(2, (self, that) => {\n  const start = Math.max(self.startMillis, that.startMillis);\n  const end = Math.min(self.endMillis, that.endMillis);\n  return make(start, end);\n});\n\n/** @internal */\nconst size = self => {\n  return millis(self.endMillis - self.startMillis);\n};\n\n/** @internal */\nconst union = /*#__PURE__*/dual(2, (self, that) => {\n  const start = Math.max(self.startMillis, that.startMillis);\n  const end = Math.min(self.endMillis, that.endMillis);\n  return start < end ? none() : some(make(start, end));\n});\n\n/** @internal */\nconst after = startMilliseconds => {\n  return make(startMilliseconds, Number.POSITIVE_INFINITY);\n};\n\n/** @internal */\nconst before = endMilliseconds => {\n  return make(Number.NEGATIVE_INFINITY, endMilliseconds);\n};\n\nexport { IntervalTypeId, after, before, empty, intersect, isEmpty, isNonEmpty, lessThan, make, max, min, size, union };\n","import { IntervalTypeId as IntervalTypeId$1, make as make$1, empty as empty$1, lessThan as lessThan$1, min as min$1, max as max$1, isEmpty as isEmpty$1, isNonEmpty as isNonEmpty$1, intersect as intersect$1, size as size$1, union as union$1, after as after$1, before as before$1 } from '../../internal/schedule/interval.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst IntervalTypeId = IntervalTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * An `Interval` represents an interval of time. Intervals can encompass all\n * time, or no time at all.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Constructs a new interval from the two specified endpoints. If the start\n * endpoint greater than the end endpoint, then a zero size interval will be\n * returned.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * An `Interval` of zero-width.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Returns `true` if this `Interval` is less than `that` interval, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category ordering\n */\nconst lessThan = lessThan$1;\n\n/**\n * Returns the minimum of two `Interval`s.\n *\n * @since 2.0.0\n * @category ordering\n */\nconst min = min$1;\n\n/**\n * Returns the maximum of two `Interval`s.\n *\n * @since 2.0.0\n * @category ordering\n */\nconst max = max$1;\n\n/**\n * Returns `true` if the specified `Interval` is empty, `false` otherwise.\n *\n * @since 2.0.0\n * @category ordering\n */\nconst isEmpty = isEmpty$1;\n\n/**\n * Returns `true` if the specified `Interval` is non-empty, `false` otherwise.\n *\n * @since 2.0.0\n * @category ordering\n */\nconst isNonEmpty = isNonEmpty$1;\n\n/**\n * Computes a new `Interval` which is the intersection of this `Interval` and\n * that `Interval`.\n *\n * @since 2.0.0\n * @category ordering\n */\nconst intersect = intersect$1;\n\n/**\n * Calculates the size of the `Interval` as the `Duration` from the start of the\n * interval to the end of the interval.\n *\n * @since 2.0.0\n * @category getters\n */\nconst size = size$1;\n\n/**\n * Computes a new `Interval` which is the union of this `Interval` and that\n * `Interval` as a `Some`, otherwise returns `None` if the two intervals cannot\n * form a union.\n *\n * @since 2.0.0\n * @category utils\n */\nconst union = union$1;\n\n/**\n * Construct an `Interval` that includes all time equal to and after the\n * specified start time.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst after = after$1;\n\n/**\n * Construct an `Interval` that includes all time equal to and before the\n * specified end time.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst before = before$1;\n\nexport { IntervalTypeId, after, before, empty, intersect, isEmpty, isNonEmpty, lessThan, make, max, min, size, union };\n","import { empty as empty$1, of, isNonEmpty as isNonEmpty$1, headNonEmpty, tailNonEmpty, prepend, isEmpty, reverse, head } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { pipe, dual } from '../../Function/dist/effect-Function.esm.js';\nimport { getOrElse } from '../../Option/dist/effect-Option.esm.js';\nimport { make as make$1, intersect as intersect$1, isEmpty as isEmpty$1, lessThan as lessThan$1, empty as empty$2 } from '../../ScheduleInterval/dist/effect-ScheduleInterval.esm.js';\n\n/** @internal */\nconst IntervalsSymbolKey = \"effect/ScheduleIntervals\";\n\n/** @internal */\nconst IntervalsTypeId = /*#__PURE__*/Symbol.for(IntervalsSymbolKey);\n\n/** @internal */\nconst make = intervals => {\n  return {\n    [IntervalsTypeId]: IntervalsTypeId,\n    intervals\n  };\n};\n/** @internal */\nconst empty = /*#__PURE__*/make( /*#__PURE__*/empty$1());\n\n/** @internal */\nconst fromIterable = intervals => Array.from(intervals).reduce((intervals, interval) => pipe(intervals, union(make(of(interval)))), empty);\n\n/** @internal */\nconst union = /*#__PURE__*/dual(2, (self, that) => {\n  if (!isNonEmpty$1(that.intervals)) {\n    return self;\n  }\n  if (!isNonEmpty$1(self.intervals)) {\n    return that;\n  }\n  if (headNonEmpty(self.intervals).startMillis < headNonEmpty(that.intervals).startMillis) {\n    return unionLoop(tailNonEmpty(self.intervals), that.intervals, headNonEmpty(self.intervals), empty$1());\n  }\n  return unionLoop(self.intervals, tailNonEmpty(that.intervals), headNonEmpty(that.intervals), empty$1());\n});\n\n/** @internal */\nconst unionLoop = (_self, _that, _interval, _acc) => {\n  let self = _self;\n  let that = _that;\n  let interval = _interval;\n  let acc = _acc;\n  while (isNonEmpty$1(self) || isNonEmpty$1(that)) {\n    if (!isNonEmpty$1(self) && isNonEmpty$1(that)) {\n      if (interval.endMillis < headNonEmpty(that).startMillis) {\n        acc = pipe(acc, prepend(interval));\n        interval = headNonEmpty(that);\n        that = tailNonEmpty(that);\n        self = empty$1();\n      } else {\n        interval = make$1(interval.startMillis, headNonEmpty(that).endMillis);\n        that = tailNonEmpty(that);\n        self = empty$1();\n      }\n    } else if (isNonEmpty$1(self) && isEmpty(that)) {\n      if (interval.endMillis < headNonEmpty(self).startMillis) {\n        acc = pipe(acc, prepend(interval));\n        interval = headNonEmpty(self);\n        that = empty$1();\n        self = tailNonEmpty(self);\n      } else {\n        interval = make$1(interval.startMillis, headNonEmpty(self).endMillis);\n        that = empty$1();\n        self = tailNonEmpty(self);\n      }\n    } else if (isNonEmpty$1(self) && isNonEmpty$1(that)) {\n      if (headNonEmpty(self).startMillis < headNonEmpty(that).startMillis) {\n        if (interval.endMillis < headNonEmpty(self).startMillis) {\n          acc = pipe(acc, prepend(interval));\n          interval = headNonEmpty(self);\n          self = tailNonEmpty(self);\n        } else {\n          interval = make$1(interval.startMillis, headNonEmpty(self).endMillis);\n          self = tailNonEmpty(self);\n        }\n      } else if (interval.endMillis < headNonEmpty(that).startMillis) {\n        acc = pipe(acc, prepend(interval));\n        interval = headNonEmpty(that);\n        that = tailNonEmpty(that);\n      } else {\n        interval = make$1(interval.startMillis, headNonEmpty(that).endMillis);\n        that = tailNonEmpty(that);\n      }\n    } else {\n      throw new Error(\"BUG: Intervals.unionLoop - please report an issue at https://github.com/Effect-TS/io/issues\");\n    }\n  }\n  return make(pipe(acc, prepend(interval), reverse));\n};\n\n/** @internal */\nconst intersect = /*#__PURE__*/dual(2, (self, that) => intersectLoop(self.intervals, that.intervals, empty$1()));\n\n/** @internal */\nconst intersectLoop = (_left, _right, _acc) => {\n  let left = _left;\n  let right = _right;\n  let acc = _acc;\n  while (isNonEmpty$1(left) && isNonEmpty$1(right)) {\n    const interval = pipe(headNonEmpty(left), intersect$1(headNonEmpty(right)));\n    const intervals = isEmpty$1(interval) ? acc : pipe(acc, prepend(interval));\n    if (pipe(headNonEmpty(left), lessThan$1(headNonEmpty(right)))) {\n      left = tailNonEmpty(left);\n    } else {\n      right = tailNonEmpty(right);\n    }\n    acc = intervals;\n  }\n  return make(reverse(acc));\n};\n\n/** @internal */\nconst start = self => {\n  return pipe(self.intervals, head, getOrElse(() => empty$2)).startMillis;\n};\n\n/** @internal */\nconst end = self => {\n  return pipe(self.intervals, head, getOrElse(() => empty$2)).endMillis;\n};\n\n/** @internal */\nconst lessThan = /*#__PURE__*/dual(2, (self, that) => start(self) < start(that));\n\n/** @internal */\nconst isNonEmpty = self => {\n  return isNonEmpty$1(self.intervals);\n};\n\n/** @internal */\nconst max = /*#__PURE__*/dual(2, (self, that) => lessThan(self, that) ? that : self);\n\nexport { IntervalsTypeId, empty, end, fromIterable, intersect, isNonEmpty, lessThan, make, max, start, union };\n","import { IntervalsTypeId as IntervalsTypeId$1, make as make$1, empty as empty$1, fromIterable as fromIterable$1, union as union$1, intersect as intersect$1, start as start$1, end as end$1, lessThan as lessThan$1, isNonEmpty as isNonEmpty$1, max as max$1 } from '../../internal/schedule/intervals.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst IntervalsTypeId = IntervalsTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * An `Intervals` represents a list of several `Interval`s.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Creates a new `Intervals` from a `List` of `Interval`s.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Constructs an empty list of `Interval`s.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Constructs `Intervals` from the specified `Iterable<Interval>`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = fromIterable$1;\n\n/**\n * Computes the union of this `Intervals` and  that `Intervals`\n *\n * @since 2.0.0\n * @category utils\n */\nconst union = union$1;\n\n/**\n * Produces the intersection of this `Intervals` and that `Intervals`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst intersect = intersect$1;\n\n/**\n * The start of the earliest interval in the specified `Intervals`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst start = start$1;\n\n/**\n * The end of the latest interval in the specified `Intervals`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst end = end$1;\n\n/**\n * Returns `true` if the start of this `Intervals` is before the start of that\n * `Intervals`, `false` otherwise.\n *\n * @since 2.0.0\n * @category ordering\n */\nconst lessThan = lessThan$1;\n\n/**\n * Returns `true` if this `Intervals` is non-empty, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isNonEmpty = isNonEmpty$1;\n\n/**\n * Returns the maximum of the two `Intervals` (i.e. which has the latest start).\n *\n * @since 2.0.0\n * @category ordering\n */\nconst max = max$1;\n\nexport { IntervalsTypeId, empty, end, fromIterable, intersect, isNonEmpty, lessThan, make, max, start, union };\n","import { of } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { make } from '../../ScheduleIntervals/dist/effect-ScheduleIntervals.esm.js';\n\n/** @internal */\nconst OP_CONTINUE = \"Continue\";\n\n/** @internal */\n\n/** @internal */\nconst OP_DONE = \"Done\";\n\n/** @internal */\n\n/** @internal */\nconst _continue = intervals => {\n  return {\n    _tag: OP_CONTINUE,\n    intervals\n  };\n};\n\n/** @internal */\nconst continueWith = interval => {\n  return {\n    _tag: OP_CONTINUE,\n    intervals: make(of(interval))\n  };\n};\n\n/** @internal */\nconst done = {\n  _tag: OP_DONE\n};\n\n/** @internal */\nconst isContinue = self => {\n  return self._tag === OP_CONTINUE;\n};\n\n/** @internal */\nconst isDone = self => {\n  return self._tag === OP_DONE;\n};\n\nexport { OP_CONTINUE, OP_DONE, _continue, continueWith, done, isContinue, isDone };\n","import { _continue as _continue$1, continueWith as continueWith$1, done as done$1, isContinue as isContinue$1, isDone as isDone$1 } from '../../internal/schedule/decision.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst _continue = _continue$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst continueWith = continueWith$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst done = done$1;\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isContinue = isContinue$1;\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isDone = isDone$1;\n\nexport { _continue as continue, continueWith, done, isContinue, isDone };\n","import { empty, append, reverse, fromIterable, isNonEmpty as isNonEmpty$1, headNonEmpty, tailNonEmpty, prepend } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { currentTimeMillis } from '../Clock/dist/effect-Clock.esm.js';\nimport { add } from '../Context/dist/effect-Context.esm.js';\nimport { sum, decode, zero, millis, toMillis, times, lessThan as lessThan$1, greaterThanOrEqualTo } from '../Duration/dist/effect-Duration.esm.js';\nimport { merge, right, left } from '../Either/dist/effect-Either.esm.js';\nimport { equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { dual, constVoid, pipe } from '../Function/dist/effect-Function.esm.js';\nimport { NoSuchElementException, IllegalArgumentException } from './cause.esm.js';\nimport { sync as sync$1, map as map$1, flatMap, succeed as succeed$1, zipWith as zipWith$1, mapInputContext as mapInputContext$1, dieSync, as as as$1, provideContext as provideContext$1, contextWithEffect, zipRight as zipRight$1, tap, fail, matchEffect, orDie, yieldNow, catchAll, failSync, suspend } from './core.esm.js';\nimport { make as make$1, get, set } from './ref.esm.js';\nimport { none, some, isSome } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { next } from '../Random/dist/effect-Random.esm.js';\nimport { isDone, isContinue, continue as _continue, done, continueWith } from '../ScheduleDecision/dist/effect-ScheduleDecision.esm.js';\nimport { make, after, size } from '../ScheduleInterval/dist/effect-ScheduleInterval.esm.js';\nimport { union as union$1, max, start, intersect as intersect$1, isNonEmpty, lessThan, end } from '../ScheduleIntervals/dist/effect-ScheduleIntervals.esm.js';\nimport { negate, sleep } from './core-effect.esm.js';\n\n/** @internal */\nconst ScheduleSymbolKey = \"effect/Schedule\";\n\n/** @internal */\nconst ScheduleTypeId = /*#__PURE__*/Symbol.for(ScheduleSymbolKey);\n\n/** @internal */\nconst ScheduleDriverSymbolKey = \"effect/ScheduleDriver\";\n\n/** @internal */\nconst ScheduleDriverTypeId = /*#__PURE__*/Symbol.for(ScheduleDriverSymbolKey);\n\n/** @internal */\nconst scheduleVariance = {\n  _Env: _ => _,\n  _In: _ => _,\n  _Out: _ => _\n};\nconst scheduleDriverVariance = {\n  _Env: _ => _,\n  _In: _ => _,\n  _Out: _ => _\n};\n\n/** @internal */\nclass ScheduleImpl {\n  [ScheduleTypeId] = scheduleVariance;\n  constructor(initial, step) {\n    this.initial = initial;\n    this.step = step;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nclass ScheduleDriverImpl {\n  [ScheduleDriverTypeId] = scheduleDriverVariance;\n  constructor(schedule, ref) {\n    this.schedule = schedule;\n    this.ref = ref;\n  }\n  state() {\n    return map$1(get(this.ref), tuple => tuple[1]);\n  }\n  last() {\n    return flatMap(get(this.ref), ([element, _]) => {\n      switch (element._tag) {\n        case \"None\":\n          {\n            return failSync(() => NoSuchElementException());\n          }\n        case \"Some\":\n          {\n            return succeed$1(element.value);\n          }\n      }\n    });\n  }\n  reset() {\n    return set(this.ref, [none(), this.schedule.initial]);\n  }\n  next(input) {\n    return pipe(map$1(get(this.ref), tuple => tuple[1]), flatMap(state => pipe(currentTimeMillis, flatMap(now => pipe(suspend(() => this.schedule.step(now, input, state)), flatMap(([state, out, decision]) => isDone(decision) ? pipe(set(this.ref, [some(out), state]), zipRight$1(fail(none()))) : pipe(set(this.ref, [some(out), state]), zipRight$1(sleep(millis(start(decision.intervals) - now))), as$1(out))))))));\n  }\n}\n\n/** @internal */\nconst makeWithState = (initial, step) => new ScheduleImpl(initial, step);\n\n/** @internal */\nconst addDelay = /*#__PURE__*/dual(2, (self, f) => addDelayEffect(self, out => sync$1(() => f(out))));\n\n/** @internal */\nconst addDelayEffect = /*#__PURE__*/dual(2, (self, f) => modifyDelayEffect(self, (out, duration) => map$1(f(out), delay => sum(duration, decode(delay)))));\n\n/** @internal */\nconst andThen = /*#__PURE__*/dual(2, (self, that) => map(andThenEither(self, that), merge));\n\n/** @internal */\nconst andThenEither = /*#__PURE__*/dual(2, (self, that) => makeWithState([self.initial, that.initial, true], (now, input, state) => state[2] ? flatMap(self.step(now, input, state[0]), ([lState, out, decision]) => {\n  if (isDone(decision)) {\n    return map$1(that.step(now, input, state[1]), ([rState, out, decision]) => [[lState, rState, false], right(out), decision]);\n  }\n  return succeed$1([[lState, state[1], true], left(out), decision]);\n}) : map$1(that.step(now, input, state[1]), ([rState, out, decision]) => [[state[0], rState, false], right(out), decision])));\n\n/** @internal */\nconst as = /*#__PURE__*/dual(2, (self, out) => map(self, () => out));\n\n/** @internal */\nconst asUnit = self => map(self, constVoid);\n\n/** @internal */\nconst bothInOut = /*#__PURE__*/dual(2, (self, that) => makeWithState([self.initial, that.initial], (now, [in1, in2], state) => zipWith$1(self.step(now, in1, state[0]), that.step(now, in2, state[1]), ([lState, out, lDecision], [rState, out2, rDecision]) => {\n  if (isContinue(lDecision) && isContinue(rDecision)) {\n    const interval = pipe(lDecision.intervals, union$1(rDecision.intervals));\n    return [[lState, rState], [out, out2], _continue(interval)];\n  }\n  return [[lState, rState], [out, out2], done];\n})));\n\n/** @internal */\nconst check = /*#__PURE__*/dual(2, (self, test) => checkEffect(self, (input, out) => sync$1(() => test(input, out))));\n\n/** @internal */\nconst checkEffect = /*#__PURE__*/dual(2, (self, test) => makeWithState(self.initial, (now, input, state) => flatMap(self.step(now, input, state), ([state, out, decision]) => {\n  if (isDone(decision)) {\n    return succeed$1([state, out, done]);\n  }\n  return map$1(test(input, out), cont => cont ? [state, out, decision] : [state, out, done]);\n})));\n/** @internal */\nconst collectAllInputs = () => collectAllOutputs(identity());\n\n/** @internal */\nconst collectAllOutputs = self => reduce(self, empty(), (outs, out) => pipe(outs, append(out)));\n\n/** @internal */\nconst collectUntil = f => collectAllOutputs(recurUntil(f));\n\n/** @internal */\nconst collectUntilEffect = f => collectAllOutputs(recurUntilEffect(f));\n\n/** @internal */\nconst collectWhile = f => collectAllOutputs(recurWhile(f));\n\n/** @internal */\nconst collectWhileEffect = f => collectAllOutputs(recurWhileEffect(f));\n\n/** @internal */\nconst compose = /*#__PURE__*/dual(2, (self, that) => makeWithState([self.initial, that.initial], (now, input, state) => flatMap(self.step(now, input, state[0]), ([lState, out, lDecision]) => map$1(that.step(now, out, state[1]), ([rState, out2, rDecision]) => isDone(lDecision) ? [[lState, rState], out2, done] : isDone(rDecision) ? [[lState, rState], out2, done] : [[lState, rState], out2, _continue(pipe(lDecision.intervals, max(rDecision.intervals)))]))));\n\n/** @internal */\nconst mapInput = /*#__PURE__*/dual(2, (self, f) => mapInputEffect(self, input2 => sync$1(() => f(input2))));\n\n/** @internal */\nconst mapInputContext = /*#__PURE__*/dual(2, (self, f) => makeWithState(self.initial, (now, input, state) => mapInputContext$1(self.step(now, input, state), f)));\n\n/** @internal */\nconst mapInputEffect = /*#__PURE__*/dual(2, (self, f) => makeWithState(self.initial, (now, input2, state) => flatMap(f(input2), input => self.step(now, input, state))));\n\n/** @internal */\nconst dayOfMonth = day => {\n  return makeWithState([Number.NEGATIVE_INFINITY, 0], (now, _, state) => {\n    if (!Number.isInteger(day) || day < 1 || 31 < day) {\n      return dieSync(() => IllegalArgumentException(`Invalid argument in: dayOfMonth(${day}). Must be in range 1...31`));\n    }\n    const n = state[1];\n    const initial = n === 0;\n    const day0 = nextDayOfMonth(now, day, initial);\n    const start = beginningOfDay(day0);\n    const end = endOfDay(day0);\n    const interval = make(start, end);\n    return succeed$1([[end, n + 1], n, continueWith(interval)]);\n  });\n};\n\n/** @internal */\nconst dayOfWeek = day => {\n  return makeWithState([Number.MIN_SAFE_INTEGER, 0], (now, _, state) => {\n    if (!Number.isInteger(day) || day < 1 || 7 < day) {\n      return dieSync(() => IllegalArgumentException(`Invalid argument in: dayOfWeek(${day}). Must be in range 1 (Monday)...7 (Sunday)`));\n    }\n    const n = state[1];\n    const initial = n === 0;\n    const day0 = nextDay(now, day, initial);\n    const start = beginningOfDay(day0);\n    const end = endOfDay(day0);\n    const interval = make(start, end);\n    return succeed$1([[end, n + 1], n, continueWith(interval)]);\n  });\n};\n\n/** @internal */\nconst delayed = /*#__PURE__*/dual(2, (self, f) => delayedEffect(self, duration => sync$1(() => f(duration))));\n\n/** @internal */\nconst delayedEffect = /*#__PURE__*/dual(2, (self, f) => modifyDelayEffect(self, (_, delay) => f(delay)));\n\n/** @internal */\nconst delayedSchedule = schedule => addDelay(schedule, x => x);\n\n/** @internal */\nconst delays = self => makeWithState(self.initial, (now, input, state) => pipe(self.step(now, input, state), flatMap(([state, _, decision]) => {\n  if (isDone(decision)) {\n    return succeed$1([state, zero, decision]);\n  }\n  return succeed$1([state, millis(start(decision.intervals) - now), decision]);\n})));\n\n/** @internal */\nconst mapBoth = /*#__PURE__*/dual(2, (self, {\n  onInput,\n  onOutput\n}) => map(mapInput(self, onInput), onOutput));\n\n/** @internal */\nconst mapBothEffect = /*#__PURE__*/dual(2, (self, {\n  onInput,\n  onOutput\n}) => mapEffect(mapInputEffect(self, onInput), onOutput));\n\n/** @internal */\nconst driver = self => pipe(make$1([none(), self.initial]), map$1(ref => new ScheduleDriverImpl(self, ref)));\n\n/** @internal */\nconst duration = durationInput => {\n  const duration = decode(durationInput);\n  const durationMillis = toMillis(duration);\n  return makeWithState(true, (now, _, state) => succeed$1(state ? [false, duration, continueWith(after(now + durationMillis))] : [false, zero, done]));\n};\n\n/** @internal */\nconst either = /*#__PURE__*/dual(2, (self, that) => union(self, that));\n\n/** @internal */\nconst eitherWith = /*#__PURE__*/dual(3, (self, that, f) => unionWith(self, that, f));\n\n/** @internal */\nconst ensuring = /*#__PURE__*/dual(2, (self, finalizer) => makeWithState(self.initial, (now, input, state) => flatMap(self.step(now, input, state), ([state, out, decision]) => isDone(decision) ? as$1(finalizer, [state, out, decision]) : succeed$1([state, out, decision]))));\n\n/** @internal */\nconst exponential = (baseInput, factor = 2.0) => {\n  const base = decode(baseInput);\n  return delayedSchedule(map(forever, i => times(base, Math.pow(factor, i))));\n};\n\n/** @internal */\nconst fibonacci = oneInput => {\n  const one = decode(oneInput);\n  return delayedSchedule(pipe(unfold([one, one], ([a, b]) => [b, sum(a, b)]), map(out => out[0])));\n};\n\n/** @internal */\nconst fixed = intervalInput => {\n  const interval = decode(intervalInput);\n  const intervalMillis = toMillis(interval);\n  return makeWithState([none(), 0], (now, _, [option, n]) => sync$1(() => {\n    switch (option._tag) {\n      case \"None\":\n        {\n          return [[some([now, now + intervalMillis]), n + 1], n, continueWith(after(now + intervalMillis))];\n        }\n      case \"Some\":\n        {\n          const [startMillis, lastRun] = option.value;\n          const runningBehind = now > lastRun + intervalMillis;\n          const boundary = equals(interval, zero) ? interval : millis(intervalMillis - (now - startMillis) % intervalMillis);\n          const sleepTime = equals(boundary, zero) ? interval : boundary;\n          const nextRun = runningBehind ? now : now + toMillis(sleepTime);\n          return [[some([startMillis, nextRun]), n + 1], n, continueWith(after(nextRun))];\n        }\n    }\n  }));\n};\n\n/** @internal */\nconst fromDelay = delay => duration(delay);\n\n/** @internal */\nconst fromDelays = (delay, ...delays) => makeWithState([[delay, ...delays].map(_ => decode(_)), true], (now, _, [durations, cont]) => sync$1(() => {\n  if (cont) {\n    const x = durations[0];\n    const interval = after(now + toMillis(x));\n    if (durations.length >= 2) {\n      return [[durations.slice(1), true], x, continueWith(interval)];\n    }\n    const y = durations.slice(1);\n    return [[[x, ...y], false], x, continueWith(interval)];\n  }\n  return [[durations, false], zero, done];\n}));\n\n/** @internal */\nconst fromFunction = f => map(identity(), f);\n\n/** @internal */\nconst hourOfDay = hour => makeWithState([Number.NEGATIVE_INFINITY, 0], (now, _, state) => {\n  if (!Number.isInteger(hour) || hour < 0 || 23 < hour) {\n    return dieSync(() => IllegalArgumentException(`Invalid argument in: hourOfDay(${hour}). Must be in range 0...23`));\n  }\n  const n = state[1];\n  const initial = n === 0;\n  const hour0 = nextHour(now, hour, initial);\n  const start = beginningOfHour(hour0);\n  const end = endOfHour(hour0);\n  const interval = make(start, end);\n  return succeed$1([[end, n + 1], n, continueWith(interval)]);\n});\n\n/** @internal */\nconst identity = () => makeWithState(void 0, (now, input, state) => succeed$1([state, input, continueWith(after(now))]));\n\n/** @internal */\nconst intersect = /*#__PURE__*/dual(2, (self, that) => intersectWith(self, that, intersect$1));\n\n/** @internal */\nconst intersectWith = /*#__PURE__*/dual(3, (self, that, f) => makeWithState([self.initial, that.initial], (now, input, state) => pipe(zipWith$1(self.step(now, input, state[0]), that.step(now, input, state[1]), (a, b) => [a, b]), flatMap(([[lState, out, lDecision], [rState, out2, rDecision]]) => {\n  if (isContinue(lDecision) && isContinue(rDecision)) {\n    return intersectWithLoop(self, that, input, lState, out, lDecision.intervals, rState, out2, rDecision.intervals, f);\n  }\n  return succeed$1([[lState, rState], [out, out2], done]);\n}))));\n\n/** @internal */\nconst intersectWithLoop = (self, that, input, lState, out, lInterval, rState, out2, rInterval, f) => {\n  const combined = f(lInterval, rInterval);\n  if (isNonEmpty(combined)) {\n    return succeed$1([[lState, rState], [out, out2], _continue(combined)]);\n  }\n  if (pipe(lInterval, lessThan(rInterval))) {\n    return flatMap(self.step(end(lInterval), input, lState), ([lState, out, decision]) => {\n      if (isDone(decision)) {\n        return succeed$1([[lState, rState], [out, out2], done]);\n      }\n      return intersectWithLoop(self, that, input, lState, out, decision.intervals, rState, out2, rInterval, f);\n    });\n  }\n  return flatMap(that.step(end(rInterval), input, rState), ([rState, out2, decision]) => {\n    if (isDone(decision)) {\n      return succeed$1([[lState, rState], [out, out2], done]);\n    }\n    return intersectWithLoop(self, that, input, lState, out, lInterval, rState, out2, decision.intervals, f);\n  });\n};\n\n/** @internal */\nconst jittered = self => jitteredWith(self, {\n  min: 0.8,\n  max: 1.2\n});\n\n/** @internal */\nconst jitteredWith = /*#__PURE__*/dual(2, (self, options) => {\n  const {\n    max,\n    min\n  } = Object.assign({\n    min: 0.8,\n    max: 1.2\n  }, options);\n  return delayedEffect(self, duration => map$1(next, random => {\n    const d = toMillis(duration);\n    const jittered = d * min * (1 - random) + d * max * random;\n    return millis(jittered);\n  }));\n});\n\n/** @internal */\nconst linear = baseInput => {\n  const base = decode(baseInput);\n  return delayedSchedule(map(forever, i => times(base, i + 1)));\n};\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => mapEffect(self, out => sync$1(() => f(out))));\n\n/** @internal */\nconst mapEffect = /*#__PURE__*/dual(2, (self, f) => makeWithState(self.initial, (now, input, state) => flatMap(self.step(now, input, state), ([state, out, decision]) => map$1(f(out), out2 => [state, out2, decision]))));\n\n/** @internal */\nconst minuteOfHour = minute => makeWithState([Number.MIN_SAFE_INTEGER, 0], (now, _, state) => {\n  if (!Number.isInteger(minute) || minute < 0 || 59 < minute) {\n    return dieSync(() => IllegalArgumentException(`Invalid argument in: minuteOfHour(${minute}). Must be in range 0...59`));\n  }\n  const n = state[1];\n  const initial = n === 0;\n  const minute0 = nextMinute(now, minute, initial);\n  const start = beginningOfMinute(minute0);\n  const end = endOfMinute(minute0);\n  const interval = make(start, end);\n  return succeed$1([[end, n + 1], n, continueWith(interval)]);\n});\n\n/** @internal */\nconst modifyDelay = /*#__PURE__*/dual(2, (self, f) => modifyDelayEffect(self, (out, duration) => sync$1(() => f(out, duration))));\n\n/** @internal */\nconst modifyDelayEffect = /*#__PURE__*/dual(2, (self, f) => makeWithState(self.initial, (now, input, state) => flatMap(self.step(now, input, state), ([state, out, decision]) => {\n  if (isDone(decision)) {\n    return succeed$1([state, out, decision]);\n  }\n  const intervals = decision.intervals;\n  const delay = size(make(now, start(intervals)));\n  return map$1(f(out, delay), durationInput => {\n    const duration = decode(durationInput);\n    const oldStart = start(intervals);\n    const newStart = now + toMillis(duration);\n    const delta = newStart - oldStart;\n    const newEnd = Math.min(Math.max(0, end(intervals) + delta), Number.MAX_SAFE_INTEGER);\n    const newInterval = make(newStart, newEnd);\n    return [state, out, continueWith(newInterval)];\n  });\n})));\n\n/** @internal */\nconst onDecision = /*#__PURE__*/dual(2, (self, f) => makeWithState(self.initial, (now, input, state) => flatMap(self.step(now, input, state), ([state, out, decision]) => as$1(f(out, decision), [state, out, decision]))));\n\n/** @internal */\nconst passthrough = self => makeWithState(self.initial, (now, input, state) => pipe(self.step(now, input, state), map$1(([state, _, decision]) => [state, input, decision])));\n\n/** @internal */\nconst provideContext = /*#__PURE__*/dual(2, (self, context) => makeWithState(self.initial, (now, input, state) => provideContext$1(self.step(now, input, state), context)));\n\n/** @internal */\nconst provideService = /*#__PURE__*/dual(3, (self, tag, service) => makeWithState(self.initial, (now, input, state) => contextWithEffect(env => provideContext$1(\n// @ts-expect-error\nself.step(now, input, state), add(env, tag, service)))));\n\n/** @internal */\nconst recurUntil = f => untilInput(identity(), f);\n\n/** @internal */\nconst recurUntilEffect = f => untilInputEffect(identity(), f);\n\n/** @internal */\nconst recurUntilOption = pf => untilOutput(map(identity(), pf), isSome);\n\n/** @internal */\nconst recurUpTo = durationInput => {\n  const duration = decode(durationInput);\n  return whileOutput(elapsed, elapsed => lessThan$1(elapsed, duration));\n};\n\n/** @internal */\nconst recurWhile = f => whileInput(identity(), f);\n\n/** @internal */\nconst recurWhileEffect = f => whileInputEffect(identity(), f);\n\n/** @internal */\nconst recurs = n => whileOutput(forever, out => out < n);\n\n/** @internal */\nconst reduce = /*#__PURE__*/dual(3, (self, zero, f) => reduceEffect(self, zero, (z, out) => sync$1(() => f(z, out))));\n\n/** @internal */\nconst reduceEffect = /*#__PURE__*/dual(3, (self, zero, f) => makeWithState([self.initial, zero], (now, input, [s, z]) => flatMap(self.step(now, input, s), ([s, out, decision]) => isDone(decision) ? succeed$1([[s, z], z, decision]) : map$1(f(z, out), z2 => [[s, z2], z, decision]))));\n\n/** @internal */\nconst repetitions = self => reduce(self, 0, (n, _) => n + 1);\n\n/** @internal */\nconst resetAfter = /*#__PURE__*/dual(2, (self, durationInput) => {\n  const duration = decode(durationInput);\n  return pipe(self, intersect(elapsed), resetWhen(([, time]) => greaterThanOrEqualTo(time, duration)), map(out => out[0]));\n});\n\n/** @internal */\nconst resetWhen = /*#__PURE__*/dual(2, (self, f) => makeWithState(self.initial, (now, input, state) => flatMap(self.step(now, input, state), ([state, out, decision]) => f(out) ? self.step(now, input, self.initial) : succeed$1([state, out, decision]))));\n\n/** @internal */\nconst run = /*#__PURE__*/dual(3, (self, now, input) => pipe(runLoop(self, now, fromIterable(input), self.initial, empty()), map$1(list => reverse(list))));\n\n/** @internal */\nconst runLoop = (self, now, inputs, state, acc) => {\n  if (!isNonEmpty$1(inputs)) {\n    return succeed$1(acc);\n  }\n  const input = headNonEmpty(inputs);\n  const nextInputs = tailNonEmpty(inputs);\n  return flatMap(self.step(now, input, state), ([state, out, decision]) => {\n    if (isDone(decision)) {\n      return sync$1(() => pipe(acc, prepend(out)));\n    }\n    return runLoop(self, start(decision.intervals), nextInputs, state, prepend(acc, out));\n  });\n};\n\n/** @internal */\nconst secondOfMinute = second => makeWithState([Number.NEGATIVE_INFINITY, 0], (now, _, state) => {\n  if (!Number.isInteger(second) || second < 0 || 59 < second) {\n    return dieSync(() => IllegalArgumentException(`Invalid argument in: secondOfMinute(${second}). Must be in range 0...59`));\n  }\n  const n = state[1];\n  const initial = n === 0;\n  const second0 = nextSecond(now, second, initial);\n  const start = beginningOfSecond(second0);\n  const end = endOfSecond(second0);\n  const interval = make(start, end);\n  return succeed$1([[end, n + 1], n, continueWith(interval)]);\n});\n\n/** @internal */\nconst spaced = duration => addDelay(forever, () => duration);\n\n/** @internal */\nconst succeed = value => map(forever, () => value);\n\n/** @internal */\nconst sync = evaluate => map(forever, evaluate);\n\n/** @internal */\nconst tapInput = /*#__PURE__*/dual(2, (self, f) => makeWithState(self.initial, (now, input, state) => zipRight$1(f(input), self.step(now, input, state))));\n\n/** @internal */\nconst tapOutput = /*#__PURE__*/dual(2, (self, f) => makeWithState(self.initial, (now, input, state) => tap(self.step(now, input, state), ([, out]) => f(out))));\n\n/** @internal */\nconst unfold = (initial, f) => makeWithState(initial, (now, _, state) => sync$1(() => [f(state), state, continueWith(after(now))]));\n\n/** @internal */\nconst union = /*#__PURE__*/dual(2, (self, that) => unionWith(self, that, union$1));\n\n/** @internal */\nconst unionWith = /*#__PURE__*/dual(3, (self, that, f) => makeWithState([self.initial, that.initial], (now, input, state) => zipWith$1(self.step(now, input, state[0]), that.step(now, input, state[1]), ([lState, l, lDecision], [rState, r, rDecision]) => {\n  if (isDone(lDecision) && isDone(rDecision)) {\n    return [[lState, rState], [l, r], done];\n  }\n  if (isDone(lDecision) && isContinue(rDecision)) {\n    return [[lState, rState], [l, r], _continue(rDecision.intervals)];\n  }\n  if (isContinue(lDecision) && isDone(rDecision)) {\n    return [[lState, rState], [l, r], _continue(lDecision.intervals)];\n  }\n  if (isContinue(lDecision) && isContinue(rDecision)) {\n    const combined = f(lDecision.intervals, rDecision.intervals);\n    return [[lState, rState], [l, r], _continue(combined)];\n  }\n  throw new Error(\"BUG: Schedule.unionWith - please report an issue at https://github.com/Effect-TS/io/issues\");\n})));\n\n/** @internal */\nconst untilInput = /*#__PURE__*/dual(2, (self, f) => check(self, (input, _) => !f(input)));\n\n/** @internal */\nconst untilInputEffect = /*#__PURE__*/dual(2, (self, f) => checkEffect(self, (input, _) => negate(f(input))));\n\n/** @internal */\nconst untilOutput = /*#__PURE__*/dual(2, (self, f) => check(self, (_, out) => !f(out)));\n\n/** @internal */\nconst untilOutputEffect = /*#__PURE__*/dual(2, (self, f) => checkEffect(self, (_, out) => negate(f(out))));\n\n/** @internal */\nconst upTo = /*#__PURE__*/dual(2, (self, duration) => zipLeft(self, recurUpTo(duration)));\n\n/** @internal */\nconst whileInput = /*#__PURE__*/dual(2, (self, f) => check(self, (input, _) => f(input)));\n\n/** @internal */\nconst whileInputEffect = /*#__PURE__*/dual(2, (self, f) => checkEffect(self, (input, _) => f(input)));\n\n/** @internal */\nconst whileOutput = /*#__PURE__*/dual(2, (self, f) => check(self, (_, out) => f(out)));\n\n/** @internal */\nconst whileOutputEffect = /*#__PURE__*/dual(2, (self, f) => checkEffect(self, (_, out) => f(out)));\n\n/** @internal */\nconst windowed = intervalInput => {\n  const interval = decode(intervalInput);\n  const millis = toMillis(interval);\n  return makeWithState([none(), 0], (now, _, [option, n]) => {\n    switch (option._tag) {\n      case \"None\":\n        {\n          return succeed$1([[some(now), n + 1], n, continueWith(after(now + millis))]);\n        }\n      case \"Some\":\n        {\n          return succeed$1([[some(option.value), n + 1], n, continueWith(after(now + (millis - (now - option.value) % millis)))]);\n        }\n    }\n  });\n};\n\n/** @internal */\nconst zipLeft = /*#__PURE__*/dual(2, (self, that) => map(intersect(self, that), out => out[0]));\n\n/** @internal */\nconst zipRight = /*#__PURE__*/dual(2, (self, that) => map(intersect(self, that), out => out[1]));\n\n/** @internal */\nconst zipWith = /*#__PURE__*/dual(3, (self, that, f) => map(intersect(self, that), ([out, out2]) => f(out, out2)));\n\n// -----------------------------------------------------------------------------\n// Seconds\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst beginningOfSecond = now => {\n  const date = new Date(now);\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), 0).getTime();\n};\n\n/** @internal */\nconst endOfSecond = now => {\n  const date = new Date(beginningOfSecond(now));\n  return date.setSeconds(date.getSeconds() + 1);\n};\n\n/** @internal */\nconst nextSecond = (now, second, initial) => {\n  const date = new Date(now);\n  if (date.getSeconds() === second && initial) {\n    return now;\n  }\n  if (date.getSeconds() < second) {\n    return date.setSeconds(second);\n  }\n  // Set seconds to the provided value and add one minute\n  const newDate = new Date(date.setSeconds(second));\n  return newDate.setTime(newDate.getTime() + 1000 * 60);\n};\n\n// -----------------------------------------------------------------------------\n// Minutes\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst beginningOfMinute = now => {\n  const date = new Date(now);\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), 0, 0).getTime();\n};\n\n/** @internal */\nconst endOfMinute = now => {\n  const date = new Date(beginningOfMinute(now));\n  return date.setMinutes(date.getMinutes() + 1);\n};\n\n/** @internal */\nconst nextMinute = (now, minute, initial) => {\n  const date = new Date(now);\n  if (date.getMinutes() === minute && initial) {\n    return now;\n  }\n  if (date.getMinutes() < minute) {\n    return date.setMinutes(minute);\n  }\n  // Set minutes to the provided value and add one hour\n  const newDate = new Date(date.setMinutes(minute));\n  return newDate.setTime(newDate.getTime() + 1000 * 60 * 60);\n};\n\n// -----------------------------------------------------------------------------\n// Hours\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst beginningOfHour = now => {\n  const date = new Date(now);\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), 0, 0, 0).getTime();\n};\n\n/** @internal */\nconst endOfHour = now => {\n  const date = new Date(beginningOfHour(now));\n  return date.setHours(date.getHours() + 1);\n};\n\n/** @internal */\nconst nextHour = (now, hour, initial) => {\n  const date = new Date(now);\n  if (date.getHours() === hour && initial) {\n    return now;\n  }\n  if (date.getHours() < hour) {\n    return date.setHours(hour);\n  }\n  // Set hours to the provided value and add one day\n  const newDate = new Date(date.setHours(hour));\n  return newDate.setTime(newDate.getTime() + 1000 * 60 * 60 * 24);\n};\n\n// -----------------------------------------------------------------------------\n// Days\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst beginningOfDay = now => {\n  const date = new Date(now);\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0).getTime();\n};\n\n/** @internal */\nconst endOfDay = now => {\n  const date = new Date(beginningOfDay(now));\n  return date.setDate(date.getDate() + 1);\n};\n\n/** @internal */\nconst nextDay = (now, dayOfWeek, initial) => {\n  const date = new Date(now);\n  if (date.getDay() === dayOfWeek && initial) {\n    return now;\n  }\n  const nextDayOfWeek = (7 + dayOfWeek - date.getDay()) % 7;\n  return date.setDate(date.getDate() + (nextDayOfWeek === 0 ? 7 : nextDayOfWeek));\n};\n\n/** @internal */\nconst nextDayOfMonth = (now, day, initial) => {\n  const date = new Date(now);\n  if (date.getDate() === day && initial) {\n    return now;\n  }\n  if (date.getDate() < day) {\n    return date.setDate(day);\n  }\n  return findNextMonth(now, day, 1);\n};\n\n/** @internal */\nconst findNextMonth = (now, day, months) => {\n  const d = new Date(now);\n  const tmp1 = new Date(d.setDate(day));\n  const tmp2 = new Date(tmp1.setMonth(tmp1.getMonth() + months));\n  if (tmp2.getDate() === day) {\n    const d2 = new Date(now);\n    const tmp3 = new Date(d2.setDate(day));\n    return tmp3.setMonth(tmp3.getMonth() + months);\n  }\n  return findNextMonth(now, day, months + 1);\n};\n\n// circular with Effect\n\n/** @internal */\nconst repeat_Effect = /*#__PURE__*/dual(2, (self, schedule) => repeatOrElse_Effect(self, schedule, (e, _) => fail(e)));\n\n/** @internal */\nconst repeatOrElse_Effect = /*#__PURE__*/dual(3, (self, schedule, orElse) => flatMap(driver(schedule), driver => matchEffect(self, {\n  onFailure: error => orElse(error, none()),\n  onSuccess: value => repeatOrElseEffectLoop(self, driver, orElse, value)\n})));\n\n/** @internal */\nconst repeatOrElseEffectLoop = (self, driver, orElse, value) => {\n  return matchEffect(driver.next(value), {\n    onFailure: () => orDie(driver.last()),\n    onSuccess: b => matchEffect(self, {\n      onFailure: error => orElse(error, some(b)),\n      onSuccess: value => repeatOrElseEffectLoop(self, driver, orElse, value)\n    })\n  });\n};\n\n/** @internal */\nconst repeatUntil_Effect = /*#__PURE__*/dual(2, (self, f) => repeatUntilEffect_Effect(self, a => sync$1(() => f(a))));\n\n/** @internal */\nconst repeatUntilEffect_Effect = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => flatMap(f(a), result => result ? succeed$1(a) : flatMap(yieldNow(), () => repeatUntilEffect_Effect(self, f)))));\n\n/** @internal */\nconst repeatWhile_Effect = /*#__PURE__*/dual(2, (self, f) => repeatWhileEffect_Effect(self, a => sync$1(() => f(a))));\n\n/** @internal */\nconst repeatWhileEffect_Effect = /*#__PURE__*/dual(2, (self, f) => repeatUntilEffect_Effect(self, a => negate(f(a))));\n\n/** @internal */\nconst retry_Effect = /*#__PURE__*/dual(2, (self, policy) => retryOrElse_Effect(self, policy, (e, _) => fail(e)));\n\n/** @internal */\nconst retryN_Effect = /*#__PURE__*/dual(2, (self, n) => retryN_EffectLoop(self, n));\n\n/** @internal */\nconst retryN_EffectLoop = (self, n) => {\n  return catchAll(self, e => n < 0 ? fail(e) : flatMap(yieldNow(), () => retryN_EffectLoop(self, n - 1)));\n};\n\n/** @internal */\nconst retryOrElse_Effect = /*#__PURE__*/dual(3, (self, policy, orElse) => flatMap(driver(policy), driver => retryOrElse_EffectLoop(self, driver, orElse)));\n\n/** @internal */\nconst retryOrElse_EffectLoop = (self, driver, orElse) => {\n  return catchAll(self, e => matchEffect(driver.next(e), {\n    onFailure: () => pipe(driver.last(), orDie, flatMap(out => orElse(e, out))),\n    onSuccess: () => retryOrElse_EffectLoop(self, driver, orElse)\n  }));\n};\n\n/** @internal */\nconst retryUntil_Effect = /*#__PURE__*/dual(2, (self, f) => retryUntilEffect_Effect(self, e => sync$1(() => f(e))));\n\n/** @internal */\nconst retryUntilEffect_Effect = /*#__PURE__*/dual(2, (self, f) => catchAll(self, e => flatMap(f(e), b => b ? fail(e) : flatMap(yieldNow(), () => retryUntilEffect_Effect(self, f)))));\n\n/** @internal */\nconst retryWhile_Effect = /*#__PURE__*/dual(2, (self, f) => retryWhileEffect_Effect(self, e => sync$1(() => f(e))));\n\n/** @internal */\nconst retryWhileEffect_Effect = /*#__PURE__*/dual(2, (self, f) => retryUntilEffect_Effect(self, e => negate(f(e))));\n\n/** @internal */\nconst schedule_Effect = /*#__PURE__*/dual(2, (self, schedule) => scheduleFrom_Effect(self, void 0, schedule));\n\n/** @internal */\nconst scheduleFrom_Effect = /*#__PURE__*/dual(3, (self, initial, schedule) => flatMap(driver(schedule), driver => scheduleFrom_EffectLoop(self, initial, driver)));\n\n/** @internal */\nconst scheduleFrom_EffectLoop = (self, initial, driver) => matchEffect(driver.next(initial), {\n  onFailure: () => orDie(driver.last()),\n  onSuccess: () => flatMap(self, a => scheduleFrom_EffectLoop(self, a, driver))\n});\n\n/** @internal */\nconst count = /*#__PURE__*/unfold(0, n => n + 1);\n\n/** @internal */\nconst elapsed = /*#__PURE__*/makeWithState( /*#__PURE__*/none(), (now, _, state) => {\n  switch (state._tag) {\n    case \"None\":\n      {\n        return succeed$1([some(now), zero, continueWith(after(now))]);\n      }\n    case \"Some\":\n      {\n        return succeed$1([some(state.value), millis(now - state.value), continueWith(after(now))]);\n      }\n  }\n});\n\n/** @internal */\nconst forever = /*#__PURE__*/unfold(0, n => n + 1);\n\n/** @internal */\nconst once = /*#__PURE__*/asUnit( /*#__PURE__*/recurs(1));\n\n/** @internal */\nconst stop = /*#__PURE__*/asUnit( /*#__PURE__*/recurs(0));\n\nexport { ScheduleDriverTypeId, ScheduleTypeId, addDelay, addDelayEffect, andThen, andThenEither, as, asUnit, beginningOfDay, beginningOfHour, beginningOfMinute, beginningOfSecond, bothInOut, check, checkEffect, collectAllInputs, collectAllOutputs, collectUntil, collectUntilEffect, collectWhile, collectWhileEffect, compose, count, dayOfMonth, dayOfWeek, delayed, delayedEffect, delayedSchedule, delays, driver, duration, either, eitherWith, elapsed, endOfDay, endOfHour, endOfMinute, endOfSecond, ensuring, exponential, fibonacci, findNextMonth, fixed, forever, fromDelay, fromDelays, fromFunction, hourOfDay, identity, intersect, intersectWith, jittered, jitteredWith, linear, makeWithState, map, mapBoth, mapBothEffect, mapEffect, mapInput, mapInputContext, mapInputEffect, minuteOfHour, modifyDelay, modifyDelayEffect, nextDay, nextDayOfMonth, nextHour, nextMinute, nextSecond, onDecision, once, passthrough, provideContext, provideService, recurUntil, recurUntilEffect, recurUntilOption, recurUpTo, recurWhile, recurWhileEffect, recurs, reduce, reduceEffect, repeatOrElse_Effect, repeatUntilEffect_Effect, repeatUntil_Effect, repeatWhileEffect_Effect, repeatWhile_Effect, repeat_Effect, repetitions, resetAfter, resetWhen, retryN_Effect, retryOrElse_Effect, retryUntilEffect_Effect, retryUntil_Effect, retryWhileEffect_Effect, retryWhile_Effect, retry_Effect, run, scheduleFrom_Effect, schedule_Effect, secondOfMinute, spaced, stop, succeed, sync, tapInput, tapOutput, unfold, union, unionWith, untilInput, untilInputEffect, untilOutput, untilOutputEffect, upTo, whileInput, whileInputEffect, whileOutput, whileOutputEffect, windowed, zipLeft, zipRight, zipWith };\n","import { decode, toMillis } from '../../Duration/dist/effect-Duration.esm.js';\nimport { left, right } from '../../Either/dist/effect-Either.esm.js';\nimport { equals, symbol } from '../../Equal/dist/effect-Equal.esm.js';\nimport { zipWith as zipWith$1 } from '../../Exit/dist/effect-Exit.esm.js';\nimport { getOrElse } from '../../FiberId/dist/effect-FiberId.esm.js';\nimport { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol as symbol$1, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { parallel } from '../cause.esm.js';\nimport { sync, map, flatMap, context, provideContext, uninterruptibleMask, dieMessage, deferredAwait, forEachSequentialDiscard, forEachSequential, tap, fiberIdWith, onExit, suspend, deferredMake, intoDeferred, succeed, as, flatten, exit, fiberRefLocallyWith, failSync, failCauseSync, zipRight, zipWith, asyncEither, withFiberRuntime, currentSchedulingPriority, unit, asUnit, interruptFiber, interruptible, interruptAsFiber, exitFailCause } from '../core.esm.js';\nimport { clockWith, diffFiberRefs, patchFiberRefs, sleep } from '../core-effect.esm.js';\nimport { sequential } from '../executionStrategy.esm.js';\nimport { join, FiberTypeId, fiberVariance } from '../fiber.esm.js';\nimport { fiberAwaitAll, fiberAll, ensuring, fork, forkDaemon, scopeWith, race, currentSupervisor, zipWithOptions, raceFibersWith } from '../fiberRuntime.esm.js';\nimport { globalScope } from '../fiberScope.esm.js';\nimport { set, unsafeMake, RefTypeId, refVariance, get as get$1 } from '../ref.esm.js';\nimport { schedule_Effect } from '../schedule.esm.js';\nimport { track } from '../supervisor.esm.js';\nimport { get, set as set$1, empty } from '../../MutableHashMap/dist/effect-MutableHashMap.esm.js';\nimport { isNone, some, none, flatMap as flatMap$1, map as map$1 } from '../../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { isIterable, hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { currentScheduler } from '../../Scheduler/dist/effect-Scheduler.esm.js';\n\n/** @internal */\nclass Semaphore {\n  waiters = new Array();\n  taken = 0;\n  constructor(permits) {\n    this.permits = permits;\n  }\n  get free() {\n    return this.permits - this.taken;\n  }\n  take = n => asyncEither(resume => {\n    if (this.free < n) {\n      const observer = () => {\n        if (this.free >= n) {\n          const observerIndex = this.waiters.findIndex(cb => cb === observer);\n          if (observerIndex !== -1) {\n            this.waiters.splice(observerIndex, 1);\n          }\n          this.taken += n;\n          resume(succeed(n));\n        }\n      };\n      this.waiters.push(observer);\n      return left(sync(() => {\n        const observerIndex = this.waiters.findIndex(cb => cb === observer);\n        if (observerIndex !== -1) {\n          this.waiters.splice(observerIndex, 1);\n        }\n      }));\n    }\n    this.taken += n;\n    return right(succeed(n));\n  });\n  release = n => withFiberRuntime(fiber => {\n    this.taken -= n;\n    fiber.getFiberRef(currentScheduler).scheduleTask(() => {\n      this.waiters.forEach(wake => wake());\n    }, fiber.getFiberRef(currentSchedulingPriority));\n    return unit;\n  });\n  withPermits = n => self => uninterruptibleMask(restore => flatMap(restore(this.take(n)), permits => ensuring(restore(self), this.release(permits))));\n}\n\n/** @internal */\nconst unsafeMakeSemaphore = leases => {\n  return new Semaphore(leases);\n};\n\n/** @internal */\nconst makeSemaphore = permits => sync(() => unsafeMakeSemaphore(permits));\n\n/** @internal */\nconst awaitAllChildren = self => ensuringChildren(self, fiberAwaitAll);\n\n/** @internal */\nconst cached = /*#__PURE__*/dual(2, (self, timeToLive) => map(cachedInvalidate(self, timeToLive), tuple => tuple[0]));\n\n/** @internal */\nconst cachedInvalidate = /*#__PURE__*/dual(2, (self, timeToLive) => {\n  const duration = decode(timeToLive);\n  return flatMap(context(), env => map(makeSynchronized(none()), cache => [provideContext(getCachedValue(self, duration, cache), env), invalidateCache(cache)]));\n});\n\n/** @internal */\nconst computeCachedValue = (self, timeToLive, start) => {\n  const timeToLiveMillis = toMillis(decode(timeToLive));\n  return pipe(deferredMake(), tap(deferred => intoDeferred(self, deferred)), map(deferred => some([start + timeToLiveMillis, deferred])));\n};\n\n/** @internal */\nconst getCachedValue = (self, timeToLive, cache) => uninterruptibleMask(restore => pipe(clockWith(clock => clock.currentTimeMillis), flatMap(time => updateSomeAndGetEffectSynchronized(cache, option => {\n  switch (option._tag) {\n    case \"None\":\n      {\n        return some(computeCachedValue(self, timeToLive, time));\n      }\n    case \"Some\":\n      {\n        const [end] = option.value;\n        return end - time <= 0 ? some(computeCachedValue(self, timeToLive, time)) : none();\n      }\n  }\n})), flatMap(option => isNone(option) ? dieMessage(\"BUG: Effect.cachedInvalidate - please report an issue at https://github.com/Effect-TS/io/issues\") : restore(deferredAwait(option.value[1])))));\n\n/** @internal */\nconst invalidateCache = cache => set(cache, none());\n\n/** @internal */\nconst ensuringChild = /*#__PURE__*/dual(2, (self, f) => ensuringChildren(self, children => f(fiberAll(children))));\n\n/** @internal */\nconst ensuringChildren = /*#__PURE__*/dual(2, (self, children) => flatMap(track, supervisor => pipe(supervised(self, supervisor), ensuring(flatMap(supervisor.value(), children)))));\n\n/** @internal */\n// @ts-expect-error\nconst forkAll = /*#__PURE__*/dual(args => isIterable(args[0]), (effects, options) => options?.discard ? forEachSequentialDiscard(effects, fork) : map(forEachSequential(effects, fork), fiberAll));\n\n/** @internal */\nconst forkIn = /*#__PURE__*/dual(2, (self, scope) => uninterruptibleMask(restore => flatMap(scope.fork(sequential), child => pipe(restore(self), onExit(exit => child.close(exit)), forkDaemon, tap(fiber => child.addFinalizer(() => fiberIdWith(fiberId => equals(fiberId, fiber.id()) ? unit : asUnit(interruptFiber(fiber)))))))));\n\n/** @internal */\nconst forkScoped = self => scopeWith(scope => forkIn(self, scope));\n\n/** @internal */\nconst fromFiber = fiber => join(fiber);\n\n/** @internal */\nconst fromFiberEffect = fiber => suspend(() => flatMap(fiber, join));\nconst memoKeySymbol = /*#__PURE__*/Symbol.for(\"effect/Effect/memoizeFunction.key\");\nclass Key {\n  [memoKeySymbol] = memoKeySymbol;\n  constructor(a, eq) {\n    this.a = a;\n    this.eq = eq;\n  }\n  [symbol](that) {\n    if (hasProperty(that, memoKeySymbol)) {\n      if (this.eq) {\n        return this.eq(this.a, that.a);\n      } else {\n        return equals(this.a, that.a);\n      }\n    }\n    return false;\n  }\n  [symbol$1]() {\n    return this.eq ? 0 : hash(this.a);\n  }\n}\n\n/** @internal */\nconst memoizeFunction = (f, eq) => {\n  return pipe(sync(() => empty()), flatMap(makeSynchronized), map(ref => a => pipe(ref.modifyEffect(map$1 => {\n    const result = pipe(map$1, get(new Key(a, eq)));\n    if (isNone(result)) {\n      return pipe(deferredMake(), tap(deferred => pipe(diffFiberRefs(f(a)), intoDeferred(deferred), fork)), map(deferred => [deferred, pipe(map$1, set$1(new Key(a, eq), deferred))]));\n    }\n    return succeed([result.value, map$1]);\n  }), flatMap(deferredAwait), flatMap(([patch, b]) => pipe(patchFiberRefs(patch), as(b))))));\n};\n\n/** @internal */\nconst raceFirst = /*#__PURE__*/dual(2, (self, that) => pipe(exit(self), race(exit(that)), effect => flatten(effect)));\n\n/** @internal */\nconst scheduleForked = /*#__PURE__*/dual(2, (self, schedule) => pipe(self, schedule_Effect(schedule), forkScoped));\n\n/** @internal */\nconst supervised = /*#__PURE__*/dual(2, (self, supervisor) => {\n  const supervise = fiberRefLocallyWith(currentSupervisor, s => s.zip(supervisor));\n  return supervise(self);\n});\n\n/** @internal */\nconst timeout = /*#__PURE__*/dual(2, (self, duration) => timeoutTo(self, {\n  onTimeout: none,\n  onSuccess: some,\n  duration\n}));\n\n/** @internal */\nconst timeoutFail = /*#__PURE__*/dual(2, (self, {\n  duration,\n  onTimeout\n}) => flatten(timeoutTo(self, {\n  onTimeout: () => failSync(onTimeout),\n  onSuccess: succeed,\n  duration\n})));\n\n/** @internal */\nconst timeoutFailCause = /*#__PURE__*/dual(2, (self, {\n  duration,\n  onTimeout\n}) => flatten(timeoutTo(self, {\n  onTimeout: () => failCauseSync(onTimeout),\n  onSuccess: succeed,\n  duration\n})));\n\n/** @internal */\nconst timeoutTo = /*#__PURE__*/dual(2, (self, {\n  duration,\n  onSuccess,\n  onTimeout\n}) => fiberIdWith(parentFiberId => raceFibersWith(self, interruptible(sleep(duration)), {\n  onSelfWin: (winner, loser) => flatMap(winner.await(), exit => {\n    if (exit._tag === \"Success\") {\n      return flatMap(winner.inheritAll(), () => as(interruptAsFiber(loser, parentFiberId), onSuccess(exit.value)));\n    } else {\n      return flatMap(interruptAsFiber(loser, parentFiberId), () => exitFailCause(exit.cause));\n    }\n  }),\n  onOtherWin: (winner, loser) => flatMap(winner.await(), exit => {\n    if (exit._tag === \"Success\") {\n      return flatMap(winner.inheritAll(), () => as(interruptAsFiber(loser, parentFiberId), onTimeout()));\n    } else {\n      return flatMap(interruptAsFiber(loser, parentFiberId), () => exitFailCause(exit.cause));\n    }\n  }),\n  otherScope: globalScope\n})));\n\n// circular with Synchronized\n\n/** @internal */\nconst SynchronizedSymbolKey = \"effect/Ref/SynchronizedRef\";\n\n/** @internal */\nconst SynchronizedTypeId = /*#__PURE__*/Symbol.for(SynchronizedSymbolKey);\n\n/** @internal */\nconst synchronizedVariance = {\n  _A: _ => _\n};\n\n/** @internal */\nclass SynchronizedImpl {\n  [SynchronizedTypeId] = synchronizedVariance;\n  [RefTypeId] = refVariance;\n  constructor(ref, withLock) {\n    this.ref = ref;\n    this.withLock = withLock;\n  }\n  modify(f) {\n    return this.modifyEffect(a => succeed(f(a)));\n  }\n  modifyEffect(f) {\n    return this.withLock(pipe(flatMap(get$1(this.ref), f), flatMap(([b, a]) => as(set(this.ref, a), b))));\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst makeSynchronized = value => sync(() => unsafeMakeSynchronized(value));\n\n/** @internal */\nconst unsafeMakeSynchronized = value => {\n  const ref = unsafeMake(value);\n  const sem = unsafeMakeSemaphore(1);\n  return new SynchronizedImpl(ref, sem.withPermits(1));\n};\n\n/** @internal */\nconst updateSomeAndGetEffectSynchronized = /*#__PURE__*/dual(2, (self, pf) => self.modifyEffect(value => {\n  const result = pf(value);\n  switch (result._tag) {\n    case \"None\":\n      {\n        return succeed([value, value]);\n      }\n    case \"Some\":\n      {\n        return map(result.value, a => [a, a]);\n      }\n  }\n}));\n\n// circular with Fiber\n\n/** @internal */\nconst zipFiber = /*#__PURE__*/dual(2, (self, that) => zipWithFiber(self, that, (a, b) => [a, b]));\n\n/** @internal */\nconst zipLeftFiber = /*#__PURE__*/dual(2, (self, that) => zipWithFiber(self, that, (a, _) => a));\n\n/** @internal */\nconst zipRightFiber = /*#__PURE__*/dual(2, (self, that) => zipWithFiber(self, that, (_, b) => b));\n\n/** @internal */\nconst zipWithFiber = /*#__PURE__*/dual(3, (self, that, f) => ({\n  [FiberTypeId]: fiberVariance,\n  id: () => pipe(self.id(), getOrElse(that.id())),\n  await: () => pipe(self.await(), flatten, zipWithOptions(flatten(that.await()), f, {\n    concurrent: true\n  }), exit),\n  children: () => self.children(),\n  inheritAll: () => zipRight(that.inheritAll(), self.inheritAll()),\n  poll: () => zipWith(self.poll(), that.poll(), (optionA, optionB) => pipe(optionA, flatMap$1(exitA => pipe(optionB, map$1(exitB => zipWith$1(exitA, exitB, {\n    onSuccess: f,\n    onFailure: parallel\n  })))))),\n  interruptAsFork: id => zipRight(self.interruptAsFork(id), that.interruptAsFork(id)),\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}));\n\nexport { SynchronizedTypeId, awaitAllChildren, cached, cachedInvalidate, ensuringChild, ensuringChildren, forkAll, forkIn, forkScoped, fromFiber, fromFiberEffect, makeSemaphore, makeSynchronized, memoizeFunction, raceFirst, scheduleForked, supervised, synchronizedVariance, timeout, timeoutFail, timeoutFailCause, timeoutTo, unsafeMakeSemaphore, unsafeMakeSynchronized, updateSomeAndGetEffectSynchronized, zipFiber, zipLeftFiber, zipRightFiber, zipWithFiber };\n","/** @internal */\nconst OP_EXTEND_SCOPE = \"ExtendScope\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FOLD = \"Fold\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FRESH = \"Fresh\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FROM_EFFECT = \"FromEffect\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SCOPED = \"Scoped\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SUSPEND = \"Suspend\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PROVIDE_TO = \"ProvideTo\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ZIP_WITH = \"ZipWith\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ZIP_WITH_PAR = \"ZipWithPar\";\n\n/** @internal */\n\nexport { OP_EXTEND_SCOPE, OP_FOLD, OP_FRESH, OP_FROM_EFFECT, OP_PROVIDE_TO, OP_SCOPED, OP_SUSPEND, OP_ZIP_WITH, OP_ZIP_WITH_PAR };\n","import { interruptFiber, interruptAsFiber } from '../../internal/core.esm.js';\nimport { zipFiber, zipLeftFiber, zipRightFiber, zipWithFiber } from '../../internal/effect/circular.esm.js';\nimport { FiberTypeId as FiberTypeId$1, RuntimeFiberTypeId as RuntimeFiberTypeId$1, Order as Order$1, isFiber as isFiber$1, isRuntimeFiber as isRuntimeFiber$1, id as id$1, _await as _await$1, children as children$1, done as done$1, dump as dump$1, dumpAll as dumpAll$1, fail as fail$1, failCause as failCause$1, fromEffect as fromEffect$1, getCurrentFiber as getCurrentFiber$1, inheritAll as inheritAll$1, interrupted as interrupted$1, interruptAsFork as interruptAsFork$1, interruptAll as interruptAll$1, interruptAllAs as interruptAllAs$1, join as join$1, map as map$1, mapEffect as mapEffect$1, mapFiber as mapFiber$1, match as match$1, never as never$1, orElse as orElse$1, orElseEither as orElseEither$1, poll as poll$1, pretty as pretty$1, roots as roots$1, unsafeRoots as unsafeRoots$1, status as status$1, succeed as succeed$1, unit as unit$1 } from '../../internal/fiber.esm.js';\nimport { fiberAwaitAll, fiberAll, fiberInterruptFork, fiberJoinAll, fiberScoped } from '../../internal/fiberRuntime.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst FiberTypeId = FiberTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst RuntimeFiberTypeId = RuntimeFiberTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * A fiber is a lightweight thread of execution that never consumes more than a\n * whole thread (but may consume much less, depending on contention and\n * asynchronicity). Fibers are spawned by forking effects, which run\n * concurrently with the parent effect.\n *\n * Fibers can be joined, yielding their result to other fibers, or interrupted,\n * which terminates the fiber, safely releasing all resources.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * A runtime fiber that is executing an effect. Runtime fibers have an\n * identity and a trace.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category instances\n */\nconst Order = Order$1;\n\n/**\n * Returns `true` if the specified value is a `Fiber`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isFiber = isFiber$1;\n\n/**\n * Returns `true` if the specified `Fiber` is a `RuntimeFiber`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isRuntimeFiber = isRuntimeFiber$1;\n\n/**\n * The identity of the fiber.\n *\n * @since 2.0.0\n * @category getters\n */\nconst id = id$1;\nconst _await = _await$1;\n\n/**\n * Awaits on all fibers to be completed, successfully or not.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst awaitAll = fiberAwaitAll;\n\n/**\n * Retrieves the immediate children of the fiber.\n *\n * @since 2.0.0\n * @category getters\n */\nconst children = children$1;\n\n/**\n * Collects all fibers into a single fiber producing an in-order list of the\n * results.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst all = fiberAll;\n\n/**\n * A fiber that is done with the specified `Exit` value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst done = done$1;\n\n/**\n * @since 2.0.0\n * @category destructors\n */\nconst dump = dump$1;\n\n/**\n * @since 2.0.0\n * @category destructors\n */\nconst dumpAll = dumpAll$1;\n\n/**\n * A fiber that has already failed with the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fail = fail$1;\n\n/**\n * Creates a `Fiber` that has already failed with the specified cause.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst failCause = failCause$1;\n\n/**\n * Lifts an `Effect` into a `Fiber`.\n *\n * @since 2.0.0\n * @category conversions\n */\nconst fromEffect = fromEffect$1;\n\n/**\n * Gets the current fiber if one is running.\n *\n * @since 2.0.0\n * @category utilities\n */\nconst getCurrentFiber = getCurrentFiber$1;\n\n/**\n * Inherits values from all `FiberRef` instances into current fiber. This\n * will resume immediately.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst inheritAll = inheritAll$1;\n\n/**\n * Interrupts the fiber from whichever fiber is calling this method. If the\n * fiber has already exited, the returned effect will resume immediately.\n * Otherwise, the effect will resume when the fiber exits.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst interrupt = interruptFiber;\n\n/**\n * Constructrs a `Fiber` that is already interrupted.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst interrupted = interrupted$1;\n\n/**\n * Interrupts the fiber as if interrupted from the specified fiber. If the\n * fiber has already exited, the returned effect will resume immediately.\n * Otherwise, the effect will resume when the fiber exits.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst interruptAs = interruptAsFiber;\n\n/**\n * Interrupts the fiber as if interrupted from the specified fiber. If the\n * fiber has already exited, the returned effect will resume immediately.\n * Otherwise, the effect will resume when the fiber exits.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst interruptAsFork = interruptAsFork$1;\n\n/**\n * Interrupts all fibers, awaiting their interruption.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst interruptAll = interruptAll$1;\n\n/**\n * Interrupts all fibers as by the specified fiber, awaiting their\n * interruption.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst interruptAllAs = interruptAllAs$1;\n\n/**\n * Interrupts the fiber from whichever fiber is calling this method. The\n * interruption will happen in a separate daemon fiber, and the returned\n * effect will always resume immediately without waiting.\n *\n * @since 2.0.0\n * @category interruption\n */\nconst interruptFork = fiberInterruptFork;\n\n/**\n * Joins the fiber, which suspends the joining fiber until the result of the\n * fiber has been determined. Attempting to join a fiber that has erred will\n * result in a catchable error. Joining an interrupted fiber will result in an\n * \"inner interruption\" of this fiber, unlike interruption triggered by\n * another fiber, \"inner interruption\" can be caught and recovered.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst join = join$1;\n\n/**\n * Joins all fibers, awaiting their _successful_ completion. Attempting to\n * join a fiber that has erred will result in a catchable error, _if_ that\n * error does not result from interruption.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst joinAll = fiberJoinAll;\n\n/**\n * Maps over the value the Fiber computes.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = map$1;\n\n/**\n * Effectually maps over the value the fiber computes.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapEffect = mapEffect$1;\n\n/**\n * Passes the success of this fiber to the specified callback, and continues\n * with the fiber that it returns.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapFiber = mapFiber$1;\n\n/**\n * Folds over the `Fiber` or `RuntimeFiber`.\n *\n * @since 2.0.0\n * @category folding\n */\nconst match = match$1;\n\n/**\n * A fiber that never fails or succeeds.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst never = never$1;\n\n/**\n * Returns a fiber that prefers `this` fiber, but falls back to the `that` one\n * when `this` one fails. Interrupting the returned fiber will interrupt both\n * fibers, sequentially, from left to right.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst orElse = orElse$1;\n\n/**\n * Returns a fiber that prefers `this` fiber, but falls back to the `that` one\n * when `this` one fails. Interrupting the returned fiber will interrupt both\n * fibers, sequentially, from left to right.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst orElseEither = orElseEither$1;\n\n/**\n * Tentatively observes the fiber, but returns immediately if it is not\n * already done.\n *\n * @since 2.0.0\n * @category getters\n */\nconst poll = poll$1;\n\n/**\n * Pretty-prints a `RuntimeFiber`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst pretty = pretty$1;\n\n/**\n * Returns a chunk containing all root fibers.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst roots = roots$1;\n\n/**\n * Returns a chunk containing all root fibers.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unsafeRoots = unsafeRoots$1;\n\n/**\n * Converts this fiber into a scoped effect. The fiber is interrupted when the\n * scope is closed.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst scoped = fiberScoped;\n\n/**\n * Returns the `FiberStatus` of a `RuntimeFiber`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst status = status$1;\n\n/**\n * Returns a fiber that has already succeeded with the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeed = succeed$1;\n\n/**\n * A fiber that has already succeeded with unit.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unit = unit$1;\n\n/**\n * Zips this fiber and the specified fiber together, producing a tuple of\n * their output.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zip = zipFiber;\n\n/**\n * Same as `zip` but discards the output of that `Fiber`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipLeft = zipLeftFiber;\n\n/**\n * Same as `zip` but discards the output of this `Fiber`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipRight = zipRightFiber;\n\n/**\n * Zips this fiber with the specified fiber, combining their results using the\n * specified combiner function. Both joins and interruptions are performed in\n * sequential order from left to right.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWith = zipWithFiber;\n\nexport { FiberTypeId, Order, RuntimeFiberTypeId, all, _await as await, awaitAll, children, done, dump, dumpAll, fail, failCause, fromEffect, getCurrentFiber, id, inheritAll, interrupt, interruptAll, interruptAllAs, interruptAs, interruptAsFork, interruptFork, interrupted, isFiber, isRuntimeFiber, join, joinAll, map, mapEffect, mapFiber, match, never, orElse, orElseEither, poll, pretty, roots, scoped, status, succeed, unit, unsafeRoots, zip, zipLeft, zipRight, zipWith };\n","import { empty } from '../Context/dist/effect-Context.esm.js';\nimport { flatten } from '../Exit/dist/effect-Exit.esm.js';\nimport { interruptAs } from '../Fiber/dist/effect-Fiber.esm.js';\nimport { unsafeMake, none as none$2 } from '../FiberId/dist/effect-FiberId.esm.js';\nimport { updatedAs, forkAs, empty as empty$1 } from '../FiberRefs/dist/effect-FiberRefs.esm.js';\nimport { pipe } from '../Function/dist/effect-Function.esm.js';\nimport { toString, NodeInspectSymbol } from '../Inspectable/dist/effect-Inspectable.esm.js';\nimport { prettyErrors, pretty, NoSuchElementException } from './cause.esm.js';\nimport { currentContext, withFiberRuntime, flatMap, deferredMake, uninterruptibleMask, zipRight, catchAllCause, intoDeferred, deferredFailCause, deferredAwait, exitFail, exitSucceed, succeed } from './core.esm.js';\nimport { FiberRuntime, fork } from './fiberRuntime.esm.js';\nimport { globalScope } from './fiberScope.esm.js';\nimport { OP_FAILURE, OP_SUCCESS } from './opCodes/effect.esm.js';\nimport { make as make$1, RuntimeMetrics, CooperativeYielding, Interruption } from './runtimeFlags.esm.js';\nimport { none } from './supervisor.esm.js';\nimport { none as none$1 } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { isTagged, hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { currentScheduler, SyncScheduler } from '../Scheduler/dist/effect-Scheduler.esm.js';\n\n/** @internal */\nconst unsafeFork = runtime => (self, options) => {\n  const fiberId = unsafeMake();\n  const effect = self;\n  let fiberRefs = updatedAs(runtime.fiberRefs, {\n    fiberId,\n    fiberRef: currentContext,\n    value: runtime.context\n  });\n  if (options?.scheduler) {\n    fiberRefs = updatedAs(fiberRefs, {\n      fiberId,\n      fiberRef: currentScheduler,\n      value: options.scheduler\n    });\n  }\n  if (options?.updateRefs) {\n    fiberRefs = options.updateRefs(fiberRefs, fiberId);\n  }\n  const fiberRuntime = new FiberRuntime(fiberId, forkAs(fiberRefs, fiberId), runtime.runtimeFlags);\n  const supervisor = fiberRuntime._supervisor;\n\n  // we can compare by reference here as _supervisor.none is wrapped with globalValue\n  if (supervisor !== none) {\n    supervisor.onStart(runtime.context, effect, none$1(), fiberRuntime);\n    fiberRuntime.addObserver(exit => supervisor.onEnd(exit, fiberRuntime));\n  }\n  globalScope.add(runtime.runtimeFlags, fiberRuntime);\n  fiberRuntime.start(effect);\n  return fiberRuntime;\n};\n\n/** @internal */\nconst unsafeRunCallback = runtime => (effect, onExit) => {\n  const fiberRuntime = unsafeFork(runtime)(effect);\n  if (onExit) {\n    fiberRuntime.addObserver(exit => {\n      onExit(exit);\n    });\n  }\n  return (id, onExitInterrupt) => unsafeRunCallback(runtime)(pipe(fiberRuntime, interruptAs(id ?? none$2)), onExitInterrupt ? exit => onExitInterrupt(flatten(exit)) : void 0);\n};\n\n/** @internal */\nconst unsafeRunSync = runtime => effect => {\n  const result = unsafeRunSyncExit(runtime)(effect);\n  if (result._tag === \"Failure\") {\n    throw fiberFailure(result.i0);\n  } else {\n    return result.i0;\n  }\n};\n\n/** @internal */\nconst asyncFiberException = fiber => {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 0;\n  const error = new Error();\n  Error.stackTraceLimit = limit;\n  const message = `Fiber #${fiber.id().id} cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work`;\n  const _tag = \"AsyncFiberException\";\n  Object.defineProperties(error, {\n    _tag: {\n      value: _tag\n    },\n    fiber: {\n      value: fiber\n    },\n    message: {\n      value: message\n    },\n    name: {\n      value: _tag\n    },\n    toString: {\n      get() {\n        return () => message;\n      }\n    },\n    [NodeInspectSymbol]: {\n      get() {\n        return () => message;\n      }\n    }\n  });\n  return error;\n};\n\n/** @internal */\nconst isAsyncFiberException = u => isTagged(u, \"AsyncFiberException\") && \"fiber\" in u;\n\n/** @internal */\nconst FiberFailureId = /*#__PURE__*/Symbol.for(\"effect/Runtime/FiberFailure\");\n/** @internal */\nconst FiberFailureCauseId = /*#__PURE__*/Symbol.for(\"effect/Runtime/FiberFailure/Cause\");\n/** @internal */\nconst fiberFailure = cause => {\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 0;\n  const error = new Error();\n  Error.stackTraceLimit = limit;\n  const prettyErrors$1 = prettyErrors(cause);\n  if (prettyErrors$1.length > 0) {\n    const head = prettyErrors$1[0];\n    error.name = head.message.split(\":\")[0];\n    error.message = head.message.substring(error.name.length + 2);\n    error.stack = pretty(cause);\n  }\n  error[FiberFailureId] = FiberFailureId;\n  error[FiberFailureCauseId] = cause;\n  error.toJSON = () => {\n    return {\n      _id: \"FiberFailure\",\n      cause: cause.toJSON()\n    };\n  };\n  error.toString = () => {\n    return toString(error.toJSON());\n  };\n  error[NodeInspectSymbol] = () => {\n    return error.toJSON();\n  };\n  return error;\n};\n\n/** @internal */\nconst isFiberFailure = u => hasProperty(u, FiberFailureId);\nconst fastPath = effect => {\n  const op = effect;\n  switch (op._op) {\n    case \"Failure\":\n    case \"Success\":\n      {\n        // @ts-expect-error\n        return op;\n      }\n    case \"Left\":\n      {\n        return exitFail(op.left);\n      }\n    case \"Right\":\n      {\n        return exitSucceed(op.right);\n      }\n    case \"Some\":\n      {\n        return exitSucceed(op.value);\n      }\n    case \"None\":\n      {\n        // @ts-expect-error\n        return exitFail(NoSuchElementException());\n      }\n  }\n};\n\n/** @internal */\nconst unsafeRunSyncExit = runtime => effect => {\n  const op = fastPath(effect);\n  if (op) {\n    return op;\n  }\n  const scheduler = new SyncScheduler();\n  const fiberRuntime = unsafeFork(runtime)(effect, {\n    scheduler\n  });\n  scheduler.flush();\n  const result = fiberRuntime.unsafePoll();\n  if (result) {\n    return result;\n  }\n  throw asyncFiberException(fiberRuntime);\n};\n\n/** @internal */\nconst unsafeRunPromise = runtime => effect => unsafeRunPromiseExit(runtime)(effect).then(result => {\n  switch (result._tag) {\n    case OP_SUCCESS:\n      {\n        return result.i0;\n      }\n    case OP_FAILURE:\n      {\n        throw fiberFailure(result.i0);\n      }\n  }\n});\n\n/** @internal */\nconst unsafeRunPromiseExit = runtime => effect => new Promise(resolve => {\n  const op = fastPath(effect);\n  if (op) {\n    resolve(op);\n  }\n  unsafeFork(runtime)(effect).addObserver(exit => {\n    resolve(exit);\n  });\n});\n\n/** @internal */\nclass RuntimeImpl {\n  constructor(context, runtimeFlags, fiberRefs) {\n    this.context = context;\n    this.runtimeFlags = runtimeFlags;\n    this.fiberRefs = fiberRefs;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst make = options => new RuntimeImpl(options.context, options.runtimeFlags, options.fiberRefs);\n\n/** @internal */\nconst runtime = () => withFiberRuntime((state, status) => succeed(new RuntimeImpl(state.getFiberRef(currentContext), status.runtimeFlags, state.getFiberRefs())));\n\n/** @internal */\nconst defaultRuntimeFlags = /*#__PURE__*/make$1(Interruption, CooperativeYielding, RuntimeMetrics);\n\n/** @internal */\nconst defaultRuntime = /*#__PURE__*/make({\n  context: /*#__PURE__*/empty(),\n  runtimeFlags: defaultRuntimeFlags,\n  fiberRefs: /*#__PURE__*/empty$1()\n});\n\n/** @internal */\nconst unsafeRunEffect = /*#__PURE__*/unsafeRunCallback(defaultRuntime);\n\n/** @internal */\nconst unsafeForkEffect = /*#__PURE__*/unsafeFork(defaultRuntime);\n\n/** @internal */\nconst unsafeRunPromiseEffect = /*#__PURE__*/unsafeRunPromise(defaultRuntime);\n\n/** @internal */\nconst unsafeRunPromiseExitEffect = /*#__PURE__*/unsafeRunPromiseExit(defaultRuntime);\n\n/** @internal */\nconst unsafeRunSyncEffect = /*#__PURE__*/unsafeRunSync(defaultRuntime);\n\n/** @internal */\nconst unsafeRunSyncExitEffect = /*#__PURE__*/unsafeRunSyncExit(defaultRuntime);\n\n// circular with Effect\n\n/** @internal */\nconst asyncEffect = register => flatMap(deferredMake(), deferred => flatMap(runtime(), runtime => uninterruptibleMask(restore => zipRight(fork(restore(catchAllCause(register(cb => unsafeRunCallback(runtime)(intoDeferred(cb, deferred))), cause => deferredFailCause(deferred, cause)))), restore(deferredAwait(deferred))))));\n\nexport { FiberFailureCauseId, FiberFailureId, RuntimeImpl, asyncEffect, defaultRuntime, defaultRuntimeFlags, fiberFailure, isAsyncFiberException, isFiberFailure, make, runtime, unsafeFork, unsafeForkEffect, unsafeRunCallback, unsafeRunEffect, unsafeRunPromise, unsafeRunPromiseEffect, unsafeRunPromiseExit, unsafeRunPromiseExitEffect, unsafeRunSync, unsafeRunSyncEffect, unsafeRunSyncExit, unsafeRunSyncExitEffect };\n","import { dual, pipe } from '../Function/dist/effect-Function.esm.js';\nimport { map, succeed } from './core.esm.js';\nimport { getOrElse } from '../Option/dist/effect-Option.esm.js';\n\n/** @internal */\nconst getAndUpdateEffect = /*#__PURE__*/dual(2, (self, f) => self.modifyEffect(value => map(f(value), result => [value, result])));\n\n/** @internal */\nconst getAndUpdateSomeEffect = /*#__PURE__*/dual(2, (self, pf) => self.modifyEffect(value => {\n  const result = pf(value);\n  switch (result._tag) {\n    case \"None\":\n      {\n        return succeed([value, value]);\n      }\n    case \"Some\":\n      {\n        return map(result.value, newValue => [value, newValue]);\n      }\n  }\n}));\n\n/** @internal */\nconst modify = /*#__PURE__*/dual(2, (self, f) => self.modify(f));\n\n/** @internal */\nconst modifyEffect = /*#__PURE__*/dual(2, (self, f) => self.modifyEffect(f));\n\n/** @internal */\nconst modifySomeEffect = /*#__PURE__*/dual(3, (self, fallback, pf) => self.modifyEffect(value => pipe(pf(value), getOrElse(() => succeed([fallback, value])))));\n\n/** @internal */\nconst updateEffect = /*#__PURE__*/dual(2, (self, f) => self.modifyEffect(value => map(f(value), result => [undefined, result])));\n\n/** @internal */\nconst updateAndGetEffect = /*#__PURE__*/dual(2, (self, f) => self.modifyEffect(value => map(f(value), result => [result, result])));\n\n/** @internal */\nconst updateSomeEffect = /*#__PURE__*/dual(2, (self, pf) => self.modifyEffect(value => {\n  const result = pf(value);\n  switch (result._tag) {\n    case \"None\":\n      {\n        return succeed([void 0, value]);\n      }\n    case \"Some\":\n      {\n        return map(result.value, a => [void 0, a]);\n      }\n  }\n}));\n\nexport { getAndUpdateEffect, getAndUpdateSomeEffect, modify, modifyEffect, modifySomeEffect, updateAndGetEffect, updateEffect, updateSomeEffect };\n","import { ScopeTypeId as ScopeTypeId$1, CloseableScopeTypeId as CloseableScopeTypeId$1, scopeAddFinalizer, scopeAddFinalizerExit, scopeClose, scopeFork } from '../../internal/core.esm.js';\nimport { scopeTag, scopeExtend, scopeUse, scopeMake } from '../../internal/fiberRuntime.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst ScopeTypeId = ScopeTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst CloseableScopeTypeId = CloseableScopeTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst Scope = scopeTag;\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Adds a finalizer to this scope. The finalizer is guaranteed to be run when\n * the scope is closed.\n *\n * @since 2.0.0\n * @category utils\n */\nconst addFinalizer = scopeAddFinalizer;\n\n/**\n * A simplified version of `addFinalizerWith` when the `finalizer` does not\n * depend on the `Exit` value that the scope is closed with.\n *\n * @since 2.0.0\n * @category utils\n */\nconst addFinalizerExit = scopeAddFinalizerExit;\n\n/**\n * Closes a scope with the specified exit value, running all finalizers that\n * have been added to the scope.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst close = scopeClose;\n\n/**\n * Extends the scope of an `Effect` workflow that needs a scope into this\n * scope by providing it to the workflow but not closing the scope when the\n * workflow completes execution. This allows extending a scoped value into a\n * larger scope.\n *\n * @since 2.0.0\n * @category utils\n */\nconst extend = scopeExtend;\n\n/**\n * Forks a new scope that is a child of this scope. The child scope will\n * automatically be closed when this scope is closed.\n *\n * @since 2.0.0\n * @category utils\n */\nconst fork = scopeFork;\n\n/**\n * Uses the scope by providing it to an `Effect` workflow that needs a scope,\n * guaranteeing that the scope is closed with the result of that workflow as\n * soon as the workflow completes execution, whether by success, failure, or\n * interruption.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst use = scopeUse;\n\n/**\n * Creates a Scope where Finalizers will run according to the `ExecutionStrategy`.\n *\n * If an ExecutionStrategy is not provided `sequential` will be used.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = scopeMake;\n\nexport { CloseableScopeTypeId, Scope, ScopeTypeId, addFinalizer, addFinalizerExit, close, extend, fork, make, use };\n","import { die as die$1, fail as fail$1, failureOrCause } from '../Cause/dist/effect-Cause.esm.js';\nimport { sleep, currentTimeMillis } from '../Clock/dist/effect-Clock.esm.js';\nimport { empty, get, isTag, make, merge as merge$1, unsafeGet, Tag, isContext } from '../Context/dist/effect-Context.esm.js';\nimport { millis } from '../Duration/dist/effect-Duration.esm.js';\nimport { diff as diff$1 } from '../FiberRefsPatch/dist/effect-FiberRefsPatch.esm.js';\nimport { dual, pipe } from '../Function/dist/effect-Function.esm.js';\nimport { flatMap as flatMap$1, sync as sync$1, zipWith, provideContext, matchCauseEffect, failCause as failCause$1, failCauseSync as failCauseSync$1, map as map$1, fiberRefLocally as fiberRefLocally$1, fiberRefLocallyWith as fiberRefLocallyWith$1, zipRight, never, as, succeed as succeed$1, fail as fail$2, tap as tap$1, provideSomeContext, context as context$1, acquireUseRelease, scopeClose, updateRuntimeFlags, flatten as flatten$1, onExit, exitMatch, unit, scopeAddFinalizerExit, deferredMake, uninterruptibleMask, exit, whenEffect, asUnit, deferredSucceed, deferredFailCause, deferredAwait, exitMatchEffect } from './core.esm.js';\nimport { memoize as memoize$1, patchFiberRefs, diffFiberRefs } from './core-effect.esm.js';\nimport { makeSynchronized } from './effect/circular.esm.js';\nimport { scopeWith, zipWithOptions, scopeExtend, fiberRefLocallyScoped as fiberRefLocallyScoped$1, fiberRefLocallyScopedWith as fiberRefLocallyScopedWith$1, scopedEffect, acquireRelease, scopeMake, makeSpanScoped, addFinalizer } from './fiberRuntime.esm.js';\nimport { OP_SUCCESS, OP_FAILURE } from './opCodes/effect.esm.js';\nimport { OP_FRESH, OP_EXTEND_SCOPE, OP_FROM_EFFECT, OP_FOLD, OP_ZIP_WITH, OP_SCOPED, OP_SUSPEND, OP_PROVIDE_TO, OP_ZIP_WITH_PAR } from './opCodes/layer.esm.js';\nimport { make as make$1, set, modify, update, get as get$1 } from './ref.esm.js';\nimport { runtime, defaultRuntime } from './runtime.esm.js';\nimport { modifyEffect } from './synchronizedRef.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { isDone } from '../ScheduleDecision/dist/effect-ScheduleDecision.esm.js';\nimport { start } from '../ScheduleIntervals/dist/effect-ScheduleIntervals.esm.js';\nimport { Scope } from '../Scope/dist/effect-Scope.esm.js';\nimport { diff } from './runtimeFlags.esm.js';\nimport { spanTag } from './tracer.esm.js';\n\n/** @internal */\nconst LayerSymbolKey = \"effect/Layer\";\n\n/** @internal */\nconst LayerTypeId = /*#__PURE__*/Symbol.for(LayerSymbolKey);\n\n/** @internal */\nconst layerVariance = {\n  _RIn: _ => _,\n  _E: _ => _,\n  _ROut: _ => _\n};\n\n/** @internal */\nconst proto = {\n  [LayerTypeId]: layerVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst isLayer = u => hasProperty(u, LayerTypeId);\n\n/** @internal */\nconst isFresh = self => {\n  return self._tag === OP_FRESH;\n};\n\n// -----------------------------------------------------------------------------\n// MemoMap\n// -----------------------------------------------------------------------------\n\n/** @internal */\nclass MemoMap {\n  constructor(ref) {\n    this.ref = ref;\n  }\n\n  /**\n   * Checks the memo map to see if a layer exists. If it is, immediately\n   * returns it. Otherwise, obtains the layer, stores it in the memo map,\n   * and adds a finalizer to the `Scope`.\n   */\n  getOrElseMemoize(layer, scope) {\n    return pipe(modifyEffect(this.ref, map => {\n      const inMap = map.get(layer);\n      if (inMap !== undefined) {\n        const [acquire, release] = inMap;\n        const cached = pipe(acquire, flatMap$1(([patch, b]) => pipe(patchFiberRefs(patch), as(b))), onExit(exitMatch({\n          onFailure: () => unit,\n          onSuccess: () => scopeAddFinalizerExit(scope, release)\n        })));\n        return succeed$1([cached, map]);\n      }\n      return pipe(make$1(0), flatMap$1(observers => pipe(deferredMake(), flatMap$1(deferred => pipe(make$1(() => unit), map$1(finalizerRef => {\n        const resource = uninterruptibleMask(restore => pipe(scopeMake(), flatMap$1(innerScope => pipe(restore(flatMap$1(withScope(layer, innerScope), f => diffFiberRefs(f(this)))), exit, flatMap$1(exit => {\n          switch (exit._tag) {\n            case OP_FAILURE:\n              {\n                return pipe(deferredFailCause(deferred, exit.i0), zipRight(scopeClose(innerScope, exit)), zipRight(failCause$1(exit.i0)));\n              }\n            case OP_SUCCESS:\n              {\n                return pipe(set(finalizerRef, exit => pipe(scopeClose(innerScope, exit), whenEffect(modify(observers, n => [n === 1, n - 1])), asUnit)), zipRight(update(observers, n => n + 1)), zipRight(scopeAddFinalizerExit(scope, exit => pipe(get$1(finalizerRef), flatMap$1(finalizer => finalizer(exit))))), zipRight(deferredSucceed(deferred, exit.i0)), as(exit.i0[1]));\n              }\n          }\n        })))));\n        const memoized = [pipe(deferredAwait(deferred), onExit(exitMatchEffect({\n          onFailure: () => unit,\n          onSuccess: () => update(observers, n => n + 1)\n        }))), exit => pipe(get$1(finalizerRef), flatMap$1(finalizer => finalizer(exit)))];\n        return [resource, isFresh(layer) ? map : map.set(layer, memoized)];\n      }))))));\n    }), flatten$1);\n  }\n}\nconst makeMemoMap = () => map$1(makeSynchronized(new Map()), ref => new MemoMap(ref));\n\n/** @internal */\nconst build = self => scopeWith(scope => buildWithScope(self, scope));\n\n/** @internal */\nconst buildWithScope = /*#__PURE__*/dual(2, (self, scope) => flatMap$1(makeMemoMap(), memoMap => flatMap$1(withScope(self, scope), run => run(memoMap))));\nconst withScope = (self, scope) => {\n  const op = self;\n  switch (op._tag) {\n    case \"Locally\":\n      {\n        return sync$1(() => memoMap => op.f(memoMap.getOrElseMemoize(op.self, scope)));\n      }\n    case \"ExtendScope\":\n      {\n        return sync$1(() => memoMap => scopeWith(scope => memoMap.getOrElseMemoize(op.layer, scope)));\n      }\n    case \"Fold\":\n      {\n        return sync$1(() => memoMap => pipe(memoMap.getOrElseMemoize(op.layer, scope), matchCauseEffect({\n          onFailure: cause => memoMap.getOrElseMemoize(op.failureK(cause), scope),\n          onSuccess: value => memoMap.getOrElseMemoize(op.successK(value), scope)\n        })));\n      }\n    case \"Fresh\":\n      {\n        return sync$1(() => _ => pipe(op.layer, buildWithScope(scope)));\n      }\n    case \"FromEffect\":\n      {\n        return sync$1(() => _ => op.effect);\n      }\n    case \"ProvideTo\":\n      {\n        return sync$1(() => memoMap => pipe(memoMap.getOrElseMemoize(op.first, scope), flatMap$1(env => pipe(memoMap.getOrElseMemoize(op.second, scope), provideContext(env)))));\n      }\n    case \"Scoped\":\n      {\n        return sync$1(() => _ => scopeExtend(op.effect, scope));\n      }\n    case \"Suspend\":\n      {\n        return sync$1(() => memoMap => memoMap.getOrElseMemoize(op.evaluate(), scope));\n      }\n    case \"ZipWith\":\n      {\n        return sync$1(() => memoMap => pipe(memoMap.getOrElseMemoize(op.first, scope), zipWith(memoMap.getOrElseMemoize(op.second, scope), op.zipK)));\n      }\n    case \"ZipWithPar\":\n      {\n        return sync$1(() => memoMap => pipe(memoMap.getOrElseMemoize(op.first, scope), zipWithOptions(memoMap.getOrElseMemoize(op.second, scope), op.zipK, {\n          concurrent: true\n        })));\n      }\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Layer\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst catchAll = /*#__PURE__*/dual(2, (self, onFailure) => match(self, {\n  onFailure,\n  onSuccess: succeedContext\n}));\n\n/** @internal */\nconst catchAllCause = /*#__PURE__*/dual(2, (self, onFailure) => matchCause(self, {\n  onFailure,\n  onSuccess: succeedContext\n}));\n\n/** @internal */\nconst die = defect => failCause(die$1(defect));\n\n/** @internal */\nconst dieSync = evaluate => failCauseSync(() => die$1(evaluate()));\n\n/** @internal */\nconst discard = self => map(self, () => empty());\n\n/** @internal */\nconst context = () => fromEffectContext(context$1());\n\n/** @internal */\nconst extendScope = self => {\n  const extendScope = Object.create(proto);\n  extendScope._tag = OP_EXTEND_SCOPE;\n  extendScope.layer = self;\n  return extendScope;\n};\n\n/** @internal */\nconst fail = error => failCause(fail$1(error));\n\n/** @internal */\nconst failSync = evaluate => failCauseSync(() => fail$1(evaluate()));\n\n/** @internal */\nconst failCause = cause => fromEffectContext(failCause$1(cause));\n\n/** @internal */\nconst failCauseSync = evaluate => fromEffectContext(failCauseSync$1(evaluate));\n\n/** @internal */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => match(self, {\n  onFailure: fail,\n  onSuccess: f\n}));\n\n/** @internal */\nconst flatten = /*#__PURE__*/dual(2, (self, tag) => flatMap(self, get(tag)));\n\n/** @internal */\nconst fresh = self => {\n  const fresh = Object.create(proto);\n  fresh._tag = OP_FRESH;\n  fresh.layer = self;\n  return fresh;\n};\n\n/** @internal */\nconst fromEffect = /*#__PURE__*/dual(2, (a, b) => {\n  const tagFirst = isTag(a);\n  const tag = tagFirst ? a : b;\n  const effect = tagFirst ? b : a;\n  return fromEffectContext(map$1(effect, service => make(tag, service)));\n});\n\n/** @internal */\nconst fromEffectDiscard = effect => fromEffectContext(map$1(effect, () => empty()));\n\n/** @internal */\nfunction fromEffectContext(effect) {\n  const fromEffect = Object.create(proto);\n  fromEffect._tag = OP_FROM_EFFECT;\n  fromEffect.effect = effect;\n  return fromEffect;\n}\n\n/** @internal */\nconst fiberRefLocally = /*#__PURE__*/dual(3, (self, ref, value) => locallyEffect(self, fiberRefLocally$1(ref, value)));\n\n/** @internal */\nconst locallyEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const locally = Object.create(proto);\n  locally._tag = \"Locally\";\n  locally.self = self;\n  locally.f = f;\n  return locally;\n});\n\n/** @internal */\nconst fiberRefLocallyWith = /*#__PURE__*/dual(3, (self, ref, value) => locallyEffect(self, fiberRefLocallyWith$1(ref, value)));\n\n/** @internal */\nconst fiberRefLocallyScoped = (self, value) => scopedDiscard(fiberRefLocallyScoped$1(self, value));\n\n/** @internal */\nconst fiberRefLocallyScopedWith = (self, value) => scopedDiscard(fiberRefLocallyScopedWith$1(self, value));\n\n/** @internal */\nconst fromFunction = (tagA, tagB, f) => fromEffectContext(map$1(tagA, a => make(tagB, f(a))));\n\n/** @internal */\nconst launch = self => scopedEffect(zipRight(scopeWith(scope => pipe(self, buildWithScope(scope))), never));\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => flatMap(self, context => succeedContext(f(context))));\n\n/** @internal */\nconst mapError = /*#__PURE__*/dual(2, (self, f) => catchAll(self, error => failSync(() => f(error))));\n\n/** @internal */\nconst matchCause = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => {\n  const fold = Object.create(proto);\n  fold._tag = OP_FOLD;\n  fold.layer = self;\n  fold.failureK = onFailure;\n  fold.successK = onSuccess;\n  return fold;\n});\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => matchCause(self, {\n  onFailure: cause => {\n    const failureOrCause$1 = failureOrCause(cause);\n    switch (failureOrCause$1._tag) {\n      case \"Left\":\n        {\n          return onFailure(failureOrCause$1.left);\n        }\n      case \"Right\":\n        {\n          return failCause(failureOrCause$1.right);\n        }\n    }\n  },\n  onSuccess\n}));\n\n/** @internal */\nconst memoize = self => scopeWith(scope => map$1(memoize$1(buildWithScope(self, scope)), fromEffectContext));\n\n/** @internal */\nconst merge = /*#__PURE__*/dual(2, (self, that) => zipWithPar(self, that, (a, b) => pipe(a, merge$1(b))));\n\n/** @internal */\nconst mergeAll = (...layers) => {\n  let final = layers[0];\n  for (let i = 1; i < layers.length; i++) {\n    final = merge(layers[i])(final);\n  }\n  return final;\n};\n\n/** @internal */\nconst orDie = self => catchAll(self, defect => die(defect));\n\n/** @internal */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => catchAll(self, that));\n\n/** @internal */\nconst passthrough = self => merge(context(), self);\n\n/** @internal */\nconst project = /*#__PURE__*/dual(4, (self, tagA, tagB, f) => map(self, context => make(tagB, f(unsafeGet(context, tagA)))));\n\n/** @internal */\nconst provide = /*#__PURE__*/dual(2, (self, that) => suspend(() => {\n  const provideTo = Object.create(proto);\n  provideTo._tag = OP_PROVIDE_TO;\n  provideTo.first = Object.create(proto, {\n    _tag: {\n      value: OP_ZIP_WITH,\n      enumerable: true\n    },\n    first: {\n      value: context(),\n      enumerable: true\n    },\n    second: {\n      value: self\n    },\n    zipK: {\n      value: (a, b) => merge$1(a, b)\n    }\n  });\n  provideTo.second = that;\n  return provideTo;\n}));\n\n/** @internal */\nconst provideMerge = /*#__PURE__*/dual(2, (self, that) => {\n  const zipWith = Object.create(proto);\n  zipWith._tag = OP_ZIP_WITH;\n  zipWith.first = self;\n  zipWith.second = pipe(self, provide(that));\n  zipWith.zipK = (a, b) => merge$1(a, b);\n  return zipWith;\n});\n\n/** @internal */\nconst retry = /*#__PURE__*/dual(2, (self, schedule) => suspend(() => {\n  const stateTag = Tag();\n  return pipe(succeed(stateTag, {\n    state: schedule.initial\n  }), flatMap(env => retryLoop(self, schedule, stateTag, pipe(env, get(stateTag)).state)));\n}));\n\n/** @internal */\nconst retryLoop = (self, schedule, stateTag, state) => {\n  return pipe(self, catchAll(error => pipe(retryUpdate(schedule, stateTag, error, state), flatMap(env => fresh(retryLoop(self, schedule, stateTag, pipe(env, get(stateTag)).state))))));\n};\n\n/** @internal */\nconst retryUpdate = (schedule, stateTag, error, state) => {\n  return fromEffect(stateTag, pipe(currentTimeMillis, flatMap$1(now => pipe(schedule.step(now, error, state), flatMap$1(([state, _, decision]) => isDone(decision) ? fail$2(error) : pipe(sleep(millis(start(decision.intervals) - now)), as({\n    state\n  })))))));\n};\n\n/** @internal */\nconst scoped = /*#__PURE__*/dual(2, (a, b) => {\n  const tagFirst = isTag(a);\n  const tag = tagFirst ? a : b;\n  const effect = tagFirst ? b : a;\n  return scopedContext(map$1(effect, service => make(tag, service)));\n});\n\n/** @internal */\nconst scopedDiscard = effect => {\n  return scopedContext(pipe(effect, as(empty())));\n};\n\n/** @internal */\nconst scopedContext = effect => {\n  const scoped = Object.create(proto);\n  scoped._tag = OP_SCOPED;\n  scoped.effect = effect;\n  return scoped;\n};\n\n/** @internal */\nconst scope = /*#__PURE__*/scopedContext( /*#__PURE__*/map$1( /*#__PURE__*/acquireRelease( /*#__PURE__*/scopeMake(), (scope, exit) => scope.close(exit)), scope => make(Scope, scope)));\n\n/** @internal */\nconst service = tag => {\n  return fromEffect(tag, tag);\n};\n\n/** @internal */\nconst succeed = /*#__PURE__*/dual(2, (a, b) => {\n  const tagFirst = isTag(a);\n  const tag = tagFirst ? a : b;\n  const resource = tagFirst ? b : a;\n  return fromEffectContext(succeed$1(make(tag, resource)));\n});\n\n/** @internal */\nconst succeedContext = context => {\n  return fromEffectContext(succeed$1(context));\n};\n\n/** @internal */\nconst suspend = evaluate => {\n  const suspend = Object.create(proto);\n  suspend._tag = OP_SUSPEND;\n  suspend.evaluate = evaluate;\n  return suspend;\n};\n\n/** @internal */\nconst sync = /*#__PURE__*/dual(2, (a, b) => {\n  const tagFirst = isTag(a);\n  const tag = tagFirst ? a : b;\n  const evaluate = tagFirst ? b : a;\n  return fromEffectContext(sync$1(() => make(tag, evaluate())));\n});\n\n/** @internal */\nconst syncContext = evaluate => {\n  return fromEffectContext(sync$1(evaluate));\n};\n\n/** @internal */\nconst tap = /*#__PURE__*/dual(2, (self, f) => flatMap(self, context => fromEffectContext(as(f(context), context))));\n\n/** @internal */\nconst tapError = /*#__PURE__*/dual(2, (self, f) => catchAll(self, e => fromEffectContext(flatMap$1(f(e), () => fail$2(e)))));\n\n/** @internal */\nconst tapErrorCause = /*#__PURE__*/dual(2, (self, f) => catchAllCause(self, cause => fromEffectContext(flatMap$1(f(cause), () => failCause$1(cause)))));\n\n/** @internal */\nconst toRuntime = self => {\n  return pipe(scopeWith(scope => pipe(self, buildWithScope(scope))), flatMap$1(context => pipe(runtime(), provideContext(context))));\n};\n\n/** @internal */\nconst use = /*#__PURE__*/dual(2, (that, self) => suspend(() => {\n  const provideTo = Object.create(proto);\n  provideTo._tag = OP_PROVIDE_TO;\n  provideTo.first = Object.create(proto, {\n    _tag: {\n      value: OP_ZIP_WITH,\n      enumerable: true\n    },\n    first: {\n      value: context(),\n      enumerable: true\n    },\n    second: {\n      value: self\n    },\n    zipK: {\n      value: (a, b) => pipe(a, merge$1(b))\n    }\n  });\n  provideTo.second = that;\n  return provideTo;\n}));\n\n/** @internal */\nconst useMerge = /*#__PURE__*/dual(2, (that, self) => {\n  const zipWith = Object.create(proto);\n  zipWith._tag = OP_ZIP_WITH;\n  zipWith.first = self;\n  zipWith.second = pipe(self, provide(that));\n  zipWith.zipK = (a, b) => {\n    return pipe(a, merge$1(b));\n  };\n  return zipWith;\n});\n\n/** @internal */\nconst zipWithPar = /*#__PURE__*/dual(3, (self, that, f) => suspend(() => {\n  const zipWithPar = Object.create(proto);\n  zipWithPar._tag = OP_ZIP_WITH_PAR;\n  zipWithPar.first = self;\n  zipWithPar.second = that;\n  zipWithPar.zipK = f;\n  return zipWithPar;\n}));\n\n/** @internal */\nconst unwrapEffect = self => {\n  const tag = Tag();\n  return flatMap(fromEffect(tag, self), context => get(context, tag));\n};\n\n/** @internal */\nconst unwrapScoped = self => {\n  const tag = Tag();\n  return flatMap(scoped(tag, self), context => get(context, tag));\n};\n\n// -----------------------------------------------------------------------------\n// tracing\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst withSpan = /*#__PURE__*/dual(args => isLayer(args[0]), (self, name, options) => unwrapScoped(map$1(options?.onEnd ? tap$1(makeSpanScoped(name, options), span => addFinalizer(exit => options.onEnd(span, exit))) : makeSpanScoped(name, options), span => withParentSpan(self, span))));\n\n/** @internal */\nconst withParentSpan = /*#__PURE__*/dual(2, (self, span) => provide(succeedContext(make(spanTag, span)), self));\n\n// circular with Effect\n\nconst provideSomeLayer = /*#__PURE__*/dual(2, (self, layer) => acquireUseRelease(scopeMake(), scope => flatMap$1(buildWithScope(layer, scope), context => provideSomeContext(self, context)), (scope, exit) => scopeClose(scope, exit)));\nconst provideSomeRuntime = /*#__PURE__*/dual(2, (self, rt) => {\n  const patchFlags = diff(defaultRuntime.runtimeFlags, rt.runtimeFlags);\n  const inversePatchFlags = diff(rt.runtimeFlags, defaultRuntime.runtimeFlags);\n  const patchRefs = diff$1(defaultRuntime.fiberRefs, rt.fiberRefs);\n  const inversePatchRefs = diff$1(rt.fiberRefs, defaultRuntime.fiberRefs);\n  return acquireUseRelease(flatMap$1(updateRuntimeFlags(patchFlags), () => patchFiberRefs(patchRefs)), () => provideSomeContext(self, rt.context), () => flatMap$1(updateRuntimeFlags(inversePatchFlags), () => patchFiberRefs(inversePatchRefs)));\n});\n\n/** @internal */\nconst effect_provide = /*#__PURE__*/dual(2, (self, source) => isLayer(source) ? provideSomeLayer(self, source) : isContext(source) ? provideSomeContext(self, source) : provideSomeRuntime(self, source));\n\nexport { LayerTypeId, build, buildWithScope, catchAll, catchAllCause, context, die, dieSync, discard, effect_provide, extendScope, fail, failCause, failCauseSync, failSync, fiberRefLocally, fiberRefLocallyScoped, fiberRefLocallyScopedWith, fiberRefLocallyWith, flatMap, flatten, fresh, fromEffect, fromEffectContext, fromEffectDiscard, fromFunction, isFresh, isLayer, launch, locallyEffect, map, mapError, match, matchCause, memoize, merge, mergeAll, orDie, orElse, passthrough, project, provide, provideMerge, retry, scope, scoped, scopedContext, scopedDiscard, service, succeed, succeedContext, suspend, sync, syncContext, tap, tapError, tapErrorCause, toRuntime, unwrapEffect, unwrapScoped, use, useMerge, withParentSpan, withSpan, zipWithPar };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/MutableList\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category model\n */\n\nconst MutableListProto = {\n  [TypeId]: TypeId,\n  [Symbol.iterator]() {\n    let done = false;\n    let head = this.head;\n    return {\n      next() {\n        if (done) {\n          return this.return();\n        }\n        if (head == null) {\n          done = true;\n          return this.return();\n        }\n        const value = head.value;\n        head = head.next;\n        return {\n          done,\n          value\n        };\n      },\n      return(value) {\n        if (!done) {\n          done = true;\n        }\n        return {\n          done: true,\n          value\n        };\n      }\n    };\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"MutableList\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n/** @internal */\nclass LinkedListNode {\n  removed = false;\n  prev = undefined;\n  next = undefined;\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n/**\n * Creates an empty `MutableList`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = () => {\n  const list = Object.create(MutableListProto);\n  list.head = undefined;\n  list.tail = undefined;\n  list._length = 0;\n  return list;\n};\n\n/**\n * Creates a new `MutableList` from an `Iterable`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = iterable => {\n  const list = empty();\n  for (const element of iterable) {\n    append(list, element);\n  }\n  return list;\n};\n\n/**\n * Creates a new `MutableList` from the specified elements.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = (...elements) => fromIterable(elements);\n\n/**\n * Returns `true` if the list contains zero elements, `false`, otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isEmpty = self => length(self) === 0;\n\n/**\n * Returns the length of the list.\n *\n * @since 2.0.0\n * @category getters\n */\nconst length = self => self._length;\n\n/**\n * Returns the last element of the list, if it exists.\n *\n * @since 2.0.0\n * @category getters\n */\nconst tail = self => self.tail === undefined ? undefined : self.tail.value;\n\n/**\n * Returns the first element of the list, if it exists.\n *\n * @since 2.0.0\n * @category getters\n */\nconst head = self => self.head === undefined ? undefined : self.head.value;\n\n/**\n * Executes the specified function `f` for each element in the list.\n *\n * @since 2.0.0\n * @category traversing\n */\nconst forEach = /*#__PURE__*/dual(2, (self, f) => {\n  let current = self.head;\n  while (current !== undefined) {\n    f(current.value);\n    current = current.next;\n  }\n});\n\n/**\n * Removes all elements from the doubly-linked list.\n *\n * @since 2.0.0\n */\nconst reset = self => {\n  self._length = 0;\n  self.head = undefined;\n  self.tail = undefined;\n  return self;\n};\n\n/**\n * Appends the specified element to the end of the `MutableList`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst append = /*#__PURE__*/dual(2, (self, value) => {\n  const node = new LinkedListNode(value);\n  if (self.head === undefined) {\n    self.head = node;\n  }\n  if (self.tail === undefined) {\n    self.tail = node;\n  } else {\n    self.tail.next = node;\n    node.prev = self.tail;\n    self.tail = node;\n  }\n  self._length += 1;\n  return self;\n});\n\n/**\n * Removes the first value from the list and returns it, if it exists.\n *\n * @since 0.0.1\n */\nconst shift = self => {\n  const head = self.head;\n  if (head !== undefined) {\n    remove(self, head);\n    return head.value;\n  }\n  return undefined;\n};\n\n/**\n * Removes the last value from the list and returns it, if it exists.\n *\n * @since 0.0.1\n */\nconst pop = self => {\n  const tail = self.tail;\n  if (tail !== undefined) {\n    remove(self, tail);\n    return tail.value;\n  }\n  return undefined;\n};\n\n/**\n * Prepends the specified value to the beginning of the list.\n *\n * @category concatenating\n * @since 2.0.0\n */\nconst prepend = /*#__PURE__*/dual(2, (self, value) => {\n  const node = new LinkedListNode(value);\n  node.next = self.head;\n  if (self.head !== undefined) {\n    self.head.prev = node;\n  }\n  self.head = node;\n  if (self.tail === undefined) {\n    self.tail = node;\n  }\n  self._length += 1;\n  return self;\n});\nconst remove = (self, node) => {\n  if (node.removed) {\n    return;\n  }\n  node.removed = true;\n  if (node.prev !== undefined && node.next !== undefined) {\n    node.prev.next = node.next;\n    node.next.prev = node.prev;\n  } else if (node.prev !== undefined) {\n    self.tail = node.prev;\n    node.prev.next = undefined;\n  } else if (node.next !== undefined) {\n    self.head = node.next;\n    node.next.prev = undefined;\n  } else {\n    self.tail = undefined;\n    self.head = undefined;\n  }\n  if (self._length > 0) {\n    self._length -= 1;\n  }\n};\n\nexport { append, empty, forEach, fromIterable, head, isEmpty, length, make, pop, prepend, reset, shift, tail };\n","import { prepend, reverse, empty as empty$1 } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { length as length$1, isEmpty as isEmpty$1, append, shift, empty } from '../../MutableList/dist/effect-MutableList.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/MutableQueue\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category symbol\n */\nconst EmptyMutableQueue = /*#__PURE__*/Symbol.for(\"effect/mutable/MutableQueue/Empty\");\n\n/**\n * @since 2.0.0\n * @category model\n */\n\n/**\n * @since 2.0.0\n */\n\nconst MutableQueueProto = {\n  [TypeId]: TypeId,\n  [Symbol.iterator]() {\n    return Array.from(this.queue)[Symbol.iterator]();\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"MutableQueue\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst make = capacity => {\n  const queue = Object.create(MutableQueueProto);\n  queue.queue = empty();\n  queue.capacity = capacity;\n  return queue;\n};\n\n/**\n * Creates a new bounded `MutableQueue`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst bounded = capacity => make(capacity);\n\n/**\n * Creates a new unbounded `MutableQueue`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unbounded = () => make(undefined);\n\n/**\n * Returns the current number of elements in the queue.\n *\n * @since 2.0.0\n * @category getters\n */\nconst length = self => length$1(self.queue);\n\n/**\n * Returns `true` if the queue is empty, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isEmpty = self => isEmpty$1(self.queue);\n\n/**\n * Returns `true` if the queue is full, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isFull = self => self.capacity === undefined ? false : length$1(self.queue) === self.capacity;\n\n/**\n * The **maximum** number of elements that a queue can hold.\n *\n * **Note**: unbounded queues can still implement this interface with\n * `capacity = Infinity`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst capacity = self => self.capacity === undefined ? Infinity : self.capacity;\n\n/**\n * Offers an element to the queue.\n *\n * Returns whether the enqueue was successful or not.\n *\n * @since 2.0.0\n */\nconst offer = /*#__PURE__*/dual(2, (self, value) => {\n  const queueLength = length$1(self.queue);\n  if (self.capacity !== undefined && queueLength === self.capacity) {\n    return false;\n  }\n  append(value)(self.queue);\n  return true;\n});\n\n/**\n * Enqueues a collection of values into the queue.\n *\n * Returns a `Chunk` of the values that were **not** able to be enqueued.\n *\n * @since 2.0.0\n */\nconst offerAll = /*#__PURE__*/dual(2, (self, values) => {\n  const iterator = values[Symbol.iterator]();\n  let next;\n  let remainder = empty$1();\n  let offering = true;\n  while (offering && (next = iterator.next()) && !next.done) {\n    offering = offer(next.value)(self);\n  }\n  while (next != null && !next.done) {\n    remainder = prepend(next.value)(remainder);\n    next = iterator.next();\n  }\n  return reverse(remainder);\n});\n\n/**\n * Dequeues an element from the queue.\n *\n * Returns either an element from the queue, or the `def` param.\n *\n * **Note**: if there is no meaningful default for your type, you can always\n * use `poll(MutableQueue.EmptyMutableQueue)`.\n *\n * @since 2.0.0\n */\nconst poll = /*#__PURE__*/dual(2, (self, def) => {\n  if (isEmpty$1(self.queue)) {\n    return def;\n  }\n  return shift(self.queue);\n});\n\n/**\n * Dequeues up to `n` elements from the queue.\n *\n * Returns a `List` of up to `n` elements.\n *\n * @since 2.0.0\n */\nconst pollUpTo = /*#__PURE__*/dual(2, (self, n) => {\n  let result = empty$1();\n  let count = 0;\n  while (count < n) {\n    const element = poll(EmptyMutableQueue)(self);\n    if (element === EmptyMutableQueue) {\n      break;\n    }\n    result = prepend(element)(result);\n    count += 1;\n  }\n  return reverse(result);\n});\n\nexport { EmptyMutableQueue, bounded, capacity, isEmpty, isFull, length, offer, offerAll, poll, pollUpTo, unbounded };\n","import { empty as empty$1 } from '../Context/dist/effect-Context.esm.js';\nimport { unsafeMake, await as _await, interrupt, done } from '../Deferred/dist/effect-Deferred.esm.js';\nimport { decode, toMillis } from '../Duration/dist/effect-Duration.esm.js';\nimport { merge, right, left } from '../Either/dist/effect-Either.esm.js';\nimport { equals, symbol as symbol$1 } from '../Equal/dist/effect-Equal.esm.js';\nimport { succeed as succeed$1 } from '../Exit/dist/effect-Exit.esm.js';\nimport { pipe } from '../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../Hash/dist/effect-Hash.esm.js';\nimport { size, get, has, set, remove, empty } from '../MutableHashMap/dist/effect-MutableHashMap.esm.js';\nimport { offer, poll, EmptyMutableQueue, unbounded } from '../MutableQueue/dist/effect-MutableQueue.esm.js';\nimport { compareAndSet, set as set$1, make as make$1 } from '../MutableRef/dist/effect-MutableRef.esm.js';\nimport { match, none, isSome, some, getOrUndefined } from '../Option/dist/effect-Option.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { map, sync, suspend, succeed, flatMap, asUnit, onInterrupt, zipRight, exit, provideContext, context, fiberId } from './core.esm.js';\nimport { clockWith, when } from './core-effect.esm.js';\nimport { struct } from './Data.esm.js';\nimport { none as none$1 } from './fiberId.esm.js';\nimport { all } from './fiberRuntime.esm.js';\n\n/**\n * A `MapValue` represents a value in the cache. A value may either be\n * `Pending` with a `Promise` that will contain the result of computing the\n * lookup function, when it is available, or `Complete` with an `Exit` value\n * that contains the result of computing the lookup function.\n *\n * @internal\n */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst complete = (key, exit, entryStats, timeToLiveMillis) => struct({\n  _tag: \"Complete\",\n  key,\n  exit,\n  entryStats,\n  timeToLiveMillis\n});\n\n/** @internal */\nconst pending = (key, deferred) => struct({\n  _tag: \"Pending\",\n  key,\n  deferred\n});\n\n/** @internal */\nconst refreshing = (deferred, complete) => struct({\n  _tag: \"Refreshing\",\n  deferred,\n  complete\n});\n\n/** @internal */\nconst MapKeyTypeId = /*#__PURE__*/Symbol.for(\"effect/Cache/MapKey\");\n\n/** @internal */\n\n/**\n * A `MapKey` represents a key in the cache. It contains mutable references\n * to the previous key and next key in the `KeySet` to support an efficient\n * implementation of a sorted set of keys.\n *\n * @internal\n */\n\nclass MapKeyImpl {\n  [MapKeyTypeId] = MapKeyTypeId;\n  previous = undefined;\n  next = undefined;\n  constructor(current) {\n    this.current = current;\n  }\n  [symbol]() {\n    return pipe(hash(this.current), combine(hash(this.previous)), combine(hash(this.next)));\n  }\n  [symbol$1](that) {\n    if (this === that) {\n      return true;\n    }\n    return isMapKey(that) && equals(this.current, that.current) && equals(this.previous, that.previous) && equals(this.next, that.next);\n  }\n}\n\n/** @internal */\nconst makeMapKey = current => new MapKeyImpl(current);\n\n/** @internal */\nconst isMapKey = u => hasProperty(u, MapKeyTypeId);\n\n/**\n * A `KeySet` is a sorted set of keys in the cache ordered by last access.\n * For efficiency, the set is implemented in terms of a doubly linked list\n * and is not safe for concurrent access.\n *\n * @internal\n */\n\nclass KeySetImpl {\n  head = undefined;\n  tail = undefined;\n  add(key) {\n    if (key !== this.tail) {\n      if (this.tail === undefined) {\n        this.head = key;\n        this.tail = key;\n      } else {\n        const previous = key.previous;\n        const next = key.next;\n        if (next !== undefined) {\n          key.next = undefined;\n          if (previous !== undefined) {\n            previous.next = next;\n            next.previous = previous;\n          } else {\n            this.head = next;\n            this.head.previous = undefined;\n          }\n        }\n        this.tail.next = key;\n        key.previous = this.tail;\n        this.tail = key;\n      }\n    }\n  }\n  remove() {\n    const key = this.head;\n    if (key !== undefined) {\n      const next = key.next;\n      if (next !== undefined) {\n        key.next = undefined;\n        this.head = next;\n        this.head.previous = undefined;\n      } else {\n        this.head = undefined;\n        this.tail = undefined;\n      }\n    }\n    return key;\n  }\n}\n\n/** @internal */\nconst makeKeySet = () => new KeySetImpl();\n\n/**\n * The `CacheState` represents the mutable state underlying the cache.\n *\n * @internal\n */\n\n/**\n * Constructs a new `CacheState` from the specified values.\n *\n * @internal\n */\nconst makeCacheState = (map, keys, accesses, updating, hits, misses) => ({\n  map,\n  keys,\n  accesses,\n  updating,\n  hits,\n  misses\n});\n\n/**\n * Constructs an initial cache state.\n *\n * @internal\n */\nconst initialCacheState = () => makeCacheState(empty(), makeKeySet(), unbounded(), make$1(false), 0, 0);\n\n/** @internal */\nconst CacheSymbolKey = \"effect/Cache\";\n\n/** @internal */\nconst CacheTypeId = /*#__PURE__*/Symbol.for(CacheSymbolKey);\nconst cacheVariance = {\n  _Key: _ => _,\n  _Error: _ => _,\n  _Value: _ => _\n};\n\n/** @internal */\nconst makeCacheStats = options => options;\n\n/** @internal */\nconst makeEntryStats = loadedMillis => ({\n  loadedMillis\n});\nclass CacheImpl {\n  [CacheTypeId] = cacheVariance;\n  constructor(capacity, context, fiberId, lookup, timeToLive) {\n    this.capacity = capacity;\n    this.context = context;\n    this.fiberId = fiberId;\n    this.lookup = lookup;\n    this.timeToLive = timeToLive;\n    this.cacheState = initialCacheState();\n  }\n  get(key) {\n    return map(this.getEither(key), merge);\n  }\n  cacheStats() {\n    return sync(() => makeCacheStats({\n      hits: this.cacheState.hits,\n      misses: this.cacheState.misses,\n      size: size(this.cacheState.map)\n    }));\n  }\n  getOption(key) {\n    return suspend(() => match(get(this.cacheState.map, key), {\n      onNone: () => {\n        const mapKey = makeMapKey(key);\n        this.trackAccess(mapKey);\n        this.trackMiss();\n        return succeed(none());\n      },\n      onSome: value => this.resolveMapValue(value)\n    }));\n  }\n  getOptionComplete(key) {\n    return suspend(() => match(get(this.cacheState.map, key), {\n      onNone: () => {\n        const mapKey = makeMapKey(key);\n        this.trackAccess(mapKey);\n        this.trackMiss();\n        return succeed(none());\n      },\n      onSome: value => this.resolveMapValue(value, true)\n    }));\n  }\n  contains(key) {\n    return sync(() => has(this.cacheState.map, key));\n  }\n  entryStats(key) {\n    return sync(() => {\n      const option = get(this.cacheState.map, key);\n      if (isSome(option)) {\n        switch (option.value._tag) {\n          case \"Complete\":\n            {\n              const loaded = option.value.entryStats.loadedMillis;\n              return some(makeEntryStats(loaded));\n            }\n          case \"Pending\":\n            {\n              return none();\n            }\n          case \"Refreshing\":\n            {\n              const loaded = option.value.complete.entryStats.loadedMillis;\n              return some(makeEntryStats(loaded));\n            }\n        }\n      }\n      return none();\n    });\n  }\n  getEither(key) {\n    return suspend(() => {\n      const k = key;\n      let mapKey = undefined;\n      let deferred = undefined;\n      let value = getOrUndefined(get(this.cacheState.map, k));\n      if (value === undefined) {\n        deferred = unsafeMake(this.fiberId);\n        mapKey = makeMapKey(k);\n        if (has(this.cacheState.map, k)) {\n          value = getOrUndefined(get(this.cacheState.map, k));\n        } else {\n          set(this.cacheState.map, k, pending(mapKey, deferred));\n        }\n      }\n      if (value === undefined) {\n        this.trackAccess(mapKey);\n        this.trackMiss();\n        return map(this.lookupValueOf(key, deferred), right);\n      } else {\n        return flatMap(this.resolveMapValue(value), match({\n          onNone: () => this.getEither(key),\n          onSome: value => succeed(left(value))\n        }));\n      }\n    });\n  }\n  invalidate(key) {\n    return sync(() => {\n      remove(this.cacheState.map, key);\n    });\n  }\n  invalidateWhen(key, when) {\n    return sync(() => {\n      const value = get(this.cacheState.map, key);\n      if (isSome(value) && value.value._tag === \"Complete\") {\n        if (value.value.exit._tag === \"Success\") {\n          if (when(value.value.exit.value)) {\n            remove(this.cacheState.map, key);\n          }\n        }\n      }\n    });\n  }\n  invalidateAll() {\n    return sync(() => {\n      this.cacheState.map = empty();\n    });\n  }\n  refresh(key) {\n    return clockWith(clock => suspend(() => {\n      const k = key;\n      const deferred = unsafeMake(this.fiberId);\n      let value = getOrUndefined(get(this.cacheState.map, k));\n      if (value === undefined) {\n        if (has(this.cacheState.map, k)) {\n          value = getOrUndefined(get(this.cacheState.map, k));\n        } else {\n          set(this.cacheState.map, k, pending(makeMapKey(k), deferred));\n        }\n      }\n      if (value === undefined) {\n        return asUnit(this.lookupValueOf(key, deferred));\n      } else {\n        switch (value._tag) {\n          case \"Complete\":\n            {\n              if (this.hasExpired(clock, value.timeToLiveMillis)) {\n                const found = getOrUndefined(get(this.cacheState.map, k));\n                if (equals(found, value)) {\n                  remove(this.cacheState.map, k);\n                }\n                return asUnit(this.get(key));\n              }\n              // Only trigger the lookup if we're still the current value, `completedResult`\n              return pipe(this.lookupValueOf(key, deferred), when(() => {\n                const current = getOrUndefined(get(this.cacheState.map, k));\n                if (equals(current, value)) {\n                  const mapValue = refreshing(deferred, value);\n                  set(this.cacheState.map, k, mapValue);\n                  return true;\n                }\n                return false;\n              }), asUnit);\n            }\n          case \"Pending\":\n            {\n              return _await(value.deferred);\n            }\n          case \"Refreshing\":\n            {\n              return _await(value.deferred);\n            }\n        }\n      }\n    }));\n  }\n  set(key, value) {\n    return clockWith(clock => sync(() => {\n      const now = clock.unsafeCurrentTimeMillis();\n      const k = key;\n      const lookupResult = succeed$1(value);\n      const mapValue = complete(makeMapKey(k), lookupResult, makeEntryStats(now), now + toMillis(decode(this.timeToLive(lookupResult))));\n      set(this.cacheState.map, k, mapValue);\n    }));\n  }\n  size() {\n    return sync(() => {\n      return size(this.cacheState.map);\n    });\n  }\n  values() {\n    return sync(() => {\n      const values = [];\n      for (const entry of this.cacheState.map) {\n        if (entry[1]._tag === \"Complete\" && entry[1].exit._tag === \"Success\") {\n          values.push(entry[1].exit.value);\n        }\n      }\n      return values;\n    });\n  }\n  entries() {\n    return sync(() => {\n      const values = [];\n      for (const entry of this.cacheState.map) {\n        if (entry[1]._tag === \"Complete\" && entry[1].exit._tag === \"Success\") {\n          values.push([entry[0], entry[1].exit.value]);\n        }\n      }\n      return values;\n    });\n  }\n  keys() {\n    return sync(() => {\n      const keys = [];\n      for (const entry of this.cacheState.map) {\n        if (entry[1]._tag === \"Complete\" && entry[1].exit._tag === \"Success\") {\n          keys.push(entry[0]);\n        }\n      }\n      return keys;\n    });\n  }\n  resolveMapValue(value, ignorePending = false) {\n    return clockWith(clock => {\n      switch (value._tag) {\n        case \"Complete\":\n          {\n            this.trackAccess(value.key);\n            this.trackHit();\n            if (this.hasExpired(clock, value.timeToLiveMillis)) {\n              remove(this.cacheState.map, value.key.current);\n              return succeed(none());\n            }\n            return map(value.exit, some);\n          }\n        case \"Pending\":\n          {\n            this.trackAccess(value.key);\n            this.trackHit();\n            if (ignorePending) {\n              return succeed(none());\n            }\n            return map(_await(value.deferred), some);\n          }\n        case \"Refreshing\":\n          {\n            this.trackAccess(value.complete.key);\n            this.trackHit();\n            if (this.hasExpired(clock, value.complete.timeToLiveMillis)) {\n              if (ignorePending) {\n                return succeed(none());\n              }\n              return map(_await(value.deferred), some);\n            }\n            return map(value.complete.exit, some);\n          }\n      }\n    });\n  }\n  trackHit() {\n    this.cacheState.hits = this.cacheState.hits + 1;\n  }\n  trackMiss() {\n    this.cacheState.misses = this.cacheState.misses + 1;\n  }\n  trackAccess(key) {\n    offer(this.cacheState.accesses, key);\n    if (compareAndSet(this.cacheState.updating, false, true)) {\n      let loop = true;\n      while (loop) {\n        const key = poll(this.cacheState.accesses, EmptyMutableQueue);\n        if (key === EmptyMutableQueue) {\n          loop = false;\n        } else {\n          this.cacheState.keys.add(key);\n        }\n      }\n      let size$1 = size(this.cacheState.map);\n      loop = size$1 > this.capacity;\n      while (loop) {\n        const key = this.cacheState.keys.remove();\n        if (key !== undefined) {\n          if (has(this.cacheState.map, key.current)) {\n            remove(this.cacheState.map, key.current);\n            size$1 = size$1 - 1;\n            loop = size$1 > this.capacity;\n          }\n        } else {\n          loop = false;\n        }\n      }\n      set$1(this.cacheState.updating, false);\n    }\n  }\n  hasExpired(clock, timeToLiveMillis) {\n    return clock.unsafeCurrentTimeMillis() > timeToLiveMillis;\n  }\n  lookupValueOf(input, deferred) {\n    return clockWith(clock => suspend(() => {\n      const key = input;\n      return pipe(this.lookup(input), provideContext(this.context), exit, flatMap(exit => {\n        const now = clock.unsafeCurrentTimeMillis();\n        const stats = makeEntryStats(now);\n        const value = complete(makeMapKey(key), exit, stats, now + toMillis(decode(this.timeToLive(exit))));\n        set(this.cacheState.map, key, value);\n        return zipRight(done(deferred, exit), exit);\n      }), onInterrupt(() => zipRight(interrupt(deferred), sync(() => {\n        remove(this.cacheState.map, key);\n      }))));\n    }));\n  }\n}\n\n/** @internal */\nconst make = options => {\n  const timeToLive = decode(options.timeToLive);\n  return makeWith({\n    capacity: options.capacity,\n    lookup: options.lookup,\n    timeToLive: () => timeToLive\n  });\n};\n\n/** @internal */\nconst makeWith = options => map(all([context(), fiberId]), ([context, fiberId]) => new CacheImpl(options.capacity, context, fiberId, options.lookup, exit => decode(options.timeToLive(exit))));\n\n/** @internal */\nconst unsafeMakeWith = (capacity, lookup, timeToLive) => new CacheImpl(capacity, empty$1(), none$1, lookup, exit => decode(timeToLive(exit)));\n\nexport { CacheTypeId, MapKeyTypeId, complete, initialCacheState, isMapKey, make, makeCacheState, makeCacheStats, makeEntryStats, makeKeySet, makeMapKey, makeWith, pending, refreshing, unsafeMakeWith };\n","import { seconds } from '../Duration/dist/effect-Duration.esm.js';\nimport { dual } from '../Function/dist/effect-Function.esm.js';\nimport { globalValue } from '../GlobalValue/dist/effect-GlobalValue.esm.js';\nimport { single, makeEntry, empty } from './blockedRequests.esm.js';\nimport { unsafeMakeWith } from './cache.esm.js';\nimport { isInterruptedOnly } from './cause.esm.js';\nimport { fiberRefUnsafeMake, flatMap, isEffect, succeed, fiberIdWith, fiberRefGetWith, deferredComplete, unit, fiberRefLocally, map, deferredMake, blocked, uninterruptibleMask, exit, deferredAwait, sync } from './core.esm.js';\nimport { ensuring } from './fiberRuntime.esm.js';\nimport { Listeners } from './request.esm.js';\n\n/** @internal */\nconst currentCache = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentCache\"), () => fiberRefUnsafeMake(unsafeMakeWith(65536, () => map(deferredMake(), handle => ({\n  listeners: new Listeners(),\n  handle\n})), () => seconds(60))));\n\n/** @internal */\nconst currentCacheEnabled = /*#__PURE__*/globalValue( /*#__PURE__*/Symbol.for(\"effect/FiberRef/currentCacheEnabled\"), () => fiberRefUnsafeMake(false));\n\n/** @internal */\nconst fromRequest = (request, dataSource) => flatMap(isEffect(dataSource) ? dataSource : succeed(dataSource), ds => fiberIdWith(id => {\n  const proxy = new Proxy(request, {});\n  return fiberRefGetWith(currentCacheEnabled, cacheEnabled => {\n    if (cacheEnabled) {\n      return fiberRefGetWith(currentCache, cache => flatMap(cache.getEither(proxy), orNew => {\n        switch (orNew._tag) {\n          case \"Left\":\n            {\n              orNew.left.listeners.increment();\n              return blocked(empty, flatMap(exit(deferredAwait(orNew.left.handle)), exit => {\n                if (exit._tag === \"Failure\" && isInterruptedOnly(exit.cause)) {\n                  orNew.left.listeners.decrement();\n                  return flatMap(cache.invalidateWhen(proxy, entry => entry.handle === orNew.left.handle), () => fromRequest(proxy, dataSource));\n                }\n                return ensuring(deferredAwait(orNew.left.handle), sync(() => orNew.left.listeners.decrement()));\n              }));\n            }\n          case \"Right\":\n            {\n              orNew.right.listeners.increment();\n              return blocked(single(ds, makeEntry({\n                request: proxy,\n                result: orNew.right.handle,\n                listeners: orNew.right.listeners,\n                ownerId: id,\n                state: {\n                  completed: false\n                }\n              })), uninterruptibleMask(restore => flatMap(exit(restore(deferredAwait(orNew.right.handle))), exit => {\n                orNew.right.listeners.decrement();\n                return exit;\n              })));\n            }\n        }\n      }));\n    }\n    const listeners = new Listeners();\n    listeners.increment();\n    return flatMap(deferredMake(), ref => blocked(single(ds, makeEntry({\n      request: proxy,\n      result: ref,\n      listeners,\n      ownerId: id,\n      state: {\n        completed: false\n      }\n    })), ensuring(deferredAwait(ref), sync(() => listeners.decrement()))));\n  });\n}));\n\n/** @internal */\nconst cacheRequest = (request, result) => {\n  return fiberRefGetWith(currentCacheEnabled, cacheEnabled => {\n    if (cacheEnabled) {\n      return fiberRefGetWith(currentCache, cache => flatMap(cache.getEither(request), orNew => {\n        switch (orNew._tag) {\n          case \"Left\":\n            {\n              return unit;\n            }\n          case \"Right\":\n            {\n              return deferredComplete(orNew.right.handle, result);\n            }\n        }\n      }));\n    }\n    return unit;\n  });\n};\n\n/** @internal */\nconst withRequestCaching = /*#__PURE__*/dual(2, (self, strategy) => fiberRefLocally(self, currentCacheEnabled, strategy));\n\n/** @internal */\nconst withRequestCache = /*#__PURE__*/dual(2,\n// @ts-expect-error\n(self, cache) => fiberRefLocally(self, currentCache, cache));\n\nexport { cacheRequest, currentCache, currentCacheEnabled, fromRequest, withRequestCache, withRequestCaching };\n","import { defaultTeardown } from '@effect/platform/Runtime';\nexport { defaultTeardown } from '@effect/platform/Runtime';\nimport * as Effect from 'effect/Effect';\nimport * as Fiber from 'effect/Fiber';\n\n/** @internal */\nconst runMain$1 = (effect, teardown = defaultTeardown) => {\n  const fiber = Effect.runFork(effect);\n  fiber.addObserver(exit => teardown(exit, code => {\n    Effect.runCallback(interruptAll(fiber.id()), () => {\n      process.exit(code);\n    });\n  }));\n  function onSigint() {\n    process.removeListener(\"SIGINT\", onSigint);\n    process.removeListener(\"SIGTERM\", onSigint);\n    Effect.runFork(fiber.interruptAsFork(fiber.id()));\n  }\n  process.once(\"SIGINT\", onSigint);\n  process.once(\"SIGTERM\", onSigint);\n};\nconst interruptAll = id => Effect.flatMap(Fiber.roots, roots => {\n  if (roots.length === 0) {\n    return Effect.unit;\n  }\n  return Fiber.interruptAllAs(roots, id);\n});\n\n/**\n * @since 1.0.0\n */\n\n/**\n * @since 1.0.0\n * @category runtime\n */\nconst runMain = runMain$1;\n\nexport { runMain };\n","import { runMain } from \"@effect/platform-node/Runtime\"\nimport * as Dotenv from \"dotenv\"\nimport { Config, Effect, Layer } from \"effect\"\nimport * as Git from \"./Git\"\nimport * as Github from \"./Github\"\nimport { input, inputSecret, nonEmptyString } from \"./utils/config\"\n\n// Dotenv for testing in development\nDotenv.config()\n\n// Setup the Git client layer\nconst GitLive = Git.layer({\n  userName: nonEmptyString(\"github_actor\"),\n  userEmail: nonEmptyString(\"github_actor\").pipe(\n    Config.map(_ => `${_}@users.noreply.github.com`),\n  ),\n  simpleGit: Config.succeed({}),\n})\n\n// Setup the Github API\nconst GithubLive = Github.layer({\n  token: inputSecret(\"github_token\"),\n})\n\n// Build the environment for your program\nconst EnvLive = Layer.mergeAll(GitLive, GithubLive)\n\nEffect.gen(function* (_) {\n  const name = yield* _(Effect.config(input(\"name\")))\n  yield* _(Effect.logInfo(`Hello there ${name}!`))\n}).pipe(Effect.provide(EnvLive), Effect.tapErrorCause(Effect.logError), runMain)\n","import { symbol as symbol$1 } from '../../Equal/dist/effect-Equal.esm.js';\nimport { make as make$2 } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, number as number$1, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { none, some, getOrThrowWith } from '../../Option/dist/effect-Option.esm.js';\nimport { make as make$1, number, bigint, lessThan as lessThan$1, lessThanOrEqualTo as lessThanOrEqualTo$1, greaterThan as greaterThan$1, greaterThanOrEqualTo as greaterThanOrEqualTo$1, between as between$1, clamp as clamp$1, min as min$1, max as max$1 } from '../../Order/dist/effect-Order.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * This module provides utility functions and type class instances for working with the `BigDecimal` type in TypeScript.\n * It includes functions for basic arithmetic operations, as well as type class instances for `Equivalence` and `Order`.\n *\n * A `BigDecimal` allows storing any real number to arbitrary precision; which avoids common floating point errors\n * (such as 0.1 + 0.2 ≠ 0.3) at the cost of complexity.\n *\n * Internally, `BigDecimal` uses a `BigInt` object, paired with a 64-bit integer which determines the position of the\n * decimal point. Therefore, the precision *is not* actually arbitrary, but limited to 2<sup>63</sup> decimal places.\n *\n * It is not recommended to convert a floating point number to a decimal directly, as the floating point representation\n * may be unexpected.\n *\n * @since 2.0.0\n */\nconst DEFAULT_PRECISION = 100;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/BigDecimal\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst BigDecimalProto = {\n  [TypeId]: TypeId,\n  [symbol]() {\n    const normalized = normalize(this);\n    return pipe(hash(normalized.value), combine(number$1(normalized.scale)));\n  },\n  [symbol$1](that) {\n    return isBigDecimal(that) && equals(this, that);\n  },\n  toString() {\n    return toString(this);\n  },\n  toJSON() {\n    return toString(this);\n  },\n  [NodeInspectSymbol]() {\n    return toString(this);\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/**\n * Checks if a given value is a `BigDecimal`.\n *\n * @param u - The value to check.\n *\n * @since 2.0.0\n * @category guards\n */\nconst isBigDecimal = u => hasProperty(u, TypeId);\n\n/**\n * Creates a `BigDecimal` from a `bigint` value and a scale.\n *\n * @param value - The `bigint` value to create a `BigDecimal` from.\n * @param scale - The scale of the `BigDecimal`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = (value, scale) => {\n  const o = Object.create(BigDecimalProto);\n  o.value = value;\n  o.scale = scale;\n  return o;\n};\nconst bigint0 = /*#__PURE__*/BigInt(0);\nconst bigint1 = /*#__PURE__*/BigInt(1);\nconst bigint10 = /*#__PURE__*/BigInt(10);\nconst zero = /*#__PURE__*/make(bigint0, 0);\n\n/**\n * Normalizes a given `BigDecimal` by removing trailing zeros.\n *\n * @param self - The `BigDecimal` to normalize.\n *\n * @example\n * import { normalize, make, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(normalize(unsafeFromString(\"123.00000\")), make(123n, 0))\n * assert.deepStrictEqual(normalize(unsafeFromString(\"12300000\")), make(123n, -5))\n *\n * @since 2.0.0\n * @category scaling\n */\nconst normalize = self => {\n  if (self.normalized === undefined) {\n    if (self.value === bigint0) {\n      self.normalized = zero;\n    } else {\n      const digits = `${self.value}`;\n      let trail = 0;\n      for (let i = digits.length - 1; i >= 0; i--) {\n        if (digits[i] === \"0\") {\n          trail++;\n        } else {\n          break;\n        }\n      }\n      if (trail === 0) {\n        self.normalized = self;\n      }\n      const value = BigInt(digits.substring(0, digits.length - trail));\n      const scale = self.scale - trail;\n      self.normalized = make(value, scale);\n    }\n  }\n  return self.normalized;\n};\n\n/**\n * Scales a given `BigDecimal` to the specified scale.\n *\n * If the given scale is smaller than the current scale, the value will be rounded down to\n * the nearest integer.\n *\n * @param self - The `BigDecimal` to scale.\n * @param scale - The scale to scale to.\n *\n * @since 2.0.0\n * @category scaling\n */\nconst scale = (self, scale) => {\n  if (scale > self.scale) {\n    return make(self.value * bigint10 ** BigInt(scale - self.scale), scale);\n  }\n  if (scale < self.scale) {\n    return make(self.value / bigint10 ** BigInt(self.scale - scale), scale);\n  }\n  return self;\n};\n\n/**\n * Provides an addition operation on `BigDecimal`s.\n *\n * @param self - The first operand.\n * @param that - The second operand.\n *\n * @example\n * import { sum, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(sum(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"5\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst sum = /*#__PURE__*/dual(2, (self, that) => {\n  if (that.value === bigint0) {\n    return self;\n  }\n  if (self.value === bigint0) {\n    return that;\n  }\n  if (self.scale > that.scale) {\n    return make(scale(that, self.scale).value + self.value, self.scale);\n  }\n  if (self.scale < that.scale) {\n    return make(scale(self, that.scale).value + that.value, that.scale);\n  }\n  return make(self.value + that.value, self.scale);\n});\n\n/**\n * Provides a multiplication operation on `BigDecimal`s.\n *\n * @param self - The first operand.\n * @param that - The second operand.\n *\n * @example\n * import { multiply, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(multiply(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"6\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst multiply = /*#__PURE__*/dual(2, (self, that) => {\n  if (that.value === bigint0 || self.value === bigint0) {\n    return zero;\n  }\n  return make(self.value * that.value, self.scale + that.scale);\n});\n\n/**\n * Provides a subtraction operation on `BigDecimal`s.\n *\n * @param self - The first operand.\n * @param that - The second operand.\n *\n * @example\n * import { subtract, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(subtract(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"-1\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst subtract = /*#__PURE__*/dual(2, (self, that) => {\n  if (that.value === bigint0) {\n    return self;\n  }\n  if (self.value === bigint0) {\n    return make(-that.value, that.scale);\n  }\n  if (self.scale > that.scale) {\n    return make(self.value - scale(that, self.scale).value, self.scale);\n  }\n  if (self.scale < that.scale) {\n    return make(scale(self, that.scale).value - that.value, that.scale);\n  }\n  return make(self.value - that.value, self.scale);\n});\n\n/**\n * Internal function used for arbitrary precision division.\n */\nconst divideWithPrecision = (num, den, scale, precision) => {\n  if (num === bigint0) {\n    return zero;\n  }\n  const numNegative = num < bigint0;\n  const denNegative = den < bigint0;\n  const negateResult = numNegative !== denNegative;\n  num = numNegative ? -num : num;\n  den = denNegative ? -den : den;\n\n  // Shift digits until numerator is larger than denominator (set scale appropriately).\n  while (num < den) {\n    num *= bigint10;\n    scale++;\n  }\n\n  // First division.\n  let quotient = num / den;\n  let remainder = num % den;\n  if (remainder === bigint0) {\n    // No remainder, return immediately.\n    return make(negateResult ? -quotient : quotient, scale);\n  }\n\n  // The quotient is guaranteed to be non-negative at this point. No need to consider sign.\n  let count = `${quotient}`.length;\n\n  // Shift the remainder by 1 decimal; The quotient will be 1 digit upon next division.\n  remainder *= bigint10;\n  while (remainder !== bigint0 && count < precision) {\n    const q = remainder / den;\n    const r = remainder % den;\n    quotient = quotient * bigint10 + q;\n    remainder = r * bigint10;\n    count++;\n    scale++;\n  }\n  if (remainder !== bigint0) {\n    // Round final number with remainder.\n    quotient += roundTerminal(remainder / den);\n  }\n  return make(negateResult ? -quotient : quotient, scale);\n};\n\n/**\n * Internal function used for rounding.\n *\n * Returns 1 if the most significant digit is >= 5, otherwise 0.\n *\n * This is used after dividing a number by a power of ten and rounding the last digit.\n */\nconst roundTerminal = n => {\n  if (n === bigint0) {\n    return bigint0;\n  }\n  const pos = n > bigint0 ? 0 : 1;\n  return Number(`${n}`[pos]) < 5 ? bigint0 : bigint1;\n};\n\n/**\n * Provides a division operation on `BigDecimal`s.\n *\n * If the dividend is not a multiple of the divisor the result will be a `BigDecimal` value\n * which represents the integer division rounded down to the nearest integer.\n *\n * If the divisor is `0`, the result will be `None`.\n *\n * @param self - The dividend operand.\n * @param that - The divisor operand.\n *\n * @example\n * import { divide, unsafeFromString } from \"effect/BigDecimal\"\n * import { some, none } from \"effect/Option\"\n *\n * assert.deepStrictEqual(divide(unsafeFromString(\"6\"), unsafeFromString(\"3\")), some(unsafeFromString(\"2\")))\n * assert.deepStrictEqual(divide(unsafeFromString(\"6\"), unsafeFromString(\"4\")), some(unsafeFromString(\"1.5\")))\n * assert.deepStrictEqual(divide(unsafeFromString(\"6\"), unsafeFromString(\"0\")), none())\n *\n * @since 2.0.0\n * @category math\n */\nconst divide = /*#__PURE__*/dual(2, (self, that) => {\n  if (that.value === bigint0) {\n    return none();\n  }\n  if (self.value === bigint0) {\n    return some(zero);\n  }\n  const scale = self.scale - that.scale;\n  if (self.value === that.value) {\n    return some(make(bigint1, scale));\n  }\n  return some(divideWithPrecision(self.value, that.value, scale, DEFAULT_PRECISION));\n});\n\n/**\n * Provides an unsafe division operation on `BigDecimal`s.\n *\n * If the dividend is not a multiple of the divisor the result will be a `BigDecimal` value\n * which represents the integer division rounded down to the nearest integer.\n *\n * Throws a `RangeError` if the divisor is `0`.\n *\n * @param self - The dividend operand.\n * @param that - The divisor operand.as\n *\n * @example\n * import { unsafeDivide, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeDivide(unsafeFromString(\"6\"), unsafeFromString(\"3\")), unsafeFromString(\"2\"))\n * assert.deepStrictEqual(unsafeDivide(unsafeFromString(\"6\"), unsafeFromString(\"4\")), unsafeFromString(\"1.5\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst unsafeDivide = /*#__PURE__*/dual(2, (self, that) => {\n  if (that.value === bigint0) {\n    throw new RangeError(\"Division by zero\");\n  }\n  if (self.value === bigint0) {\n    return zero;\n  }\n  const scale = self.scale - that.scale;\n  if (self.value === that.value) {\n    return make(bigint1, scale);\n  }\n  return divideWithPrecision(self.value, that.value, scale, DEFAULT_PRECISION);\n});\n\n/**\n * @since 2.0.0\n * @category instances\n */\nconst Order = /*#__PURE__*/make$1((self, that) => {\n  const scmp = number(sign(self), sign(that));\n  if (scmp !== 0) {\n    return scmp;\n  }\n  if (self.scale > that.scale) {\n    return bigint(self.value, scale(that, self.scale).value);\n  }\n  if (self.scale < that.scale) {\n    return bigint(scale(self, that.scale).value, that.value);\n  }\n  return bigint(self.value, that.value);\n});\n\n/**\n * Returns `true` if the first argument is less than the second, otherwise `false`.\n *\n * @param self - The first argument.\n * @param that - The second argument.\n *\n * @example\n * import { lessThan, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(lessThan(unsafeFromString(\"2\"), unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(lessThan(unsafeFromString(\"3\"), unsafeFromString(\"3\")), false)\n * assert.deepStrictEqual(lessThan(unsafeFromString(\"4\"), unsafeFromString(\"3\")), false)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst lessThan = /*#__PURE__*/lessThan$1(Order);\n\n/**\n * Checks if a given `BigDecimal` is less than or equal to the provided one.\n *\n * @param self - The first `BigDecimal` to compare with.\n * @param that - The second `BigDecimal` to compare with.\n *\n * @example\n * import { lessThanOrEqualTo, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"2\"), unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"3\"), unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(lessThanOrEqualTo(unsafeFromString(\"4\"), unsafeFromString(\"3\")), false)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst lessThanOrEqualTo = /*#__PURE__*/lessThanOrEqualTo$1(Order);\n\n/**\n * Returns `true` if the first argument is greater than the second, otherwise `false`.\n *\n * @param self - The first argument.\n * @param that - The second argument.\n *\n * @example\n * import { greaterThan, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(greaterThan(unsafeFromString(\"2\"), unsafeFromString(\"3\")), false)\n * assert.deepStrictEqual(greaterThan(unsafeFromString(\"3\"), unsafeFromString(\"3\")), false)\n * assert.deepStrictEqual(greaterThan(unsafeFromString(\"4\"), unsafeFromString(\"3\")), true)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst greaterThan = /*#__PURE__*/greaterThan$1(Order);\n\n/**\n * Checks if a given `BigDecimal` is greater than or equal to the provided one.\n *\n * @param self - The first `BigDecimal` to compare with.\n * @param that - The second `BigDecimal` to compare with.\n *\n * @example\n * import { greaterThanOrEqualTo, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"2\"), unsafeFromString(\"3\")), false)\n * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"3\"), unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(greaterThanOrEqualTo(unsafeFromString(\"4\"), unsafeFromString(\"3\")), true)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst greaterThanOrEqualTo = /*#__PURE__*/greaterThanOrEqualTo$1(Order);\n\n/**\n * Checks if a `BigDecimal` is between a `minimum` and `maximum` value (inclusive).\n *\n * @param self - The `number` to check.\n * @param minimum - The `minimum` value to check.\n * @param maximum - The `maximum` value to check.\n *\n * @example\n * import { between, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(between(unsafeFromString(\"0\"), unsafeFromString(\"5\"))(unsafeFromString(\"3\")), true)\n * assert.deepStrictEqual(between(unsafeFromString(\"0\"), unsafeFromString(\"5\"))(unsafeFromString(\"-1\")), false)\n * assert.deepStrictEqual(between(unsafeFromString(\"0\"), unsafeFromString(\"5\"))(unsafeFromString(\"6\")), false)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst between = /*#__PURE__*/between$1(Order);\n\n/**\n * Restricts the given `BigDecimal` to be within the range specified by the `minimum` and `maximum` values.\n *\n * - If the `BigDecimal` is less than the `minimum` value, the function returns the `minimum` value.\n * - If the `BigDecimal` is greater than the `maximum` value, the function returns the `maximum` value.\n * - Otherwise, it returns the original `BigDecimal`.\n *\n * @param self - The `BigDecimal` to be clamped.\n * @param minimum - The lower end of the range.\n * @param maximum - The upper end of the range.\n *\n * @example\n * import { clamp, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(clamp(unsafeFromString(\"0\"), unsafeFromString(\"5\"))(unsafeFromString(\"3\")), unsafeFromString(\"3\"))\n * assert.deepStrictEqual(clamp(unsafeFromString(\"0\"), unsafeFromString(\"5\"))(unsafeFromString(\"-1\")), unsafeFromString(\"0\"))\n * assert.deepStrictEqual(clamp(unsafeFromString(\"0\"), unsafeFromString(\"5\"))(unsafeFromString(\"6\")), unsafeFromString(\"5\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst clamp = /*#__PURE__*/clamp$1(Order);\n\n/**\n * Returns the minimum between two `BigDecimal`s.\n *\n * @param self - The first `BigDecimal`.\n * @param that - The second `BigDecimal`.\n *\n * @example\n * import { min, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(min(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"2\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst min = /*#__PURE__*/min$1(Order);\n\n/**\n * Returns the maximum between two `BigDecimal`s.\n *\n * @param self - The first `BigDecimal`.\n * @param that - The second `BigDecimal`.\n *\n * @example\n * import { max, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(max(unsafeFromString(\"2\"), unsafeFromString(\"3\")), unsafeFromString(\"3\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst max = /*#__PURE__*/max$1(Order);\n\n/**\n * Determines the sign of a given `BigDecimal`.\n *\n * @param n - The `BigDecimal` to determine the sign of.\n *\n * @example\n * import { sign, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(sign(unsafeFromString(\"-5\")), -1)\n * assert.deepStrictEqual(sign(unsafeFromString(\"0\")), 0)\n * assert.deepStrictEqual(sign(unsafeFromString(\"5\")), 1)\n *\n * @since 2.0.0\n * @category math\n */\nconst sign = n => n.value === bigint0 ? 0 : n.value < bigint0 ? -1 : 1;\n\n/**\n * Determines the absolute value of a given `BigDecimal`.\n *\n * @param n - The `BigDecimal` to determine the absolute value of.\n *\n * @example\n * import { abs, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(abs(unsafeFromString(\"-5\")), unsafeFromString(\"5\"))\n * assert.deepStrictEqual(abs(unsafeFromString(\"0\")), unsafeFromString(\"0\"))\n * assert.deepStrictEqual(abs(unsafeFromString(\"5\")), unsafeFromString(\"5\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst abs = n => n.value < bigint0 ? make(-n.value, n.scale) : n;\n\n/**\n * Provides a negate operation on `BigDecimal`s.\n *\n * @param n - The `BigDecimal` to negate.\n *\n * @example\n * import { negate, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(negate(unsafeFromString(\"3\")), unsafeFromString(\"-3\"))\n * assert.deepStrictEqual(negate(unsafeFromString(\"-6\")), unsafeFromString(\"6\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst negate = n => make(-n.value, n.scale);\n\n/**\n * Returns the remainder left over when one operand is divided by a second operand.\n *\n * If the divisor is `0`, the result will be `None`.\n *\n * @param self - The dividend.\n * @param divisor - The divisor.\n *\n * @example\n * import { remainder, unsafeFromString } from \"effect/BigDecimal\"\n * import { some, none } from \"effect/Option\"\n *\n * assert.deepStrictEqual(remainder(unsafeFromString(\"2\"), unsafeFromString(\"2\")), some(unsafeFromString(\"0\")))\n * assert.deepStrictEqual(remainder(unsafeFromString(\"3\"), unsafeFromString(\"2\")), some(unsafeFromString(\"1\")))\n * assert.deepStrictEqual(remainder(unsafeFromString(\"-4\"), unsafeFromString(\"2\")), some(unsafeFromString(\"0\")))\n *\n * @since 2.0.0\n * @category math\n */\nconst remainder = /*#__PURE__*/dual(2, (self, divisor) => {\n  if (divisor.value === bigint0) {\n    return none();\n  }\n  const max = Math.max(self.scale, divisor.scale);\n  return some(make(scale(self, max).value % scale(divisor, max).value, max));\n});\n\n/**\n * Returns the remainder left over when one operand is divided by a second operand.\n *\n * Throws a `RangeError` if the divisor is `0`.\n *\n * @param self - The dividend.\n * @param divisor - The divisor.\n *\n * @example\n * import { unsafeRemainder, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"2\"), unsafeFromString(\"2\")), unsafeFromString(\"0\"))\n * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"3\"), unsafeFromString(\"2\")), unsafeFromString(\"1\"))\n * assert.deepStrictEqual(unsafeRemainder(unsafeFromString(\"-4\"), unsafeFromString(\"2\")), unsafeFromString(\"0\"))\n *\n * @since 2.0.0\n * @category math\n */\nconst unsafeRemainder = /*#__PURE__*/dual(2, (self, divisor) => {\n  if (divisor.value === bigint0) {\n    throw new RangeError(\"Division by zero\");\n  }\n  const max = Math.max(self.scale, divisor.scale);\n  return make(scale(self, max).value % scale(divisor, max).value, max);\n});\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Equivalence = /*#__PURE__*/make$2((self, that) => {\n  if (self.scale > that.scale) {\n    return scale(that, self.scale).value === self.value;\n  }\n  if (self.scale < that.scale) {\n    return scale(self, that.scale).value === that.value;\n  }\n  return self.value === that.value;\n});\n\n/**\n * Checks if two `BigDecimal`s are equal.\n *\n * @since 2.0.0\n * @category predicates\n */\nconst equals = /*#__PURE__*/dual(2, (self, that) => Equivalence(self, that));\n\n/**\n * Creates a `BigDecimal` from a `bigint` value.\n *\n * @param value - The `bigint` value to create a `BigDecimal` from.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromBigInt = n => make(n, 0);\n\n/**\n * Creates a `BigDecimal` from a `number` value.\n *\n * It is not recommended to convert a floating point number to a decimal directly,\n * as the floating point representation may be unexpected.\n *\n * @param value - The `number` value to create a `BigDecimal` from.\n *\n * @example\n * import { fromNumber, make } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(fromNumber(123), make(123n, 0))\n * assert.deepStrictEqual(fromNumber(123.456), make(123456n, 3))\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromNumber = n => {\n  const [lead, trail = \"\"] = `${n}`.split(\".\");\n  return make(BigInt(`${lead}${trail}`), trail.length);\n};\n\n/**\n * Parses a numerical `string` into a `BigDecimal`.\n *\n * @param s - The `string` to parse.\n *\n * @example\n * import { fromString, make } from \"effect/BigDecimal\"\n * import { some, none } from \"effect/Option\"\n *\n * assert.deepStrictEqual(fromString(\"123\"), some(make(123n, 0)))\n * assert.deepStrictEqual(fromString(\"123.456\"), some(make(123456n, 3)))\n * assert.deepStrictEqual(fromString(\"123.abc\"), none())\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromString = s => {\n  let digits;\n  let scale;\n  const dot = s.search(/\\./);\n  if (dot !== -1) {\n    const lead = s.slice(0, dot);\n    const trail = s.slice(dot + 1);\n    digits = `${lead}${trail}`;\n    scale = trail.length;\n  } else {\n    digits = s;\n    scale = 0;\n  }\n  if (digits === \"\") {\n    // TODO: This mimics the BigInt constructor behavior. Should this be `Option.none()`?\n    return some(zero);\n  }\n  if (!/^(?:\\+|-)?\\d+$/.test(digits)) {\n    return none();\n  }\n  return some(make(BigInt(digits), scale));\n};\n\n/**\n * Parses a numerical `string` into a `BigDecimal`.\n *\n * @param s - The `string` to parse.\n *\n * @example\n * import { unsafeFromString, make } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeFromString(\"123\"), make(123n, 0))\n * assert.deepStrictEqual(unsafeFromString(\"123.456\"), make(123456n, 3))\n * assert.throws(() => unsafeFromString(\"123.abc\"))\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unsafeFromString = s => getOrThrowWith(fromString(s), () => new Error(\"Invalid numerical string\"));\n\n/**\n * Formats a given `BigDecimal` as a `string`.\n *\n * @param normalized - The `BigDecimal` to format.\n *\n * @example\n * import { toString, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(toString(unsafeFromString(\"-5\")), \"-5\")\n * assert.deepStrictEqual(toString(unsafeFromString(\"123.456\")), \"123.456\")\n * assert.deepStrictEqual(toString(unsafeFromString(\"-0.00000123\")), \"-0.00000123\")\n *\n * @since 2.0.0\n * @category conversions\n */\nconst toString = n => {\n  const negative = n.value < bigint0;\n  const absolute = negative ? `${n.value}`.substring(1) : `${n.value}`;\n  let before;\n  let after;\n  if (n.scale >= absolute.length) {\n    before = \"0\";\n    after = \"0\".repeat(n.scale - absolute.length) + absolute;\n  } else {\n    const location = absolute.length - n.scale;\n    if (location > absolute.length) {\n      const zeros = location - absolute.length;\n      before = `${absolute}${\"0\".repeat(zeros)}`;\n      after = \"\";\n    } else {\n      after = absolute.slice(location);\n      before = absolute.slice(0, location);\n    }\n  }\n  const complete = after === \"\" ? before : `${before}.${after}`;\n  return negative ? `-${complete}` : complete;\n};\n\n/**\n * Converts a `BigDecimal` to a `number`.\n *\n * This function will produce incorrect results if the `BigDecimal` exceeds the 64-bit range of a `number`.\n *\n * @param n - The `BigDecimal` to convert.\n *\n * @example\n * import { unsafeToNumber, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(unsafeToNumber(unsafeFromString(\"123.456\")), 123.456)\n *\n * @since 2.0.0\n * @category conversions\n */\nconst unsafeToNumber = n => Number(toString(n));\n\n/**\n * Checks if a given `BigDecimal` is an integer.\n *\n * @param n - The `BigDecimal` to check.\n *\n * @example\n * import { isInteger, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(isInteger(unsafeFromString(\"0\")), true)\n * assert.deepStrictEqual(isInteger(unsafeFromString(\"1\")), true)\n * assert.deepStrictEqual(isInteger(unsafeFromString(\"1.1\")), false)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst isInteger = n => normalize(n).scale <= 0;\n\n/**\n * Checks if a given `BigDecimal` is `0`.\n *\n * @param n - The `BigDecimal` to check.\n *\n * @example\n * import { isZero, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(isZero(unsafeFromString(\"0\")), true)\n * assert.deepStrictEqual(isZero(unsafeFromString(\"1\")), false)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst isZero = n => n.value === bigint0;\n\n/**\n * Checks if a given `BigDecimal` is negative.\n *\n * @param n - The `BigDecimal` to check.\n *\n * @example\n * import { isNegative, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(isNegative(unsafeFromString(\"-1\")), true)\n * assert.deepStrictEqual(isNegative(unsafeFromString(\"0\")), false)\n * assert.deepStrictEqual(isNegative(unsafeFromString(\"1\")), false)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst isNegative = n => n.value < bigint0;\n\n/**\n * Checks if a given `BigDecimal` is positive.\n *\n * @param n - The `BigDecimal` to check.\n *\n * @example\n * import { isPositive, unsafeFromString } from \"effect/BigDecimal\"\n *\n * assert.deepStrictEqual(isPositive(unsafeFromString(\"-1\")), false)\n * assert.deepStrictEqual(isPositive(unsafeFromString(\"0\")), false)\n * assert.deepStrictEqual(isPositive(unsafeFromString(\"1\")), true)\n *\n * @since 2.0.0\n * @category predicates\n */\nconst isPositive = n => n.value > bigint0;\n\nexport { Equivalence, Order, TypeId, abs, between, clamp, divide, equals, fromBigInt, fromNumber, fromString, greaterThan, greaterThanOrEqualTo, isBigDecimal, isInteger, isNegative, isPositive, isZero, lessThan, lessThanOrEqualTo, make, max, min, multiply, negate, normalize, remainder, scale, sign, subtract, sum, toString, unsafeDivide, unsafeFromString, unsafeRemainder, unsafeToNumber };\n","import { add } from '../../Context/dist/effect-Context.esm.js';\nimport { clockTag } from '../../internal/clock.esm.js';\nimport { currentRequestBatching, isEffect, flatMap as flatMap$2, currentTracerTimingEnabled, currentUnhandledErrorLogLevel } from '../../internal/core.esm.js';\nimport { currentServices } from '../../internal/defaultServices.esm.js';\nimport { fiberRefLocallyScopedWith as fiberRefLocallyScopedWith$2, fiberRefLocallyScoped as fiberRefLocallyScoped$1 } from '../../internal/fiberRuntime.esm.js';\nimport { LayerTypeId as LayerTypeId$1, isLayer as isLayer$1, isFresh as isFresh$1, build as build$1, buildWithScope as buildWithScope$1, catchAll as catchAll$1, catchAllCause as catchAllCause$1, context as context$1, die as die$1, dieSync as dieSync$1, discard as discard$1, fromEffect, fromEffectDiscard, fromEffectContext, extendScope as extendScope$1, fail as fail$1, failSync as failSync$1, failCause as failCause$1, failCauseSync as failCauseSync$1, flatMap as flatMap$1, flatten as flatten$1, fresh as fresh$1, fromFunction as fromFunction$1, launch as launch$1, map as map$1, mapError as mapError$1, match as match$1, matchCause as matchCause$1, memoize as memoize$1, merge as merge$1, mergeAll as mergeAll$1, orDie as orDie$1, orElse as orElse$1, passthrough as passthrough$1, project as project$1, provide as provide$1, locallyEffect as locallyEffect$1, fiberRefLocally, fiberRefLocallyWith, fiberRefLocallyScoped, fiberRefLocallyScopedWith as fiberRefLocallyScopedWith$1, provideMerge as provideMerge$1, retry as retry$1, scope as scope$1, scoped as scoped$1, scopedDiscard as scopedDiscard$1, scopedContext as scopedContext$1, service as service$1, succeed as succeed$1, succeedContext as succeedContext$1, suspend as suspend$1, sync as sync$1, syncContext as syncContext$1, tap as tap$1, tapError as tapError$1, tapErrorCause as tapErrorCause$1, toRuntime as toRuntime$1, use as use$1, useMerge as useMerge$1, zipWithPar as zipWithPar$1, unwrapEffect as unwrapEffect$1, unwrapScoped as unwrapScoped$1, withSpan as withSpan$1, withParentSpan as withParentSpan$1 } from '../../internal/layer.esm.js';\nimport { setConfigProvider as setConfigProvider$1, parentSpan as parentSpan$1, span as span$1, setTracer as setTracer$1 } from '../../internal/layer/circular.esm.js';\nimport { currentCacheEnabled, currentCache } from '../../internal/query.esm.js';\nimport { currentScheduler } from '../../Scheduler/dist/effect-Scheduler.esm.js';\n\n/**\n * A `Layer<RIn, E, ROut>` describes how to build one or more services in your\n * application. Services can be injected into effects via\n * `Effect.provideService`. Effects can require services via `Effect.service`.\n *\n * Layer can be thought of as recipes for producing bundles of services, given\n * their dependencies (other services).\n *\n * Construction of services can be effectful and utilize resources that must be\n * acquired and safely released when the services are done being utilized.\n *\n * By default layers are shared, meaning that if the same layer is used twice\n * the layer will only be allocated a single time.\n *\n * Because of their excellent composition properties, layers are the idiomatic\n * way in Effect-TS to create services that depend on other services.\n *\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst LayerTypeId = LayerTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Returns `true` if the specified value is a `Layer`, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isLayer = isLayer$1;\n\n/**\n * Returns `true` if the specified `Layer` is a fresh version that will not be\n * shared, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isFresh = isFresh$1;\n\n/**\n * Builds a layer into a scoped value.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst build = build$1;\n\n/**\n * Builds a layer into an `Effect` value. Any resources associated with this\n * layer will be released when the specified scope is closed unless their scope\n * has been extended. This allows building layers where the lifetime of some of\n * the services output by the layer exceed the lifetime of the effect the\n * layer is provided to.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst buildWithScope = buildWithScope$1;\n\n/**\n * Recovers from all errors.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchAll = catchAll$1;\n\n/**\n * Recovers from all errors.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchAllCause = catchAllCause$1;\n\n/**\n * Constructs a `Layer` that passes along the specified context as an\n * output.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst context = context$1;\n\n/**\n * Constructs a layer that dies with the specified defect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst die = die$1;\n\n/**\n * Constructs a layer that dies with the specified defect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst dieSync = dieSync$1;\n\n/**\n * Replaces the layer's output with `void` and includes the layer only for its\n * side-effects.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst discard = discard$1;\n\n/**\n * Constructs a layer from the specified effect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst effect = fromEffect;\n\n/**\n * Constructs a layer from the specified effect discarding it's output.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst effectDiscard = fromEffectDiscard;\n\n/**\n * Constructs a layer from the specified effect, which must return one or more\n * services.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst effectContext = fromEffectContext;\n\n/**\n * Extends the scope of this layer, returning a new layer that when provided\n * to an effect will not immediately release its associated resources when\n * that effect completes execution but instead when the scope the resulting\n * effect depends on is closed.\n *\n * @since 2.0.0\n * @category utils\n */\nconst extendScope = extendScope$1;\n\n/**\n * Constructs a layer that fails with the specified error.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fail = fail$1;\n\n/**\n * Constructs a layer that fails with the specified error.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst failSync = failSync$1;\n\n/**\n * Constructs a layer that fails with the specified cause.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst failCause = failCause$1;\n\n/**\n * Constructs a layer that fails with the specified cause.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst failCauseSync = failCauseSync$1;\n\n/**\n * Constructs a layer dynamically based on the output of this layer.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = flatMap$1;\n\n/**\n * Flattens layers nested in the context of an effect.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatten = flatten$1;\n\n/**\n * Creates a fresh version of this layer that will not be shared.\n *\n * @since 2.0.0\n * @category utils\n */\nconst fresh = fresh$1;\nconst fromFunction = fromFunction$1;\n\n/**\n * Builds this layer and uses it until it is interrupted. This is useful when\n * your entire application is a layer, such as an HTTP server.\n *\n * @since 2.0.0\n * @category conversions\n */\nconst launch = launch$1;\n\n/**\n * Returns a new layer whose output is mapped by the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = map$1;\n\n/**\n * Returns a layer with its error channel mapped using the specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapError = mapError$1;\n\n/**\n * Feeds the error or output services of this layer into the input of either\n * the specified `failure` or `success` layers, resulting in a new layer with\n * the inputs of this layer, and the error or outputs of the specified layer.\n *\n * @since 2.0.0\n * @category folding\n */\nconst match = match$1;\n\n/**\n * Feeds the error or output services of this layer into the input of either\n * the specified `failure` or `success` layers, resulting in a new layer with\n * the inputs of this layer, and the error or outputs of the specified layer.\n *\n * @since 2.0.0\n * @category folding\n */\nconst matchCause = matchCause$1;\n\n/**\n * Returns a scoped effect that, if evaluated, will return the lazily computed\n * result of this layer.\n *\n * @since 2.0.0\n * @category utils\n */\nconst memoize = memoize$1;\n\n/**\n * Combines this layer with the specified layer, producing a new layer that\n * has the inputs and outputs of both.\n *\n * @since 2.0.0\n * @category utils\n */\nconst merge = merge$1;\n\n/**\n * Merges all the layers together in parallel.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst mergeAll = mergeAll$1;\n\n/**\n * Translates effect failure into death of the fiber, making all failures\n * unchecked and not a part of the type of the layer.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orDie = orDie$1;\n\n/**\n * Executes this layer and returns its output, if it succeeds, but otherwise\n * executes the specified layer.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orElse = orElse$1;\n\n/**\n * Returns a new layer that produces the outputs of this layer but also\n * passes through the inputs.\n *\n * @since 2.0.0\n * @category utils\n */\nconst passthrough = passthrough$1;\n\n/**\n * Projects out part of one of the services output by this layer using the\n * specified function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst project = project$1;\n\n/**\n * Feeds the output services of this builder into the input of the specified\n * builder, resulting in a new builder with the inputs of this builder as\n * well as any leftover inputs, and the outputs of the specified builder.\n *\n * @since 2.0.0\n * @category utils\n */\nconst provide = provide$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst locallyEffect = locallyEffect$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst locally = fiberRefLocally;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst locallyWith = fiberRefLocallyWith;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst locallyScoped = fiberRefLocallyScoped;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst fiberRefLocallyScopedWith = fiberRefLocallyScopedWith$1;\n\n/**\n * Feeds the output services of this layer into the input of the specified\n * layer, resulting in a new layer with the inputs of this layer, and the\n * outputs of both layers.\n *\n * @since 2.0.0\n * @category utils\n */\nconst provideMerge = provideMerge$1;\n\n/**\n * Retries constructing this layer according to the specified schedule.\n *\n * @since 2.0.0\n * @category retrying\n */\nconst retry = retry$1;\n\n/**\n * A layer that constructs a scope and closes it when the workflow the layer\n * is provided to completes execution, whether by success, failure, or\n * interruption. This can be used to close a scope when providing a layer to a\n * workflow.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst scope = scope$1;\n\n/**\n * Constructs a layer from the specified scoped effect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst scoped = scoped$1;\n\n/**\n * Constructs a layer from the specified scoped effect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst scopedDiscard = scopedDiscard$1;\n\n/**\n * Constructs a layer from the specified scoped effect, which must return one\n * or more services.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst scopedContext = scopedContext$1;\n\n/**\n * Constructs a layer that accesses and returns the specified service from the\n * context.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst service = service$1;\n\n/**\n * Constructs a layer from the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeed = succeed$1;\n\n/**\n * Constructs a layer from the specified value, which must return one or more\n * services.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeedContext = succeedContext$1;\n\n/**\n * Lazily constructs a layer. This is useful to avoid infinite recursion when\n * creating layers that refer to themselves.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst suspend = suspend$1;\n\n/**\n * Lazily constructs a layer from the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst sync = sync$1;\n\n/**\n * Lazily constructs a layer from the specified value, which must return one or more\n * services.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst syncContext = syncContext$1;\n\n/**\n * Performs the specified effect if this layer succeeds.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tap = tap$1;\n\n/**\n * Performs the specified effect if this layer fails.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapError = tapError$1;\n\n/**\n * Performs the specified effect if this layer fails.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapErrorCause = tapErrorCause$1;\n\n/**\n * Converts a layer that requires no services into a scoped runtime, which can\n * be used to execute effects.\n *\n * @since 2.0.0\n * @category conversions\n */\nconst toRuntime = toRuntime$1;\n\n/**\n * Feeds the output services of this builder into the input of the specified\n * builder, resulting in a new builder with the inputs of this builder as\n * well as any leftover inputs, and the outputs of the specified builder.\n *\n * @since 2.0.0\n * @category utils\n */\nconst use = use$1;\n\n/**\n * Feeds the output services of this layer into the input of the specified\n * layer, resulting in a new layer with the inputs of this layer, and the\n * outputs of both layers.\n *\n * @since 2.0.0\n * @category utils\n */\nconst useMerge = useMerge$1;\n\n/**\n * Combines this layer the specified layer, producing a new layer that has the\n * inputs of both, and the outputs of both combined using the specified\n * function.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWithPar = zipWithPar$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst unwrapEffect = unwrapEffect$1;\n\n/**\n * @since 2.0.0\n * @category utils\n */\nconst unwrapScoped = unwrapScoped$1;\n\n/**\n * @since 2.0.0\n * @category clock\n */\nconst setClock = clock => scopedDiscard(fiberRefLocallyScopedWith$2(currentServices, add(clockTag, clock)));\n\n/**\n * Sets the current `ConfigProvider`.\n *\n * @since 2.0.0\n * @category config\n */\nconst setConfigProvider = setConfigProvider$1;\n\n/**\n * Adds the provided span to the span stack.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst parentSpan = parentSpan$1;\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nconst setRequestBatching = requestBatching => scopedDiscard(fiberRefLocallyScoped$1(currentRequestBatching, requestBatching));\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nconst setRequestCaching = requestCaching => scopedDiscard(fiberRefLocallyScoped$1(currentCacheEnabled, requestCaching));\n\n/**\n * @since 2.0.0\n * @category requests & batching\n */\nconst setRequestCache = cache => scopedDiscard(isEffect(cache) ? flatMap$2(cache, x => fiberRefLocallyScoped$1(currentCache, x)) : fiberRefLocallyScoped$1(currentCache, cache));\n\n/**\n * @since 2.0.0\n * @category scheduler\n */\nconst setScheduler = scheduler => scopedDiscard(fiberRefLocallyScoped$1(currentScheduler, scheduler));\n\n/**\n * Create and add a span to the current span stack.\n *\n * The span is ended when the Layer is released.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst span = span$1;\n\n/**\n * Create a Layer that sets the current Tracer\n *\n * @since 2.0.0\n * @category tracing\n */\nconst setTracer = setTracer$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst setTracerTiming = enabled => scopedDiscard(fiberRefLocallyScoped$1(currentTracerTimingEnabled, enabled));\n\n/**\n * @since 2.0.0\n * @category logging\n */\nconst setUnhandledErrorLogLevel = level => scopedDiscard(fiberRefLocallyScoped$1(currentUnhandledErrorLogLevel, level));\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst withSpan = withSpan$1;\n\n/**\n * @since 2.0.0\n * @category tracing\n */\nconst withParentSpan = withParentSpan$1;\n\nexport { LayerTypeId, build, buildWithScope, catchAll, catchAllCause, context, die, dieSync, discard, effect, effectContext, effectDiscard, extendScope, fail, failCause, failCauseSync, failSync, fiberRefLocallyScopedWith, flatMap, flatten, fresh, fromFunction as function, isFresh, isLayer, launch, locally, locallyEffect, locallyScoped, locallyWith, map, mapError, match, matchCause, memoize, merge, mergeAll, orDie, orElse, parentSpan, passthrough, project, provide, provideMerge, retry, scope, scoped, scopedContext, scopedDiscard, service, setClock, setConfigProvider, setRequestBatching, setRequestCache, setRequestCaching, setScheduler, setTracer, setTracerTiming, setUnhandledErrorLogLevel, span, succeed, succeedContext, suspend, sync, syncContext, tap, tapError, tapErrorCause, toRuntime, unwrapEffect, unwrapScoped, use, useMerge, withParentSpan, withSpan, zipWithPar };\n","import { make } from '../../Context/dist/effect-Context.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { add, remove } from '../../HashSet/dist/effect-HashSet.esm.js';\nimport { fiberRefLocally, map, tap } from '../core.esm.js';\nimport { fiberRefLocallyScoped, currentMinimumLogLevel, fiberRefLocallyScopedWith, currentLoggers, currentSupervisor, withRuntimeFlagsScoped, withConfigProviderScoped, makeSpanScoped, addFinalizer, withTracerScoped } from '../fiberRuntime.esm.js';\nimport { scopedDiscard, unwrapEffect, unwrapScoped, flatMap, succeedContext, scoped } from '../layer.esm.js';\nimport { CooperativeYielding, Interruption, OpSupervision, RuntimeMetrics, WindDown } from '../runtimeFlags.esm.js';\nimport { enable, disable } from '../runtimeFlagsPatch.esm.js';\nimport { Zip } from '../supervisor.esm.js';\nimport { spanTag } from '../tracer.esm.js';\n\n// circular with Logger\n\n/** @internal */\nconst minimumLogLevel = level => scopedDiscard(fiberRefLocallyScoped(currentMinimumLogLevel, level));\n\n/** @internal */\nconst withMinimumLogLevel = /*#__PURE__*/dual(2, (self, level) => fiberRefLocally(currentMinimumLogLevel, level)(self));\n\n/** @internal */\nconst addLogger = logger => scopedDiscard(fiberRefLocallyScopedWith(currentLoggers, add(logger)));\n\n/** @internal */\nconst addLoggerEffect = effect => unwrapEffect(map(effect, addLogger));\n\n/** @internal */\nconst addLoggerScoped = effect => unwrapScoped(map(effect, addLogger));\n\n/** @internal */\nconst removeLogger = logger => scopedDiscard(fiberRefLocallyScopedWith(currentLoggers, remove(logger)));\n\n/** @internal */\nconst replaceLogger = /*#__PURE__*/dual(2, (self, that) => flatMap(removeLogger(self), () => addLogger(that)));\n\n/** @internal */\nconst replaceLoggerEffect = /*#__PURE__*/dual(2, (self, that) => flatMap(removeLogger(self), () => addLoggerEffect(that)));\n\n/** @internal */\nconst replaceLoggerScoped = /*#__PURE__*/dual(2, (self, that) => flatMap(removeLogger(self), () => addLoggerScoped(that)));\n\n/** @internal */\nconst addSupervisor = supervisor => scopedDiscard(fiberRefLocallyScopedWith(currentSupervisor, current => new Zip(current, supervisor)));\n\n/** @internal */\nconst enableCooperativeYielding = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/enable(CooperativeYielding)));\n\n/** @internal */\nconst enableInterruption = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/enable(Interruption)));\n\n/** @internal */\nconst enableOpSupervision = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/enable(OpSupervision)));\n\n/** @internal */\nconst enableRuntimeMetrics = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/enable(RuntimeMetrics)));\n\n/** @internal */\nconst enableWindDown = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/enable(WindDown)));\n\n/** @internal */\nconst disableCooperativeYielding = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/disable(CooperativeYielding)));\n\n/** @internal */\nconst disableInterruption = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/disable(Interruption)));\n\n/** @internal */\nconst disableOpSupervision = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/disable(OpSupervision)));\n\n/** @internal */\nconst disableRuntimeMetrics = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/disable(RuntimeMetrics)));\n\n/** @internal */\nconst disableWindDown = /*#__PURE__*/scopedDiscard( /*#__PURE__*/withRuntimeFlagsScoped( /*#__PURE__*/disable(WindDown)));\n\n/** @internal */\nconst setConfigProvider = configProvider => scopedDiscard(withConfigProviderScoped(configProvider));\n\n/** @internal */\nconst parentSpan = span => succeedContext(make(spanTag, span));\n\n/** @internal */\nconst span = (name, options) => scoped(spanTag, options?.onEnd ? tap(makeSpanScoped(name, options), span => addFinalizer(exit => options.onEnd(span, exit))) : makeSpanScoped(name, options));\n\n/** @internal */\nconst setTracer = tracer => scopedDiscard(withTracerScoped(tracer));\n\nexport { addLogger, addLoggerEffect, addLoggerScoped, addSupervisor, disableCooperativeYielding, disableInterruption, disableOpSupervision, disableRuntimeMetrics, disableWindDown, enableCooperativeYielding, enableInterruption, enableOpSupervision, enableRuntimeMetrics, enableWindDown, minimumLogLevel, parentSpan, removeLogger, replaceLogger, replaceLoggerEffect, replaceLoggerScoped, setConfigProvider, setTracer, span, withMinimumLogLevel };\n","import { head, prepend, filter, isEmpty as isEmpty$2, fromIterable as fromIterable$1, appendAll, append, empty as empty$1 } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { pipe, dual } from '../Function/dist/effect-Function.esm.js';\nimport { flatMap, sync, map, deferredMake, fiberId, withFiberRuntime, unit, succeed, deferredUnsafeDone, deferredInterruptWith, asUnit, deferredUnsafeMake, onInterrupt, suspend, interrupt, deferredAwait, catchAll, uninterruptible, whenEffect, deferredSucceed, zipRight } from './core.esm.js';\nimport { forEachParUnboundedDiscard } from './fiberRuntime.esm.js';\nimport { bounded as bounded$1, unbounded as unbounded$1, length, isEmpty as isEmpty$1, poll as poll$1, EmptyMutableQueue, offer as offer$1, offerAll as offerAll$1, pollUpTo, capacity as capacity$1 } from '../MutableQueue/dist/effect-MutableQueue.esm.js';\nimport { make as make$1, get, set } from '../MutableRef/dist/effect-MutableRef.esm.js';\nimport { none, some } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { fromIterable, empty, splitAt } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\n\n/** @internal */\nconst EnqueueSymbolKey = \"effect/QueueEnqueue\";\n\n/** @internal */\nconst EnqueueTypeId = /*#__PURE__*/Symbol.for(EnqueueSymbolKey);\n\n/** @internal */\nconst DequeueSymbolKey = \"effect/QueueDequeue\";\n\n/** @internal */\nconst DequeueTypeId = /*#__PURE__*/Symbol.for(DequeueSymbolKey);\n\n/** @internal */\nconst QueueStrategySymbolKey = \"effect/QueueStrategy\";\n\n/** @internal */\nconst QueueStrategyTypeId = /*#__PURE__*/Symbol.for(QueueStrategySymbolKey);\n\n/** @internal */\nconst queueStrategyVariance = {\n  _A: _ => _\n};\n\n/** @internal */\nconst enqueueVariance = {\n  _In: _ => _\n};\n\n/** @internal */\nconst dequeueVariance = {\n  _Out: _ => _\n};\n\n/** @internal */\nclass QueueImpl {\n  [EnqueueTypeId] = enqueueVariance;\n  [DequeueTypeId] = dequeueVariance;\n  constructor( /** @internal */\n  queue, /** @internal */\n  takers, /** @internal */\n  shutdownHook, /** @internal */\n  shutdownFlag, /** @internal */\n  strategy) {\n    this.queue = queue;\n    this.takers = takers;\n    this.shutdownHook = shutdownHook;\n    this.shutdownFlag = shutdownFlag;\n    this.strategy = strategy;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  capacity() {\n    return this.queue.capacity();\n  }\n  size() {\n    return suspend(() => catchAll(this.unsafeSize(), () => interrupt));\n  }\n  unsafeSize() {\n    if (get(this.shutdownFlag)) {\n      return none();\n    }\n    return some(this.queue.length() - length(this.takers) + this.strategy.surplusSize());\n  }\n  isEmpty() {\n    return map(this.size(), size => size <= 0);\n  }\n  isFull() {\n    return map(this.size(), size => size >= this.capacity());\n  }\n  shutdown() {\n    return uninterruptible(withFiberRuntime(state => {\n      pipe(this.shutdownFlag, set(true));\n      return pipe(forEachParUnboundedDiscard(unsafePollAll(this.takers), d => deferredInterruptWith(d, state.id()), false), zipRight(this.strategy.shutdown()), whenEffect(deferredSucceed(this.shutdownHook, void 0)), asUnit);\n    }));\n  }\n  isShutdown() {\n    return sync(() => get(this.shutdownFlag));\n  }\n  awaitShutdown() {\n    return deferredAwait(this.shutdownHook);\n  }\n  isActive() {\n    return !get(this.shutdownFlag);\n  }\n  unsafeOffer(value) {\n    if (get(this.shutdownFlag)) {\n      return false;\n    }\n    let noRemaining;\n    if (this.queue.length() === 0) {\n      const taker = pipe(this.takers, poll$1(EmptyMutableQueue));\n      if (taker !== EmptyMutableQueue) {\n        unsafeCompleteDeferred(taker, value);\n        noRemaining = true;\n      } else {\n        noRemaining = false;\n      }\n    } else {\n      noRemaining = false;\n    }\n    if (noRemaining) {\n      return true;\n    }\n    // Not enough takers, offer to the queue\n    const succeeded = this.queue.offer(value);\n    unsafeCompleteTakers(this.strategy, this.queue, this.takers);\n    return succeeded;\n  }\n  offer(value) {\n    return suspend(() => {\n      if (get(this.shutdownFlag)) {\n        return interrupt;\n      }\n      let noRemaining;\n      if (this.queue.length() === 0) {\n        const taker = pipe(this.takers, poll$1(EmptyMutableQueue));\n        if (taker !== EmptyMutableQueue) {\n          unsafeCompleteDeferred(taker, value);\n          noRemaining = true;\n        } else {\n          noRemaining = false;\n        }\n      } else {\n        noRemaining = false;\n      }\n      if (noRemaining) {\n        return succeed(true);\n      }\n      // Not enough takers, offer to the queue\n      const succeeded = this.queue.offer(value);\n      unsafeCompleteTakers(this.strategy, this.queue, this.takers);\n      return succeeded ? succeed(true) : this.strategy.handleSurplus([value], this.queue, this.takers, this.shutdownFlag);\n    });\n  }\n  offerAll(iterable) {\n    return suspend(() => {\n      if (get(this.shutdownFlag)) {\n        return interrupt;\n      }\n      const values = fromIterable(iterable);\n      const pTakers = this.queue.length() === 0 ? fromIterable(unsafePollN(this.takers, values.length)) : empty;\n      const [forTakers, remaining] = pipe(values, splitAt(pTakers.length));\n      for (let i = 0; i < pTakers.length; i++) {\n        const taker = pTakers[i];\n        const item = forTakers[i];\n        unsafeCompleteDeferred(taker, item);\n      }\n      if (remaining.length === 0) {\n        return succeed(true);\n      }\n      // Not enough takers, offer to the queue\n      const surplus = this.queue.offerAll(remaining);\n      unsafeCompleteTakers(this.strategy, this.queue, this.takers);\n      return isEmpty$2(surplus) ? succeed(true) : this.strategy.handleSurplus(surplus, this.queue, this.takers, this.shutdownFlag);\n    });\n  }\n  take() {\n    return withFiberRuntime(state => {\n      if (get(this.shutdownFlag)) {\n        return interrupt;\n      }\n      const item = this.queue.poll(EmptyMutableQueue);\n      if (item !== EmptyMutableQueue) {\n        this.strategy.unsafeOnQueueEmptySpace(this.queue, this.takers);\n        return succeed(item);\n      } else {\n        // Add the deferred to takers, then:\n        // - Try to take again in case a value was added since\n        // - Wait for the deferred to be completed\n        // - Clean up resources in case of interruption\n        const deferred = deferredUnsafeMake(state.id());\n        return pipe(suspend(() => {\n          pipe(this.takers, offer$1(deferred));\n          unsafeCompleteTakers(this.strategy, this.queue, this.takers);\n          return get(this.shutdownFlag) ? interrupt : deferredAwait(deferred);\n        }), onInterrupt(() => {\n          return sync(() => unsafeRemove(this.takers, deferred));\n        }));\n      }\n    });\n  }\n  takeAll() {\n    return suspend(() => {\n      return get(this.shutdownFlag) ? interrupt : sync(() => {\n        const values = this.queue.pollUpTo(Number.POSITIVE_INFINITY);\n        this.strategy.unsafeOnQueueEmptySpace(this.queue, this.takers);\n        return fromIterable$1(values);\n      });\n    });\n  }\n  takeUpTo(max) {\n    return suspend(() => get(this.shutdownFlag) ? interrupt : sync(() => {\n      const values = this.queue.pollUpTo(max);\n      this.strategy.unsafeOnQueueEmptySpace(this.queue, this.takers);\n      return fromIterable$1(values);\n    }));\n  }\n  takeBetween(min, max) {\n    return suspend(() => takeRemainderLoop(this, min, max, empty$1()));\n  }\n}\n\n/** @internal */\nconst takeRemainderLoop = (self, min, max, acc) => {\n  if (max < min) {\n    return succeed(acc);\n  }\n  return pipe(takeUpTo(self, max), flatMap(bs => {\n    const remaining = min - bs.length;\n    if (remaining === 1) {\n      return pipe(take(self), map(b => pipe(acc, appendAll(bs), append(b))));\n    }\n    if (remaining > 1) {\n      return pipe(take(self), flatMap(b => takeRemainderLoop(self, remaining - 1, max - bs.length - 1, pipe(acc, appendAll(bs), append(b)))));\n    }\n    return succeed(pipe(acc, appendAll(bs)));\n  }));\n};\n\n/** @internal */\nconst isQueue = u => isEnqueue(u) && isDequeue(u);\n\n/** @internal */\nconst isEnqueue = u => hasProperty(u, EnqueueTypeId);\n\n/** @internal */\nconst isDequeue = u => hasProperty(u, DequeueTypeId);\n\n/** @internal */\nconst bounded = requestedCapacity => pipe(sync(() => bounded$1(requestedCapacity)), flatMap(queue => make(backingQueueFromMutableQueue(queue), backPressureStrategy())));\n\n/** @internal */\nconst dropping = requestedCapacity => pipe(sync(() => bounded$1(requestedCapacity)), flatMap(queue => make(backingQueueFromMutableQueue(queue), droppingStrategy())));\n\n/** @internal */\nconst sliding = requestedCapacity => pipe(sync(() => bounded$1(requestedCapacity)), flatMap(queue => make(backingQueueFromMutableQueue(queue), slidingStrategy())));\n\n/** @internal */\nconst unbounded = () => pipe(sync(() => unbounded$1()), flatMap(queue => make(backingQueueFromMutableQueue(queue), droppingStrategy())));\n\n/** @internal */\nconst unsafeMake = (queue, takers, shutdownHook, shutdownFlag, strategy) => {\n  return new QueueImpl(queue, takers, shutdownHook, shutdownFlag, strategy);\n};\n\n/** @internal */\nconst make = (queue, strategy) => pipe(deferredMake(), map(deferred => unsafeMake(queue, unbounded$1(), deferred, make$1(false), strategy)));\n\n/** @internal */\nclass BackingQueueFromMutableQueue {\n  constructor(mutable) {\n    this.mutable = mutable;\n  }\n  poll(def) {\n    return poll$1(this.mutable, def);\n  }\n  pollUpTo(limit) {\n    return pollUpTo(this.mutable, limit);\n  }\n  offerAll(elements) {\n    return offerAll$1(this.mutable, elements);\n  }\n  offer(element) {\n    return offer$1(this.mutable, element);\n  }\n  capacity() {\n    return capacity$1(this.mutable);\n  }\n  length() {\n    return length(this.mutable);\n  }\n}\n\n/** @internal */\nconst backingQueueFromMutableQueue = mutable => new BackingQueueFromMutableQueue(mutable);\n\n/** @internal */\nconst capacity = self => self.capacity();\n\n/** @internal */\nconst size = self => self.size();\n\n/** @internal */\nconst isFull = self => self.isFull();\n\n/** @internal */\nconst isEmpty = self => self.isEmpty();\n\n/** @internal */\nconst isShutdown = self => self.isShutdown();\n\n/** @internal */\nconst awaitShutdown = self => self.awaitShutdown();\n\n/** @internal */\nconst shutdown = self => self.shutdown();\n\n/** @internal */\nconst offer = /*#__PURE__*/dual(2, (self, value) => self.offer(value));\n\n/** @internal */\nconst unsafeOffer = /*#__PURE__*/dual(2, (self, value) => self.unsafeOffer(value));\n\n/** @internal */\nconst offerAll = /*#__PURE__*/dual(2, (self, iterable) => self.offerAll(iterable));\n\n/** @internal */\nconst poll = self => map(self.takeUpTo(1), head);\n\n/** @internal */\nconst take = self => self.take();\n\n/** @internal */\nconst takeAll = self => self.takeAll();\n\n/** @internal */\nconst takeUpTo = /*#__PURE__*/dual(2, (self, max) => self.takeUpTo(max));\n\n/** @internal */\nconst takeBetween = /*#__PURE__*/dual(3, (self, min, max) => self.takeBetween(min, max));\n\n/** @internal */\nconst takeN = /*#__PURE__*/dual(2, (self, n) => self.takeBetween(n, n));\n\n// -----------------------------------------------------------------------------\n// Strategy\n// -----------------------------------------------------------------------------\n\n/** @internal */\nconst backPressureStrategy = () => new BackPressureStrategy();\n\n/** @internal */\nconst droppingStrategy = () => new DroppingStrategy();\n\n/** @internal */\nconst slidingStrategy = () => new SlidingStrategy();\n\n/** @internal */\nclass BackPressureStrategy {\n  [QueueStrategyTypeId] = queueStrategyVariance;\n  putters = unbounded$1();\n  surplusSize() {\n    return length(this.putters);\n  }\n  onCompleteTakersWithEmptyQueue(takers) {\n    while (!isEmpty$1(this.putters) && !isEmpty$1(takers)) {\n      const taker = poll$1(takers, void 0);\n      const putter = poll$1(this.putters, void 0);\n      if (putter[2]) {\n        unsafeCompleteDeferred(putter[1], true);\n      }\n      unsafeCompleteDeferred(taker, putter[0]);\n    }\n  }\n  shutdown() {\n    return pipe(fiberId, flatMap(fiberId => pipe(sync(() => unsafePollAll(this.putters)), flatMap(putters => forEachParUnboundedDiscard(putters, ([_, deferred, isLastItem]) => isLastItem ? pipe(deferredInterruptWith(deferred, fiberId), asUnit) : unit, false)))));\n  }\n  handleSurplus(iterable, queue, takers, isShutdown) {\n    return withFiberRuntime(state => {\n      const deferred = deferredUnsafeMake(state.id());\n      return pipe(suspend(() => {\n        this.unsafeOffer(iterable, deferred);\n        this.unsafeOnQueueEmptySpace(queue, takers);\n        unsafeCompleteTakers(this, queue, takers);\n        return get(isShutdown) ? interrupt : deferredAwait(deferred);\n      }), onInterrupt(() => sync(() => this.unsafeRemove(deferred))));\n    });\n  }\n  unsafeOnQueueEmptySpace(queue, takers) {\n    let keepPolling = true;\n    while (keepPolling && (queue.capacity() === Number.POSITIVE_INFINITY || queue.length() < queue.capacity())) {\n      const putter = pipe(this.putters, poll$1(EmptyMutableQueue));\n      if (putter === EmptyMutableQueue) {\n        keepPolling = false;\n      } else {\n        const offered = queue.offer(putter[0]);\n        if (offered && putter[2]) {\n          unsafeCompleteDeferred(putter[1], true);\n        } else if (!offered) {\n          unsafeOfferAll(this.putters, pipe(unsafePollAll(this.putters), prepend(putter)));\n        }\n        unsafeCompleteTakers(this, queue, takers);\n      }\n    }\n  }\n  unsafeOffer(iterable, deferred) {\n    const stuff = Array.from(iterable);\n    for (let i = 0; i < stuff.length; i++) {\n      const value = stuff[i];\n      if (i === stuff.length - 1) {\n        pipe(this.putters, offer$1([value, deferred, true]));\n      } else {\n        pipe(this.putters, offer$1([value, deferred, false]));\n      }\n    }\n  }\n  unsafeRemove(deferred) {\n    unsafeOfferAll(this.putters, pipe(unsafePollAll(this.putters), filter(([, _]) => _ !== deferred)));\n  }\n}\n\n/** @internal */\nclass DroppingStrategy {\n  [QueueStrategyTypeId] = queueStrategyVariance;\n  surplusSize() {\n    return 0;\n  }\n  shutdown() {\n    return unit;\n  }\n  onCompleteTakersWithEmptyQueue() {}\n  handleSurplus(_iterable, _queue, _takers, _isShutdown) {\n    return succeed(false);\n  }\n  unsafeOnQueueEmptySpace(_queue, _takers) {\n    //\n  }\n}\n\n/** @internal */\nclass SlidingStrategy {\n  [QueueStrategyTypeId] = queueStrategyVariance;\n  surplusSize() {\n    return 0;\n  }\n  shutdown() {\n    return unit;\n  }\n  onCompleteTakersWithEmptyQueue() {}\n  handleSurplus(iterable, queue, takers, _isShutdown) {\n    return sync(() => {\n      this.unsafeOffer(queue, iterable);\n      unsafeCompleteTakers(this, queue, takers);\n      return true;\n    });\n  }\n  unsafeOnQueueEmptySpace(_queue, _takers) {\n    //\n  }\n  unsafeOffer(queue, iterable) {\n    const iterator = iterable[Symbol.iterator]();\n    let next;\n    let offering = true;\n    while (!(next = iterator.next()).done && offering) {\n      if (queue.capacity() === 0) {\n        return;\n      }\n      // Poll 1 and retry\n      queue.poll(EmptyMutableQueue);\n      offering = queue.offer(next.value);\n    }\n  }\n}\n\n/** @internal */\nconst unsafeCompleteDeferred = (deferred, a) => {\n  return deferredUnsafeDone(deferred, succeed(a));\n};\n\n/** @internal */\nconst unsafeOfferAll = (queue, as) => {\n  return pipe(queue, offerAll$1(as));\n};\n\n/** @internal */\nconst unsafePollAll = queue => {\n  return pipe(queue, pollUpTo(Number.POSITIVE_INFINITY));\n};\n\n/** @internal */\nconst unsafePollN = (queue, max) => {\n  return pipe(queue, pollUpTo(max));\n};\n\n/** @internal */\nconst unsafeRemove = (queue, a) => {\n  unsafeOfferAll(queue, pipe(unsafePollAll(queue), filter(b => a !== b)));\n};\n\n/** @internal */\nconst unsafeCompleteTakers = (strategy, queue, takers) => {\n  // Check both a taker and an item are in the queue, starting with the taker\n  let keepPolling = true;\n  while (keepPolling && queue.length() !== 0) {\n    const taker = pipe(takers, poll$1(EmptyMutableQueue));\n    if (taker !== EmptyMutableQueue) {\n      const element = queue.poll(EmptyMutableQueue);\n      if (element !== EmptyMutableQueue) {\n        unsafeCompleteDeferred(taker, element);\n        strategy.unsafeOnQueueEmptySpace(queue, takers);\n      } else {\n        unsafeOfferAll(takers, pipe(unsafePollAll(takers), prepend(taker)));\n      }\n      keepPolling = true;\n    } else {\n      keepPolling = false;\n    }\n  }\n  if (keepPolling && queue.length() === 0 && !isEmpty$1(takers)) {\n    strategy.onCompleteTakersWithEmptyQueue(takers);\n  }\n};\n\nexport { BackingQueueFromMutableQueue, DequeueTypeId, EnqueueTypeId, QueueStrategyTypeId, awaitShutdown, backPressureStrategy, backingQueueFromMutableQueue, bounded, capacity, dequeueVariance, dropping, droppingStrategy, enqueueVariance, isDequeue, isEmpty, isEnqueue, isFull, isQueue, isShutdown, make, offer, offerAll, poll, shutdown, size, sliding, slidingStrategy, take, takeAll, takeBetween, takeN, takeUpTo, unbounded, unsafeCompleteTakers, unsafeOffer, unsafeRemove };\n","import { fromIterable, unsafeGet, drop, empty, isEmpty as isEmpty$1, unsafeHead, of, prepend, filter, appendAll, append } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { pipe, dual } from '../Function/dist/effect-Function.esm.js';\nimport { unbounded as unbounded$1, poll, EmptyMutableQueue, offer, isEmpty as isEmpty$2, offerAll, pollUpTo } from '../MutableQueue/dist/effect-MutableQueue.esm.js';\nimport { make, get, set } from '../MutableRef/dist/effect-MutableRef.esm.js';\nimport { none, some } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { InvalidPubSubCapacityException } from './cause.esm.js';\nimport { flatMap, sync, map, deferredMake, fiberId, withFiberRuntime, unit, succeed, suspend, interrupt, deferredAwait, uninterruptible, asUnit, whenEffect, deferredSucceed, zipRight, exitInterrupt, tap, deferredUnsafeDone, deferredInterruptWith, deferredUnsafeMake, onInterrupt } from './core.esm.js';\nimport { sequential } from './executionStrategy.esm.js';\nimport { scopeMake, forEachParUnboundedDiscard, all, acquireRelease, forEachParUnbounded } from './fiberRuntime.esm.js';\nimport { EnqueueTypeId, enqueueVariance, DequeueTypeId, dequeueVariance } from './queue.esm.js';\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\nconst addSubscribers = (subscription, pollers) => subscribers => {\n  if (!subscribers.has(subscription)) {\n    subscribers.set(subscription, new Set());\n  }\n  const set = subscribers.get(subscription);\n  set.add(pollers);\n};\nconst removeSubscribers = (subscription, pollers) => subscribers => {\n  if (!subscribers.has(subscription)) {\n    return;\n  }\n  const set = subscribers.get(subscription);\n  set.delete(pollers);\n  if (set.size === 0) {\n    subscribers.delete(subscription);\n  }\n};\n\n/** @internal */\nconst bounded = requestedCapacity => pipe(sync(() => makeBoundedPubSub(requestedCapacity)), flatMap(atomicPubSub => makePubSub(atomicPubSub, new BackPressureStrategy())));\n\n/** @internal */\nconst dropping = requestedCapacity => pipe(sync(() => makeBoundedPubSub(requestedCapacity)), flatMap(atomicPubSub => makePubSub(atomicPubSub, new DroppingStrategy())));\n\n/** @internal */\nconst sliding = requestedCapacity => pipe(sync(() => makeBoundedPubSub(requestedCapacity)), flatMap(atomicPubSub => makePubSub(atomicPubSub, new SlidingStrategy())));\n\n/** @internal */\nconst unbounded = () => pipe(sync(() => makeUnboundedPubSub()), flatMap(atomicPubSub => makePubSub(atomicPubSub, new DroppingStrategy())));\n\n/** @internal */\nconst capacity = self => self.capacity();\n\n/** @internal */\nconst size = self => self.size();\n\n/** @internal */\nconst isFull = self => self.isFull();\n\n/** @internal */\nconst isEmpty = self => self.isEmpty();\n\n/** @internal */\nconst shutdown = self => self.shutdown();\n\n/** @internal */\nconst isShutdown = self => self.isShutdown();\n\n/** @internal */\nconst awaitShutdown = self => self.awaitShutdown();\n\n/** @internal */\nconst publish = /*#__PURE__*/dual(2, (self, value) => self.publish(value));\n\n/** @internal */\nconst publishAll = /*#__PURE__*/dual(2, (self, elements) => self.publishAll(elements));\n\n/** @internal */\nconst subscribe = self => self.subscribe();\n\n/** @internal */\nconst makeBoundedPubSub = requestedCapacity => {\n  ensureCapacity(requestedCapacity);\n  if (requestedCapacity === 1) {\n    return new BoundedPubSubSingle();\n  } else if (nextPow2(requestedCapacity) === requestedCapacity) {\n    return new BoundedPubSubPow2(requestedCapacity);\n  } else {\n    return new BoundedPubSubArb(requestedCapacity);\n  }\n};\n\n/** @internal */\nconst makeUnboundedPubSub = () => {\n  return new UnboundedPubSub();\n};\n\n/** @internal */\nconst makeSubscription = (pubsub, subscribers, strategy) => map(deferredMake(), deferred => unsafeMakeSubscription(pubsub, subscribers, pubsub.subscribe(), unbounded$1(), deferred, make(false), strategy));\n\n/** @internal */\nconst unsafeMakeSubscription = (pubsub, subscribers, subscription, pollers, shutdownHook, shutdownFlag, strategy) => {\n  return new SubscriptionImpl(pubsub, subscribers, subscription, pollers, shutdownHook, shutdownFlag, strategy);\n};\n\n/** @internal */\nclass BoundedPubSubArb {\n  publisherIndex = 0;\n  subscriberCount = 0;\n  subscribersIndex = 0;\n  constructor(requestedCapacity) {\n    this.array = Array.from({\n      length: requestedCapacity\n    });\n    this.subscribers = Array.from({\n      length: requestedCapacity\n    });\n    this.capacity = requestedCapacity;\n  }\n  isEmpty() {\n    return this.publisherIndex === this.subscribersIndex;\n  }\n  isFull() {\n    return this.publisherIndex === this.subscribersIndex + this.capacity;\n  }\n  size() {\n    return this.publisherIndex - this.subscribersIndex;\n  }\n  publish(value) {\n    if (this.isFull()) {\n      return false;\n    }\n    if (this.subscriberCount !== 0) {\n      const index = this.publisherIndex % this.capacity;\n      this.array[index] = value;\n      this.subscribers[index] = this.subscriberCount;\n      this.publisherIndex += 1;\n    }\n    return true;\n  }\n  publishAll(elements) {\n    const chunk = fromIterable(elements);\n    const n = chunk.length;\n    const size = this.publisherIndex - this.subscribersIndex;\n    const available = this.capacity - size;\n    const forPubSub = Math.min(n, available);\n    if (forPubSub === 0) {\n      return chunk;\n    }\n    let iteratorIndex = 0;\n    const publishAllIndex = this.publisherIndex + forPubSub;\n    while (this.publisherIndex !== publishAllIndex) {\n      const a = unsafeGet(chunk, iteratorIndex++);\n      const index = this.publisherIndex % this.capacity;\n      this.array[index] = a;\n      this.subscribers[index] = this.subscriberCount;\n      this.publisherIndex += 1;\n    }\n    return drop(chunk, iteratorIndex);\n  }\n  slide() {\n    if (this.subscribersIndex !== this.publisherIndex) {\n      const index = this.subscribersIndex % this.capacity;\n      this.array[index] = null;\n      this.subscribers[index] = 0;\n      this.subscribersIndex += 1;\n    }\n  }\n  subscribe() {\n    this.subscriberCount += 1;\n    return new BoundedPubSubArbSubscription(this, this.publisherIndex, false);\n  }\n}\nclass BoundedPubSubArbSubscription {\n  constructor(self, subscriberIndex, unsubscribed) {\n    this.self = self;\n    this.subscriberIndex = subscriberIndex;\n    this.unsubscribed = unsubscribed;\n  }\n  isEmpty() {\n    return this.unsubscribed || this.self.publisherIndex === this.subscriberIndex || this.self.publisherIndex === this.self.subscribersIndex;\n  }\n  size() {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.self.publisherIndex - Math.max(this.subscriberIndex, this.self.subscribersIndex);\n  }\n  poll(default_) {\n    if (this.unsubscribed) {\n      return default_;\n    }\n    this.subscriberIndex = Math.max(this.subscriberIndex, this.self.subscribersIndex);\n    if (this.subscriberIndex !== this.self.publisherIndex) {\n      const index = this.subscriberIndex % this.self.capacity;\n      const elem = this.self.array[index];\n      this.self.subscribers[index] -= 1;\n      if (this.self.subscribers[index] === 0) {\n        this.self.array[index] = null;\n        this.self.subscribersIndex += 1;\n      }\n      this.subscriberIndex += 1;\n      return elem;\n    }\n    return default_;\n  }\n  pollUpTo(n) {\n    if (this.unsubscribed) {\n      return empty();\n    }\n    this.subscriberIndex = Math.max(this.subscriberIndex, this.self.subscribersIndex);\n    const size = this.self.publisherIndex - this.subscriberIndex;\n    const toPoll = Math.min(n, size);\n    if (toPoll <= 0) {\n      return empty();\n    }\n    const builder = [];\n    const pollUpToIndex = this.subscriberIndex + toPoll;\n    while (this.subscriberIndex !== pollUpToIndex) {\n      const index = this.subscriberIndex % this.self.capacity;\n      const a = this.self.array[index];\n      this.self.subscribers[index] -= 1;\n      if (this.self.subscribers[index] === 0) {\n        this.self.array[index] = null;\n        this.self.subscribersIndex += 1;\n      }\n      builder.push(a);\n      this.subscriberIndex += 1;\n    }\n    return fromIterable(builder);\n  }\n  unsubscribe() {\n    if (!this.unsubscribed) {\n      this.unsubscribed = true;\n      this.self.subscriberCount -= 1;\n      this.subscriberIndex = Math.max(this.subscriberIndex, this.self.subscribersIndex);\n      while (this.subscriberIndex !== this.self.publisherIndex) {\n        const index = this.subscriberIndex % this.self.capacity;\n        this.self.subscribers[index] -= 1;\n        if (this.self.subscribers[index] === 0) {\n          this.self.array[index] = null;\n          this.self.subscribersIndex += 1;\n        }\n        this.subscriberIndex += 1;\n      }\n    }\n  }\n}\n\n/** @internal */\nclass BoundedPubSubPow2 {\n  publisherIndex = 0;\n  subscriberCount = 0;\n  subscribersIndex = 0;\n  constructor(requestedCapacity) {\n    this.array = Array.from({\n      length: requestedCapacity\n    });\n    this.mask = requestedCapacity - 1;\n    this.subscribers = Array.from({\n      length: requestedCapacity\n    });\n    this.capacity = requestedCapacity;\n  }\n  isEmpty() {\n    return this.publisherIndex === this.subscribersIndex;\n  }\n  isFull() {\n    return this.publisherIndex === this.subscribersIndex + this.capacity;\n  }\n  size() {\n    return this.publisherIndex - this.subscribersIndex;\n  }\n  publish(value) {\n    if (this.isFull()) {\n      return false;\n    }\n    if (this.subscriberCount !== 0) {\n      const index = this.publisherIndex & this.mask;\n      this.array[index] = value;\n      this.subscribers[index] = this.subscriberCount;\n      this.publisherIndex += 1;\n    }\n    return true;\n  }\n  publishAll(elements) {\n    const chunk = fromIterable(elements);\n    const n = chunk.length;\n    const size = this.publisherIndex - this.subscribersIndex;\n    const available = this.capacity - size;\n    const forPubSub = Math.min(n, available);\n    if (forPubSub === 0) {\n      return chunk;\n    }\n    let iteratorIndex = 0;\n    const publishAllIndex = this.publisherIndex + forPubSub;\n    while (this.publisherIndex !== publishAllIndex) {\n      const elem = unsafeGet(chunk, iteratorIndex++);\n      const index = this.publisherIndex & this.mask;\n      this.array[index] = elem;\n      this.subscribers[index] = this.subscriberCount;\n      this.publisherIndex += 1;\n    }\n    return drop(chunk, iteratorIndex);\n  }\n  slide() {\n    if (this.subscribersIndex !== this.publisherIndex) {\n      const index = this.subscribersIndex & this.mask;\n      this.array[index] = null;\n      this.subscribers[index] = 0;\n      this.subscribersIndex += 1;\n    }\n  }\n  subscribe() {\n    this.subscriberCount += 1;\n    return new BoundedPubSubPow2Subscription(this, this.publisherIndex, false);\n  }\n}\n\n/** @internal */\nclass BoundedPubSubPow2Subscription {\n  constructor(self, subscriberIndex, unsubscribed) {\n    this.self = self;\n    this.subscriberIndex = subscriberIndex;\n    this.unsubscribed = unsubscribed;\n  }\n  isEmpty() {\n    return this.unsubscribed || this.self.publisherIndex === this.subscriberIndex || this.self.publisherIndex === this.self.subscribersIndex;\n  }\n  size() {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.self.publisherIndex - Math.max(this.subscriberIndex, this.self.subscribersIndex);\n  }\n  poll(default_) {\n    if (this.unsubscribed) {\n      return default_;\n    }\n    this.subscriberIndex = Math.max(this.subscriberIndex, this.self.subscribersIndex);\n    if (this.subscriberIndex !== this.self.publisherIndex) {\n      const index = this.subscriberIndex & this.self.mask;\n      const elem = this.self.array[index];\n      this.self.subscribers[index] -= 1;\n      if (this.self.subscribers[index] === 0) {\n        this.self.array[index] = null;\n        this.self.subscribersIndex += 1;\n      }\n      this.subscriberIndex += 1;\n      return elem;\n    }\n    return default_;\n  }\n  pollUpTo(n) {\n    if (this.unsubscribed) {\n      return empty();\n    }\n    this.subscriberIndex = Math.max(this.subscriberIndex, this.self.subscribersIndex);\n    const size = this.self.publisherIndex - this.subscriberIndex;\n    const toPoll = Math.min(n, size);\n    if (toPoll <= 0) {\n      return empty();\n    }\n    const builder = [];\n    const pollUpToIndex = this.subscriberIndex + toPoll;\n    while (this.subscriberIndex !== pollUpToIndex) {\n      const index = this.subscriberIndex & this.self.mask;\n      const elem = this.self.array[index];\n      this.self.subscribers[index] -= 1;\n      if (this.self.subscribers[index] === 0) {\n        this.self.array[index] = null;\n        this.self.subscribersIndex += 1;\n      }\n      builder.push(elem);\n      this.subscriberIndex += 1;\n    }\n    return fromIterable(builder);\n  }\n  unsubscribe() {\n    if (!this.unsubscribed) {\n      this.unsubscribed = true;\n      this.self.subscriberCount -= 1;\n      this.subscriberIndex = Math.max(this.subscriberIndex, this.self.subscribersIndex);\n      while (this.subscriberIndex !== this.self.publisherIndex) {\n        const index = this.subscriberIndex & this.self.mask;\n        this.self.subscribers[index] -= 1;\n        if (this.self.subscribers[index] === 0) {\n          this.self.array[index] = null;\n          this.self.subscribersIndex += 1;\n        }\n        this.subscriberIndex += 1;\n      }\n    }\n  }\n}\n\n/** @internal */\nclass BoundedPubSubSingle {\n  publisherIndex = 0;\n  subscriberCount = 0;\n  subscribers = 0;\n  value = null;\n  capacity = 1;\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  isEmpty() {\n    return this.subscribers === 0;\n  }\n  isFull() {\n    return !this.isEmpty();\n  }\n  size() {\n    return this.isEmpty() ? 0 : 1;\n  }\n  publish(value) {\n    if (this.isFull()) {\n      return false;\n    }\n    if (this.subscriberCount !== 0) {\n      this.value = value;\n      this.subscribers = this.subscriberCount;\n      this.publisherIndex += 1;\n    }\n    return true;\n  }\n  publishAll(elements) {\n    const chunk = fromIterable(elements);\n    if (isEmpty$1(chunk)) {\n      return chunk;\n    }\n    if (this.publish(unsafeHead(chunk))) {\n      return drop(chunk, 1);\n    } else {\n      return chunk;\n    }\n  }\n  slide() {\n    if (this.isFull()) {\n      this.subscribers = 0;\n      this.value = null;\n    }\n  }\n  subscribe() {\n    this.subscriberCount += 1;\n    return new BoundedPubSubSingleSubscription(this, this.publisherIndex, false);\n  }\n}\n\n/** @internal */\nclass BoundedPubSubSingleSubscription {\n  constructor(self, subscriberIndex, unsubscribed) {\n    this.self = self;\n    this.subscriberIndex = subscriberIndex;\n    this.unsubscribed = unsubscribed;\n  }\n  isEmpty() {\n    return this.unsubscribed || this.self.subscribers === 0 || this.subscriberIndex === this.self.publisherIndex;\n  }\n  size() {\n    return this.isEmpty() ? 0 : 1;\n  }\n  poll(default_) {\n    if (this.isEmpty()) {\n      return default_;\n    }\n    const elem = this.self.value;\n    this.self.subscribers -= 1;\n    if (this.self.subscribers === 0) {\n      this.self.value = null;\n    }\n    this.subscriberIndex += 1;\n    return elem;\n  }\n  pollUpTo(n) {\n    if (this.isEmpty() || n < 1) {\n      return empty();\n    }\n    const a = this.self.value;\n    this.self.subscribers -= 1;\n    if (this.self.subscribers === 0) {\n      this.self.value = null;\n    }\n    this.subscriberIndex += 1;\n    return of(a);\n  }\n  unsubscribe() {\n    if (!this.unsubscribed) {\n      this.unsubscribed = true;\n      this.self.subscriberCount -= 1;\n      if (this.subscriberIndex !== this.self.publisherIndex) {\n        this.self.subscribers -= 1;\n        if (this.self.subscribers === 0) {\n          this.self.value = null;\n        }\n      }\n    }\n  }\n}\n\n/** @internal */\nclass Node {\n  constructor(value, subscribers, next) {\n    this.value = value;\n    this.subscribers = subscribers;\n    this.next = next;\n  }\n}\n\n/** @internal */\nclass UnboundedPubSub {\n  publisherHead = new Node(null, 0, null);\n  publisherIndex = 0;\n  subscribersIndex = 0;\n  capacity = Number.MAX_SAFE_INTEGER;\n  constructor() {\n    this.publisherTail = this.publisherHead;\n  }\n  isEmpty() {\n    return this.publisherHead === this.publisherTail;\n  }\n  isFull() {\n    return false;\n  }\n  size() {\n    return this.publisherIndex - this.subscribersIndex;\n  }\n  publish(value) {\n    const subscribers = this.publisherTail.subscribers;\n    if (subscribers !== 0) {\n      this.publisherTail.next = new Node(value, subscribers, null);\n      this.publisherTail = this.publisherTail.next;\n      this.publisherIndex += 1;\n    }\n    return true;\n  }\n  publishAll(elements) {\n    for (const a of elements) {\n      this.publish(a);\n    }\n    return empty();\n  }\n  slide() {\n    if (this.publisherHead !== this.publisherTail) {\n      this.publisherHead = this.publisherHead.next;\n      this.publisherHead.value = null;\n      this.subscribersIndex += 1;\n    }\n  }\n  subscribe() {\n    this.publisherTail.subscribers += 1;\n    return new UnboundedPubSubSubscription(this, this.publisherTail, this.publisherIndex, false);\n  }\n}\n\n/** @internal */\nclass UnboundedPubSubSubscription {\n  constructor(self, subscriberHead, subscriberIndex, unsubscribed) {\n    this.self = self;\n    this.subscriberHead = subscriberHead;\n    this.subscriberIndex = subscriberIndex;\n    this.unsubscribed = unsubscribed;\n  }\n  isEmpty() {\n    if (this.unsubscribed) {\n      return true;\n    }\n    let empty = true;\n    let loop = true;\n    while (loop) {\n      if (this.subscriberHead === this.self.publisherTail) {\n        loop = false;\n      } else {\n        if (this.subscriberHead.next.value !== null) {\n          empty = false;\n          loop = false;\n        } else {\n          this.subscriberHead = this.subscriberHead.next;\n          this.subscriberIndex += 1;\n        }\n      }\n    }\n    return empty;\n  }\n  size() {\n    if (this.unsubscribed) {\n      return 0;\n    }\n    return this.self.publisherIndex - Math.max(this.subscriberIndex, this.self.subscribersIndex);\n  }\n  poll(default_) {\n    if (this.unsubscribed) {\n      return default_;\n    }\n    let loop = true;\n    let polled = default_;\n    while (loop) {\n      if (this.subscriberHead === this.self.publisherTail) {\n        loop = false;\n      } else {\n        const elem = this.subscriberHead.next.value;\n        if (elem !== null) {\n          polled = elem;\n          this.subscriberHead.subscribers -= 1;\n          if (this.subscriberHead.subscribers === 0) {\n            this.self.publisherHead = this.self.publisherHead.next;\n            this.self.publisherHead.value = null;\n            this.self.subscribersIndex += 1;\n          }\n          loop = false;\n        }\n        this.subscriberHead = this.subscriberHead.next;\n        this.subscriberIndex += 1;\n      }\n    }\n    return polled;\n  }\n  pollUpTo(n) {\n    const builder = [];\n    const default_ = null;\n    let i = 0;\n    while (i !== n) {\n      const a = this.poll(default_);\n      if (a === default_) {\n        i = n;\n      } else {\n        builder.push(a);\n        i += 1;\n      }\n    }\n    return fromIterable(builder);\n  }\n  unsubscribe() {\n    if (!this.unsubscribed) {\n      this.unsubscribed = true;\n      this.self.publisherTail.subscribers -= 1;\n      while (this.subscriberHead !== this.self.publisherTail) {\n        if (this.subscriberHead.next.value !== null) {\n          this.subscriberHead.subscribers -= 1;\n          if (this.subscriberHead.subscribers === 0) {\n            this.self.publisherHead = this.self.publisherHead.next;\n            this.self.publisherHead.value = null;\n            this.self.subscribersIndex += 1;\n          }\n        }\n        this.subscriberHead = this.subscriberHead.next;\n      }\n    }\n  }\n}\n\n/** @internal */\nclass SubscriptionImpl {\n  [DequeueTypeId] = dequeueVariance;\n  constructor(pubsub, subscribers, subscription, pollers, shutdownHook, shutdownFlag, strategy) {\n    this.pubsub = pubsub;\n    this.subscribers = subscribers;\n    this.subscription = subscription;\n    this.pollers = pollers;\n    this.shutdownHook = shutdownHook;\n    this.shutdownFlag = shutdownFlag;\n    this.strategy = strategy;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n  capacity() {\n    return this.pubsub.capacity;\n  }\n  isActive() {\n    return !get(this.shutdownFlag);\n  }\n  size() {\n    return suspend(() => get(this.shutdownFlag) ? interrupt : succeed(this.subscription.size()));\n  }\n  unsafeSize() {\n    if (get(this.shutdownFlag)) {\n      return none();\n    }\n    return some(this.subscription.size());\n  }\n  isFull() {\n    return map(this.size(), size => size === this.capacity());\n  }\n  isEmpty() {\n    return map(this.size(), size => size === 0);\n  }\n  shutdown() {\n    return uninterruptible(withFiberRuntime(state => {\n      set(this.shutdownFlag, true);\n      return pipe(forEachParUnbounded(unsafePollAllQueue(this.pollers), d => deferredInterruptWith(d, state.id()), false), zipRight(sync(() => {\n        this.subscribers.delete(this.subscription);\n        this.subscription.unsubscribe();\n        this.strategy.unsafeOnPubSubEmptySpace(this.pubsub, this.subscribers);\n      })), whenEffect(deferredSucceed(this.shutdownHook, void 0)), asUnit);\n    }));\n  }\n  isShutdown() {\n    return sync(() => get(this.shutdownFlag));\n  }\n  awaitShutdown() {\n    return deferredAwait(this.shutdownHook);\n  }\n  take() {\n    return withFiberRuntime(state => {\n      if (get(this.shutdownFlag)) {\n        return interrupt;\n      }\n      const message = isEmpty$2(this.pollers) ? this.subscription.poll(EmptyMutableQueue) : EmptyMutableQueue;\n      if (message === EmptyMutableQueue) {\n        const deferred = deferredUnsafeMake(state.id());\n        return pipe(suspend(() => {\n          pipe(this.pollers, offer(deferred));\n          pipe(this.subscribers, addSubscribers(this.subscription, this.pollers));\n          this.strategy.unsafeCompletePollers(this.pubsub, this.subscribers, this.subscription, this.pollers);\n          return get(this.shutdownFlag) ? interrupt : deferredAwait(deferred);\n        }), onInterrupt(() => sync(() => unsafeRemove(this.pollers, deferred))));\n      } else {\n        this.strategy.unsafeOnPubSubEmptySpace(this.pubsub, this.subscribers);\n        return succeed(message);\n      }\n    });\n  }\n  takeAll() {\n    return suspend(() => {\n      if (get(this.shutdownFlag)) {\n        return interrupt;\n      }\n      const as = isEmpty$2(this.pollers) ? unsafePollAllSubscription(this.subscription) : empty();\n      this.strategy.unsafeOnPubSubEmptySpace(this.pubsub, this.subscribers);\n      return succeed(as);\n    });\n  }\n  takeUpTo(max) {\n    return suspend(() => {\n      if (get(this.shutdownFlag)) {\n        return interrupt;\n      }\n      const as = isEmpty$2(this.pollers) ? unsafePollN(this.subscription, max) : empty();\n      this.strategy.unsafeOnPubSubEmptySpace(this.pubsub, this.subscribers);\n      return succeed(as);\n    });\n  }\n  takeBetween(min, max) {\n    return suspend(() => takeRemainderLoop(this, min, max, empty()));\n  }\n}\n\n/** @internal */\nconst takeRemainderLoop = (self, min, max, acc) => {\n  if (max < min) {\n    return succeed(acc);\n  }\n  return pipe(self.takeUpTo(max), flatMap(bs => {\n    const remaining = min - bs.length;\n    if (remaining === 1) {\n      return pipe(self.take(), map(b => pipe(acc, appendAll(bs), append(b))));\n    }\n    if (remaining > 1) {\n      return pipe(self.take(), flatMap(b => takeRemainderLoop(self, remaining - 1, max - bs.length - 1, pipe(acc, appendAll(bs), append(b)))));\n    }\n    return succeed(pipe(acc, appendAll(bs)));\n  }));\n};\n\n/** @internal */\nclass PubSubImpl {\n  [EnqueueTypeId] = enqueueVariance;\n  constructor(pubsub, subscribers, scope, shutdownHook, shutdownFlag, strategy) {\n    this.pubsub = pubsub;\n    this.subscribers = subscribers;\n    this.scope = scope;\n    this.shutdownHook = shutdownHook;\n    this.shutdownFlag = shutdownFlag;\n    this.strategy = strategy;\n  }\n  capacity() {\n    return this.pubsub.capacity;\n  }\n  size() {\n    return suspend(() => get(this.shutdownFlag) ? interrupt : sync(() => this.pubsub.size()));\n  }\n  unsafeSize() {\n    if (get(this.shutdownFlag)) {\n      return none();\n    }\n    return some(this.pubsub.size());\n  }\n  isFull() {\n    return map(this.size(), size => size === this.capacity());\n  }\n  isEmpty() {\n    return map(this.size(), size => size === 0);\n  }\n  awaitShutdown() {\n    return deferredAwait(this.shutdownHook);\n  }\n  isShutdown() {\n    return sync(() => get(this.shutdownFlag));\n  }\n  shutdown() {\n    return uninterruptible(withFiberRuntime(state => {\n      pipe(this.shutdownFlag, set(true));\n      return pipe(this.scope.close(exitInterrupt(state.id())), zipRight(this.strategy.shutdown()), whenEffect(deferredSucceed(this.shutdownHook, void 0)), asUnit);\n    }));\n  }\n  publish(value) {\n    return suspend(() => {\n      if (get(this.shutdownFlag)) {\n        return interrupt;\n      }\n      if (this.pubsub.publish(value)) {\n        this.strategy.unsafeCompleteSubscribers(this.pubsub, this.subscribers);\n        return succeed(true);\n      }\n      return this.strategy.handleSurplus(this.pubsub, this.subscribers, of(value), this.shutdownFlag);\n    });\n  }\n  isActive() {\n    return !get(this.shutdownFlag);\n  }\n  unsafeOffer(value) {\n    if (get(this.shutdownFlag)) {\n      return false;\n    }\n    if (this.pubsub.publish(value)) {\n      this.strategy.unsafeCompleteSubscribers(this.pubsub, this.subscribers);\n      return true;\n    }\n    return false;\n  }\n  publishAll(elements) {\n    return suspend(() => {\n      if (get(this.shutdownFlag)) {\n        return interrupt;\n      }\n      const surplus = unsafePublishAll(this.pubsub, elements);\n      this.strategy.unsafeCompleteSubscribers(this.pubsub, this.subscribers);\n      if (isEmpty$1(surplus)) {\n        return succeed(true);\n      }\n      return this.strategy.handleSurplus(this.pubsub, this.subscribers, surplus, this.shutdownFlag);\n    });\n  }\n  subscribe() {\n    const acquire = tap(all([this.scope.fork(sequential), makeSubscription(this.pubsub, this.subscribers, this.strategy)]), tuple => tuple[0].addFinalizer(() => tuple[1].shutdown()));\n    return map(acquireRelease(acquire, (tuple, exit) => tuple[0].close(exit)), tuple => tuple[1]);\n  }\n  offer(value) {\n    return this.publish(value);\n  }\n  offerAll(elements) {\n    return this.publishAll(elements);\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst makePubSub = (pubsub, strategy) => flatMap(scopeMake(), scope => map(deferredMake(), deferred => unsafeMakePubSub(pubsub, new Map(), scope, deferred, make(false), strategy)));\n\n/** @internal */\nconst unsafeMakePubSub = (pubsub, subscribers, scope, shutdownHook, shutdownFlag, strategy) => {\n  return new PubSubImpl(pubsub, subscribers, scope, shutdownHook, shutdownFlag, strategy);\n};\n\n/** @internal */\nconst nextPow2 = n => {\n  const nextPow = Math.ceil(Math.log(n) / Math.log(2.0));\n  return Math.max(Math.pow(2, nextPow), 2);\n};\n\n/** @internal */\nconst ensureCapacity = capacity => {\n  if (capacity <= 0) {\n    throw InvalidPubSubCapacityException(`Cannot construct PubSub with capacity of ${capacity}`);\n  }\n};\n\n/** @internal */\nconst unsafeCompleteDeferred = (deferred, a) => {\n  deferredUnsafeDone(deferred, succeed(a));\n};\n\n/** @internal */\nconst unsafeOfferAll = (queue, as) => {\n  return pipe(queue, offerAll(as));\n};\n\n/** @internal */\nconst unsafePollAllQueue = queue => {\n  return pipe(queue, pollUpTo(Number.POSITIVE_INFINITY));\n};\n\n/** @internal */\nconst unsafePollAllSubscription = subscription => {\n  return subscription.pollUpTo(Number.POSITIVE_INFINITY);\n};\n\n/** @internal */\nconst unsafePollN = (subscription, max) => {\n  return subscription.pollUpTo(max);\n};\n\n/** @internal */\nconst unsafePublishAll = (pubsub, as) => {\n  return pubsub.publishAll(as);\n};\n\n/** @internal */\nconst unsafeRemove = (queue, value) => {\n  unsafeOfferAll(queue, pipe(unsafePollAllQueue(queue), filter(elem => elem !== value)));\n};\n\n// -----------------------------------------------------------------------------\n// PubSub.Strategy\n// -----------------------------------------------------------------------------\n\n/**\n * A `PubSubStrategy<A>` describes the protocol for how publishers and subscribers\n * will communicate with each other through the `PubSub`.\n *\n * @internal\n */\n/**\n * A strategy that applies back pressure to publishers when the `PubSub` is at\n * capacity. This guarantees that all subscribers will receive all messages\n * published to the `PubSub` while they are subscribed. However, it creates the\n * risk that a slow subscriber will slow down the rate at which messages\n * are published and received by other subscribers.\n *\n * @internal\n */\nclass BackPressureStrategy {\n  publishers = unbounded$1();\n  shutdown() {\n    return flatMap(fiberId, fiberId => flatMap(sync(() => unsafePollAllQueue(this.publishers)), publishers => forEachParUnboundedDiscard(publishers, ([_, deferred, last]) => last ? pipe(deferredInterruptWith(deferred, fiberId), asUnit) : unit, false)));\n  }\n  handleSurplus(pubsub, subscribers, elements, isShutdown) {\n    return withFiberRuntime(state => {\n      const deferred = deferredUnsafeMake(state.id());\n      return pipe(suspend(() => {\n        this.unsafeOffer(elements, deferred);\n        this.unsafeOnPubSubEmptySpace(pubsub, subscribers);\n        this.unsafeCompleteSubscribers(pubsub, subscribers);\n        return get(isShutdown) ? interrupt : deferredAwait(deferred);\n      }), onInterrupt(() => sync(() => this.unsafeRemove(deferred))));\n    });\n  }\n  unsafeOnPubSubEmptySpace(pubsub, subscribers) {\n    let keepPolling = true;\n    while (keepPolling && !pubsub.isFull()) {\n      const publisher = pipe(this.publishers, poll(EmptyMutableQueue));\n      if (publisher === EmptyMutableQueue) {\n        keepPolling = false;\n      } else {\n        const published = pubsub.publish(publisher[0]);\n        if (published && publisher[2]) {\n          unsafeCompleteDeferred(publisher[1], true);\n        } else if (!published) {\n          unsafeOfferAll(this.publishers, pipe(unsafePollAllQueue(this.publishers), prepend(publisher)));\n        }\n        this.unsafeCompleteSubscribers(pubsub, subscribers);\n      }\n    }\n  }\n  unsafeCompletePollers(pubsub, subscribers, subscription, pollers) {\n    return unsafeStrategyCompletePollers(this, pubsub, subscribers, subscription, pollers);\n  }\n  unsafeCompleteSubscribers(pubsub, subscribers) {\n    return unsafeStrategyCompleteSubscribers(this, pubsub, subscribers);\n  }\n  unsafeOffer(elements, deferred) {\n    const iterator = elements[Symbol.iterator]();\n    let next = iterator.next();\n    if (!next.done) {\n      // eslint-disable-next-line no-constant-condition\n      while (1) {\n        const value = next.value;\n        next = iterator.next();\n        if (next.done) {\n          pipe(this.publishers, offer([value, deferred, true]));\n          break;\n        }\n        pipe(this.publishers, offer([value, deferred, false]));\n      }\n    }\n  }\n  unsafeRemove(deferred) {\n    unsafeOfferAll(this.publishers, pipe(unsafePollAllQueue(this.publishers), filter(([_, a]) => a !== deferred)));\n  }\n}\n\n/**\n * A strategy that drops new messages when the `PubSub` is at capacity. This\n * guarantees that a slow subscriber will not slow down the rate at which\n * messages are published. However, it creates the risk that a slow\n * subscriber will slow down the rate at which messages are received by\n * other subscribers and that subscribers may not receive all messages\n * published to the `PubSub` while they are subscribed.\n *\n * @internal\n */\nclass DroppingStrategy {\n  shutdown() {\n    return unit;\n  }\n  handleSurplus(_pubsub, _subscribers, _elements, _isShutdown) {\n    return succeed(false);\n  }\n  unsafeOnPubSubEmptySpace(_pubsub, _subscribers) {\n    //\n  }\n  unsafeCompletePollers(pubsub, subscribers, subscription, pollers) {\n    return unsafeStrategyCompletePollers(this, pubsub, subscribers, subscription, pollers);\n  }\n  unsafeCompleteSubscribers(pubsub, subscribers) {\n    return unsafeStrategyCompleteSubscribers(this, pubsub, subscribers);\n  }\n}\n\n/**\n * A strategy that adds new messages and drops old messages when the `PubSub` is\n * at capacity. This guarantees that a slow subscriber will not slow down\n * the rate at which messages are published and received by other\n * subscribers. However, it creates the risk that a slow subscriber will\n * not receive some messages published to the `PubSub` while it is subscribed.\n *\n * @internal\n */\nclass SlidingStrategy {\n  shutdown() {\n    return unit;\n  }\n  handleSurplus(pubsub, subscribers, elements, _isShutdown) {\n    return sync(() => {\n      this.unsafeSlidingPublish(pubsub, elements);\n      this.unsafeCompleteSubscribers(pubsub, subscribers);\n      return true;\n    });\n  }\n  unsafeOnPubSubEmptySpace(_pubsub, _subscribers) {\n    //\n  }\n  unsafeCompletePollers(pubsub, subscribers, subscription, pollers) {\n    return unsafeStrategyCompletePollers(this, pubsub, subscribers, subscription, pollers);\n  }\n  unsafeCompleteSubscribers(pubsub, subscribers) {\n    return unsafeStrategyCompleteSubscribers(this, pubsub, subscribers);\n  }\n  unsafeSlidingPublish(pubsub, elements) {\n    const it = elements[Symbol.iterator]();\n    let next = it.next();\n    if (!next.done && pubsub.capacity > 0) {\n      let a = next.value;\n      let loop = true;\n      while (loop) {\n        pubsub.slide();\n        const pub = pubsub.publish(a);\n        if (pub && (next = it.next()) && !next.done) {\n          a = next.value;\n        } else if (pub) {\n          loop = false;\n        }\n      }\n    }\n  }\n}\n\n/** @internal */\nconst unsafeStrategyCompletePollers = (strategy, pubsub, subscribers, subscription, pollers) => {\n  let keepPolling = true;\n  while (keepPolling && !subscription.isEmpty()) {\n    const poller = pipe(pollers, poll(EmptyMutableQueue));\n    if (poller === EmptyMutableQueue) {\n      pipe(subscribers, removeSubscribers(subscription, pollers));\n      if (isEmpty$2(pollers)) {\n        keepPolling = false;\n      } else {\n        pipe(subscribers, addSubscribers(subscription, pollers));\n      }\n    } else {\n      const pollResult = subscription.poll(EmptyMutableQueue);\n      if (pollResult === EmptyMutableQueue) {\n        unsafeOfferAll(pollers, pipe(unsafePollAllQueue(pollers), prepend(poller)));\n      } else {\n        unsafeCompleteDeferred(poller, pollResult);\n        strategy.unsafeOnPubSubEmptySpace(pubsub, subscribers);\n      }\n    }\n  }\n};\n\n/** @internal */\nconst unsafeStrategyCompleteSubscribers = (strategy, pubsub, subscribers) => {\n  for (const [subscription, pollersSet] of subscribers) {\n    for (const pollers of pollersSet) {\n      strategy.unsafeCompletePollers(pubsub, subscribers, subscription, pollers);\n    }\n  }\n};\n\nexport { DroppingStrategy, SlidingStrategy, awaitShutdown, bounded, capacity, dropping, isEmpty, isFull, isShutdown, makePubSub, publish, publishAll, shutdown, size, sliding, subscribe, unbounded, unsafeMakePubSub, unsafeMakeSubscription };\n","import { bounded as bounded$1, dropping as dropping$1, sliding as sliding$1, unbounded as unbounded$1, capacity as capacity$1, size as size$1, isFull as isFull$1, isEmpty as isEmpty$1, shutdown as shutdown$1, isShutdown as isShutdown$1, awaitShutdown as awaitShutdown$1, publish as publish$1, publishAll as publishAll$1, subscribe as subscribe$1 } from '../../internal/pubsub.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * A `PubSub<A>` is an asynchronous message hub into which publishers can publish\n * messages of type `A` and subscribers can subscribe to take messages of type\n * `A`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Creates a bounded `PubSub` with the back pressure strategy. The `PubSub` will retain\n * messages until they have been taken by all subscribers, applying back\n * pressure to publishers if the `PubSub` is at capacity.\n *\n * For best performance use capacities that are powers of two.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst bounded = bounded$1;\n\n/**\n * Creates a bounded `PubSub` with the dropping strategy. The `PubSub` will drop new\n * messages if the `PubSub` is at capacity.\n *\n * For best performance use capacities that are powers of two.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst dropping = dropping$1;\n\n/**\n * Creates a bounded `PubSub` with the sliding strategy. The `PubSub` will add new\n * messages and drop old messages if the `PubSub` is at capacity.\n *\n * For best performance use capacities that are powers of two.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst sliding = sliding$1;\n\n/**\n * Creates an unbounded `PubSub`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unbounded = unbounded$1;\n\n/**\n *  Returns the number of elements the queue can hold.\n *\n * @since 2.0.0\n * @category getters\n */\nconst capacity = capacity$1;\n\n/**\n * Retrieves the size of the queue, which is equal to the number of elements\n * in the queue. This may be negative if fibers are suspended waiting for\n * elements to be added to the queue.\n *\n * @since 2.0.0\n * @category getters\n */\nconst size = size$1;\n\n/**\n * Returns `true` if the `Queue` contains at least one element, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isFull = isFull$1;\n\n/**\n * Returns `true` if the `Queue` contains zero elements, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isEmpty = isEmpty$1;\n\n/**\n * Interrupts any fibers that are suspended on `offer` or `take`. Future calls\n * to `offer*` and `take*` will be interrupted immediately.\n *\n * @since 2.0.0\n * @category utils\n */\nconst shutdown = shutdown$1;\n\n/**\n * Returns `true` if `shutdown` has been called, otherwise returns `false`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isShutdown = isShutdown$1;\n\n/**\n * Waits until the queue is shutdown. The `Effect` returned by this method will\n * not resume until the queue has been shutdown. If the queue is already\n * shutdown, the `Effect` will resume right away.\n *\n * @since 2.0.0\n * @category utils\n */\nconst awaitShutdown = awaitShutdown$1;\n\n/**\n * Publishes a message to the `PubSub`, returning whether the message was published\n * to the `PubSub`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst publish = publish$1;\n\n/**\n * Publishes all of the specified messages to the `PubSub`, returning whether they\n * were published to the `PubSub`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst publishAll = publishAll$1;\n\n/**\n * Subscribes to receive messages from the `PubSub`. The resulting subscription can\n * be evaluated multiple times within the scope to take a message from the `PubSub`\n * each time.\n *\n * @since 2.0.0\n * @category utils\n */\nconst subscribe = subscribe$1;\n\nexport { awaitShutdown, bounded, capacity, dropping, isEmpty, isFull, isShutdown, publish, publishAll, shutdown, size, sliding, subscribe, unbounded };\n","import { EnqueueTypeId as EnqueueTypeId$1, DequeueTypeId as DequeueTypeId$1, QueueStrategyTypeId as QueueStrategyTypeId$1, isQueue as isQueue$1, isDequeue as isDequeue$1, isEnqueue as isEnqueue$1, backPressureStrategy as backPressureStrategy$1, droppingStrategy as droppingStrategy$1, slidingStrategy as slidingStrategy$1, make as make$1, bounded as bounded$1, dropping as dropping$1, sliding as sliding$1, unbounded as unbounded$1, capacity as capacity$1, size as size$1, isEmpty as isEmpty$1, isFull as isFull$1, isShutdown as isShutdown$1, awaitShutdown as awaitShutdown$1, shutdown as shutdown$1, offer as offer$1, unsafeOffer as unsafeOffer$1, offerAll as offerAll$1, poll as poll$1, take as take$1, takeAll as takeAll$1, takeUpTo as takeUpTo$1, takeBetween as takeBetween$1, takeN as takeN$1 } from '../../internal/queue.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst EnqueueTypeId = EnqueueTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst DequeueTypeId = DequeueTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst QueueStrategyTypeId = QueueStrategyTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * The base interface that all `Queue`s must implement.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Returns `true` if the specified value is a `Queue`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isQueue = isQueue$1;\n\n/**\n * Returns `true` if the specified value is a `Dequeue`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isDequeue = isDequeue$1;\n\n/**\n * Returns `true` if the specified value is a `Enqueue`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isEnqueue = isEnqueue$1;\n\n/**\n * @since 2.0.0\n * @category strategies\n */\nconst backPressureStrategy = backPressureStrategy$1;\n\n/**\n * @since 2.0.0\n * @category strategies\n */\nconst droppingStrategy = droppingStrategy$1;\n\n/**\n * @since 2.0.0\n * @category strategies\n */\nconst slidingStrategy = slidingStrategy$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Makes a new bounded `Queue`. When the capacity of the queue is reached, any\n * additional calls to `offer` will be suspended until there is more room in\n * the queue.\n *\n * **Note**: When possible use only power of 2 capacities; this will provide\n * better performance by utilising an optimised version of the underlying\n * `RingBuffer`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst bounded = bounded$1;\n\n/**\n * Makes a new bounded `Queue` with the dropping strategy.\n *\n * When the capacity of the queue is reached, new elements will be dropped and the\n * old elements will remain.\n *\n * **Note**: When possible use only power of 2 capacities; this will provide\n * better performance by utilising an optimised version of the underlying\n * `RingBuffer`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst dropping = dropping$1;\n\n/**\n * Makes a new bounded `Queue` with the sliding strategy.\n *\n * When the capacity of the queue is reached, new elements will be added and the\n * old elements will be dropped.\n *\n * **Note**: When possible use only power of 2 capacities; this will provide\n * better performance by utilising an optimised version of the underlying\n * `RingBuffer`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst sliding = sliding$1;\n\n/**\n * Creates a new unbounded `Queue`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unbounded = unbounded$1;\n\n/**\n * Returns the number of elements the queue can hold.\n *\n * @since 2.0.0\n * @category getters\n */\nconst capacity = capacity$1;\n\n/**\n * Retrieves the size of the queue, which is equal to the number of elements\n * in the queue. This may be negative if fibers are suspended waiting for\n * elements to be added to the queue.\n *\n * @since 2.0.0\n * @category getters\n */\nconst size = size$1;\n\n/**\n * Returns `true` if the `Queue` contains zero elements, `false` otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isEmpty = isEmpty$1;\n\n/**\n * Returns `true` if the `Queue` contains at least one element, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isFull = isFull$1;\n\n/**\n * Returns `true` if `shutdown` has been called, otherwise returns `false`.\n *\n * @since 2.0.0\n * @category getters\n */\nconst isShutdown = isShutdown$1;\n\n/**\n * Waits until the queue is shutdown. The `Effect` returned by this method will\n * not resume until the queue has been shutdown. If the queue is already\n * shutdown, the `Effect` will resume right away.\n *\n * @since 2.0.0\n * @category utils\n */\nconst awaitShutdown = awaitShutdown$1;\n\n/**\n * Interrupts any fibers that are suspended on `offer` or `take`. Future calls\n * to `offer*` and `take*` will be interrupted immediately.\n *\n * @since 2.0.0\n * @category utils\n */\nconst shutdown = shutdown$1;\n\n/**\n * Places one value in the queue.\n *\n * @since 2.0.0\n * @category utils\n */\nconst offer = offer$1;\n\n/**\n * Places one value in the queue.\n *\n * @since 2.0.0\n * @category utils\n */\nconst unsafeOffer = unsafeOffer$1;\n\n/**\n * For Bounded Queue: uses the `BackPressure` Strategy, places the values in\n * the queue and always returns true. If the queue has reached capacity, then\n * the fiber performing the `offerAll` will be suspended until there is room\n * in the queue.\n *\n * For Unbounded Queue: Places all values in the queue and returns true.\n *\n * For Sliding Queue: uses `Sliding` Strategy If there is room in the queue,\n * it places the values otherwise it removes the old elements and enqueues the\n * new ones. Always returns true.\n *\n * For Dropping Queue: uses `Dropping` Strategy, It places the values in the\n * queue but if there is no room it will not enqueue them and return false.\n *\n * @since 2.0.0\n * @category utils\n */\nconst offerAll = offerAll$1;\n\n/**\n * Returns the first value in the `Queue` as a `Some<A>`, or `None` if the queue\n * is empty.\n *\n * @since 2.0.0\n * @category utils\n */\nconst poll = poll$1;\n\n/**\n * Takes the oldest value in the queue. If the queue is empty, this will return\n * a computation that resumes when an item has been added to the queue.\n *\n * @since 2.0.0\n * @category utils\n */\nconst take = take$1;\n\n/**\n * Takes all the values in the queue and returns the values. If the queue is\n * empty returns an empty collection.\n *\n * @since 2.0.0\n * @category utils\n */\nconst takeAll = takeAll$1;\n\n/**\n * Takes up to max number of values from the queue.\n *\n * @since 2.0.0\n * @category utils\n */\nconst takeUpTo = takeUpTo$1;\n\n/**\n * Takes a number of elements from the queue between the specified minimum and\n * maximum. If there are fewer than the minimum number of elements available,\n * suspends until at least the minimum number of elements have been collected.\n *\n * @since 2.0.0\n * @category utils\n */\nconst takeBetween = takeBetween$1;\n\n/**\n * Takes the specified number of elements from the queue. If there are fewer\n * than the specified number of elements available, it suspends until they\n * become available.\n *\n * @since 2.0.0\n * @category utils\n */\nconst takeN = takeN$1;\n\nexport { DequeueTypeId, EnqueueTypeId, QueueStrategyTypeId, awaitShutdown, backPressureStrategy, bounded, capacity, dropping, droppingStrategy, isDequeue, isEmpty, isEnqueue, isFull, isQueue, isShutdown, make, offer, offerAll, poll, shutdown, size, sliding, slidingStrategy, take, takeAll, takeBetween, takeN, takeUpTo, unbounded, unsafeOffer };\n","/** @internal */\nconst OP_CONTINUE = \"Continue\";\n\n/** @internal */\n\n/** @internal */\nconst OP_CLOSE = \"Close\";\n\n/** @internal */\n\n/** @internal */\nconst OP_YIELD = \"Yield\";\n\n/** @internal */\n\nexport { OP_CLOSE, OP_CONTINUE, OP_YIELD };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { OP_CONTINUE, OP_CLOSE, OP_YIELD } from '../opCodes/channelChildExecutorDecision.esm.js';\n\n/** @internal */\nconst ChildExecutorDecisionSymbolKey = \"effect/ChannelChildExecutorDecision\";\n\n/** @internal */\nconst ChildExecutorDecisionTypeId = /*#__PURE__*/Symbol.for(ChildExecutorDecisionSymbolKey);\n\n/** @internal */\nconst proto = {\n  [ChildExecutorDecisionTypeId]: ChildExecutorDecisionTypeId\n};\n\n/** @internal */\nconst Continue = _ => {\n  const op = Object.create(proto);\n  op._tag = OP_CONTINUE;\n  return op;\n};\n\n/** @internal */\nconst Close = value => {\n  const op = Object.create(proto);\n  op._tag = OP_CLOSE;\n  op.value = value;\n  return op;\n};\n\n/** @internal */\nconst Yield = _ => {\n  const op = Object.create(proto);\n  op._tag = OP_YIELD;\n  return op;\n};\n\n/** @internal */\nconst isChildExecutorDecision = u => hasProperty(u, ChildExecutorDecisionTypeId);\n\n/** @internal */\nconst isContinue = self => self._tag === OP_CONTINUE;\n\n/** @internal */\nconst isClose = self => self._tag === OP_CLOSE;\n\n/** @internal */\nconst isYield = self => self._tag === OP_YIELD;\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onClose,\n  onContinue,\n  onYield\n}) => {\n  switch (self._tag) {\n    case OP_CONTINUE:\n      {\n        return onContinue();\n      }\n    case OP_CLOSE:\n      {\n        return onClose(self.value);\n      }\n    case OP_YIELD:\n      {\n        return onYield();\n      }\n  }\n});\n\nexport { ChildExecutorDecisionTypeId, Close, Continue, Yield, isChildExecutorDecision, isClose, isContinue, isYield, match };\n","/** @internal */\nconst OP_CONTINUATION_K = \"ContinuationK\";\n\n/** @internal */\n\n/** @internal */\nconst OP_CONTINUATION_FINALIZER = \"ContinuationFinalizer\";\n\n/** @internal */\n\nexport { OP_CONTINUATION_FINALIZER, OP_CONTINUATION_K };\n","import { isFailure } from '../../Exit/dist/effect-Exit.esm.js';\nimport { OP_CONTINUATION_K, OP_CONTINUATION_FINALIZER } from '../opCodes/continuation.esm.js';\n\n/** @internal */\nconst ContinuationTypeId = /*#__PURE__*/Symbol.for(\"effect/ChannelContinuation\");\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst continuationVariance = {\n  _Env: _ => _,\n  _InErr: _ => _,\n  _InElem: _ => _,\n  _InDone: _ => _,\n  _OutErr: _ => _,\n  _OutDone: _ => _,\n  _OutErr2: _ => _,\n  _OutElem: _ => _,\n  _OutDone2: _ => _\n};\n\n/** @internal */\nclass ContinuationKImpl {\n  _tag = OP_CONTINUATION_K;\n  [ContinuationTypeId] = continuationVariance;\n  constructor(onSuccess, onHalt) {\n    this.onSuccess = onSuccess;\n    this.onHalt = onHalt;\n  }\n  onExit(exit) {\n    return isFailure(exit) ? this.onHalt(exit.cause) : this.onSuccess(exit.value);\n  }\n}\n\n/** @internal */\nclass ContinuationFinalizerImpl {\n  _tag = OP_CONTINUATION_FINALIZER;\n  [ContinuationTypeId] = continuationVariance;\n  constructor(finalizer) {\n    this.finalizer = finalizer;\n  }\n}\n\nexport { ContinuationFinalizerImpl, ContinuationKImpl, ContinuationTypeId };\n","/** @internal */\nconst OP_PULL_AFTER_NEXT = \"PullAfterNext\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PULL_AFTER_ALL_ENQUEUED = \"PullAfterAllEnqueued\";\n\n/** @internal */\n\nexport { OP_PULL_AFTER_ALL_ENQUEUED, OP_PULL_AFTER_NEXT };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { OP_PULL_AFTER_NEXT, OP_PULL_AFTER_ALL_ENQUEUED } from '../opCodes/channelUpstreamPullStrategy.esm.js';\n\n/** @internal */\nconst UpstreamPullStrategySymbolKey = \"effect/ChannelUpstreamPullStrategy\";\n\n/** @internal */\nconst UpstreamPullStrategyTypeId = /*#__PURE__*/Symbol.for(UpstreamPullStrategySymbolKey);\n\n/** @internal */\nconst upstreamPullStrategyVariance = {\n  _A: _ => _\n};\n\n/** @internal */\nconst proto = {\n  [UpstreamPullStrategyTypeId]: upstreamPullStrategyVariance\n};\n\n/** @internal */\nconst PullAfterNext = emitSeparator => {\n  const op = Object.create(proto);\n  op._tag = OP_PULL_AFTER_NEXT;\n  op.emitSeparator = emitSeparator;\n  return op;\n};\n\n/** @internal */\nconst PullAfterAllEnqueued = emitSeparator => {\n  const op = Object.create(proto);\n  op._tag = OP_PULL_AFTER_ALL_ENQUEUED;\n  op.emitSeparator = emitSeparator;\n  return op;\n};\n\n/** @internal */\nconst isUpstreamPullStrategy = u => hasProperty(u, UpstreamPullStrategyTypeId);\n\n/** @internal */\nconst isPullAfterNext = self => self._tag === OP_PULL_AFTER_NEXT;\n\n/** @internal */\nconst isPullAfterAllEnqueued = self => self._tag === OP_PULL_AFTER_ALL_ENQUEUED;\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onAllEnqueued,\n  onNext\n}) => {\n  switch (self._tag) {\n    case OP_PULL_AFTER_NEXT:\n      {\n        return onNext(self.emitSeparator);\n      }\n    case OP_PULL_AFTER_ALL_ENQUEUED:\n      {\n        return onAllEnqueued(self.emitSeparator);\n      }\n  }\n});\n\nexport { PullAfterAllEnqueued, PullAfterNext, UpstreamPullStrategyTypeId, isPullAfterAllEnqueued, isPullAfterNext, isUpstreamPullStrategy, match };\n","/** @internal */\nconst OP_BRACKET_OUT = \"BracketOut\";\n\n/** @internal */\n\n/** @internal */\nconst OP_BRIDGE = \"Bridge\";\n\n/** @internal */\n\n/** @internal */\nconst OP_CONCAT_ALL = \"ConcatAll\";\n\n/** @internal */\n\n/** @internal */\nconst OP_EMIT = \"Emit\";\n\n/** @internal */\n\n/** @internal */\nconst OP_ENSURING = \"Ensuring\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FAIL = \"Fail\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FOLD = \"Fold\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FROM_EFFECT = \"FromEffect\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PIPE_TO = \"PipeTo\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PROVIDE = \"Provide\";\n\n/** @internal */\n\n/** @internal */\nconst OP_READ = \"Read\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SUCCEED = \"Succeed\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SUCCEED_NOW = \"SucceedNow\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SUSPEND = \"Suspend\";\n\n/** @internal */\n\nexport { OP_BRACKET_OUT, OP_BRIDGE, OP_CONCAT_ALL, OP_EMIT, OP_ENSURING, OP_FAIL, OP_FOLD, OP_FROM_EFFECT, OP_PIPE_TO, OP_PROVIDE, OP_READ, OP_SUCCEED, OP_SUCCEED_NOW, OP_SUSPEND };\n","import { fail as fail$1, failureOrCause } from '../Cause/dist/effect-Cause.esm.js';\nimport { fromIterable } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { isEffect } from '../Effect/dist/effect-Effect.esm.js';\nimport { match } from '../Either/dist/effect-Either.esm.js';\nimport { dual, identity, constVoid } from '../Function/dist/effect-Function.esm.js';\nimport { none } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { Continue } from './channel/childExecutorDecision.esm.js';\nimport { ContinuationKImpl } from './channel/continuation.esm.js';\nimport { PullAfterNext } from './channel/upstreamPullStrategy.esm.js';\nimport { OP_BRACKET_OUT, OP_FOLD, OP_CONCAT_ALL, OP_BRIDGE, OP_ENSURING, OP_FAIL, OP_FROM_EFFECT, OP_PIPE_TO, OP_PROVIDE, OP_READ, OP_SUSPEND, OP_SUCCEED, OP_EMIT, OP_SUCCEED_NOW } from './opCodes/channel.esm.js';\n\n/** @internal */\nconst ChannelSymbolKey = \"effect/Channel\";\n\n/** @internal */\nconst ChannelTypeId = /*#__PURE__*/Symbol.for(ChannelSymbolKey);\n\n/** @internal */\nconst channelVariance = {\n  _Env: _ => _,\n  _InErr: _ => _,\n  _InElem: _ => _,\n  _InDone: _ => _,\n  _OutErr: _ => _,\n  _OutElem: _ => _,\n  _OutDone: _ => _\n};\n\n/** @internal */\nconst proto = {\n  [ChannelTypeId]: channelVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst isChannel = u => hasProperty(u, ChannelTypeId) || isEffect(u);\n\n/** @internal */\nconst acquireReleaseOut = /*#__PURE__*/dual(2, (self, release) => {\n  const op = Object.create(proto);\n  op._tag = OP_BRACKET_OUT;\n  op.acquire = () => self;\n  op.finalizer = release;\n  return op;\n});\n\n/** @internal */\nconst catchAllCause = /*#__PURE__*/dual(2, (self, f) => {\n  const op = Object.create(proto);\n  op._tag = OP_FOLD;\n  op.channel = self;\n  op.k = new ContinuationKImpl(succeed, f);\n  return op;\n});\n\n/** @internal */\nconst collectElements = self => {\n  return suspend(() => {\n    const builder = [];\n    return flatMap(pipeTo(self, collectElementsReader(builder)), value => sync(() => [fromIterable(builder), value]));\n  });\n};\n\n/** @internal */\nconst collectElementsReader = builder => readWith({\n  onInput: outElem => flatMap(sync(() => {\n    builder.push(outElem);\n  }), () => collectElementsReader(builder)),\n  onFailure: fail,\n  onDone: succeedNow\n});\n\n/** @internal */\nconst concatAll = channels => concatAllWith(channels, constVoid, constVoid);\n\n/** @internal */\nconst concatAllWith = (channels, f, g) => {\n  const op = Object.create(proto);\n  op._tag = OP_CONCAT_ALL;\n  op.combineInners = f;\n  op.combineAll = g;\n  op.onPull = () => PullAfterNext(none());\n  op.onEmit = () => Continue;\n  op.value = () => channels;\n  op.k = identity;\n  return op;\n};\n\n/** @internal */\nconst concatMapWith = /*#__PURE__*/dual(4, (self, f, g, h) => {\n  const op = Object.create(proto);\n  op._tag = OP_CONCAT_ALL;\n  op.combineInners = g;\n  op.combineAll = h;\n  op.onPull = () => PullAfterNext(none());\n  op.onEmit = () => Continue;\n  op.value = () => self;\n  op.k = f;\n  return op;\n});\n\n/** @internal */\nconst concatMapWithCustom = /*#__PURE__*/dual(6, (self, f, g, h, onPull, onEmit) => {\n  const op = Object.create(proto);\n  op._tag = OP_CONCAT_ALL;\n  op.combineInners = g;\n  op.combineAll = h;\n  op.onPull = onPull;\n  op.onEmit = onEmit;\n  op.value = () => self;\n  op.k = f;\n  return op;\n});\n\n/** @internal */\nconst embedInput = /*#__PURE__*/dual(2, (self, input) => {\n  const op = Object.create(proto);\n  op._tag = OP_BRIDGE;\n  op.input = input;\n  op.channel = self;\n  return op;\n});\n\n/** @internal */\nconst ensuringWith = /*#__PURE__*/dual(2, (self, finalizer) => {\n  const op = Object.create(proto);\n  op._tag = OP_ENSURING;\n  op.channel = self;\n  op.finalizer = finalizer;\n  return op;\n});\n\n/** @internal */\nconst fail = error => failCause(fail$1(error));\n\n/** @internal */\nconst failSync = evaluate => failCauseSync(() => fail$1(evaluate()));\n\n/** @internal */\nconst failCause = cause => failCauseSync(() => cause);\n\n/** @internal */\nconst failCauseSync = evaluate => {\n  const op = Object.create(proto);\n  op._tag = OP_FAIL;\n  op.error = evaluate;\n  return op;\n};\n\n/** @internal */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => {\n  const op = Object.create(proto);\n  op._tag = OP_FOLD;\n  op.channel = self;\n  op.k = new ContinuationKImpl(f, failCause);\n  return op;\n});\n\n/** @internal */\nconst foldCauseChannel = /*#__PURE__*/dual(2, (self, options) => {\n  const op = Object.create(proto);\n  op._tag = OP_FOLD;\n  op.channel = self;\n  op.k = new ContinuationKImpl(options.onSuccess, options.onFailure);\n  return op;\n});\n\n/** @internal */\nconst fromEffect = effect => {\n  const op = Object.create(proto);\n  op._tag = OP_FROM_EFFECT;\n  op.effect = () => effect;\n  return op;\n};\n\n/** @internal */\nconst pipeTo = /*#__PURE__*/dual(2, (self, that) => {\n  const op = Object.create(proto);\n  op._tag = OP_PIPE_TO;\n  op.left = () => self;\n  op.right = () => that;\n  return op;\n});\n\n/** @internal */\nconst provideContext = /*#__PURE__*/dual(2, (self, env) => {\n  const op = Object.create(proto);\n  op._tag = OP_PROVIDE;\n  op.context = () => env;\n  op.inner = self;\n  return op;\n});\n\n/** @internal */\nconst readOrFail = error => {\n  const op = Object.create(proto);\n  op._tag = OP_READ;\n  op.more = succeed;\n  op.done = new ContinuationKImpl(() => fail(error), () => fail(error));\n  return op;\n};\n\n/** @internal */\nconst readWith = options => readWithCause({\n  onInput: options.onInput,\n  onFailure: cause => match(failureOrCause(cause), {\n    onLeft: options.onFailure,\n    onRight: failCause\n  }),\n  onDone: options.onDone\n});\n\n/** @internal */\nconst readWithCause = options => {\n  const op = Object.create(proto);\n  op._tag = OP_READ;\n  op.more = options.onInput;\n  op.done = new ContinuationKImpl(options.onDone, options.onFailure);\n  return op;\n};\n\n/** @internal */\nconst succeed = value => sync(() => value);\n\n/** @internal */\nconst succeedNow = result => {\n  const op = Object.create(proto);\n  op._tag = OP_SUCCEED_NOW;\n  op.terminal = result;\n  return op;\n};\n\n/** @internal */\nconst suspend = evaluate => {\n  const op = Object.create(proto);\n  op._tag = OP_SUSPEND;\n  op.channel = evaluate;\n  return op;\n};\nconst sync = evaluate => {\n  const op = Object.create(proto);\n  op._tag = OP_SUCCEED;\n  op.evaluate = evaluate;\n  return op;\n};\n\n/** @internal */\nconst unit = /*#__PURE__*/succeedNow(void 0);\n\n/** @internal */\nconst write = out => {\n  const op = Object.create(proto);\n  op._tag = OP_EMIT;\n  op.out = out;\n  return op;\n};\n\nexport { ChannelTypeId, acquireReleaseOut, catchAllCause, collectElements, concatAll, concatAllWith, concatMapWith, concatMapWithCustom, embedInput, ensuringWith, fail, failCause, failCauseSync, failSync, flatMap, foldCauseChannel, fromEffect, isChannel, pipeTo, provideContext, readOrFail, readWith, readWithCause, succeed, succeedNow, suspend, sync, unit, write };\n","/** @internal */\nconst OP_DONE = \"Done\";\n\n/** @internal */\n\n/** @internal */\nconst OP_EMIT = \"Emit\";\n\n/** @internal */\n\n/** @internal */\nconst OP_FROM_EFFECT = \"FromEffect\";\n\n/** @internal */\n\n/** @internal */\nconst OP_READ = \"Read\";\n\n/** @internal */\n\nexport { OP_DONE, OP_EMIT, OP_FROM_EFFECT, OP_READ };\n","import { unit, ignore } from '../../Effect/dist/effect-Effect.esm.js';\nimport { OP_DONE, OP_EMIT, OP_FROM_EFFECT, OP_READ } from '../opCodes/channelState.esm.js';\n\n/** @internal */\nconst ChannelStateTypeId = /*#__PURE__*/Symbol.for(\"effect/ChannelState\");\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst channelStateVariance = {\n  _R: _ => _,\n  _E: _ => _\n};\n\n/** @internal */\nconst proto = {\n  [ChannelStateTypeId]: channelStateVariance\n};\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst Done = () => {\n  const op = Object.create(proto);\n  op._tag = OP_DONE;\n  return op;\n};\n\n/** @internal */\nconst Emit = () => {\n  const op = Object.create(proto);\n  op._tag = OP_EMIT;\n  return op;\n};\n\n/** @internal */\nconst FromEffect = effect => {\n  const op = Object.create(proto);\n  op._tag = OP_FROM_EFFECT;\n  op.effect = effect;\n  return op;\n};\n\n/** @internal */\nconst Read = (upstream, onEffect, onEmit, onDone) => {\n  const op = Object.create(proto);\n  op._tag = OP_READ;\n  op.upstream = upstream;\n  op.onEffect = onEffect;\n  op.onEmit = onEmit;\n  op.onDone = onDone;\n  return op;\n};\n\n/** @internal */\nconst isFromEffect = self => self._tag === OP_FROM_EFFECT;\n\n/** @internal */\nconst effect = self => isFromEffect(self) ? self.effect : unit;\n\n/** @internal */\nconst effectOrUndefinedIgnored = self => isFromEffect(self) ? ignore(self.effect) : undefined;\n\nexport { ChannelStateTypeId, Done, Emit, FromEffect, Read, effect, effectOrUndefinedIgnored, isFromEffect };\n","import { zipWith, exit } from '../../Effect/dist/effect-Effect.esm.js';\nimport { zipRight } from '../../Exit/dist/effect-Exit.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst OP_PULL_FROM_CHILD = \"PullFromChild\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PULL_FROM_UPSTREAM = \"PullFromUpstream\";\n\n/** @internal */\n\n/** @internal */\nconst OP_DRAIN_CHILD_EXECUTORS = \"DrainChildExecutors\";\n\n/** @internal */\n\n/** @internal */\nconst OP_EMIT = \"Emit\";\n\n/** @internal */\n\n/**\n * Execute the `childExecutor` and on each emitted value, decide what to do by\n * `onEmit`.\n *\n * @internal\n */\nclass PullFromChild {\n  _tag = OP_PULL_FROM_CHILD;\n  constructor(childExecutor, parentSubexecutor, onEmit) {\n    this.childExecutor = childExecutor;\n    this.parentSubexecutor = parentSubexecutor;\n    this.onEmit = onEmit;\n  }\n  close(exit$1) {\n    const fin1 = this.childExecutor.close(exit$1);\n    const fin2 = this.parentSubexecutor.close(exit$1);\n    if (fin1 !== undefined && fin2 !== undefined) {\n      return zipWith(exit(fin1), exit(fin2), (exit1, exit2) => pipe(exit1, zipRight(exit2)));\n    } else if (fin1 !== undefined) {\n      return fin1;\n    } else if (fin2 !== undefined) {\n      return fin2;\n    } else {\n      return undefined;\n    }\n  }\n  enqueuePullFromChild(_child) {\n    return this;\n  }\n}\n\n/**\n * Execute `upstreamExecutor` and for each emitted element, spawn a child\n * channel and continue with processing it by `PullFromChild`.\n *\n * @internal\n */\nclass PullFromUpstream {\n  _tag = OP_PULL_FROM_UPSTREAM;\n  constructor(upstreamExecutor, createChild, lastDone, activeChildExecutors, combineChildResults, combineWithChildResult, onPull, onEmit) {\n    this.upstreamExecutor = upstreamExecutor;\n    this.createChild = createChild;\n    this.lastDone = lastDone;\n    this.activeChildExecutors = activeChildExecutors;\n    this.combineChildResults = combineChildResults;\n    this.combineWithChildResult = combineWithChildResult;\n    this.onPull = onPull;\n    this.onEmit = onEmit;\n  }\n  close(exit$1) {\n    const fin1 = this.upstreamExecutor.close(exit$1);\n    const fins = [...this.activeChildExecutors.map(child => child !== undefined ? child.childExecutor.close(exit$1) : undefined), fin1];\n    const result = fins.reduce((acc, next) => {\n      if (acc !== undefined && next !== undefined) {\n        return zipWith(acc, exit(next), (exit1, exit2) => zipRight(exit1, exit2));\n      } else if (acc !== undefined) {\n        return acc;\n      } else if (next !== undefined) {\n        return exit(next);\n      } else {\n        return undefined;\n      }\n    }, undefined);\n    return result === undefined ? result : result;\n  }\n  enqueuePullFromChild(child) {\n    return new PullFromUpstream(this.upstreamExecutor, this.createChild, this.lastDone, [...this.activeChildExecutors, child], this.combineChildResults, this.combineWithChildResult, this.onPull, this.onEmit);\n  }\n}\n\n/**\n * Transformed from `PullFromUpstream` when upstream has finished but there\n * are still active child executors.\n *\n * @internal\n */\nclass DrainChildExecutors {\n  _tag = OP_DRAIN_CHILD_EXECUTORS;\n  constructor(upstreamExecutor, lastDone, activeChildExecutors, upstreamDone, combineChildResults, combineWithChildResult, onPull) {\n    this.upstreamExecutor = upstreamExecutor;\n    this.lastDone = lastDone;\n    this.activeChildExecutors = activeChildExecutors;\n    this.upstreamDone = upstreamDone;\n    this.combineChildResults = combineChildResults;\n    this.combineWithChildResult = combineWithChildResult;\n    this.onPull = onPull;\n  }\n  close(exit$1) {\n    const fin1 = this.upstreamExecutor.close(exit$1);\n    const fins = [...this.activeChildExecutors.map(child => child !== undefined ? child.childExecutor.close(exit$1) : undefined), fin1];\n    const result = fins.reduce((acc, next) => {\n      if (acc !== undefined && next !== undefined) {\n        return zipWith(acc, exit(next), (exit1, exit2) => zipRight(exit1, exit2));\n      } else if (acc !== undefined) {\n        return acc;\n      } else if (next !== undefined) {\n        return exit(next);\n      } else {\n        return undefined;\n      }\n    }, undefined);\n    return result === undefined ? result : result;\n  }\n  enqueuePullFromChild(child) {\n    return new DrainChildExecutors(this.upstreamExecutor, this.lastDone, [...this.activeChildExecutors, child], this.upstreamDone, this.combineChildResults, this.combineWithChildResult, this.onPull);\n  }\n}\n\n/** @internal */\nclass Emit {\n  _tag = OP_EMIT;\n  constructor(value, next) {\n    this.value = value;\n    this.next = next;\n  }\n  close(exit) {\n    const result = this.next.close(exit);\n    return result === undefined ? result : result;\n  }\n  enqueuePullFromChild(_child) {\n    return this;\n  }\n}\n\nexport { DrainChildExecutors, Emit, OP_DRAIN_CHILD_EXECUTORS, OP_EMIT, OP_PULL_FROM_CHILD, OP_PULL_FROM_UPSTREAM, PullFromChild, PullFromUpstream };\n","/** @internal */\nconst OP_PULLED = \"Pulled\";\n\n/** @internal */\n\n/** @internal */\nconst OP_NO_UPSTREAM = \"NoUpstream\";\n\n/** @internal */\n\nexport { OP_NO_UPSTREAM, OP_PULLED };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { OP_PULLED, OP_NO_UPSTREAM } from '../opCodes/channelUpstreamPullRequest.esm.js';\n\n/** @internal */\nconst UpstreamPullRequestSymbolKey = \"effect/ChannelUpstreamPullRequest\";\n\n/** @internal */\nconst UpstreamPullRequestTypeId = /*#__PURE__*/Symbol.for(UpstreamPullRequestSymbolKey);\n\n/** @internal */\nconst upstreamPullRequestVariance = {\n  _A: _ => _\n};\n\n/** @internal */\nconst proto = {\n  [UpstreamPullRequestTypeId]: upstreamPullRequestVariance\n};\n\n/** @internal */\nconst Pulled = value => {\n  const op = Object.create(proto);\n  op._tag = OP_PULLED;\n  op.value = value;\n  return op;\n};\n\n/** @internal */\nconst NoUpstream = activeDownstreamCount => {\n  const op = Object.create(proto);\n  op._tag = OP_NO_UPSTREAM;\n  op.activeDownstreamCount = activeDownstreamCount;\n  return op;\n};\n\n/** @internal */\nconst isUpstreamPullRequest = u => hasProperty(u, UpstreamPullRequestTypeId);\n\n/** @internal */\nconst isPulled = self => self._tag === OP_PULLED;\n\n/** @internal */\nconst isNoUpstream = self => self._tag === OP_NO_UPSTREAM;\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onNoUpstream,\n  onPulled\n}) => {\n  switch (self._tag) {\n    case OP_PULLED:\n      {\n        return onPulled(self.value);\n      }\n    case OP_NO_UPSTREAM:\n      {\n        return onNoUpstream(self.activeDownstreamCount);\n      }\n  }\n});\n\nexport { NoUpstream, Pulled, UpstreamPullRequestTypeId, isNoUpstream, isPulled, isUpstreamPullRequest, match };\n","import { die as die$1 } from '../../Cause/dist/effect-Cause.esm.js';\nimport { succeed as succeed$2, await as _await, make } from '../../Deferred/dist/effect-Deferred.esm.js';\nimport { isEffect, sync, unit, provide, matchCauseEffect, zipRight, flatMap, suspend, forkDaemon, ensuring, uninterruptible, map, zip, exit, forEach, succeed as succeed$1, scoped, uninterruptibleMask, scope, forkScoped, addFinalizer, zipLeft, all as all$1, dieMessage, catchAllCause, acquireUseRelease, intoDeferred, tapErrorCause, failCause as failCause$2 } from '../../Effect/dist/effect-Effect.esm.js';\nimport { sequential } from '../../ExecutionStrategy/dist/effect-ExecutionStrategy.esm.js';\nimport { die, match, zipRight as zipRight$1, succeed, failCause as failCause$1, all, unit as unit$2, map as map$1 } from '../../Exit/dist/effect-Exit.esm.js';\nimport { interrupt, inheritAll } from '../../Fiber/dist/effect-Fiber.esm.js';\nimport { identity, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { isSome, getOrElse } from '../../Option/dist/effect-Option.esm.js';\nimport { fork, addFinalizer as addFinalizer$1 } from '../../Scope/dist/effect-Scope.esm.js';\nimport { fromEffect, unit as unit$1, failCause, write } from '../core-stream.esm.js';\nimport { OP_SUSPEND, OP_SUCCEED_NOW, OP_SUCCEED, OP_READ, OP_PROVIDE, OP_PIPE_TO, OP_FROM_EFFECT, OP_FOLD, OP_FAIL, OP_ENSURING, OP_EMIT, OP_CONCAT_ALL, OP_BRIDGE, OP_BRACKET_OUT } from '../opCodes/channel.esm.js';\nimport { OP_YIELD, OP_CLOSE, OP_CONTINUE } from '../opCodes/channelChildExecutorDecision.esm.js';\nimport { OP_READ as OP_READ$1, OP_FROM_EFFECT as OP_FROM_EFFECT$1, OP_EMIT as OP_EMIT$1, OP_DONE } from '../opCodes/channelState.esm.js';\nimport { OP_PULL_AFTER_ALL_ENQUEUED, OP_PULL_AFTER_NEXT } from '../opCodes/channelUpstreamPullStrategy.esm.js';\nimport { OP_CONTINUATION_K } from '../opCodes/continuation.esm.js';\nimport { Done, Read, FromEffect, isFromEffect, Emit, effect, effectOrUndefinedIgnored } from './channelState.esm.js';\nimport { ContinuationFinalizerImpl } from './continuation.esm.js';\nimport { PullFromUpstream, OP_EMIT as OP_EMIT$2, OP_DRAIN_CHILD_EXECUTORS, OP_PULL_FROM_UPSTREAM, OP_PULL_FROM_CHILD, Emit as Emit$1, DrainChildExecutors, PullFromChild } from './subexecutor.esm.js';\nimport { NoUpstream, Pulled } from './upstreamPullRequest.esm.js';\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\nclass ChannelExecutor {\n  _activeSubexecutor = undefined;\n  _cancelled = undefined;\n  _closeLastSubstream = undefined;\n  _done = undefined;\n  _doneStack = [];\n  _emitted = undefined;\n  _input = undefined;\n  _inProgressFinalizer = undefined;\n  constructor(initialChannel, providedEnv, executeCloseLastSubstream) {\n    this._currentChannel = initialChannel;\n    this._executeCloseLastSubstream = executeCloseLastSubstream;\n    this._providedEnv = providedEnv;\n  }\n  run() {\n    let result = undefined;\n    while (result === undefined) {\n      if (this._cancelled !== undefined) {\n        result = this.processCancellation();\n      } else if (this._activeSubexecutor !== undefined) {\n        result = this.runSubexecutor();\n      } else {\n        try {\n          if (this._currentChannel === undefined) {\n            result = Done();\n          } else {\n            if (isEffect(this._currentChannel)) {\n              this._currentChannel = fromEffect(this._currentChannel);\n            } else {\n              switch (this._currentChannel._tag) {\n                case OP_BRACKET_OUT:\n                  {\n                    result = this.runBracketOut(this._currentChannel);\n                    break;\n                  }\n                case OP_BRIDGE:\n                  {\n                    const bridgeInput = this._currentChannel.input;\n\n                    // PipeTo(left, Bridge(queue, channel))\n                    // In a fiber: repeatedly run left and push its outputs to the queue\n                    // Add a finalizer to interrupt the fiber and close the executor\n                    this._currentChannel = this._currentChannel.channel;\n                    if (this._input !== undefined) {\n                      const inputExecutor = this._input;\n                      this._input = undefined;\n                      const drainer = () => flatMap(bridgeInput.awaitRead(), () => suspend(() => {\n                        const state = inputExecutor.run();\n                        switch (state._tag) {\n                          case OP_DONE:\n                            {\n                              return match(inputExecutor.getDone(), {\n                                onFailure: cause => bridgeInput.error(cause),\n                                onSuccess: value => bridgeInput.done(value)\n                              });\n                            }\n                          case OP_EMIT$1:\n                            {\n                              return flatMap(bridgeInput.emit(inputExecutor.getEmit()), () => drainer());\n                            }\n                          case OP_FROM_EFFECT$1:\n                            {\n                              return matchCauseEffect(state.effect, {\n                                onFailure: cause => bridgeInput.error(cause),\n                                onSuccess: () => drainer()\n                              });\n                            }\n                          case OP_READ$1:\n                            {\n                              return readUpstream(state, () => drainer(), cause => bridgeInput.error(cause));\n                            }\n                        }\n                      }));\n                      result = FromEffect(flatMap(forkDaemon(drainer()), fiber => sync(() => this.addFinalizer(exit => flatMap(interrupt(fiber), () => suspend(() => {\n                        const effect = this.restorePipe(exit, inputExecutor);\n                        return effect !== undefined ? effect : unit;\n                      }))))));\n                    }\n                    break;\n                  }\n                case OP_CONCAT_ALL:\n                  {\n                    const executor = new ChannelExecutor(this._currentChannel.value(), this._providedEnv, effect => sync(() => {\n                      const prevLastClose = this._closeLastSubstream === undefined ? unit : this._closeLastSubstream;\n                      this._closeLastSubstream = pipe(prevLastClose, zipRight(effect));\n                    }));\n                    executor._input = this._input;\n                    const channel = this._currentChannel;\n                    this._activeSubexecutor = new PullFromUpstream(executor, value => channel.k(value), undefined, [], (x, y) => channel.combineInners(x, y), (x, y) => channel.combineAll(x, y), request => channel.onPull(request), value => channel.onEmit(value));\n                    this._closeLastSubstream = undefined;\n                    this._currentChannel = undefined;\n                    break;\n                  }\n                case OP_EMIT:\n                  {\n                    this._emitted = this._currentChannel.out;\n                    this._currentChannel = this._activeSubexecutor !== undefined ? undefined : unit$1;\n                    result = Emit();\n                    break;\n                  }\n                case OP_ENSURING:\n                  {\n                    this.runEnsuring(this._currentChannel);\n                    break;\n                  }\n                case OP_FAIL:\n                  {\n                    result = this.doneHalt(this._currentChannel.error());\n                    break;\n                  }\n                case OP_FOLD:\n                  {\n                    this._doneStack.push(this._currentChannel.k);\n                    this._currentChannel = this._currentChannel.channel;\n                    break;\n                  }\n                case OP_FROM_EFFECT:\n                  {\n                    const effect = this._providedEnv === undefined ? this._currentChannel.effect() : pipe(this._currentChannel.effect(), provide(this._providedEnv));\n                    result = FromEffect(matchCauseEffect(effect, {\n                      onFailure: cause => {\n                        const state = this.doneHalt(cause);\n                        return state !== undefined && isFromEffect(state) ? state.effect : unit;\n                      },\n                      onSuccess: value => {\n                        const state = this.doneSucceed(value);\n                        return state !== undefined && isFromEffect(state) ? state.effect : unit;\n                      }\n                    }));\n                    break;\n                  }\n                case OP_PIPE_TO:\n                  {\n                    const previousInput = this._input;\n                    const leftExec = new ChannelExecutor(this._currentChannel.left(), this._providedEnv, effect => this._executeCloseLastSubstream(effect));\n                    leftExec._input = previousInput;\n                    this._input = leftExec;\n                    this.addFinalizer(exit => {\n                      const effect = this.restorePipe(exit, previousInput);\n                      return effect !== undefined ? effect : unit;\n                    });\n                    this._currentChannel = this._currentChannel.right();\n                    break;\n                  }\n                case OP_PROVIDE:\n                  {\n                    const previousEnv = this._providedEnv;\n                    this._providedEnv = this._currentChannel.context();\n                    this._currentChannel = this._currentChannel.inner;\n                    this.addFinalizer(() => sync(() => {\n                      this._providedEnv = previousEnv;\n                    }));\n                    break;\n                  }\n                case OP_READ:\n                  {\n                    const read = this._currentChannel;\n                    result = Read(this._input, identity, emitted => {\n                      try {\n                        this._currentChannel = read.more(emitted);\n                      } catch (error) {\n                        this._currentChannel = read.done.onExit(die(error));\n                      }\n                      return undefined;\n                    }, exit => {\n                      const onExit = exit => {\n                        return read.done.onExit(exit);\n                      };\n                      this._currentChannel = onExit(exit);\n                      return undefined;\n                    });\n                    break;\n                  }\n                case OP_SUCCEED:\n                  {\n                    result = this.doneSucceed(this._currentChannel.evaluate());\n                    break;\n                  }\n                case OP_SUCCEED_NOW:\n                  {\n                    result = this.doneSucceed(this._currentChannel.terminal);\n                    break;\n                  }\n                case OP_SUSPEND:\n                  {\n                    this._currentChannel = this._currentChannel.channel();\n                    break;\n                  }\n                default:\n                  {\n                    // @ts-expect-error\n                    this._currentChannel._tag;\n                  }\n              }\n            }\n          }\n        } catch (error) {\n          this._currentChannel = failCause(die$1(error));\n        }\n      }\n    }\n    return result;\n  }\n  getDone() {\n    return this._done;\n  }\n  getEmit() {\n    return this._emitted;\n  }\n  cancelWith(exit) {\n    this._cancelled = exit;\n  }\n  clearInProgressFinalizer() {\n    this._inProgressFinalizer = undefined;\n  }\n  storeInProgressFinalizer(finalizer) {\n    this._inProgressFinalizer = finalizer;\n  }\n  popAllFinalizers(exit) {\n    const finalizers = [];\n    let next = this._doneStack.pop();\n    while (next) {\n      if (next._tag === \"ContinuationFinalizer\") {\n        finalizers.push(next.finalizer);\n      }\n      next = this._doneStack.pop();\n    }\n    const effect = finalizers.length === 0 ? unit : runFinalizers(finalizers, exit);\n    this.storeInProgressFinalizer(effect);\n    return effect;\n  }\n  popNextFinalizers() {\n    const builder = [];\n    while (this._doneStack.length !== 0) {\n      const cont = this._doneStack[this._doneStack.length - 1];\n      if (cont._tag === OP_CONTINUATION_K) {\n        return builder;\n      }\n      builder.push(cont);\n      this._doneStack.pop();\n    }\n    return builder;\n  }\n  restorePipe(exit, prev) {\n    const currInput = this._input;\n    this._input = prev;\n    if (currInput !== undefined) {\n      const effect = currInput.close(exit);\n      return effect;\n    }\n    return unit;\n  }\n  close(exit$1) {\n    let runInProgressFinalizers = undefined;\n    const finalizer = this._inProgressFinalizer;\n    if (finalizer !== undefined) {\n      runInProgressFinalizers = pipe(finalizer, ensuring(sync(() => this.clearInProgressFinalizer())));\n    }\n    let closeSelf = undefined;\n    const selfFinalizers = this.popAllFinalizers(exit$1);\n    if (selfFinalizers !== undefined) {\n      closeSelf = pipe(selfFinalizers, ensuring(sync(() => this.clearInProgressFinalizer())));\n    }\n    const closeSubexecutors = this._activeSubexecutor === undefined ? undefined : this._activeSubexecutor.close(exit$1);\n    if (closeSubexecutors === undefined && runInProgressFinalizers === undefined && closeSelf === undefined) {\n      return undefined;\n    }\n    return pipe(exit(ifNotNull(closeSubexecutors)), zip(exit(ifNotNull(runInProgressFinalizers))), zip(exit(ifNotNull(closeSelf))), map(([[exit1, exit2], exit3]) => pipe(exit1, zipRight$1(exit2), zipRight$1(exit3))), uninterruptible,\n    // TODO: remove\n    flatMap(exit => suspend(() => exit)));\n  }\n  doneSucceed(value) {\n    if (this._doneStack.length === 0) {\n      this._done = succeed(value);\n      this._currentChannel = undefined;\n      return Done();\n    }\n    const head = this._doneStack[this._doneStack.length - 1];\n    if (head._tag === OP_CONTINUATION_K) {\n      this._doneStack.pop();\n      this._currentChannel = head.onSuccess(value);\n      return undefined;\n    }\n    const finalizers = this.popNextFinalizers();\n    if (this._doneStack.length === 0) {\n      this._doneStack = finalizers.reverse();\n      this._done = succeed(value);\n      this._currentChannel = undefined;\n      return Done();\n    }\n    const finalizerEffect = runFinalizers(finalizers.map(f => f.finalizer), succeed(value));\n    this.storeInProgressFinalizer(finalizerEffect);\n    const effect = pipe(finalizerEffect, ensuring(sync(() => this.clearInProgressFinalizer())), uninterruptible, flatMap(() => sync(() => this.doneSucceed(value))));\n    return FromEffect(effect);\n  }\n  doneHalt(cause) {\n    if (this._doneStack.length === 0) {\n      this._done = failCause$1(cause);\n      this._currentChannel = undefined;\n      return Done();\n    }\n    const head = this._doneStack[this._doneStack.length - 1];\n    if (head._tag === OP_CONTINUATION_K) {\n      this._doneStack.pop();\n      this._currentChannel = head.onHalt(cause);\n      return undefined;\n    }\n    const finalizers = this.popNextFinalizers();\n    if (this._doneStack.length === 0) {\n      this._doneStack = finalizers.reverse();\n      this._done = failCause$1(cause);\n      this._currentChannel = undefined;\n      return Done();\n    }\n    const finalizerEffect = runFinalizers(finalizers.map(f => f.finalizer), failCause$1(cause));\n    this.storeInProgressFinalizer(finalizerEffect);\n    const effect = pipe(finalizerEffect, ensuring(sync(() => this.clearInProgressFinalizer())), uninterruptible, flatMap(() => sync(() => this.doneHalt(cause))));\n    return FromEffect(effect);\n  }\n  processCancellation() {\n    this._currentChannel = undefined;\n    this._done = this._cancelled;\n    this._cancelled = undefined;\n    return Done();\n  }\n  runBracketOut(bracketOut) {\n    const effect = uninterruptible(matchCauseEffect(this.provide(bracketOut.acquire()), {\n      onFailure: cause => sync(() => {\n        this._currentChannel = failCause(cause);\n      }),\n      onSuccess: out => sync(() => {\n        this.addFinalizer(exit => this.provide(bracketOut.finalizer(out, exit)));\n        this._currentChannel = write(out);\n      })\n    }));\n    return FromEffect(effect);\n  }\n  provide(effect) {\n    if (this._providedEnv === undefined) {\n      return effect;\n    }\n    return pipe(effect, provide(this._providedEnv));\n  }\n  runEnsuring(ensuring) {\n    this.addFinalizer(ensuring.finalizer);\n    this._currentChannel = ensuring.channel;\n  }\n  addFinalizer(f) {\n    this._doneStack.push(new ContinuationFinalizerImpl(f));\n  }\n  runSubexecutor() {\n    const subexecutor = this._activeSubexecutor;\n    switch (subexecutor._tag) {\n      case OP_PULL_FROM_CHILD:\n        {\n          return this.pullFromChild(subexecutor.childExecutor, subexecutor.parentSubexecutor, subexecutor.onEmit, subexecutor);\n        }\n      case OP_PULL_FROM_UPSTREAM:\n        {\n          return this.pullFromUpstream(subexecutor);\n        }\n      case OP_DRAIN_CHILD_EXECUTORS:\n        {\n          return this.drainChildExecutors(subexecutor);\n        }\n      case OP_EMIT$2:\n        {\n          this._emitted = subexecutor.value;\n          this._activeSubexecutor = subexecutor.next;\n          return Emit();\n        }\n    }\n  }\n  replaceSubexecutor(nextSubExec) {\n    this._currentChannel = undefined;\n    this._activeSubexecutor = nextSubExec;\n  }\n  finishWithExit(exit) {\n    const state = match(exit, {\n      onFailure: cause => this.doneHalt(cause),\n      onSuccess: value => this.doneSucceed(value)\n    });\n    this._activeSubexecutor = undefined;\n    return state === undefined ? unit : effect(state);\n  }\n  finishSubexecutorWithCloseEffect(subexecutorDone, ...closeFuncs) {\n    this.addFinalizer(() => pipe(closeFuncs, forEach(closeFunc => pipe(sync(() => closeFunc(subexecutorDone)), flatMap(closeEffect => closeEffect !== undefined ? closeEffect : unit)), {\n      discard: true\n    })));\n    const state = pipe(subexecutorDone, match({\n      onFailure: cause => this.doneHalt(cause),\n      onSuccess: value => this.doneSucceed(value)\n    }));\n    this._activeSubexecutor = undefined;\n    return state;\n  }\n  applyUpstreamPullStrategy(upstreamFinished, queue, strategy) {\n    switch (strategy._tag) {\n      case OP_PULL_AFTER_NEXT:\n        {\n          const shouldPrepend = !upstreamFinished || queue.some(subexecutor => subexecutor !== undefined);\n          return [strategy.emitSeparator, shouldPrepend ? [undefined, ...queue] : queue];\n        }\n      case OP_PULL_AFTER_ALL_ENQUEUED:\n        {\n          const shouldEnqueue = !upstreamFinished || queue.some(subexecutor => subexecutor !== undefined);\n          return [strategy.emitSeparator, shouldEnqueue ? [...queue, undefined] : queue];\n        }\n    }\n  }\n  pullFromChild(childExecutor, parentSubexecutor, onEmitted, subexecutor) {\n    return Read(childExecutor, identity, emitted => {\n      const childExecutorDecision = onEmitted(emitted);\n      switch (childExecutorDecision._tag) {\n        case OP_CONTINUE:\n          {\n            break;\n          }\n        case OP_CLOSE:\n          {\n            this.finishWithDoneValue(childExecutor, parentSubexecutor, childExecutorDecision.value);\n            break;\n          }\n        case OP_YIELD:\n          {\n            const modifiedParent = parentSubexecutor.enqueuePullFromChild(subexecutor);\n            this.replaceSubexecutor(modifiedParent);\n            break;\n          }\n      }\n      this._activeSubexecutor = new Emit$1(emitted, this._activeSubexecutor);\n      return undefined;\n    }, match({\n      onFailure: cause => {\n        const state = this.handleSubexecutorFailure(childExecutor, parentSubexecutor, cause);\n        return state === undefined ? undefined : effectOrUndefinedIgnored(state);\n      },\n      onSuccess: doneValue => {\n        this.finishWithDoneValue(childExecutor, parentSubexecutor, doneValue);\n        return undefined;\n      }\n    }));\n  }\n  finishWithDoneValue(childExecutor, parentSubexecutor, doneValue) {\n    const subexecutor = parentSubexecutor;\n    switch (subexecutor._tag) {\n      case OP_PULL_FROM_UPSTREAM:\n        {\n          const modifiedParent = new PullFromUpstream(subexecutor.upstreamExecutor, subexecutor.createChild, subexecutor.lastDone !== undefined ? subexecutor.combineChildResults(subexecutor.lastDone, doneValue) : doneValue, subexecutor.activeChildExecutors, subexecutor.combineChildResults, subexecutor.combineWithChildResult, subexecutor.onPull, subexecutor.onEmit);\n          this._closeLastSubstream = childExecutor.close(succeed(doneValue));\n          this.replaceSubexecutor(modifiedParent);\n          break;\n        }\n      case OP_DRAIN_CHILD_EXECUTORS:\n        {\n          const modifiedParent = new DrainChildExecutors(subexecutor.upstreamExecutor, subexecutor.lastDone !== undefined ? subexecutor.combineChildResults(subexecutor.lastDone, doneValue) : doneValue, subexecutor.activeChildExecutors, subexecutor.upstreamDone, subexecutor.combineChildResults, subexecutor.combineWithChildResult, subexecutor.onPull);\n          this._closeLastSubstream = childExecutor.close(succeed(doneValue));\n          this.replaceSubexecutor(modifiedParent);\n          break;\n        }\n    }\n  }\n  handleSubexecutorFailure(childExecutor, parentSubexecutor, cause) {\n    return this.finishSubexecutorWithCloseEffect(failCause$1(cause), exit => parentSubexecutor.close(exit), exit => childExecutor.close(exit));\n  }\n  pullFromUpstream(subexecutor) {\n    if (subexecutor.activeChildExecutors.length === 0) {\n      return this.performPullFromUpstream(subexecutor);\n    }\n    const activeChild = subexecutor.activeChildExecutors[0];\n    const parentSubexecutor = new PullFromUpstream(subexecutor.upstreamExecutor, subexecutor.createChild, subexecutor.lastDone, subexecutor.activeChildExecutors.slice(1), subexecutor.combineChildResults, subexecutor.combineWithChildResult, subexecutor.onPull, subexecutor.onEmit);\n    if (activeChild === undefined) {\n      return this.performPullFromUpstream(parentSubexecutor);\n    }\n    this.replaceSubexecutor(new PullFromChild(activeChild.childExecutor, parentSubexecutor, activeChild.onEmit));\n    return undefined;\n  }\n  performPullFromUpstream(subexecutor) {\n    return Read(subexecutor.upstreamExecutor, effect => {\n      const closeLastSubstream = this._closeLastSubstream === undefined ? unit : this._closeLastSubstream;\n      this._closeLastSubstream = undefined;\n      return pipe(this._executeCloseLastSubstream(closeLastSubstream), zipRight(effect));\n    }, emitted => {\n      if (this._closeLastSubstream !== undefined) {\n        const closeLastSubstream = this._closeLastSubstream;\n        this._closeLastSubstream = undefined;\n        return pipe(this._executeCloseLastSubstream(closeLastSubstream), map(() => {\n          const childExecutor = new ChannelExecutor(subexecutor.createChild(emitted), this._providedEnv, this._executeCloseLastSubstream);\n          childExecutor._input = this._input;\n          const [emitSeparator, updatedChildExecutors] = this.applyUpstreamPullStrategy(false, subexecutor.activeChildExecutors, subexecutor.onPull(Pulled(emitted)));\n          this._activeSubexecutor = new PullFromChild(childExecutor, new PullFromUpstream(subexecutor.upstreamExecutor, subexecutor.createChild, subexecutor.lastDone, updatedChildExecutors, subexecutor.combineChildResults, subexecutor.combineWithChildResult, subexecutor.onPull, subexecutor.onEmit), subexecutor.onEmit);\n          if (isSome(emitSeparator)) {\n            this._activeSubexecutor = new Emit$1(emitSeparator.value, this._activeSubexecutor);\n          }\n          return undefined;\n        }));\n      }\n      const childExecutor = new ChannelExecutor(subexecutor.createChild(emitted), this._providedEnv, this._executeCloseLastSubstream);\n      childExecutor._input = this._input;\n      const [emitSeparator, updatedChildExecutors] = this.applyUpstreamPullStrategy(false, subexecutor.activeChildExecutors, subexecutor.onPull(Pulled(emitted)));\n      this._activeSubexecutor = new PullFromChild(childExecutor, new PullFromUpstream(subexecutor.upstreamExecutor, subexecutor.createChild, subexecutor.lastDone, updatedChildExecutors, subexecutor.combineChildResults, subexecutor.combineWithChildResult, subexecutor.onPull, subexecutor.onEmit), subexecutor.onEmit);\n      if (isSome(emitSeparator)) {\n        this._activeSubexecutor = new Emit$1(emitSeparator.value, this._activeSubexecutor);\n      }\n      return undefined;\n    }, exit => {\n      if (subexecutor.activeChildExecutors.some(subexecutor => subexecutor !== undefined)) {\n        const drain = new DrainChildExecutors(subexecutor.upstreamExecutor, subexecutor.lastDone, [undefined, ...subexecutor.activeChildExecutors], subexecutor.upstreamExecutor.getDone(), subexecutor.combineChildResults, subexecutor.combineWithChildResult, subexecutor.onPull);\n        if (this._closeLastSubstream !== undefined) {\n          const closeLastSubstream = this._closeLastSubstream;\n          this._closeLastSubstream = undefined;\n          return pipe(this._executeCloseLastSubstream(closeLastSubstream), map(() => this.replaceSubexecutor(drain)));\n        }\n        this.replaceSubexecutor(drain);\n        return undefined;\n      }\n      const closeLastSubstream = this._closeLastSubstream;\n      const state = this.finishSubexecutorWithCloseEffect(pipe(exit, map$1(a => subexecutor.combineWithChildResult(subexecutor.lastDone, a))), () => closeLastSubstream, exit => subexecutor.upstreamExecutor.close(exit));\n      return state === undefined ? undefined :\n      // NOTE: assuming finalizers cannot fail\n      effectOrUndefinedIgnored(state);\n    });\n  }\n  drainChildExecutors(subexecutor) {\n    if (subexecutor.activeChildExecutors.length === 0) {\n      const lastClose = this._closeLastSubstream;\n      if (lastClose !== undefined) {\n        this.addFinalizer(() => succeed$1(lastClose));\n      }\n      return this.finishSubexecutorWithCloseEffect(subexecutor.upstreamDone, () => lastClose, exit => subexecutor.upstreamExecutor.close(exit));\n    }\n    const activeChild = subexecutor.activeChildExecutors[0];\n    const rest = subexecutor.activeChildExecutors.slice(1);\n    if (activeChild === undefined) {\n      const [emitSeparator, remainingExecutors] = this.applyUpstreamPullStrategy(true, rest, subexecutor.onPull(NoUpstream(rest.reduce((n, curr) => curr !== undefined ? n + 1 : n, 0))));\n      this.replaceSubexecutor(new DrainChildExecutors(subexecutor.upstreamExecutor, subexecutor.lastDone, remainingExecutors, subexecutor.upstreamDone, subexecutor.combineChildResults, subexecutor.combineWithChildResult, subexecutor.onPull));\n      if (isSome(emitSeparator)) {\n        this._emitted = emitSeparator.value;\n        return Emit();\n      }\n      return undefined;\n    }\n    const parentSubexecutor = new DrainChildExecutors(subexecutor.upstreamExecutor, subexecutor.lastDone, rest, subexecutor.upstreamDone, subexecutor.combineChildResults, subexecutor.combineWithChildResult, subexecutor.onPull);\n    this.replaceSubexecutor(new PullFromChild(activeChild.childExecutor, parentSubexecutor, activeChild.onEmit));\n    return undefined;\n  }\n}\nconst ifNotNull = effect => effect !== undefined ? effect : unit;\nconst runFinalizers = (finalizers, exit$1) => {\n  return pipe(forEach(finalizers, fin => exit(fin(exit$1))), map(exits => pipe(all(exits), getOrElse(() => unit$2))), flatMap(exit => suspend(() => exit)));\n};\n\n/**\n * @internal\n */\nconst readUpstream = (r, onSuccess, onFailure) => {\n  const readStack = [r];\n  const read = () => {\n    const current = readStack.pop();\n    if (current === undefined || current.upstream === undefined) {\n      return dieMessage(\"Unexpected end of input for channel execution\");\n    }\n    const state = current.upstream.run();\n    switch (state._tag) {\n      case OP_EMIT$1:\n        {\n          const emitEffect = current.onEmit(current.upstream.getEmit());\n          if (readStack.length === 0) {\n            if (emitEffect === undefined) {\n              return suspend(onSuccess);\n            }\n            return pipe(emitEffect, matchCauseEffect({\n              onFailure,\n              onSuccess\n            }));\n          }\n          if (emitEffect === undefined) {\n            return suspend(() => read());\n          }\n          return pipe(emitEffect, matchCauseEffect({\n            onFailure,\n            onSuccess: () => read()\n          }));\n        }\n      case OP_DONE:\n        {\n          const doneEffect = current.onDone(current.upstream.getDone());\n          if (readStack.length === 0) {\n            if (doneEffect === undefined) {\n              return suspend(onSuccess);\n            }\n            return pipe(doneEffect, matchCauseEffect({\n              onFailure,\n              onSuccess\n            }));\n          }\n          if (doneEffect === undefined) {\n            return suspend(() => read());\n          }\n          return pipe(doneEffect, matchCauseEffect({\n            onFailure,\n            onSuccess: () => read()\n          }));\n        }\n      case OP_FROM_EFFECT$1:\n        {\n          readStack.push(current);\n          return pipe(current.onEffect(state.effect), catchAllCause(cause => suspend(() => {\n            const doneEffect = current.onDone(failCause$1(cause));\n            return doneEffect === undefined ? unit : doneEffect;\n          })), matchCauseEffect({\n            onFailure,\n            onSuccess: () => read()\n          }));\n        }\n      case OP_READ$1:\n        {\n          readStack.push(current);\n          readStack.push(state);\n          return suspend(() => read());\n        }\n    }\n  };\n  return read();\n};\n\n/** @internal */\nconst run = self => pipe(runScoped(self), scoped);\n\n/** @internal */\nconst runScoped = self => {\n  const run = (channelDeferred, scopeDeferred, scope) => acquireUseRelease(sync(() => new ChannelExecutor(self, void 0, identity)), exec => suspend(() => pipe(runScopedInterpret(exec.run(), exec), intoDeferred(channelDeferred), zipRight(_await(channelDeferred)), zipLeft(_await(scopeDeferred)))), (exec, exit) => {\n    const finalize = exec.close(exit);\n    if (finalize === undefined) {\n      return unit;\n    }\n    return tapErrorCause(finalize, cause => addFinalizer$1(scope, failCause$2(cause)));\n  });\n  return uninterruptibleMask(restore => flatMap(scope, parent => pipe(all$1([fork(parent, sequential), make(), make()]), flatMap(([child, channelDeferred, scopeDeferred]) => pipe(forkScoped(restore(run(channelDeferred, scopeDeferred, child))), flatMap(fiber => pipe(addFinalizer(() => succeed$2(scopeDeferred, void 0)), zipRight(restore(_await(channelDeferred))), zipLeft(inheritAll(fiber)))))))));\n};\n\n/** @internal */\nconst runScopedInterpret = (channelState, exec) => {\n  const op = channelState;\n  switch (op._tag) {\n    case OP_FROM_EFFECT$1:\n      {\n        return pipe(op.effect, flatMap(() => runScopedInterpret(exec.run(), exec)));\n      }\n    case OP_EMIT$1:\n      {\n        // Can't really happen because Out <:< Nothing. So just skip ahead.\n        return runScopedInterpret(exec.run(), exec);\n      }\n    case OP_DONE:\n      {\n        return suspend(() => exec.getDone());\n      }\n    case OP_READ$1:\n      {\n        return readUpstream(op, () => runScopedInterpret(exec.run(), exec), failCause$2);\n      }\n  }\n};\n\nexport { ChannelExecutor, readUpstream, run, runScoped };\n","/** @internal */\nconst OP_DONE = \"Done\";\n\n/** @internal */\n\n/** @internal */\nconst OP_AWAIT = \"Await\";\n\n/** @internal */\n\nexport { OP_AWAIT, OP_DONE };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { OP_DONE, OP_AWAIT } from '../opCodes/channelMergeDecision.esm.js';\n\n/** @internal */\nconst MergeDecisionSymbolKey = \"effect/ChannelMergeDecision\";\n\n/** @internal */\nconst MergeDecisionTypeId = /*#__PURE__*/Symbol.for(MergeDecisionSymbolKey);\n\n/** @internal */\nconst proto = {\n  [MergeDecisionTypeId]: {\n    _R: _ => _,\n    _E0: _ => _,\n    _Z0: _ => _,\n    _E: _ => _,\n    _Z: _ => _\n  }\n};\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst Done = effect => {\n  const op = Object.create(proto);\n  op._tag = OP_DONE;\n  op.effect = effect;\n  return op;\n};\n\n/** @internal */\nconst Await = f => {\n  const op = Object.create(proto);\n  op._tag = OP_AWAIT;\n  op.f = f;\n  return op;\n};\n\n/** @internal */\nconst AwaitConst = effect => Await(() => effect);\n\n/** @internal */\nconst isMergeDecision = u => hasProperty(u, MergeDecisionTypeId);\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onAwait,\n  onDone\n}) => {\n  const op = self;\n  switch (op._tag) {\n    case OP_DONE:\n      {\n        return onDone(op.effect);\n      }\n    case OP_AWAIT:\n      {\n        return onAwait(op.f);\n      }\n  }\n});\n\nexport { Await, AwaitConst, Done, MergeDecisionTypeId, isMergeDecision, match };\n","/** @internal */\nconst OP_BOTH_RUNNING = \"BothRunning\";\n\n/** @internal */\n\n/** @internal */\nconst OP_LEFT_DONE = \"LeftDone\";\n\n/** @internal */\n\n/** @internal */\nconst OP_RIGHT_DONE = \"RightDone\";\n\n/** @internal */\n\nexport { OP_BOTH_RUNNING, OP_LEFT_DONE, OP_RIGHT_DONE };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { OP_BOTH_RUNNING, OP_LEFT_DONE, OP_RIGHT_DONE } from '../opCodes/channelMergeState.esm.js';\n\n/** @internal */\nconst MergeStateSymbolKey = \"effect/ChannelMergeState\";\n\n/** @internal */\nconst MergeStateTypeId = /*#__PURE__*/Symbol.for(MergeStateSymbolKey);\n\n/** @internal */\nconst proto = {\n  [MergeStateTypeId]: MergeStateTypeId\n};\n\n/** @internal */\nconst BothRunning = (left, right) => {\n  const op = Object.create(proto);\n  op._tag = OP_BOTH_RUNNING;\n  op.left = left;\n  op.right = right;\n  return op;\n};\n\n/** @internal */\nconst LeftDone = f => {\n  const op = Object.create(proto);\n  op._tag = OP_LEFT_DONE;\n  op.f = f;\n  return op;\n};\n\n/** @internal */\nconst RightDone = f => {\n  const op = Object.create(proto);\n  op._tag = OP_RIGHT_DONE;\n  op.f = f;\n  return op;\n};\n\n/** @internal */\nconst isMergeState = u => hasProperty(u, MergeStateTypeId);\n\n/** @internal */\nconst isBothRunning = self => {\n  return self._tag === OP_BOTH_RUNNING;\n};\n\n/** @internal */\nconst isLeftDone = self => {\n  return self._tag === OP_LEFT_DONE;\n};\n\n/** @internal */\nconst isRightDone = self => {\n  return self._tag === OP_RIGHT_DONE;\n};\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onBothRunning,\n  onLeftDone,\n  onRightDone\n}) => {\n  switch (self._tag) {\n    case OP_BOTH_RUNNING:\n      {\n        return onBothRunning(self.left, self.right);\n      }\n    case OP_LEFT_DONE:\n      {\n        return onLeftDone(self.f);\n      }\n    case OP_RIGHT_DONE:\n      {\n        return onRightDone(self.f);\n      }\n  }\n});\n\nexport { BothRunning, LeftDone, MergeStateTypeId, RightDone, isBothRunning, isLeftDone, isMergeState, isRightDone, match };\n","/** @internal */\nconst OP_BACK_PRESSURE = \"BackPressure\";\n\n/** @internal */\n\n/** @internal */\nconst OP_BUFFER_SLIDING = \"BufferSliding\";\n\n/** @internal */\n\nexport { OP_BACK_PRESSURE, OP_BUFFER_SLIDING };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { OP_BACK_PRESSURE, OP_BUFFER_SLIDING } from '../opCodes/channelMergeStrategy.esm.js';\n\n/** @internal */\nconst MergeStrategySymbolKey = \"effect/ChannelMergeStrategy\";\n\n/** @internal */\nconst MergeStrategyTypeId = /*#__PURE__*/Symbol.for(MergeStrategySymbolKey);\n\n/** @internal */\nconst proto = {\n  [MergeStrategyTypeId]: MergeStrategyTypeId\n};\n\n/** @internal */\nconst BackPressure = _ => {\n  const op = Object.create(proto);\n  op._tag = OP_BACK_PRESSURE;\n  return op;\n};\n\n/** @internal */\nconst BufferSliding = _ => {\n  const op = Object.create(proto);\n  op._tag = OP_BUFFER_SLIDING;\n  return op;\n};\n\n/** @internal */\nconst isMergeStrategy = u => hasProperty(u, MergeStrategyTypeId);\n\n/** @internal */\nconst isBackPressure = self => self._tag === OP_BACK_PRESSURE;\n\n/** @internal */\nconst isBufferSliding = self => self._tag === OP_BUFFER_SLIDING;\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onBackPressure,\n  onBufferSliding\n}) => {\n  switch (self._tag) {\n    case OP_BACK_PRESSURE:\n      {\n        return onBackPressure();\n      }\n    case OP_BUFFER_SLIDING:\n      {\n        return onBufferSliding();\n      }\n  }\n});\n\nexport { BackPressure, BufferSliding, MergeStrategyTypeId, isBackPressure, isBufferSliding, isMergeStrategy, match };\n","import { interrupt, map as map$1 } from '../../Cause/dist/effect-Cause.esm.js';\nimport { make as make$2, await as _await, succeed, failCause } from '../../Deferred/dist/effect-Deferred.esm.js';\nimport { map, flatMap, flatten, unit, fiberIdWith, interrupt as interrupt$1, forEach, succeed as succeed$2, matchCause, zipRight } from '../../Effect/dist/effect-Effect.esm.js';\nimport { left, right, match } from '../../Either/dist/effect-Either.esm.js';\nimport { failCause as failCause$1, succeed as succeed$1, fail } from '../../Exit/dist/effect-Exit.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { make as make$1, modify } from '../../Ref/dist/effect-Ref.esm.js';\n\n/** @internal */\n\n/** @internal */\nconst OP_STATE_EMPTY = \"Empty\";\n\n/** @internal */\n\n/** @internal */\nconst OP_STATE_EMIT = \"Emit\";\n\n/** @internal */\n\n/** @internal */\nconst OP_STATE_ERROR = \"Error\";\n\n/** @internal */\n\n/** @internal */\nconst OP_STATE_DONE = \"Done\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst stateEmpty = notifyProducer => ({\n  _tag: OP_STATE_EMPTY,\n  notifyProducer\n});\n\n/** @internal */\nconst stateEmit = notifyConsumers => ({\n  _tag: OP_STATE_EMIT,\n  notifyConsumers\n});\n\n/** @internal */\nconst stateError = cause => ({\n  _tag: OP_STATE_ERROR,\n  cause\n});\n\n/** @internal */\nconst stateDone = done => ({\n  _tag: OP_STATE_DONE,\n  done\n});\n\n/** @internal */\nclass SingleProducerAsyncInputImpl {\n  constructor(ref) {\n    this.ref = ref;\n  }\n  awaitRead() {\n    return flatten(modify(this.ref, state => state._tag === OP_STATE_EMPTY ? [_await(state.notifyProducer), state] : [unit, state]));\n  }\n  close() {\n    return fiberIdWith(fiberId => this.error(interrupt(fiberId)));\n  }\n  done(value) {\n    return flatten(modify(this.ref, state => {\n      switch (state._tag) {\n        case OP_STATE_EMPTY:\n          {\n            return [_await(state.notifyProducer), state];\n          }\n        case OP_STATE_EMIT:\n          {\n            return [forEach(state.notifyConsumers, deferred => succeed(deferred, left(value)), {\n              discard: true\n            }), stateDone(value)];\n          }\n        case OP_STATE_ERROR:\n          {\n            return [interrupt$1, state];\n          }\n        case OP_STATE_DONE:\n          {\n            return [interrupt$1, state];\n          }\n      }\n    }));\n  }\n  emit(element) {\n    return flatMap(make$2(), deferred => flatten(modify(this.ref, state => {\n      switch (state._tag) {\n        case OP_STATE_EMPTY:\n          {\n            return [_await(state.notifyProducer), state];\n          }\n        case OP_STATE_EMIT:\n          {\n            const notifyConsumer = state.notifyConsumers[0];\n            const notifyConsumers = state.notifyConsumers.slice(1);\n            if (notifyConsumer !== undefined) {\n              return [succeed(notifyConsumer, right(element)), notifyConsumers.length === 0 ? stateEmpty(deferred) : stateEmit(notifyConsumers)];\n            }\n            throw new Error(\"Bug: Channel.SingleProducerAsyncInput.emit - Queue was empty! Please report an issue at https://github.com/Effect-TS/stream/issues\");\n          }\n        case OP_STATE_ERROR:\n          {\n            return [interrupt$1, state];\n          }\n        case OP_STATE_DONE:\n          {\n            return [interrupt$1, state];\n          }\n      }\n    })));\n  }\n  error(cause) {\n    return flatten(modify(this.ref, state => {\n      switch (state._tag) {\n        case OP_STATE_EMPTY:\n          {\n            return [_await(state.notifyProducer), state];\n          }\n        case OP_STATE_EMIT:\n          {\n            return [forEach(state.notifyConsumers, deferred => failCause(deferred, cause), {\n              discard: true\n            }), stateError(cause)];\n          }\n        case OP_STATE_ERROR:\n          {\n            return [interrupt$1, state];\n          }\n        case OP_STATE_DONE:\n          {\n            return [interrupt$1, state];\n          }\n      }\n    }));\n  }\n  take() {\n    return this.takeWith(cause => failCause$1(map$1(cause, left)), elem => succeed$1(elem), done => fail(right(done)));\n  }\n  takeWith(onError, onElement, onDone) {\n    return flatMap(make$2(), deferred => flatten(modify(this.ref, state => {\n      switch (state._tag) {\n        case OP_STATE_EMPTY:\n          {\n            return [zipRight(succeed(state.notifyProducer, void 0), matchCause(_await(deferred), {\n              onFailure: onError,\n              onSuccess: match({\n                onLeft: onDone,\n                onRight: onElement\n              })\n            })), stateEmit([deferred])];\n          }\n        case OP_STATE_EMIT:\n          {\n            return [matchCause(_await(deferred), {\n              onFailure: onError,\n              onSuccess: match({\n                onLeft: onDone,\n                onRight: onElement\n              })\n            }), stateEmit([...state.notifyConsumers, deferred])];\n          }\n        case OP_STATE_ERROR:\n          {\n            return [succeed$2(onError(state.cause)), state];\n          }\n        case OP_STATE_DONE:\n          {\n            return [succeed$2(onDone(state.done)), state];\n          }\n      }\n    })));\n  }\n}\n\n/** @internal */\nconst make = () => pipe(make$2(), flatMap(deferred => make$1(stateEmpty(deferred))), map(ref => new SingleProducerAsyncInputImpl(ref)));\n\nexport { make };\n","import { failureOrCause, map as map$2, die, isDieType, isInterrupted } from '../Cause/dist/effect-Cause.esm.js';\nimport { empty, isEmpty, unsafeFromArray, fromIterable, unsafeGet as unsafeGet$1 } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { add, merge as merge$1, make as make$4, unsafeGet } from '../Context/dist/effect-Context.esm.js';\nimport { await as _await, make as make$1, succeed as succeed$2, failCause as failCause$2, isDone } from '../Deferred/dist/effect-Deferred.esm.js';\nimport { unit, flatMap as flatMap$1, uninterruptible, tap, context as context$1, map as map$1, suspend as suspend$1, matchCause, flatten as flatten$1, gen, acquireRelease, makeSemaphore, matchCauseEffect, failCause as failCause$1, zipRight as zipRight$1, interruptible, asUnit as asUnit$1, succeed as succeed$1, uninterruptibleMask, exit, raceFirst, tapErrorCause, intoDeferred, forkScoped, forever, raceWith, as as as$1, race, scoped as scoped$1, when, repeatWhile, zip as zip$1, zipWith, forkDaemon, never as never$1, sync as sync$1, makeSpanScoped, repeatUntil, catchAllCause as catchAllCause$1 } from '../Effect/dist/effect-Effect.esm.js';\nimport { match, left, right } from '../Either/dist/effect-Either.esm.js';\nimport { equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { match as match$2, failCause as failCause$3, succeed as succeed$3, zip as zip$2 } from '../Exit/dist/effect-Exit.esm.js';\nimport { interrupt, join, await as _await$1 } from '../Fiber/dist/effect-Fiber.esm.js';\nimport { pipe, dual, constVoid, identity } from '../Function/dist/effect-Function.esm.js';\nimport { build, merge, context as context$2 } from '../Layer/dist/effect-Layer.esm.js';\nimport { match as match$1, none, some, isSome } from '../Option/dist/effect-Option.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { subscribe } from '../PubSub/dist/effect-PubSub.esm.js';\nimport { take, bounded, shutdown, offer, unbounded, size } from '../Queue/dist/effect-Queue.esm.js';\nimport { make, get, set, modify, update } from '../Ref/dist/effect-Ref.esm.js';\nimport { make as make$3, extend, close } from '../Scope/dist/effect-Scope.esm.js';\nimport { runScoped, run as run$1, ChannelExecutor, readUpstream } from './channel/channelExecutor.esm.js';\nimport { Done, Await } from './channel/mergeDecision.esm.js';\nimport { BothRunning, RightDone, LeftDone } from './channel/mergeState.esm.js';\nimport { match as match$3, BackPressure } from './channel/mergeStrategy.esm.js';\nimport { make as make$2 } from './channel/singleProducerAsyncInput.esm.js';\nimport { flatMap, fromEffect, ensuringWith, suspend, catchAllCause, failCause, concatMapWith, readWith, write, fail, succeedNow, pipeTo, concatAll, succeed, sync, readWithCause, foldCauseChannel, embedInput, provideContext, readOrFail, collectElements, acquireReleaseOut, concatAllWith, unit as unit$1, isChannel } from './core-stream.esm.js';\nimport { OP_DONE as OP_DONE$1 } from './opCodes/channelMergeDecision.esm.js';\nimport { OP_RIGHT_DONE, OP_LEFT_DONE, OP_BOTH_RUNNING } from './opCodes/channelMergeState.esm.js';\nimport { OP_READ, OP_FROM_EFFECT, OP_EMIT, OP_DONE } from './opCodes/channelState.esm.js';\nimport { spanTag } from './tracer.esm.js';\n\n/** @internal */\nconst acquireUseRelease = (acquire, use, release) => flatMap(fromEffect(make(() => unit)), ref => pipe(fromEffect(uninterruptible(tap(acquire, a => set(ref, exit => release(a, exit))))), flatMap(use), ensuringWith(exit => flatMap$1(get(ref), f => f(exit)))));\n\n/** @internal */\nconst as = /*#__PURE__*/dual(2, (self, value) => map(self, () => value));\n\n/** @internal */\nconst asUnit = self => map(self, constVoid);\n\n/** @internal */\nconst buffer = options => suspend(() => {\n  const doBuffer = (empty, isEmpty, ref) => unwrap(modify(ref, inElem => isEmpty(inElem) ? [readWith({\n    onInput: input => flatMap(write(input), () => doBuffer(empty, isEmpty, ref)),\n    onFailure: error => fail(error),\n    onDone: done => succeedNow(done)\n  }), inElem] : [flatMap(write(inElem), () => doBuffer(empty, isEmpty, ref)), empty]));\n  return doBuffer(options.empty, options.isEmpty, options.ref);\n});\n\n/** @internal */\nconst bufferChunk = ref => buffer({\n  empty: empty(),\n  isEmpty: isEmpty,\n  ref\n});\n\n/** @internal */\nconst catchAll = /*#__PURE__*/dual(2, (self, f) => catchAllCause(self, cause => match(failureOrCause(cause), {\n  onLeft: f,\n  onRight: failCause\n})));\n\n/** @internal */\nconst concatMap = /*#__PURE__*/dual(2, (self, f) => concatMapWith(self, f, () => void 0, () => void 0));\n\n/** @internal */\nconst collect = /*#__PURE__*/dual(2, (self, pf) => {\n  const collector = readWith({\n    onInput: out => match$1(pf(out), {\n      onNone: () => collector,\n      onSome: out2 => flatMap(write(out2), () => collector)\n    }),\n    onFailure: fail,\n    onDone: succeedNow\n  });\n  return pipeTo(self, collector);\n});\n\n/** @internal */\nconst concatOut = self => concatAll(self);\n\n/** @internal */\nconst mapInput = /*#__PURE__*/dual(2, (self, f) => {\n  const reader = readWith({\n    onInput: inElem => flatMap(write(inElem), () => reader),\n    onFailure: fail,\n    onDone: done => succeedNow(f(done))\n  });\n  return pipeTo(reader, self);\n});\n\n/** @internal */\nconst mapInputEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const reader = readWith({\n    onInput: inElem => flatMap(write(inElem), () => reader),\n    onFailure: fail,\n    onDone: done => fromEffect(f(done))\n  });\n  return pipeTo(reader, self);\n});\n\n/** @internal */\nconst mapInputError = /*#__PURE__*/dual(2, (self, f) => {\n  const reader = readWith({\n    onInput: inElem => flatMap(write(inElem), () => reader),\n    onFailure: error => fail(f(error)),\n    onDone: succeedNow\n  });\n  return pipeTo(reader, self);\n});\n\n/** @internal */\nconst mapInputErrorEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const reader = readWith({\n    onInput: inElem => flatMap(write(inElem), () => reader),\n    onFailure: error => fromEffect(f(error)),\n    onDone: succeedNow\n  });\n  return pipeTo(reader, self);\n});\n\n/** @internal */\nconst mapInputIn = /*#__PURE__*/dual(2, (self, f) => {\n  const reader = readWith({\n    onInput: inElem => flatMap(write(f(inElem)), () => reader),\n    onFailure: fail,\n    onDone: succeedNow\n  });\n  return pipeTo(reader, self);\n});\nconst mapInputInEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const reader = readWith({\n    onInput: inElem => flatMap(flatMap(fromEffect(f(inElem)), write), () => reader),\n    onFailure: fail,\n    onDone: succeedNow\n  });\n  return pipeTo(reader, self);\n});\n\n/** @internal */\nconst doneCollect = self => suspend(() => {\n  const builder = [];\n  return pipe(pipeTo(self, doneCollectReader(builder)), flatMap(outDone => succeed([unsafeFromArray(builder), outDone])));\n});\n\n/** @internal */\nconst doneCollectReader = builder => {\n  return readWith({\n    onInput: outElem => flatMap(sync(() => {\n      builder.push(outElem);\n    }), () => doneCollectReader(builder)),\n    onFailure: fail,\n    onDone: succeed\n  });\n};\n\n/** @internal */\nconst drain = self => {\n  const drainer = readWithCause({\n    onInput: () => drainer,\n    onFailure: failCause,\n    onDone: succeed\n  });\n  return pipeTo(self, drainer);\n};\n\n/** @internal */\nconst emitCollect = self => flatMap(doneCollect(self), write);\n\n/** @internal */\nconst ensuring = /*#__PURE__*/dual(2, (self, finalizer) => ensuringWith(self, () => finalizer));\n\n/** @internal */\nconst context = () => fromEffect(context$1());\n\n/** @internal */\nconst contextWith = f => map(context(), f);\n\n/** @internal */\nconst contextWithChannel = f => flatMap(context(), f);\n\n/** @internal */\nconst contextWithEffect = f => mapEffect(context(), f);\n\n/** @internal */\nconst flatten = self => flatMap(self, identity);\n\n/** @internal */\nconst foldChannel = /*#__PURE__*/dual(2, (self, options) => foldCauseChannel(self, {\n  onFailure: cause => {\n    const either = failureOrCause(cause);\n    switch (either._tag) {\n      case \"Left\":\n        {\n          return options.onFailure(either.left);\n        }\n      case \"Right\":\n        {\n          return failCause(either.right);\n        }\n    }\n  },\n  onSuccess: options.onSuccess\n}));\n\n/** @internal */\nconst fromEither = either => suspend(() => match(either, {\n  onLeft: fail,\n  onRight: succeed\n}));\n\n/** @internal */\nconst fromInput = input => unwrap(input.takeWith(failCause, elem => flatMap(write(elem), () => fromInput(input)), succeed));\n\n/** @internal */\nconst fromPubSub = pubsub => unwrapScoped(map$1(subscribe(pubsub), fromQueue));\n\n/** @internal */\nconst fromPubSubScoped = pubsub => map$1(subscribe(pubsub), fromQueue);\n\n/** @internal */\nconst fromOption = option => suspend(() => match$1(option, {\n  onNone: () => fail(none()),\n  onSome: succeed\n}));\n\n/** @internal */\nconst fromQueue = queue => suspend(() => fromQueueInternal(queue));\n\n/** @internal */\nconst fromQueueInternal = queue => pipe(fromEffect(take(queue)), flatMap(match({\n  onLeft: match$2({\n    onFailure: failCause,\n    onSuccess: succeedNow\n  }),\n  onRight: elem => flatMap(write(elem), () => fromQueueInternal(queue))\n})));\n\n/** @internal */\nconst identityChannel = () => readWith({\n  onInput: input => flatMap(write(input), () => identityChannel()),\n  onFailure: fail,\n  onDone: succeedNow\n});\n\n/** @internal */\nconst interruptWhen = /*#__PURE__*/dual(2, (self, effect) => mergeWith(self, {\n  other: fromEffect(effect),\n  onSelfDone: selfDone => Done(suspend$1(() => selfDone)),\n  onOtherDone: effectDone => Done(suspend$1(() => effectDone))\n}));\n\n/** @internal */\nconst interruptWhenDeferred = /*#__PURE__*/dual(2, (self, deferred) => interruptWhen(self, _await(deferred)));\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => flatMap(self, a => sync(() => f(a))));\n\n/** @internal */\nconst mapEffect = /*#__PURE__*/dual(2, (self, f) => flatMap(self, z => fromEffect(f(z))));\n\n/** @internal */\nconst mapError = /*#__PURE__*/dual(2, (self, f) => mapErrorCause(self, map$2(f)));\n\n/** @internal */\nconst mapErrorCause = /*#__PURE__*/dual(2, (self, f) => catchAllCause(self, cause => failCause(f(cause))));\n\n/** @internal */\nconst mapOut = /*#__PURE__*/dual(2, (self, f) => {\n  const reader = readWith({\n    onInput: outElem => flatMap(write(f(outElem)), () => reader),\n    onFailure: fail,\n    onDone: succeedNow\n  });\n  return pipeTo(self, reader);\n});\n\n/** @internal */\nconst mapOutEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const reader = readWithCause({\n    onInput: outElem => pipe(fromEffect(f(outElem)), flatMap(write), flatMap(() => reader)),\n    onFailure: failCause,\n    onDone: succeedNow\n  });\n  return pipeTo(self, reader);\n});\n\n/** @internal */\nconst mapOutEffectPar = /*#__PURE__*/dual(3, (self, f, n) => pipe(gen(function* ($) {\n  const queue = yield* $(acquireRelease(bounded(n), queue => shutdown(queue)));\n  const errorSignal = yield* $(make$1());\n  const withPermits = n === Number.POSITIVE_INFINITY ? _ => identity : (yield* $(makeSemaphore(n))).withPermits;\n  const pull = yield* $(toPull(self));\n  yield* $(matchCauseEffect(pull, {\n    onFailure: cause => offer(queue, failCause$1(cause)),\n    onSuccess: either => match(either, {\n      onLeft: outDone => {\n        const lock = withPermits(n);\n        return zipRight$1(interruptible(lock(unit)), asUnit$1(offer(queue, succeed$1(left(outDone)))));\n      },\n      onRight: outElem => gen(function* ($) {\n        const deferred = yield* $(make$1());\n        const latch = yield* $(make$1());\n        yield* $(asUnit$1(offer(queue, map$1(_await(deferred), right))));\n        yield* $(succeed$2(latch, void 0), zipRight$1(pipe(uninterruptibleMask(restore => pipe(exit(restore(_await(errorSignal))), raceFirst(exit(restore(f(outElem)))),\n        // TODO: remove\n        flatMap$1(exit => suspend$1(() => exit)))), tapErrorCause(cause => failCause$2(errorSignal, cause)), intoDeferred(deferred))), withPermits(1), forkScoped);\n        yield* $(_await(latch));\n      })\n    })\n  }), forever, interruptible, forkScoped);\n  return queue;\n}), map$1(queue => {\n  const consumer = unwrap(matchCause(flatten$1(take(queue)), {\n    onFailure: failCause,\n    onSuccess: match({\n      onLeft: succeedNow,\n      onRight: outElem => flatMap(write(outElem), () => consumer)\n    })\n  }));\n  return consumer;\n}), unwrapScoped));\n\n/** @internal */\nconst mergeAll = options => {\n  return channels => mergeAllWith(options)(channels, constVoid);\n};\n\n/** @internal */\nconst mergeAllUnbounded = channels => mergeAllWith({\n  concurrency: \"unbounded\"\n})(channels, constVoid);\n\n/** @internal */\nconst mergeAllUnboundedWith = (channels, f) => mergeAllWith({\n  concurrency: \"unbounded\"\n})(channels, f);\n\n/** @internal */\nconst mergeAllWith = ({\n  bufferSize = 16,\n  concurrency,\n  mergeStrategy = BackPressure()\n}) => (channels, f) => pipe(gen(function* ($) {\n  const concurrencyN = concurrency === \"unbounded\" ? Number.MAX_SAFE_INTEGER : concurrency;\n  const input = yield* $(make$2());\n  const queueReader = fromInput(input);\n  const queue = yield* $(acquireRelease(bounded(bufferSize), queue => shutdown(queue)));\n  const cancelers = yield* $(acquireRelease(unbounded(), queue => shutdown(queue)));\n  const lastDone = yield* $(make(none()));\n  const errorSignal = yield* $(make$1());\n  const withPermits = (yield* $(makeSemaphore(concurrencyN))).withPermits;\n  const pull = yield* $(toPull(channels));\n  const evaluatePull = pull => pipe(flatMap$1(pull, match({\n    onLeft: done => succeed$1(some(done)),\n    onRight: outElem => as$1(offer(queue, succeed$1(right(outElem))), none())\n  })), repeatUntil(isSome), flatMap$1(outDone => update(lastDone, match$1({\n    onNone: () => some(outDone.value),\n    onSome: lastDone => some(f(lastDone, outDone.value))\n  }))), catchAllCause$1(cause => isInterrupted(cause) ? failCause$1(cause) : pipe(offer(queue, failCause$1(cause)), zipRight$1(succeed$2(errorSignal, void 0)), asUnit$1)));\n  yield* $(matchCauseEffect(pull, {\n    onFailure: cause => pipe(offer(queue, failCause$1(cause)), zipRight$1(succeed$1(false))),\n    onSuccess: match({\n      onLeft: outDone => raceWith(_await(errorSignal), withPermits(concurrencyN)(unit), {\n        onSelfDone: (_, permitAcquisition) => as$1(interrupt(permitAcquisition), false),\n        onOtherDone: (_, failureAwait) => zipRight$1(interrupt(failureAwait), pipe(get(lastDone), flatMap$1(match$1({\n          onNone: () => offer(queue, succeed$1(left(outDone))),\n          onSome: lastDone => offer(queue, succeed$1(left(f(lastDone, outDone))))\n        })), as$1(false)))\n      }),\n      onRight: channel => match$3(mergeStrategy, {\n        onBackPressure: () => gen(function* ($) {\n          const latch = yield* $(make$1());\n          const raceEffects = pipe(queueReader, pipeTo(channel), toPull, flatMap$1(pull => race(evaluatePull(pull), _await(errorSignal))), scoped$1);\n          yield* $(succeed$2(latch, void 0), zipRight$1(raceEffects), withPermits(1), forkScoped);\n          yield* $(_await(latch));\n          const errored = yield* $(isDone(errorSignal));\n          return !errored;\n        }),\n        onBufferSliding: () => gen(function* ($) {\n          const canceler = yield* $(make$1());\n          const latch = yield* $(make$1());\n          const size$1 = yield* $(size(cancelers));\n          yield* $(take(cancelers), flatMap$1(_ => succeed$2(_, void 0)), when(() => size$1 >= concurrencyN));\n          yield* $(offer(cancelers, canceler));\n          const raceEffects = pipe(queueReader, pipeTo(channel), toPull, flatMap$1(pull => pipe(evaluatePull(pull), race(_await(errorSignal)), race(_await(canceler)))), scoped$1);\n          yield* $(succeed$2(latch, void 0), zipRight$1(raceEffects), withPermits(1), forkScoped);\n          yield* $(_await(latch));\n          const errored = yield* $(isDone(errorSignal));\n          return !errored;\n        })\n      })\n    })\n  }), repeatWhile(identity), forkScoped);\n  return [queue, input];\n}), map$1(([queue, input]) => {\n  const consumer = pipe(take(queue), flatten$1, matchCause({\n    onFailure: failCause,\n    onSuccess: match({\n      onLeft: succeedNow,\n      onRight: outElem => flatMap(write(outElem), () => consumer)\n    })\n  }), unwrap);\n  return embedInput(consumer, input);\n}), unwrapScoped);\n\n/** @internal */\nconst mergeMap = /*#__PURE__*/dual(3, (self, f, options) => mergeAll(options)(mapOut(self, f)));\n\n/** @internal */\nconst mergeOut = /*#__PURE__*/dual(2, (self, n) => mergeAll({\n  concurrency: n\n})(mapOut(self, identity)));\n\n/** @internal */\nconst mergeOutWith = /*#__PURE__*/dual(3, (self, n, f) => mergeAllWith({\n  concurrency: n\n})(mapOut(self, identity), f));\n\n/** @internal */\nconst mergeWith = /*#__PURE__*/dual(2, (self, options) => unwrapScoped(flatMap$1(make$2(), input => {\n  const queueReader = fromInput(input);\n  return map$1(zip$1(toPull(pipeTo(queueReader, self)), toPull(pipeTo(queueReader, options.other))), ([pullL, pullR]) => {\n    const handleSide = (exit, fiber, pull) => (done, both, single) => {\n      const onDecision = decision => {\n        const op = decision;\n        if (op._tag === OP_DONE$1) {\n          return succeed$1(fromEffect(zipRight$1(interrupt(fiber), op.effect)));\n        }\n        return map$1(_await$1(fiber), match$2({\n          onFailure: cause => fromEffect(op.f(failCause$3(cause))),\n          onSuccess: match({\n            onLeft: done => fromEffect(op.f(succeed$3(done))),\n            onRight: elem => zipRight(write(elem), go(single(op.f)))\n          })\n        }));\n      };\n      return match$2(exit, {\n        onFailure: cause => onDecision(done(failCause$3(cause))),\n        onSuccess: match({\n          onLeft: z => onDecision(done(succeed$3(z))),\n          onRight: elem => succeed$1(flatMap(write(elem), () => flatMap(fromEffect(forkDaemon(pull)), leftFiber => go(both(leftFiber, fiber)))))\n        })\n      });\n    };\n    const go = state => {\n      switch (state._tag) {\n        case OP_BOTH_RUNNING:\n          {\n            const leftJoin = interruptible(join(state.left));\n            const rightJoin = interruptible(join(state.right));\n            return unwrap(raceWith(leftJoin, rightJoin, {\n              onSelfDone: (leftExit, rf) => zipRight$1(interrupt(rf), handleSide(leftExit, state.right, pullL)(options.onSelfDone, BothRunning, f => LeftDone(f))),\n              onOtherDone: (rightExit, lf) => zipRight$1(interrupt(lf), handleSide(rightExit, state.left, pullR)(options.onOtherDone, (left, right) => BothRunning(right, left), f => RightDone(f)))\n            }));\n          }\n        case OP_LEFT_DONE:\n          {\n            return unwrap(map$1(exit(pullR), match$2({\n              onFailure: cause => fromEffect(state.f(failCause$3(cause))),\n              onSuccess: match({\n                onLeft: done => fromEffect(state.f(succeed$3(done))),\n                onRight: elem => flatMap(write(elem), () => go(LeftDone(state.f)))\n              })\n            })));\n          }\n        case OP_RIGHT_DONE:\n          {\n            return unwrap(map$1(exit(pullL), match$2({\n              onFailure: cause => fromEffect(state.f(failCause$3(cause))),\n              onSuccess: match({\n                onLeft: done => fromEffect(state.f(succeed$3(done))),\n                onRight: elem => flatMap(write(elem), () => go(RightDone(state.f)))\n              })\n            })));\n          }\n      }\n    };\n    return pipe(fromEffect(zipWith(forkDaemon(pullL), forkDaemon(pullR), (left, right) => BothRunning(left, right))), flatMap(go), embedInput(input));\n  });\n})));\n\n/** @internal */\nconst never = /*#__PURE__*/fromEffect(never$1);\n\n/** @internal */\nconst orDie = /*#__PURE__*/dual(2, (self, error) => orDieWith(self, error));\n\n/** @internal */\nconst orDieWith = /*#__PURE__*/dual(2, (self, f) => catchAll(self, e => {\n  throw f(e);\n}));\n\n/** @internal */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => catchAll(self, that));\n\n/** @internal */\nconst pipeToOrFail = /*#__PURE__*/dual(2, (self, that) => suspend(() => {\n  let channelException = undefined;\n  const reader = readWith({\n    onInput: outElem => flatMap(write(outElem), () => reader),\n    onFailure: outErr => {\n      channelException = ChannelException(outErr);\n      return failCause(die(channelException));\n    },\n    onDone: succeedNow\n  });\n  const writer = readWithCause({\n    onInput: outElem => pipe(write(outElem), flatMap(() => writer)),\n    onFailure: cause => isDieType(cause) && isChannelException(cause.defect) && equals(cause.defect, channelException) ? fail(cause.defect.error) : failCause(cause),\n    onDone: succeedNow\n  });\n  return pipeTo(pipeTo(pipeTo(self, reader), that), writer);\n}));\n\n/** @internal */\nconst provideService = /*#__PURE__*/dual(3, (self, tag, service) => {\n  return flatMap(context(), context => provideContext(self, add(context, tag, service)));\n});\n\n/** @internal */\nconst provideLayer = /*#__PURE__*/dual(2, (self, layer) => unwrapScoped(map$1(build(layer), env => provideContext(self, env))));\n\n/** @internal */\nconst mapInputContext = /*#__PURE__*/dual(2, (self, f) => contextWithChannel(context => provideContext(self, f(context))));\n\n/** @internal */\nconst provideSomeLayer = /*#__PURE__*/dual(2, (self, layer) =>\n// @ts-expect-error\nprovideLayer(self, merge(context$2(), layer)));\n\n/** @internal */\nconst read = () => readOrFail(none());\n\n/** @internal */\nconst repeated = self => flatMap(self, () => repeated(self));\n\n/** @internal */\nconst run = self => scoped$1(runScoped(self));\n\n/** @internal */\nconst runCollect = self => run$1(collectElements(self));\n\n/** @internal */\nconst runDrain = self => run$1(drain(self));\n\n/** @internal */\nconst scoped = effect => unwrap(uninterruptibleMask(restore => map$1(make$3(), scope => acquireReleaseOut(tapErrorCause(restore(extend(scope)(effect)), cause => close(scope, failCause$3(cause))), (_, exit) => close(scope, exit)))));\n\n/** @internal */\nconst toPubSub = pubsub => toQueue(pubsub);\n\n/** @internal */\nconst toPull = self => map$1(acquireRelease(sync$1(() => new ChannelExecutor(self, void 0, identity)), (exec, exit) => {\n  const finalize = exec.close(exit);\n  return finalize === undefined ? unit : finalize;\n}), exec => suspend$1(() => interpretToPull(exec.run(), exec)));\n\n/** @internal */\nconst interpretToPull = (channelState, exec) => {\n  const state = channelState;\n  switch (state._tag) {\n    case OP_DONE:\n      {\n        return match$2(exec.getDone(), {\n          onFailure: failCause$1,\n          onSuccess: done => succeed$1(left(done))\n        });\n      }\n    case OP_EMIT:\n      {\n        return succeed$1(right(exec.getEmit()));\n      }\n    case OP_FROM_EFFECT:\n      {\n        return pipe(state.effect, flatMap$1(() => interpretToPull(exec.run(), exec)));\n      }\n    case OP_READ:\n      {\n        return readUpstream(state, () => interpretToPull(exec.run(), exec), cause => failCause$1(cause));\n      }\n  }\n};\n\n/** @internal */\nconst toQueue = queue => suspend(() => toQueueInternal(queue));\n\n/** @internal */\nconst toQueueInternal = queue => {\n  return readWithCause({\n    onInput: elem => flatMap(fromEffect(offer(queue, right(elem))), () => toQueueInternal(queue)),\n    onFailure: cause => fromEffect(pipe(offer(queue, left(failCause$3(cause))))),\n    onDone: done => fromEffect(pipe(offer(queue, left(succeed$3(done)))))\n  });\n};\n\n/** @internal */\nconst unwrap = channel => flatten(fromEffect(channel));\n\n/** @internal */\nconst unwrapScoped = self => concatAllWith(scoped(self), (d, _) => d, (d, _) => d);\n\n/** @internal */\nconst updateService = /*#__PURE__*/dual(3, (self, tag, f) => mapInputContext(self, context => merge$1(context, make$4(tag, f(unsafeGet(context, tag))))));\n\n/** @internal */\nconst withSpan = /*#__PURE__*/dual(3, (self, name, options) => unwrapScoped(flatMap$1(context$1(), context => map$1(makeSpanScoped(name, options), span => provideContext(self, add(context, spanTag, span))))));\n\n/** @internal */\nconst writeAll = (...outs) => writeChunk(fromIterable(outs));\n\n/** @internal */\nconst writeChunk = outs => writeChunkWriter(0, outs.length, outs);\n\n/** @internal */\nconst writeChunkWriter = (idx, len, chunk) => {\n  return idx === len ? unit$1 : pipe(write(pipe(chunk, unsafeGet$1(idx))), flatMap(() => writeChunkWriter(idx + 1, len, chunk)));\n};\n\n/** @internal */\nconst zip = /*#__PURE__*/dual(args => isChannel(args[1]), (self, that, options) => options?.concurrent ? mergeWith(self, {\n  other: that,\n  onSelfDone: exit1 => Await(exit2 => suspend$1(() => zip$2(exit1, exit2))),\n  onOtherDone: exit2 => Await(exit1 => suspend$1(() => zip$2(exit1, exit2)))\n}) : flatMap(self, a => map(that, b => [a, b])));\n\n/** @internal */\nconst zipLeft = /*#__PURE__*/dual(args => isChannel(args[1]), (self, that, options) => options?.concurrent ? map(zip(self, that, {\n  concurrent: true\n}), tuple => tuple[0]) : flatMap(self, z => as(that, z)));\n\n/** @internal */\nconst zipRight = /*#__PURE__*/dual(args => isChannel(args[1]), (self, that, options) => options?.concurrent ? map(zip(self, that, {\n  concurrent: true\n}), tuple => tuple[1]) : flatMap(self, () => that));\n\n/** @internal */\nconst ChannelExceptionTypeId = /*#__PURE__*/Symbol.for(\"effect/Channel/ChannelException\");\n\n/** @internal */\nconst ChannelException = error => ({\n  _tag: \"ChannelException\",\n  [ChannelExceptionTypeId]: ChannelExceptionTypeId,\n  error\n});\n\n/** @internal */\nconst isChannelException = u => hasProperty(u, ChannelExceptionTypeId);\n\nexport { ChannelException, ChannelExceptionTypeId, acquireUseRelease, as, asUnit, buffer, bufferChunk, catchAll, collect, concatMap, concatOut, context, contextWith, contextWithChannel, contextWithEffect, doneCollect, drain, emitCollect, ensuring, flatten, foldChannel, fromEither, fromInput, fromOption, fromPubSub, fromPubSubScoped, fromQueue, identityChannel, interruptWhen, interruptWhenDeferred, isChannelException, map, mapEffect, mapError, mapErrorCause, mapInput, mapInputContext, mapInputEffect, mapInputError, mapInputErrorEffect, mapInputIn, mapInputInEffect, mapOut, mapOutEffect, mapOutEffectPar, mergeAll, mergeAllUnbounded, mergeAllUnboundedWith, mergeAllWith, mergeMap, mergeOut, mergeOutWith, mergeWith, never, orDie, orDieWith, orElse, pipeToOrFail, provideLayer, provideService, provideSomeLayer, read, repeated, run, runCollect, runDrain, scoped, toPubSub, toPull, toQueue, unwrap, unwrapScoped, updateService, withSpan, writeAll, writeChunk, zip, zipLeft, zipRight };\n","import { die as die$1, RuntimeException } from '../Cause/dist/effect-Cause.esm.js';\nimport { appendAll, splitAt, isEmpty, empty, append, toReadonlyArray, unsafeFromArray, drop as drop$1, flatten, map as map$3, dropWhile as dropWhile$1, filter, isNonEmpty, unsafeGet as unsafeGet$1, of, last as last$1, reduce } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { currentTimeMillis } from '../Clock/dist/effect-Clock.esm.js';\nimport { millis } from '../Duration/dist/effect-Duration.esm.js';\nimport { takeWhile, map as map$1, zip as zip$1, forEach as forEach$1, dropUntil as dropUntil$1, dropWhile as dropWhile$2, contextWith as contextWith$1, filter as filter$1, succeed as succeed$2, flatMap as flatMap$2, dieMessage as dieMessage$1, acquireRelease, never as never$1, gen, suspend as suspend$2, isEffect, failCause as failCause$2, context as context$1 } from '../Effect/dist/effect-Effect.esm.js';\nimport { match as match$1, merge, left, right } from '../Either/dist/effect-Either.esm.js';\nimport { match as match$2 } from '../Exit/dist/effect-Exit.esm.js';\nimport { dual, pipe, constTrue, identity } from '../Function/dist/effect-Function.esm.js';\nimport { empty as empty$1, has, unsafeGet, set } from '../HashMap/dist/effect-HashMap.esm.js';\nimport { empty as empty$2, has as has$1, add } from '../HashSet/dist/effect-HashSet.esm.js';\nimport { some as some$1, none, match, isNone, orElse as orElse$2 } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { bounded } from '../PubSub/dist/effect-PubSub.esm.js';\nimport { shutdown, offerAll } from '../Queue/dist/effect-Queue.esm.js';\nimport { span } from '../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\nimport { make, set as set$1, get } from '../Ref/dist/effect-Ref.esm.js';\nimport { zipRight as zipRight$1, as as as$1, bufferChunk, foldChannel, doneCollect, map as map$2, pipeToOrFail, drain as drain$1, identityChannel, unwrap as unwrap$1, ensuring as ensuring$1, writeChunk, catchAll, unwrapScoped as unwrapScoped$1, mapEffect as mapEffect$1, mapError as mapError$1, mapOut, orElse as orElse$1, fromPubSubScoped, toPubSub, mergeWith } from './channel.esm.js';\nimport { Done, Await } from './channel/mergeDecision.esm.js';\nimport { suspend as suspend$1, readWithCause, failCause as failCause$1, succeed as succeed$1, flatMap as flatMap$1, write, readWith, fail as fail$1, fromEffect as fromEffect$1, pipeTo, collectElements, unit, succeedNow, ensuringWith as ensuringWith$1, failSync as failSync$1, failCauseSync as failCauseSync$1, sync as sync$1, provideContext as provideContext$1 } from './core-stream.esm.js';\n\n/** @internal */\nconst SinkTypeId = /*#__PURE__*/Symbol.for(\"effect/Sink\");\n\n/** @internal */\nconst sinkVariance = {\n  _R: _ => _,\n  _E: _ => _,\n  _In: _ => _,\n  _L: _ => _,\n  _Z: _ => _\n};\n\n/** @internal */\nclass SinkImpl {\n  [SinkTypeId] = sinkVariance;\n  constructor(channel) {\n    this.channel = channel;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst isSink = u => hasProperty(u, SinkTypeId);\n\n/** @internal */\nconst suspend = evaluate => new SinkImpl(suspend$1(() => toChannel(evaluate())));\n\n/** @internal */\nconst as = /*#__PURE__*/dual(2, (self, z) => pipe(self, map(() => z)));\n\n/** @internal */\nconst collectAll = () => new SinkImpl(collectAllLoop(empty()));\n\n/** @internal */\nconst collectAllLoop = acc => readWithCause({\n  onInput: chunk => collectAllLoop(pipe(acc, appendAll(chunk))),\n  onFailure: failCause$1,\n  onDone: () => succeed$1(acc)\n});\n\n/** @internal */\nconst collectAllN = n => suspend(() => fromChannel(collectAllNLoop(n, empty())));\n\n/** @internal */\nconst collectAllNLoop = (n, acc) => readWithCause({\n  onInput: chunk => {\n    const [collected, leftovers] = splitAt(chunk, n);\n    if (collected.length < n) {\n      return collectAllNLoop(n - collected.length, appendAll(acc, collected));\n    }\n    if (isEmpty(leftovers)) {\n      return succeed$1(appendAll(acc, collected));\n    }\n    return flatMap$1(write(leftovers), () => succeed$1(appendAll(acc, collected)));\n  },\n  onFailure: failCause$1,\n  onDone: () => succeed$1(acc)\n});\n\n/** @internal */\nconst collectAllFrom = self => collectAllWhileWith(self, {\n  initial: empty(),\n  while: constTrue,\n  body: (chunk, z) => pipe(chunk, append(z))\n});\n\n/** @internal */\nconst collectAllToMap = (key, merge) => {\n  return pipe(foldLeftChunks(empty$1(), (map, chunk) => pipe(chunk, reduce(map, (map, input) => {\n    const k = key(input);\n    const v = pipe(map, has(k)) ? merge(pipe(map, unsafeGet(k)), input) : input;\n    return pipe(map, set(k, v));\n  }))));\n};\n\n/** @internal */\nconst collectAllToMapN = (n, key, merge) => {\n  return foldWeighted({\n    initial: empty$1(),\n    maxCost: n,\n    cost: (acc, input) => pipe(acc, has(key(input))) ? 0 : 1,\n    body: (acc, input) => {\n      const k = key(input);\n      const v = pipe(acc, has(k)) ? merge(pipe(acc, unsafeGet(k)), input) : input;\n      return pipe(acc, set(k, v));\n    }\n  });\n};\n\n/** @internal */\nconst collectAllToSet = () => foldLeftChunks(empty$2(), (acc, chunk) => pipe(chunk, reduce(acc, (acc, input) => pipe(acc, add(input)))));\n\n/** @internal */\nconst collectAllToSetN = n => foldWeighted({\n  initial: empty$2(),\n  maxCost: n,\n  cost: (acc, input) => has$1(acc, input) ? 0 : 1,\n  body: (acc, input) => add(acc, input)\n});\n\n/** @internal */\nconst collectAllUntil = p => {\n  return pipe(fold([empty(), true], tuple => tuple[1], ([chunk, _], input) => [pipe(chunk, append(input)), !p(input)]), map(tuple => tuple[0]));\n};\n\n/** @internal */\nconst collectAllUntilEffect = p => {\n  return pipe(foldEffect([empty(), true], tuple => tuple[1], ([chunk, _], input) => pipe(p(input), map$1(bool => [pipe(chunk, append(input)), !bool]))), map(tuple => tuple[0]));\n};\n\n/** @internal */\nconst collectAllWhile = predicate => fromChannel(collectAllWhileReader(predicate, empty()));\n\n/** @internal */\nconst collectAllWhileReader = (predicate, done) => readWith({\n  onInput: input => {\n    const [collected, leftovers] = pipe(toReadonlyArray(input), span(predicate));\n    if (leftovers.length === 0) {\n      return collectAllWhileReader(predicate, pipe(done, appendAll(unsafeFromArray(collected))));\n    }\n    return pipe(write(unsafeFromArray(leftovers)), zipRight$1(succeed$1(pipe(done, appendAll(unsafeFromArray(collected))))));\n  },\n  onFailure: fail$1,\n  onDone: () => succeed$1(done)\n});\n\n/** @internal */\nconst collectAllWhileEffect = predicate => fromChannel(collectAllWhileEffectReader(predicate, empty()));\n\n/** @internal */\nconst collectAllWhileEffectReader = (predicate, done) => readWith({\n  onInput: input => pipe(fromEffect$1(pipe(input, takeWhile(predicate), map$1(unsafeFromArray))), flatMap$1(collected => {\n    const leftovers = pipe(input, drop$1(collected.length));\n    if (isEmpty(leftovers)) {\n      return collectAllWhileEffectReader(predicate, pipe(done, appendAll(collected)));\n    }\n    return pipe(write(leftovers), zipRight$1(succeed$1(pipe(done, appendAll(collected)))));\n  })),\n  onFailure: fail$1,\n  onDone: () => succeed$1(done)\n});\n\n/** @internal */\nconst collectAllWhileWith = /*#__PURE__*/dual(2, (self, options) => {\n  const refs = pipe(make(empty()), zip$1(make(false)));\n  const newChannel = pipe(fromEffect$1(refs), flatMap$1(([leftoversRef, upstreamDoneRef]) => {\n    const upstreamMarker = readWith({\n      onInput: input => pipe(write(input), flatMap$1(() => upstreamMarker)),\n      onFailure: fail$1,\n      onDone: done => pipe(fromEffect$1(set$1(upstreamDoneRef, true)), as$1(done))\n    });\n    return pipe(upstreamMarker, pipeTo(bufferChunk(leftoversRef)), pipeTo(collectAllWhileWithLoop(self, leftoversRef, upstreamDoneRef, options.initial, options.while, options.body)));\n  }));\n  return new SinkImpl(newChannel);\n});\n\n/** @internal */\nconst collectAllWhileWithLoop = (self, leftoversRef, upstreamDoneRef, currentResult, p, f) => {\n  return pipe(toChannel(self), doneCollect, foldChannel({\n    onFailure: fail$1,\n    onSuccess: ([leftovers, doneValue]) => p(doneValue) ? pipe(fromEffect$1(set$1(leftoversRef, flatten(leftovers))), flatMap$1(() => pipe(fromEffect$1(get(upstreamDoneRef)), flatMap$1(upstreamDone => {\n      const accumulatedResult = f(currentResult, doneValue);\n      return upstreamDone ? pipe(write(flatten(leftovers)), as$1(accumulatedResult)) : collectAllWhileWithLoop(self, leftoversRef, upstreamDoneRef, accumulatedResult, p, f);\n    })))) : pipe(write(flatten(leftovers)), as$1(currentResult))\n  }));\n};\n\n/** @internal */\nconst collectLeftover = self => new SinkImpl(pipe(collectElements(toChannel(self)), map$2(([chunks, z]) => [z, flatten(chunks)])));\n\n/** @internal */\nconst mapInput = /*#__PURE__*/dual(2, (self, f) => pipe(self, mapInputChunks(map$3(f))));\n\n/** @internal */\nconst mapInputEffect = /*#__PURE__*/dual(2, (self, f) => mapInputChunksEffect(self, chunk => map$1(forEach$1(chunk, v => f(v)), unsafeFromArray)));\n\n/** @internal */\nconst mapInputChunks = /*#__PURE__*/dual(2, (self, f) => {\n  const loop = readWith({\n    onInput: chunk => pipe(write(f(chunk)), flatMap$1(() => loop)),\n    onFailure: fail$1,\n    onDone: succeed$1\n  });\n  return new SinkImpl(pipe(loop, pipeTo(toChannel(self))));\n});\n\n/** @internal */\nconst mapInputChunksEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const loop = readWith({\n    onInput: chunk => pipe(fromEffect$1(f(chunk)), flatMap$1(write), flatMap$1(() => loop)),\n    onFailure: fail$1,\n    onDone: succeed$1\n  });\n  return new SinkImpl(pipe(loop, pipeToOrFail(toChannel(self))));\n});\n\n/** @internal */\nconst die = defect => failCause(die$1(defect));\n\n/** @internal */\nconst dieMessage = message => failCause(die$1(RuntimeException(message)));\n\n/** @internal */\nconst dieSync = evaluate => failCauseSync(() => die$1(evaluate()));\n\n/** @internal */\nconst dimap = /*#__PURE__*/dual(2, (self, options) => map(mapInput(self, options.onInput), options.onDone));\n\n/** @internal */\nconst dimapEffect = /*#__PURE__*/dual(2, (self, options) => mapEffect(mapInputEffect(self, options.onInput), options.onDone));\n\n/** @internal */\nconst dimapChunks = /*#__PURE__*/dual(2, (self, options) => map(mapInputChunks(self, options.onInput), options.onDone));\n\n/** @internal */\nconst dimapChunksEffect = /*#__PURE__*/dual(2, (self, options) => mapEffect(mapInputChunksEffect(self, options.onInput), options.onDone));\n\n/** @internal */\nconst drain = /*#__PURE__*/new SinkImpl( /*#__PURE__*/drain$1( /*#__PURE__*/identityChannel()));\n\n/** @internal */\nconst drop = n => suspend(() => new SinkImpl(dropLoop(n)));\n\n/** @internal */\nconst dropLoop = n => readWith({\n  onInput: input => {\n    const dropped = pipe(input, drop$1(n));\n    const leftover = Math.max(n - input.length, 0);\n    const more = isEmpty(input) || leftover > 0;\n    if (more) {\n      return dropLoop(leftover);\n    }\n    return pipe(write(dropped), zipRight$1(identityChannel()));\n  },\n  onFailure: fail$1,\n  onDone: () => unit\n});\n\n/** @internal */\nconst dropUntil = predicate => new SinkImpl(pipe(toChannel(dropWhile(input => !predicate(input))), pipeToOrFail(toChannel(drop(1)))));\n\n/** @internal */\nconst dropUntilEffect = predicate => suspend(() => new SinkImpl(dropUntilEffectReader(predicate)));\n\n/** @internal */\nconst dropUntilEffectReader = predicate => readWith({\n  onInput: input => pipe(input, dropUntil$1(predicate), map$1(leftover => {\n    const more = leftover.length === 0;\n    return more ? dropUntilEffectReader(predicate) : pipe(write(unsafeFromArray(leftover)), zipRight$1(identityChannel()));\n  }), unwrap$1),\n  onFailure: fail$1,\n  onDone: () => unit\n});\n\n/** @internal */\nconst dropWhile = predicate => new SinkImpl(dropWhileReader(predicate));\n\n/** @internal */\nconst dropWhileReader = predicate => readWith({\n  onInput: input => {\n    const out = pipe(input, dropWhile$1(predicate));\n    if (isEmpty(out)) {\n      return dropWhileReader(predicate);\n    }\n    return pipe(write(out), zipRight$1(identityChannel()));\n  },\n  onFailure: fail$1,\n  onDone: succeedNow\n});\n\n/** @internal */\nconst dropWhileEffect = predicate => suspend(() => new SinkImpl(dropWhileEffectReader(predicate)));\n\n/** @internal */\nconst dropWhileEffectReader = predicate => readWith({\n  onInput: input => pipe(input, dropWhile$2(predicate), map$1(leftover => {\n    const more = leftover.length === 0;\n    return more ? dropWhileEffectReader(predicate) : pipe(write(unsafeFromArray(leftover)), zipRight$1(identityChannel()));\n  }), unwrap$1),\n  onFailure: fail$1,\n  onDone: () => unit\n});\n\n/** @internal */\nconst ensuring = /*#__PURE__*/dual(2, (self, finalizer) => new SinkImpl(pipe(self, toChannel, ensuring$1(finalizer))));\n\n/** @internal */\nconst ensuringWith = /*#__PURE__*/dual(2, (self, finalizer) => new SinkImpl(pipe(self, toChannel, ensuringWith$1(finalizer))));\n\n/** @internal */\nconst context = () => fromEffect(context$1());\n\n/** @internal */\nconst contextWith = f => pipe(context(), map(f));\n\n/** @internal */\nconst contextWithEffect = f => pipe(context(), mapEffect(f));\n\n/** @internal */\nconst contextWithSink = f => new SinkImpl(unwrap$1(pipe(contextWith$1(context => toChannel(f(context))))));\n\n/** @internal */\nconst every = predicate => fold(true, identity, (acc, input) => acc && predicate(input));\n\n/** @internal */\nconst fail = e => new SinkImpl(fail$1(e));\n\n/** @internal */\nconst failSync = evaluate => new SinkImpl(failSync$1(evaluate));\n\n/** @internal */\nconst failCause = cause => new SinkImpl(failCause$1(cause));\n\n/** @internal */\nconst failCauseSync = evaluate => new SinkImpl(failCauseSync$1(evaluate));\n\n/** @internal */\nconst filterInput = f => {\n  return self => pipe(self, mapInputChunks(filter(f)));\n};\n\n/** @internal */\nconst filterInputEffect = /*#__PURE__*/dual(2, (self, f) => mapInputChunksEffect(self, chunk => map$1(filter$1(chunk, f), unsafeFromArray)));\n\n/** @internal */\nconst findEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const newChannel = pipe(fromEffect$1(pipe(make(empty()), zip$1(make(false)))), flatMap$1(([leftoversRef, upstreamDoneRef]) => {\n    const upstreamMarker = readWith({\n      onInput: input => pipe(write(input), flatMap$1(() => upstreamMarker)),\n      onFailure: fail$1,\n      onDone: done => pipe(fromEffect$1(set$1(upstreamDoneRef, true)), as$1(done))\n    });\n    const loop = foldChannel(collectElements(toChannel(self)), {\n      onFailure: fail$1,\n      onSuccess: ([leftovers, doneValue]) => pipe(fromEffect$1(f(doneValue)), flatMap$1(satisfied => pipe(fromEffect$1(set$1(leftoversRef, flatten(leftovers))), zipRight$1(pipe(fromEffect$1(get(upstreamDoneRef)), flatMap$1(upstreamDone => {\n        if (satisfied) {\n          return pipe(write(flatten(leftovers)), as$1(some$1(doneValue)));\n        }\n        if (upstreamDone) {\n          return pipe(write(flatten(leftovers)), as$1(none()));\n        }\n        return loop;\n      }))))))\n    });\n    return pipe(upstreamMarker, pipeTo(bufferChunk(leftoversRef)), pipeTo(loop));\n  }));\n  return new SinkImpl(newChannel);\n});\n\n/** @internal */\nconst fold = (s, contFn, f) => suspend(() => new SinkImpl(foldReader(s, contFn, f)));\n\n/** @internal */\nconst foldReader = (s, contFn, f) => {\n  if (!contFn(s)) {\n    return succeedNow(s);\n  }\n  return readWith({\n    onInput: input => {\n      const [nextS, leftovers] = foldChunkSplit(s, input, contFn, f, 0, input.length);\n      if (isNonEmpty(leftovers)) {\n        return pipe(write(leftovers), as$1(nextS));\n      }\n      return foldReader(nextS, contFn, f);\n    },\n    onFailure: fail$1,\n    onDone: () => succeedNow(s)\n  });\n};\n\n/** @internal */\nconst foldChunkSplit = (s, chunk, contFn, f, index, length) => {\n  if (index === length) {\n    return [s, empty()];\n  }\n  const s1 = f(s, pipe(chunk, unsafeGet$1(index)));\n  if (contFn(s1)) {\n    return foldChunkSplit(s1, chunk, contFn, f, index + 1, length);\n  }\n  return [s1, pipe(chunk, drop$1(index + 1))];\n};\n\n/** @internal */\nconst foldSink = /*#__PURE__*/dual(2, (self, options) => {\n  const newChannel = pipe(toChannel(self), collectElements, foldChannel({\n    onFailure: error => toChannel(options.onFailure(error)),\n    onSuccess: ([leftovers, z]) => suspend$1(() => {\n      const leftoversRef = {\n        ref: pipe(leftovers, filter(isNonEmpty))\n      };\n      const refReader = pipe(sync$1(() => {\n        const ref = leftoversRef.ref;\n        leftoversRef.ref = empty();\n        return ref;\n      }),\n      // This cast is safe because of the L1 >: L <: In1 bound. It follows that\n      // L <: In1 and therefore Chunk[L] can be safely cast to Chunk[In1].\n      flatMap$1(chunk => writeChunk(chunk)));\n      const passthrough = identityChannel();\n      const continuationSink = pipe(refReader, zipRight$1(passthrough), pipeTo(toChannel(options.onSuccess(z))));\n      return flatMap$1(collectElements(continuationSink), ([newLeftovers, z1]) => pipe(succeed$1(leftoversRef.ref), flatMap$1(writeChunk), zipRight$1(writeChunk(newLeftovers)), as$1(z1)));\n    })\n  }));\n  return new SinkImpl(newChannel);\n});\n\n/** @internal */\nconst foldChunks = (s, contFn, f) => suspend(() => new SinkImpl(foldChunksReader(s, contFn, f)));\n\n/** @internal */\nconst foldChunksReader = (s, contFn, f) => {\n  if (!contFn(s)) {\n    return succeedNow(s);\n  }\n  return readWith({\n    onInput: input => foldChunksReader(f(s, input), contFn, f),\n    onFailure: fail$1,\n    onDone: () => succeedNow(s)\n  });\n};\n\n/** @internal */\nconst foldChunksEffect = (s, contFn, f) => suspend(() => new SinkImpl(foldChunksEffectReader(s, contFn, f)));\n\n/** @internal */\nconst foldChunksEffectReader = (s, contFn, f) => {\n  if (!contFn(s)) {\n    return succeedNow(s);\n  }\n  return readWith({\n    onInput: input => pipe(fromEffect$1(f(s, input)), flatMap$1(s => foldChunksEffectReader(s, contFn, f))),\n    onFailure: fail$1,\n    onDone: () => succeedNow(s)\n  });\n};\n\n/** @internal */\nconst foldEffect = (s, contFn, f) => suspend(() => new SinkImpl(foldEffectReader(s, contFn, f)));\n\n/** @internal */\nconst foldEffectReader = (s, contFn, f) => {\n  if (!contFn(s)) {\n    return succeedNow(s);\n  }\n  return readWith({\n    onInput: input => pipe(fromEffect$1(foldChunkSplitEffect(s, input, contFn, f)), flatMap$1(([nextS, leftovers]) => pipe(leftovers, match({\n      onNone: () => foldEffectReader(nextS, contFn, f),\n      onSome: leftover => pipe(write(leftover), as$1(nextS))\n    })))),\n    onFailure: fail$1,\n    onDone: () => succeedNow(s)\n  });\n};\n\n/** @internal */\nconst foldChunkSplitEffect = (s, chunk, contFn, f) => foldChunkSplitEffectInternal(s, chunk, 0, chunk.length, contFn, f);\n\n/** @internal */\nconst foldChunkSplitEffectInternal = (s, chunk, index, length, contFn, f) => {\n  if (index === length) {\n    return succeed$2([s, none()]);\n  }\n  return pipe(f(s, pipe(chunk, unsafeGet$1(index))), flatMap$2(s1 => contFn(s1) ? foldChunkSplitEffectInternal(s1, chunk, index + 1, length, contFn, f) : succeed$2([s1, some$1(pipe(chunk, drop$1(index + 1)))])));\n};\n\n/** @internal */\nconst foldLeft = (s, f) => ignoreLeftover(fold(s, constTrue, f));\n\n/** @internal */\nconst foldLeftChunks = (s, f) => foldChunks(s, constTrue, f);\n\n/** @internal */\nconst foldLeftChunksEffect = (s, f) => ignoreLeftover(foldChunksEffect(s, constTrue, f));\n\n/** @internal */\nconst foldLeftEffect = (s, f) => foldEffect(s, constTrue, f);\n\n/** @internal */\nconst foldUntil = (s, max, f) => pipe(fold([s, 0], tuple => tuple[1] < max, ([output, count], input) => [f(output, input), count + 1]), map(tuple => tuple[0]));\n\n/** @internal */\nconst foldUntilEffect = (s, max, f) => pipe(foldEffect([s, 0], tuple => tuple[1] < max, ([output, count], input) => pipe(f(output, input), map$1(s => [s, count + 1]))), map(tuple => tuple[0]));\n\n/** @internal */\nconst foldWeighted = options => foldWeightedDecompose({\n  ...options,\n  decompose: of\n});\n\n/** @internal */\nconst foldWeightedDecompose = options => suspend(() => new SinkImpl(foldWeightedDecomposeLoop(options.initial, 0, false, options.maxCost, options.cost, options.decompose, options.body)));\n\n/** @internal */\nconst foldWeightedDecomposeLoop = (s, cost, dirty, max, costFn, decompose, f) => readWith({\n  onInput: input => {\n    const [nextS, nextCost, nextDirty, leftovers] = foldWeightedDecomposeFold(input, 0, s, cost, dirty, max, costFn, decompose, f);\n    if (isNonEmpty(leftovers)) {\n      return pipe(write(leftovers), zipRight$1(succeedNow(nextS)));\n    }\n    if (cost > max) {\n      return succeedNow(nextS);\n    }\n    return foldWeightedDecomposeLoop(nextS, nextCost, nextDirty, max, costFn, decompose, f);\n  },\n  onFailure: fail$1,\n  onDone: () => succeedNow(s)\n});\n\n/** @internal */\nconst foldWeightedDecomposeFold = (input, index, s, cost, dirty, max, costFn, decompose, f) => {\n  if (index === input.length) {\n    return [s, cost, dirty, empty()];\n  }\n  const elem = pipe(input, unsafeGet$1(index));\n  const total = cost + costFn(s, elem);\n  if (total <= max) {\n    return foldWeightedDecomposeFold(input, index + 1, f(s, elem), total, true, max, costFn, decompose, f);\n  }\n  const decomposed = decompose(elem);\n  if (decomposed.length <= 1 && !dirty) {\n    // If `elem` cannot be decomposed, we need to cross the `max` threshold. To\n    // minimize \"injury\", we only allow this when we haven't added anything else\n    // to the aggregate (dirty = false).\n    return [f(s, elem), total, true, pipe(input, drop$1(index + 1))];\n  }\n  if (decomposed.length <= 1 && dirty) {\n    // If the state is dirty and `elem` cannot be decomposed, we stop folding\n    // and include `elem` in the leftovers.\n    return [s, cost, dirty, pipe(input, drop$1(index))];\n  }\n  // `elem` got decomposed, so we will recurse with the decomposed elements pushed\n  // into the chunk we're processing and see if we can aggregate further.\n  const next = pipe(decomposed, appendAll(pipe(input, drop$1(index + 1))));\n  return foldWeightedDecomposeFold(next, 0, s, cost, dirty, max, costFn, decompose, f);\n};\n\n/** @internal */\nconst foldWeightedDecomposeEffect = options => suspend(() => new SinkImpl(foldWeightedDecomposeEffectLoop(options.initial, options.maxCost, options.cost, options.decompose, options.body, 0, false)));\n\n/** @internal */\nconst foldWeightedEffect = options => foldWeightedDecomposeEffect({\n  ...options,\n  decompose: input => succeed$2(of(input))\n});\n\n/** @internal */\nconst foldWeightedDecomposeEffectLoop = (s, max, costFn, decompose, f, cost, dirty) => readWith({\n  onInput: input => pipe(fromEffect$1(foldWeightedDecomposeEffectFold(s, max, costFn, decompose, f, input, dirty, cost, 0)), flatMap$1(([nextS, nextCost, nextDirty, leftovers]) => {\n    if (isNonEmpty(leftovers)) {\n      return pipe(write(leftovers), zipRight$1(succeedNow(nextS)));\n    }\n    if (cost > max) {\n      return succeedNow(nextS);\n    }\n    return foldWeightedDecomposeEffectLoop(nextS, max, costFn, decompose, f, nextCost, nextDirty);\n  })),\n  onFailure: fail$1,\n  onDone: () => succeedNow(s)\n});\n\n/** @internal */\nconst foldWeightedDecomposeEffectFold = (s, max, costFn, decompose, f, input, dirty, cost, index) => {\n  if (index === input.length) {\n    return succeed$2([s, cost, dirty, empty()]);\n  }\n  const elem = pipe(input, unsafeGet$1(index));\n  return pipe(costFn(s, elem), map$1(newCost => cost + newCost), flatMap$2(total => {\n    if (total <= max) {\n      return pipe(f(s, elem), flatMap$2(s => foldWeightedDecomposeEffectFold(s, max, costFn, decompose, f, input, true, total, index + 1)));\n    }\n    return pipe(decompose(elem), flatMap$2(decomposed => {\n      if (decomposed.length <= 1 && !dirty) {\n        // If `elem` cannot be decomposed, we need to cross the `max` threshold. To\n        // minimize \"injury\", we only allow this when we haven't added anything else\n        // to the aggregate (dirty = false).\n        return pipe(f(s, elem), map$1(s => [s, total, true, pipe(input, drop$1(index + 1))]));\n      }\n      if (decomposed.length <= 1 && dirty) {\n        // If the state is dirty and `elem` cannot be decomposed, we stop folding\n        // and include `elem` in th leftovers.\n        return succeed$2([s, cost, dirty, pipe(input, drop$1(index))]);\n      }\n      // `elem` got decomposed, so we will recurse with the decomposed elements pushed\n      // into the chunk we're processing and see if we can aggregate further.\n      const next = pipe(decomposed, appendAll(pipe(input, drop$1(index + 1))));\n      return foldWeightedDecomposeEffectFold(s, max, costFn, decompose, f, next, dirty, cost, 0);\n    }));\n  }));\n};\n\n/** @internal */\nconst flatMap = /*#__PURE__*/dual(2, (self, f) => foldSink(self, {\n  onFailure: fail,\n  onSuccess: f\n}));\n\n/** @internal */\nconst forEach = f => {\n  const process = readWithCause({\n    onInput: input => pipe(fromEffect$1(forEach$1(input, v => f(v), {\n      discard: true\n    })), flatMap$1(() => process)),\n    onFailure: failCause$1,\n    onDone: () => unit\n  });\n  return new SinkImpl(process);\n};\n\n/** @internal */\nconst forEachChunk = f => {\n  const process = readWithCause({\n    onInput: input => pipe(fromEffect$1(f(input)), flatMap$1(() => process)),\n    onFailure: failCause$1,\n    onDone: () => unit\n  });\n  return new SinkImpl(process);\n};\n\n/** @internal */\nconst forEachWhile = f => {\n  const process = readWithCause({\n    onInput: input => forEachWhileReader(f, input, 0, input.length, process),\n    onFailure: failCause$1,\n    onDone: () => unit\n  });\n  return new SinkImpl(process);\n};\n\n/** @internal */\nconst forEachWhileReader = (f, input, index, length, cont) => {\n  if (index === length) {\n    return cont;\n  }\n  return pipe(fromEffect$1(f(pipe(input, unsafeGet$1(index)))), flatMap$1(bool => bool ? forEachWhileReader(f, input, index + 1, length, cont) : write(pipe(input, drop$1(index)))), catchAll(error => pipe(write(pipe(input, drop$1(index))), zipRight$1(fail$1(error)))));\n};\n\n/** @internal */\nconst forEachChunkWhile = f => {\n  const reader = readWith({\n    onInput: input => pipe(fromEffect$1(f(input)), flatMap$1(cont => cont ? reader : unit)),\n    onFailure: fail$1,\n    onDone: () => unit\n  });\n  return new SinkImpl(reader);\n};\n\n/** @internal */\nconst fromChannel = channel => new SinkImpl(channel);\n\n/** @internal */\nconst fromEffect = effect => new SinkImpl(fromEffect$1(effect));\n\n/** @internal */\nconst fromPubSub = (pubsub, options) => fromQueue(pubsub, options);\n\n/** @internal */\nconst fromPush = push => new SinkImpl(unwrapScoped$1(pipe(push, map$1(fromPushPull))));\nconst fromPushPull = push => readWith({\n  onInput: input => foldChannel(fromEffect$1(push(some$1(input))), {\n    onFailure: ([either, leftovers]) => match$1(either, {\n      onLeft: error => pipe(write(leftovers), zipRight$1(fail$1(error))),\n      onRight: z => pipe(write(leftovers), zipRight$1(succeedNow(z)))\n    }),\n    onSuccess: () => fromPushPull(push)\n  }),\n  onFailure: fail$1,\n  onDone: () => foldChannel(fromEffect$1(push(none())), {\n    onFailure: ([either, leftovers]) => match$1(either, {\n      onLeft: error => pipe(write(leftovers), zipRight$1(fail$1(error))),\n      onRight: z => pipe(write(leftovers), zipRight$1(succeedNow(z)))\n    }),\n    onSuccess: () => fromEffect$1(dieMessage$1(\"BUG: Sink.fromPush - please report an issue at https://github.com/Effect-TS/stream/issues\"))\n  })\n});\n\n/** @internal */\nconst fromQueue = (queue, options) => options?.shutdown ? unwrapScoped(map$1(acquireRelease(succeed$2(queue), shutdown), fromQueue)) : forEachChunk(input => pipe(offerAll(queue, input)));\n\n/** @internal */\nconst head = () => fold(none(), isNone, (option, input) => match(option, {\n  onNone: () => some$1(input),\n  onSome: () => option\n}));\n\n/** @internal */\nconst ignoreLeftover = self => new SinkImpl(drain$1(toChannel(self)));\n\n/** @internal */\nconst last = () => foldLeftChunks(none(), (s, input) => orElse$2(last$1(input), () => s));\n\n/** @internal */\nconst leftover = chunk => new SinkImpl(suspend$1(() => write(chunk)));\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => {\n  return new SinkImpl(pipe(toChannel(self), map$2(f)));\n});\n\n/** @internal */\nconst mapEffect = /*#__PURE__*/dual(2, (self, f) => new SinkImpl(pipe(toChannel(self), mapEffect$1(f))));\n\n/** @internal */\nconst mapError = /*#__PURE__*/dual(2, (self, f) => new SinkImpl(pipe(toChannel(self), mapError$1(f))));\n\n/** @internal */\nconst mapLeftover = /*#__PURE__*/dual(2, (self, f) => new SinkImpl(pipe(toChannel(self), mapOut(map$3(f)))));\n\n/** @internal */\nconst never = /*#__PURE__*/fromEffect(never$1);\n\n/** @internal */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => new SinkImpl(pipe(toChannel(self), orElse$1(() => toChannel(that())))));\n\n/** @internal */\nconst provideContext = /*#__PURE__*/dual(2, (self, context) => new SinkImpl(pipe(toChannel(self), provideContext$1(context))));\n\n/** @internal */\nconst race = /*#__PURE__*/dual(2, (self, that) => pipe(self, raceBoth(that), map(merge)));\n\n/** @internal */\nconst raceBoth = /*#__PURE__*/dual(args => isSink(args[1]), (self, that, options) => raceWith(self, {\n  other: that,\n  onSelfDone: selfDone => Done(map$1(selfDone, left)),\n  onOtherDone: thatDone => Done(map$1(thatDone, right)),\n  capacity: options?.capacity ?? 16\n}));\n\n/** @internal */\nconst raceWith = /*#__PURE__*/dual(2, (self, options) => {\n  const scoped = gen(function* ($) {\n    const pubsub = yield* $(bounded(options?.capacity ?? 16));\n    const channel1 = yield* $(fromPubSubScoped(pubsub));\n    const channel2 = yield* $(fromPubSubScoped(pubsub));\n    const reader = toPubSub(pubsub);\n    const writer = pipe(channel1, pipeTo(toChannel(self)), mergeWith({\n      other: pipe(channel2, pipeTo(toChannel(options.other))),\n      onSelfDone: options.onSelfDone,\n      onOtherDone: options.onOtherDone\n    }));\n    const racedChannel = mergeWith(reader, {\n      other: writer,\n      onSelfDone: _ => Await(exit => suspend$2(() => exit)),\n      onOtherDone: done => Done(suspend$2(() => done))\n    });\n    return new SinkImpl(racedChannel);\n  });\n  return unwrapScoped(scoped);\n});\n\n/** @internal */\nconst refineOrDie = /*#__PURE__*/dual(2, (self, pf) => pipe(self, refineOrDieWith(pf, identity)));\n\n/** @internal */\nconst refineOrDieWith = /*#__PURE__*/dual(3, (self, pf, f) => {\n  const newChannel = pipe(self, toChannel, catchAll(error => match(pf(error), {\n    onNone: () => failCauseSync$1(() => die$1(f(error))),\n    onSome: fail$1\n  })));\n  return new SinkImpl(newChannel);\n});\n\n/** @internal */\nconst some = predicate => fold(false, bool => !bool, (acc, input) => acc || predicate(input));\n\n/** @internal */\nconst splitWhere = /*#__PURE__*/dual(2, (self, f) => {\n  const newChannel = pipe(fromEffect$1(make(empty())), flatMap$1(ref => pipe(splitWhereSplitter(false, ref, f), pipeToOrFail(toChannel(self)), collectElements, flatMap$1(([leftovers, z]) => pipe(fromEffect$1(get(ref)), flatMap$1(leftover => pipe(write(pipe(leftover, appendAll(flatten(leftovers)))), zipRight$1(succeed$1(z)))))))));\n  return new SinkImpl(newChannel);\n});\n\n/** @internal */\nconst splitWhereSplitter = (written, leftovers, f) => readWithCause({\n  onInput: input => {\n    if (isEmpty(input)) {\n      return splitWhereSplitter(written, leftovers, f);\n    }\n    if (written) {\n      const index = indexWhere(input, f);\n      if (index === -1) {\n        return zipRight$1(write(input), splitWhereSplitter(true, leftovers, f));\n      }\n      const [left, right] = splitAt(input, index);\n      return zipRight$1(write(left), fromEffect$1(set$1(leftovers, right)));\n    }\n    const index = indexWhere(input, f, 1);\n    if (index === -1) {\n      return zipRight$1(write(input), splitWhereSplitter(true, leftovers, f));\n    }\n    const [left, right] = pipe(input, splitAt(Math.max(index, 1)));\n    return zipRight$1(write(left), fromEffect$1(set$1(leftovers, right)));\n  },\n  onFailure: failCause$1,\n  onDone: succeed$1\n});\n\n/** @internal */\nconst indexWhere = (self, predicate, from = 0) => {\n  const iterator = self[Symbol.iterator]();\n  let index = 0;\n  let result = -1;\n  let next;\n  while (result < 0 && (next = iterator.next()) && !next.done) {\n    const a = next.value;\n    if (index >= from && predicate(a)) {\n      result = index;\n    }\n    index = index + 1;\n  }\n  return result;\n};\n\n/** @internal */\nconst succeed = z => new SinkImpl(succeed$1(z));\n\n/** @internal */\nconst sum = /*#__PURE__*/foldLeftChunks(0, (acc, chunk) => acc + reduce(chunk, 0, (s, a) => s + a));\n\n/** @internal */\nconst summarized = /*#__PURE__*/dual(3, (self, summary, f) => {\n  const newChannel = pipe(fromEffect$1(summary), flatMap$1(start => pipe(self, toChannel, flatMap$1(done => pipe(fromEffect$1(summary), map$2(end => [done, f(start, end)]))))));\n  return new SinkImpl(newChannel);\n});\n\n/** @internal */\nconst sync = evaluate => new SinkImpl(sync$1(evaluate));\n\n/** @internal */\nconst take = n => pipe(foldChunks(empty(), chunk => chunk.length < n, (acc, chunk) => pipe(acc, appendAll(chunk))), flatMap(acc => {\n  const [taken, leftover] = pipe(acc, splitAt(n));\n  return new SinkImpl(pipe(write(leftover), zipRight$1(succeedNow(taken))));\n}));\n\n/** @internal */\nconst toChannel = self => isEffect(self) ? toChannel(fromEffect(self)) : self.channel;\n\n/** @internal */\nconst unwrap = effect => new SinkImpl(unwrap$1(pipe(effect, map$1(sink => toChannel(sink)))));\n\n/** @internal */\nconst unwrapScoped = effect => {\n  return new SinkImpl(unwrapScoped$1(pipe(effect, map$1(sink => toChannel(sink)))));\n};\n\n/** @internal */\nconst withDuration = self => pipe(self, summarized(currentTimeMillis, (start, end) => millis(end - start)));\n\n/** @internal */\nconst zip = /*#__PURE__*/dual(args => isSink(args[1]), (self, that, options) => zipWith(self, that, (z, z2) => [z, z2], options));\n\n/** @internal */\nconst zipLeft = /*#__PURE__*/dual(args => isSink(args[1]), (self, that, options) => zipWith(self, that, (z, _) => z, options));\n\n/** @internal */\nconst zipRight = /*#__PURE__*/dual(args => isSink(args[1]), (self, that, options) => zipWith(self, that, (_, z2) => z2, options));\n\n/** @internal */\nconst zipWith = /*#__PURE__*/dual(args => isSink(args[1]), (self, that, f, options) => options?.concurrent ? raceWith(self, {\n  other: that,\n  onSelfDone: match$2({\n    onFailure: cause => Done(failCause$2(cause)),\n    onSuccess: leftZ => Await(match$2({\n      onFailure: failCause$2,\n      onSuccess: rightZ => succeed$2(f(leftZ, rightZ))\n    }))\n  }),\n  onOtherDone: match$2({\n    onFailure: cause => Done(failCause$2(cause)),\n    onSuccess: rightZ => Await(match$2({\n      onFailure: failCause$2,\n      onSuccess: leftZ => succeed$2(f(leftZ, rightZ))\n    }))\n  })\n}) : flatMap(self, z => map(that, z2 => f(z, z2))));\n\n// Circular with Channel\n\n/** @internal */\nconst channelToSink = self => new SinkImpl(self);\n\n// Constants\n\n/** @internal */\nconst count = /*#__PURE__*/foldLeftChunks(0, (acc, chunk) => acc + chunk.length);\n\n/** @internal */\nconst mkString = /*#__PURE__*/suspend(() => {\n  const strings = [];\n  return pipe(foldLeftChunks(void 0, (_, elems) => map$3(elems, elem => {\n    strings.push(String(elem));\n  })), map(() => strings.join(\"\")));\n});\n\n/** @internal */\nconst timed = /*#__PURE__*/pipe( /*#__PURE__*/withDuration(drain), /*#__PURE__*/map(tuple => tuple[1]));\n\nexport { SinkImpl, SinkTypeId, as, channelToSink, collectAll, collectAllFrom, collectAllN, collectAllToMap, collectAllToMapN, collectAllToSet, collectAllToSetN, collectAllUntil, collectAllUntilEffect, collectAllWhile, collectAllWhileEffect, collectAllWhileWith, collectLeftover, context, contextWith, contextWithEffect, contextWithSink, count, die, dieMessage, dieSync, dimap, dimapChunks, dimapChunksEffect, dimapEffect, drain, drop, dropUntil, dropUntilEffect, dropWhile, dropWhileEffect, ensuring, ensuringWith, every, fail, failCause, failCauseSync, failSync, filterInput, filterInputEffect, findEffect, flatMap, fold, foldChunks, foldChunksEffect, foldEffect, foldLeft, foldLeftChunks, foldLeftChunksEffect, foldLeftEffect, foldSink, foldUntil, foldUntilEffect, foldWeighted, foldWeightedDecompose, foldWeightedDecomposeEffect, foldWeightedEffect, forEach, forEachChunk, forEachChunkWhile, forEachWhile, fromChannel, fromEffect, fromPubSub, fromPush, fromQueue, head, ignoreLeftover, isSink, last, leftover, map, mapEffect, mapError, mapInput, mapInputChunks, mapInputChunksEffect, mapInputEffect, mapLeftover, mkString, never, orElse, provideContext, race, raceBoth, raceWith, refineOrDie, refineOrDieWith, some, splitWhere, succeed, sum, summarized, suspend, sync, take, timed, toChannel, unwrap, unwrapScoped, withDuration, zip, zipLeft, zipRight, zipWith };\n","import { MergeDecisionTypeId as MergeDecisionTypeId$1, Done as Done$1, Await as Await$1, AwaitConst as AwaitConst$1, isMergeDecision as isMergeDecision$1, match as match$1 } from '../../internal/channel/mergeDecision.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst MergeDecisionTypeId = MergeDecisionTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Done = Done$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Await = Await$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst AwaitConst = AwaitConst$1;\n\n/**\n * Returns `true` if the specified value is a `MergeDecision`, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isMergeDecision = isMergeDecision$1;\n\n/**\n * @since 2.0.0\n * @category folding\n */\nconst match = match$1;\n\nexport { Await, AwaitConst, Done, MergeDecisionTypeId, isMergeDecision, match };\n","import { unsafeFork, unsafeRunSyncExit, unsafeRunSync, unsafeRunCallback, unsafeRunPromise, unsafeRunPromiseExit, defaultRuntime as defaultRuntime$1, defaultRuntimeFlags as defaultRuntimeFlags$1, make as make$1, FiberFailureCauseId as FiberFailureCauseId$1, isAsyncFiberException as isAsyncFiberException$1, isFiberFailure as isFiberFailure$1, fiberFailure } from '../../internal/runtime.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Executes the effect using the provided Scheduler or using the global\n * Scheduler if not provided\n *\n * @since 2.0.0\n * @category execution\n */\nconst runFork = unsafeFork;\n\n/**\n * Executes the effect synchronously returning the exit.\n *\n * This method is effectful and should only be invoked at the edges of your\n * program.\n *\n * @since 2.0.0\n * @category execution\n */\nconst runSyncExit = unsafeRunSyncExit;\n\n/**\n * Executes the effect synchronously throwing in case of errors or async boundaries.\n *\n * This method is effectful and should only be invoked at the edges of your\n * program.\n *\n * @since 2.0.0\n * @category execution\n */\nconst runSync = unsafeRunSync;\n\n/**\n * Executes the effect asynchronously, eventually passing the exit value to\n * the specified callback.\n *\n * This method is effectful and should only be invoked at the edges of your\n * program.\n *\n * @since 2.0.0\n * @category execution\n */\nconst runCallback = unsafeRunCallback;\n\n/**\n * Runs the `Effect`, returning a JavaScript `Promise` that will be resolved\n * with the value of the effect once the effect has been executed, or will be\n * rejected with the first error or exception throw by the effect.\n *\n * This method is effectful and should only be used at the edges of your\n * program.\n *\n * @since 2.0.0\n * @category execution\n */\nconst runPromise = unsafeRunPromise;\n\n/**\n * Runs the `Effect`, returning a JavaScript `Promise` that will be resolved\n * with the `Exit` state of the effect once the effect has been executed.\n *\n * This method is effectful and should only be used at the edges of your\n * program.\n *\n * @since 2.0.0\n * @category execution\n */\nconst runPromiseExit = unsafeRunPromiseExit;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst defaultRuntime = defaultRuntime$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst defaultRuntimeFlags = defaultRuntimeFlags$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst FiberFailureId = /*#__PURE__*/Symbol.for(\"effect/Runtime/FiberFailure\");\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst FiberFailureCauseId = FiberFailureCauseId$1;\n\n/**\n * @since 2.0.0\n * @category exports\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category guards\n */\nconst isAsyncFiberException = isAsyncFiberException$1;\n\n/**\n * @since 2.0.0\n * @category guards\n */\nconst isFiberFailure = isFiberFailure$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst makeFiberFailure = fiberFailure;\n\nexport { FiberFailureCauseId, FiberFailureId, defaultRuntime, defaultRuntimeFlags, isAsyncFiberException, isFiberFailure, make, makeFiberFailure, runCallback, runFork, runPromise, runPromiseExit, runSync, runSyncExit };\n","import { ScheduleTypeId as ScheduleTypeId$1, ScheduleDriverTypeId as ScheduleDriverTypeId$1, makeWithState as makeWithState$1, addDelay as addDelay$1, addDelayEffect as addDelayEffect$1, andThen as andThen$1, andThenEither as andThenEither$1, as as as$1, asUnit as asUnit$1, bothInOut as bothInOut$1, check as check$1, checkEffect as checkEffect$1, collectAllInputs as collectAllInputs$1, collectAllOutputs as collectAllOutputs$1, collectUntil as collectUntil$1, collectUntilEffect as collectUntilEffect$1, collectWhile as collectWhile$1, collectWhileEffect as collectWhileEffect$1, compose as compose$1, mapInput as mapInput$1, mapInputContext as mapInputContext$1, mapInputEffect as mapInputEffect$1, count as count$1, dayOfMonth as dayOfMonth$1, dayOfWeek as dayOfWeek$1, delayed as delayed$1, delayedEffect as delayedEffect$1, delayedSchedule as delayedSchedule$1, delays as delays$1, mapBoth as mapBoth$1, mapBothEffect as mapBothEffect$1, driver as driver$1, duration as duration$1, either as either$1, eitherWith as eitherWith$1, elapsed as elapsed$1, ensuring as ensuring$1, exponential as exponential$1, fibonacci as fibonacci$1, fixed as fixed$1, forever as forever$1, fromDelay as fromDelay$1, fromDelays as fromDelays$1, fromFunction as fromFunction$1, hourOfDay as hourOfDay$1, identity as identity$1, intersect as intersect$1, intersectWith as intersectWith$1, jittered as jittered$1, jitteredWith as jitteredWith$1, linear as linear$1, map as map$1, mapEffect as mapEffect$1, minuteOfHour as minuteOfHour$1, modifyDelay as modifyDelay$1, modifyDelayEffect as modifyDelayEffect$1, onDecision as onDecision$1, once as once$1, passthrough as passthrough$1, provideContext as provideContext$1, provideService as provideService$1, recurUntil as recurUntil$1, recurUntilEffect as recurUntilEffect$1, recurUntilOption as recurUntilOption$1, recurUpTo as recurUpTo$1, recurWhile as recurWhile$1, recurWhileEffect as recurWhileEffect$1, recurs as recurs$1, reduce as reduce$1, reduceEffect as reduceEffect$1, repetitions as repetitions$1, resetAfter as resetAfter$1, resetWhen as resetWhen$1, run as run$1, secondOfMinute as secondOfMinute$1, spaced as spaced$1, stop as stop$1, succeed as succeed$1, sync as sync$1, tapInput as tapInput$1, tapOutput as tapOutput$1, unfold as unfold$1, union as union$1, unionWith as unionWith$1, untilInput as untilInput$1, untilInputEffect as untilInputEffect$1, untilOutput as untilOutput$1, untilOutputEffect as untilOutputEffect$1, upTo as upTo$1, whileInput as whileInput$1, whileInputEffect as whileInputEffect$1, whileOutput as whileOutput$1, whileOutputEffect as whileOutputEffect$1, windowed as windowed$1, zipLeft as zipLeft$1, zipRight as zipRight$1, zipWith as zipWith$1 } from '../../internal/schedule.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst ScheduleTypeId = ScheduleTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst ScheduleDriverTypeId = ScheduleDriverTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * A `Schedule<Env, In, Out>` defines a recurring schedule, which consumes\n * values of type `In`, and which returns values of type `Out`.\n *\n * Schedules are defined as a possibly infinite set of intervals spread out over\n * time. Each interval defines a window in which recurrence is possible.\n *\n * When schedules are used to repeat or retry effects, the starting boundary of\n * each interval produced by a schedule is used as the moment when the effect\n * will be executed again.\n *\n * Schedules compose in the following primary ways:\n *\n * - Union: performs the union of the intervals of two schedules\n * - Intersection: performs the intersection of the intervals of two schedules\n * - Sequence: concatenates the intervals of one schedule onto another\n *\n * In addition, schedule inputs and outputs can be transformed, filtered (to\n * terminate a schedule early in response to some input or output), and so\n * forth.\n *\n * A variety of other operators exist for transforming and combining schedules,\n * and the companion object for `Schedule` contains all common types of\n * schedules, both for performing retrying, as well as performing repetition.\n *\n * @category model\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * Constructs a new `Schedule` with the specified `initial` state and the\n * specified `step` function.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst makeWithState = makeWithState$1;\n\n/**\n * Returns a new schedule with the given delay added to every interval defined\n * by this schedule.\n *\n * @since 2.0.0\n * @category utils\n */\nconst addDelay = addDelay$1;\n\n/**\n * Returns a new schedule with the given effectfully computed delay added to\n * every interval defined by this schedule.\n *\n * @since 2.0.0\n * @category utils\n */\nconst addDelayEffect = addDelayEffect$1;\n\n/**\n * The same as `andThenEither`, but merges the output.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst andThen = andThen$1;\n\n/**\n * Returns a new schedule that first executes this schedule to completion, and\n * then executes the specified schedule to completion.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst andThenEither = andThenEither$1;\n\n/**\n * Returns a new schedule that maps this schedule to a constant output.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst as = as$1;\n\n/**\n * Returns a new schedule that maps the output of this schedule to unit.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst asUnit = asUnit$1;\n\n/**\n * Returns a new schedule that has both the inputs and outputs of this and the\n * specified schedule.\n *\n * @since 2.0.0\n * @category utils\n */\nconst bothInOut = bothInOut$1;\n\n/**\n * Returns a new schedule that passes each input and output of this schedule\n * to the specified function, and then determines whether or not to continue\n * based on the return value of the function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst check = check$1;\n\n/**\n * Returns a new schedule that passes each input and output of this schedule\n * to the specified function, and then determines whether or not to continue\n * based on the return value of the function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst checkEffect = checkEffect$1;\n\n/**\n * A schedule that recurs anywhere, collecting all inputs into a `Chunk`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst collectAllInputs = collectAllInputs$1;\n\n/**\n * Returns a new schedule that collects the outputs of this one into a chunk.\n *\n * @since 2.0.0\n * @category utils\n */\nconst collectAllOutputs = collectAllOutputs$1;\n\n/**\n * A schedule that recurs until the condition f fails, collecting all inputs\n * into a list.\n *\n * @since 2.0.0\n * @category utils\n */\nconst collectUntil = collectUntil$1;\n\n/**\n * A schedule that recurs until the effectful condition f fails, collecting\n * all inputs into a list.\n *\n * @since 2.0.0\n * @category utils\n */\nconst collectUntilEffect = collectUntilEffect$1;\n\n/**\n * A schedule that recurs as long as the condition f holds, collecting all\n * inputs into a list.\n *\n * @since 2.0.0\n * @category utils\n */\nconst collectWhile = collectWhile$1;\n\n/**\n * A schedule that recurs as long as the effectful condition holds, collecting\n * all inputs into a list.\n *\n * @category utils\n * @since 2.0.0\n */\nconst collectWhileEffect = collectWhileEffect$1;\n\n/**\n * Returns the composition of this schedule and the specified schedule, by\n * piping the output of this one into the input of the other. Effects\n * described by this schedule will always be executed before the effects\n * described by the second schedule.\n *\n * @since 2.0.0\n * @category utils\n */\nconst compose = compose$1;\n\n/**\n * Returns a new schedule that deals with a narrower class of inputs than this\n * schedule.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapInput = mapInput$1;\n\n/**\n * Transforms the context being provided to this schedule with the\n * specified function.\n *\n * @since 2.0.0\n * @category context\n */\nconst mapInputContext = mapInputContext$1;\n\n/**\n * Returns a new schedule that deals with a narrower class of inputs than this\n * schedule.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapInputEffect = mapInputEffect$1;\n\n/**\n * A schedule that always recurs, which counts the number of recurrences.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst count = count$1;\n\n/**\n * Cron-like schedule that recurs every specified `day` of month. Won't recur\n * on months containing less days than specified in `day` param.\n *\n * It triggers at zero hour of the day. Producing a count of repeats: 0, 1, 2.\n *\n * NOTE: `day` parameter is validated lazily. Must be in range 1...31.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst dayOfMonth = dayOfMonth$1;\n\n/**\n * Cron-like schedule that recurs every specified `day` of each week. It\n * triggers at zero hour of the week. Producing a count of repeats: 0, 1, 2.\n *\n * NOTE: `day` parameter is validated lazily. Must be in range 1 (Monday)...7\n * (Sunday).\n *\n * @since 2.0.0\n * @category constructors\n */\nconst dayOfWeek = dayOfWeek$1;\n\n/**\n * Returns a new schedule with the specified effectfully computed delay added\n * before the start of each interval produced by this schedule.\n *\n * @since 2.0.0\n * @category utils\n */\nconst delayed = delayed$1;\n\n/**\n * Returns a new schedule with the specified effectfully computed delay added\n * before the start of each interval produced by this schedule.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst delayedEffect = delayedEffect$1;\n\n/**\n * Takes a schedule that produces a delay, and returns a new schedule that\n * uses this delay to further delay intervals in the resulting schedule.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst delayedSchedule = delayedSchedule$1;\n\n/**\n * Returns a new schedule that outputs the delay between each occurence.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst delays = delays$1;\n\n/**\n * Returns a new schedule that maps both the input and output.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapBoth = mapBoth$1;\n\n/**\n * Returns a new schedule that maps both the input and output.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapBothEffect = mapBothEffect$1;\n\n/**\n * Returns a driver that can be used to step the schedule, appropriately\n * handling sleeping.\n *\n * @since 2.0.0\n * @category getter\n */\nconst driver = driver$1;\n\n/**\n * A schedule that can recur one time, the specified amount of time into the\n * future.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst duration = duration$1;\n\n/**\n * Returns a new schedule that performs a geometric union on the intervals\n * defined by both schedules.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst either = either$1;\n\n/**\n * The same as `either` followed by `map`.\n *\n * @since 2.0.0\n * @category alternatives\n */\nconst eitherWith = eitherWith$1;\n\n/**\n * A schedule that occurs everywhere, which returns the total elapsed duration\n * since the first step.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst elapsed = elapsed$1;\n\n/**\n * Returns a new schedule that will run the specified finalizer as soon as the\n * schedule is complete. Note that unlike `Effect.ensuring`, this method does not\n * guarantee the finalizer will be run. The `Schedule` may not initialize or\n * the driver of the schedule may not run to completion. However, if the\n * `Schedule` ever decides not to continue, then the finalizer will be run.\n *\n * @since 2.0.0\n * @category finalization\n */\nconst ensuring = ensuring$1;\n\n/**\n * A schedule that always recurs, but will wait a certain amount between\n * repetitions, given by `base * factor.pow(n)`, where `n` is the number of\n * repetitions so far. Returns the current duration between recurrences.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst exponential = exponential$1;\n\n/**\n * A schedule that always recurs, increasing delays by summing the preceding\n * two delays (similar to the fibonacci sequence). Returns the current\n * duration between recurrences.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fibonacci = fibonacci$1;\n\n/**\n * A schedule that recurs on a fixed interval. Returns the number of\n * repetitions of the schedule so far.\n *\n * If the action run between updates takes longer than the interval, then the\n * action will be run immediately, but re-runs will not \"pile up\".\n *\n * ```\n * |-----interval-----|-----interval-----|-----interval-----|\n * |---------action--------||action|-----|action|-----------|\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fixed = fixed$1;\n\n/**\n * A schedule that always recurs, producing a count of repeats: 0, 1, 2.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst forever = forever$1;\n\n/**\n * A schedule that recurs once with the specified delay.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromDelay = fromDelay$1;\n\n/**\n * A schedule that recurs once for each of the specified durations, delaying\n * each time for the length of the specified duration. Returns the length of\n * the current duration between recurrences.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromDelays = fromDelays$1;\n\n/**\n * A schedule that always recurs, mapping input values through the specified\n * function.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromFunction = fromFunction$1;\n\n/**\n * Cron-like schedule that recurs every specified `hour` of each day. It\n * triggers at zero minute of the hour. Producing a count of repeats: 0, 1, 2.\n *\n * NOTE: `hour` parameter is validated lazily. Must be in range 0...23.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst hourOfDay = hourOfDay$1;\n\n/**\n * A schedule that always recurs, which returns inputs as outputs.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst identity = identity$1;\n\n/**\n * Returns a new schedule that performs a geometric intersection on the\n * intervals defined by both schedules.\n *\n * @since 2.0.0\n * @category utils\n */\nconst intersect = intersect$1;\n\n/**\n * Returns a new schedule that combines this schedule with the specified\n * schedule, continuing as long as both schedules want to continue and merging\n * the next intervals according to the specified merge function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst intersectWith = intersectWith$1;\n\n/**\n * Returns a new schedule that randomly modifies the size of the intervals of\n * this schedule.\n *\n * Defaults `min` to `0.8` and `max` to `1.2`.\n *\n * The new interval size is between `min * old interval size` and `max * old\n * interval size`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst jittered = jittered$1;\n\n/**\n * Returns a new schedule that randomly modifies the size of the intervals of\n * this schedule.\n *\n * The new interval size is between `min * old interval size` and `max * old\n * interval size`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst jitteredWith = jitteredWith$1;\n\n/**\n * A schedule that always recurs, but will repeat on a linear time interval,\n * given by `base * n` where `n` is the number of repetitions so far. Returns\n * the current duration between recurrences.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst linear = linear$1;\n\n/**\n * Returns a new schedule that maps the output of this schedule through the\n * specified function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = map$1;\n\n/**\n * Returns a new schedule that maps the output of this schedule through the\n * specified effectful function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapEffect = mapEffect$1;\n\n/**\n * Cron-like schedule that recurs every specified `minute` of each hour. It\n * triggers at zero second of the minute. Producing a count of repeats: 0, 1,\n * 2.\n *\n * NOTE: `minute` parameter is validated lazily. Must be in range 0...59.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst minuteOfHour = minuteOfHour$1;\n\n/**\n * Returns a new schedule that modifies the delay using the specified\n * function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst modifyDelay = modifyDelay$1;\n\n/**\n * Returns a new schedule that modifies the delay using the specified\n * effectual function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst modifyDelayEffect = modifyDelayEffect$1;\n\n/**\n * Returns a new schedule that applies the current one but runs the specified\n * effect for every decision of this schedule. This can be used to create\n * schedules that log failures, decisions, or computed values.\n *\n * @since 2.0.0\n * @category utils\n */\nconst onDecision = onDecision$1;\n\n/**\n * A schedule that recurs one time.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst once = once$1;\n\n/**\n * Returns a new schedule that passes through the inputs of this schedule.\n *\n * @since 2.0.0\n * @category utils\n */\nconst passthrough = passthrough$1;\n\n/**\n * Returns a new schedule with its context provided to it, so the\n * resulting schedule does not require any context.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideContext = provideContext$1;\n\n/**\n * Returns a new schedule with the single service it requires provided to it.\n * If the schedule requires multiple services use `provideContext`\n * instead.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideService = provideService$1;\n\n/**\n * A schedule that recurs for until the predicate evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst recurUntil = recurUntil$1;\n\n/**\n * A schedule that recurs for until the predicate evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst recurUntilEffect = recurUntilEffect$1;\n\n/**\n * A schedule that recurs for until the input value becomes applicable to\n * partial function and then map that value with given function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst recurUntilOption = recurUntilOption$1;\n\n/**\n * A schedule that recurs during the given duration.\n *\n * @since 2.0.0\n * @category utils\n */\nconst recurUpTo = recurUpTo$1;\n\n/**\n * A schedule that recurs for as long as the predicate evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst recurWhile = recurWhile$1;\n\n/**\n * A schedule that recurs for as long as the effectful predicate evaluates to\n * true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst recurWhileEffect = recurWhileEffect$1;\n\n/**\n * A schedule spanning all time, which can be stepped only the specified\n * number of times before it terminates.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst recurs = recurs$1;\n\n/**\n * Returns a new schedule that folds over the outputs of this one.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduce = reduce$1;\n\n/**\n * Returns a new schedule that effectfully folds over the outputs of this one.\n *\n * @since 2.0.0\n * @category folding\n */\nconst reduceEffect = reduceEffect$1;\n\n/**\n * Returns a new schedule that loops this one continuously, resetting the\n * state when this schedule is done.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst repeatForever = forever$1;\n\n/**\n * Returns a new schedule that outputs the number of repetitions of this one.\n *\n * @since 2.0.0\n * @category utils\n */\nconst repetitions = repetitions$1;\n\n/**\n * Return a new schedule that automatically resets the schedule to its initial\n * state after some time of inactivity defined by `duration`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst resetAfter = resetAfter$1;\n\n/**\n * Resets the schedule when the specified predicate on the schedule output\n * evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst resetWhen = resetWhen$1;\n\n/**\n * Runs a schedule using the provided inputs, and collects all outputs.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst run = run$1;\n\n/**\n * Cron-like schedule that recurs every specified `second` of each minute. It\n * triggers at zero nanosecond of the second. Producing a count of repeats: 0,\n * 1, 2.\n *\n * NOTE: `second` parameter is validated lazily. Must be in range 0...59.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst secondOfMinute = secondOfMinute$1;\n\n/**\n * Returns a schedule that recurs continuously, each repetition spaced the\n * specified duration from the last run.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst spaced = spaced$1;\n\n/**\n * A schedule that does not recur, it just stops.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst stop = stop$1;\n\n/**\n * Returns a schedule that repeats one time, producing the specified constant\n * value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeed = succeed$1;\n\n/**\n * Returns a schedule that repeats one time, producing the specified constant\n * value.\n *\n * @category constructors\n * @since 2.0.0\n */\nconst sync = sync$1;\n\n/**\n * Returns a new schedule that effectfully processes every input to this\n * schedule.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapInput = tapInput$1;\n\n/**\n * Returns a new schedule that effectfully processes every output from this\n * schedule.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapOutput = tapOutput$1;\n\n/**\n * Unfolds a schedule that repeats one time from the specified state and\n * iterator.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unfold = unfold$1;\n\n/**\n * Returns a new schedule that performs a geometric union on the intervals\n * defined by both schedules.\n *\n * @since 2.0.0\n * @category utils\n */\nconst union = union$1;\n\n/**\n * Returns a new schedule that combines this schedule with the specified\n * schedule, continuing as long as either schedule wants to continue and\n * merging the next intervals according to the specified merge function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst unionWith = unionWith$1;\n\n/**\n * Returns a new schedule that continues until the specified predicate on the\n * input evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst untilInput = untilInput$1;\n\n/**\n * Returns a new schedule that continues until the specified effectful\n * predicate on the input evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst untilInputEffect = untilInputEffect$1;\n\n/**\n * Returns a new schedule that continues until the specified predicate on the\n * output evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst untilOutput = untilOutput$1;\n\n/**\n * Returns a new schedule that continues until the specified effectful\n * predicate on the output evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst untilOutputEffect = untilOutputEffect$1;\n\n/**\n * A schedule that recurs during the given duration.\n *\n * @since 2.0.0\n * @category utils\n */\nconst upTo = upTo$1;\n\n/**\n * Returns a new schedule that continues for as long the specified predicate\n * on the input evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst whileInput = whileInput$1;\n\n/**\n * Returns a new schedule that continues for as long the specified effectful\n * predicate on the input evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst whileInputEffect = whileInputEffect$1;\n\n/**\n * Returns a new schedule that continues for as long the specified predicate\n * on the output evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst whileOutput = whileOutput$1;\n\n/**\n * Returns a new schedule that continues for as long the specified effectful\n * predicate on the output evaluates to true.\n *\n * @since 2.0.0\n * @category utils\n */\nconst whileOutputEffect = whileOutputEffect$1;\n\n/**\n * A schedule that divides the timeline to `interval`-long windows, and sleeps\n * until the nearest window boundary every time it recurs.\n *\n * For example, `windowed(Duration.seconds(10))` would produce a schedule as\n * follows:\n *\n * ```\n *      10s        10s        10s       10s\n * |----------|----------|----------|----------|\n * |action------|sleep---|act|-sleep|action----|\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nconst windowed = windowed$1;\n\n/**\n * The same as `intersect` but ignores the right output.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipLeft = zipLeft$1;\n\n/**\n * The same as `intersect` but ignores the left output.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipRight = zipRight$1;\n\n/**\n * Equivalent to `intersect` followed by `map`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWith = zipWith$1;\n\nexport { ScheduleDriverTypeId, ScheduleTypeId, addDelay, addDelayEffect, andThen, andThenEither, as, asUnit, bothInOut, check, checkEffect, collectAllInputs, collectAllOutputs, collectUntil, collectUntilEffect, collectWhile, collectWhileEffect, compose, count, dayOfMonth, dayOfWeek, delayed, delayedEffect, delayedSchedule, delays, driver, duration, either, eitherWith, elapsed, ensuring, exponential, fibonacci, fixed, forever, fromDelay, fromDelays, fromFunction, hourOfDay, identity, intersect, intersectWith, jittered, jitteredWith, linear, makeWithState, map, mapBoth, mapBothEffect, mapEffect, mapInput, mapInputContext, mapInputEffect, minuteOfHour, modifyDelay, modifyDelayEffect, onDecision, once, passthrough, provideContext, provideService, recurUntil, recurUntilEffect, recurUntilOption, recurUpTo, recurWhile, recurWhileEffect, recurs, reduce, reduceEffect, repeatForever, repetitions, resetAfter, resetWhen, run, secondOfMinute, spaced, stop, succeed, sync, tapInput, tapOutput, unfold, union, unionWith, untilInput, untilInputEffect, untilOutput, untilOutputEffect, upTo, whileInput, whileInputEffect, whileOutput, whileOutputEffect, windowed, zipLeft, zipRight, zipWith };\n","/** @internal */\nconst OP_LEFT = \"Left\";\n\n/** @internal */\n\n/** @internal */\nconst OP_RIGHT = \"Right\";\n\n/** @internal */\n\n/** @internal */\nconst OP_BOTH = \"Both\";\n\n/** @internal */\n\n/** @internal */\nconst OP_EITHER = \"Either\";\n\n/** @internal */\n\nexport { OP_BOTH, OP_EITHER, OP_LEFT, OP_RIGHT };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { OP_LEFT, OP_RIGHT, OP_BOTH, OP_EITHER } from '../opCodes/streamHaltStrategy.esm.js';\n\n/** @internal */\nconst Left = {\n  _tag: OP_LEFT\n};\n\n/** @internal */\nconst Right = {\n  _tag: OP_RIGHT\n};\n\n/** @internal */\nconst Both = {\n  _tag: OP_BOTH\n};\n\n/** @internal */\nconst Either = {\n  _tag: OP_EITHER\n};\n\n/** @internal */\nconst fromInput = input => {\n  switch (input) {\n    case \"left\":\n      return Left;\n    case \"right\":\n      return Right;\n    case \"both\":\n      return Both;\n    case \"either\":\n      return Either;\n    default:\n      return input;\n  }\n};\n\n/** @internal */\nconst isLeft = self => self._tag === OP_LEFT;\n\n/** @internal */\nconst isRight = self => self._tag === OP_RIGHT;\n\n/** @internal */\nconst isBoth = self => self._tag === OP_BOTH;\n\n/** @internal */\nconst isEither = self => self._tag === OP_EITHER;\n\n/** @internal */\nconst match = /*#__PURE__*/dual(5, (self, onLeft, onRight, onBoth, onEither) => {\n  switch (self._tag) {\n    case OP_LEFT:\n      {\n        return onLeft();\n      }\n    case OP_RIGHT:\n      {\n        return onRight();\n      }\n    case OP_BOTH:\n      {\n        return onBoth();\n      }\n    case OP_EITHER:\n      {\n        return onEither();\n      }\n  }\n});\n\nexport { Both, Either, Left, Right, fromInput, isBoth, isEither, isLeft, isRight, match };\n","import { Left as Left$1, Right as Right$1, Both as Both$1, Either as Either$1, fromInput as fromInput$1, isLeft as isLeft$1, isRight as isRight$1, isBoth as isBoth$1, isEither as isEither$1, match as match$1 } from '../../internal/stream/haltStrategy.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Left = Left$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Right = Right$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Both = Both$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Either = Either$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst fromInput = fromInput$1;\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isLeft = isLeft$1;\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isRight = isRight$1;\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isBoth = isBoth$1;\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isEither = isEither$1;\n\n/**\n * @since 2.0.0\n * @category folding\n */\nconst match = match$1;\n\nexport { Both, Either, Left, Right, fromInput, isBoth, isEither, isLeft, isRight, match };\n","import { fromIterable } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { constUndefined } from '../Function/dist/effect-Function.esm.js';\nimport { fromNullable } from '../Option/dist/effect-Option.esm.js';\n\n/** @internal */\nclass RingBuffer {\n  size = 0;\n  current = 0;\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.array = Array.from({\n      length: capacity\n    }, constUndefined);\n  }\n  head() {\n    return fromNullable(this.array[this.current]);\n  }\n  lastOrNull() {\n    if (this.size === 0) {\n      return undefined;\n    }\n    const index = this.current === 0 ? this.array.length - 1 : this.current - 1;\n    return this.array[index] ?? undefined;\n  }\n  put(value) {\n    this.array[this.current] = value;\n    this.increment();\n  }\n  dropLast() {\n    if (this.size > 0) {\n      this.decrement();\n      this.array[this.current] = undefined;\n    }\n  }\n  toChunk() {\n    const begin = this.current - this.size;\n    const newArray = begin < 0 ? [...this.array.slice(this.capacity + begin, this.capacity), ...this.array.slice(0, this.current)] : this.array.slice(begin, this.current);\n    return fromIterable(newArray);\n  }\n  increment() {\n    if (this.size < this.capacity) {\n      this.size += 1;\n    }\n    this.current = (this.current + 1) % this.capacity;\n  }\n  decrement() {\n    this.size -= 1;\n    if (this.current > 0) {\n      this.current -= 1;\n    } else {\n      this.current = this.capacity - 1;\n    }\n  }\n}\n\nexport { RingBuffer };\n","/** @internal */\n\n/** @internal */\nconst OP_NOT_STARTED = \"NotStarted\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PREVIOUS = \"Previous\";\n\n/** @internal */\n\n/** @internal */\nconst OP_CURRENT = \"Current\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst notStarted = {\n  _tag: OP_NOT_STARTED\n};\n\n/** @internal */\nconst previous = fiber => ({\n  _tag: OP_PREVIOUS,\n  fiber\n});\n\n/** @internal */\nconst current = fiber => ({\n  _tag: OP_CURRENT,\n  fiber\n});\n\nexport { OP_CURRENT, OP_NOT_STARTED, OP_PREVIOUS, current, notStarted, previous };\n","import { map } from '../../Cause/dist/effect-Cause.esm.js';\nimport { of } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { succeed, die, dieMessage, suspend, fail, mapBoth as mapBoth$1, mapError, failCause } from '../../Effect/dist/effect-Effect.esm.js';\nimport { mapBoth } from '../../Exit/dist/effect-Exit.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { some, none } from '../../Option/dist/effect-Option.esm.js';\n\n/** @internal */\nconst make = emit => {\n  const ops = {\n    chunk(as) {\n      return this(succeed(as));\n    },\n    die(defect) {\n      return this(die(defect));\n    },\n    dieMessage(message) {\n      return this(dieMessage(message));\n    },\n    done(exit) {\n      return this(suspend(() => mapBoth(exit, {\n        onFailure: some,\n        onSuccess: of\n      })));\n    },\n    end() {\n      return this(fail(none()));\n    },\n    fail(e) {\n      return this(fail(some(e)));\n    },\n    fromEffect(effect) {\n      return this(mapBoth$1(effect, {\n        onFailure: some,\n        onSuccess: of\n      }));\n    },\n    fromEffectChunk(effect) {\n      return this(pipe(effect, mapError(some)));\n    },\n    halt(cause) {\n      return this(failCause(pipe(cause, map(some))));\n    },\n    single(value) {\n      return this(succeed(of(value)));\n    }\n  };\n  return Object.assign(emit, ops);\n};\n\nexport { make };\n","import { make as make$2, await as _await, succeed } from '../../Deferred/dist/effect-Deferred.esm.js';\nimport { map, flatMap, flatten, zipRight, as } from '../../Effect/dist/effect-Effect.esm.js';\nimport { pipe, dual } from '../../Function/dist/effect-Function.esm.js';\nimport { make as make$1, modify } from '../../Ref/dist/effect-Ref.esm.js';\n\n/** @internal */\nconst HandoffTypeId = /*#__PURE__*/Symbol.for(\"effect/Stream/Handoff\");\n\n/** @internal */\n\n/**\n * A synchronous queue-like abstraction that allows a producer to offer an\n * element and wait for it to be taken, and allows a consumer to wait for an\n * element to be available.\n *\n * @internal\n */\n\n/** @internal */\nconst OP_HANDOFF_STATE_EMPTY = \"Empty\";\n\n/** @internal */\n\n/** @internal */\nconst OP_HANDOFF_STATE_FULL = \"Full\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst handoffStateEmpty = notifyConsumer => ({\n  _tag: OP_HANDOFF_STATE_EMPTY,\n  notifyConsumer\n});\n\n/** @internal */\nconst handoffStateFull = (value, notifyProducer) => ({\n  _tag: OP_HANDOFF_STATE_FULL,\n  value,\n  notifyProducer\n});\n\n/** @internal */\nconst handoffStateMatch = (onEmpty, onFull) => {\n  return self => {\n    switch (self._tag) {\n      case OP_HANDOFF_STATE_EMPTY:\n        {\n          return onEmpty(self.notifyConsumer);\n        }\n      case OP_HANDOFF_STATE_FULL:\n        {\n          return onFull(self.value, self.notifyProducer);\n        }\n    }\n  };\n};\n\n/** @internal */\nconst handoffVariance = {\n  _A: _ => _\n};\n\n/** @internal */\nconst make = () => pipe(make$2(), flatMap(deferred => make$1(handoffStateEmpty(deferred))), map(ref => ({\n  [HandoffTypeId]: handoffVariance,\n  ref\n})));\n\n/** @internal */\nconst offer = /*#__PURE__*/dual(2, (self, value) => {\n  return flatMap(make$2(), deferred => flatten(modify(self.ref, state => pipe(state, handoffStateMatch(notifyConsumer => [zipRight(succeed(notifyConsumer, void 0), _await(deferred)), handoffStateFull(value, deferred)], (_, notifyProducer) => [flatMap(_await(notifyProducer), () => pipe(self, offer(value))), state])))));\n});\n\n/** @internal */\nconst take = self => flatMap(make$2(), deferred => flatten(modify(self.ref, state => pipe(state, handoffStateMatch(notifyConsumer => [flatMap(_await(notifyConsumer), () => take(self)), state], (value, notifyProducer) => [as(succeed(notifyProducer, void 0), value), handoffStateEmpty(deferred)])))));\n\nexport { HandoffTypeId, OP_HANDOFF_STATE_EMPTY, OP_HANDOFF_STATE_FULL, make, offer, take };\n","/** @internal */\n\n/** @internal */\nconst OP_EMIT = \"Emit\";\n\n/** @internal */\n\n/** @internal */\nconst OP_HALT = \"Halt\";\n\n/** @internal */\n\n/** @internal */\nconst OP_END = \"End\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst emit = elements => ({\n  _tag: OP_EMIT,\n  elements\n});\n\n/** @internal */\nconst halt = cause => ({\n  _tag: OP_HALT,\n  cause\n});\n\n/** @internal */\nconst end = reason => ({\n  _tag: OP_END,\n  reason\n});\n\nexport { OP_EMIT, OP_END, OP_HALT, emit, end, halt };\n","import { fail, mapError, failCause as failCause$1 } from '../../Effect/dist/effect-Effect.esm.js';\nimport { none, some } from '../../Option/dist/effect-Option.esm.js';\n\n/** @internal */\nconst end = () => fail(none());\n\n/** @internal */\nconst failCause = cause => mapError(failCause$1(cause), some);\n\nexport { end, failCause };\n","/** @internal */\n\n/** @internal */\nconst OP_SCHEDULE_END = \"ScheduleEnd\";\n\n/** @internal */\n\n/** @internal */\nconst OP_UPSTREAM_END = \"UpstreamEnd\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst ScheduleEnd = {\n  _tag: OP_SCHEDULE_END\n};\n\n/** @internal */\nconst UpstreamEnd = {\n  _tag: OP_UPSTREAM_END\n};\n\nexport { OP_SCHEDULE_END, OP_UPSTREAM_END, ScheduleEnd, UpstreamEnd };\n","/** @internal */\n\n/** @internal */\nconst OP_DRAIN_LEFT = \"DrainLeft\";\n\n/** @internal */\n\n/** @internal */\nconst OP_DRAIN_RIGHT = \"DrainRight\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PULL_BOTH = \"PullBoth\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PULL_LEFT = \"PullLeft\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PULL_RIGHT = \"PullRight\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst DrainLeft = {\n  _tag: OP_DRAIN_LEFT\n};\n\n/** @internal */\nconst DrainRight = {\n  _tag: OP_DRAIN_RIGHT\n};\n\n/** @internal */\nconst PullBoth = {\n  _tag: OP_PULL_BOTH\n};\n\n/** @internal */\nconst PullLeft = rightChunk => ({\n  _tag: OP_PULL_LEFT,\n  rightChunk\n});\n\n/** @internal */\nconst PullRight = leftChunk => ({\n  _tag: OP_PULL_RIGHT,\n  leftChunk\n});\n\nexport { DrainLeft, DrainRight, OP_DRAIN_LEFT, OP_DRAIN_RIGHT, OP_PULL_BOTH, OP_PULL_LEFT, OP_PULL_RIGHT, PullBoth, PullLeft, PullRight };\n","/** @internal */\n\n/** @internal */\nconst OP_PULL_BOTH = \"PullBoth\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PULL_LEFT = \"PullLet\";\n\n/** @internal */\n\n/** @internal */\nconst OP_PULL_RIGHT = \"PullRight\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\nconst PullBoth = {\n  _tag: OP_PULL_BOTH\n};\n\n/** @internal */\nconst PullLeft = rightChunk => ({\n  _tag: OP_PULL_LEFT,\n  rightChunk\n});\n\n/** @internal */\nconst PullRight = leftChunk => ({\n  _tag: OP_PULL_RIGHT,\n  leftChunk\n});\n\nexport { OP_PULL_BOTH, OP_PULL_LEFT, OP_PULL_RIGHT, PullBoth, PullLeft, PullRight };\n","import { RuntimeException, map as map$1, flipCauseOption } from '../Cause/dist/effect-Cause.esm.js';\nimport { of as of$1, map as map$3 } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { suspend, matchCause, asUnit } from '../Effect/dist/effect-Effect.esm.js';\nimport { succeed, die as die$1, fail as fail$1, failCause as failCause$1, mapBoth, match as match$2, matchEffect as matchEffect$1, map as map$2, forEachEffect } from '../Exit/dist/effect-Exit.esm.js';\nimport { pipe, constFalse, constTrue, dual } from '../Function/dist/effect-Function.esm.js';\nimport { none, some, match as match$1, isNone, isSome } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\n\n/** @internal */\nconst TakeSymbolKey = \"effect/Take\";\n\n/** @internal */\nconst TakeTypeId = /*#__PURE__*/Symbol.for(TakeSymbolKey);\n\n/** @internal */\nconst takeVariance = {\n  _E: _ => _,\n  _A: _ => _\n};\n\n/** @internal */\nclass TakeImpl {\n  [TakeTypeId] = takeVariance;\n  constructor(exit) {\n    this.exit = exit;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst chunk = chunk => new TakeImpl(succeed(chunk));\n\n/** @internal */\nconst die = defect => new TakeImpl(die$1(defect));\n\n/** @internal */\nconst dieMessage = message => new TakeImpl(die$1(RuntimeException(message)));\n\n/** @internal */\nconst done = self => suspend(() => self.exit);\n\n/** @internal */\nconst end = /*#__PURE__*/new TakeImpl( /*#__PURE__*/fail$1( /*#__PURE__*/none()));\n\n/** @internal */\nconst fail = error => new TakeImpl(fail$1(some(error)));\n\n/** @internal */\nconst failCause = cause => new TakeImpl(failCause$1(pipe(cause, map$1(some))));\n\n/** @internal */\nconst fromEffect = effect => matchCause(effect, {\n  onFailure: failCause,\n  onSuccess: of\n});\n\n/** @internal */\nconst fromExit = exit => new TakeImpl(pipe(exit, mapBoth({\n  onFailure: some,\n  onSuccess: of$1\n})));\n\n/** @internal */\nconst fromPull = pull => matchCause(pull, {\n  onFailure: cause => match$1(flipCauseOption(cause), {\n    onNone: () => end,\n    onSome: failCause\n  }),\n  onSuccess: chunk\n});\n\n/** @internal */\nconst isDone = self => match$2(self.exit, {\n  onFailure: cause => isNone(flipCauseOption(cause)),\n  onSuccess: constFalse\n});\n\n/** @internal */\nconst isFailure = self => match$2(self.exit, {\n  onFailure: cause => isSome(flipCauseOption(cause)),\n  onSuccess: constFalse\n});\n\n/** @internal */\nconst isSuccess = self => match$2(self.exit, {\n  onFailure: constFalse,\n  onSuccess: constTrue\n});\n\n/** @internal */\nconst make = exit => new TakeImpl(exit);\n\n/** @internal */\nconst match = /*#__PURE__*/dual(2, (self, {\n  onEnd,\n  onFailure,\n  onSuccess\n}) => match$2(self.exit, {\n  onFailure: cause => match$1(flipCauseOption(cause), {\n    onNone: onEnd,\n    onSome: onFailure\n  }),\n  onSuccess\n}));\n\n/** @internal */\nconst matchEffect = /*#__PURE__*/dual(2, (self, {\n  onEnd,\n  onFailure,\n  onSuccess\n}) => matchEffect$1(self.exit, {\n  onFailure: cause => match$1(flipCauseOption(cause), {\n    onNone: onEnd,\n    onSome: onFailure\n  }),\n  onSuccess\n}));\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => new TakeImpl(pipe(self.exit, map$2(map$3(f)))));\n\n/** @internal */\nconst of = value => new TakeImpl(succeed(of$1(value)));\n\n/** @internal */\nconst tap = /*#__PURE__*/dual(2, (self, f) => pipe(self.exit, forEachEffect(f), asUnit));\n\nexport { TakeImpl, TakeTypeId, chunk, die, dieMessage, done, end, fail, failCause, fromEffect, fromExit, fromPull, isDone, isFailure, isSuccess, make, map, match, matchEffect, of, tap };\n","import { flipCauseOption, failureOrCause, map as map$3, isInterrupted, die as die$2, IllegalArgumentException, RuntimeException, isDieType, isRuntimeException, squash } from '../Cause/dist/effect-Cause.esm.js';\nimport { Done, Await } from '../ChannelMergeDecision/dist/effect-ChannelMergeDecision.esm.js';\nimport { empty as empty$1, isNonEmpty, of, map as map$2, range as range$1, unsafeFromArray, reduceRight, prepend as prepend$1, isEmpty, dropWhile as dropWhile$1, filter as filter$1, filterMap as filterMap$1, filterMapWhile as filterMapWhile$1, findFirst, fromIterable as fromIterable$1, flatMap as flatMap$3, takeWhile as takeWhile$1, take as take$3, drop as drop$1, appendAll, unsafeLast, zipWith as zipWith$2, reduce, append, last as last$1, splitWhere, head as head$1, isChunk, mapAccum as mapAccum$1, unsafeGet as unsafeGet$1, make as make$7, flatten as flatten$2, splitAt, appendAllNonEmpty, takeRight as takeRight$1 } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { sleep, currentTimeMillis } from '../Clock/dist/effect-Clock.esm.js';\nimport { add, unsafeGet } from '../Context/dist/effect-Context.esm.js';\nimport { make as make$4, succeed as succeed$2, await as _await, failCause as failCause$3, poll, fail as fail$4 } from '../Deferred/dist/effect-Deferred.esm.js';\nimport { toMillis, millis, greaterThan, zero } from '../Duration/dist/effect-Duration.esm.js';\nimport { acquireRelease as acquireRelease$1, all, when as when$1, flatMap as flatMap$2, zipRight as zipRight$1, succeed as succeed$1, map as map$1, forkScoped, scope, runtime, match as match$1, sync as sync$1, as as as$1, unit as unit$2, onError as onError$1, tap as tap$1, gen, suspend as suspend$1, transplant, die as die$1, dieSync as dieSync$1, dieMessage as dieMessage$1, makeSemaphore, matchCauseEffect, flatten as flatten$1, forEach, catchAllCause as catchAllCause$2, dropUntil as dropUntil$1, dropWhile as dropWhile$2, fail as fail$3, failSync as failSync$1, failCause as failCause$4, failCauseSync as failCauseSync$1, findFirst as findFirst$1, tryPromise, promise, isEffect, mapError as mapError$1, zip as zip$1, never as never$1, orDie as orDie$1, matchEffect, scoped as scoped$1, asUnit, forkDaemon, ensuring as ensuring$2, timeoutFail as timeoutFail$1, timeoutFailCause as timeoutFailCause$1, runSync, catchTags as catchTags$1, tapErrorCause as tapErrorCause$1, runPromise, raceWith, zipWith as zipWith$1, forkIn, reduce as reduce$1, catchSomeCause as catchSomeCause$1, context as context$2, orElse as orElse$2, zipLeft as zipLeft$1, catchAll as catchAll$2, asSome, succeedNone, fork } from '../Effect/dist/effect-Effect.esm.js';\nimport { match, left, right } from '../Either/dist/effect-Either.esm.js';\nimport { equals } from '../Equal/dist/effect-Equal.esm.js';\nimport { match as match$3, failCause as failCause$2, fail as fail$2, isSuccess, succeed as succeed$4, unit as unit$3, isFailure } from '../Exit/dist/effect-Exit.esm.js';\nimport { join, interrupt, poll as poll$1 } from '../Fiber/dist/effect-Fiber.esm.js';\nimport { dual, pipe, identity, constTrue } from '../Function/dist/effect-Function.esm.js';\nimport { build, context as context$1, merge as merge$1 } from '../Layer/dist/effect-Layer.esm.js';\nimport { none, some as some$1, match as match$2, getOrElse, map as map$4, isSome, isNone } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { isTagged, hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { bounded as bounded$1, subscribe, shutdown as shutdown$1 } from '../PubSub/dist/effect-PubSub.esm.js';\nimport { take as take$2, shutdown, bounded, dropping, sliding as sliding$1, isShutdown, takeBetween, offerAll, offer as offer$1, unbounded } from '../Queue/dist/effect-Queue.esm.js';\nimport { make as make$2, getAndSet, set, get, update, modify } from '../Ref/dist/effect-Ref.esm.js';\nimport { runPromiseExit } from '../Runtime/dist/effect-Runtime.esm.js';\nimport { forever as forever$1, driver, spaced } from '../Schedule/dist/effect-Schedule.esm.js';\nimport { make as make$6, close, use } from '../Scope/dist/effect-Scope.esm.js';\nimport { Both } from '../StreamHaltStrategy/dist/effect-StreamHaltStrategy.esm.js';\nimport { unwrap as unwrap$1, zipRight as zipRight$2, pipeToOrFail, unwrapScoped as unwrapScoped$1, concatMap, writeChunk, drain as drain$1, identityChannel, ensuring as ensuring$1, mapOut, mapOutEffectPar, repeated, interruptWhen as interruptWhen$1, interruptWhenDeferred as interruptWhenDeferred$1, mapOutEffect, mapError as mapError$2, mapErrorCause as mapErrorCause$1, mergeWith as mergeWith$1, orDieWith as orDieWith$1, orElse as orElse$1, catchAll as catchAll$1, runDrain as runDrain$1, scoped as scoped$2, toPull as toPull$1, withSpan as withSpan$1, fromInput as fromInput$1, mergeMap, writeAll } from './channel.esm.js';\nimport { run as run$1, runScoped as runScoped$1 } from './channel/channelExecutor.esm.js';\nimport { BufferSliding } from './channel/mergeStrategy.esm.js';\nimport { make as make$5 } from './channel/singleProducerAsyncInput.esm.js';\nimport { pipeTo, readWithCause, flatMap as flatMap$1, fromEffect as fromEffect$1, write, failCause as failCause$1, unit as unit$1, collectElements, fail as fail$1, catchAllCause as catchAllCause$1, readWith, suspend as suspend$2, succeedNow, ensuringWith as ensuringWith$1, succeed as succeed$3, provideContext as provideContext$1, foldCauseChannel, sync as sync$2, embedInput } from './core-stream.esm.js';\nimport { RingBuffer } from './ringBuffer.esm.js';\nimport { toChannel as toChannel$1, collectAllN, mkString as mkString$1, foldSink, collectLeftover, zipRight as zipRight$3, fromEffect as fromEffect$2, fail as fail$5, fromChannel as fromChannel$1, collectAll, count, drain as drain$2, fold, foldEffect, forEach as forEach$1, forEachChunk, forEachWhile, head, last, sum } from './sink.esm.js';\nimport { OP_CURRENT, OP_PREVIOUS, current, OP_NOT_STARTED, notStarted, previous } from './stream/debounceState.esm.js';\nimport { make as make$3 } from './stream/emit.esm.js';\nimport { fromInput } from './stream/haltStrategy.esm.js';\nimport { make as make$1, offer, take as take$1 } from './stream/handoff.esm.js';\nimport { emit, halt, end, OP_END, OP_HALT, OP_EMIT } from './stream/handoffSignal.esm.js';\nimport { end as end$1, failCause as failCause$5 } from './stream/pull.esm.js';\nimport { ScheduleEnd, OP_SCHEDULE_END, UpstreamEnd, OP_UPSTREAM_END } from './stream/sinkEndReason.esm.js';\nimport { PullBoth, OP_PULL_RIGHT, DrainLeft, PullRight, OP_PULL_LEFT, DrainRight, PullLeft, OP_PULL_BOTH, OP_DRAIN_RIGHT, OP_DRAIN_LEFT } from './stream/zipAllState.esm.js';\nimport { PullBoth as PullBoth$1, OP_PULL_RIGHT as OP_PULL_RIGHT$1, PullRight as PullRight$1, PullLeft as PullLeft$1, OP_PULL_LEFT as OP_PULL_LEFT$1, OP_PULL_BOTH as OP_PULL_BOTH$1 } from './stream/zipChunksState.esm.js';\nimport { done, match as match$4, chunk, failCause as failCause$6, end as end$2, fromPull as fromPull$1, of as of$1 } from './take.esm.js';\n\n/** @internal */\nconst StreamSymbolKey = \"effect/Stream\";\n\n/** @internal */\nconst StreamTypeId = /*#__PURE__*/Symbol.for(StreamSymbolKey);\n\n/** @internal */\nconst streamVariance = {\n  _R: _ => _,\n  _E: _ => _,\n  _A: _ => _\n};\n\n/** @internal */\nclass StreamImpl {\n  [StreamTypeId] = streamVariance;\n  constructor(channel) {\n    this.channel = channel;\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst isStream = u => hasProperty(u, StreamTypeId) || isEffect(u);\n\n/** @internal */\nconst DefaultChunkSize = 4096;\n\n/** @internal */\nconst accumulate = self => chunks(accumulateChunks(self));\n\n/** @internal */\nconst accumulateChunks = self => {\n  const accumulator = s => readWith({\n    onInput: input => {\n      const next = appendAll(s, input);\n      return flatMap$1(write(next), () => accumulator(next));\n    },\n    onFailure: fail$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipeTo(toChannel(self), accumulator(empty$1())));\n};\n\n/** @internal */\nconst acquireRelease = (acquire, release) => scoped(acquireRelease$1(acquire, release));\n\n/** @internal */\nconst aggregate = /*#__PURE__*/dual(2, (self, sink) => aggregateWithin(self, sink, forever$1));\n\n/** @internal */\nconst aggregateWithin = /*#__PURE__*/dual(3, (self, sink, schedule) => filterMap(aggregateWithinEither(self, sink, schedule), _ => match(_, {\n  onLeft: none,\n  onRight: some$1\n})));\n\n/** @internal */\nconst aggregateWithinEither = /*#__PURE__*/dual(3, (self, sink, schedule) => {\n  const layer = all([make$1(), make$2(ScheduleEnd), make$2(empty$1()), driver(schedule), make$2(false), make$2(false)]);\n  return pipe(fromEffect(layer), flatMap(([handoff, sinkEndReason, sinkLeftovers, scheduleDriver, consumed, endAfterEmit]) => {\n    const handoffProducer = readWithCause({\n      onInput: input => flatMap$1(fromEffect$1(pipe(handoff, offer(emit(input)), when$1(() => isNonEmpty(input)))), () => handoffProducer),\n      onFailure: cause => fromEffect$1(offer(handoff, halt(cause))),\n      onDone: () => fromEffect$1(offer(handoff, end(UpstreamEnd)))\n    });\n    const handoffConsumer = pipe(getAndSet(sinkLeftovers, empty$1()), flatMap$2(leftovers => {\n      if (isNonEmpty(leftovers)) {\n        return pipe(set(consumed, true), zipRight$1(succeed$1(pipe(write(leftovers), flatMap$1(() => handoffConsumer)))));\n      }\n      return pipe(take$1(handoff), map$1(signal => {\n        switch (signal._tag) {\n          case OP_EMIT:\n            {\n              return pipe(fromEffect$1(set(consumed, true)), zipRight$2(write(signal.elements)), zipRight$2(fromEffect$1(get(endAfterEmit))), flatMap$1(bool => bool ? unit$1 : handoffConsumer));\n            }\n          case OP_HALT:\n            {\n              return failCause$1(signal.cause);\n            }\n          case OP_END:\n            {\n              if (signal.reason._tag === OP_SCHEDULE_END) {\n                return pipe(get(consumed), map$1(bool => bool ? fromEffect$1(pipe(set(sinkEndReason, ScheduleEnd), zipRight$1(set(endAfterEmit, true)))) : pipe(fromEffect$1(pipe(set(sinkEndReason, ScheduleEnd), zipRight$1(set(endAfterEmit, true)))), flatMap$1(() => handoffConsumer))), unwrap$1);\n              }\n              return pipe(set(sinkEndReason, signal.reason), zipRight$1(set(endAfterEmit, true)), fromEffect$1);\n            }\n        }\n      }));\n    }), unwrap$1);\n    const timeout = lastB => scheduleDriver.next(lastB);\n    const scheduledAggregator = (sinkFiber, scheduleFiber, scope) => {\n      const forkSink = pipe(set(consumed, false), zipRight$1(set(endAfterEmit, false)), zipRight$1(pipe(handoffConsumer, pipeToOrFail(toChannel$1(sink)), collectElements, run$1, forkIn(scope))));\n      const handleSide = (leftovers, b, c) => pipe(set(sinkLeftovers, flatten$2(leftovers)), zipRight$1(map$1(get(sinkEndReason), reason => {\n        switch (reason._tag) {\n          case OP_SCHEDULE_END:\n            {\n              return pipe(all([get(consumed), forkSink, pipe(timeout(some$1(b)), forkIn(scope))]), map$1(([wasConsumed, sinkFiber, scheduleFiber]) => {\n                const toWrite = pipe(c, match$2({\n                  onNone: () => of(right(b)),\n                  onSome: c => make$7(right(b), left(c))\n                }));\n                if (wasConsumed) {\n                  return pipe(write(toWrite), flatMap$1(() => scheduledAggregator(sinkFiber, scheduleFiber, scope)));\n                }\n                return scheduledAggregator(sinkFiber, scheduleFiber, scope);\n              }), unwrap$1);\n            }\n          case OP_UPSTREAM_END:\n            {\n              return pipe(get(consumed), map$1(wasConsumed => wasConsumed ? write(of(right(b))) : unit$1), unwrap$1);\n            }\n        }\n      })), unwrap$1);\n      return unwrap$1(raceWith(join(sinkFiber), join(scheduleFiber), {\n        onSelfDone: (sinkExit, _) => pipe(interrupt(scheduleFiber), zipRight$1(pipe(suspend$1(() => sinkExit), map$1(([leftovers, b]) => handleSide(leftovers, b, none()))))),\n        onOtherDone: (scheduleExit, _) => matchCauseEffect(suspend$1(() => scheduleExit), {\n          onFailure: cause => match(failureOrCause(cause), {\n            onLeft: () => pipe(handoff, offer(end(ScheduleEnd)), forkDaemon, zipRight$1(pipe(join(sinkFiber), map$1(([leftovers, b]) => handleSide(leftovers, b, none()))))),\n            onRight: cause => pipe(handoff, offer(halt(cause)), forkDaemon, zipRight$1(pipe(join(sinkFiber), map$1(([leftovers, b]) => handleSide(leftovers, b, none())))))\n          }),\n          onSuccess: c => pipe(handoff, offer(end(ScheduleEnd)), forkDaemon, zipRight$1(pipe(join(sinkFiber), map$1(([leftovers, b]) => handleSide(leftovers, b, some$1(c))))))\n        })\n      }));\n    };\n    return unwrapScoped(pipe(self, toChannel, pipeTo(handoffProducer), run$1, forkScoped, zipRight$1(pipe(handoffConsumer, pipeToOrFail(toChannel$1(sink)), collectElements, run$1, forkScoped, flatMap$2(sinkFiber => pipe(forkScoped(timeout(none())), flatMap$2(scheduleFiber => pipe(scope, map$1(scope => new StreamImpl(scheduledAggregator(sinkFiber, scheduleFiber, scope)))))))))));\n  }));\n});\n\n/** @internal */\nconst as = /*#__PURE__*/dual(2, (self, value) => map(self, () => value));\n\n/** @internal */\nconst _async = (register, outputBuffer = 16) => asyncOption(cb => {\n  register(cb);\n  return none();\n}, outputBuffer);\n\n/** @internal */\nconst asyncEffect = (register, outputBuffer = 16) => pipe(acquireRelease$1(bounded(outputBuffer), queue => shutdown(queue)), flatMap$2(output => pipe(runtime(), flatMap$2(runtime => pipe(register(make$3(k => pipe(fromPull$1(k), flatMap$2(take => offer$1(output, take)), asUnit, runPromiseExit(runtime)).then(exit => {\n  if (isFailure(exit)) {\n    if (!isInterrupted(exit.cause)) {\n      throw squash(exit.cause);\n    }\n  }\n}))), map$1(() => {\n  const loop = pipe(take$2(output), flatMap$2(done), match$1({\n    onFailure: maybeError => pipe(fromEffect$1(shutdown(output)), zipRight$2(match$2(maybeError, {\n      onNone: () => unit$1,\n      onSome: fail$1\n    }))),\n    onSuccess: chunk => pipe(write(chunk), flatMap$1(() => loop))\n  }), unwrap$1);\n  return loop;\n}))))), unwrapScoped$1, fromChannel);\n\n/** @internal */\nconst asyncInterrupt = (register, outputBuffer = 16) => pipe(acquireRelease$1(bounded(outputBuffer), queue => shutdown(queue)), flatMap$2(output => pipe(runtime(), flatMap$2(runtime => pipe(sync$1(() => register(make$3(k => pipe(fromPull$1(k), flatMap$2(take => offer$1(output, take)), asUnit, runPromiseExit(runtime)).then(exit => {\n  if (isFailure(exit)) {\n    if (!isInterrupted(exit.cause)) {\n      throw squash(exit.cause);\n    }\n  }\n})))), map$1(match({\n  onLeft: canceler => {\n    const loop = pipe(take$2(output), flatMap$2(done), match$1({\n      onFailure: maybeError => zipRight$2(fromEffect$1(shutdown(output)), match$2(maybeError, {\n        onNone: () => unit$1,\n        onSome: fail$1\n      })),\n      onSuccess: chunk => pipe(write(chunk), flatMap$1(() => loop))\n    }), unwrap$1);\n    return pipe(fromChannel(loop), ensuring(canceler));\n  },\n  onRight: stream => unwrap(pipe(shutdown(output), as$1(stream)))\n})))))), unwrapScoped);\n\n/** @internal */\nconst asyncOption = (register, outputBuffer = 16) => asyncInterrupt(emit => match$2(register(emit), {\n  onNone: () => left(unit$2),\n  onSome: right\n}), outputBuffer);\n\n/** @internal */\nconst asyncScoped = (register, outputBuffer = 16) => pipe(acquireRelease$1(bounded(outputBuffer), queue => shutdown(queue)), flatMap$2(output => pipe(runtime(), flatMap$2(runtime => pipe(register(make$3(k => pipe(fromPull$1(k), flatMap$2(take => offer$1(output, take)), asUnit, runPromiseExit(runtime)).then(exit => {\n  if (isFailure(exit)) {\n    if (!isInterrupted(exit.cause)) {\n      throw squash(exit.cause);\n    }\n  }\n}))), zipRight$1(make$2(false)), flatMap$2(ref => pipe(get(ref), map$1(isDone => isDone ? end$1() : pipe(take$2(output), flatMap$2(done), onError$1(() => pipe(set(ref, true), zipRight$1(shutdown(output)))))))))))), scoped, flatMap(repeatEffectChunkOption));\n\n/** @internal */\nconst branchAfter = /*#__PURE__*/dual(3, (self, n, f) => suspend(() => {\n  const buffering = acc => readWith({\n    onInput: input => {\n      const nextSize = acc.length + input.length;\n      if (nextSize >= n) {\n        const [b1, b2] = pipe(input, splitAt(n - acc.length));\n        return running(pipe(acc, appendAll(b1)), b2);\n      }\n      return buffering(pipe(acc, appendAll(input)));\n    },\n    onFailure: fail$1,\n    onDone: () => running(acc, empty$1())\n  });\n  const running = (prefix, leftover) => pipeTo(zipRight$2(write(leftover), identityChannel()), toChannel(f(prefix)));\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(buffering(empty$1()))));\n}));\n\n/** @internal */\nconst broadcast = /*#__PURE__*/dual(3, (self, n, maximumLag) => pipe(self, broadcastedQueues(n, maximumLag), map$1(tuple => tuple.map(queue => flattenTake(fromQueue(queue, {\n  shutdown: true\n}))))));\n\n/** @internal */\nconst broadcastDynamic = /*#__PURE__*/dual(2, (self, maximumLag) => pipe(self, broadcastedQueuesDynamic(maximumLag), map$1(effect => flattenTake(flatMap(scoped(effect), fromQueue)))));\n\n/** @internal */\nconst broadcastedQueues = /*#__PURE__*/dual(3, (self, n, maximumLag) => flatMap$2(bounded$1(maximumLag), pubsub => pipe(all(Array.from({\n  length: n\n}, () => subscribe(pubsub))), tap$1(() => forkScoped(runIntoPubSubScoped(self, pubsub))))));\n\n/** @internal */\nconst broadcastedQueuesDynamic = /*#__PURE__*/dual(2, (self, maximumLag) => map$1(toPubSub(self, maximumLag), subscribe));\n\n/** @internal */\nconst buffer = /*#__PURE__*/dual(2, (self, options) => {\n  if (options.capacity === \"unbounded\") {\n    return bufferUnbounded(self);\n  } else if (options.strategy === \"dropping\") {\n    return bufferDropping(self, options.capacity);\n  } else if (options.strategy === \"sliding\") {\n    return bufferSliding(self, options.capacity);\n  }\n  const queue = toQueueOfElements(self, options);\n  return new StreamImpl(unwrapScoped$1(map$1(queue, queue => {\n    const process = pipe(fromEffect$1(take$2(queue)), flatMap$1(match$3({\n      onFailure: cause => pipe(flipCauseOption(cause), match$2({\n        onNone: () => unit$1,\n        onSome: failCause$1\n      })),\n      onSuccess: value => flatMap$1(write(of(value)), () => process)\n    })));\n    return process;\n  })));\n});\n\n/** @internal */\nconst bufferChunks = /*#__PURE__*/dual(2, (self, options) => {\n  if (options.strategy === \"dropping\") {\n    return bufferChunksDropping(self, options.capacity);\n  } else if (options.strategy === \"sliding\") {\n    return bufferChunksSliding(self, options.capacity);\n  }\n  const queue = toQueue(self, options);\n  return new StreamImpl(unwrapScoped$1(map$1(queue, queue => {\n    const process = pipe(fromEffect$1(take$2(queue)), flatMap$1(match$4({\n      onEnd: () => unit$1,\n      onFailure: failCause$1,\n      onSuccess: value => pipe(write(value), flatMap$1(() => process))\n    })));\n    return process;\n  })));\n});\nconst bufferChunksDropping = /*#__PURE__*/dual(2, (self, capacity) => {\n  const queue = acquireRelease$1(dropping(capacity), queue => shutdown(queue));\n  return new StreamImpl(bufferSignal(queue, toChannel(self)));\n});\nconst bufferChunksSliding = /*#__PURE__*/dual(2, (self, capacity) => {\n  const queue = acquireRelease$1(sliding$1(capacity), queue => shutdown(queue));\n  return new StreamImpl(bufferSignal(queue, toChannel(self)));\n});\nconst bufferDropping = /*#__PURE__*/dual(2, (self, capacity) => {\n  const queue = acquireRelease$1(dropping(capacity), queue => shutdown(queue));\n  return new StreamImpl(bufferSignal(queue, toChannel(rechunk(1)(self))));\n});\nconst bufferSliding = /*#__PURE__*/dual(2, (self, capacity) => {\n  const queue = acquireRelease$1(sliding$1(capacity), queue => shutdown(queue));\n  return new StreamImpl(bufferSignal(queue, toChannel(pipe(self, rechunk(1)))));\n});\nconst bufferUnbounded = self => {\n  const queue = toQueue(self, {\n    strategy: \"unbounded\"\n  });\n  return new StreamImpl(unwrapScoped$1(map$1(queue, queue => {\n    const process = pipe(fromEffect$1(take$2(queue)), flatMap$1(match$4({\n      onEnd: () => unit$1,\n      onFailure: failCause$1,\n      onSuccess: value => flatMap$1(write(value), () => process)\n    })));\n    return process;\n  })));\n};\n\n/** @internal */\nconst bufferSignal = (scoped, bufferChannel) => {\n  const producer = (queue, ref) => {\n    const terminate = take => pipe(get(ref), tap$1(_await), zipRight$1(make$4()), flatMap$2(deferred => pipe(offer$1(queue, [take, deferred]), zipRight$1(set(ref, deferred)), zipRight$1(_await(deferred)))), asUnit, fromEffect$1);\n    return readWithCause({\n      onInput: input => pipe(make$4(), flatMap$2(deferred => pipe(offer$1(queue, [chunk(input), deferred]), flatMap$2(added => pipe(set(ref, deferred), when$1(() => added))))), asUnit, fromEffect$1, flatMap$1(() => producer(queue, ref))),\n      onFailure: error => terminate(failCause$6(error)),\n      onDone: () => terminate(end$2)\n    });\n  };\n  const consumer = queue => {\n    const process = pipe(fromEffect$1(take$2(queue)), flatMap$1(([take, deferred]) => zipRight$2(fromEffect$1(succeed$2(deferred, void 0)), match$4(take, {\n      onEnd: () => unit$1,\n      onFailure: failCause$1,\n      onSuccess: value => pipe(write(value), flatMap$1(() => process))\n    }))));\n    return process;\n  };\n  return unwrapScoped$1(pipe(scoped, flatMap$2(queue => pipe(make$4(), tap$1(start => succeed$2(start, void 0)), flatMap$2(start => pipe(make$2(start), flatMap$2(ref => pipe(bufferChannel, pipeTo(producer(queue, ref)), runScoped$1, forkScoped)), as$1(consumer(queue))))))));\n};\n\n/** @internal */\nconst catchAll = /*#__PURE__*/dual(2, (self, f) => catchAllCause(self, cause => match(failureOrCause(cause), {\n  onLeft: f,\n  onRight: failCause\n})));\n\n/** @internal */\nconst catchAllCause = /*#__PURE__*/dual(2, (self, f) => new StreamImpl(pipe(toChannel(self), catchAllCause$1(cause => toChannel(f(cause))))));\n\n/** @internal */\nconst catchSome = /*#__PURE__*/dual(2, (self, pf) => pipe(self, catchAll(error => pipe(pf(error), getOrElse(() => fail(error))))));\n\n/** @internal */\nconst catchSomeCause = /*#__PURE__*/dual(2, (self, pf) => pipe(self, catchAllCause(cause => pipe(pf(cause), getOrElse(() => failCause(cause))))));\n\n/* @internal */\nconst catchTag = /*#__PURE__*/dual(3, (self, k, f) => catchAll(self, e => {\n  if (\"_tag\" in e && e[\"_tag\"] === k) {\n    return f(e);\n  }\n  return fail(e);\n}));\n\n/** @internal */\nconst catchTags = /*#__PURE__*/dual(2, (self, cases) => catchAll(self, e => {\n  const keys = Object.keys(cases);\n  if (\"_tag\" in e && keys.includes(e[\"_tag\"])) {\n    return cases[e[\"_tag\"]](e);\n  }\n  return fail(e);\n}));\n\n/** @internal */\nconst changes = self => pipe(self, changesWith((x, y) => equals(y)(x)));\n\n/** @internal */\nconst changesWith = /*#__PURE__*/dual(2, (self, f) => {\n  const writer = last => readWithCause({\n    onInput: input => {\n      const [newLast, newChunk] = reduce(input, [last, empty$1()], ([option, outputs], output) => {\n        if (isSome(option) && f(option.value, output)) {\n          return [some$1(output), outputs];\n        }\n        return [some$1(output), pipe(outputs, append(output))];\n      });\n      return flatMap$1(write(newChunk), () => writer(newLast));\n    },\n    onFailure: failCause$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(writer(none()))));\n});\n\n/** @internal */\nconst changesWithEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const writer = last => readWithCause({\n    onInput: input => pipe(input, reduce$1([last, empty$1()], ([option, outputs], output) => {\n      if (isSome(option)) {\n        return pipe(f(option.value, output), map$1(bool => bool ? [some$1(output), outputs] : [some$1(output), pipe(outputs, append(output))]));\n      }\n      return succeed$1([some$1(output), pipe(outputs, append(output))]);\n    }), fromEffect$1, flatMap$1(([newLast, newChunk]) => pipe(write(newChunk), flatMap$1(() => writer(newLast))))),\n    onFailure: failCause$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(writer(none()))));\n});\n\n/** @internal */\nconst chunks = self => pipe(self, mapChunks(of));\n\n/** @internal */\nconst chunksWith = /*#__PURE__*/dual(2, (self, f) => flattenChunks(f(chunks(self))));\nconst unsome = effect => catchAll$2(asSome(effect), o => o._tag === \"None\" ? succeedNone : fail$3(o.value));\n\n/** @internal */\nconst combine = /*#__PURE__*/dual(4, (self, that, s, f) => {\n  const producer = (handoff, latch) => pipe(fromEffect$1(take$1(latch)), zipRight$2(readWithCause({\n    onInput: input => flatMap$1(fromEffect$1(pipe(handoff, offer(succeed$4(input)))), () => producer(handoff, latch)),\n    onFailure: cause => fromEffect$1(offer(handoff, failCause$2(pipe(cause, map$3(some$1))))),\n    onDone: () => flatMap$1(fromEffect$1(offer(handoff, fail$2(none()))), () => producer(handoff, latch))\n  })));\n  return new StreamImpl(unwrapScoped$1(gen(function* ($) {\n    const left = yield* $(make$1());\n    const right = yield* $(make$1());\n    const latchL = yield* $(make$1());\n    const latchR = yield* $(make$1());\n    yield* $(toChannel(self), concatMap(writeChunk), pipeTo(producer(left, latchL)), runScoped$1, forkScoped);\n    yield* $(toChannel(that), concatMap(writeChunk), pipeTo(producer(right, latchR)), runScoped$1, forkScoped);\n    const pullLeft = pipe(latchL, offer(void 0),\n    // TODO: remove\n    zipRight$1(pipe(take$1(left), flatMap$2(exit => suspend$1(() => exit)))));\n    const pullRight = pipe(latchR, offer(void 0),\n    // TODO: remove\n    zipRight$1(pipe(take$1(right), flatMap$2(exit => suspend$1(() => exit)))));\n    return toChannel(unfoldEffect(s, s => flatMap$2(f(s, pullLeft, pullRight), unsome)));\n  })));\n});\n\n/** @internal */\nconst combineChunks = /*#__PURE__*/dual(4, (self, that, s, f) => {\n  const producer = (handoff, latch) => zipRight$2(fromEffect$1(take$1(latch)), readWithCause({\n    onInput: input => flatMap$1(fromEffect$1(pipe(handoff, offer(chunk(input)))), () => producer(handoff, latch)),\n    onFailure: cause => fromEffect$1(offer(handoff, failCause$6(cause))),\n    onDone: () => fromEffect$1(offer(handoff, end$2))\n  }));\n  return new StreamImpl(pipe(all([make$1(), make$1(), make$1(), make$1()]), tap$1(([left, _, latchL]) => pipe(toChannel(self), pipeTo(producer(left, latchL)), runScoped$1, forkScoped)), tap$1(([_, right, __, latchR]) => pipe(toChannel(that), pipeTo(producer(right, latchR)), runScoped$1, forkScoped)), map$1(([left, right, latchL, latchR]) => {\n    const pullLeft = pipe(latchL, offer(void 0), zipRight$1(pipe(take$1(left), flatMap$2(done))));\n    const pullRight = pipe(latchR, offer(void 0), zipRight$1(pipe(take$1(right), flatMap$2(done))));\n    return toChannel(unfoldChunkEffect(s, s => flatMap$2(f(s, pullLeft, pullRight), unsome)));\n  }), unwrapScoped$1));\n});\n\n/** @internal */\nconst concat = /*#__PURE__*/dual(2, (self, that) => new StreamImpl(pipe(toChannel(self), zipRight$2(toChannel(that)))));\n\n/** @internal */\nconst concatAll = streams => suspend(() => pipe(streams, reduce(empty, (x, y) => concat(y)(x))));\n\n/** @internal */\nconst cross = /*#__PURE__*/dual(2, (self, that) => pipe(self, crossWith(that, (a, a2) => [a, a2])));\n\n/** @internal */\nconst crossLeft = /*#__PURE__*/dual(2, (self, that) => pipe(self, crossWith(that, (a, _) => a)));\n\n/** @internal */\nconst crossRight = /*#__PURE__*/dual(2, (self, that) => flatMap(self, () => that));\n\n/** @internal */\nconst crossWith = /*#__PURE__*/dual(3, (self, that, f) => pipe(self, flatMap(a => pipe(that, map(b => f(a, b))))));\n\n/** @internal */\nconst debounce = /*#__PURE__*/dual(2, (self, duration) => pipe(make$5(), flatMap$2(input => transplant(grafter => pipe(make$1(), map$1(handoff => {\n  const enqueue = last => pipe(sleep(duration), as$1(last), fork, grafter, map$1(fiber => consumer(previous(fiber))));\n  const producer = readWithCause({\n    onInput: input => match$2(last$1(input), {\n      onNone: () => producer,\n      onSome: last => flatMap$1(fromEffect$1(offer(handoff, emit(of(last)))), () => producer)\n    }),\n    onFailure: cause => fromEffect$1(offer(handoff, halt(cause))),\n    onDone: () => fromEffect$1(offer(handoff, end(UpstreamEnd)))\n  });\n  const consumer = state => {\n    switch (state._tag) {\n      case OP_NOT_STARTED:\n        {\n          return pipe(take$1(handoff), map$1(signal => {\n            switch (signal._tag) {\n              case OP_EMIT:\n                {\n                  return unwrap$1(enqueue(signal.elements));\n                }\n              case OP_HALT:\n                {\n                  return failCause$1(signal.cause);\n                }\n              case OP_END:\n                {\n                  return unit$1;\n                }\n            }\n          }), unwrap$1);\n        }\n      case OP_PREVIOUS:\n        {\n          return unwrap$1(raceWith(join(state.fiber), take$1(handoff), {\n            onSelfDone: (leftExit, current$1) => match$3(leftExit, {\n              onFailure: cause => pipe(interrupt(current$1), as$1(failCause$1(cause))),\n              onSuccess: chunk => succeed$1(pipe(write(chunk), flatMap$1(() => consumer(current(current$1)))))\n            }),\n            onOtherDone: (rightExit, previous) => match$3(rightExit, {\n              onFailure: cause => pipe(interrupt(previous), as$1(failCause$1(cause))),\n              onSuccess: signal => {\n                switch (signal._tag) {\n                  case OP_EMIT:\n                    {\n                      return pipe(interrupt(previous), zipRight$1(enqueue(signal.elements)));\n                    }\n                  case OP_HALT:\n                    {\n                      return pipe(interrupt(previous), as$1(failCause$1(signal.cause)));\n                    }\n                  case OP_END:\n                    {\n                      return pipe(join(previous), map$1(chunk => pipe(write(chunk), zipRight$2(unit$1))));\n                    }\n                }\n              }\n            })\n          }));\n        }\n      case OP_CURRENT:\n        {\n          return pipe(join(state.fiber), map$1(signal => {\n            switch (signal._tag) {\n              case OP_EMIT:\n                {\n                  return unwrap$1(enqueue(signal.elements));\n                }\n              case OP_HALT:\n                {\n                  return failCause$1(signal.cause);\n                }\n              case OP_END:\n                {\n                  return unit$1;\n                }\n            }\n          }), unwrap$1);\n        }\n    }\n  };\n  const debounceChannel = pipe(fromInput$1(input), pipeTo(producer), run$1, forkScoped, as$1(pipe(consumer(notStarted), embedInput(input))), unwrapScoped$1);\n  return new StreamImpl(pipe(toChannel(self), pipeTo(debounceChannel)));\n})))), unwrap));\n\n/** @internal */\nconst die = defect => fromEffect(die$1(defect));\n\n/** @internal */\nconst dieSync = evaluate => fromEffect(dieSync$1(evaluate));\n\n/** @internal */\nconst dieMessage = message => fromEffect(dieMessage$1(message));\n\n/** @internal */\nconst distributedWith = /*#__PURE__*/dual(2, (self, options) => pipe(make$4(), flatMap$2(deferred => pipe(self, distributedWithDynamic({\n  maximumLag: options.maximumLag,\n  decide: a => flatMap$2(_await(deferred), f => f(a))\n}), flatMap$2(next => pipe(all(map$2(range$1(0, options.size - 1), id => map$1(next, ([key, queue]) => [[key, id], queue]))), map$1(unsafeFromArray), flatMap$2(entries => {\n  const [mappings, queues] = reduceRight(entries, [new Map(), empty$1()], ([mappings, queues], [mapping, queue]) => [mappings.set(mapping[0], mapping[1]), pipe(queues, prepend$1(queue))]);\n  return pipe(succeed$2(deferred, a => map$1(options.decide(a), f => key => pipe(f(mappings.get(key))))), as$1(Array.from(queues)));\n})))))));\n\n/** @internal */\nconst distributedWithDynamicId = {\n  ref: 0\n};\nconst newDistributedWithDynamicId = () => {\n  const current = distributedWithDynamicId.ref;\n  distributedWithDynamicId.ref = current + 1;\n  return current;\n};\n\n/** @internal */\nconst distributedWithDynamic = /*#__PURE__*/dual(2, (self, options) => distributedWithDynamicCallback(self, options.maximumLag, options.decide, () => unit$2));\nconst distributedWithDynamicCallback = /*#__PURE__*/dual(4, (self, maximumLag, decide, done) => pipe(acquireRelease$1(make$2(new Map()), (ref, _) => pipe(get(ref), flatMap$2(queues => pipe(queues.values(), forEach(shutdown))))), flatMap$2(queuesRef => gen(function* ($) {\n  const offer = a => pipe(decide(a), flatMap$2(shouldProcess => pipe(get(queuesRef), flatMap$2(queues => pipe(queues.entries(), reduce$1(empty$1(), (acc, [id, queue]) => {\n    if (shouldProcess(id)) {\n      return pipe(offer$1(queue, succeed$4(a)), matchCauseEffect({\n        onFailure: cause =>\n        // Ignore all downstream queues that were shut\n        // down and remove them later\n        isInterrupted(cause) ? succeed$1(pipe(acc, prepend$1(id))) : failCause$4(cause),\n        onSuccess: () => succeed$1(acc)\n      }));\n    }\n    return succeed$1(acc);\n  }), flatMap$2(ids => {\n    if (isNonEmpty(ids)) {\n      return pipe(update(queuesRef, map => {\n        for (const id of ids) {\n          map.delete(id);\n        }\n        return map;\n      }));\n    }\n    return unit$2;\n  }))))), asUnit);\n  const queuesLock = yield* $(makeSemaphore(1));\n  const newQueue = yield* $(make$2(pipe(bounded(maximumLag), flatMap$2(queue => {\n    const id = newDistributedWithDynamicId();\n    return pipe(update(queuesRef, map => map.set(id, queue)), as$1([id, queue]));\n  }))));\n  const finalize = endTake =>\n  // Make sure that no queues are currently being added\n  queuesLock.withPermits(1)(pipe(set(newQueue, pipe(\n  // All newly created queues should end immediately\n  bounded(1), tap$1(queue => offer$1(queue, endTake)), flatMap$2(queue => {\n    const id = newDistributedWithDynamicId();\n    return pipe(update(queuesRef, map => map.set(id, queue)), as$1([id, queue]));\n  }))), zipRight$1(pipe(get(queuesRef), flatMap$2(map => pipe(fromIterable$1(map.values()), forEach(queue => pipe(offer$1(queue, endTake), catchSomeCause$1(cause => isInterrupted(cause) ? some$1(unit$2) : none()))))))), zipRight$1(done(endTake)), asUnit));\n  yield* $(self, runForEachScoped(offer), matchCauseEffect({\n    onFailure: cause => finalize(failCause$2(pipe(cause, map$3(some$1)))),\n    onSuccess: () => finalize(fail$2(none()))\n  }), forkScoped);\n  return queuesLock.withPermits(1)(flatten$1(get(newQueue)));\n}))));\n\n/** @internal */\nconst drain = self => new StreamImpl(drain$1(toChannel(self)));\n\n/** @internal */\nconst drainFork = /*#__PURE__*/dual(2, (self, that) => pipe(fromEffect(make$4()), flatMap(backgroundDied => pipe(scoped(pipe(that, runForEachScoped(() => unit$2), catchAllCause$2(cause => failCause$3(backgroundDied, cause)), forkScoped)), crossRight(pipe(self, interruptWhenDeferred(backgroundDied)))))));\n\n/** @internal */\nconst drop = /*#__PURE__*/dual(2, (self, n) => {\n  const loop = r => readWith({\n    onInput: input => {\n      const dropped = pipe(input, drop$1(r));\n      const leftover = Math.max(0, r - input.length);\n      const more = isEmpty(input) || leftover > 0;\n      if (more) {\n        return loop(leftover);\n      }\n      return pipe(write(dropped), zipRight$2(identityChannel()));\n    },\n    onFailure: fail$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(loop(n))));\n});\n\n/** @internal */\nconst dropRight = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return identityStream();\n  }\n  return suspend(() => {\n    const queue = new RingBuffer(n);\n    const reader = readWith({\n      onInput: input => {\n        const outputs = pipe(input, filterMap$1(elem => {\n          const head = queue.head();\n          queue.put(elem);\n          return head;\n        }));\n        return pipe(write(outputs), flatMap$1(() => reader));\n      },\n      onFailure: fail$1,\n      onDone: () => unit$1\n    });\n    return new StreamImpl(pipe(toChannel(self), pipeToOrFail(reader)));\n  });\n});\n\n/** @internal */\nconst dropUntil = /*#__PURE__*/dual(2, (self, predicate) => drop(dropWhile(self, a => !predicate(a)), 1));\n\n/** @internal */\nconst dropUntilEffect = /*#__PURE__*/dual(2, (self, predicate) => {\n  const loop = readWith({\n    onInput: input => pipe(dropUntil$1(input, predicate), map$1(unsafeFromArray), map$1(leftover => {\n      const more = isEmpty(leftover);\n      if (more) {\n        return suspend$2(() => loop);\n      }\n      return pipe(write(leftover), zipRight$2(identityChannel()));\n    }), unwrap$1),\n    onFailure: fail$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(loop)));\n});\n\n/** @internal */\nconst dropWhile = /*#__PURE__*/dual(2, (self, predicate) => {\n  const loop = readWith({\n    onInput: input => {\n      const output = dropWhile$1(input, predicate);\n      if (isEmpty(output)) {\n        return suspend$2(() => loop);\n      }\n      return zipRight$2(write(output), identityChannel());\n    },\n    onFailure: fail$1,\n    onDone: succeedNow\n  });\n  return new StreamImpl(pipeToOrFail(toChannel(self), loop));\n});\n\n/** @internal */\nconst dropWhileEffect = /*#__PURE__*/dual(2, (self, predicate) => {\n  const loop = readWith({\n    onInput: input => pipe(dropWhile$2(input, predicate), map$1(unsafeFromArray), map$1(leftover => {\n      const more = isEmpty(leftover);\n      if (more) {\n        return suspend$2(() => loop);\n      }\n      return zipRight$2(write(leftover), identityChannel());\n    }), unwrap$1),\n    onFailure: fail$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipeToOrFail(toChannel(self), loop));\n});\n\n/** @internal */\nconst either = self => pipe(self, map(right), catchAll(error => make(left(error))));\n\n/** @internal */\nconst empty = /*#__PURE__*/new StreamImpl( /*#__PURE__*/write( /*#__PURE__*/empty$1()));\n\n/** @internal */\nconst ensuring = /*#__PURE__*/dual(2, (self, finalizer) => new StreamImpl(pipe(toChannel(self), ensuring$1(finalizer))));\n\n/** @internal */\nconst ensuringWith = /*#__PURE__*/dual(2, (self, finalizer) => new StreamImpl(ensuringWith$1(toChannel(self), finalizer)));\n\n/** @internal */\nconst context = () => fromEffect(context$2());\n\n/** @internal */\nconst contextWith = f => pipe(context(), map(f));\n\n/** @internal */\nconst contextWithEffect = f => pipe(context(), mapEffectSequential(f));\n\n/** @internal */\nconst contextWithStream = f => pipe(context(), flatMap(f));\n\n/** @internal */\nconst execute = effect => drain(fromEffect(effect));\n\n/** @internal */\nconst fail = error => fromEffectOption(fail$3(some$1(error)));\n\n/** @internal */\nconst failSync = evaluate => fromEffectOption(failSync$1(() => some$1(evaluate())));\n\n/** @internal */\nconst failCause = cause => fromEffect(failCause$4(cause));\n\n/** @internal */\nconst failCauseSync = evaluate => fromEffect(failCauseSync$1(evaluate));\n\n/** @internal */\nconst filter = /*#__PURE__*/dual(2, (self, predicate) => mapChunks(self, filter$1(predicate)));\n\n/** @internal */\nconst filterEffect = /*#__PURE__*/dual(2, (self, f) => {\n  const loop = iterator => {\n    const next = iterator.next();\n    if (next.done) {\n      return readWithCause({\n        onInput: input => loop(input[Symbol.iterator]()),\n        onFailure: failCause$1,\n        onDone: succeed$3\n      });\n    } else {\n      return pipe(f(next.value), map$1(bool => bool ? pipe(write(of(next.value)), flatMap$1(() => loop(iterator))) : loop(iterator)), unwrap$1);\n    }\n  };\n  return new StreamImpl(suspend$2(() => pipe(toChannel(self), pipeTo(loop(empty$1()[Symbol.iterator]())))));\n});\n\n/** @internal */\nconst filterMap = /*#__PURE__*/dual(2, (self, pf) => mapChunks(self, filterMap$1(pf)));\n\n/** @internal */\nconst filterMapEffect = /*#__PURE__*/dual(2, (self, pf) => suspend(() => {\n  const loop = iterator => {\n    const next = iterator.next();\n    if (next.done) {\n      return readWithCause({\n        onInput: input => loop(input[Symbol.iterator]()),\n        onFailure: failCause$1,\n        onDone: succeed$3\n      });\n    } else {\n      return pipe(pf(next.value), match$2({\n        onNone: () => sync$1(() => loop(iterator)),\n        onSome: map$1(a2 => flatMap$1(write(of(a2)), () => loop(iterator)))\n      }), unwrap$1);\n    }\n  };\n  return new StreamImpl(pipe(toChannel(self), pipeTo(loop(empty$1()[Symbol.iterator]()))));\n}));\n\n/** @internal */\nconst filterMapWhile = /*#__PURE__*/dual(2, (self, pf) => {\n  const loop = readWith({\n    onInput: input => {\n      const mapped = filterMapWhile$1(input, pf);\n      if (mapped.length === input.length) {\n        return pipe(write(mapped), flatMap$1(() => loop));\n      }\n      return write(mapped);\n    },\n    onFailure: fail$1,\n    onDone: succeed$3\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(loop)));\n});\n\n/** @internal */\nconst filterMapWhileEffect = /*#__PURE__*/dual(2, (self, pf) => suspend(() => {\n  const loop = iterator => {\n    const next = iterator.next();\n    if (next.done) {\n      return readWithCause({\n        onInput: input => loop(input[Symbol.iterator]()),\n        onFailure: failCause$1,\n        onDone: succeed$3\n      });\n    } else {\n      return unwrap$1(match$2(pf(next.value), {\n        onNone: () => succeed$1(unit$1),\n        onSome: map$1(a2 => flatMap$1(write(of(a2)), () => loop(iterator)))\n      }));\n    }\n  };\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(loop(empty$1()[Symbol.iterator]()))));\n}));\n\n/** @internal */\nconst finalizer = finalizer => acquireRelease(unit$2, () => finalizer);\n\n/** @internal */\nconst find = /*#__PURE__*/dual(2, (self, predicate) => {\n  const loop = readWith({\n    onInput: input => match$2(findFirst(input, predicate), {\n      onNone: () => loop,\n      onSome: n => write(of(n))\n    }),\n    onFailure: fail$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(loop)));\n});\n\n/** @internal */\nconst findEffect = /*#__PURE__*/dual(2, (self, predicate) => {\n  const loop = readWith({\n    onInput: input => pipe(findFirst$1(input, predicate), map$1(match$2({\n      onNone: () => loop,\n      onSome: n => write(of(n))\n    })), unwrap$1),\n    onFailure: fail$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(loop)));\n});\n\n/** @internal */\nconst flatMap = /*#__PURE__*/dual(args => typeof args[0] !== \"function\", (self, f, options) => {\n  const bufferSize = options?.bufferSize ?? 16;\n  if (options?.switch) {\n    return matchConcurrency(options?.concurrency, () => flatMapParSwitchBuffer(self, 1, bufferSize, f), n => flatMapParSwitchBuffer(self, n, bufferSize, f));\n  }\n  return matchConcurrency(options?.concurrency, () => new StreamImpl(concatMap(toChannel(self), as => pipe(as, map$2(a => toChannel(f(a))), reduce(unit$1, (left, right) => pipe(left, zipRight$2(right)))))), _ => new StreamImpl(pipe(toChannel(self), concatMap(writeChunk), mergeMap(out => toChannel(f(out)), options))));\n});\n\n/** @internal */\nconst matchConcurrency = (concurrency, sequential, bounded) => {\n  switch (concurrency) {\n    case undefined:\n      return sequential();\n    case \"unbounded\":\n      return bounded(Number.MAX_SAFE_INTEGER);\n    default:\n      return concurrency > 1 ? bounded(concurrency) : sequential();\n  }\n};\nconst flatMapParSwitchBuffer = /*#__PURE__*/dual(4, (self, n, bufferSize, f) => new StreamImpl(pipe(toChannel(self), concatMap(writeChunk), mergeMap(out => toChannel(f(out)), {\n  concurrency: n,\n  mergeStrategy: BufferSliding(),\n  bufferSize\n}))));\n\n/** @internal */\nconst flatten = /*#__PURE__*/dual(args => isStream(args[0]), (self, options) => flatMap(self, identity, options));\n\n/** @internal */\nconst flattenChunks = self => {\n  const flatten = readWithCause({\n    onInput: chunks => flatMap$1(writeChunk(chunks), () => flatten),\n    onFailure: failCause$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(flatten)));\n};\n\n/** @internal */\nconst flattenEffect = /*#__PURE__*/dual(args => isStream(args[0]), (self, options) => options?.unordered ? flatMap(self, a => fromEffect(a), {\n  concurrency: options.concurrency\n}) : matchConcurrency(options?.concurrency, () => mapEffectSequential(self, identity), n => new StreamImpl(pipe(toChannel(self), concatMap(writeChunk), mapOutEffectPar(identity, n), mapOut(of)))));\n\n/** @internal */\nconst flattenExitOption = self => {\n  const processChunk = (chunk, cont) => {\n    const [toEmit, rest] = pipe(chunk, splitWhere(exit => !isSuccess(exit)));\n    const next = pipe(head$1(rest), match$2({\n      onNone: () => cont,\n      onSome: match$3({\n        onFailure: cause => match$2(flipCauseOption(cause), {\n          onNone: () => unit$1,\n          onSome: failCause$1\n        }),\n        onSuccess: () => unit$1\n      })\n    }));\n    return pipe(write(pipe(toEmit, filterMap$1(exit => isSuccess(exit) ? some$1(exit.value) : none()))), flatMap$1(() => next));\n  };\n  const process = readWithCause({\n    onInput: chunk => processChunk(chunk, process),\n    onFailure: cause => failCause$1(cause),\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(process)));\n};\n\n/** @internal */\nconst flattenIterables = self => pipe(self, map(fromIterable$1), flattenChunks);\n\n/** @internal */\nconst flattenTake = self => flattenChunks(flattenExitOption(pipe(self, map(take => take.exit))));\n\n/** @internal */\nconst forever = self => new StreamImpl(repeated(toChannel(self)));\n\n/** @internal */\nconst fromAsyncIterable = (iterable, onError) => pipe(acquireRelease$1(sync$1(() => iterable[Symbol.asyncIterator]()), iterator => iterator.return ? promise(async () => iterator.return()) : unit$2), map$1(iterator => repeatEffectOption(pipe(tryPromise({\n  try: async () => iterator.next(),\n  catch: reason => some$1(onError(reason))\n}), flatMap$2(result => result.done ? fail$3(none()) : succeed$1(result.value))))), unwrapScoped);\n\n/** @internal */\nconst fromChannel = channel => new StreamImpl(channel);\n\n/** @internal */\nconst toChannel = stream => {\n  if (\"channel\" in stream) {\n    return stream.channel;\n  } else if (isEffect(stream)) {\n    return toChannel(fromEffect(stream));\n  } else {\n    throw new TypeError(`Expected a Stream.`);\n  }\n};\n\n/** @internal */\nconst fromChunk = chunk => new StreamImpl(isEmpty(chunk) ? unit$1 : write(chunk));\n\n/** @internal */\nconst fromChunkPubSub = (pubsub, options) => {\n  if (options?.scoped) {\n    const effect = map$1(subscribe(pubsub), fromChunkQueue);\n    return options.shutdown ? map$1(effect, ensuring(shutdown$1(pubsub))) : effect;\n  }\n  const stream = flatMap(scoped(subscribe(pubsub)), fromChunkQueue);\n  return options?.shutdown ? ensuring(stream, shutdown$1(pubsub)) : stream;\n};\n\n/** @internal */\nconst fromChunkQueue = (queue, options) => pipe(take$2(queue), catchAllCause$2(cause => pipe(isShutdown(queue), flatMap$2(isShutdown => isShutdown && isInterrupted(cause) ? end$1() : failCause$5(cause)))), repeatEffectChunkOption, options?.shutdown ? ensuring(shutdown(queue)) : identity);\n\n/** @internal */\nconst fromChunks = (...chunks) => pipe(fromIterable(chunks), flatMap(fromChunk));\n\n/** @internal */\nconst fromEffect = effect => pipe(effect, mapError$1(some$1), fromEffectOption);\n\n/** @internal */\nconst fromEffectOption = effect => new StreamImpl(unwrap$1(match$1(effect, {\n  onFailure: match$2({\n    onNone: () => unit$1,\n    onSome: fail$1\n  }),\n  onSuccess: a => write(of(a))\n})));\n\n/** @internal */\nconst fromPubSub = (pubsub, options) => {\n  const maxChunkSize = options?.maxChunkSize ?? DefaultChunkSize;\n  if (options?.scoped) {\n    const effect = map$1(subscribe(pubsub), queue => fromQueue(queue, {\n      maxChunkSize,\n      shutdown: true\n    }));\n    return options.shutdown ? map$1(effect, ensuring(shutdown$1(pubsub))) : effect;\n  }\n  const stream = flatMap(scoped(subscribe(pubsub)), queue => fromQueue(queue, {\n    maxChunkSize\n  }));\n  return options?.shutdown ? ensuring(stream, shutdown$1(pubsub)) : stream;\n};\n\n/** @internal */\nconst fromIterable = iterable => suspend(() => isChunk(iterable) ? fromChunk(iterable) : fromIteratorSucceed(iterable[Symbol.iterator]()));\n\n/** @internal */\nconst fromIterableEffect = effect => pipe(effect, map$1(fromIterable), unwrap);\n\n/** @internal */\nconst fromIteratorSucceed = (iterator, maxChunkSize = DefaultChunkSize) => {\n  return pipe(sync$1(() => {\n    let builder = [];\n    const loop = iterator => pipe(sync$1(() => {\n      let next = iterator.next();\n      if (maxChunkSize === 1) {\n        if (next.done) {\n          return unit$1;\n        }\n        return pipe(write(of(next.value)), flatMap$1(() => loop(iterator)));\n      }\n      builder = [];\n      let count = 0;\n      while (next.done === false) {\n        builder.push(next.value);\n        count = count + 1;\n        if (count >= maxChunkSize) {\n          break;\n        }\n        next = iterator.next();\n      }\n      if (count > 0) {\n        return pipe(write(unsafeFromArray(builder)), flatMap$1(() => loop(iterator)));\n      }\n      return unit$1;\n    }), unwrap$1);\n    return new StreamImpl(loop(iterator));\n  }), unwrap);\n};\n\n/** @internal */\nconst fromPull = effect => pipe(effect, map$1(repeatEffectChunkOption), unwrapScoped);\n\n/** @internal */\nconst fromQueue = (queue, options) => pipe(takeBetween(queue, 1, options?.maxChunkSize ?? DefaultChunkSize), catchAllCause$2(cause => pipe(isShutdown(queue), flatMap$2(isShutdown => isShutdown && isInterrupted(cause) ? end$1() : failCause$5(cause)))), repeatEffectChunkOption, options?.shutdown ? ensuring(shutdown(queue)) : identity);\n\n/** @internal */\nconst fromSchedule = schedule => pipe(driver(schedule), map$1(driver => repeatEffectOption(driver.next(void 0))), unwrap);\n\n/** @internal */\nconst fromReadableStream = (evaluate, onError) => unwrapScoped(map$1(acquireRelease$1(sync$1(() => evaluate().getReader()), reader => promise(() => reader.cancel())), reader => repeatEffectOption(flatMap$2(tryPromise({\n  try: () => reader.read(),\n  catch: reason => some$1(onError(reason))\n}), ({\n  done,\n  value\n}) => done ? fail$3(none()) : succeed$1(value)))));\n\n/** @internal */\nconst fromReadableStreamByob = (evaluate, onError, allocSize = 4096) => unwrapScoped(map$1(acquireRelease$1(sync$1(() => evaluate().getReader({\n  mode: \"byob\"\n})), reader => promise(() => reader.cancel())), reader => catchAll(forever(readChunkStreamByobReader(reader, onError, allocSize)), error => isTagged(error, \"EOF\") ? empty : fail(error))));\nconst readChunkStreamByobReader = (reader, onError, size) => {\n  const buffer = new ArrayBuffer(size);\n  return paginateEffect(0, offset => flatMap$2(tryPromise({\n    try: () => reader.read(new Uint8Array(buffer, offset, buffer.byteLength - offset)),\n    catch: reason => onError(reason)\n  }), ({\n    done,\n    value\n  }) => {\n    if (done) {\n      return fail$3({\n        _tag: \"EOF\"\n      });\n    }\n    const newOffset = offset + value.byteLength;\n    return succeed$1([value, newOffset >= buffer.byteLength ? none() : some$1(newOffset)]);\n  }));\n};\n\n/** @internal */\nconst groupAdjacentBy = /*#__PURE__*/dual(2, (self, f) => {\n  const groupAdjacentByChunk = (state, chunk) => {\n    if (isEmpty(chunk)) {\n      return [state, empty$1()];\n    }\n    const builder = [];\n    let from = 0;\n    let until = 0;\n    let key = undefined;\n    let previousChunk = empty$1();\n    switch (state._tag) {\n      case \"Some\":\n        {\n          const tuple = state.value;\n          key = tuple[0];\n          let loop = true;\n          while (loop && until < chunk.length) {\n            const input = unsafeGet$1(chunk, until);\n            const updatedKey = f(input);\n            if (!equals(key, updatedKey)) {\n              const previousChunk = tuple[1];\n              const additionalChunk = unsafeFromArray(Array.from(chunk).slice(from, until));\n              const group = appendAllNonEmpty(previousChunk, additionalChunk);\n              builder.push([key, group]);\n              key = updatedKey;\n              from = until;\n              loop = false;\n            }\n            until = until + 1;\n          }\n          if (loop) {\n            previousChunk = tuple[1];\n          }\n          break;\n        }\n      case \"None\":\n        {\n          key = f(unsafeGet$1(chunk, until));\n          until = until + 1;\n          break;\n        }\n    }\n    while (until < chunk.length) {\n      const input = unsafeGet$1(chunk, until);\n      const updatedKey = f(input);\n      if (!equals(key, updatedKey)) {\n        builder.push([key, unsafeFromArray(Array.from(chunk).slice(from, until))]);\n        key = updatedKey;\n        from = until;\n      }\n      until = until + 1;\n    }\n    const nonEmptyChunk = appendAll(previousChunk, unsafeFromArray(Array.from(chunk).slice(from, until)));\n    const output = unsafeFromArray(builder);\n    return [some$1([key, nonEmptyChunk]), output];\n  };\n  const groupAdjacent = state => readWithCause({\n    onInput: input => {\n      const [updatedState, output] = groupAdjacentByChunk(state, input);\n      return isEmpty(output) ? groupAdjacent(updatedState) : flatMap$1(write(output), () => groupAdjacent(updatedState));\n    },\n    onFailure: cause => match$2(state, {\n      onNone: () => failCause$1(cause),\n      onSome: output => flatMap$1(write(of(output)), () => failCause$1(cause))\n    }),\n    onDone: done => match$2(state, {\n      onNone: () => succeedNow(done),\n      onSome: output => flatMap$1(write(of(output)), () => succeedNow(done))\n    })\n  });\n  return new StreamImpl(pipeToOrFail(toChannel(self), groupAdjacent(none())));\n});\n\n/** @internal */\nconst grouped = /*#__PURE__*/dual(2, (self, chunkSize) => pipe(self, rechunk(chunkSize), chunks));\n\n/** @internal */\nconst groupedWithin = /*#__PURE__*/dual(3, (self, chunkSize, duration) => aggregateWithin(self, collectAllN(chunkSize), spaced(duration)));\n\n/** @internal */\nconst haltWhen = /*#__PURE__*/dual(2, (self, effect) => {\n  const writer = fiber => pipe(poll$1(fiber), map$1(match$2({\n    onNone: () => readWith({\n      onInput: input => flatMap$1(write(input), () => writer(fiber)),\n      onFailure: fail$1,\n      onDone: () => unit$1\n    }),\n    onSome: match$3({\n      onFailure: failCause$1,\n      onSuccess: () => unit$1\n    })\n  })), unwrap$1);\n  return new StreamImpl(pipe(forkScoped(effect), map$1(fiber => pipe(toChannel(self), pipeTo(writer(fiber)))), unwrapScoped$1));\n});\n\n/** @internal */\nconst haltAfter = /*#__PURE__*/dual(2, (self, duration) => pipe(self, haltWhen(sleep(duration))));\n\n/** @internal */\nconst haltWhenDeferred = /*#__PURE__*/dual(2, (self, deferred) => {\n  const writer = pipe(poll(deferred), map$1(match$2({\n    onNone: () => readWith({\n      onInput: input => pipe(write(input), flatMap$1(() => writer)),\n      onFailure: fail$1,\n      onDone: () => unit$1\n    }),\n    onSome: effect => unwrap$1(match$1(effect, {\n      onFailure: fail$1,\n      onSuccess: () => unit$1\n    }))\n  })), unwrap$1);\n  return new StreamImpl(pipe(toChannel(self), pipeTo(writer)));\n});\n\n/** @internal */\nconst identityStream = () => new StreamImpl(identityChannel());\n\n/** @internal */\nconst interleave = /*#__PURE__*/dual(2, (self, that) => pipe(self, interleaveWith(that, forever(make(true, false)))));\n\n/** @internal */\nconst interleaveWith = /*#__PURE__*/dual(3, (self, that, decider) => {\n  const producer = handoff => readWithCause({\n    onInput: value => flatMap$1(fromEffect$1(offer(handoff, of$1(value))), () => producer(handoff)),\n    onFailure: cause => fromEffect$1(offer(handoff, failCause$6(cause))),\n    onDone: () => fromEffect$1(offer(handoff, end$2))\n  });\n  return new StreamImpl(unwrapScoped$1(pipe(make$1(), zip$1(make$1()), tap$1(([left]) => pipe(toChannel(self), concatMap(writeChunk), pipeTo(producer(left)), runScoped$1, forkScoped)), tap$1(([_, right]) => pipe(toChannel(that), concatMap(writeChunk), pipeTo(producer(right)), runScoped$1, forkScoped)), map$1(([left, right]) => {\n    const process = (leftDone, rightDone) => readWithCause({\n      onInput: bool => {\n        if (bool && !leftDone) {\n          return pipe(fromEffect$1(take$1(left)), flatMap$1(match$4({\n            onEnd: () => rightDone ? unit$1 : process(true, rightDone),\n            onFailure: failCause$1,\n            onSuccess: chunk => pipe(write(chunk), flatMap$1(() => process(leftDone, rightDone)))\n          })));\n        }\n        if (!bool && !rightDone) {\n          return pipe(fromEffect$1(take$1(right)), flatMap$1(match$4({\n            onEnd: () => leftDone ? unit$1 : process(leftDone, true),\n            onFailure: failCause$1,\n            onSuccess: chunk => pipe(write(chunk), flatMap$1(() => process(leftDone, rightDone)))\n          })));\n        }\n        return process(leftDone, rightDone);\n      },\n      onFailure: failCause$1,\n      onDone: () => unit$1\n    });\n    return pipe(toChannel(decider), concatMap(writeChunk), pipeTo(process(false, false)));\n  }))));\n});\n\n/** @internal */\nconst intersperse = /*#__PURE__*/dual(2, (self, element) => new StreamImpl(pipe(toChannel(self), pipeToOrFail(suspend$2(() => {\n  const writer = isFirst => readWithCause({\n    onInput: chunk => {\n      const builder = [];\n      let flagResult = isFirst;\n      for (const output of chunk) {\n        if (flagResult) {\n          flagResult = false;\n          builder.push(output);\n        } else {\n          builder.push(element);\n          builder.push(output);\n        }\n      }\n      return pipe(write(unsafeFromArray(builder)), flatMap$1(() => writer(flagResult)));\n    },\n    onFailure: failCause$1,\n    onDone: () => unit$1\n  });\n  return writer(true);\n})))));\n\n/** @internal */\nconst intersperseAffixes = /*#__PURE__*/dual(2, (self, {\n  end,\n  middle,\n  start\n}) => pipe(make(start), concat(pipe(self, intersperse(middle))), concat(make(end))));\n\n/** @internal */\nconst interruptAfter = /*#__PURE__*/dual(2, (self, duration) => pipe(self, interruptWhen(sleep(duration))));\n\n/** @internal */\nconst interruptWhen = /*#__PURE__*/dual(2, (self, effect) => new StreamImpl(pipe(toChannel(self), interruptWhen$1(effect))));\n\n/** @internal */\nconst interruptWhenDeferred = /*#__PURE__*/dual(2, (self, deferred) => new StreamImpl(pipe(toChannel(self), interruptWhenDeferred$1(deferred))));\n\n/** @internal */\nconst iterate = (value, next) => unfold(value, a => some$1([a, next(a)]));\n\n/** @internal */\nconst make = (...as) => fromIterable(as);\n\n/** @internal */\nconst map = /*#__PURE__*/dual(2, (self, f) => new StreamImpl(pipe(toChannel(self), mapOut(map$2(f)))));\n\n/** @internal */\nconst mapAccum = /*#__PURE__*/dual(3, (self, s, f) => {\n  const accumulator = s => readWith({\n    onInput: input => {\n      const [nextS, chunk] = mapAccum$1(input, s, f);\n      return flatMap$1(write(chunk), () => accumulator(nextS));\n    },\n    onFailure: fail$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(accumulator(s))));\n});\n\n/** @internal */\nconst mapAccumEffect = /*#__PURE__*/dual(3, (self, s, f) => suspend(() => {\n  const accumulator = s => readWith({\n    onInput: input => pipe(suspend$1(() => {\n      const outputs = [];\n      const emit = output => sync$1(() => {\n        outputs.push(output);\n      });\n      return pipe(input, reduce$1(s, (s, a) => pipe(f(s, a), flatMap$2(([s, a]) => pipe(emit(a), as$1(s))))), match$1({\n        onFailure: error => {\n          if (outputs.length !== 0) {\n            return zipRight$2(write(unsafeFromArray(outputs)), fail$1(error));\n          }\n          return fail$1(error);\n        },\n        onSuccess: s => flatMap$1(write(unsafeFromArray(outputs)), () => accumulator(s))\n      }));\n    }), unwrap$1),\n    onFailure: fail$1,\n    onDone: () => unit$1\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(accumulator(s))));\n}));\n\n/** @internal */\nconst mapBoth = /*#__PURE__*/dual(2, (self, options) => pipe(self, mapError(options.onFailure), map(options.onSuccess)));\n\n/** @internal */\nconst mapChunks = /*#__PURE__*/dual(2, (self, f) => new StreamImpl(pipe(toChannel(self), mapOut(f))));\n\n/** @internal */\nconst mapChunksEffect = /*#__PURE__*/dual(2, (self, f) => new StreamImpl(pipe(toChannel(self), mapOutEffect(f))));\n\n/** @internal */\nconst mapConcat = /*#__PURE__*/dual(2, (self, f) => pipe(self, mapConcatChunk(a => fromIterable$1(f(a)))));\n\n/** @internal */\nconst mapConcatChunk = /*#__PURE__*/dual(2, (self, f) => pipe(self, mapChunks(flatMap$3(f))));\n\n/** @internal */\nconst mapConcatChunkEffect = /*#__PURE__*/dual(2, (self, f) => pipe(self, mapEffectSequential(f), mapConcatChunk(identity)));\n\n/** @internal */\nconst mapConcatEffect = /*#__PURE__*/dual(2, (self, f) => pipe(self, mapEffectSequential(a => pipe(f(a), map$1(fromIterable$1))), mapConcatChunk(identity)));\n\n/** @internal */\nconst mapEffectSequential = /*#__PURE__*/dual(2, (self, f) => {\n  const loop = iterator => {\n    const next = iterator.next();\n    if (next.done) {\n      return readWithCause({\n        onInput: elem => loop(elem[Symbol.iterator]()),\n        onFailure: failCause$1,\n        onDone: succeed$3\n      });\n    } else {\n      const value = next.value;\n      return unwrap$1(map$1(f(value), a2 => flatMap$1(write(of(a2)), () => loop(iterator))));\n    }\n  };\n  return new StreamImpl(pipe(toChannel(self), pipeTo(suspend$2(() => loop(empty$1()[Symbol.iterator]())))));\n});\n\n/** @internal */\nconst mapEffectPar = /*#__PURE__*/dual(3, (self, n, f) => new StreamImpl(pipe(toChannel(self), concatMap(writeChunk), mapOutEffectPar(f, n), mapOut(of))));\n\n/** @internal */\nconst mapError = /*#__PURE__*/dual(2, (self, f) => new StreamImpl(pipe(toChannel(self), mapError$2(f))));\n\n/** @internal */\nconst mapErrorCause = /*#__PURE__*/dual(2, (self, f) => new StreamImpl(pipe(toChannel(self), mapErrorCause$1(f))));\n\n/** @internal */\nconst merge = /*#__PURE__*/dual(args => isStream(args[1]), (self, that, options) => mergeWith(self, that, {\n  onSelf: identity,\n  onOther: identity,\n  haltStrategy: options?.haltStrategy\n}));\n\n/** @internal */\nconst mergeAll = /*#__PURE__*/dual(args => Symbol.iterator in args[0], (streams, options) => flatten(fromIterable(streams), options));\n\n/** @internal */\nconst mergeEither = /*#__PURE__*/dual(2, (self, that) => mergeWith(self, that, {\n  onSelf: left,\n  onOther: right\n}));\n\n/** @internal */\nconst mergeLeft = /*#__PURE__*/dual(2, (self, that) => pipe(self, merge(drain(that))));\n\n/** @internal */\nconst mergeRight = /*#__PURE__*/dual(2, (self, that) => pipe(drain(self), merge(that)));\n\n/** @internal */\nconst mergeWith = /*#__PURE__*/dual(3, (self, other, options) => {\n  const strategy = options.haltStrategy ? fromInput(options.haltStrategy) : Both;\n  const handler = terminate => exit => terminate || !isSuccess(exit) ?\n  // TODO: remove\n  Done(suspend$1(() => exit)) : Await(exit => suspend$1(() => exit));\n  return new StreamImpl(mergeWith$1(toChannel(map(self, options.onSelf)), {\n    other: toChannel(map(other, options.onOther)),\n    onSelfDone: handler(strategy._tag === \"Either\" || strategy._tag === \"Left\"),\n    onOtherDone: handler(strategy._tag === \"Either\" || strategy._tag === \"Right\")\n  }));\n});\n\n/** @internal */\nconst mkString = self => run(self, mkString$1);\n\n/** @internal */\nconst never = /*#__PURE__*/fromEffect(never$1);\n\n/** @internal */\nconst onError = /*#__PURE__*/dual(2, (self, cleanup) => pipe(self, catchAllCause(cause => fromEffect(pipe(cleanup(cause), zipRight$1(failCause$4(cause)))))));\n\n/** @internal */\nconst onDone = /*#__PURE__*/dual(2, (self, cleanup) => new StreamImpl(pipe(toChannel(self), ensuringWith$1(exit => isSuccess(exit) ? cleanup() : unit$2))));\n\n/** @internal */\nconst orDie = self => pipe(self, orDieWith(identity));\n\n/** @internal */\nconst orDieWith = /*#__PURE__*/dual(2, (self, f) => new StreamImpl(pipe(toChannel(self), orDieWith$1(f))));\n\n/** @internal */\nconst orElse = /*#__PURE__*/dual(2, (self, that) => new StreamImpl(pipe(toChannel(self), orElse$1(() => toChannel(that())))));\n\n/** @internal */\nconst orElseEither = /*#__PURE__*/dual(2, (self, that) => pipe(self, map(left), orElse(() => pipe(that(), map(right)))));\n\n/** @internal */\nconst orElseFail = /*#__PURE__*/dual(2, (self, error) => pipe(self, orElse(() => failSync(error))));\n\n/** @internal */\nconst orElseIfEmpty = /*#__PURE__*/dual(2, (self, element) => pipe(self, orElseIfEmptyChunk(() => of(element()))));\n\n/** @internal */\nconst orElseIfEmptyChunk = /*#__PURE__*/dual(2, (self, chunk) => pipe(self, orElseIfEmptyStream(() => new StreamImpl(write(chunk())))));\n\n/** @internal */\nconst orElseIfEmptyStream = /*#__PURE__*/dual(2, (self, stream) => {\n  const writer = readWith({\n    onInput: input => {\n      if (isEmpty(input)) {\n        return suspend$2(() => writer);\n      }\n      return pipe(write(input), zipRight$2(identityChannel()));\n    },\n    onFailure: fail$1,\n    onDone: () => suspend$2(() => toChannel(stream()))\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(writer)));\n});\n\n/** @internal */\nconst orElseSucceed = /*#__PURE__*/dual(2, (self, value) => pipe(self, orElse(() => sync(value))));\n\n/** @internal */\nconst paginate = (s, f) => paginateChunk(s, s => {\n  const page = f(s);\n  return [of(page[0]), page[1]];\n});\n\n/** @internal */\nconst paginateChunk = (s, f) => {\n  const loop = s => {\n    const page = f(s);\n    return match$2(page[1], {\n      onNone: () => zipRight$2(write(page[0]), unit$1),\n      onSome: s => flatMap$1(write(page[0]), () => loop(s))\n    });\n  };\n  return new StreamImpl(suspend$2(() => loop(s)));\n};\n\n/** @internal */\nconst paginateChunkEffect = (s, f) => {\n  const loop = s => unwrap$1(map$1(f(s), ([chunk, option]) => match$2(option, {\n    onNone: () => zipRight$2(write(chunk), unit$1),\n    onSome: s => flatMap$1(write(chunk), () => loop(s))\n  })));\n  return new StreamImpl(suspend$2(() => loop(s)));\n};\n\n/** @internal */\nconst paginateEffect = (s, f) => paginateChunkEffect(s, s => pipe(f(s), map$1(([a, s]) => [of(a), s])));\n\n/** @internal */\nconst peel = /*#__PURE__*/dual(2, (self, sink) => {\n  const OP_EMIT = \"Emit\";\n  const OP_HALT = \"Halt\";\n  const OP_END = \"End\";\n  return pipe(make$4(), flatMap$2(deferred => pipe(make$1(), map$1(handoff => {\n    const consumer = foldSink(collectLeftover(sink), {\n      onFailure: error => zipRight$3(fromEffect$2(fail$4(deferred, error)), fail$5(error)),\n      onSuccess: ([z, leftovers]) => {\n        const loop = readWithCause({\n          onInput: elements => flatMap$1(fromEffect$1(offer(handoff, {\n            _tag: OP_EMIT,\n            elements\n          })), () => loop),\n          onFailure: cause => zipRight$2(fromEffect$1(offer(handoff, {\n            _tag: OP_HALT,\n            cause\n          })), failCause$1(cause)),\n          onDone: _ => zipRight$2(fromEffect$1(offer(handoff, {\n            _tag: OP_END\n          })), unit$1)\n        });\n        return fromChannel$1(pipe(fromEffect$1(succeed$2(deferred, z)), zipRight$2(fromEffect$1(pipe(handoff, offer({\n          _tag: OP_EMIT,\n          elements: leftovers\n        })))), zipRight$2(loop)));\n      }\n    });\n    const producer = pipe(take$1(handoff), map$1(signal => {\n      switch (signal._tag) {\n        case OP_EMIT:\n          {\n            return pipe(write(signal.elements), flatMap$1(() => producer));\n          }\n        case OP_HALT:\n          {\n            return failCause$1(signal.cause);\n          }\n        case OP_END:\n          {\n            return unit$1;\n          }\n      }\n    }), unwrap$1);\n    return pipe(self, tapErrorCause(cause => failCause$3(deferred, cause)), run(consumer), forkScoped, zipRight$1(_await(deferred)), map$1(z => [z, new StreamImpl(producer)]));\n  }))), flatten$1);\n});\n\n/** @internal */\nconst partition = /*#__PURE__*/dual(args => typeof args[1] === \"function\", (self, predicate, options) => partitionEither(self, a => succeed$1(predicate(a) ? left(a) : right(a)), options));\n\n/** @internal */\nconst partitionEither = /*#__PURE__*/dual(args => typeof args[1] === \"function\", (self, predicate, options) => pipe(mapEffectSequential(self, predicate), distributedWith({\n  size: 2,\n  maximumLag: options?.bufferSize ?? 16,\n  decide: match({\n    onLeft: () => succeed$1(n => n === 0),\n    onRight: () => succeed$1(n => n === 1)\n  })\n}), flatMap$2(([queue1, queue2]) => succeed$1([filterMap(flattenExitOption(fromQueue(queue1, {\n  shutdown: true\n})), _ => match(_, {\n  onLeft: some$1,\n  onRight: none\n})), filterMap(flattenExitOption(fromQueue(queue2, {\n  shutdown: true\n})), _ => match(_, {\n  onLeft: none,\n  onRight: some$1\n}))]))));\n\n/** @internal */\nconst pipeThrough = /*#__PURE__*/dual(2, (self, sink) => new StreamImpl(pipe(toChannel(self), pipeToOrFail(toChannel$1(sink)))));\n\n/** @internal */\nconst pipeThroughChannel = /*#__PURE__*/dual(2, (self, channel) => new StreamImpl(pipe(toChannel(self), pipeTo(channel))));\n\n/** @internal */\nconst pipeThroughChannelOrFail = /*#__PURE__*/dual(2, (self, chan) => new StreamImpl(pipe(toChannel(self), pipeToOrFail(chan))));\n\n/** @internal */\nconst prepend = /*#__PURE__*/dual(2, (self, values) => new StreamImpl(zipRight$2(write(values), toChannel(self))));\n\n/** @internal */\nconst provideContext = /*#__PURE__*/dual(2, (self, context) => new StreamImpl(pipe(toChannel(self), provideContext$1(context))));\n\n/** @internal */\nconst provideLayer = /*#__PURE__*/dual(2, (self, layer) => new StreamImpl(unwrapScoped$1(pipe(build(layer), map$1(env => pipe(toChannel(self), provideContext$1(env)))))));\n\n/** @internal */\nconst provideService = /*#__PURE__*/dual(3, (self, tag, resource) => provideServiceEffect(self, tag, succeed$1(resource)));\n\n/** @internal */\nconst provideServiceEffect = /*#__PURE__*/dual(3, (self, tag, effect) => provideServiceStream(self, tag, fromEffect(effect)));\n\n/** @internal */\nconst provideServiceStream = /*#__PURE__*/dual(3, (self, tag, stream) => contextWithStream(env => flatMap(stream, service => pipe(self, provideContext(add(env, tag, service))))));\n\n/** @internal */\nconst mapInputContext = /*#__PURE__*/dual(2, (self, f) => contextWithStream(env => pipe(self, provideContext(f(env)))));\n\n/** @internal */\nconst provideSomeLayer = /*#__PURE__*/dual(2, (self, layer) =>\n// @ts-expect-error\npipe(self, provideLayer(pipe(context$1(), merge$1(layer)))));\n\n/** @internal */\nconst range = (min, max, chunkSize = DefaultChunkSize) => suspend(() => {\n  if (min > max) {\n    return empty;\n  }\n  const go = (min, max, chunkSize) => {\n    const remaining = max - min + 1;\n    if (remaining > chunkSize) {\n      return pipe(write(range$1(min, min + chunkSize - 1)), flatMap$1(() => go(min + chunkSize, max, chunkSize)));\n    }\n    return write(range$1(min, min + remaining - 1));\n  };\n  return new StreamImpl(go(min, max, chunkSize));\n});\n\n/** @internal */\nconst rechunk = /*#__PURE__*/dual(2, (self, n) => suspend(() => {\n  const target = Math.max(n, 1);\n  const process = rechunkProcess(new StreamRechunker(target), target);\n  return new StreamImpl(pipe(toChannel(self), pipeTo(process)));\n}));\n\n/** @internal */\nconst rechunkProcess = (rechunker, target) => readWithCause({\n  onInput: chunk => {\n    if (chunk.length === target && rechunker.isEmpty()) {\n      return flatMap$1(write(chunk), () => rechunkProcess(rechunker, target));\n    }\n    if (chunk.length > 0) {\n      const chunks = [];\n      let result = undefined;\n      let index = 0;\n      while (index < chunk.length) {\n        while (index < chunk.length && result === undefined) {\n          result = rechunker.write(pipe(chunk, unsafeGet$1(index)));\n          index = index + 1;\n        }\n        if (result !== undefined) {\n          chunks.push(result);\n          result = undefined;\n        }\n      }\n      return flatMap$1(writeAll(...chunks), () => rechunkProcess(rechunker, target));\n    }\n    return suspend$2(() => rechunkProcess(rechunker, target));\n  },\n  onFailure: cause => zipRight$2(rechunker.emitIfNotEmpty(), failCause$1(cause)),\n  onDone: () => rechunker.emitIfNotEmpty()\n});\n\n/** @internal */\nclass StreamRechunker {\n  builder = [];\n  pos = 0;\n  constructor(n) {\n    this.n = n;\n  }\n  isEmpty() {\n    return this.pos === 0;\n  }\n  write(elem) {\n    this.builder.push(elem);\n    this.pos += 1;\n    if (this.pos === this.n) {\n      const result = unsafeFromArray(this.builder);\n      this.builder = [];\n      this.pos = 0;\n      return result;\n    }\n    return undefined;\n  }\n  emitIfNotEmpty() {\n    if (this.pos !== 0) {\n      return write(unsafeFromArray(this.builder));\n    }\n    return unit$1;\n  }\n}\n\n/** @internal */\nconst refineOrDie = /*#__PURE__*/dual(2, (self, pf) => pipe(self, refineOrDieWith(pf, identity)));\n\n/** @internal */\nconst refineOrDieWith = /*#__PURE__*/dual(3, (self, pf, f) => new StreamImpl(catchAll$1(toChannel(self), error => match$2(pf(error), {\n  onNone: () => failCause$1(die$2(f(error))),\n  onSome: fail$1\n}))));\n\n/** @internal */\nconst repeat = /*#__PURE__*/dual(2, (self, schedule) => filterMap(repeatEither(self, schedule), _ => match(_, {\n  onLeft: none,\n  onRight: some$1\n})));\n\n/** @internal */\nconst repeatEffect = effect => repeatEffectOption(pipe(effect, mapError$1(some$1)));\n\n/** @internal */\nconst repeatEffectChunk = effect => repeatEffectChunkOption(pipe(effect, mapError$1(some$1)));\n\n/** @internal */\nconst repeatEffectChunkOption = effect => unfoldChunkEffect(effect, effect => pipe(map$1(effect, chunk => some$1([chunk, effect])), catchAll$2(match$2({\n  onNone: () => succeed$1(none()),\n  onSome: fail$3\n}))));\n\n/** @internal */\nconst repeatEffectOption = effect => repeatEffectChunkOption(pipe(effect, map$1(of)));\n\n/** @internal */\nconst repeatEither = /*#__PURE__*/dual(2, (self, schedule) => repeatWith(self, schedule, {\n  onElement: a => right(a),\n  onSchedule: left\n}));\n\n/** @internal */\nconst repeatElements = /*#__PURE__*/dual(2, (self, schedule) => filterMap(repeatElementsWith(self, schedule, {\n  onElement: a => some$1(a),\n  onSchedule: none\n}), identity));\n\n/** @internal */\nconst repeatElementsWith = /*#__PURE__*/dual(3, (self, schedule, options) => {\n  const driver$1 = pipe(driver(schedule), map$1(driver => {\n    const feed = input => match$2(head$1(input), {\n      onNone: () => loop,\n      onSome: a => zipRight$2(write(of(options.onElement(a))), step(pipe(input, drop$1(1)), a))\n    });\n    const step = (input, a) => {\n      const advance = pipe(driver.next(a), as$1(pipe(write(of(options.onElement(a))), flatMap$1(() => step(input, a)))));\n      const reset = pipe(driver.last(), orDie$1, flatMap$2(b => pipe(driver.reset(), map$1(() => pipe(write(of(options.onSchedule(b))), zipRight$2(feed(input)))))));\n      return pipe(advance, orElse$2(() => reset), unwrap$1);\n    };\n    const loop = readWith({\n      onInput: feed,\n      onFailure: fail$1,\n      onDone: () => unit$1\n    });\n    return loop;\n  }), unwrap$1);\n  return new StreamImpl(pipe(toChannel(self), pipeTo(driver$1)));\n});\n\n/** @internal */\nconst repeatValue = value => new StreamImpl(repeated(write(of(value))));\n\n/** @internal */\nconst repeatWith = /*#__PURE__*/dual(3, (self, schedule, options) => {\n  return pipe(driver(schedule), map$1(driver => {\n    const scheduleOutput = pipe(driver.last(), orDie$1, map$1(options.onSchedule));\n    const process = pipe(self, map(options.onElement), toChannel);\n    const loop = unwrap$1(match$1(driver.next(void 0), {\n      onFailure: () => unit$1,\n      onSuccess: () => pipe(process, zipRight$2(pipe(scheduleOutput, map$1(c => pipe(write(of(c)), flatMap$1(() => loop))), unwrap$1)))\n    }));\n    return new StreamImpl(pipe(process, zipRight$2(loop)));\n  }), unwrap);\n});\n\n/** @internal */\nconst repeatWithSchedule = (value, schedule) => repeatEffectWithSchedule(succeed$1(value), schedule);\n\n/** @internal */\nconst repeatEffectWithSchedule = (effect, schedule) => flatMap(fromEffect(zip$1(effect, driver(schedule))), ([a, driver]) => concat(succeed(a), unfoldEffect(a, s => matchEffect(driver.next(s), {\n  onFailure: succeed$1,\n  onSuccess: () => map$1(effect, nextA => some$1([nextA, nextA]))\n}))));\n\n/** @internal */\nconst retry = /*#__PURE__*/dual(2, (self, schedule) => unwrap(map$1(driver(schedule), driver => {\n  const loop = catchAll(self, error => unwrap(matchEffect(driver.next(error), {\n    onFailure: () => fail$3(error),\n    onSuccess: () => succeed$1(pipe(loop, tap(() => driver.reset())))\n  })));\n  return loop;\n})));\n\n/** @internal */\nconst run = /*#__PURE__*/dual(2, (self, sink) => pipe(toChannel(self), pipeToOrFail(toChannel$1(sink)), runDrain$1));\n\n/** @internal */\nconst runCollect = self => pipe(self, run(collectAll()));\n\n/** @internal */\nconst runCount = self => pipe(self, run(count));\n\n/** @internal */\nconst runDrain = self => pipe(self, run(drain$2));\n\n/** @internal */\nconst runFold = /*#__PURE__*/dual(3, (self, s, f) => pipe(self, runFoldWhileScoped(s, constTrue, f), scoped$1));\n\n/** @internal */\nconst runFoldEffect = /*#__PURE__*/dual(3, (self, s, f) => pipe(self, runFoldWhileScopedEffect(s, constTrue, f), scoped$1));\n\n/** @internal */\nconst runFoldScoped = /*#__PURE__*/dual(3, (self, s, f) => pipe(self, runFoldWhileScoped(s, constTrue, f)));\n\n/** @internal */\nconst runFoldScopedEffect = /*#__PURE__*/dual(3, (self, s, f) => pipe(self, runFoldWhileScopedEffect(s, constTrue, f)));\n\n/** @internal */\nconst runFoldWhile = /*#__PURE__*/dual(4, (self, s, cont, f) => pipe(self, runFoldWhileScoped(s, cont, f), scoped$1));\n\n/** @internal */\nconst runFoldWhileEffect = /*#__PURE__*/dual(4, (self, s, cont, f) => pipe(self, runFoldWhileScopedEffect(s, cont, f), scoped$1));\n\n/** @internal */\nconst runFoldWhileScoped = /*#__PURE__*/dual(4, (self, s, cont, f) => pipe(self, runScoped(fold(s, cont, f))));\n\n/** @internal */\nconst runFoldWhileScopedEffect = /*#__PURE__*/dual(4, (self, s, cont, f) => pipe(self, runScoped(foldEffect(s, cont, f))));\n\n/** @internal */\nconst runForEach = /*#__PURE__*/dual(2, (self, f) => pipe(self, run(forEach$1(f))));\n\n/** @internal */\nconst runForEachChunk = /*#__PURE__*/dual(2, (self, f) => pipe(self, run(forEachChunk(f))));\n\n/** @internal */\nconst runForEachChunkScoped = /*#__PURE__*/dual(2, (self, f) => pipe(self, runScoped(forEachChunk(f))));\n\n/** @internal */\nconst runForEachScoped = /*#__PURE__*/dual(2, (self, f) => pipe(self, runScoped(forEach$1(f))));\n\n/** @internal */\nconst runForEachWhile = /*#__PURE__*/dual(2, (self, f) => pipe(self, run(forEachWhile(f))));\n\n/** @internal */\nconst runForEachWhileScoped = /*#__PURE__*/dual(2, (self, f) => pipe(self, runScoped(forEachWhile(f))));\n\n/** @internal */\nconst runHead = self => pipe(self, run(head()));\n\n/** @internal */\nconst runIntoPubSub = /*#__PURE__*/dual(2, (self, pubsub) => pipe(self, runIntoQueue(pubsub)));\n\n/** @internal */\nconst runIntoPubSubScoped = /*#__PURE__*/dual(2, (self, pubsub) => pipe(self, runIntoQueueScoped(pubsub)));\n\n/** @internal */\nconst runIntoQueue = /*#__PURE__*/dual(2, (self, queue) => pipe(self, runIntoQueueScoped(queue), scoped$1));\n\n/** @internal */\nconst runIntoQueueElementsScoped = /*#__PURE__*/dual(2, (self, queue) => {\n  const writer = readWithCause({\n    onInput: input => flatMap$1(fromEffect$1(offerAll(queue, map$2(input, succeed$4))), () => writer),\n    onFailure: cause => fromEffect$1(offer$1(queue, failCause$2(map$3(cause, some$1)))),\n    onDone: () => fromEffect$1(offer$1(queue, fail$2(none())))\n  });\n  return pipe(pipeTo(toChannel(self), writer), drain$1, runScoped$1, asUnit);\n});\n\n/** @internal */\nconst runIntoQueueScoped = /*#__PURE__*/dual(2, (self, queue) => {\n  const writer = readWithCause({\n    onInput: input => flatMap$1(write(chunk(input)), () => writer),\n    onFailure: cause => write(failCause$6(cause)),\n    onDone: () => write(end$2)\n  });\n  return pipe(pipeTo(toChannel(self), writer), mapOutEffect(take => offer$1(queue, take)), drain$1, runScoped$1, asUnit);\n});\n\n/** @internal */\nconst runLast = self => pipe(self, run(last()));\n\n/** @internal */\nconst runScoped = /*#__PURE__*/dual(2, (self, sink) => pipe(toChannel(self), pipeToOrFail(toChannel$1(sink)), drain$1, runScoped$1));\n\n/** @internal */\nconst runSum = self => pipe(self, run(sum));\n\n/** @internal */\nconst scan = /*#__PURE__*/dual(3, (self, s, f) => pipe(self, scanEffect(s, (s, a) => succeed$1(f(s, a)))));\n\n/** @internal */\nconst scanReduce = /*#__PURE__*/dual(2, (self, f) => pipe(self, scanReduceEffect((a2, a) => succeed$1(f(a2, a)))));\n\n/** @internal */\nconst scanReduceEffect = /*#__PURE__*/dual(2, (self, f) => pipe(self, mapAccumEffect(none(), (option, a) => {\n  switch (option._tag) {\n    case \"None\":\n      {\n        return succeed$1([some$1(a), a]);\n      }\n    case \"Some\":\n      {\n        return pipe(f(option.value, a), map$1(b => [some$1(b), b]));\n      }\n  }\n})));\n\n/** @internal */\nconst schedule = /*#__PURE__*/dual(2, (self, schedule) => filterMap(scheduleWith(self, schedule, {\n  onElement: some$1,\n  onSchedule: none\n}), identity));\n\n/** @internal */\nconst scheduleWith = /*#__PURE__*/dual(3, (self, schedule, options) => {\n  const loop = (driver, iterator) => {\n    const next = iterator.next();\n    if (next.done) {\n      return readWithCause({\n        onInput: chunk => loop(driver, chunk[Symbol.iterator]()),\n        onFailure: failCause$1,\n        onDone: succeedNow\n      });\n    }\n    return unwrap$1(matchEffect(driver.next(next.value), {\n      onFailure: () => pipe(driver.last(), orDie$1, map$1(b => pipe(write(make$7(options.onElement(next.value), options.onSchedule(b))), flatMap$1(() => loop(driver, iterator)))), zipLeft$1(driver.reset())),\n      onSuccess: () => succeed$1(pipe(write(of(options.onElement(next.value))), flatMap$1(() => loop(driver, iterator))))\n    }));\n  };\n  return new StreamImpl(pipe(fromEffect$1(driver(schedule)), flatMap$1(driver => pipe(toChannel(self), pipeTo(loop(driver, empty$1()[Symbol.iterator]()))))));\n});\n\n/** @internal */\nconst scanEffect = /*#__PURE__*/dual(3, (self, s, f) => new StreamImpl(pipe(write(of(s)), flatMap$1(() => toChannel(pipe(self, mapAccumEffect(s, (s, a) => pipe(f(s, a), map$1(s => [s, s])))))))));\n\n/** @internal */\nconst scoped = effect => new StreamImpl(ensuring$1(scoped$2(pipe(effect, map$1(of))), unit$2));\n\n/** @internal */\nconst some = self => pipe(self, mapError(some$1), someOrFail(() => none()));\n\n/** @internal */\nconst someOrElse = /*#__PURE__*/dual(2, (self, fallback) => pipe(self, map(getOrElse(fallback))));\n\n/** @internal */\nconst someOrFail = /*#__PURE__*/dual(2, (self, error) => mapEffectSequential(self, match$2({\n  onNone: () => failSync$1(error),\n  onSome: succeed$1\n})));\n\n/** @internal */\nconst sliding = /*#__PURE__*/dual(2, (self, chunkSize) => slidingSize(self, chunkSize, 1));\n\n/** @internal */\nconst slidingSize = /*#__PURE__*/dual(3, (self, chunkSize, stepSize) => {\n  if (chunkSize <= 0 || stepSize <= 0) {\n    return die(IllegalArgumentException(\"Invalid bounds - `chunkSize` and `stepSize` must be greater than zero\"));\n  }\n  return new StreamImpl(suspend$2(() => {\n    const queue = new RingBuffer(chunkSize);\n    const emitOnStreamEnd = (queueSize, channelEnd) => {\n      if (queueSize < chunkSize) {\n        const items = queue.toChunk();\n        const result = isEmpty(items) ? empty$1() : of(items);\n        return pipe(write(result), flatMap$1(() => channelEnd));\n      }\n      const lastEmitIndex = queueSize - (queueSize - chunkSize) % stepSize;\n      if (lastEmitIndex === queueSize) {\n        return channelEnd;\n      }\n      const leftovers = queueSize - (lastEmitIndex - chunkSize + stepSize);\n      const lastItems = pipe(queue.toChunk(), takeRight$1(leftovers));\n      const result = isEmpty(lastItems) ? empty$1() : of(lastItems);\n      return pipe(write(result), flatMap$1(() => channelEnd));\n    };\n    const reader = queueSize => readWithCause({\n      onInput: input => flatMap$1(write(filterMap$1(input, (element, index) => {\n        queue.put(element);\n        const currentIndex = queueSize + index + 1;\n        if (currentIndex < chunkSize || (currentIndex - chunkSize) % stepSize > 0) {\n          return none();\n        }\n        return some$1(queue.toChunk());\n      })), () => reader(queueSize + input.length)),\n      onFailure: cause => emitOnStreamEnd(queueSize, failCause$1(cause)),\n      onDone: () => emitOnStreamEnd(queueSize, unit$1)\n    });\n    return pipe(toChannel(self), pipeTo(reader(0)));\n  }));\n});\n\n/** @internal */\nconst split = /*#__PURE__*/dual(2, (self, predicate) => {\n  const split = (leftovers, input) => {\n    const [chunk, remaining] = pipe(leftovers, appendAll(input), splitWhere(predicate));\n    if (isEmpty(chunk) || isEmpty(remaining)) {\n      return loop(pipe(chunk, appendAll(pipe(remaining, drop$1(1)))));\n    }\n    return pipe(write(of(chunk)), flatMap$1(() => split(empty$1(), pipe(remaining, drop$1(1)))));\n  };\n  const loop = leftovers => readWith({\n    onInput: input => split(leftovers, input),\n    onFailure: fail$1,\n    onDone: () => {\n      if (isEmpty(leftovers)) {\n        return unit$1;\n      }\n      if (isNone(pipe(leftovers, findFirst(predicate)))) {\n        return zipRight$2(write(of(leftovers)), unit$1);\n      }\n      return zipRight$2(split(empty$1(), leftovers), unit$1);\n    }\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(loop(empty$1()))));\n});\n\n/** @internal */\nconst splitOnChunk = /*#__PURE__*/dual(2, (self, delimiter) => {\n  const next = (leftover, delimiterIndex) => readWithCause({\n    onInput: inputChunk => {\n      let buffer;\n      const [carry, delimiterCursor] = pipe(inputChunk, reduce([pipe(leftover, getOrElse(() => empty$1())), delimiterIndex], ([carry, delimiterCursor], a) => {\n        const concatenated = pipe(carry, append(a));\n        if (delimiterCursor < delimiter.length && equals(a, pipe(delimiter, unsafeGet$1(delimiterCursor)))) {\n          if (delimiterCursor + 1 === delimiter.length) {\n            if (buffer === undefined) {\n              buffer = [];\n            }\n            buffer.push(pipe(concatenated, take$3(concatenated.length - delimiter.length)));\n            return [empty$1(), 0];\n          }\n          return [concatenated, delimiterCursor + 1];\n        }\n        return [concatenated, equals(a, pipe(delimiter, unsafeGet$1(0))) ? 1 : 0];\n      }));\n      const output = buffer === undefined ? empty$1() : unsafeFromArray(buffer);\n      return flatMap$1(write(output), () => next(isNonEmpty(carry) ? some$1(carry) : none(), delimiterCursor));\n    },\n    onFailure: cause => match$2(leftover, {\n      onNone: () => failCause$1(cause),\n      onSome: chunk => zipRight$2(write(of(chunk)), failCause$1(cause))\n    }),\n    onDone: done => match$2(leftover, {\n      onNone: () => succeed$3(done),\n      onSome: chunk => zipRight$2(write(of(chunk)), succeed$3(done))\n    })\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(next(none(), 0))));\n});\n\n/** @internal */\nconst splitLines = self => suspend(() => {\n  let stringBuilder = \"\";\n  let midCRLF = false;\n  const splitLinesChunk = chunk => {\n    const chunkBuilder = [];\n    map$2(chunk, str => {\n      if (str.length !== 0) {\n        let from = 0;\n        let indexOfCR = str.indexOf(\"\\r\");\n        let indexOfLF = str.indexOf(\"\\n\");\n        if (midCRLF) {\n          if (indexOfLF === 0) {\n            chunkBuilder.push(stringBuilder);\n            stringBuilder = \"\";\n            from = 1;\n            indexOfLF = str.indexOf(\"\\n\", from);\n          } else {\n            stringBuilder = stringBuilder + \"\\r\";\n          }\n          midCRLF = false;\n        }\n        while (indexOfCR !== -1 || indexOfLF !== -1) {\n          if (indexOfCR === -1 || indexOfLF !== -1 && indexOfLF < indexOfCR) {\n            if (stringBuilder.length === 0) {\n              chunkBuilder.push(str.substring(from, indexOfLF));\n            } else {\n              chunkBuilder.push(stringBuilder + str.substring(from, indexOfLF));\n              stringBuilder = \"\";\n            }\n            from = indexOfLF + 1;\n            indexOfLF = str.indexOf(\"\\n\", from);\n          } else {\n            if (str.length === indexOfCR + 1) {\n              midCRLF = true;\n              indexOfCR = -1;\n            } else {\n              if (indexOfLF === indexOfCR + 1) {\n                if (stringBuilder.length === 0) {\n                  chunkBuilder.push(str.substring(from, indexOfCR));\n                } else {\n                  stringBuilder = stringBuilder + str.substring(from, indexOfCR);\n                  chunkBuilder.push(stringBuilder);\n                  stringBuilder = \"\";\n                }\n                from = indexOfCR + 2;\n                indexOfCR = str.indexOf(\"\\r\", from);\n                indexOfLF = str.indexOf(\"\\n\", from);\n              } else {\n                indexOfCR = str.indexOf(\"\\r\", indexOfCR + 1);\n              }\n            }\n          }\n        }\n        if (midCRLF) {\n          stringBuilder = stringBuilder + str.substring(from, str.length - 1);\n        } else {\n          stringBuilder = stringBuilder + str.substring(from, str.length);\n        }\n      }\n    });\n    return unsafeFromArray(chunkBuilder);\n  };\n  const loop = readWithCause({\n    onInput: input => {\n      const out = splitLinesChunk(input);\n      return isEmpty(out) ? loop : flatMap$1(write(out), () => loop);\n    },\n    onFailure: cause => stringBuilder.length === 0 ? failCause$1(cause) : flatMap$1(write(of(stringBuilder)), () => failCause$1(cause)),\n    onDone: done => stringBuilder.length === 0 ? succeed$3(done) : flatMap$1(write(of(stringBuilder)), () => succeed$3(done))\n  });\n  return new StreamImpl(pipeTo(toChannel(self), loop));\n});\n\n/** @internal */\nconst succeed = value => fromChunk(of(value));\n\n/** @internal */\nconst sync = evaluate => suspend(() => fromChunk(of(evaluate())));\n\n/** @internal */\nconst suspend = stream => new StreamImpl(suspend$2(() => toChannel(stream())));\n\n/** @internal */\nconst take = /*#__PURE__*/dual(2, (self, n) => {\n  if (!Number.isInteger(n)) {\n    return die(IllegalArgumentException(`${n} must be an integer`));\n  }\n  const loop = n => readWith({\n    onInput: input => {\n      const taken = pipe(input, take$3(Math.min(n, Number.POSITIVE_INFINITY)));\n      const leftover = Math.max(0, n - taken.length);\n      const more = leftover > 0;\n      if (more) {\n        return pipe(write(taken), flatMap$1(() => loop(leftover)));\n      }\n      return write(taken);\n    },\n    onFailure: fail$1,\n    onDone: succeed$3\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(0 < n ? loop(n) : unit$1)));\n});\n\n/** @internal */\nconst takeRight = /*#__PURE__*/dual(2, (self, n) => {\n  if (n <= 0) {\n    return empty;\n  }\n  return new StreamImpl(pipe(succeed$1(new RingBuffer(n)), map$1(queue => {\n    const reader = readWith({\n      onInput: input => {\n        for (const element of input) {\n          queue.put(element);\n        }\n        return reader;\n      },\n      onFailure: fail$1,\n      onDone: () => pipe(write(queue.toChunk()), zipRight$2(unit$1))\n    });\n    return pipe(toChannel(self), pipeTo(reader));\n  }), unwrap$1));\n});\n\n/** @internal */\nconst takeUntil = /*#__PURE__*/dual(2, (self, predicate) => {\n  const loop = readWith({\n    onInput: input => {\n      const taken = pipe(input, takeWhile$1(a => !predicate(a)));\n      const last = pipe(input, drop$1(taken.length), take$3(1));\n      if (isEmpty(last)) {\n        return pipe(write(taken), flatMap$1(() => loop));\n      }\n      return write(pipe(taken, appendAll(last)));\n    },\n    onFailure: fail$1,\n    onDone: succeed$3\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(loop)));\n});\n\n/** @internal */\nconst takeUntilEffect = /*#__PURE__*/dual(2, (self, predicate) => {\n  const loop = iterator => {\n    const next = iterator.next();\n    if (next.done) {\n      return readWithCause({\n        onInput: elem => loop(elem[Symbol.iterator]()),\n        onFailure: failCause$1,\n        onDone: succeed$3\n      });\n    }\n    return pipe(predicate(next.value), map$1(bool => bool ? write(of(next.value)) : pipe(write(of(next.value)), flatMap$1(() => loop(iterator)))), unwrap$1);\n  };\n  return new StreamImpl(pipe(toChannel(self), pipeTo(loop(empty$1()[Symbol.iterator]()))));\n});\n\n/** @internal */\nconst takeWhile = /*#__PURE__*/dual(2, (self, predicate) => {\n  const loop = readWith({\n    onInput: input => {\n      const taken = pipe(input, takeWhile$1(predicate));\n      const more = taken.length === input.length;\n      if (more) {\n        return pipe(write(taken), flatMap$1(() => loop));\n      }\n      return write(taken);\n    },\n    onFailure: fail$1,\n    onDone: succeed$3\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(loop)));\n});\n\n/** @internal */\nconst tap = /*#__PURE__*/dual(2, (self, f) => mapEffectSequential(self, a => as$1(f(a), a)));\n\n/** @internal */\nconst tapBoth = /*#__PURE__*/dual(2, (self, {\n  onFailure,\n  onSuccess\n}) => pipe(self, tapError(onFailure), tap(onSuccess)));\n\n/** @internal */\nconst tapError = /*#__PURE__*/dual(2, (self, f) => catchAll(self, error => fromEffect(zipRight$1(f(error), fail$3(error)))));\n\n/** @internal */\nconst tapErrorCause = /*#__PURE__*/dual(2, (self, f) => {\n  const loop = readWithCause({\n    onInput: chunk => flatMap$1(write(chunk), () => loop),\n    onFailure: cause => fromEffect$1(zipRight$1(f(cause), failCause$4(cause))),\n    onDone: succeedNow\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeTo(loop)));\n});\n\n/** @internal */\nconst tapSink = /*#__PURE__*/dual(2, (self, sink) => pipe(fromEffect(all([bounded(1), make$4()])), flatMap(([queue, deferred]) => {\n  const right = flattenTake(fromQueue(queue, {\n    maxChunkSize: 1\n  }));\n  const loop = readWithCause({\n    onInput: chunk$1 => pipe(fromEffect$1(offer$1(queue, chunk(chunk$1))), foldCauseChannel({\n      onFailure: () => flatMap$1(write(chunk$1), () => identityChannel()),\n      onSuccess: () => flatMap$1(write(chunk$1), () => loop)\n    })),\n    onFailure: cause => pipe(fromEffect$1(offer$1(queue, failCause$6(cause))), foldCauseChannel({\n      onFailure: () => failCause$1(cause),\n      onSuccess: () => failCause$1(cause)\n    })),\n    onDone: () => pipe(fromEffect$1(offer$1(queue, end$2)), foldCauseChannel({\n      onFailure: () => unit$1,\n      onSuccess: () => unit$1\n    }))\n  });\n  return pipe(new StreamImpl(pipe(pipeTo(toChannel(self), loop), ensuring$1(zipRight$1(forkDaemon(offer$1(queue, end$2)), _await(deferred))))), merge(execute(pipe(run(right, sink), ensuring$2(zipRight$1(shutdown(queue), succeed$2(deferred, void 0)))))));\n})));\n\n/** @internal */\nconst throttle = /*#__PURE__*/dual(2, (self, options) => throttleEffect(self, {\n  ...options,\n  cost: chunk => succeed$1(options.cost(chunk))\n}));\n\n/** @internal */\nconst throttleEffect = /*#__PURE__*/dual(2, (self, options) => {\n  if (options.strategy === \"enforce\") {\n    return throttleEnforceEffect(self, options.cost, options.units, options.duration, options.burst ?? 0);\n  }\n  return throttleShapeEffect(self, options.cost, options.units, options.duration, options.burst ?? 0);\n});\nconst throttleEnforceEffect = (self, cost, units, duration, burst) => {\n  const loop = (tokens, timestampMillis) => readWithCause({\n    onInput: input => pipe(cost(input), zip$1(currentTimeMillis), map$1(([weight, currentTimeMillis]) => {\n      const elapsed = currentTimeMillis - timestampMillis;\n      const cycles = elapsed / toMillis(duration);\n      const sum = tokens + cycles * units;\n      const max = units + burst < 0 ? Number.POSITIVE_INFINITY : units + burst;\n      const available = sum < 0 ? max : Math.min(sum, max);\n      if (weight <= available) {\n        return pipe(write(input), flatMap$1(() => loop(available - weight, currentTimeMillis)));\n      }\n      return loop(tokens, timestampMillis);\n    }), unwrap$1),\n    onFailure: failCause$1,\n    onDone: () => unit$1\n  });\n  const throttled = pipe(currentTimeMillis, map$1(currentTimeMillis => loop(units, currentTimeMillis)), unwrap$1);\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(throttled)));\n};\nconst throttleShapeEffect = (self, costFn, units, duration, burst) => {\n  const loop = (tokens, timestampMillis) => readWithCause({\n    onInput: input => pipe(costFn(input), zip$1(currentTimeMillis), map$1(([weight, currentTimeMillis]) => {\n      const elapsed = currentTimeMillis - timestampMillis;\n      const cycles = elapsed / toMillis(duration);\n      const sum = tokens + cycles * units;\n      const max = units + burst < 0 ? Number.POSITIVE_INFINITY : units + burst;\n      const available = sum < 0 ? max : Math.min(sum, max);\n      const remaining = available - weight;\n      const waitCycles = remaining >= 0 ? 0 : -remaining / units;\n      const delay = millis(Math.max(0, waitCycles * toMillis(duration)));\n      if (greaterThan(delay, zero)) {\n        return pipe(fromEffect$1(sleep(delay)), zipRight$2(write(input)), flatMap$1(() => loop(remaining, currentTimeMillis)));\n      }\n      return flatMap$1(write(input), () => loop(remaining, currentTimeMillis));\n    }), unwrap$1),\n    onFailure: failCause$1,\n    onDone: () => unit$1\n  });\n  const throttled = pipe(currentTimeMillis, map$1(currentTimeMillis => loop(units, currentTimeMillis)), unwrap$1);\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(throttled)));\n};\n\n/** @internal */\nconst tick = interval => repeatWithSchedule(void 0, spaced(interval));\n\n/** @internal */\nconst timeout = /*#__PURE__*/dual(2, (self, duration) => pipe(toPull(self), map$1(timeoutFail$1({\n  onTimeout: () => none(),\n  duration\n})), fromPull));\n\n/** @internal */\nconst timeoutFail = /*#__PURE__*/dual(3, (self, error, duration) => pipe(self, timeoutTo(duration, failSync(error))));\n\n/** @internal */\nconst timeoutFailCause = /*#__PURE__*/dual(3, (self, cause, duration) => pipe(toPull(self), map$1(timeoutFailCause$1({\n  onTimeout: () => map$3(cause(), some$1),\n  duration\n})), fromPull));\n\n/** @internal */\nconst timeoutTo = /*#__PURE__*/dual(3, (self, duration, that) => {\n  const StreamTimeout = RuntimeException(\"Stream Timeout\");\n  return pipe(self, timeoutFailCause(() => die$2(StreamTimeout), duration), catchSomeCause(cause => isDieType(cause) && isRuntimeException(cause.defect) && cause.defect.message !== undefined && cause.defect.message === \"Stream Timeout\" ? some$1(that) : none()));\n});\n\n/** @internal */\nconst toPubSub = /*#__PURE__*/dual(2, (self, capacity) => pipe(acquireRelease$1(bounded$1(capacity), pubsub => shutdown$1(pubsub)), tap$1(pubsub => pipe(self, runIntoPubSubScoped(pubsub), forkScoped))));\n\n/** @internal */\nconst toPull = self => map$1(toPull$1(toChannel(self)), pull => pipe(pull, mapError$1(some$1), flatMap$2(match({\n  onLeft: () => fail$3(none()),\n  onRight: succeed$1\n}))));\n\n/** @internal */\nconst toQueue = /*#__PURE__*/dual(args => isStream(args[0]), (self, options) => tap$1(acquireRelease$1(options?.strategy === \"unbounded\" ? unbounded() : options?.strategy === \"dropping\" ? dropping(options.capacity ?? 2) : options?.strategy === \"sliding\" ? sliding$1(options.capacity ?? 2) : bounded(options?.capacity ?? 2), queue => shutdown(queue)), queue => forkScoped(runIntoQueueScoped(self, queue))));\n\n/** @internal */\nconst toQueueOfElements = /*#__PURE__*/dual(args => isStream(args[0]), (self, options) => tap$1(acquireRelease$1(bounded(options?.capacity ?? 2), queue => shutdown(queue)), queue => forkScoped(runIntoQueueElementsScoped(self, queue))));\n\n/** @internal */\nconst toReadableStream = source => {\n  let pull;\n  let scope;\n  return new ReadableStream({\n    start(controller) {\n      scope = runSync(make$6());\n      pull = pipe(toPull(source), use(scope), runSync, tap$1(chunk => sync$1(() => {\n        map$2(chunk, a => {\n          controller.enqueue(a);\n        });\n      })), tapErrorCause$1(() => close(scope, unit$3)), catchTags$1({\n        \"None\": () => sync$1(() => {\n          controller.close();\n        }),\n        \"Some\": error => sync$1(() => {\n          controller.error(error.value);\n        })\n      }), asUnit);\n    },\n    pull() {\n      return runPromise(pull);\n    },\n    cancel() {\n      return runPromise(close(scope, unit$3));\n    }\n  });\n};\n\n/** @internal */\nconst transduce = /*#__PURE__*/dual(2, (self, sink) => {\n  const newChannel = suspend$2(() => {\n    const leftovers = {\n      ref: empty$1()\n    };\n    const upstreamDone = {\n      ref: false\n    };\n    const buffer = suspend$2(() => {\n      const leftover = leftovers.ref;\n      if (isEmpty(leftover)) {\n        return readWith({\n          onInput: input => pipe(write(input), flatMap$1(() => buffer)),\n          onFailure: fail$1,\n          onDone: succeedNow\n        });\n      }\n      leftovers.ref = empty$1();\n      return pipe(writeChunk(leftover), flatMap$1(() => buffer));\n    });\n    const concatAndGet = chunk => {\n      const leftover = leftovers.ref;\n      const concatenated = appendAll(leftover, filter$1(chunk, chunk => chunk.length !== 0));\n      leftovers.ref = concatenated;\n      return concatenated;\n    };\n    const upstreamMarker = readWith({\n      onInput: input => flatMap$1(write(input), () => upstreamMarker),\n      onFailure: fail$1,\n      onDone: done => zipRight$2(sync$2(() => {\n        upstreamDone.ref = true;\n      }), succeedNow(done))\n    });\n    const transducer = pipe(sink, toChannel$1, collectElements, flatMap$1(([leftover, z]) => pipe(succeed$3([upstreamDone.ref, concatAndGet(leftover)]), flatMap$1(([done, newLeftovers]) => {\n      const nextChannel = done && isEmpty(newLeftovers) ? unit$1 : transducer;\n      return pipe(write(of(z)), flatMap$1(() => nextChannel));\n    }))));\n    return pipe(toChannel(self), pipeTo(upstreamMarker), pipeTo(buffer), pipeToOrFail(transducer));\n  });\n  return new StreamImpl(newChannel);\n});\n\n/** @internal */\nconst unfold = (s, f) => unfoldChunk(s, s => pipe(f(s), map$4(([a, s]) => [of(a), s])));\n\n/** @internal */\nconst unfoldChunk = (s, f) => {\n  const loop = s => match$2(f(s), {\n    onNone: () => unit$1,\n    onSome: ([chunk, s]) => flatMap$1(write(chunk), () => loop(s))\n  });\n  return new StreamImpl(suspend$2(() => loop(s)));\n};\n\n/** @internal */\nconst unfoldChunkEffect = (s, f) => suspend(() => {\n  const loop = s => unwrap$1(map$1(f(s), match$2({\n    onNone: () => unit$1,\n    onSome: ([chunk, s]) => flatMap$1(write(chunk), () => loop(s))\n  })));\n  return new StreamImpl(loop(s));\n});\n\n/** @internal */\nconst unfoldEffect = (s, f) => unfoldChunkEffect(s, s => pipe(f(s), map$1(map$4(([a, s]) => [of(a), s]))));\n\n/** @internal */\nconst unit = /*#__PURE__*/succeed(void 0);\n\n/** @internal */\nconst unwrap = effect => flatten(fromEffect(effect));\n\n/** @internal */\nconst unwrapScoped = effect => flatten(scoped(effect));\n\n/** @internal */\nconst updateService = /*#__PURE__*/dual(3, (self, tag, f) => pipe(self, mapInputContext(context => pipe(context, add(tag, f(pipe(context, unsafeGet(tag))))))));\n\n/** @internal */\nconst when = /*#__PURE__*/dual(2, (self, predicate) => pipe(self, whenEffect(sync$1(predicate))));\n\n/** @internal */\nconst whenCase = (evaluate, pf) => whenCaseEffect(pf)(sync$1(evaluate));\n\n/** @internal */\nconst whenCaseEffect = /*#__PURE__*/dual(2, (self, pf) => pipe(fromEffect(self), flatMap(a => pipe(pf(a), getOrElse(() => empty)))));\n\n/** @internal */\nconst whenEffect = /*#__PURE__*/dual(2, (self, effect) => pipe(fromEffect(effect), flatMap(bool => bool ? self : empty)));\n\n/** @internal */\nconst withSpan = /*#__PURE__*/dual(3, (self, name, options) => new StreamImpl(withSpan$1(toChannel(self), name, options)));\n\n/** @internal */\nconst zip = /*#__PURE__*/dual(2, (self, that) => pipe(self, zipWith(that, (a, a2) => [a, a2])));\n\n/** @internal */\nconst zipFlatten = /*#__PURE__*/dual(2, (self, that) => pipe(self, zipWith(that, (a, a2) => [...a, a2])));\n\n/** @internal */\nconst zipAll = /*#__PURE__*/dual(2, (self, options) => zipAllWith(self, {\n  other: options.other,\n  onSelf: a => [a, options.defaultOther],\n  onOther: a2 => [options.defaultSelf, a2],\n  onBoth: (a, a2) => [a, a2]\n}));\n\n/** @internal */\nconst zipAllLeft = /*#__PURE__*/dual(3, (self, other, defaultSelf) => zipAllWith(self, {\n  other,\n  onSelf: identity,\n  onOther: () => defaultSelf,\n  onBoth: a => a\n}));\n\n/** @internal */\nconst zipAllRight = /*#__PURE__*/dual(3, (self, other, defaultRight) => zipAllWith(self, {\n  other,\n  onSelf: () => defaultRight,\n  onOther: identity,\n  onBoth: (_, a2) => a2\n}));\n\n/** @internal */\nconst zipAllSortedByKey = /*#__PURE__*/dual(2, (self, options) => zipAllSortedByKeyWith(self, {\n  other: options.other,\n  onSelf: a => [a, options.defaultOther],\n  onOther: a2 => [options.defaultSelf, a2],\n  onBoth: (a, a2) => [a, a2],\n  order: options.order\n}));\n\n/** @internal */\nconst zipAllSortedByKeyLeft = /*#__PURE__*/dual(2, (self, options) => zipAllSortedByKeyWith(self, {\n  other: options.other,\n  onSelf: identity,\n  onOther: () => options.defaultSelf,\n  onBoth: a => a,\n  order: options.order\n}));\n\n/** @internal */\nconst zipAllSortedByKeyRight = /*#__PURE__*/dual(2, (self, options) => zipAllSortedByKeyWith(self, {\n  other: options.other,\n  onSelf: () => options.defaultOther,\n  onOther: identity,\n  onBoth: (_, a2) => a2,\n  order: options.order\n}));\n\n/** @internal */\nconst zipAllSortedByKeyWith = /*#__PURE__*/dual(2, (self, options) => {\n  const pull = (state, pullLeft, pullRight) => {\n    switch (state._tag) {\n      case OP_DRAIN_LEFT:\n        {\n          return pipe(pullLeft, match$1({\n            onFailure: fail$2,\n            onSuccess: leftChunk => succeed$4([map$2(leftChunk, ([k, a]) => [k, options.onSelf(a)]), DrainLeft])\n          }));\n        }\n      case OP_DRAIN_RIGHT:\n        {\n          return pipe(pullRight, match$1({\n            onFailure: fail$2,\n            onSuccess: rightChunk => succeed$4([map$2(rightChunk, ([k, a2]) => [k, options.onOther(a2)]), DrainRight])\n          }));\n        }\n      case OP_PULL_BOTH:\n        {\n          return pipe(unsome(pullLeft), zip$1(unsome(pullRight), {\n            concurrent: true\n          }), matchEffect({\n            onFailure: error => succeed$1(fail$2(some$1(error))),\n            onSuccess: ([leftOption, rightOption]) => {\n              if (isSome(leftOption) && isSome(rightOption)) {\n                if (isEmpty(leftOption.value) && isEmpty(rightOption.value)) {\n                  return pull(PullBoth, pullLeft, pullRight);\n                }\n                if (isEmpty(leftOption.value)) {\n                  return pull(PullLeft(rightOption.value), pullLeft, pullRight);\n                }\n                if (isEmpty(rightOption.value)) {\n                  return pull(PullRight(leftOption.value), pullLeft, pullRight);\n                }\n                return succeed$1(succeed$4(merge(leftOption.value, rightOption.value)));\n              }\n              if (isSome(leftOption) && isNone(rightOption)) {\n                if (isEmpty(leftOption.value)) {\n                  return pull(DrainLeft, pullLeft, pullRight);\n                }\n                return succeed$1(succeed$4([pipe(leftOption.value, map$2(([k, a]) => [k, options.onSelf(a)])), DrainLeft]));\n              }\n              if (isNone(leftOption) && isSome(rightOption)) {\n                if (isEmpty(rightOption.value)) {\n                  return pull(DrainRight, pullLeft, pullRight);\n                }\n                return succeed$1(succeed$4([pipe(rightOption.value, map$2(([k, a2]) => [k, options.onOther(a2)])), DrainRight]));\n              }\n              return succeed$1(fail$2(none()));\n            }\n          }));\n        }\n      case OP_PULL_LEFT:\n        {\n          return matchEffect(pullLeft, {\n            onFailure: match$2({\n              onNone: () => succeed$1(succeed$4([pipe(state.rightChunk, map$2(([k, a2]) => [k, options.onOther(a2)])), DrainRight])),\n              onSome: error => succeed$1(fail$2(some$1(error)))\n            }),\n            onSuccess: leftChunk => isEmpty(leftChunk) ? pull(PullLeft(state.rightChunk), pullLeft, pullRight) : succeed$1(succeed$4(merge(leftChunk, state.rightChunk)))\n          });\n        }\n      case OP_PULL_RIGHT:\n        {\n          return matchEffect(pullRight, {\n            onFailure: match$2({\n              onNone: () => succeed$1(succeed$4([map$2(state.leftChunk, ([k, a]) => [k, options.onSelf(a)]), DrainLeft])),\n              onSome: error => succeed$1(fail$2(some$1(error)))\n            }),\n            onSuccess: rightChunk => isEmpty(rightChunk) ? pull(PullRight(state.leftChunk), pullLeft, pullRight) : succeed$1(succeed$4(merge(state.leftChunk, rightChunk)))\n          });\n        }\n    }\n  };\n  const merge = (leftChunk, rightChunk) => {\n    const hasNext = (chunk, index) => index < chunk.length - 1;\n    const builder = [];\n    let state = undefined;\n    let leftIndex = 0;\n    let rightIndex = 0;\n    let leftTuple = pipe(leftChunk, unsafeGet$1(leftIndex));\n    let rightTuple = pipe(rightChunk, unsafeGet$1(rightIndex));\n    let k1 = leftTuple[0];\n    let a = leftTuple[1];\n    let k2 = rightTuple[0];\n    let a2 = rightTuple[1];\n    let loop = true;\n    while (loop) {\n      const compare = options.order(k1, k2);\n      if (compare === 0) {\n        builder.push([k1, options.onBoth(a, a2)]);\n        if (hasNext(leftChunk, leftIndex) && hasNext(rightChunk, rightIndex)) {\n          leftIndex = leftIndex + 1;\n          rightIndex = rightIndex + 1;\n          leftTuple = pipe(leftChunk, unsafeGet$1(leftIndex));\n          rightTuple = pipe(rightChunk, unsafeGet$1(rightIndex));\n          k1 = leftTuple[0];\n          a = leftTuple[1];\n          k2 = rightTuple[0];\n          a2 = rightTuple[1];\n        } else if (hasNext(leftChunk, leftIndex)) {\n          state = PullRight(pipe(leftChunk, drop$1(leftIndex + 1)));\n          loop = false;\n        } else if (hasNext(rightChunk, rightIndex)) {\n          state = PullLeft(pipe(rightChunk, drop$1(rightIndex + 1)));\n          loop = false;\n        } else {\n          state = PullBoth;\n          loop = false;\n        }\n      } else if (compare < 0) {\n        builder.push([k1, options.onSelf(a)]);\n        if (hasNext(leftChunk, leftIndex)) {\n          leftIndex = leftIndex + 1;\n          leftTuple = pipe(leftChunk, unsafeGet$1(leftIndex));\n          k1 = leftTuple[0];\n          a = leftTuple[1];\n        } else {\n          const rightBuilder = [];\n          rightBuilder.push(rightTuple);\n          while (hasNext(rightChunk, rightIndex)) {\n            rightIndex = rightIndex + 1;\n            rightTuple = pipe(rightChunk, unsafeGet$1(rightIndex));\n            rightBuilder.push(rightTuple);\n          }\n          state = PullLeft(unsafeFromArray(rightBuilder));\n          loop = false;\n        }\n      } else {\n        builder.push([k2, options.onOther(a2)]);\n        if (hasNext(rightChunk, rightIndex)) {\n          rightIndex = rightIndex + 1;\n          rightTuple = pipe(rightChunk, unsafeGet$1(rightIndex));\n          k2 = rightTuple[0];\n          a2 = rightTuple[1];\n        } else {\n          const leftBuilder = [];\n          leftBuilder.push(leftTuple);\n          while (hasNext(leftChunk, leftIndex)) {\n            leftIndex = leftIndex + 1;\n            leftTuple = pipe(leftChunk, unsafeGet$1(leftIndex));\n            leftBuilder.push(leftTuple);\n          }\n          state = PullRight(unsafeFromArray(leftBuilder));\n          loop = false;\n        }\n      }\n    }\n    return [unsafeFromArray(builder), state];\n  };\n  return combineChunks(self, options.other, PullBoth, pull);\n});\n\n/** @internal */\nconst zipAllWith = /*#__PURE__*/dual(2, (self, options) => {\n  const pull = (state, pullLeft, pullRight) => {\n    switch (state._tag) {\n      case OP_DRAIN_LEFT:\n        {\n          return matchEffect(pullLeft, {\n            onFailure: error => succeed$1(fail$2(error)),\n            onSuccess: leftChunk => succeed$1(succeed$4([map$2(leftChunk, options.onSelf), DrainLeft]))\n          });\n        }\n      case OP_DRAIN_RIGHT:\n        {\n          return matchEffect(pullRight, {\n            onFailure: error => succeed$1(fail$2(error)),\n            onSuccess: rightChunk => succeed$1(succeed$4([map$2(rightChunk, options.onOther), DrainRight]))\n          });\n        }\n      case OP_PULL_BOTH:\n        {\n          return pipe(unsome(pullLeft), zip$1(unsome(pullRight), {\n            concurrent: true\n          }), matchEffect({\n            onFailure: error => succeed$1(fail$2(some$1(error))),\n            onSuccess: ([leftOption, rightOption]) => {\n              if (isSome(leftOption) && isSome(rightOption)) {\n                if (isEmpty(leftOption.value) && isEmpty(rightOption.value)) {\n                  return pull(PullBoth, pullLeft, pullRight);\n                }\n                if (isEmpty(leftOption.value)) {\n                  return pull(PullLeft(rightOption.value), pullLeft, pullRight);\n                }\n                if (isEmpty(rightOption.value)) {\n                  return pull(PullRight(leftOption.value), pullLeft, pullRight);\n                }\n                return succeed$1(succeed$4(zip(leftOption.value, rightOption.value, options.onBoth)));\n              }\n              if (isSome(leftOption) && isNone(rightOption)) {\n                return succeed$1(succeed$4([map$2(leftOption.value, options.onSelf), DrainLeft]));\n              }\n              if (isNone(leftOption) && isSome(rightOption)) {\n                return succeed$1(succeed$4([map$2(rightOption.value, options.onOther), DrainRight]));\n              }\n              return succeed$1(fail$2(none()));\n            }\n          }));\n        }\n      case OP_PULL_LEFT:\n        {\n          return matchEffect(pullLeft, {\n            onFailure: match$2({\n              onNone: () => succeed$1(succeed$4([map$2(state.rightChunk, options.onOther), DrainRight])),\n              onSome: error => succeed$1(fail$2(some$1(error)))\n            }),\n            onSuccess: leftChunk => {\n              if (isEmpty(leftChunk)) {\n                return pull(PullLeft(state.rightChunk), pullLeft, pullRight);\n              }\n              if (isEmpty(state.rightChunk)) {\n                return pull(PullRight(leftChunk), pullLeft, pullRight);\n              }\n              return succeed$1(succeed$4(zip(leftChunk, state.rightChunk, options.onBoth)));\n            }\n          });\n        }\n      case OP_PULL_RIGHT:\n        {\n          return matchEffect(pullRight, {\n            onFailure: match$2({\n              onNone: () => succeed$1(succeed$4([map$2(state.leftChunk, options.onSelf), DrainLeft])),\n              onSome: error => succeed$1(fail$2(some$1(error)))\n            }),\n            onSuccess: rightChunk => {\n              if (isEmpty(rightChunk)) {\n                return pull(PullRight(state.leftChunk), pullLeft, pullRight);\n              }\n              if (isEmpty(state.leftChunk)) {\n                return pull(PullLeft(rightChunk), pullLeft, pullRight);\n              }\n              return succeed$1(succeed$4(zip(state.leftChunk, rightChunk, options.onBoth)));\n            }\n          });\n        }\n    }\n  };\n  const zip = (leftChunk, rightChunk, f) => {\n    const [output, either] = zipChunks(leftChunk, rightChunk, f);\n    switch (either._tag) {\n      case \"Left\":\n        {\n          if (isEmpty(either.left)) {\n            return [output, PullBoth];\n          }\n          return [output, PullRight(either.left)];\n        }\n      case \"Right\":\n        {\n          if (isEmpty(either.right)) {\n            return [output, PullBoth];\n          }\n          return [output, PullLeft(either.right)];\n        }\n    }\n  };\n  return combineChunks(self, options.other, PullBoth, pull);\n});\n\n/** @internal */\nconst zipLatest = /*#__PURE__*/dual(2, (self, that) => pipe(self, zipLatestWith(that, (a, a2) => [a, a2])));\n\n/** @internal */\nconst zipLatestWith = /*#__PURE__*/dual(3, (self, that, f) => {\n  const pullNonEmpty = pull => pipe(pull, flatMap$2(chunk => isEmpty(chunk) ? pullNonEmpty(pull) : succeed$1(chunk)));\n  return pipe(toPull(self), map$1(pullNonEmpty), zip$1(pipe(toPull(that), map$1(pullNonEmpty))), flatMap$2(([left, right]) => pipe(fromEffectOption(raceWith(left, right, {\n    onSelfDone: (leftDone, rightFiber) => pipe(suspend$1(() => leftDone), zipWith$1(join(rightFiber), (l, r) => [l, r, true])),\n    onOtherDone: (rightDone, leftFiber) => pipe(suspend$1(() => rightDone), zipWith$1(join(leftFiber), (l, r) => [r, l, false]))\n  })), flatMap(([l, r, leftFirst]) => pipe(fromEffect(make$2([unsafeLast(l), unsafeLast(r)])), flatMap(latest => pipe(fromChunk(leftFirst ? pipe(r, map$2(a2 => f(unsafeLast(l), a2))) : pipe(l, map$2(a => f(a, unsafeLast(r))))), concat(pipe(repeatEffectOption(left), mergeEither(repeatEffectOption(right)), mapEffectSequential(match({\n    onLeft: leftChunk => pipe(modify(latest, ([_, rightLatest]) => [pipe(leftChunk, map$2(a => f(a, rightLatest))), [unsafeLast(leftChunk), rightLatest]])),\n    onRight: rightChunk => pipe(modify(latest, ([leftLatest, _]) => [pipe(rightChunk, map$2(a2 => f(leftLatest, a2))), [leftLatest, unsafeLast(rightChunk)]]))\n  })), flatMap(fromChunk))))))), toPull)), fromPull);\n});\n\n/** @internal */\nconst zipLeft = /*#__PURE__*/dual(2, (self, that) => pipe(self, zipWithChunks(that, (left$1, right$1) => {\n  if (left$1.length > right$1.length) {\n    return [pipe(left$1, take$3(right$1.length)), left(pipe(left$1, take$3(right$1.length)))];\n  }\n  return [left$1, right(pipe(right$1, drop$1(left$1.length)))];\n})));\n\n/** @internal */\nconst zipRight = /*#__PURE__*/dual(2, (self, that) => pipe(self, zipWithChunks(that, (left$1, right$1) => {\n  if (left$1.length > right$1.length) {\n    return [right$1, left(pipe(left$1, take$3(right$1.length)))];\n  }\n  return [pipe(right$1, take$3(left$1.length)), right(pipe(right$1, drop$1(left$1.length)))];\n})));\n\n/** @internal */\nconst zipWith = /*#__PURE__*/dual(3, (self, that, f) => pipe(self, zipWithChunks(that, (leftChunk, rightChunk) => zipChunks(leftChunk, rightChunk, f))));\n\n/** @internal */\nconst zipWithChunks = /*#__PURE__*/dual(3, (self, that, f) => {\n  const pull = (state, pullLeft, pullRight) => {\n    switch (state._tag) {\n      case OP_PULL_BOTH$1:\n        {\n          return pipe(unsome(pullLeft), zip$1(unsome(pullRight), {\n            concurrent: true\n          }), matchEffect({\n            onFailure: error => succeed$1(fail$2(some$1(error))),\n            onSuccess: ([leftOption, rightOption]) => {\n              if (isSome(leftOption) && isSome(rightOption)) {\n                if (isEmpty(leftOption.value) && isEmpty(rightOption.value)) {\n                  return pull(PullBoth$1, pullLeft, pullRight);\n                }\n                if (isEmpty(leftOption.value)) {\n                  return pull(PullLeft$1(rightOption.value), pullLeft, pullRight);\n                }\n                if (isEmpty(rightOption.value)) {\n                  return pull(PullRight$1(leftOption.value), pullLeft, pullRight);\n                }\n                return succeed$1(succeed$4(zip(leftOption.value, rightOption.value)));\n              }\n              return succeed$1(fail$2(none()));\n            }\n          }));\n        }\n      case OP_PULL_LEFT$1:\n        {\n          return matchEffect(pullLeft, {\n            onFailure: error => succeed$1(fail$2(error)),\n            onSuccess: leftChunk => {\n              if (isEmpty(leftChunk)) {\n                return pull(PullLeft$1(state.rightChunk), pullLeft, pullRight);\n              }\n              if (isEmpty(state.rightChunk)) {\n                return pull(PullRight$1(leftChunk), pullLeft, pullRight);\n              }\n              return succeed$1(succeed$4(zip(leftChunk, state.rightChunk)));\n            }\n          });\n        }\n      case OP_PULL_RIGHT$1:\n        {\n          return matchEffect(pullRight, {\n            onFailure: error => succeed$1(fail$2(error)),\n            onSuccess: rightChunk => {\n              if (isEmpty(rightChunk)) {\n                return pull(PullRight$1(state.leftChunk), pullLeft, pullRight);\n              }\n              if (isEmpty(state.leftChunk)) {\n                return pull(PullLeft$1(rightChunk), pullLeft, pullRight);\n              }\n              return succeed$1(succeed$4(zip(state.leftChunk, rightChunk)));\n            }\n          });\n        }\n    }\n  };\n  const zip = (leftChunk, rightChunk) => {\n    const [output, either] = f(leftChunk, rightChunk);\n    switch (either._tag) {\n      case \"Left\":\n        {\n          if (isEmpty(either.left)) {\n            return [output, PullBoth$1];\n          }\n          return [output, PullRight$1(either.left)];\n        }\n      case \"Right\":\n        {\n          if (isEmpty(either.right)) {\n            return [output, PullBoth$1];\n          }\n          return [output, PullLeft$1(either.right)];\n        }\n    }\n  };\n  return pipe(self, combineChunks(that, PullBoth$1, pull));\n});\n\n/** @internal */\nconst zipWithIndex = self => pipe(self, mapAccum(0, (index, a) => [index + 1, [a, index]]));\n\n/** @internal */\nconst zipWithNext = self => {\n  const process = last => readWithCause({\n    onInput: input => {\n      const [newLast, chunk] = mapAccum$1(input, last, (prev, curr) => [some$1(curr), pipe(prev, map$4(a => [a, curr]))]);\n      const output = filterMap$1(chunk, option => isSome(option) ? some$1([option.value[0], some$1(option.value[1])]) : none());\n      return flatMap$1(write(output), () => process(newLast));\n    },\n    onFailure: failCause$1,\n    onDone: () => match$2(last, {\n      onNone: () => unit$1,\n      onSome: value => zipRight$2(write(of([value, none()])), unit$1)\n    })\n  });\n  return new StreamImpl(pipe(toChannel(self), pipeToOrFail(process(none()))));\n};\n\n/** @internal */\nconst zipWithPrevious = self => pipe(self, mapAccum(none(), (prev, curr) => [some$1(curr), [prev, curr]]));\n\n/** @internal */\nconst zipWithPreviousAndNext = self => pipe(zipWithNext(zipWithPrevious(self)), map(([[prev, curr], next]) => [prev, curr, pipe(next, map$4(tuple => tuple[1]))]));\n\n/** @internal */\nconst zipChunks = (left$1, right$1, f) => {\n  if (left$1.length > right$1.length) {\n    return [pipe(left$1, take$3(right$1.length), zipWith$2(right$1, f)), left(pipe(left$1, drop$1(right$1.length)))];\n  }\n  return [pipe(left$1, zipWith$2(pipe(right$1, take$3(left$1.length)), f)), right(pipe(right$1, drop$1(left$1.length)))];\n};\n\n// Do notation\n\n/** @internal */\nconst Do = /*#__PURE__*/succeed({});\n\n/** @internal */\nconst bind = /*#__PURE__*/dual(args => typeof args[0] !== \"string\", (self, tag, f, options) => flatMap(self, k => map(f(k), a => ({\n  ...k,\n  [tag]: a\n})), options));\n\n/* @internal */\nconst bindTo = /*#__PURE__*/dual(2, (self, tag) => map(self, a => ({\n  [tag]: a\n})));\n\n/* @internal */\nconst let_ = /*#__PURE__*/dual(3, (self, tag, f) => map(self, k => ({\n  ...k,\n  [tag]: f(k)\n})));\n\n// Circular with Channel\n\n/** @internal */\nconst channelToStream = self => {\n  return new StreamImpl(self);\n};\n\n// =============================================================================\n// encoding\n// =============================================================================\n\n/** @internal */\nconst decodeText = /*#__PURE__*/dual(args => isStream(args[0]), (self, encoding = \"utf-8\") => suspend(() => {\n  const decoder = new TextDecoder(encoding);\n  return map(self, s => decoder.decode(s));\n}));\n\n/** @internal */\nconst encodeText = self => suspend(() => {\n  const encoder = new TextEncoder();\n  return map(self, s => encoder.encode(s));\n});\n\nexport { DefaultChunkSize, Do, StreamImpl, StreamTypeId, _async, accumulate, accumulateChunks, acquireRelease, aggregate, aggregateWithin, aggregateWithinEither, as, asyncEffect, asyncInterrupt, asyncOption, asyncScoped, bind, bindTo, branchAfter, broadcast, broadcastDynamic, broadcastedQueues, broadcastedQueuesDynamic, buffer, bufferChunks, catchAll, catchAllCause, catchSome, catchSomeCause, catchTag, catchTags, changes, changesWith, changesWithEffect, channelToStream, chunks, chunksWith, combine, combineChunks, concat, concatAll, context, contextWith, contextWithEffect, contextWithStream, cross, crossLeft, crossRight, crossWith, debounce, decodeText, die, dieMessage, dieSync, distributedWith, distributedWithDynamic, distributedWithDynamicCallback, drain, drainFork, drop, dropRight, dropUntil, dropUntilEffect, dropWhile, dropWhileEffect, either, empty, encodeText, ensuring, ensuringWith, execute, fail, failCause, failCauseSync, failSync, filter, filterEffect, filterMap, filterMapEffect, filterMapWhile, filterMapWhileEffect, finalizer, find, findEffect, flatMap, flatten, flattenChunks, flattenEffect, flattenExitOption, flattenIterables, flattenTake, forever, fromAsyncIterable, fromChannel, fromChunk, fromChunkPubSub, fromChunkQueue, fromChunks, fromEffect, fromEffectOption, fromIterable, fromIterableEffect, fromIteratorSucceed, fromPubSub, fromPull, fromQueue, fromReadableStream, fromReadableStreamByob, fromSchedule, groupAdjacentBy, grouped, groupedWithin, haltAfter, haltWhen, haltWhenDeferred, identityStream, interleave, interleaveWith, interruptAfter, interruptWhen, interruptWhenDeferred, intersperse, intersperseAffixes, isStream, iterate, let_, make, map, mapAccum, mapAccumEffect, mapBoth, mapChunks, mapChunksEffect, mapConcat, mapConcatChunk, mapConcatChunkEffect, mapConcatEffect, mapEffectPar, mapEffectSequential, mapError, mapErrorCause, mapInputContext, matchConcurrency, merge, mergeAll, mergeEither, mergeLeft, mergeRight, mergeWith, mkString, never, onDone, onError, orDie, orDieWith, orElse, orElseEither, orElseFail, orElseIfEmpty, orElseIfEmptyChunk, orElseIfEmptyStream, orElseSucceed, paginate, paginateChunk, paginateChunkEffect, paginateEffect, partition, partitionEither, peel, pipeThrough, pipeThroughChannel, pipeThroughChannelOrFail, prepend, provideContext, provideLayer, provideService, provideServiceEffect, provideServiceStream, provideSomeLayer, range, rechunk, refineOrDie, refineOrDieWith, repeat, repeatEffect, repeatEffectChunk, repeatEffectChunkOption, repeatEffectOption, repeatEffectWithSchedule, repeatEither, repeatElements, repeatElementsWith, repeatValue, repeatWith, repeatWithSchedule, retry, run, runCollect, runCount, runDrain, runFold, runFoldEffect, runFoldScoped, runFoldScopedEffect, runFoldWhile, runFoldWhileEffect, runFoldWhileScoped, runFoldWhileScopedEffect, runForEach, runForEachChunk, runForEachChunkScoped, runForEachScoped, runForEachWhile, runForEachWhileScoped, runHead, runIntoPubSub, runIntoPubSubScoped, runIntoQueue, runIntoQueueElementsScoped, runIntoQueueScoped, runLast, runScoped, runSum, scan, scanEffect, scanReduce, scanReduceEffect, schedule, scheduleWith, scoped, sliding, slidingSize, some, someOrElse, someOrFail, split, splitLines, splitOnChunk, succeed, suspend, sync, take, takeRight, takeUntil, takeUntilEffect, takeWhile, tap, tapBoth, tapError, tapErrorCause, tapSink, throttle, throttleEffect, tick, timeout, timeoutFail, timeoutFailCause, timeoutTo, toChannel, toPubSub, toPull, toQueue, toQueueOfElements, toReadableStream, transduce, unfold, unfoldChunk, unfoldChunkEffect, unfoldEffect, unit, unwrap, unwrapScoped, updateService, when, whenCase, whenCaseEffect, whenEffect, withSpan, zip, zipAll, zipAllLeft, zipAllRight, zipAllSortedByKey, zipAllSortedByKeyLeft, zipAllSortedByKeyRight, zipAllSortedByKeyWith, zipAllWith, zipFlatten, zipLatest, zipLatestWith, zipLeft, zipRight, zipWith, zipWithChunks, zipWithIndex, zipWithNext, zipWithPrevious, zipWithPreviousAndNext };\n","import { ConfigTypeId as ConfigTypeId$1, all as all$1, array as array$1, boolean as boolean$1, chunk as chunk$1, date as date$1, fail as fail$1, number as number$1, integer as integer$1, logLevel as logLevel$1, isConfig as isConfig$1, map as map$1, mapAttempt as mapAttempt$1, mapOrFail as mapOrFail$1, nested as nested$1, orElse as orElse$1, orElseIf as orElseIf$1, option as option$1, primitive as primitive$1, repeat as repeat$1, secret as secret$1, hashSet as hashSet$1, string as string$1, succeed as succeed$1, suspend as suspend$1, sync as sync$1, hashMap as hashMap$1, unwrap as unwrap$1, validate as validate$1, withDefault as withDefault$1, withDescription as withDescription$1, zip as zip$1, zipWith as zipWith$1 } from '../../internal/config.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst ConfigTypeId = ConfigTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * A `Config` describes the structure of some configuration data.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Constructs a config from a tuple / struct / arguments of configs.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst all = all$1;\n\n/**\n * Constructs a config for an array of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst array = array$1;\n\n/**\n * Constructs a config for a boolean value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst boolean = boolean$1;\n\n/**\n * Constructs a config for a sequence of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst chunk = chunk$1;\n\n/**\n * Constructs a config for a date value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst date = date$1;\n\n/**\n * Constructs a config that fails with the specified message.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fail = fail$1;\n\n/**\n * Constructs a config for a float value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst number = number$1;\n\n/**\n * Constructs a config for a integer value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst integer = integer$1;\n\n/**\n * Constructs a config for a `LogLevel` value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst logLevel = logLevel$1;\n\n/**\n * This function returns `true` if the specified value is an `Config` value,\n * `false` otherwise.\n *\n * This function can be useful for checking the type of a value before\n * attempting to operate on it as an `Config` value. For example, you could\n * use `isConfig` to check the type of a value before using it as an\n * argument to a function that expects an `Config` value.\n *\n * @param u - The value to check for being a `Config` value.\n *\n * @returns `true` if the specified value is a `Config` value, `false`\n * otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nconst isConfig = isConfig$1;\n\n/**\n * Returns a  config whose structure is the same as this one, but which produces\n * a different value, constructed using the specified function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst map = map$1;\n\n/**\n * Returns a config whose structure is the same as this one, but which may\n * produce a different value, constructed using the specified function, which\n * may throw exceptions that will be translated into validation errors.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mapAttempt = mapAttempt$1;\n\n/**\n * Returns a new config whose structure is the samea as this one, but which\n * may produce a different value, constructed using the specified fallible\n * function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mapOrFail = mapOrFail$1;\n\n/**\n * Returns a config that has this configuration nested as a property of the\n * specified name.\n *\n * @since 2.0.0\n * @category utils\n */\nconst nested = nested$1;\n\n/**\n * Returns a config whose structure is preferentially described by this\n * config, but which falls back to the specified config if there is an issue\n * reading from this config.\n *\n * @since 2.0.0\n * @category utils\n */\nconst orElse = orElse$1;\n\n/**\n * Returns configuration which reads from this configuration, but which falls\n * back to the specified configuration if reading from this configuration\n * fails with an error satisfying the specified predicate.\n *\n * @since 2.0.0\n * @category utils\n */\nconst orElseIf = orElseIf$1;\n\n/**\n * Returns an optional version of this config, which will be `None` if the\n * data is missing from configuration, and `Some` otherwise.\n *\n * @since 2.0.0\n * @category utils\n */\nconst option = option$1;\n\n/**\n * Constructs a new primitive config.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst primitive = primitive$1;\n\n/**\n * Returns a config that describes a sequence of values, each of which has the\n * structure of this config.\n *\n * @since 2.0.0\n * @category utils\n */\nconst repeat = repeat$1;\n\n/**\n * Constructs a config for a secret value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst secret = secret$1;\n\n/**\n * Constructs a config for a sequence of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst hashSet = hashSet$1;\n\n/**\n * Constructs a config for a string value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst string = string$1;\n\n/**\n * Constructs a config which contains the specified value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeed = succeed$1;\n\n/**\n * Lazily constructs a config.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst suspend = suspend$1;\n\n/**\n * Constructs a config which contains the specified lazy value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst sync = sync$1;\n\n/**\n * Constructs a config for a sequence of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst hashMap = hashMap$1;\n\n/**\n * Constructs a config from some configuration wrapped with the `Wrap<A>` utility type.\n *\n * For example:\n *\n * ```\n * import { Config, unwrap } from \"./Config\"\n *\n * interface Options { key: string }\n *\n * const makeConfig = (config: Config.Wrap<Options>): Config<Options> => unwrap(config)\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unwrap = unwrap$1;\n\n/**\n * Returns a config that describes the same structure as this one, but which\n * performs validation during loading.\n *\n * @since 2.0.0\n * @category utils\n */\nconst validate = validate$1;\n\n/**\n * Returns a config that describes the same structure as this one, but has the\n * specified default value in case the information cannot be found.\n *\n * @since 2.0.0\n * @category utils\n */\nconst withDefault = withDefault$1;\n\n/**\n * Adds a description to this configuration, which is intended for humans.\n *\n * @since 2.0.0\n * @category utils\n */\nconst withDescription = withDescription$1;\n\n/**\n * Returns a config that is the composition of this config and the specified\n * config.\n *\n * @since 2.0.0\n * @category utils\n */\nconst zip = zip$1;\n\n/**\n * Returns a config that is the composes this config and the specified config\n * using the provided function.\n *\n * @since 2.0.0\n * @category utils\n */\nconst zipWith = zipWith$1;\n\nexport { ConfigTypeId, all, array, boolean, chunk, date, fail, hashMap, hashSet, integer, isConfig, logLevel, map, mapAttempt, mapOrFail, nested, number, option, orElse, orElseIf, primitive, repeat, secret, string, succeed, suspend, sync, unwrap, validate, withDefault, withDescription, zip, zipWith };\n","import { ConfigSecretTypeId as ConfigSecretTypeId$1, isConfigSecret as isConfigSecret$1, make as make$1, fromChunk as fromChunk$1, fromString as fromString$1, value as value$1, unsafeWipe as unsafeWipe$1 } from '../../internal/configSecret.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst ConfigSecretTypeId = ConfigSecretTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isConfigSecret = isConfigSecret$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst fromChunk = fromChunk$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst fromString = fromString$1;\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst value = value$1;\n\n/**\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeWipe = unsafeWipe$1;\n\nexport { ConfigSecretTypeId, fromChunk, fromString, isConfigSecret, make, unsafeWipe, value };\n","import { fail } from '../../Effect/dist/effect-Effect.esm.js';\nimport { StructuralCommitPrototype } from '../../Effectable/dist/effect-Effectable.esm.js';\nimport { struct as struct$1, StructProto, ArrayProto, Structural as Structural$1 } from '../../internal/Data.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * `Case` represents a datatype similar to a case class in Scala. Namely, a\n * datatype created using `Case` will, by default, provide an implementation\n * for a constructor, `Hash`, and `Equal`.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @example\n * import * as Data from \"effect/Data\"\n * import * as Equal from \"effect/Equal\"\n *\n * const alice = Data.struct({ name: \"Alice\", age: 30 })\n *\n * const bob = Data.struct({ name: \"Bob\", age: 40 })\n *\n * assert.deepStrictEqual(Equal.equals(alice, alice), true)\n * assert.deepStrictEqual(Equal.equals(alice, Data.struct({ name: \"Alice\", age: 30 })), true)\n *\n * assert.deepStrictEqual(Equal.equals(alice, { name: \"Alice\", age: 30 }), false)\n * assert.deepStrictEqual(Equal.equals(alice, bob), false)\n *\n * @category constructors\n * @since 2.0.0\n */\nconst struct = struct$1;\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nconst unsafeStruct = as => Object.setPrototypeOf(as, StructProto);\n\n/**\n * @example\n * import * as Data from \"effect/Data\"\n * import * as Equal from \"effect/Equal\"\n *\n * const alice = Data.tuple(\"Alice\", 30)\n *\n * const bob = Data.tuple(\"Bob\", 40)\n *\n * assert.deepStrictEqual(Equal.equals(alice, alice), true)\n * assert.deepStrictEqual(Equal.equals(alice, Data.tuple(\"Alice\", 30)), true)\n *\n * assert.deepStrictEqual(Equal.equals(alice, [\"Alice\", 30]), false)\n * assert.deepStrictEqual(Equal.equals(alice, bob), false)\n *\n * @category constructors\n * @since 2.0.0\n */\nconst tuple = (...as) => unsafeArray(as);\n\n/**\n * @example\n * import * as Data from \"effect/Data\"\n * import * as Equal from \"effect/Equal\"\n *\n * const alice = Data.struct({ name: \"Alice\", age: 30 })\n * const bob = Data.struct({ name: \"Bob\", age: 40 })\n *\n * const persons = Data.array([alice, bob])\n *\n * assert.deepStrictEqual(\n *   Equal.equals(\n *     persons,\n *     Data.array([\n *       Data.struct({ name: \"Alice\", age: 30 }),\n *       Data.struct({ name: \"Bob\", age: 40 })\n *     ])\n *   ),\n *   true\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nconst array = as => unsafeArray(as.slice(0));\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nconst unsafeArray = as => Object.setPrototypeOf(as, ArrayProto);\nconst _case = () => args => args === undefined ? Object.create(StructProto) : struct(args);\n\n/**\n * Provides a tagged constructor for the specified `Case`.\n *\n * @example\n * import * as Data from \"effect/Data\"\n *\n * interface Person extends Data.Case {\n *   readonly _tag: \"Person\" // the tag\n *   readonly name: string\n * }\n *\n * const Person = Data.tagged<Person>(\"Person\")\n *\n * const mike = Person({ name: \"Mike\" })\n *\n * assert.deepEqual(mike, { _tag: \"Person\", name: \"Mike\" })\n *\n * @since 2.0.0\n * @category constructors\n */\nconst tagged = tag => args => {\n  const value = args === undefined ? Object.create(StructProto) : struct(args);\n  value._tag = tag;\n  return value;\n};\n\n/**\n * Provides a constructor for a Case Class.\n *\n * @example\n * import * as Data from \"effect/Data\"\n * import * as Equal from \"effect/Equal\"\n *\n * class Person extends Data.Class<{ readonly name: string }> {}\n *\n * // Creating instances of Person\n * const mike1 = new Person({ name: \"Mike\" })\n * const mike2 = new Person({ name: \"Mike\" })\n * const john = new Person({ name: \"John\" })\n *\n * // Checking equality\n * assert.deepStrictEqual(Equal.equals(mike1, mike2), true)\n * assert.deepStrictEqual(Equal.equals(mike1, john), false)\n *\n * @since 2.0.0\n * @category constructors\n */\nconst Class = Structural$1;\n\n/**\n * Provides a Tagged constructor for a Case Class.\n *\n * @example\n * import * as Data from \"effect/Data\"\n * import * as Equal from \"effect/Equal\"\n *\n * class Person extends Data.TaggedClass(\"Person\")<{ readonly name: string }> {}\n *\n * // Creating instances of Person\n * const mike1 = new Person({ name: \"Mike\" })\n * const mike2 = new Person({ name: \"Mike\" })\n * const john = new Person({ name: \"John\" })\n *\n * // Checking equality\n * assert.deepStrictEqual(Equal.equals(mike1, mike2), true)\n * assert.deepStrictEqual(Equal.equals(mike1, john), false)\n *\n * assert.deepStrictEqual(mike1._tag, \"Person\")\n *\n * @since 2.0.0\n * @category constructors\n */\nconst TaggedClass = tag => {\n  class Base extends Class {\n    _tag = tag;\n  }\n  return Base;\n};\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst Structural = Structural$1;\n\n/**\n * Create a tagged enum data type, which is a union of `Data` structs.\n *\n * ```ts\n * import * as Data from \"effect/Data\"\n *\n * type HttpError = Data.TaggedEnum<{\n *   BadRequest: { readonly status: 400, readonly message: string }\n *   NotFound: { readonly status: 404, readonly message: string }\n * }>\n *\n * // Equivalent to:\n * type HttpErrorPlain =\n *   | Data.Data<{\n *     readonly _tag: \"BadRequest\"\n *     readonly status: 400\n *     readonly message: string\n *   }>\n *   | Data.Data<{\n *     readonly _tag: \"NotFound\"\n *     readonly status: 404\n *     readonly message: string\n *   }>\n * ```\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * Create a constructor for a tagged union of `Data` structs.\n *\n * You can also pass a `TaggedEnum.WithGenerics` if you want to add generics to\n * the constructor.\n *\n * @example\n * import * as Data from \"effect/Data\"\n *\n * const { BadRequest, NotFound } = Data.taggedEnum<\n *   | Data.Data<{ readonly _tag: \"BadRequest\"; readonly status: 400; readonly message: string }>\n *   | Data.Data<{ readonly _tag: \"NotFound\"; readonly status: 404; readonly message: string }>\n * >()\n *\n * const notFound = NotFound({ status: 404, message: \"Not Found\" })\n *\n * @example\n * import * as Data from \"effect/Data\"\n *\n * type MyResult<E, A> = Data.TaggedEnum<{\n *   Failure: { readonly error: E }\n *   Success: { readonly value: A }\n * }>\n * interface MyResultDefinition extends Data.TaggedEnum.WithGenerics<2> {\n *   readonly taggedEnum: MyResult<this[\"A\"], this[\"B\"]>\n * }\n * const { Failure, Success } = Data.taggedEnum<MyResultDefinition>()\n *\n * const success = Success({ value: 1 })\n *\n * @category constructors\n * @since 2.0.0\n */\nconst taggedEnum = () => new Proxy({}, {\n  get(_target, tag, _receiver) {\n    return tagged(tag);\n  }\n});\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst YieldableErrorProto = {\n  ...StructuralCommitPrototype,\n  commit() {\n    return fail(this);\n  },\n  toString() {\n    return `${this.name}: ${this.message}`;\n  }\n};\n\n/**\n * Provides a constructor for a Case Class.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst Error = /*#__PURE__*/function () {\n  class Base extends globalThis.Error {\n    constructor(args) {\n      super();\n      Object.assign(this, args);\n    }\n  }\n  Object.assign(Base.prototype, YieldableErrorProto);\n  return Base;\n}();\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst TaggedError = tag => {\n  class Base extends Error {\n    _tag = tag;\n  }\n  Base.prototype.name = tag;\n  return Base;\n};\n\nexport { Class, Error, Structural, TaggedClass, TaggedError, array, _case as case, struct, tagged, taggedEnum, tuple, unsafeArray, unsafeStruct };\n","import { isInterruptedOnly } from '../Cause/dist/effect-Cause.esm.js';\nimport { map as map$2, of, unsafeFromArray } from '../Chunk/dist/effect-Chunk.esm.js';\nimport { make as make$1, await as _await, succeed as succeed$1 } from '../Deferred/dist/effect-Deferred.esm.js';\nimport { succeed, as, gen, acquireRelease, flatMap as flatMap$1, zipRight, map as map$1, forkScoped, sync, forEach, catchSomeCause, unit } from '../Effect/dist/effect-Effect.esm.js';\nimport { succeed as succeed$2, map as map$4 } from '../Exit/dist/effect-Exit.esm.js';\nimport { dual, pipe } from '../Function/dist/effect-Function.esm.js';\nimport { match, fromNullable, map as map$3, some, none } from '../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../Predicate/dist/effect-Predicate.esm.js';\nimport { shutdown, bounded, offer, DequeueTypeId, capacity, size, awaitShutdown, isShutdown, isFull, isEmpty, take, takeAll, takeUpTo, takeBetween, takeN, poll, unbounded } from '../Queue/dist/effect-Queue.esm.js';\nimport { make as make$2, update, get } from '../Ref/dist/effect-Ref.esm.js';\nimport { drain } from './channel.esm.js';\nimport { runScoped } from './channel/channelExecutor.esm.js';\nimport { pipeTo, readWithCause, flatMap as flatMap$2, fromEffect as fromEffect$1 } from './core-stream.esm.js';\nimport { flatMap, flattenTake, fromQueue, filterEffect, map, zipWithIndex, unwrapScoped, mapEffectSequential, distributedWithDynamicCallback, flattenExitOption, isStream, matchConcurrency, fromEffect, mapEffectPar, toChannel } from './stream.esm.js';\nimport { TakeImpl, of as of$1, chunk, failCause, end } from './take.esm.js';\n\n/** @internal */\nconst GroupBySymbolKey = \"effect/GroupBy\";\n\n/** @internal */\nconst GroupByTypeId = /*#__PURE__*/Symbol.for(GroupBySymbolKey);\n\n/** @internal */\nconst groupByVariance = {\n  _R: _ => _,\n  _E: _ => _,\n  _K: _ => _,\n  _V: _ => _\n};\n\n/** @internal */\nconst isGroupBy = u => hasProperty(u, GroupByTypeId);\n\n/** @internal */\nconst evaluate = /*#__PURE__*/dual(args => isGroupBy(args[0]), (self, f, options) => flatMap(self.grouped, ([key, queue]) => f(key, flattenTake(fromQueue(queue, {\n  shutdown: true\n}))), {\n  concurrency: \"unbounded\",\n  bufferSize: options?.bufferSize ?? 16\n}));\n\n/** @internal */\nconst filter = /*#__PURE__*/dual(2, (self, predicate) => make(pipe(self.grouped, filterEffect(tuple => {\n  if (predicate(tuple[0])) {\n    return pipe(succeed(tuple), as(true));\n  }\n  return pipe(shutdown(tuple[1]), as(false));\n}))));\n\n/** @internal */\nconst first = /*#__PURE__*/dual(2, (self, n) => make(pipe(zipWithIndex(self.grouped), filterEffect(tuple => {\n  const index = tuple[1];\n  const queue = tuple[0][1];\n  if (index < n) {\n    return pipe(succeed(tuple), as(true));\n  }\n  return pipe(shutdown(queue), as(false));\n}), map(tuple => tuple[0]))));\n\n/** @internal */\nconst make = grouped => ({\n  [GroupByTypeId]: groupByVariance,\n  pipe() {\n    return pipeArguments(this, arguments);\n  },\n  grouped\n});\n\n// Circular with Stream\n\n/** @internal */\nconst groupBy = /*#__PURE__*/dual(args => isStream(args[0]), (self, f, options) => make(unwrapScoped(gen(function* ($) {\n  const decider = yield* $(make$1());\n  const output = yield* $(acquireRelease(bounded(options?.bufferSize ?? 16), queue => shutdown(queue)));\n  const ref = yield* $(make$2(new Map()));\n  const add = yield* $(mapEffectSequential(self, f), distributedWithDynamicCallback(options?.bufferSize ?? 16, ([key, value]) => flatMap$1(_await(decider), f => f(key, value)), exit => offer(output, exit)));\n  yield* $(succeed$1(decider, (key, _) => pipe(get(ref), map$1(map => fromNullable(map.get(key))), flatMap$1(match({\n    onNone: () => flatMap$1(add, ([index, queue]) => zipRight(update(ref, map => map.set(key, index)), pipe(offer(output, succeed$2([key, mapDequeue(queue, exit => new TakeImpl(pipe(exit, map$4(tuple => of(tuple[1])))))])), as(n => n === index)))),\n    onSome: index => succeed(n => n === index)\n  })))));\n  return flattenExitOption(fromQueue(output, {\n    shutdown: true\n  }));\n}))));\n\n/** @internal */\nconst mapEffectOptions = /*#__PURE__*/dual(args => typeof args[0] !== \"function\", (self, f, options) => {\n  if (options?.key) {\n    return evaluate(groupByKey(self, options.key, {\n      bufferSize: options.bufferSize\n    }), (_, s) => mapEffectSequential(s, f));\n  }\n  return matchConcurrency(options?.concurrency, () => mapEffectSequential(self, f), n => options?.unordered ? flatMap(self, a => fromEffect(f(a)), {\n    concurrency: n\n  }) : mapEffectPar(self, n, f));\n});\n\n/** @internal */\nconst bindEffect = /*#__PURE__*/dual(args => typeof args[0] !== \"string\", (self, tag, f, options) => mapEffectOptions(self, k => map$1(f(k), a => ({\n  ...k,\n  [tag]: a\n})), options));\nconst mapDequeue = (dequeue, f) => new MapDequeue(dequeue, f);\nclass MapDequeue {\n  [DequeueTypeId] = {\n    _Out: _ => _\n  };\n  constructor(dequeue, f) {\n    this.dequeue = dequeue;\n    this.f = f;\n  }\n  capacity() {\n    return capacity(this.dequeue);\n  }\n  size() {\n    return size(this.dequeue);\n  }\n  unsafeSize() {\n    return this.dequeue.unsafeSize();\n  }\n  awaitShutdown() {\n    return awaitShutdown(this.dequeue);\n  }\n  isActive() {\n    return this.dequeue.isActive();\n  }\n  isShutdown() {\n    return isShutdown(this.dequeue);\n  }\n  shutdown() {\n    return shutdown(this.dequeue);\n  }\n  isFull() {\n    return isFull(this.dequeue);\n  }\n  isEmpty() {\n    return isEmpty(this.dequeue);\n  }\n  take() {\n    return pipe(take(this.dequeue), map$1(a => this.f(a)));\n  }\n  takeAll() {\n    return pipe(takeAll(this.dequeue), map$1(map$2(a => this.f(a))));\n  }\n  takeUpTo(max) {\n    return pipe(takeUpTo(this.dequeue, max), map$1(map$2(a => this.f(a))));\n  }\n  takeBetween(min, max) {\n    return pipe(takeBetween(this.dequeue, min, max), map$1(map$2(a => this.f(a))));\n  }\n  takeN(n) {\n    return pipe(takeN(this.dequeue, n), map$1(map$2(a => this.f(a))));\n  }\n  poll() {\n    return pipe(poll(this.dequeue), map$1(map$3(a => this.f(a))));\n  }\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n}\n\n/** @internal */\nconst groupByKey = /*#__PURE__*/dual(args => typeof args[0] !== \"function\", (self, f, options) => {\n  const loop = (map, outerQueue) => readWithCause({\n    onInput: input => flatMap$2(fromEffect$1(forEach(groupByIterable(input, f), ([key, values]) => {\n      const innerQueue = map.get(key);\n      if (innerQueue === undefined) {\n        return pipe(bounded(options?.bufferSize ?? 16), flatMap$1(innerQueue => pipe(sync(() => {\n          map.set(key, innerQueue);\n        }), zipRight(offer(outerQueue, of$1([key, innerQueue]))), zipRight(pipe(offer(innerQueue, chunk(values)), catchSomeCause(cause => isInterruptedOnly(cause) ? some(unit) : none()))))));\n      }\n      return catchSomeCause(offer(innerQueue, chunk(values)), cause => isInterruptedOnly(cause) ? some(unit) : none());\n    }, {\n      discard: true\n    })), () => loop(map, outerQueue)),\n    onFailure: cause => fromEffect$1(offer(outerQueue, failCause(cause))),\n    onDone: () => pipe(fromEffect$1(pipe(forEach(map.entries(), ([_, innerQueue]) => pipe(offer(innerQueue, end), catchSomeCause(cause => isInterruptedOnly(cause) ? some(unit) : none())), {\n      discard: true\n    }), zipRight(offer(outerQueue, end)))))\n  });\n  return make(unwrapScoped(pipe(sync(() => new Map()), flatMap$1(map => pipe(acquireRelease(unbounded(), queue => shutdown(queue)), flatMap$1(queue => pipe(self, toChannel, pipeTo(loop(map, queue)), drain, runScoped, forkScoped, as(flattenTake(fromQueue(queue, {\n    shutdown: true\n  }))))))))));\n});\n\n/**\n * A variant of `groupBy` that retains the insertion order of keys.\n *\n * @internal\n */\nconst groupByIterable = /*#__PURE__*/dual(2, (iterable, f) => {\n  const builder = [];\n  const iterator = iterable[Symbol.iterator]();\n  const map = new Map();\n  let next;\n  while ((next = iterator.next()) && !next.done) {\n    const value = next.value;\n    const key = f(value);\n    if (map.has(key)) {\n      const innerBuilder = map.get(key);\n      innerBuilder.push(value);\n    } else {\n      const innerBuilder = [value];\n      builder.push([key, innerBuilder]);\n      map.set(key, innerBuilder);\n    }\n  }\n  return unsafeFromArray(builder.map(tuple => [tuple[0], unsafeFromArray(tuple[1])]));\n});\n\nexport { GroupByTypeId, bindEffect, evaluate, filter, first, groupBy, groupByIterable, groupByKey, isGroupBy, make, mapEffectOptions };\n","import { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { empty as empty$1, fromIterable as fromIterable$1, set, has as has$1, remove as remove$1, size as size$1 } from '../../MutableHashMap/dist/effect-MutableHashMap.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/MutableHashSet\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst MutableHashSetProto = {\n  [TypeId]: TypeId,\n  [Symbol.iterator]() {\n    return Array.from(this.keyMap).map(([_]) => _)[Symbol.iterator]();\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"MutableHashSet\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst fromHashMap = keyMap => {\n  const set = Object.create(MutableHashSetProto);\n  set.keyMap = keyMap;\n  return set;\n};\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst empty = () => fromHashMap(empty$1());\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = keys => fromHashMap(fromIterable$1(Array.from(keys).map(k => [k, true])));\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = (...keys) => fromIterable(keys);\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst add = /*#__PURE__*/dual(2, (self, key) => (set(self.keyMap, key, true), self));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst has = /*#__PURE__*/dual(2, (self, key) => has$1(self.keyMap, key));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst remove = /*#__PURE__*/dual(2, (self, key) => (remove$1(self.keyMap, key), self));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst size = self => size$1(self.keyMap);\n\nexport { add, empty, fromIterable, has, make, remove, size };\n","import { groupBy as groupBy$1, groupByKey as groupByKey$1, mapEffectOptions, bindEffect as bindEffect$1 } from '../../internal/groupBy.esm.js';\nimport { StreamTypeId as StreamTypeId$1, DefaultChunkSize as DefaultChunkSize$1, accumulate as accumulate$1, accumulateChunks as accumulateChunks$1, acquireRelease as acquireRelease$1, aggregate as aggregate$1, aggregateWithin as aggregateWithin$1, aggregateWithinEither as aggregateWithinEither$1, as as as$1, _async as _async$1, asyncEffect as asyncEffect$1, asyncInterrupt as asyncInterrupt$1, asyncOption as asyncOption$1, asyncScoped as asyncScoped$1, branchAfter as branchAfter$1, broadcast as broadcast$1, broadcastDynamic as broadcastDynamic$1, broadcastedQueues as broadcastedQueues$1, broadcastedQueuesDynamic as broadcastedQueuesDynamic$1, buffer as buffer$1, bufferChunks as bufferChunks$1, catchAll as catchAll$1, catchAllCause as catchAllCause$1, catchSome as catchSome$1, catchTag as catchTag$1, catchTags as catchTags$1, catchSomeCause as catchSomeCause$1, changes as changes$1, changesWith as changesWith$1, changesWithEffect as changesWithEffect$1, chunks as chunks$1, chunksWith as chunksWith$1, combine as combine$1, combineChunks as combineChunks$1, concat as concat$1, concatAll as concatAll$1, cross as cross$1, crossLeft as crossLeft$1, crossRight as crossRight$1, crossWith as crossWith$1, debounce as debounce$1, die as die$1, dieSync as dieSync$1, dieMessage as dieMessage$1, distributedWith as distributedWith$1, distributedWithDynamic as distributedWithDynamic$1, drain as drain$1, drainFork as drainFork$1, drop as drop$1, dropRight as dropRight$1, dropUntil as dropUntil$1, dropUntilEffect as dropUntilEffect$1, dropWhile as dropWhile$1, dropWhileEffect as dropWhileEffect$1, either as either$1, empty as empty$1, ensuring as ensuring$1, ensuringWith as ensuringWith$1, context as context$1, contextWith as contextWith$1, contextWithEffect as contextWithEffect$1, contextWithStream as contextWithStream$1, execute as execute$1, fail as fail$1, failSync as failSync$1, failCause as failCause$1, failCauseSync as failCauseSync$1, filter as filter$1, filterEffect as filterEffect$1, filterMap as filterMap$1, filterMapEffect as filterMapEffect$1, filterMapWhile as filterMapWhile$1, filterMapWhileEffect as filterMapWhileEffect$1, finalizer as finalizer$1, find as find$1, findEffect as findEffect$1, flatMap as flatMap$1, flatten as flatten$1, flattenChunks as flattenChunks$1, flattenEffect as flattenEffect$1, flattenExitOption as flattenExitOption$1, flattenIterables as flattenIterables$1, flattenTake as flattenTake$1, forever as forever$1, fromAsyncIterable as fromAsyncIterable$1, fromChannel as fromChannel$1, toChannel as toChannel$1, fromChunk as fromChunk$1, fromChunkPubSub as fromChunkPubSub$1, fromChunkQueue as fromChunkQueue$1, fromChunks as fromChunks$1, fromEffect as fromEffect$1, fromEffectOption as fromEffectOption$1, fromPubSub as fromPubSub$1, fromIterable as fromIterable$1, fromIterableEffect as fromIterableEffect$1, fromIteratorSucceed as fromIteratorSucceed$1, fromPull as fromPull$1, fromQueue as fromQueue$1, fromReadableStream as fromReadableStream$1, fromReadableStreamByob as fromReadableStreamByob$1, fromSchedule as fromSchedule$1, groupAdjacentBy as groupAdjacentBy$1, grouped as grouped$1, groupedWithin as groupedWithin$1, haltAfter as haltAfter$1, haltWhen as haltWhen$1, haltWhenDeferred as haltWhenDeferred$1, identityStream, interleave as interleave$1, interleaveWith as interleaveWith$1, intersperse as intersperse$1, intersperseAffixes as intersperseAffixes$1, interruptAfter as interruptAfter$1, interruptWhen as interruptWhen$1, interruptWhenDeferred as interruptWhenDeferred$1, iterate as iterate$1, make as make$1, map as map$1, mapAccum as mapAccum$1, mapAccumEffect as mapAccumEffect$1, mapBoth as mapBoth$1, mapChunks as mapChunks$1, mapChunksEffect as mapChunksEffect$1, mapConcat as mapConcat$1, mapConcatChunk as mapConcatChunk$1, mapConcatChunkEffect as mapConcatChunkEffect$1, mapConcatEffect as mapConcatEffect$1, mapError as mapError$1, mapErrorCause as mapErrorCause$1, merge as merge$1, mergeAll as mergeAll$1, mergeWith as mergeWith$1, mergeEither as mergeEither$1, mergeLeft as mergeLeft$1, mergeRight as mergeRight$1, mkString as mkString$1, never as never$1, onError as onError$1, onDone as onDone$1, orDie as orDie$1, orDieWith as orDieWith$1, orElse as orElse$1, orElseEither as orElseEither$1, orElseFail as orElseFail$1, orElseIfEmpty as orElseIfEmpty$1, orElseIfEmptyChunk as orElseIfEmptyChunk$1, orElseIfEmptyStream as orElseIfEmptyStream$1, orElseSucceed as orElseSucceed$1, paginate as paginate$1, paginateChunk as paginateChunk$1, paginateChunkEffect as paginateChunkEffect$1, paginateEffect as paginateEffect$1, partition as partition$1, partitionEither as partitionEither$1, peel as peel$1, pipeThrough as pipeThrough$1, pipeThroughChannel as pipeThroughChannel$1, pipeThroughChannelOrFail as pipeThroughChannelOrFail$1, prepend as prepend$1, provideContext as provideContext$1, provideLayer as provideLayer$1, provideService as provideService$1, provideServiceEffect as provideServiceEffect$1, provideServiceStream as provideServiceStream$1, mapInputContext as mapInputContext$1, provideSomeLayer as provideSomeLayer$1, range as range$1, rechunk as rechunk$1, refineOrDie as refineOrDie$1, refineOrDieWith as refineOrDieWith$1, repeat as repeat$1, repeatEffect as repeatEffect$1, repeatEffectChunk as repeatEffectChunk$1, repeatEffectChunkOption as repeatEffectChunkOption$1, repeatEffectOption as repeatEffectOption$1, repeatEffectWithSchedule as repeatEffectWithSchedule$1, repeatEither as repeatEither$1, repeatElements as repeatElements$1, repeatElementsWith as repeatElementsWith$1, repeatValue as repeatValue$1, repeatWith as repeatWith$1, retry as retry$1, run as run$1, runCollect as runCollect$1, runCount as runCount$1, runDrain as runDrain$1, runFold as runFold$1, runFoldEffect as runFoldEffect$1, runFoldScoped as runFoldScoped$1, runFoldScopedEffect as runFoldScopedEffect$1, runFoldWhile as runFoldWhile$1, runFoldWhileEffect as runFoldWhileEffect$1, runFoldWhileScoped as runFoldWhileScoped$1, runFoldWhileScopedEffect as runFoldWhileScopedEffect$1, runForEach as runForEach$1, runForEachChunk as runForEachChunk$1, runForEachChunkScoped as runForEachChunkScoped$1, runForEachScoped as runForEachScoped$1, runForEachWhile as runForEachWhile$1, runForEachWhileScoped as runForEachWhileScoped$1, runHead as runHead$1, runIntoPubSub as runIntoPubSub$1, runIntoPubSubScoped as runIntoPubSubScoped$1, runIntoQueue as runIntoQueue$1, runIntoQueueElementsScoped as runIntoQueueElementsScoped$1, runIntoQueueScoped as runIntoQueueScoped$1, runLast as runLast$1, runScoped as runScoped$1, runSum as runSum$1, scan as scan$1, scanEffect as scanEffect$1, scanReduce as scanReduce$1, scanReduceEffect as scanReduceEffect$1, schedule as schedule$1, scheduleWith as scheduleWith$1, scoped as scoped$1, sliding as sliding$1, slidingSize as slidingSize$1, some as some$1, someOrElse as someOrElse$1, someOrFail as someOrFail$1, split as split$1, splitOnChunk as splitOnChunk$1, splitLines as splitLines$1, succeed as succeed$1, sync as sync$1, suspend as suspend$1, take as take$1, takeRight as takeRight$1, takeUntil as takeUntil$1, takeUntilEffect as takeUntilEffect$1, takeWhile as takeWhile$1, tap as tap$1, tapBoth as tapBoth$1, tapError as tapError$1, tapErrorCause as tapErrorCause$1, tapSink as tapSink$1, throttle as throttle$1, throttleEffect as throttleEffect$1, tick as tick$1, timeout as timeout$1, timeoutFail as timeoutFail$1, timeoutFailCause as timeoutFailCause$1, timeoutTo as timeoutTo$1, toPubSub as toPubSub$1, toPull as toPull$1, toQueue as toQueue$1, toQueueOfElements as toQueueOfElements$1, toReadableStream as toReadableStream$1, transduce as transduce$1, unfold as unfold$1, unfoldChunk as unfoldChunk$1, unfoldChunkEffect as unfoldChunkEffect$1, unfoldEffect as unfoldEffect$1, unit as unit$1, unwrap as unwrap$1, unwrapScoped as unwrapScoped$1, updateService as updateService$1, when as when$1, whenCase as whenCase$1, whenCaseEffect as whenCaseEffect$1, whenEffect as whenEffect$1, withSpan as withSpan$1, zip as zip$1, zipFlatten as zipFlatten$1, zipAll as zipAll$1, zipAllLeft as zipAllLeft$1, zipAllRight as zipAllRight$1, zipAllSortedByKey as zipAllSortedByKey$1, zipAllSortedByKeyLeft as zipAllSortedByKeyLeft$1, zipAllSortedByKeyRight as zipAllSortedByKeyRight$1, zipAllSortedByKeyWith as zipAllSortedByKeyWith$1, zipAllWith as zipAllWith$1, zipLatest as zipLatest$1, zipLatestWith as zipLatestWith$1, zipLeft as zipLeft$1, zipRight as zipRight$1, zipWith as zipWith$1, zipWithChunks as zipWithChunks$1, zipWithNext as zipWithNext$1, zipWithPrevious as zipWithPrevious$1, zipWithPreviousAndNext as zipWithPreviousAndNext$1, zipWithIndex as zipWithIndex$1, Do as Do$1, bind as bind$1, bindTo as bindTo$1, let_ as let_$1, decodeText as decodeText$1, encodeText as encodeText$1 } from '../../internal/stream.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst StreamTypeId = StreamTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * A `Stream<R, E, A>` is a description of a program that, when evaluated, may\n * emit zero or more values of type `A`, may fail with errors of type `E`, and\n * uses an context of type `R`. One way to think of `Stream` is as a\n * `Effect` program that could emit multiple values.\n *\n * `Stream` is a purely functional *pull* based stream. Pull based streams offer\n * inherent laziness and backpressure, relieving users of the need to manage\n * buffers between operators. As an optimization, `Stream` does not emit\n * single values, but rather an array of values. This allows the cost of effect\n * evaluation to be amortized.\n *\n * `Stream` forms a monad on its `A` type parameter, and has error management\n * facilities for its `E` type parameter, modeled similarly to `Effect` (with\n * some adjustments for the multiple-valued nature of `Stream`). These aspects\n * allow for rich and expressive composition of streams.\n *\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @category models\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * The default chunk size used by the various combinators and constructors of\n * `Stream`.\n *\n * @since 2.0.0\n * @category constants\n */\nconst DefaultChunkSize = DefaultChunkSize$1;\n\n/**\n * Collects each underlying Chunk of the stream into a new chunk, and emits it\n * on each pull.\n *\n * @since 2.0.0\n * @category utils\n */\nconst accumulate = accumulate$1;\n\n/**\n * Re-chunks the elements of the stream by accumulating each underlying chunk.\n *\n * @since 2.0.0\n * @category utils\n */\nconst accumulateChunks = accumulateChunks$1;\n\n/**\n * Creates a stream from a single value that will get cleaned up after the\n * stream is consumed.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst acquireRelease = acquireRelease$1;\n\n/**\n * Aggregates elements of this stream using the provided sink for as long as\n * the downstream operators on the stream are busy.\n *\n * This operator divides the stream into two asynchronous \"islands\". Operators\n * upstream of this operator run on one fiber, while downstream operators run\n * on another. Whenever the downstream fiber is busy processing elements, the\n * upstream fiber will feed elements into the sink until it signals\n * completion.\n *\n * Any sink can be used here, but see `Sink.foldWeightedEffect` and\n * `Sink.foldUntilEffect` for sinks that cover the common usecases.\n *\n * @since 2.0.0\n * @category utils\n */\nconst aggregate = aggregate$1;\n\n/**\n * Like `aggregateWithinEither`, but only returns the `Right` results.\n *\n * @param sink A `Sink` used to perform the aggregation.\n * @param schedule A `Schedule` used to signal when to stop the aggregation.\n * @since 2.0.0\n * @category utils\n */\nconst aggregateWithin = aggregateWithin$1;\n\n/**\n * Aggregates elements using the provided sink until it completes, or until\n * the delay signalled by the schedule has passed.\n *\n * This operator divides the stream into two asynchronous islands. Operators\n * upstream of this operator run on one fiber, while downstream operators run\n * on another. Elements will be aggregated by the sink until the downstream\n * fiber pulls the aggregated value, or until the schedule's delay has passed.\n *\n * Aggregated elements will be fed into the schedule to determine the delays\n * between pulls.\n *\n * @param sink A `Sink` used to perform the aggregation.\n * @param schedule A `Schedule` used to signal when to stop the aggregation.\n * @since 2.0.0\n * @category utils\n */\nconst aggregateWithinEither = aggregateWithinEither$1;\n\n/**\n * Maps the success values of this stream to the specified constant value.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst as = as$1;\nconst _async = _async$1;\n\n/**\n * Creates a stream from an asynchronous callback that can be called multiple\n * times The registration of the callback itself returns an effect. The\n * optionality of the error type `E` can be used to signal the end of the\n * stream, by setting it to `None`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst asyncEffect = asyncEffect$1;\n\n/**\n * Creates a stream from an asynchronous callback that can be called multiple\n * times. The registration of the callback returns either a canceler or\n * synchronously returns a stream. The optionality of the error type `E` can\n * be used to signal the end of the stream, by setting it to `None`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst asyncInterrupt = asyncInterrupt$1;\n\n/**\n * Creates a stream from an asynchronous callback that can be called multiple\n * times. The registration of the callback can possibly return the stream\n * synchronously. The optionality of the error type `E` can be used to signal\n * the end of the stream, by setting it to `None`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst asyncOption = asyncOption$1;\n\n/**\n * Creates a stream from an asynchronous callback that can be called multiple\n * times. The registration of the callback itself returns an a scoped\n * resource. The optionality of the error type `E` can be used to signal the\n * end of the stream, by setting it to `None`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst asyncScoped = asyncScoped$1;\n\n/**\n * Returns a `Stream` that first collects `n` elements from the input `Stream`,\n * and then creates a new `Stream` using the specified function, and sends all\n * the following elements through that.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst branchAfter = branchAfter$1;\n\n/**\n * Fan out the stream, producing a list of streams that have the same elements\n * as this stream. The driver stream will only ever advance the `maximumLag`\n * chunks before the slowest downstream stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst broadcast = broadcast$1;\n\n/**\n * Fan out the stream, producing a dynamic number of streams that have the\n * same elements as this stream. The driver stream will only ever advance the\n * `maximumLag` chunks before the slowest downstream stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst broadcastDynamic = broadcastDynamic$1;\n\n/**\n * Converts the stream to a scoped list of queues. Every value will be\n * replicated to every queue with the slowest queue being allowed to buffer\n * `maximumLag` chunks before the driver is back pressured.\n *\n * Queues can unsubscribe from upstream by shutting down.\n *\n * @since 2.0.0\n * @category utils\n */\nconst broadcastedQueues = broadcastedQueues$1;\n\n/**\n * Converts the stream to a scoped dynamic amount of queues. Every chunk will\n * be replicated to every queue with the slowest queue being allowed to buffer\n * `maximumLag` chunks before the driver is back pressured.\n *\n * Queues can unsubscribe from upstream by shutting down.\n *\n * @since 2.0.0\n * @category utils\n */\nconst broadcastedQueuesDynamic = broadcastedQueuesDynamic$1;\n\n/**\n * Allows a faster producer to progress independently of a slower consumer by\n * buffering up to `capacity` elements in a queue.\n *\n * @note This combinator destroys the chunking structure. It's recommended to\n *       use rechunk afterwards. Additionally, prefer capacities that are powers\n *       of 2 for better performance.\n * @since 2.0.0\n * @category utils\n */\nconst buffer = buffer$1;\n\n/**\n * Allows a faster producer to progress independently of a slower consumer by\n * buffering up to `capacity` chunks in a queue.\n *\n * @note Prefer capacities that are powers of 2 for better performance.\n * @since 2.0.0\n * @category utils\n */\nconst bufferChunks = bufferChunks$1;\n\n/**\n * Switches over to the stream produced by the provided function in case this\n * one fails with a typed error.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchAll = catchAll$1;\n\n/**\n * Switches over to the stream produced by the provided function in case this\n * one fails. Allows recovery from all causes of failure, including\n * interruption if the stream is uninterruptible.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchAllCause = catchAllCause$1;\n\n/**\n * Switches over to the stream produced by the provided function in case this\n * one fails with some typed error.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchSome = catchSome$1;\n\n/**\n * Switches over to the stream produced by the provided function in case this\n * one fails with an error matching the given `_tag`.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchTag = catchTag$1;\n\n/**\n * Switches over to the stream produced by one of the provided functions, in\n * case this one fails with an error matching one of the given `_tag`'s.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchTags = catchTags$1;\n\n/**\n * Switches over to the stream produced by the provided function in case this\n * one fails with some errors. Allows recovery from all causes of failure,\n * including interruption if the stream is uninterruptible.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst catchSomeCause = catchSomeCause$1;\n\n/**\n * Returns a new stream that only emits elements that are not equal to the\n * previous element emitted, using natural equality to determine whether two\n * elements are equal.\n *\n * @since 2.0.0\n * @category utils\n */\nconst changes = changes$1;\n\n/**\n * Returns a new stream that only emits elements that are not equal to the\n * previous element emitted, using the specified function to determine whether\n * two elements are equal.\n *\n * @since 2.0.0\n * @category utils\n */\nconst changesWith = changesWith$1;\n\n/**\n * Returns a new stream that only emits elements that are not equal to the\n * previous element emitted, using the specified effectual function to\n * determine whether two elements are equal.\n *\n * @since 2.0.0\n * @category utils\n */\nconst changesWithEffect = changesWithEffect$1;\n\n/**\n * Exposes the underlying chunks of the stream as a stream of chunks of\n * elements.\n *\n * @since 2.0.0\n * @category utils\n */\nconst chunks = chunks$1;\n\n/**\n * Performs the specified stream transformation with the chunk structure of\n * the stream exposed.\n *\n * @since 2.0.0\n * @category utils\n */\nconst chunksWith = chunksWith$1;\n\n/**\n * Combines the elements from this stream and the specified stream by\n * repeatedly applying the function `f` to extract an element using both sides\n * and conceptually \"offer\" it to the destination stream. `f` can maintain\n * some internal state to control the combining process, with the initial\n * state being specified by `s`.\n *\n * Where possible, prefer `Stream.combineChunks` for a more efficient\n * implementation.\n *\n * @since 2.0.0\n * @category utils\n */\nconst combine = combine$1;\n\n/**\n * Combines the chunks from this stream and the specified stream by repeatedly\n * applying the function `f` to extract a chunk using both sides and\n * conceptually \"offer\" it to the destination stream. `f` can maintain some\n * internal state to control the combining process, with the initial state\n * being specified by `s`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst combineChunks = combineChunks$1;\n\n/**\n * Concatenates the specified stream with this stream, resulting in a stream\n * that emits the elements from this stream and then the elements from the\n * specified stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst concat = concat$1;\n\n/**\n * Concatenates all of the streams in the chunk to one stream.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst concatAll = concatAll$1;\n\n/**\n * Composes this stream with the specified stream to create a cartesian\n * product of elements. The `that` stream would be run multiple times, for\n * every element in the `this` stream.\n *\n * See also `Stream.zip` for the more common point-wise variant.\n *\n * @since 2.0.0\n * @category utils\n */\nconst cross = cross$1;\n\n/**\n * Composes this stream with the specified stream to create a cartesian\n * product of elements, but keeps only elements from this stream. The `that`\n * stream would be run multiple times, for every element in the `this` stream.\n *\n * See also `Stream.zipLeft` for the more common point-wise variant.\n *\n * @since 2.0.0\n * @category utils\n */\nconst crossLeft = crossLeft$1;\n\n/**\n * Composes this stream with the specified stream to create a cartesian\n * product of elements, but keeps only elements from the other stream. The\n * `that` stream would be run multiple times, for every element in the `this`\n * stream.\n *\n * See also `Stream.zipRight` for the more common point-wise variant.\n *\n * @since 2.0.0\n * @category utils\n */\nconst crossRight = crossRight$1;\n\n/**\n * Composes this stream with the specified stream to create a cartesian\n * product of elements with a specified function. The `that` stream would be\n * run multiple times, for every element in the `this` stream.\n *\n * See also `Stream.zipWith` for the more common point-wise variant.\n *\n * @since 2.0.0\n * @category utils\n */\nconst crossWith = crossWith$1;\n\n/**\n * Delays the emission of values by holding new values for a set duration. If\n * no new values arrive during that time the value is emitted, however if a\n * new value is received during the holding period the previous value is\n * discarded and the process is repeated with the new value.\n *\n * This operator is useful if you have a stream of \"bursty\" events which\n * eventually settle down and you only need the final event of the burst. For\n * example, a search engine may only want to initiate a search after a user\n * has paused typing so as to not prematurely recommend results.\n *\n * @since 2.0.0\n * @category utils\n */\nconst debounce = debounce$1;\n\n/**\n * The stream that dies with the specified defect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst die = die$1;\n\n/**\n * The stream that dies with the specified lazily evaluated defect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst dieSync = dieSync$1;\n\n/**\n * The stream that dies with an exception described by `message`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst dieMessage = dieMessage$1;\n\n/**\n * More powerful version of `Stream.broadcast`. Allows to provide a function\n * that determines what queues should receive which elements. The decide\n * function will receive the indices of the queues in the resulting list.\n *\n * @since 2.0.0\n * @category utils\n */\nconst distributedWith = distributedWith$1;\n\n/**\n * More powerful version of `Stream.distributedWith`. This returns a function\n * that will produce new queues and corresponding indices. You can also\n * provide a function that will be executed after the final events are\n * enqueued in all queues. Shutdown of the queues is handled by the driver.\n * Downstream users can also shutdown queues manually. In this case the driver\n * will continue but no longer backpressure on them.\n *\n * @since 2.0.0\n * @category utils\n */\nconst distributedWithDynamic = distributedWithDynamic$1;\n\n/**\n * Converts this stream to a stream that executes its effects but emits no\n * elements. Useful for sequencing effects using streams:\n *\n * @since 2.0.0\n * @category utils\n */\nconst drain = drain$1;\n\n/**\n * Drains the provided stream in the background for as long as this stream is\n * running. If this stream ends before `other`, `other` will be interrupted.\n * If `other` fails, this stream will fail with that error.\n *\n * @since 2.0.0\n * @category utils\n */\nconst drainFork = drainFork$1;\n\n/**\n * Drops the specified number of elements from this stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst drop = drop$1;\n\n/**\n * Drops the last specified number of elements from this stream.\n *\n * @note This combinator keeps `n` elements in memory. Be careful with big\n *       numbers.\n * @since 2.0.0\n * @category utils\n */\nconst dropRight = dropRight$1;\n\n/**\n * Drops all elements of the stream until the specified predicate evaluates to\n * `true`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst dropUntil = dropUntil$1;\n\n/**\n * Drops all elements of the stream until the specified effectful predicate\n * evaluates to `true`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst dropUntilEffect = dropUntilEffect$1;\n\n/**\n * Drops all elements of the stream for as long as the specified predicate\n * evaluates to `true`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst dropWhile = dropWhile$1;\n\n/**\n * Drops all elements of the stream for as long as the specified predicate\n * produces an effect that evalutates to `true`\n *\n * @since 2.0.0\n * @category utils\n */\nconst dropWhileEffect = dropWhileEffect$1;\n\n/**\n * Returns a stream whose failures and successes have been lifted into an\n * `Either`. The resulting stream cannot fail, because the failures have been\n * exposed as part of the `Either` success case.\n *\n * @note The stream will end as soon as the first error occurs.\n *\n * @since 2.0.0\n * @category utils\n */\nconst either = either$1;\n\n/**\n * The empty stream.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst empty = empty$1;\n\n/**\n * Executes the provided finalizer after this stream's finalizers run.\n *\n * @since 2.0.0\n * @category utils\n */\nconst ensuring = ensuring$1;\n\n/**\n * Executes the provided finalizer after this stream's finalizers run.\n *\n * @since 2.0.0\n * @category utils\n */\nconst ensuringWith = ensuringWith$1;\n\n/**\n * Accesses the whole context of the stream.\n *\n * @since 2.0.0\n * @category context\n */\nconst context = context$1;\n\n/**\n * Accesses the context of the stream.\n *\n * @since 2.0.0\n * @category context\n */\nconst contextWith = contextWith$1;\n\n/**\n * Accesses the context of the stream in the context of an effect.\n *\n * @since 2.0.0\n * @category context\n */\nconst contextWithEffect = contextWithEffect$1;\n\n/**\n * Accesses the context of the stream in the context of a stream.\n *\n * @since 2.0.0\n * @category context\n */\nconst contextWithStream = contextWithStream$1;\n\n/**\n * Creates a stream that executes the specified effect but emits no elements.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst execute = execute$1;\n\n/**\n * Terminates with the specified error.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fail = fail$1;\n\n/**\n * Terminates with the specified lazily evaluated error.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst failSync = failSync$1;\n\n/**\n * The stream that always fails with the specified `Cause`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst failCause = failCause$1;\n\n/**\n * The stream that always fails with the specified lazily evaluated `Cause`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst failCauseSync = failCauseSync$1;\n\n/**\n * Filters the elements emitted by this stream using the provided function.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filter = filter$1;\n\n/**\n * Effectfully filters the elements emitted by this stream.\n *\n * @since 2.0.0\n * @category filtering\n */\nconst filterEffect = filterEffect$1;\n\n/**\n * Performs a filter and map in a single step.\n *\n * @since 2.0.0\n * @category utils\n */\nconst filterMap = filterMap$1;\n\n/**\n * Performs an effectful filter and map in a single step.\n *\n * @since 2.0.0\n * @category utils\n */\nconst filterMapEffect = filterMapEffect$1;\n\n/**\n * Transforms all elements of the stream for as long as the specified partial\n * function is defined.\n *\n * @since 2.0.0\n * @category utils\n */\nconst filterMapWhile = filterMapWhile$1;\n\n/**\n * Effectfully transforms all elements of the stream for as long as the\n * specified partial function is defined.\n *\n * @since 2.0.0\n * @category utils\n */\nconst filterMapWhileEffect = filterMapWhileEffect$1;\n\n/**\n * Creates a one-element stream that never fails and executes the finalizer\n * when it ends.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst finalizer = finalizer$1;\n\n/**\n * Finds the first element emitted by this stream that satisfies the provided\n * predicate.\n *\n * @since 2.0.0\n * @category elements\n */\nconst find = find$1;\n\n/**\n * Finds the first element emitted by this stream that satisfies the provided\n * effectful predicate.\n *\n * @since 2.0.0\n * @category elements\n */\nconst findEffect = findEffect$1;\n\n/**\n * Returns a stream made of the concatenation in strict order of all the\n * streams produced by passing each element of this stream to `f0`\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatMap = flatMap$1;\n\n/**\n * Flattens this stream-of-streams into a stream made of the concatenation in\n * strict order of all the streams.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flatten = flatten$1;\n\n/**\n * Submerges the chunks carried by this stream into the stream's structure,\n * while still preserving them.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flattenChunks = flattenChunks$1;\n\n/**\n * Flattens `Effect` values into the stream's structure, preserving all\n * information about the effect.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flattenEffect = flattenEffect$1;\n\n/**\n * Unwraps `Exit` values that also signify end-of-stream by failing with `None`.\n *\n * For `Exit` values that do not signal end-of-stream, prefer:\n *\n * ```ts\n * stream.mapZIO(ZIO.done(_))\n * ```\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flattenExitOption = flattenExitOption$1;\n\n/**\n * Submerges the iterables carried by this stream into the stream's structure,\n * while still preserving them.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flattenIterables = flattenIterables$1;\n\n/**\n * Unwraps `Exit` values and flatten chunks that also signify end-of-stream\n * by failing with `None`.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst flattenTake = flattenTake$1;\n\n/**\n * Repeats this stream forever.\n *\n * @since 2.0.0\n * @category utils\n */\nconst forever = forever$1;\n\n/**\n * Creates a stream from an `AsyncIterable`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromAsyncIterable = fromAsyncIterable$1;\n\n/**\n * Creates a stream from a `Channel`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromChannel = fromChannel$1;\n\n/**\n * Creates a channel from a `Stream`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst toChannel = toChannel$1;\n\n/**\n * Creates a stream from a `Chunk` of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromChunk = fromChunk$1;\n\n/**\n * Creates a stream from a subscription to a `PubSub`.\n *\n * @param shutdown If `true`, the `PubSub` will be shutdown after the stream is evaluated (defaults to `false`)\n * @since 2.0.0\n * @category constructors\n */\nconst fromChunkPubSub = fromChunkPubSub$1;\n\n/**\n * Creates a stream from a `Queue` of values.\n *\n * @param shutdown If `true`, the queue will be shutdown after the stream is evaluated (defaults to `false`)\n * @since 2.0.0\n * @category constructors\n */\nconst fromChunkQueue = fromChunkQueue$1;\n\n/**\n * Creates a stream from an arbitrary number of chunks.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromChunks = fromChunks$1;\n\n/**\n * Either emits the success value of this effect or terminates the stream\n * with the failure value of this effect.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromEffect = fromEffect$1;\n\n/**\n * Creates a stream from an effect producing a value of type `A` or an empty\n * `Stream`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromEffectOption = fromEffectOption$1;\n\n/**\n * Creates a stream from a subscription to a `PubSub`.\n *\n * @param shutdown If `true`, the `PubSub` will be shutdown after the stream is evaluated (defaults to `false`)\n * @since 2.0.0\n * @category constructors\n */\nconst fromPubSub = fromPubSub$1;\n\n/**\n * Creates a stream from an `Iterable` collection of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = fromIterable$1;\n\n/**\n * Creates a stream from an effect producing a value of type `Iterable<A>`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterableEffect = fromIterableEffect$1;\n\n/**\n * Creates a stream from an iterator\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromIteratorSucceed = fromIteratorSucceed$1;\n\n/**\n * Creates a stream from an effect that pulls elements from another stream.\n *\n * See `Stream.toPull` for reference.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromPull = fromPull$1;\n\n/**\n * Creates a stream from a queue of values\n *\n * @param maxChunkSize The maximum number of queued elements to put in one chunk in the stream\n * @param shutdown If `true`, the queue will be shutdown after the stream is evaluated (defaults to `false`)\n * @since 2.0.0\n * @category constructors\n */\nconst fromQueue = fromQueue$1;\n\n/**\n * Creates a stream from a `ReadableStream`.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromReadableStream = fromReadableStream$1;\n\n/**\n * Creates a stream from a `ReadableStreamBYOBReader`.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader.\n *\n * @param allocSize Controls the size of the underlying `ArrayBuffer` (defaults to `4096`).\n * @since 2.0.0\n * @category constructors\n */\nconst fromReadableStreamByob = fromReadableStreamByob$1;\n\n/**\n * Creates a stream from a `Schedule` that does not require any further\n * input. The stream will emit an element for each value output from the\n * schedule, continuing for as long as the schedule continues.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromSchedule = fromSchedule$1;\n\n/**\n * Creates a pipeline that groups on adjacent keys, calculated by the\n * specified function.\n *\n * @since 2.0.0\n * @category grouping\n */\nconst groupAdjacentBy = groupAdjacentBy$1;\n\n/**\n * More powerful version of `Stream.groupByKey`.\n *\n * @since 2.0.0\n * @category grouping\n */\nconst groupBy = groupBy$1;\n\n/**\n * Partition a stream using a function and process each stream individually.\n * This returns a data structure that can be used to further filter down which\n * groups shall be processed.\n *\n * After calling apply on the GroupBy object, the remaining groups will be\n * processed in parallel and the resulting streams merged in a\n * nondeterministic fashion.\n *\n * Up to `buffer` elements may be buffered in any group stream before the\n * producer is backpressured. Take care to consume from all streams in order\n * to prevent deadlocks.\n *\n * For example, to collect the first 2 words for every starting letter from a\n * stream of words:\n *\n * ```ts\n * import * as GroupBy from \"./GroupBy\"\n * import * as Stream from \"./Stream\"\n * import { pipe } from \"./Function\"\n *\n * pipe(\n *   Stream.fromIterable([\"hello\", \"world\", \"hi\", \"holla\"]),\n *   Stream.groupByKey((word) => word[0]),\n *   GroupBy.evaluate((key, stream) =>\n *     pipe(\n *       stream,\n *       Stream.take(2),\n *       Stream.map((words) => [key, words] as const)\n *     )\n *   )\n * )\n * ```\n *\n * @since 2.0.0\n * @category utils\n */\nconst groupByKey = groupByKey$1;\n\n/**\n * Partitions the stream with specified `chunkSize`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst grouped = grouped$1;\n\n/**\n * Partitions the stream with the specified `chunkSize` or until the specified\n * `duration` has passed, whichever is satisfied first.\n *\n * @since 2.0.0\n * @category utils\n */\nconst groupedWithin = groupedWithin$1;\n\n/**\n * Specialized version of haltWhen which halts the evaluation of this stream\n * after the given duration.\n *\n * An element in the process of being pulled will not be interrupted when the\n * given duration completes. See `interruptAfter` for this behavior.\n *\n * @since 2.0.0\n * @category utils\n */\nconst haltAfter = haltAfter$1;\n\n/**\n * Halts the evaluation of this stream when the provided effect completes. The\n * given effect will be forked as part of the returned stream, and its success\n * will be discarded.\n *\n * An element in the process of being pulled will not be interrupted when the\n * effect completes. See `interruptWhen` for this behavior.\n *\n * If the effect completes with a failure, the stream will emit that failure.\n *\n * @since 2.0.0\n * @category utils\n */\nconst haltWhen = haltWhen$1;\n\n/**\n * Halts the evaluation of this stream when the provided promise resolves.\n *\n * If the promise completes with a failure, the stream will emit that failure.\n *\n * @since 2.0.0\n * @category utils\n */\nconst haltWhenDeferred = haltWhenDeferred$1;\n\n/**\n * The identity pipeline, which does not modify streams in any way.\n *\n * @since 2.0.0\n * @category utils\n */\nconst identity = identityStream;\n\n/**\n * Interleaves this stream and the specified stream deterministically by\n * alternating pulling values from this stream and the specified stream. When\n * one stream is exhausted all remaining values in the other stream will be\n * pulled.\n *\n * @since 2.0.0\n * @category utils\n */\nconst interleave = interleave$1;\n\n/**\n * Combines this stream and the specified stream deterministically using the\n * stream of boolean values `pull` to control which stream to pull from next.\n * A value of `true` indicates to pull from this stream and a value of `false`\n * indicates to pull from the specified stream. Only consumes as many elements\n * as requested by the `pull` stream. If either this stream or the specified\n * stream are exhausted further requests for values from that stream will be\n * ignored.\n *\n * @since 2.0.0\n * @category utils\n */\nconst interleaveWith = interleaveWith$1;\n\n/**\n * Intersperse stream with provided `element`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst intersperse = intersperse$1;\n\n/**\n * Intersperse the specified element, also adding a prefix and a suffix.\n *\n * @since 2.0.0\n * @category utils\n */\nconst intersperseAffixes = intersperseAffixes$1;\n\n/**\n * Specialized version of `Stream.interruptWhen` which interrupts the\n * evaluation of this stream after the given `Duration`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst interruptAfter = interruptAfter$1;\n\n/**\n * Interrupts the evaluation of this stream when the provided effect\n * completes. The given effect will be forked as part of this stream, and its\n * success will be discarded. This combinator will also interrupt any\n * in-progress element being pulled from upstream.\n *\n * If the effect completes with a failure before the stream completes, the\n * returned stream will emit that failure.\n *\n * @since 2.0.0\n * @category utils\n */\nconst interruptWhen = interruptWhen$1;\n\n/**\n * Interrupts the evaluation of this stream when the provided promise\n * resolves. This combinator will also interrupt any in-progress element being\n * pulled from upstream.\n *\n * If the promise completes with a failure, the stream will emit that failure.\n *\n * @since 2.0.0\n * @category utils\n */\nconst interruptWhenDeferred = interruptWhenDeferred$1;\n\n/**\n * The infinite stream of iterative function application: a, f(a), f(f(a)),\n * f(f(f(a))), ...\n *\n * @since 2.0.0\n * @category constructors\n */\nconst iterate = iterate$1;\n\n/**\n * Creates a stream from an sequence of values.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst make = make$1;\n\n/**\n * Transforms the elements of this stream using the supplied function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst map = map$1;\n\n/**\n * Statefully maps over the elements of this stream to produce new elements.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapAccum = mapAccum$1;\n\n/**\n * Statefully and effectfully maps over the elements of this stream to produce\n * new elements.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapAccumEffect = mapAccumEffect$1;\n\n/**\n * Returns a stream whose failure and success channels have been mapped by the\n * specified `onFailure` and `onSuccess` functions.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mapBoth = mapBoth$1;\n\n/**\n * Transforms the chunks emitted by this stream.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapChunks = mapChunks$1;\n\n/**\n * Effectfully transforms the chunks emitted by this stream.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapChunksEffect = mapChunksEffect$1;\n\n/**\n * Maps each element to an iterable, and flattens the iterables into the\n * output of this stream.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapConcat = mapConcat$1;\n\n/**\n * Maps each element to a chunk, and flattens the chunks into the output of\n * this stream.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapConcatChunk = mapConcatChunk$1;\n\n/**\n * Effectfully maps each element to a chunk, and flattens the chunks into the\n * output of this stream.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapConcatChunkEffect = mapConcatChunkEffect$1;\n\n/**\n * Effectfully maps each element to an iterable, and flattens the iterables\n * into the output of this stream.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapConcatEffect = mapConcatEffect$1;\n\n/**\n * Maps over elements of the stream with the specified effectful function.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapEffect = mapEffectOptions;\n\n/**\n * Transforms the errors emitted by this stream using `f`.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapError = mapError$1;\n\n/**\n * Transforms the full causes of failures emitted by this stream.\n *\n * @since 2.0.0\n * @category mapping\n */\nconst mapErrorCause = mapErrorCause$1;\n\n/**\n * Merges this stream and the specified stream together.\n *\n * New produced stream will terminate when both specified stream terminate if\n * no termination strategy is specified.\n *\n * @since 2.0.0\n * @category utils\n */\nconst merge = merge$1;\n\n/**\n * Merges a variable list of streams in a non-deterministic fashion. Up to `n`\n * streams may be consumed in parallel and up to `outputBuffer` chunks may be\n * buffered by this operator.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mergeAll = mergeAll$1;\n\n/**\n * Merges this stream and the specified stream together to a common element\n * type with the specified mapping functions.\n *\n * New produced stream will terminate when both specified stream terminate if\n * no termination strategy is specified.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mergeWith = mergeWith$1;\n\n/**\n * Merges this stream and the specified stream together to produce a stream of\n * eithers.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mergeEither = mergeEither$1;\n\n/**\n * Merges this stream and the specified stream together, discarding the values\n * from the right stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mergeLeft = mergeLeft$1;\n\n/**\n * Merges this stream and the specified stream together, discarding the values\n * from the left stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mergeRight = mergeRight$1;\n\n/**\n * Returns a combined string resulting from concatenating each of the values\n * from the stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst mkString = mkString$1;\n\n/**\n * The stream that never produces any value or fails with any error.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst never = never$1;\n\n/**\n * Runs the specified effect if this stream fails, providing the error to the\n * effect if it exists.\n *\n * Note: Unlike `Effect.onError` there is no guarantee that the provided\n * effect will not be interrupted.\n *\n * @since 2.0.0\n * @category utils\n */\nconst onError = onError$1;\n\n/**\n * Runs the specified effect if this stream ends.\n *\n * @since 2.0.0\n * @category utils\n */\nconst onDone = onDone$1;\n\n/**\n * Translates any failure into a stream termination, making the stream\n * infallible and all failures unchecked.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orDie = orDie$1;\n\n/**\n * Keeps none of the errors, and terminates the stream with them, using the\n * specified function to convert the `E` into a defect.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orDieWith = orDieWith$1;\n\n/**\n * Switches to the provided stream in case this one fails with a typed error.\n *\n * See also `Stream.catchAll`.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orElse = orElse$1;\n\n/**\n * Switches to the provided stream in case this one fails with a typed error.\n *\n * See also `Stream.catchAll`.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orElseEither = orElseEither$1;\n\n/**\n * Fails with given error in case this one fails with a typed error.\n *\n * See also `Stream.catchAll`.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orElseFail = orElseFail$1;\n\n/**\n * Produces the specified element if this stream is empty.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orElseIfEmpty = orElseIfEmpty$1;\n\n/**\n * Produces the specified chunk if this stream is empty.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orElseIfEmptyChunk = orElseIfEmptyChunk$1;\n\n/**\n * Switches to the provided stream in case this one is empty.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orElseIfEmptyStream = orElseIfEmptyStream$1;\n\n/**\n * Succeeds with the specified value if this one fails with a typed error.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst orElseSucceed = orElseSucceed$1;\n\n/**\n * Like `Stream.unfold`, but allows the emission of values to end one step further\n * than the unfolding of the state. This is useful for embedding paginated\n * APIs, hence the name.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst paginate = paginate$1;\n\n/**\n * Like `Stream.unfoldChunk`, but allows the emission of values to end one step\n * further than the unfolding of the state. This is useful for embedding\n * paginated APIs, hence the name.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst paginateChunk = paginateChunk$1;\n\n/**\n * Like `Stream.unfoldChunkEffect`, but allows the emission of values to end one step\n * further than the unfolding of the state. This is useful for embedding\n * paginated APIs, hence the name.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst paginateChunkEffect = paginateChunkEffect$1;\n\n/**\n * Like `Stream.unfoldEffect` but allows the emission of values to end one step\n * further than the unfolding of the state. This is useful for embedding\n * paginated APIs, hence the name.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst paginateEffect = paginateEffect$1;\n\n/**\n * Partition a stream using a predicate. The first stream will contain all\n * element evaluated to true and the second one will contain all element\n * evaluated to false. The faster stream may advance by up to buffer elements\n * further than the slower one.\n *\n * @since 2.0.0\n * @category utils\n */\nconst partition = partition$1;\n\n/**\n * Split a stream by an effectful predicate. The faster stream may advance by\n * up to buffer elements further than the slower one.\n *\n * @since 2.0.0\n * @category utils\n */\nconst partitionEither = partitionEither$1;\n\n/**\n * Peels off enough material from the stream to construct a `Z` using the\n * provided `Sink` and then returns both the `Z` and the rest of the\n * `Stream` in a scope. Like all scoped values, the provided stream is\n * valid only within the scope.\n *\n * @since 2.0.0\n * @category utils\n */\nconst peel = peel$1;\n\n/**\n * Pipes all of the values from this stream through the provided sink.\n *\n * See also `Stream.transduce`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst pipeThrough = pipeThrough$1;\n\n/**\n * Pipes all the values from this stream through the provided channel.\n *\n * @since 2.0.0\n * @category utils\n */\nconst pipeThroughChannel = pipeThroughChannel$1;\n\n/**\n * Pipes all values from this stream through the provided channel, passing\n * through any error emitted by this stream unchanged.\n *\n * @since 2.0.0\n * @category utils\n */\nconst pipeThroughChannelOrFail = pipeThroughChannelOrFail$1;\n\n/**\n * Emits the provided chunk before emitting any other value.\n *\n * @since 2.0.0\n * @category utils\n */\nconst prepend = prepend$1;\n\n/**\n * Provides the stream with its required context, which eliminates its\n * dependency on `R`.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideContext = provideContext$1;\n\n/**\n * Provides a `Layer` to the stream, which translates it to another level.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideLayer = provideLayer$1;\n\n/**\n * Provides the stream with the single service it requires. If the stream\n * requires more than one service use `Stream.provideContext` instead.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideService = provideService$1;\n\n/**\n * Provides the stream with the single service it requires. If the stream\n * requires more than one service use `Stream.provideContext` instead.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideServiceEffect = provideServiceEffect$1;\n\n/**\n * Provides the stream with the single service it requires. If the stream\n * requires more than one service use `Stream.provideContext` instead.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideServiceStream = provideServiceStream$1;\n\n/**\n * Transforms the context being provided to the stream with the specified\n * function.\n *\n * @since 2.0.0\n * @category context\n */\nconst mapInputContext = mapInputContext$1;\n\n/**\n * Splits the context into two parts, providing one part using the\n * specified layer and leaving the remainder `R0`.\n *\n * @since 2.0.0\n * @category context\n */\nconst provideSomeLayer = provideSomeLayer$1;\n\n/**\n * Constructs a stream from a range of integers, including both endpoints.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst range = range$1;\n\n/**\n * Re-chunks the elements of the stream into chunks of `n` elements each. The\n * last chunk might contain less than `n` elements.\n *\n * @since 2.0.0\n * @category utils\n */\nconst rechunk = rechunk$1;\n\n/**\n * Keeps some of the errors, and terminates the fiber with the rest\n *\n * @since 2.0.0\n * @category error handling\n */\nconst refineOrDie = refineOrDie$1;\n\n/**\n * Keeps some of the errors, and terminates the fiber with the rest, using the\n * specified function to convert the `E` into a defect.\n *\n * @since 2.0.0\n * @category error handling\n */\nconst refineOrDieWith = refineOrDieWith$1;\n\n/**\n * Repeats the entire stream using the specified schedule. The stream will\n * execute normally, and then repeat again according to the provided schedule.\n *\n * @since 2.0.0\n * @category utils\n */\nconst repeat = repeat$1;\n\n/**\n * Creates a stream from an effect producing a value of type `A` which repeats\n * forever.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst repeatEffect = repeatEffect$1;\n\n/**\n * Creates a stream from an effect producing chunks of `A` values which\n * repeats forever.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst repeatEffectChunk = repeatEffectChunk$1;\n\n/**\n * Creates a stream from an effect producing chunks of `A` values until it\n * fails with `None`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst repeatEffectChunkOption = repeatEffectChunkOption$1;\n\n/**\n * Creates a stream from an effect producing values of type `A` until it fails\n * with `None`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst repeatEffectOption = repeatEffectOption$1;\n\n/**\n * Creates a stream from an effect producing a value of type `A`, which is\n * repeated using the specified schedule.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst repeatEffectWithSchedule = repeatEffectWithSchedule$1;\n\n/**\n * Repeats the entire stream using the specified schedule. The stream will\n * execute normally, and then repeat again according to the provided schedule.\n * The schedule output will be emitted at the end of each repetition.\n *\n * @since 2.0.0\n * @category utils\n */\nconst repeatEither = repeatEither$1;\n\n/**\n * Repeats each element of the stream using the provided schedule. Repetitions\n * are done in addition to the first execution, which means using\n * `Schedule.recurs(1)` actually results in the original effect, plus an\n * additional recurrence, for a total of two repetitions of each value in the\n * stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst repeatElements = repeatElements$1;\n\n/**\n * Repeats each element of the stream using the provided schedule. When the\n * schedule is finished, then the output of the schedule will be emitted into\n * the stream. Repetitions are done in addition to the first execution, which\n * means using `Schedule.recurs(1)` actually results in the original effect,\n * plus an additional recurrence, for a total of two repetitions of each value\n * in the stream.\n *\n * This function accepts two conversion functions, which allow the output of\n * this stream and the output of the provided schedule to be unified into a\n * single type. For example, `Either` or similar data type.\n *\n * @since 2.0.0\n * @category utils\n */\nconst repeatElementsWith = repeatElementsWith$1;\n\n/**\n * Repeats the provided value infinitely.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst repeatValue = repeatValue$1;\n\n/**\n * Repeats the entire stream using the specified schedule. The stream will\n * execute normally, and then repeat again according to the provided schedule.\n * The schedule output will be emitted at the end of each repetition and can\n * be unified with the stream elements using the provided functions.\n *\n * @since 2.0.0\n * @category utils\n */\nconst repeatWith = repeatWith$1;\n\n/**\n * When the stream fails, retry it according to the given schedule\n *\n * This retries the entire stream, so will re-execute all of the stream's\n * acquire operations.\n *\n * The schedule is reset as soon as the first element passes through the\n * stream again.\n *\n * @param schedule A `Schedule` receiving as input the errors of the stream.\n * @since 2.0.0\n * @category utils\n */\nconst retry = retry$1;\n\n/**\n * Runs the sink on the stream to produce either the sink's result or an error.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst run = run$1;\n\n/**\n * Runs the stream and collects all of its elements to a chunk.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runCollect = runCollect$1;\n\n/**\n * Runs the stream and emits the number of elements processed\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runCount = runCount$1;\n\n/**\n * Runs the stream only for its effects. The emitted elements are discarded.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runDrain = runDrain$1;\n\n/**\n * Executes a pure fold over the stream of values - reduces all elements in\n * the stream to a value of type `S`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runFold = runFold$1;\n\n/**\n * Executes an effectful fold over the stream of values.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runFoldEffect = runFoldEffect$1;\n\n/**\n * Executes a pure fold over the stream of values. Returns a scoped value that\n * represents the scope of the stream.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runFoldScoped = runFoldScoped$1;\n\n/**\n * Executes an effectful fold over the stream of values. Returns a scoped\n * value that represents the scope of the stream.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runFoldScopedEffect = runFoldScopedEffect$1;\n\n/**\n * Reduces the elements in the stream to a value of type `S`. Stops the fold\n * early when the condition is not fulfilled. Example:\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runFoldWhile = runFoldWhile$1;\n\n/**\n * Executes an effectful fold over the stream of values. Stops the fold early\n * when the condition is not fulfilled.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runFoldWhileEffect = runFoldWhileEffect$1;\n\n/**\n * Executes a pure fold over the stream of values. Returns a scoped value that\n * represents the scope of the stream. Stops the fold early when the condition\n * is not fulfilled.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runFoldWhileScoped = runFoldWhileScoped$1;\n\n/**\n * Executes an effectful fold over the stream of values. Returns a scoped\n * value that represents the scope of the stream. Stops the fold early when\n * the condition is not fulfilled.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runFoldWhileScopedEffect = runFoldWhileScopedEffect$1;\n\n/**\n * Consumes all elements of the stream, passing them to the specified\n * callback.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runForEach = runForEach$1;\n\n/**\n * Consumes all elements of the stream, passing them to the specified\n * callback.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runForEachChunk = runForEachChunk$1;\n\n/**\n * Like `Stream.runForEachChunk`, but returns a scoped effect so the\n * finalization order can be controlled.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runForEachChunkScoped = runForEachChunkScoped$1;\n\n/**\n * Like `Stream.forEach`, but returns a scoped effect so the finalization\n * order can be controlled.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runForEachScoped = runForEachScoped$1;\n\n/**\n * Consumes elements of the stream, passing them to the specified callback,\n * and terminating consumption when the callback returns `false`.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runForEachWhile = runForEachWhile$1;\n\n/**\n * Like `Stream.runForEachWhile`, but returns a scoped effect so the\n * finalization order can be controlled.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runForEachWhileScoped = runForEachWhileScoped$1;\n\n/**\n * Runs the stream to completion and yields the first value emitted by it,\n * discarding the rest of the elements.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runHead = runHead$1;\n\n/**\n * Publishes elements of this stream to a `PubSub`. Stream failure and ending will\n * also be signalled.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runIntoPubSub = runIntoPubSub$1;\n\n/**\n * Like `Stream.runIntoPubSub`, but provides the result as a scoped effect to\n * allow for scope composition.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runIntoPubSubScoped = runIntoPubSubScoped$1;\n\n/**\n * Enqueues elements of this stream into a queue. Stream failure and ending\n * will also be signalled.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runIntoQueue = runIntoQueue$1;\n\n/**\n * Like `Stream.runIntoQueue`, but provides the result as a scoped [[ZIO]]\n * to allow for scope composition.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runIntoQueueElementsScoped = runIntoQueueElementsScoped$1;\n\n/**\n * Like `Stream.runIntoQueue`, but provides the result as a scoped effect\n * to allow for scope composition.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runIntoQueueScoped = runIntoQueueScoped$1;\n\n/**\n * Runs the stream to completion and yields the last value emitted by it,\n * discarding the rest of the elements.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runLast = runLast$1;\n\n/**\n * @since 2.0.0\n * @category destructors\n */\nconst runScoped = runScoped$1;\n\n/**\n * Runs the stream to a sink which sums elements, provided they are Numeric.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst runSum = runSum$1;\n\n/**\n * Statefully maps over the elements of this stream to produce all\n * intermediate results of type `S` given an initial S.\n *\n * @since 2.0.0\n * @category utils\n */\nconst scan = scan$1;\n\n/**\n * Statefully and effectfully maps over the elements of this stream to produce\n * all intermediate results of type `S` given an initial S.\n *\n * @since 2.0.0\n * @category utils\n */\nconst scanEffect = scanEffect$1;\n\n/**\n * Statefully maps over the elements of this stream to produce all\n * intermediate results.\n *\n * See also `Stream.scan`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst scanReduce = scanReduce$1;\n\n/**\n * Statefully and effectfully maps over the elements of this stream to produce\n * all intermediate results.\n *\n * See also `Stream.scanEffect`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst scanReduceEffect = scanReduceEffect$1;\n\n/**\n * Schedules the output of the stream using the provided `schedule`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst schedule = schedule$1;\n\n/**\n * Schedules the output of the stream using the provided `schedule` and emits\n * its output at the end (if `schedule` is finite). Uses the provided function\n * to align the stream and schedule outputs on the same type.\n *\n * @since 2.0.0\n * @category utils\n */\nconst scheduleWith = scheduleWith$1;\n\n/**\n * Creates a single-valued stream from a scoped resource.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst scoped = scoped$1;\n\n/**\n * Emits a sliding window of `n` elements.\n *\n * ```ts\n * import * as Stream from \"./Stream\"\n * import { pipe } from \"./Function\"\n *\n * pipe(\n *   Stream.make(1, 2, 3, 4),\n *   Stream.sliding(2),\n *   Stream.runCollect\n * )\n * // => Chunk(Chunk(1, 2), Chunk(2, 3), Chunk(3, 4))\n * ```\n *\n * @since 2.0.0\n * @category utils\n */\nconst sliding = sliding$1;\n\n/**\n * Like `sliding`, but with a configurable `stepSize` parameter.\n *\n * @since 2.0.0\n * @category utils\n */\nconst slidingSize = slidingSize$1;\n\n/**\n * Converts an option on values into an option on errors.\n *\n * @since 2.0.0\n * @category utils\n */\nconst some = some$1;\n\n/**\n * Extracts the optional value, or returns the given 'default'.\n *\n * @since 2.0.0\n * @category utils\n */\nconst someOrElse = someOrElse$1;\n\n/**\n * Extracts the optional value, or fails with the given error 'e'.\n *\n * @since 2.0.0\n * @category utils\n */\nconst someOrFail = someOrFail$1;\n\n/**\n * Splits elements based on a predicate.\n *\n * ```ts\n * import * as Stream from \"./Stream\"\n * import { pipe } from \"./Function\"\n *\n * pipe(\n *   Stream.range(1, 10),\n *   Stream.split((n) => n % 4 === 0),\n *   Stream.runCollect\n * )\n * // => Chunk(Chunk(1, 2, 3), Chunk(5, 6, 7), Chunk(9))\n * ```\n *\n * @since 2.0.0\n * @category utils\n */\nconst split = split$1;\n\n/**\n * Splits elements on a delimiter and transforms the splits into desired output.\n *\n * @since 2.0.0\n * @category utils\n */\nconst splitOnChunk = splitOnChunk$1;\n\n/**\n * Splits strings on newlines. Handles both Windows newlines (`\\r\\n`) and UNIX\n * newlines (`\\n`).\n *\n * @since 2.0.0\n * @category combinators\n */\nconst splitLines = splitLines$1;\n\n/**\n * Creates a single-valued pure stream.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst succeed = succeed$1;\n\n/**\n * Creates a single-valued pure stream.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst sync = sync$1;\n\n/**\n * Returns a lazily constructed stream.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst suspend = suspend$1;\n\n/**\n * Takes the specified number of elements from this stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst take = take$1;\n\n/**\n * Takes the last specified number of elements from this stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst takeRight = takeRight$1;\n\n/**\n * Takes all elements of the stream until the specified predicate evaluates to\n * `true`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst takeUntil = takeUntil$1;\n\n/**\n * Takes all elements of the stream until the specified effectual predicate\n * evaluates to `true`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst takeUntilEffect = takeUntilEffect$1;\n\n/**\n * Takes all elements of the stream for as long as the specified predicate\n * evaluates to `true`.\n *\n * @since 2.0.0\n * @category utils\n */\nconst takeWhile = takeWhile$1;\n\n/**\n * Adds an effect to consumption of every element of the stream.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tap = tap$1;\n\n/**\n * Returns a stream that effectfully \"peeks\" at the failure or success of\n * the stream.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapBoth = tapBoth$1;\n\n/**\n * Returns a stream that effectfully \"peeks\" at the failure of the stream.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapError = tapError$1;\n\n/**\n * Returns a stream that effectfully \"peeks\" at the cause of failure of the\n * stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst tapErrorCause = tapErrorCause$1;\n\n/**\n * Sends all elements emitted by this stream to the specified sink in addition\n * to emitting them.\n *\n * @since 2.0.0\n * @category sequencing\n */\nconst tapSink = tapSink$1;\n\n/**\n * Delays the chunks of this stream according to the given bandwidth\n * parameters using the token bucket algorithm. Allows for burst in the\n * processing of elements by allowing the token bucket to accumulate tokens up\n * to a `units + burst` threshold. The weight of each chunk is determined by\n * the `costFn` function.\n *\n * If using the \"enforce\" strategy, chunks that do not meet the bandwidth\n * constraints are dropped. If using the \"shape\" strategy, chunks are delayed\n * until they can be emitted without exceeding the bandwidth constraints.\n *\n * Defaults to the \"shape\" strategy.\n *\n * @since 2.0.0\n * @category utils\n */\nconst throttle = throttle$1;\n\n/**\n * Delays the chunks of this stream according to the given bandwidth\n * parameters using the token bucket algorithm. Allows for burst in the\n * processing of elements by allowing the token bucket to accumulate tokens up\n * to a `units + burst` threshold. The weight of each chunk is determined by\n * the effectful `costFn` function.\n *\n * If using the \"enforce\" strategy, chunks that do not meet the bandwidth\n * constraints are dropped. If using the \"shape\" strategy, chunks are delayed\n * until they can be emitted without exceeding the bandwidth constraints.\n *\n * Defaults to the \"shape\" strategy.\n *\n * @since 2.0.0\n * @category utils\n */\nconst throttleEffect = throttleEffect$1;\n\n/**\n * A stream that emits Unit values spaced by the specified duration.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst tick = tick$1;\n\n/**\n * Ends the stream if it does not produce a value after the specified duration.\n *\n * @since 2.0.0\n * @category utils\n */\nconst timeout = timeout$1;\n\n/**\n * Fails the stream with given error if it does not produce a value after d\n * duration.\n *\n * @since 2.0.0\n * @category utils\n */\nconst timeoutFail = timeoutFail$1;\n\n/**\n * Fails the stream with given cause if it does not produce a value after d\n * duration.\n *\n * @since 2.0.0\n * @category utils\n */\nconst timeoutFailCause = timeoutFailCause$1;\n\n/**\n * Switches the stream if it does not produce a value after the specified\n * duration.\n *\n * @since 2.0.0\n * @category utils\n */\nconst timeoutTo = timeoutTo$1;\n\n/**\n * Converts the stream to a scoped `PubSub` of chunks. After the scope is closed,\n * the `PubSub` will never again produce values and should be discarded.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst toPubSub = toPubSub$1;\n\n/**\n * Returns in a scope a ZIO effect that can be used to repeatedly pull chunks\n * from the stream. The pull effect fails with None when the stream is\n * finished, or with Some error if it fails, otherwise it returns a chunk of\n * the stream's output.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst toPull = toPull$1;\n\n/**\n * Converts the stream to a scoped queue of chunks. After the scope is closed,\n * the queue will never again produce values and should be discarded.\n *\n * Defaults to the \"suspend\" back pressure strategy with a capacity of 2.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst toQueue = toQueue$1;\n\n/**\n * Converts the stream to a scoped queue of elements. After the scope is\n * closed, the queue will never again produce values and should be discarded.\n *\n * Defaults to a capacity of 2.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst toQueueOfElements = toQueueOfElements$1;\n\n/**\n * Converts the stream to a `ReadableStream`.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream.\n *\n * @since 2.0.0\n * @category destructors\n */\nconst toReadableStream = toReadableStream$1;\n\n/**\n * Applies the transducer to the stream and emits its outputs.\n *\n * @since 2.0.0\n * @category utils\n */\nconst transduce = transduce$1;\n\n/**\n * Creates a stream by peeling off the \"layers\" of a value of type `S`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unfold = unfold$1;\n\n/**\n * Creates a stream by peeling off the \"layers\" of a value of type `S`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unfoldChunk = unfoldChunk$1;\n\n/**\n * Creates a stream by effectfully peeling off the \"layers\" of a value of type\n * `S`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unfoldChunkEffect = unfoldChunkEffect$1;\n\n/**\n * Creates a stream by effectfully peeling off the \"layers\" of a value of type\n * `S`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unfoldEffect = unfoldEffect$1;\n\n/**\n * A stream that contains a single `Unit` value.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unit = unit$1;\n\n/**\n * Creates a stream produced from an `Effect`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unwrap = unwrap$1;\n\n/**\n * Creates a stream produced from a scoped `Effect`.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst unwrapScoped = unwrapScoped$1;\n\n/**\n * Updates the specified service within the context of the `Stream`.\n *\n * @since 2.0.0\n * @category context\n */\nconst updateService = updateService$1;\n\n/**\n * Returns the specified stream if the given condition is satisfied, otherwise\n * returns an empty stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst when = when$1;\n\n/**\n * Returns the resulting stream when the given `PartialFunction` is defined\n * for the given value, otherwise returns an empty stream.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst whenCase = whenCase$1;\n\n/**\n * Returns the stream when the given partial function is defined for the given\n * effectful value, otherwise returns an empty stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst whenCaseEffect = whenCaseEffect$1;\n\n/**\n * Returns the stream if the given effectful condition is satisfied, otherwise\n * returns an empty stream.\n *\n * @since 2.0.0\n * @category utils\n */\nconst whenEffect = whenEffect$1;\n\n/**\n * Wraps the stream with a new span for tracing.\n *\n * @since 2.0.0\n * @category tracing\n */\nconst withSpan = withSpan$1;\n\n/**\n * Zips this stream with another point-wise and emits tuples of elements from\n * both streams.\n *\n * The new stream will end when one of the sides ends.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zip = zip$1;\n\n/**\n * Zips this stream with another point-wise and emits tuples of elements from\n * both streams.\n *\n * The new stream will end when one of the sides ends.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipFlatten = zipFlatten$1;\n\n/**\n * Zips this stream with another point-wise, creating a new stream of pairs of\n * elements from both sides.\n *\n * The defaults `defaultLeft` and `defaultRight` will be used if the streams\n * have different lengths and one of the streams has ended before the other.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipAll = zipAll$1;\n\n/**\n * Zips this stream with another point-wise, and keeps only elements from this\n * stream.\n *\n * The provided default value will be used if the other stream ends before\n * this one.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipAllLeft = zipAllLeft$1;\n\n/**\n * Zips this stream with another point-wise, and keeps only elements from the\n * other stream.\n *\n * The provided default value will be used if this stream ends before the\n * other one.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipAllRight = zipAllRight$1;\n\n/**\n * Zips this stream that is sorted by distinct keys and the specified stream\n * that is sorted by distinct keys to produce a new stream that is sorted by\n * distinct keys. Combines values associated with each key into a tuple,\n * using the specified values `defaultLeft` and `defaultRight` to fill in\n * missing values.\n *\n * This allows zipping potentially unbounded streams of data by key in\n * constant space but the caller is responsible for ensuring that the\n * streams are sorted by distinct keys.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipAllSortedByKey = zipAllSortedByKey$1;\n\n/**\n * Zips this stream that is sorted by distinct keys and the specified stream\n * that is sorted by distinct keys to produce a new stream that is sorted by\n * distinct keys. Keeps only values from this stream, using the specified\n * value `default` to fill in missing values.\n *\n * This allows zipping potentially unbounded streams of data by key in\n * constant space but the caller is responsible for ensuring that the\n * streams are sorted by distinct keys.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipAllSortedByKeyLeft = zipAllSortedByKeyLeft$1;\n\n/**\n * Zips this stream that is sorted by distinct keys and the specified stream\n * that is sorted by distinct keys to produce a new stream that is sorted by\n * distinct keys. Keeps only values from that stream, using the specified\n * value `default` to fill in missing values.\n *\n * This allows zipping potentially unbounded streams of data by key in\n * constant space but the caller is responsible for ensuring that the\n * streams are sorted by distinct keys.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipAllSortedByKeyRight = zipAllSortedByKeyRight$1;\n\n/**\n * Zips this stream that is sorted by distinct keys and the specified stream\n * that is sorted by distinct keys to produce a new stream that is sorted by\n * distinct keys. Uses the functions `left`, `right`, and `both` to handle\n * the cases where a key and value exist in this stream, that stream, or\n * both streams.\n *\n * This allows zipping potentially unbounded streams of data by key in\n * constant space but the caller is responsible for ensuring that the\n * streams are sorted by distinct keys.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipAllSortedByKeyWith = zipAllSortedByKeyWith$1;\n\n/**\n * Zips this stream with another point-wise. The provided functions will be\n * used to create elements for the composed stream.\n *\n * The functions `left` and `right` will be used if the streams have different\n * lengths and one of the streams has ended before the other.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipAllWith = zipAllWith$1;\n\n/**\n * Zips the two streams so that when a value is emitted by either of the two\n * streams, it is combined with the latest value from the other stream to\n * produce a result.\n *\n * Note: tracking the latest value is done on a per-chunk basis. That means\n * that emitted elements that are not the last value in chunks will never be\n * used for zipping.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipLatest = zipLatest$1;\n\n/**\n * Zips the two streams so that when a value is emitted by either of the two\n * streams, it is combined with the latest value from the other stream to\n * produce a result.\n *\n * Note: tracking the latest value is done on a per-chunk basis. That means\n * that emitted elements that are not the last value in chunks will never be\n * used for zipping.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipLatestWith = zipLatestWith$1;\n\n/**\n * Zips this stream with another point-wise, but keeps only the outputs of\n * this stream.\n *\n * The new stream will end when one of the sides ends.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipLeft = zipLeft$1;\n\n/**\n * Zips this stream with another point-wise, but keeps only the outputs of the\n * other stream.\n *\n * The new stream will end when one of the sides ends.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipRight = zipRight$1;\n\n/**\n * Zips this stream with another point-wise and applies the function to the\n * paired elements.\n *\n * The new stream will end when one of the sides ends.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWith = zipWith$1;\n\n/**\n * Zips this stream with another point-wise and applies the function to the\n * paired elements.\n *\n * The new stream will end when one of the sides ends.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWithChunks = zipWithChunks$1;\n\n/**\n * Zips each element with the next element if present.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWithNext = zipWithNext$1;\n\n/**\n * Zips each element with the previous element. Initially accompanied by\n * `None`.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWithPrevious = zipWithPrevious$1;\n\n/**\n * Zips each element with both the previous and next element.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWithPreviousAndNext = zipWithPreviousAndNext$1;\n\n/**\n * Zips this stream together with the index of elements.\n *\n * @since 2.0.0\n * @category zipping\n */\nconst zipWithIndex = zipWithIndex$1;\n\n// -------------------------------------------------------------------------------------\n// Do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.0.0\n * @category do notation\n */\nconst Do = Do$1;\n\n/**\n * Binds a value from a stream in a `do` scope\n *\n * @since 2.0.0\n * @category do notation\n */\nconst bind = bind$1;\n\n/**\n * Binds an effectful value in a `do` scope\n *\n * @since 2.0.0\n * @category do notation\n */\nconst bindEffect = bindEffect$1;\n\n/**\n * @since 2.0.0\n * @category do notation\n */\nconst bindTo = bindTo$1;\nconst let_ = let_$1;\n\n// -------------------------------------------------------------------------------------\n// encoding\n// -------------------------------------------------------------------------------------\n\n/**\n * Decode Uint8Array chunks into a stream of strings using the specified encoding.\n *\n * @since 2.0.0\n * @category encoding\n */\nconst decodeText = decodeText$1;\n\n/**\n * Encode a stream of strings into a stream of Uint8Array chunks using the specified encoding.\n *\n * @since 2.0.0\n * @category encoding\n */\nconst encodeText = encodeText$1;\n\nexport { DefaultChunkSize, Do, StreamTypeId, accumulate, accumulateChunks, acquireRelease, aggregate, aggregateWithin, aggregateWithinEither, as, _async as async, asyncEffect, asyncInterrupt, asyncOption, asyncScoped, bind, bindEffect, bindTo, branchAfter, broadcast, broadcastDynamic, broadcastedQueues, broadcastedQueuesDynamic, buffer, bufferChunks, catchAll, catchAllCause, catchSome, catchSomeCause, catchTag, catchTags, changes, changesWith, changesWithEffect, chunks, chunksWith, combine, combineChunks, concat, concatAll, context, contextWith, contextWithEffect, contextWithStream, cross, crossLeft, crossRight, crossWith, debounce, decodeText, die, dieMessage, dieSync, distributedWith, distributedWithDynamic, drain, drainFork, drop, dropRight, dropUntil, dropUntilEffect, dropWhile, dropWhileEffect, either, empty, encodeText, ensuring, ensuringWith, execute, fail, failCause, failCauseSync, failSync, filter, filterEffect, filterMap, filterMapEffect, filterMapWhile, filterMapWhileEffect, finalizer, find, findEffect, flatMap, flatten, flattenChunks, flattenEffect, flattenExitOption, flattenIterables, flattenTake, forever, fromAsyncIterable, fromChannel, fromChunk, fromChunkPubSub, fromChunkQueue, fromChunks, fromEffect, fromEffectOption, fromIterable, fromIterableEffect, fromIteratorSucceed, fromPubSub, fromPull, fromQueue, fromReadableStream, fromReadableStreamByob, fromSchedule, groupAdjacentBy, groupBy, groupByKey, grouped, groupedWithin, haltAfter, haltWhen, haltWhenDeferred, identity, interleave, interleaveWith, interruptAfter, interruptWhen, interruptWhenDeferred, intersperse, intersperseAffixes, iterate, let_ as let, make, map, mapAccum, mapAccumEffect, mapBoth, mapChunks, mapChunksEffect, mapConcat, mapConcatChunk, mapConcatChunkEffect, mapConcatEffect, mapEffect, mapError, mapErrorCause, mapInputContext, merge, mergeAll, mergeEither, mergeLeft, mergeRight, mergeWith, mkString, never, onDone, onError, orDie, orDieWith, orElse, orElseEither, orElseFail, orElseIfEmpty, orElseIfEmptyChunk, orElseIfEmptyStream, orElseSucceed, paginate, paginateChunk, paginateChunkEffect, paginateEffect, partition, partitionEither, peel, pipeThrough, pipeThroughChannel, pipeThroughChannelOrFail, prepend, provideContext, provideLayer, provideService, provideServiceEffect, provideServiceStream, provideSomeLayer, range, rechunk, refineOrDie, refineOrDieWith, repeat, repeatEffect, repeatEffectChunk, repeatEffectChunkOption, repeatEffectOption, repeatEffectWithSchedule, repeatEither, repeatElements, repeatElementsWith, repeatValue, repeatWith, retry, run, runCollect, runCount, runDrain, runFold, runFoldEffect, runFoldScoped, runFoldScopedEffect, runFoldWhile, runFoldWhileEffect, runFoldWhileScoped, runFoldWhileScopedEffect, runForEach, runForEachChunk, runForEachChunkScoped, runForEachScoped, runForEachWhile, runForEachWhileScoped, runHead, runIntoPubSub, runIntoPubSubScoped, runIntoQueue, runIntoQueueElementsScoped, runIntoQueueScoped, runLast, runScoped, runSum, scan, scanEffect, scanReduce, scanReduceEffect, schedule, scheduleWith, scoped, sliding, slidingSize, some, someOrElse, someOrFail, split, splitLines, splitOnChunk, succeed, suspend, sync, take, takeRight, takeUntil, takeUntilEffect, takeWhile, tap, tapBoth, tapError, tapErrorCause, tapSink, throttle, throttleEffect, tick, timeout, timeoutFail, timeoutFailCause, timeoutTo, toChannel, toPubSub, toPull, toQueue, toQueueOfElements, toReadableStream, transduce, unfold, unfoldChunk, unfoldChunkEffect, unfoldEffect, unit, unwrap, unwrapScoped, updateService, when, whenCase, whenCaseEffect, whenEffect, withSpan, zip, zipAll, zipAllLeft, zipAllRight, zipAllSortedByKey, zipAllSortedByKeyLeft, zipAllSortedByKeyRight, zipAllSortedByKeyWith, zipAllWith, zipFlatten, zipLatest, zipLatestWith, zipLeft, zipRight, zipWith, zipWithChunks, zipWithIndex, zipWithNext, zipWithPrevious, zipWithPreviousAndNext };\n","import { symbol as symbol$1, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { toString, toJSON, NodeInspectSymbol } from '../../Inspectable/dist/effect-Inspectable.esm.js';\nimport { isSome } from '../../Option/dist/effect-Option.esm.js';\nimport { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { empty as empty$1, fromIterable as fromIterable$1, findFirst, getOrder as getOrder$1, first, keys as keys$1, reduce as reduce$1, removeFirst, has as has$1, insert, size as size$1, values as values$1 } from '../../RedBlackTree/dist/effect-RedBlackTree.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst TypeId = /*#__PURE__*/Symbol.for(\"effect/SortedMap\");\n\n/**\n * @since 2.0.0\n * @category symbol\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\nconst SortedMapProto = {\n  [TypeId]: TypeId,\n  [symbol]() {\n    return pipe(hash(this.tree), combine(hash(\"effect/SortedMap\")));\n  },\n  [symbol$1](that) {\n    return isSortedMap(that) && equals(this.tree, that.tree);\n  },\n  [Symbol.iterator]() {\n    return this.tree[Symbol.iterator]();\n  },\n  toString() {\n    return toString(this.toJSON());\n  },\n  toJSON() {\n    return {\n      _id: \"SortedMap\",\n      values: Array.from(this).map(toJSON)\n    };\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON();\n  },\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n};\nconst makeImpl = tree => {\n  const self = Object.create(SortedMapProto);\n  self.tree = tree;\n  return self;\n};\n\n/**\n * @since 2.0.0\n * @category refinements\n */\nconst isSortedMap = u => hasProperty(u, TypeId);\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst empty = ord => makeImpl(empty$1(ord));\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst fromIterable = ord => iterable => makeImpl(fromIterable$1(ord)(iterable));\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nconst make = ord => (...entries) => fromIterable(ord)(entries);\n\n/**\n * @since 2.0.0\n * @category predicates\n */\nconst isEmpty = self => size(self) === 0;\n\n/**\n * @since 2.0.0\n * @category predicates\n */\nconst isNonEmpty = self => size(self) > 0;\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst entries = self => self[Symbol.iterator]();\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst get = /*#__PURE__*/dual(2, (self, key) => findFirst(self.tree, key));\n\n/**\n * Gets the `Order<K>` that the `SortedMap<K, V>` is using.\n *\n * @since 2.0.0\n * @category getters\n */\nconst getOrder = self => getOrder$1(self.tree);\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst has = /*#__PURE__*/dual(2, (self, key) => isSome(get(self, key)));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst headOption = self => first(self.tree);\n\n/**\n * @since 2.0.0\n * @category mapping\n */\nconst map = /*#__PURE__*/dual(2, (self, f) => reduce(self, empty(getOrder$1(self.tree)), (acc, v, k) => set(acc, k, f(v, k))));\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst keys = self => keys$1(self.tree);\n\n/**\n * @since 2.0.0\n * @category folding\n */\nconst reduce = /*#__PURE__*/dual(3, (self, zero, f) => reduce$1(self.tree, zero, f));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst remove = /*#__PURE__*/dual(2, (self, key) => makeImpl(removeFirst(self.tree, key)));\n\n/**\n * @since 2.0.0\n * @category elements\n */\nconst set = /*#__PURE__*/dual(3, (self, key, value) => has$1(self.tree, key) ? makeImpl(insert(removeFirst(self.tree, key), key, value)) : makeImpl(insert(self.tree, key, value)));\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst size = self => size$1(self.tree);\n\n/**\n * @since 2.0.0\n * @category getters\n */\nconst values = self => values$1(self.tree);\n\nexport { empty, entries, fromIterable, get, getOrder, has, headOption, isEmpty, isNonEmpty, isSortedMap, keys, make, map, reduce, remove, set, size, values };\n","import { pipeArguments } from '../../Pipeable/dist/effect-Pipeable.esm.js';\nimport { StreamTypeId, toChannel } from '../../Stream/dist/effect-Stream.esm.js';\n\n/**\n * @since 2.0.0\n */\nconst streamVariance = {\n  _R: _ => _,\n  _E: _ => _,\n  _A: _ => _\n};\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nclass Class {\n  /**\n   * @since 2.0.0\n   */\n  [StreamTypeId] = streamVariance;\n\n  /**\n   * @since 2.0.0\n   */\n  pipe() {\n    return pipeArguments(this, arguments);\n  }\n\n  /**\n   * @since 2.0.0\n   */\n\n  /**\n   * @internal\n   */\n  get channel() {\n    return toChannel(this.toStream());\n  }\n}\n\nexport { Class };\n","import { string } from '../../Equivalence/dist/effect-Equivalence.esm.js';\nimport { dual } from '../../Function/dist/effect-Function.esm.js';\nimport { isNonEmptyArray } from '../../internal/ReadonlyArray.esm.js';\nimport { greaterThanOrEqualTo, sign } from '../../Number/dist/effect-Number.esm.js';\nimport { filter, some, fromNullable } from '../../Option/dist/effect-Option.esm.js';\nimport { string as string$1 } from '../../Order/dist/effect-Order.esm.js';\nimport { isString as isString$1 } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * This module provides utility functions and type class instances for working with the `string` type in TypeScript.\n * It includes functions for basic string manipulation, as well as type class instances for\n * `Equivalence` and `Order`.\n *\n * @since 2.0.0\n */\n/**\n * Tests if a value is a `string`.\n *\n * @param input - The value to test.\n *\n * @example\n * import { isString } from 'effect/String'\n *\n * assert.deepStrictEqual(isString(\"a\"), true)\n * assert.deepStrictEqual(isString(1), false)\n *\n * @category guards\n * @since 2.0.0\n */\nconst isString = isString$1;\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Equivalence = string;\n\n/**\n * @category instances\n * @since 2.0.0\n */\nconst Order = string$1;\n\n/**\n * The empty string `\"\"`.\n *\n * @since 2.0.0\n */\nconst empty = \"\";\n\n/**\n * Concatenates two strings at the type level.\n *\n * @since 2.0.0\n */\n\n/**\n * Concatenates two strings at runtime.\n *\n * @since 2.0.0\n */\nconst concat = /*#__PURE__*/dual(2, (self, that) => self + that);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe('a', S.toUpperCase), 'A')\n *\n * @since 2.0.0\n */\nconst toUpperCase = self => self.toUpperCase();\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe('A', S.toLowerCase), 'a')\n *\n * @since 2.0.0\n */\nconst toLowerCase = self => self.toLowerCase();\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe('abc', S.capitalize), 'Abc')\n *\n * @since 2.0.0\n */\nconst capitalize = self => {\n  if (self.length === 0) return self;\n  return toUpperCase(self[0]) + self.slice(1);\n};\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe('ABC', S.uncapitalize), 'aBC')\n *\n * @since 2.0.0\n */\nconst uncapitalize = self => {\n  if (self.length === 0) return self;\n  return toLowerCase(self[0]) + self.slice(1);\n};\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe('abc', S.replace('b', 'd')), 'adc')\n *\n * @since 2.0.0\n */\nconst replace = (searchValue, replaceValue) => self => self.replace(searchValue, replaceValue);\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @example\n * import * as S from 'effect/String'\n *\n * assert.deepStrictEqual(S.trim(' a '), 'a')\n *\n * @since 2.0.0\n */\nconst trim = self => self.trim();\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @example\n * import * as S from 'effect/String'\n *\n * assert.deepStrictEqual(S.trimStart(' a '), 'a ')\n *\n * @since 2.0.0\n */\nconst trimStart = self => self.trimStart();\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @example\n * import * as S from 'effect/String'\n *\n * assert.deepStrictEqual(S.trimEnd(' a '), ' a')\n *\n * @since 2.0.0\n */\nconst trimEnd = self => self.trimEnd();\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe('abcd', S.slice(1, 3)), 'bc')\n *\n * @since 2.0.0\n */\nconst slice = (start, end) => self => self.slice(start, end);\n\n/**\n * Test whether a `string` is empty.\n *\n * @example\n * import * as S from 'effect/String'\n *\n * assert.deepStrictEqual(S.isEmpty(''), true)\n * assert.deepStrictEqual(S.isEmpty('a'), false)\n *\n * @since 2.0.0\n */\nconst isEmpty = self => self.length === 0;\n\n/**\n * Test whether a `string` is non empty.\n *\n * @since 2.0.0\n */\nconst isNonEmpty = self => self.length > 0;\n\n/**\n * Calculate the number of characters in a `string`.\n *\n * @example\n * import * as S from 'effect/String'\n *\n * assert.deepStrictEqual(S.length('abc'), 3)\n *\n * @since 2.0.0\n */\nconst length = self => self.length;\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe('abc', S.split('')), ['a', 'b', 'c'])\n * assert.deepStrictEqual(pipe('', S.split('')), [''])\n *\n * @since 2.0.0\n */\nconst split = /*#__PURE__*/dual(2, (self, separator) => {\n  const out = self.split(separator);\n  return isNonEmptyArray(out) ? out : [self];\n});\n\n/**\n * Returns `true` if `searchString` appears as a substring of `self`, at one or more positions that are\n * greater than or equal to `position`; otherwise, returns `false`.\n *\n * @since 2.0.0\n */\nconst includes = (searchString, position) => self => self.includes(searchString, position);\n\n/**\n * @since 2.0.0\n */\nconst startsWith = (searchString, position) => self => self.startsWith(searchString, position);\n\n/**\n * @since 2.0.0\n */\nconst endsWith = (searchString, position) => self => self.endsWith(searchString, position);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import * as Option from 'effect/Option'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"abc\", S.charCodeAt(1)), Option.some(98))\n * assert.deepStrictEqual(pipe(\"abc\", S.charCodeAt(4)), Option.none())\n *\n * @since 2.0.0\n */\nconst charCodeAt = /*#__PURE__*/dual(2, (self, index) => filter(some(self.charCodeAt(index)), charCode => !isNaN(charCode)));\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"abcd\", S.substring(1)), \"bcd\")\n * assert.deepStrictEqual(pipe(\"abcd\", S.substring(1, 3)), \"bc\")\n *\n * @since 2.0.0\n */\nconst substring = (start, end) => self => self.substring(start, end);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import * as Option from 'effect/Option'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"abc\", S.at(1)), Option.some(\"b\"))\n * assert.deepStrictEqual(pipe(\"abc\", S.at(4)), Option.none())\n *\n * @since 2.0.0\n */\nconst at = /*#__PURE__*/dual(2, (self, index) => fromNullable(self.at(index)));\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import * as Option from 'effect/Option'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"abc\", S.charAt(1)), Option.some(\"b\"))\n * assert.deepStrictEqual(pipe(\"abc\", S.charAt(4)), Option.none())\n *\n * @since 2.0.0\n */\nconst charAt = /*#__PURE__*/dual(2, (self, index) => filter(some(self.charAt(index)), isNonEmpty));\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import * as Option from 'effect/Option'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"abc\", S.codePointAt(1)), Option.some(98))\n *\n * @since 2.0.0\n */\nconst codePointAt = /*#__PURE__*/dual(2, (self, index) => fromNullable(self.codePointAt(index)));\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import * as Option from 'effect/Option'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"abbbc\", S.indexOf(\"b\")), Option.some(1))\n *\n * @since 2.0.0\n */\nconst indexOf = searchString => self => filter(some(self.indexOf(searchString)), greaterThanOrEqualTo(0));\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import * as Option from 'effect/Option'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"abbbc\", S.lastIndexOf(\"b\")), Option.some(3))\n * assert.deepStrictEqual(pipe(\"abbbc\", S.lastIndexOf(\"d\")), Option.none())\n *\n * @since 2.0.0\n */\nconst lastIndexOf = searchString => self => filter(some(self.lastIndexOf(searchString)), greaterThanOrEqualTo(0));\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"a\", S.localeCompare(\"b\")), -1)\n * assert.deepStrictEqual(pipe(\"b\", S.localeCompare(\"a\")), 1)\n * assert.deepStrictEqual(pipe(\"a\", S.localeCompare(\"a\")), 0)\n *\n * @since 2.0.0\n */\nconst localeCompare = (that, locales, options) => self => sign(self.localeCompare(that, locales, options));\n\n/**\n * It is the `pipe`-able version of the native `match` method.\n *\n * @since 2.0.0\n */\nconst match = regexp => self => fromNullable(self.match(regexp));\n\n/**\n * It is the `pipe`-able version of the native `matchAll` method.\n *\n * @since 2.0.0\n */\nconst matchAll = regexp => self => self.matchAll(regexp);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * const str = \"\\u1E9B\\u0323\";\n * assert.deepStrictEqual(pipe(str, S.normalize()), \"\\u1E9B\\u0323\")\n * assert.deepStrictEqual(pipe(str, S.normalize(\"NFC\")), \"\\u1E9B\\u0323\")\n * assert.deepStrictEqual(pipe(str, S.normalize(\"NFD\")), \"\\u017F\\u0323\\u0307\")\n * assert.deepStrictEqual(pipe(str, S.normalize(\"NFKC\")), \"\\u1E69\")\n * assert.deepStrictEqual(pipe(str, S.normalize(\"NFKD\")), \"\\u0073\\u0323\\u0307\")\n *\n * @since 2.0.0\n */\nconst normalize = form => self => self.normalize(form);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"a\", S.padEnd(5)), \"a    \")\n * assert.deepStrictEqual(pipe(\"a\", S.padEnd(5, \"_\")), \"a____\")\n *\n * @since 2.0.0\n */\nconst padEnd = (maxLength, fillString) => self => self.padEnd(maxLength, fillString);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"a\", S.padStart(5)), \"    a\")\n * assert.deepStrictEqual(pipe(\"a\", S.padStart(5, \"_\")), \"____a\")\n *\n * @since 2.0.0\n */\nconst padStart = (maxLength, fillString) => self => self.padStart(maxLength, fillString);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"a\", S.repeat(5)), \"aaaaa\")\n *\n * @since 2.0.0\n */\nconst repeat = count => self => self.repeat(count);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"ababb\", S.replaceAll(\"b\", \"c\")), \"acacc\")\n * assert.deepStrictEqual(pipe(\"ababb\", S.replaceAll(/ba/g, \"cc\")), \"accbb\")\n *\n * @since 2.0.0\n */\nconst replaceAll = (searchValue, replaceValue) => self => self.replaceAll(searchValue, replaceValue);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import * as Option from 'effect/Option'\n * import { pipe } from 'effect/Function'\n *\n * assert.deepStrictEqual(pipe(\"ababb\", S.search(\"b\")), Option.some(1))\n * assert.deepStrictEqual(pipe(\"ababb\", S.search(/abb/)), Option.some(2))\n * assert.deepStrictEqual(pipe(\"ababb\", S.search(\"d\")), Option.none())\n *\n * @since 2.0.0\n */\nconst search = /*#__PURE__*/dual(2, (self, regexp) => filter(some(self.search(regexp)), greaterThanOrEqualTo(0)));\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * const str = \"\\u0130\"\n * assert.deepStrictEqual(pipe(str, S.toLocaleLowerCase(\"tr\")), \"i\")\n *\n * @since 2.0.0\n */\nconst toLocaleLowerCase = locale => self => self.toLocaleLowerCase(locale);\n\n/**\n * @example\n * import * as S from 'effect/String'\n * import { pipe } from 'effect/Function'\n *\n * const str = \"i\\u0307\"\n * assert.deepStrictEqual(pipe(str, S.toLocaleUpperCase(\"lt-LT\")), \"I\")\n *\n * @since 2.0.0\n */\nconst toLocaleUpperCase = locale => self => self.toLocaleUpperCase(locale);\n\n/**\n * Keep the specified number of characters from the start of a string.\n *\n * If `n` is larger than the available number of characters, the string will\n * be returned whole.\n *\n * If `n` is not a positive number, an empty string will be returned.\n *\n * If `n` is a float, it will be rounded down to the nearest integer.\n *\n * @example\n * import * as S from 'effect/String'\n *\n * assert.deepStrictEqual(S.takeLeft(\"Hello World\", 5), \"Hello\")\n *\n * @since 2.0.0\n */\nconst takeLeft = /*#__PURE__*/dual(2, (self, n) => self.slice(0, Math.max(n, 0)));\n\n/**\n * Keep the specified number of characters from the end of a string.\n *\n * If `n` is larger than the available number of characters, the string will\n * be returned whole.\n *\n * If `n` is not a positive number, an empty string will be returned.\n *\n * If `n` is a float, it will be rounded down to the nearest integer.\n *\n * @example\n * import * as S from 'effect/String'\n *\n * assert.deepStrictEqual(S.takeRight(\"Hello World\", 5), \"World\")\n *\n * @since 2.0.0\n */\nconst takeRight = /*#__PURE__*/dual(2, (self, n) => self.slice(Math.max(0, self.length - Math.floor(n)), Infinity));\nconst CR = 0x0d;\nconst LF = 0x0a;\n\n/**\n * Returns an `IterableIterator` which yields each line contained within the\n * string, trimming off the trailing newline character.\n *\n * @since 2.0.0\n */\n// export const linesIterator = (self: string): LinesIterator => linesSeparated(self, true)\n\n/**\n * Returns an `IterableIterator` which yields each line contained within the\n * string as well as the trailing newline character.\n *\n * @since 2.0.0\n */\nconst linesWithSeparators = s => linesSeparated(s, false);\n\n/**\n * For every line in this string, strip a leading prefix consisting of blanks\n * or control characters followed by the character specified by `marginChar`\n * from the line.\n *\n * @since 2.0.0\n */\nconst stripMarginWith = /*#__PURE__*/dual(2, (self, marginChar) => {\n  let out = \"\";\n  for (const line of linesWithSeparators(self)) {\n    let index = 0;\n    while (index < line.length && line.charAt(index) <= \" \") {\n      index = index + 1;\n    }\n    const stripped = index < line.length && line.charAt(index) === marginChar ? line.substring(index + 1) : line;\n    out = out + stripped;\n  }\n  return out;\n});\n\n/**\n * For every line in this string, strip a leading prefix consisting of blanks\n * or control characters followed by the `\"|\"` character from the line.\n *\n * @since 2.0.0\n */\nconst stripMargin = self => stripMarginWith(self, \"|\");\nclass LinesIterator {\n  constructor(s, stripped = false) {\n    this.s = s;\n    this.stripped = stripped;\n    this.index = 0;\n    this.length = s.length;\n  }\n  next() {\n    if (this.done) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n    const start = this.index;\n    while (!this.done && !isLineBreak(this.s[this.index])) {\n      this.index = this.index + 1;\n    }\n    let end = this.index;\n    if (!this.done) {\n      const char = this.s[this.index];\n      this.index = this.index + 1;\n      if (!this.done && isLineBreak2(char, this.s[this.index])) {\n        this.index = this.index + 1;\n      }\n      if (!this.stripped) {\n        end = this.index;\n      }\n    }\n    return {\n      done: false,\n      value: this.s.substring(start, end)\n    };\n  }\n  [Symbol.iterator]() {\n    return new LinesIterator(this.s, this.stripped);\n  }\n  get done() {\n    return this.index >= this.length;\n  }\n}\n\n/**\n * Test if the provided character is a line break character (i.e. either `\"\\r\"`\n * or `\"\\n\"`).\n */\nconst isLineBreak = char => {\n  const code = char.charCodeAt(0);\n  return code === CR || code === LF;\n};\n\n/**\n * Test if the provided characters combine to form a carriage return/line-feed\n * (i.e. `\"\\r\\n\"`).\n */\nconst isLineBreak2 = (char0, char1) => char0.charCodeAt(0) === CR && char1.charCodeAt(0) === LF;\nconst linesSeparated = (self, stripped) => new LinesIterator(self, stripped);\n\nexport { Equivalence, Order, at, capitalize, charAt, charCodeAt, codePointAt, concat, empty, endsWith, includes, indexOf, isEmpty, isNonEmpty, isString, lastIndexOf, length, linesWithSeparators, localeCompare, match, matchAll, normalize, padEnd, padStart, repeat, replace, replaceAll, search, slice, split, startsWith, stripMargin, stripMarginWith, substring, takeLeft, takeRight, toLocaleLowerCase, toLocaleUpperCase, toLowerCase, toUpperCase, trim, trimEnd, trimStart, uncapitalize };\n","import { map } from '../../internal/core.esm.js';\nimport { addSupervisor as addSupervisor$1 } from '../../internal/layer/circular.esm.js';\nimport { SupervisorTypeId as SupervisorTypeId$1, fibersIn as fibersIn$1, fromEffect as fromEffect$1, none as none$1, track as track$1, unsafeTrack as unsafeTrack$1, ProxySupervisor, Zip, supervisorVariance } from '../../internal/supervisor.esm.js';\n\n/**\n * A `Supervisor<T>` is allowed to supervise the launching and termination of\n * fibers, producing some visible value of type `T` from the supervision.\n *\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n * @category symbols\n */\nconst SupervisorTypeId = SupervisorTypeId$1;\n\n/**\n * @since 2.0.0\n * @category symbols\n */\n\n/**\n * @since 2.0.0\n * @category models\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n * @category context\n */\nconst addSupervisor = addSupervisor$1;\n\n/**\n * Creates a new supervisor that tracks children in a set.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fibersIn = fibersIn$1;\n\n/**\n * Creates a new supervisor that constantly yields effect when polled\n *\n * @since 2.0.0\n * @category constructors\n */\nconst fromEffect = fromEffect$1;\n\n/**\n * A supervisor that doesn't do anything in response to supervision events.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst none = none$1;\n\n/**\n * Creates a new supervisor that tracks children in a set.\n *\n * @since 2.0.0\n * @category constructors\n */\nconst track = track$1;\n\n/**\n * Unsafely creates a new supervisor that tracks children in a set.\n *\n * @since 2.0.0\n * @category unsafe\n */\nconst unsafeTrack = unsafeTrack$1;\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nclass AbstractSupervisor {\n  /**\n   * @since 2.0.0\n   */\n\n  /**\n   * @since 2.0.0\n   */\n  onStart(_context, _effect, _parent, _fiber) {\n    //\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  onEnd(_value, _fiber) {\n    //\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  onEffect(_fiber, _effect) {\n    //\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  onSuspend(_fiber) {\n    //\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  onResume(_fiber) {\n    //\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  map(f) {\n    return new ProxySupervisor(this, () => map(this.value(), f));\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  zip(right) {\n    return new Zip(this, right);\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  onRun(execution, _fiber) {\n    return execution();\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  [SupervisorTypeId] = supervisorVariance;\n}\n\nexport { AbstractSupervisor, SupervisorTypeId, addSupervisor, fibersIn, fromEffect, none, track, unsafeTrack };\n","import { appendAll } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { Tag } from '../../Context/dist/effect-Context.esm.js';\nimport { isLeft, left, isRight, right } from '../../Either/dist/effect-Either.esm.js';\nimport { symbol as symbol$1, equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { symbol, combine, hash } from '../../Hash/dist/effect-Hash.esm.js';\nimport { union, empty } from '../../HashSet/dist/effect-HashSet.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * @since 2.0.0\n */\n/** @internal */\nconst TestAnnotationSymbolKey = \"effect/TestAnnotation\";\n\n/**\n * @since 2.0.0\n */\nconst TestAnnotationTypeId = /*#__PURE__*/Symbol.for(TestAnnotationSymbolKey);\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\n\n/** @internal */\nclass TestAnnotationImpl {\n  [TestAnnotationTypeId] = TestAnnotationTypeId;\n  constructor(identifier, tag, initial, combine) {\n    this.identifier = identifier;\n    this.tag = tag;\n    this.initial = initial;\n    this.combine = combine;\n  }\n  [symbol]() {\n    return pipe(hash(TestAnnotationSymbolKey), combine(hash(this.identifier)), combine(hash(this.tag)));\n  }\n  [symbol$1](that) {\n    return isTestAnnotation(that) && this.identifier === that.identifier && equals(this.tag, that.tag);\n  }\n}\n\n/**\n * @since 2.0.0\n */\nconst isTestAnnotation = u => hasProperty(u, TestAnnotationTypeId);\n\n/**\n * @since 2.0.0\n */\nconst make = (identifier, tag, initial, combine) => {\n  return new TestAnnotationImpl(identifier, tag, initial, combine);\n};\n\n/**\n * @since 2.0.0\n */\nconst compose = (left$1, right$1) => {\n  if (isLeft(left$1) && isLeft(right$1)) {\n    return left(left$1.left + right$1.left);\n  }\n  if (isRight(left$1) && isRight(right$1)) {\n    return right(pipe(left$1.right, appendAll(right$1.right)));\n  }\n  if (isRight(left$1) && isLeft(right$1)) {\n    return right$1;\n  }\n  if (isLeft(left$1) && isRight(right$1)) {\n    return right$1;\n  }\n  throw new Error(\"BUG: TestAnnotation.compose - please report an issue at https://github.com/Effect-TS/io/issues\");\n};\n\n/**\n * @since 2.0.0\n */\nconst fibers = /*#__PURE__*/make(\"fibers\", /*#__PURE__*/Tag(), /*#__PURE__*/left(0), compose);\n\n/**\n * An annotation which counts ignored tests.\n *\n * @since 2.0.0\n */\nconst ignored = /*#__PURE__*/make(\"ignored\", /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/TestAnnotation/ignored\")), 0, (a, b) => a + b);\n\n/**\n * An annotation which counts repeated tests.\n *\n * @since 2.0.0\n */\nconst repeated = /*#__PURE__*/make(\"repeated\", /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/TestAnnotation/repeated\")), 0, (a, b) => a + b);\n\n/**\n * An annotation which counts retried tests.\n *\n * @since 2.0.0\n */\nconst retried = /*#__PURE__*/make(\"retried\", /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/TestAnnotation/retired\")), 0, (a, b) => a + b);\n\n/**\n * An annotation which tags tests with strings.\n *\n * @since 2.0.0\n */\nconst tagged = /*#__PURE__*/make(\"tagged\", /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/TestAnnotation/tagged\")), /*#__PURE__*/empty(), (a, b) => pipe(a, union(b)));\n\nexport { TestAnnotationTypeId, compose, fibers, ignored, isTestAnnotation, make, repeated, retried, tagged };\n","import { dual, pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\n\n/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n */\nconst TestAnnotationMapTypeId = /*#__PURE__*/Symbol.for(\"effect/TestAnnotationMap\");\n\n/**\n * @since 2.0.0\n */\n\n/**\n * An annotation map keeps track of annotations of different types.\n *\n * @since 2.0.0\n */\n\n/** @internal */\nclass TestAnnotationMapImpl {\n  [TestAnnotationMapTypeId] = TestAnnotationMapTypeId;\n  constructor(map) {\n    this.map = map;\n  }\n}\n\n/**\n * @since 2.0.0\n */\nconst isTestAnnotationMap = u => hasProperty(u, TestAnnotationMapTypeId);\n\n/**\n * @since 2.0.0\n */\nconst empty = () => new TestAnnotationMapImpl(new Map());\n\n/**\n * @since 2.0.0\n */\nconst make = map => {\n  return new TestAnnotationMapImpl(map);\n};\n\n/**\n * @since 2.0.0\n */\nconst overwrite = /*#__PURE__*/dual(3, (self, key, value) => make(self.map.set(key, value)));\n\n/**\n * @since 2.0.0\n */\nconst update = /*#__PURE__*/dual(3, (self, key, f) => {\n  let value = self.map.get(key);\n  if (value === undefined) {\n    value = key.initial;\n  }\n  return pipe(self, overwrite(key, f(value)));\n});\n\n/**\n * Retrieves the annotation of the specified type, or its default value if\n * there is none.\n *\n * @since 2.0.0\n */\nconst get = /*#__PURE__*/dual(2, (self, key) => {\n  const value = self.map.get(key);\n  if (value === undefined) {\n    return key.initial;\n  }\n  return value;\n});\n\n/**\n * Appends the specified annotation to the annotation map.\n *\n * @since 2.0.0\n */\nconst annotate = /*#__PURE__*/dual(3, (self, key, value) => update(self, key, _ => key.combine(_, value)));\n\n/**\n * @since 2.0.0\n */\nconst combine = /*#__PURE__*/dual(2, (self, that) => {\n  const result = new Map(self.map);\n  for (const entry of that.map) {\n    if (result.has(entry[0])) {\n      const value = result.get(entry[0]);\n      result.set(entry[0], entry[0].combine(value, entry[1]));\n    } else {\n      result.set(entry[0], entry[1]);\n    }\n  }\n  return make(result);\n});\n\nexport { TestAnnotationMapTypeId, annotate, combine, empty, get, isTestAnnotationMap, make, overwrite, update };\n","import { Tag } from '../../Context/dist/effect-Context.esm.js';\nimport { equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { pipe } from '../../Function/dist/effect-Function.esm.js';\nimport { map, flatMap, forEachSequential, sync, succeed } from '../../internal/core.esm.js';\nimport { descriptorWith } from '../../internal/core-effect.esm.js';\nimport { Order } from '../../internal/fiber.esm.js';\nimport { get as get$2 } from '../../MutableRef/dist/effect-MutableRef.esm.js';\nimport { hasProperty } from '../../Predicate/dist/effect-Predicate.esm.js';\nimport { reduce } from '../../ReadonlyArray/dist/effect-ReadonlyArray.esm.js';\nimport { get, update } from '../../Ref/dist/effect-Ref.esm.js';\nimport { filter, empty, union } from '../../SortedSet/dist/effect-SortedSet.esm.js';\nimport { fibers } from '../../TestAnnotation/dist/effect-TestAnnotation.esm.js';\nimport { get as get$1, annotate } from '../../TestAnnotationMap/dist/effect-TestAnnotationMap.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\nconst TestAnnotationsTypeId = /*#__PURE__*/Symbol.for(\"effect/TestAnnotations\");\n\n/**\n * @since 2.0.0\n */\n\n/**\n * The `Annotations` trait provides access to an annotation map that tests can\n * add arbitrary annotations to. Each annotation consists of a string\n * identifier, an initial value, and a function for combining two values.\n * Annotations form monoids and you can think of `Annotations` as a more\n * structured logging service or as a super polymorphic version of the writer\n * monad effect.\n *\n * @since 2.0.0\n */\n\n/** @internal */\nclass AnnotationsImpl {\n  [TestAnnotationsTypeId] = TestAnnotationsTypeId;\n  constructor(ref) {\n    this.ref = ref;\n  }\n  get(key) {\n    return map(get(this.ref), get$1(key));\n  }\n  annotate(key, value) {\n    return update(this.ref, annotate(key, value));\n  }\n  supervisedFibers() {\n    return descriptorWith(descriptor => flatMap(this.get(fibers), either => {\n      switch (either._tag) {\n        case \"Left\":\n          {\n            return succeed(empty(Order));\n          }\n        case \"Right\":\n          {\n            return pipe(either.right, forEachSequential(ref => sync(() => get$2(ref))), map(reduce(empty(Order), (a, b) => union(a, b))), map(filter(fiber => !equals(fiber.id(), descriptor.id))));\n          }\n      }\n    }));\n  }\n}\n\n/**\n * @since 2.0.0\n */\nconst TestAnnotations = /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/Annotations\"));\n\n/**\n * @since 2.0.0\n */\nconst isTestAnnotations = u => hasProperty(u, TestAnnotationsTypeId);\n\n/**\n * @since 2.0.0\n */\nconst make = ref => new AnnotationsImpl(ref);\n\nexport { TestAnnotations, TestAnnotationsTypeId, isTestAnnotations, make };\n","/** @internal */\n\n/** @internal */\nconst OP_SUSPENDED_WARNING_DATA_START = \"Start\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SUSPENDED_WARNING_DATA_PENDING = \"Pending\";\n\n/** @internal */\n\n/** @internal */\nconst OP_SUSPENDED_WARNING_DATA_DONE = \"Done\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/**\n * State indicating that a test has not adjusted the clock.\n *\n * @internal\n */\nconst start = {\n  _tag: OP_SUSPENDED_WARNING_DATA_START\n};\n\n/**\n * State indicating that a test has adjusted the clock but a fiber is still\n * running with a reference to the fiber that will display the warning\n * message.\n *\n * @internal\n */\nconst pending = fiber => {\n  return {\n    _tag: OP_SUSPENDED_WARNING_DATA_PENDING,\n    fiber\n  };\n};\n\n/**\n * State indicating that the warning message has already been displayed.\n *\n * @internal\n */\nconst done = {\n  _tag: OP_SUSPENDED_WARNING_DATA_DONE\n};\n\n/** @internal */\nconst isStart = self => {\n  return self._tag === OP_SUSPENDED_WARNING_DATA_START;\n};\n\n/** @internal */\nconst isPending = self => {\n  return self._tag === OP_SUSPENDED_WARNING_DATA_PENDING;\n};\n\nexport { OP_SUSPENDED_WARNING_DATA_DONE, OP_SUSPENDED_WARNING_DATA_PENDING, OP_SUSPENDED_WARNING_DATA_START, done, isPending, isStart, pending, start };\n","/**\n * `WarningData` describes the state of the warning message that is displayed\n * if a test is using time by is not advancing the `TestClock`. The possible\n * states are `Start` if a test has not used time, `Pending` if a test has\n * used time but has not adjusted the `TestClock`, and `Done` if a test has\n * adjusted the `TestClock` or the warning message has already been displayed.\n *\n * @internal\n */\n\n/** @internal */\nconst OP_WARNING_DATA_START = \"Start\";\n\n/** @internal */\n\n/** @internal */\nconst OP_WARNING_DATA_PENDING = \"Pending\";\n\n/** @internal */\n\n/** @internal */\nconst OP_WARNING_DATA_DONE = \"Done\";\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/** @internal */\n\n/**\n * State indicating that a test has not used time.\n *\n * @internal\n */\nconst start = {\n  _tag: OP_WARNING_DATA_START\n};\n\n/**\n * State indicating that a test has used time but has not adjusted the\n * `TestClock` with a reference to the fiber that will display the warning\n * message.\n *\n * @internal\n */\nconst pending = fiber => {\n  return {\n    _tag: OP_WARNING_DATA_PENDING,\n    fiber\n  };\n};\n\n/**\n * State indicating that a test has used time or the warning message has\n * already been displayed.\n *\n * @internal\n */\nconst done = {\n  _tag: OP_WARNING_DATA_DONE\n};\n\n/** @internal */\nconst isStart = self => {\n  return self._tag === OP_WARNING_DATA_START;\n};\n\n/** @internal */\nconst isPending = self => {\n  return self._tag === OP_WARNING_DATA_PENDING;\n};\n\nexport { OP_WARNING_DATA_DONE, OP_WARNING_DATA_PENDING, OP_WARNING_DATA_START, done, isPending, isStart, pending, start };\n","import { Tag, merge } from '../../Context/dist/effect-Context.esm.js';\nimport { fiberRefLocallyWith } from '../../internal/core.esm.js';\nimport { currentServices } from '../../internal/defaultServices.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\nconst TestLiveTypeId = /*#__PURE__*/Symbol.for(\"effect/TestLive\");\n\n/**\n * @since 2.0.0\n */\n\n/**\n * The `Live` trait provides access to the \"live\" default Effect services from\n * within tests for workflows such as printing test results to the console or\n * timing out tests where it is necessary to access the real implementations of\n * these services.\n *\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\nconst TestLive = /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/TestLive\"));\n\n/** @internal */\nclass LiveImpl {\n  [TestLiveTypeId] = TestLiveTypeId;\n  constructor(services) {\n    this.services = services;\n  }\n  provide(effect) {\n    return fiberRefLocallyWith(currentServices, merge(this.services))(effect);\n  }\n}\n\n/**\n * @since 2.0.0\n */\nconst make = services => new LiveImpl(services);\n\nexport { TestLive, TestLiveTypeId, make };\n","import { prepend, map as map$1, sort, isNonEmpty, headNonEmpty, tailNonEmpty, empty as empty$1 } from '../../Chunk/dist/effect-Chunk.esm.js';\nimport { Tag, get as get$1 } from '../../Context/dist/effect-Context.esm.js';\nimport { decode, toMillis, seconds, millis } from '../../Duration/dist/effect-Duration.esm.js';\nimport { equals } from '../../Equal/dist/effect-Equal.esm.js';\nimport { isDone, isSuspended } from '../../FiberStatus/dist/effect-FiberStatus.esm.js';\nimport { pipe, identity, constVoid, dual } from '../../Function/dist/effect-Function.esm.js';\nimport { empty, set as set$1 } from '../../HashMap/dist/effect-HashMap.esm.js';\nimport { ClockTypeId, clockTag } from '../../internal/clock.esm.js';\nimport { map, zipRight, flatMap, deferredMake, deferredAwait, deferredSucceed, asUnit, succeed, fail, interruptible, as, interruptFiber, zip, zipWith, yieldNow, unit, fiberRefGetWith, sync } from '../../internal/core.esm.js';\nimport { reduce, logWarning, delay, sleep as sleep$1, filterOrFail, eventually, gen } from '../../internal/core-effect.esm.js';\nimport { currentServices } from '../../internal/defaultServices.esm.js';\nimport { makeSynchronized } from '../../internal/effect/circular.esm.js';\nimport { zipLeftOptions, fork, withClockScoped, addFinalizer } from '../../internal/fiberRuntime.esm.js';\nimport { scoped } from '../../internal/layer.esm.js';\nimport { get, unsafeGet, set, modify, unsafeMake } from '../../internal/ref.esm.js';\nimport { updateSomeEffect } from '../../internal/synchronizedRef.esm.js';\nimport { isStart as isStart$1, pending as pending$1, done as done$1, isPending as isPending$1, start } from '../../internal/testing/suspendedWarningData.esm.js';\nimport { isStart, pending, isPending, done, start as start$1 } from '../../internal/testing/warningData.esm.js';\nimport { Order } from '../../Number/dist/effect-Number.esm.js';\nimport { some, none } from '../../Option/dist/effect-Option.esm.js';\nimport { mapInput } from '../../Order/dist/effect-Order.esm.js';\nimport { TestAnnotations } from '../../TestAnnotations/dist/effect-TestAnnotations.esm.js';\nimport { TestLive } from '../../TestLive/dist/effect-TestLive.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * A `TestClock` makes it easy to deterministically and efficiently test effects\n * involving the passage of time.\n *\n * Instead of waiting for actual time to pass, `sleep` and methods implemented\n * in terms of it schedule effects to take place at a given clock time. Users\n * can adjust the clock time using the `adjust` and `setTime` methods, and all\n * effects scheduled to take place on or before that time will automatically be\n * run in order.\n *\n * For example, here is how we can test `Effect.timeout` using `TestClock`:\n *\n * ```ts\n * import * as Duration from \"effect/Duration\"\n * import * as Effect from \"effect/Effect\"\n * import * as Fiber from \"effect/Fiber\"\n * import * as TestClock from \"effect/TestClock\"\n * import * as Option from \"effect/Option\"\n *\n * Effect.gen(function*() {\n *   const fiber = yield* pipe(\n *     Effect.sleep(Duration.minutes(5)),\n *     Effect.timeout(Duration.minutes(1)),\n *     Effect.fork\n *   )\n *   yield* TestClock.adjust(Duration.minutes(1))\n *   const result = yield* Fiber.join(fiber)\n *   assert.deepStrictEqual(result, Option.none())\n * })\n * ```\n *\n * Note how we forked the fiber that `sleep` was invoked on. Calls to `sleep`\n * and methods derived from it will semantically block until the time is set to\n * on or after the time they are scheduled to run. If we didn't fork the fiber\n * on which we called sleep we would never get to set the time on the line\n * below. Thus, a useful pattern when using `TestClock` is to fork the effect\n * being tested, then adjust the clock time, and finally verify that the\n * expected effects have been performed.\n *\n * @since 2.0.0\n */\n\n/**\n * `Data` represents the state of the `TestClock`, including the clock time.\n *\n * @since 2.0.1\n */\n\n/**\n * @since 2.0.0\n */\nconst makeData = (instant, sleeps) => ({\n  instant,\n  sleeps\n});\n\n/**\n * @since 2.0.0\n */\nconst TestClock = /*#__PURE__*/Tag( /*#__PURE__*/Symbol.for(\"effect/TestClock\"));\n\n/**\n * The warning message that will be displayed if a test is using time but is\n * not advancing the `TestClock`.\n *\n * @internal\n */\nconst warning = \"Warning: A test is using time, but is not advancing \" + \"the test clock, which may result in the test hanging. Use TestClock.adjust to \" + \"manually advance the time.\";\n\n/**\n * The warning message that will be displayed if a test is advancing the clock\n * but a fiber is still running.\n *\n * @internal\n */\nconst suspendedWarning = \"Warning: A test is advancing the test clock, \" + \"but a fiber is not suspending, which may result in the test hanging. Use \" + \"TestAspect.diagnose to identity the fiber that is not suspending.\";\n\n/** @internal */\nclass TestClockImpl {\n  [ClockTypeId] = ClockTypeId;\n  constructor(clockState, live, annotations, warningState, suspendedWarningState) {\n    this.clockState = clockState;\n    this.live = live;\n    this.annotations = annotations;\n    this.warningState = warningState;\n    this.suspendedWarningState = suspendedWarningState;\n    this.currentTimeMillis = map(get(this.clockState), data => data.instant);\n    this.currentTimeNanos = map(get(this.clockState), data => BigInt(data.instant * 1000000));\n  }\n\n  /**\n   * Unsafely returns the current time in milliseconds.\n   */\n  unsafeCurrentTimeMillis() {\n    return unsafeGet(this.clockState).instant;\n  }\n\n  /**\n   * Unsafely returns the current time in nanoseconds.\n   */\n  unsafeCurrentTimeNanos() {\n    return BigInt(unsafeGet(this.clockState).instant * 1000000);\n  }\n\n  /**\n   * Returns the current clock time in milliseconds.\n   */\n\n  /**\n   * Returns the current clock time in nanoseconds.\n   */\n\n  /**\n   * Saves the `TestClock`'s current state in an effect which, when run, will\n   * restore the `TestClock` state to the saved state.\n   */\n  save() {\n    return map(get(this.clockState), data => set(this.clockState, data));\n  }\n  /**\n   * Sets the current clock time to the specified instant. Any effects that\n   * were scheduled to occur on or before the new time will be run in order.\n   */\n  setTime(instant) {\n    return zipRight(this.warningDone(), this.run(() => instant));\n  }\n  /**\n   * Semantically blocks the current fiber until the clock time is equal to or\n   * greater than the specified duration. Once the clock time is adjusted to\n   * on or after the duration, the fiber will automatically be resumed.\n   */\n  sleep(durationInput) {\n    const duration = decode(durationInput);\n    return flatMap(deferredMake(), deferred => pipe(modify(this.clockState, data => {\n      const end = data.instant + toMillis(duration);\n      if (end > data.instant) {\n        return [true, makeData(data.instant, pipe(data.sleeps, prepend([end, deferred])))];\n      }\n      return [false, data];\n    }), flatMap(shouldAwait => shouldAwait ? pipe(this.warningStart(), zipRight(deferredAwait(deferred))) : pipe(deferredSucceed(deferred, void 0), asUnit))));\n  }\n  /**\n   * Returns a list of the times at which all queued effects are scheduled to\n   * resume.\n   */\n  sleeps() {\n    return map(get(this.clockState), data => map$1(data.sleeps, _ => _[0]));\n  }\n  /**\n   * Increments the current clock time by the specified duration. Any effects\n   * that were scheduled to occur on or before the new time will be run in\n   * order.\n   */\n  adjust(durationInput) {\n    const duration = decode(durationInput);\n    return zipRight(this.warningDone(), this.run(n => n + toMillis(duration)));\n  }\n  /**\n   * Increments the current clock time by the specified duration. Any effects\n   * that were scheduled to occur on or before the new time will be run in\n   * order.\n   */\n  adjustWith(durationInput) {\n    const duration = decode(durationInput);\n    return effect => zipLeftOptions(effect, this.adjust(duration), {\n      concurrent: true\n    });\n  }\n  /**\n   * Returns a set of all fibers in this test.\n   */\n  supervisedFibers() {\n    return this.annotations.supervisedFibers();\n  }\n  /**\n   * Captures a \"snapshot\" of the identifier and status of all fibers in this\n   * test other than the current fiber. Fails with the `Unit` value if any of\n   * these fibers are not done or suspended. Note that because we cannot\n   * synchronize on the status of multiple fibers at the same time this\n   * snapshot may not be fully consistent.\n   */\n  freeze() {\n    return flatMap(this.supervisedFibers(), fibers => pipe(fibers, reduce(empty(), (map, fiber) => pipe(fiber.status(), flatMap(status => {\n      if (isDone(status)) {\n        return succeed(set$1(map, fiber.id(), status));\n      }\n      if (isSuspended(status)) {\n        return succeed(set$1(map, fiber.id(), status));\n      }\n      return fail(void 0);\n    })))));\n  }\n  /**\n   * Forks a fiber that will display a warning message if a test is using time\n   * but is not advancing the `TestClock`.\n   */\n  warningStart() {\n    return updateSomeEffect(this.warningState, data => isStart(data) ? some(pipe(this.live.provide(pipe(logWarning(warning), delay(seconds(5)))), interruptible, fork, map(fiber => pending(fiber)))) : none());\n  }\n  /**\n   * Cancels the warning message that is displayed if a test is using time but\n   * is not advancing the `TestClock`.\n   */\n  warningDone() {\n    return updateSomeEffect(this.warningState, warningData => {\n      if (isStart(warningData)) {\n        return some(succeed(done));\n      }\n      if (isPending(warningData)) {\n        return some(pipe(interruptFiber(warningData.fiber), as(done)));\n      }\n      return none();\n    });\n  }\n  /**\n   * Returns whether all descendants of this fiber are done or suspended.\n   */\n  suspended() {\n    return pipe(this.freeze(), zip(this.live.provide(pipe(sleep$1(millis(5)), zipRight(this.freeze())))), flatMap(([first, last]) => equals(first, last) ? succeed(first) : fail(void 0)));\n  }\n  /**\n   * Polls until all descendants of this fiber are done or suspended.\n   */\n  awaitSuspended() {\n    return pipe(this.suspendedWarningStart(), zipRight(pipe(this.suspended(), zipWith(pipe(this.live.provide(sleep$1(millis(10))), zipRight(this.suspended())), equals), filterOrFail(identity, constVoid), eventually)), zipRight(this.suspendedWarningDone()));\n  }\n  /**\n   * Forks a fiber that will display a warning message if a test is advancing\n   * the `TestClock` but a fiber is not suspending.\n   */\n  suspendedWarningStart() {\n    return updateSomeEffect(this.suspendedWarningState, suspendedWarningData => {\n      if (isStart$1(suspendedWarningData)) {\n        return some(pipe(this.live.provide(pipe(logWarning(suspendedWarning), zipRight(set(this.suspendedWarningState, done$1)), delay(seconds(5)))), interruptible, fork, map(fiber => pending$1(fiber))));\n      }\n      return none();\n    });\n  }\n  /**\n   * Cancels the warning message that is displayed if a test is advancing the\n   * `TestClock` but a fiber is not suspending.\n   */\n  suspendedWarningDone() {\n    return updateSomeEffect(this.suspendedWarningState, suspendedWarningData => {\n      if (isPending$1(suspendedWarningData)) {\n        return some(pipe(interruptFiber(suspendedWarningData.fiber), as(start)));\n      }\n      return none();\n    });\n  }\n  /**\n   * Runs all effects scheduled to occur on or before the specified instant,\n   * which may depend on the current time, in order.\n   */\n  run(f) {\n    return pipe(this.awaitSuspended(), zipRight(pipe(modify(this.clockState, data => {\n      const end = f(data.instant);\n      const sorted = pipe(data.sleeps, sort(pipe(Order, mapInput(_ => _[0]))));\n      if (isNonEmpty(sorted)) {\n        const [instant, deferred] = headNonEmpty(sorted);\n        if (instant <= end) {\n          return [some([end, deferred]), makeData(instant, tailNonEmpty(sorted))];\n        }\n      }\n      return [none(), makeData(end, data.sleeps)];\n    }), flatMap(option => {\n      switch (option._tag) {\n        case \"None\":\n          {\n            return unit;\n          }\n        case \"Some\":\n          {\n            const [end, deferred] = option.value;\n            return pipe(deferredSucceed(deferred, void 0), zipRight(yieldNow()), zipRight(this.run(() => end)));\n          }\n      }\n    }))));\n  }\n}\n\n/**\n * @since 2.0.0\n */\nconst live = data => scoped(TestClock, gen(function* ($) {\n  const live = yield* $(TestLive);\n  const annotations = yield* $(TestAnnotations);\n  const clockState = yield* $(sync(() => unsafeMake(data)));\n  const warningState = yield* $(makeSynchronized(start$1));\n  const suspendedWarningState = yield* $(makeSynchronized(start));\n  const testClock = new TestClockImpl(clockState, live, annotations, warningState, suspendedWarningState);\n  yield* $(withClockScoped(testClock));\n  yield* $(addFinalizer(() => zipRight(testClock.warningDone(), testClock.suspendedWarningDone())));\n  return testClock;\n}));\n\n/**\n * @since 2.0.0\n */\nconst defaultTestClock = /*#__PURE__*/live( /*#__PURE__*/makeData( /*#__PURE__*/new Date(0).getTime(), /*#__PURE__*/empty$1()));\n\n/**\n * Accesses a `TestClock` instance in the context and increments the time\n * by the specified duration, running any actions scheduled for on or before\n * the new time in order.\n *\n * @since 2.0.0\n */\nconst adjust = durationInput => {\n  const duration = decode(durationInput);\n  return testClockWith(testClock => testClock.adjust(duration));\n};\n\n/**\n * @since 2.0.0\n */\nconst adjustWith = /*#__PURE__*/dual(2, (effect, durationInput) => {\n  const duration = decode(durationInput);\n  return testClockWith(testClock => testClock.adjustWith(duration)(effect));\n});\n\n/**\n * Accesses a `TestClock` instance in the context and saves the clock\n * state in an effect which, when run, will restore the `TestClock` to the\n * saved state.\n *\n * @since 2.0.0\n */\nconst save = () => testClockWith(testClock => testClock.save());\n\n/**\n * Accesses a `TestClock` instance in the context and sets the clock time\n * to the specified `Instant`, running any actions scheduled for on or before\n * the new time in order.\n *\n * @since 2.0.0\n */\nconst setTime = instant => testClockWith(testClock => testClock.setTime(instant));\n\n/**\n * Semantically blocks the current fiber until the clock time is equal to or\n * greater than the specified duration. Once the clock time is adjusted to\n * on or after the duration, the fiber will automatically be resumed.\n *\n * @since 2.0.0\n */\nconst sleep = durationInput => {\n  const duration = decode(durationInput);\n  return testClockWith(testClock => testClock.sleep(duration));\n};\n\n/**\n * Accesses a `TestClock` instance in the context and returns a list of\n * times that effects are scheduled to run.\n *\n * @since 2.0.0\n */\nconst sleeps = () => testClockWith(testClock => testClock.sleeps());\n\n/**\n * Retrieves the `TestClock` service for this test.\n *\n * @since 2.0.0\n */\nconst testClock = () => testClockWith(succeed);\n\n/**\n * Retrieves the `TestClock` service for this test and uses it to run the\n * specified workflow.\n *\n * @since 2.0.0\n */\nconst testClockWith = f => fiberRefGetWith(currentServices, services => f(pipe(services, get$1(clockTag))));\n\n/**\n * Accesses the current time of a `TestClock` instance in the context in\n * milliseconds.\n *\n * @since 2.0.0\n */\nconst currentTimeMillis = /*#__PURE__*/testClockWith(testClock => testClock.currentTimeMillis);\n\nexport { TestClock, TestClockImpl, adjust, adjustWith, currentTimeMillis, defaultTestClock, live, makeData, save, setTime, sleep, sleeps, testClock, testClockWith };\n","import { Tag } from '../../Context/dist/effect-Context.esm.js';\nimport { fiberRefUnsafeMake, fiberRefGet, fiberRefLocally } from '../../internal/core.esm.js';\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\nconst TestSizedTypeId = /*#__PURE__*/Symbol.for(\"effect/TestSized\");\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\n\n/**\n * @since 2.0.0\n */\nconst TestSized = /*#__PURE__*/Tag(TestSizedTypeId);\n\n/** @internal */\nclass SizedImpl {\n  [TestSizedTypeId] = TestSizedTypeId;\n  constructor(fiberRef) {\n    this.fiberRef = fiberRef;\n  }\n  size() {\n    return fiberRefGet(this.fiberRef);\n  }\n  withSize(size) {\n    return effect => fiberRefLocally(this.fiberRef, size)(effect);\n  }\n}\n\n/**\n * @since 2.0.0\n */\nconst make = size => new SizedImpl(fiberRefUnsafeMake(size));\n\n/**\n * @since 2.0.0\n */\nconst fromFiberRef = fiberRef => new SizedImpl(fiberRef);\n\nexport { TestSized, TestSizedTypeId, fromFiberRef, make };\n","import { exists, FOLDER } from '@kwsites/file-exists';\nimport { Maybe } from '../types';\n\nexport const NULL = '\\0';\n\nexport const NOOP: (...args: any[]) => void = () => {};\n\n/**\n * Returns either the source argument when it is a `Function`, or the default\n * `NOOP` function constant\n */\nexport function asFunction<T extends () => any>(source: T | any): T {\n   return typeof source === 'function' ? source : NOOP;\n}\n\n/**\n * Determines whether the supplied argument is both a function, and is not\n * the `NOOP` function.\n */\nexport function isUserFunction<T extends Function>(source: T | any): source is T {\n   return typeof source === 'function' && source !== NOOP;\n}\n\nexport function splitOn(input: string, char: string): [string, string] {\n   const index = input.indexOf(char);\n   if (index <= 0) {\n      return [input, ''];\n   }\n\n   return [input.substr(0, index), input.substr(index + 1)];\n}\n\nexport function first<T extends any[]>(input: T, offset?: number): Maybe<T[number]>;\nexport function first<T extends IArguments>(input: T, offset?: number): Maybe<unknown>;\nexport function first(input: any[] | IArguments, offset = 0): Maybe<unknown> {\n   return isArrayLike(input) && input.length > offset ? input[offset] : undefined;\n}\n\nexport function last<T extends any[]>(input: T, offset?: number): Maybe<T[number]>;\nexport function last<T extends IArguments>(input: T, offset?: number): Maybe<unknown>;\nexport function last<T>(input: T, offset?: number): Maybe<unknown>;\nexport function last(input: unknown, offset = 0) {\n   if (isArrayLike(input) && input.length > offset) {\n      return input[input.length - 1 - offset];\n   }\n}\n\ntype ArrayLike<T = any> = T[] | IArguments | { [index: number]: T; length: number };\n\nfunction isArrayLike(input: any): input is ArrayLike {\n   return !!(input && typeof input.length === 'number');\n}\n\nexport function toLinesWithContent(input = '', trimmed = true, separator = '\\n'): string[] {\n   return input.split(separator).reduce((output, line) => {\n      const lineContent = trimmed ? line.trim() : line;\n      if (lineContent) {\n         output.push(lineContent);\n      }\n      return output;\n   }, [] as string[]);\n}\n\ntype LineWithContentCallback<T = void> = (line: string) => T;\n\nexport function forEachLineWithContent<T>(\n   input: string,\n   callback: LineWithContentCallback<T>\n): T[] {\n   return toLinesWithContent(input, true).map((line) => callback(line));\n}\n\nexport function folderExists(path: string): boolean {\n   return exists(path, FOLDER);\n}\n\n/**\n * Adds `item` into the `target` `Array` or `Set` when it is not already present and returns the `item`.\n */\nexport function append<T>(target: T[] | Set<T>, item: T): typeof item {\n   if (Array.isArray(target)) {\n      if (!target.includes(item)) {\n         target.push(item);\n      }\n   } else {\n      target.add(item);\n   }\n   return item;\n}\n\n/**\n * Adds `item` into the `target` `Array` when it is not already present and returns the `target`.\n */\nexport function including<T>(target: T[], item: T): typeof target {\n   if (Array.isArray(target) && !target.includes(item)) {\n      target.push(item);\n   }\n\n   return target;\n}\n\nexport function remove<T>(target: Set<T> | T[], item: T): T {\n   if (Array.isArray(target)) {\n      const index = target.indexOf(item);\n      if (index >= 0) {\n         target.splice(index, 1);\n      }\n   } else {\n      target.delete(item);\n   }\n   return item;\n}\n\nexport const objectToString = Object.prototype.toString.call.bind(Object.prototype.toString) as (\n   input: any\n) => string;\n\nexport function asArray<T>(source: T | T[]): T[] {\n   return Array.isArray(source) ? source : [source];\n}\n\nexport function asStringArray<T>(source: T | T[]): string[] {\n   return asArray(source).map(String);\n}\n\nexport function asNumber(source: string | null | undefined, onNaN = 0) {\n   if (source == null) {\n      return onNaN;\n   }\n\n   const num = parseInt(source, 10);\n   return isNaN(num) ? onNaN : num;\n}\n\nexport function prefixedArray<T>(input: T[], prefix: T): T[] {\n   const output: T[] = [];\n   for (let i = 0, max = input.length; i < max; i++) {\n      output.push(prefix, input[i]);\n   }\n   return output;\n}\n\nexport function bufferToString(input: Buffer | Buffer[]): string {\n   return (Array.isArray(input) ? Buffer.concat(input) : input).toString('utf-8');\n}\n\n/**\n * Get a new object from a source object with only the listed properties.\n */\nexport function pick(source: Record<string, any>, properties: string[]) {\n   return Object.assign(\n      {},\n      ...properties.map((property) => (property in source ? { [property]: source[property] } : {}))\n   );\n}\n\nexport function delay(duration = 0): Promise<void> {\n   return new Promise((done) => setTimeout(done, duration));\n}\n","import debug, { Debugger } from 'debug';\nimport {\n   append,\n   filterHasLength,\n   filterString,\n   filterType,\n   NOOP,\n   objectToString,\n   remove,\n} from './utils';\nimport { Maybe } from './types';\n\ndebug.formatters.L = (value: any) => String(filterHasLength(value) ? value.length : '-');\ndebug.formatters.B = (value: Buffer) => {\n   if (Buffer.isBuffer(value)) {\n      return value.toString('utf8');\n   }\n   return objectToString(value);\n};\n\ntype OutputLoggingHandler = (message: string, ...args: any[]) => void;\n\nfunction createLog() {\n   return debug('simple-git');\n}\n\nexport interface OutputLogger extends OutputLoggingHandler {\n   readonly label: string;\n\n   info: OutputLoggingHandler;\n   step(nextStep?: string): OutputLogger;\n   sibling(name: string): OutputLogger;\n}\n\nfunction prefixedLogger(\n   to: Debugger,\n   prefix: string,\n   forward?: OutputLoggingHandler\n): OutputLoggingHandler {\n   if (!prefix || !String(prefix).replace(/\\s*/, '')) {\n      return !forward\n         ? to\n         : (message, ...args) => {\n              to(message, ...args);\n              forward(message, ...args);\n           };\n   }\n\n   return (message, ...args) => {\n      to(`%s ${message}`, prefix, ...args);\n      if (forward) {\n         forward(message, ...args);\n      }\n   };\n}\n\nfunction childLoggerName(\n   name: Maybe<string>,\n   childDebugger: Maybe<Debugger>,\n   { namespace: parentNamespace }: Debugger\n): string {\n   if (typeof name === 'string') {\n      return name;\n   }\n   const childNamespace = (childDebugger && childDebugger.namespace) || '';\n\n   if (childNamespace.startsWith(parentNamespace)) {\n      return childNamespace.substr(parentNamespace.length + 1);\n   }\n\n   return childNamespace || parentNamespace;\n}\n\nexport function createLogger(\n   label: string,\n   verbose?: string | Debugger,\n   initialStep?: string,\n   infoDebugger = createLog()\n): OutputLogger {\n   const labelPrefix = (label && `[${label}]`) || '';\n\n   const spawned: OutputLogger[] = [];\n   const debugDebugger: Maybe<Debugger> =\n      typeof verbose === 'string' ? infoDebugger.extend(verbose) : verbose;\n   const key = childLoggerName(filterType(verbose, filterString), debugDebugger, infoDebugger);\n\n   return step(initialStep);\n\n   function sibling(name: string, initial?: string) {\n      return append(\n         spawned,\n         createLogger(label, key.replace(/^[^:]+/, name), initial, infoDebugger)\n      );\n   }\n\n   function step(phase?: string) {\n      const stepPrefix = (phase && `[${phase}]`) || '';\n      const debug = (debugDebugger && prefixedLogger(debugDebugger, stepPrefix)) || NOOP;\n      const info = prefixedLogger(infoDebugger, `${labelPrefix} ${stepPrefix}`, debug);\n\n      return Object.assign(debugDebugger ? debug : info, {\n         label,\n         sibling,\n         info,\n         step,\n      });\n   }\n}\n\n/**\n * The `GitLogger` is used by the main `SimpleGit` runner to handle logging\n * any warnings or errors.\n */\nexport class GitLogger {\n   public error: OutputLoggingHandler;\n\n   public warn: OutputLoggingHandler;\n\n   constructor(private _out: Debugger = createLog()) {\n      this.error = prefixedLogger(_out, '[ERROR]');\n      this.warn = prefixedLogger(_out, '[WARN]');\n   }\n\n   silent(silence = false) {\n      if (silence !== this._out.enabled) {\n         return;\n      }\n\n      const { namespace } = this._out;\n      const env = (process.env.DEBUG || '').split(',').filter((s) => !!s);\n      const hasOn = env.includes(namespace);\n      const hasOff = env.includes(`-${namespace}`);\n\n      // enabling the log\n      if (!silence) {\n         if (hasOff) {\n            remove(env, `-${namespace}`);\n         } else {\n            env.push(namespace);\n         }\n      } else {\n         if (hasOn) {\n            remove(env, namespace);\n         } else {\n            env.push(`-${namespace}`);\n         }\n      }\n\n      debug.enable(env.join(','));\n   }\n}\n","import { append, remove } from '../utils';\nimport { createDeferred, DeferredPromise } from '@kwsites/promise-deferred';\nimport { createLogger } from '../git-logger';\n\ntype ScheduleCompleteCallback = () => void;\ntype ScheduledTask = Pick<DeferredPromise<ScheduleCompleteCallback>, 'promise' | 'done'> & {\n   id: number;\n};\n\nconst createScheduledTask: () => ScheduledTask = (() => {\n   let id = 0;\n   return () => {\n      id++;\n      const { promise, done } = createDeferred<ScheduleCompleteCallback>();\n\n      return {\n         promise,\n         done,\n         id,\n      };\n   };\n})();\n\nexport class Scheduler {\n   private logger = createLogger('', 'scheduler');\n   private pending: ScheduledTask[] = [];\n   private running: ScheduledTask[] = [];\n\n   constructor(private concurrency = 2) {\n      this.logger(`Constructed, concurrency=%s`, concurrency);\n   }\n\n   private schedule() {\n      if (!this.pending.length || this.running.length >= this.concurrency) {\n         this.logger(\n            `Schedule attempt ignored, pending=%s running=%s concurrency=%s`,\n            this.pending.length,\n            this.running.length,\n            this.concurrency\n         );\n         return;\n      }\n\n      const task = append(this.running, this.pending.shift()!);\n      this.logger(`Attempting id=%s`, task.id);\n      task.done(() => {\n         this.logger(`Completing id=`, task.id);\n         remove(this.running, task);\n         this.schedule();\n      });\n   }\n\n   next(): Promise<ScheduleCompleteCallback> {\n      const { promise, id } = append(this.pending, createScheduledTask());\n      this.logger(`Scheduling id=%s`, id);\n\n      this.schedule();\n\n      return promise;\n   }\n}\n","import { deferred, DeferredPromise } from '@kwsites/promise-deferred';\nimport { SimpleGitPluginConfig } from '../types';\nimport { delay } from '../utils';\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\nconst never = deferred().promise;\n\nexport function completionDetectionPlugin({\n   onClose = true,\n   onExit = 50,\n}: SimpleGitPluginConfig['completion'] = {}): SimpleGitPlugin<'spawn.after'> {\n   function createEvents() {\n      let exitCode = -1;\n      const events = {\n         close: deferred(),\n         closeTimeout: deferred(),\n         exit: deferred(),\n         exitTimeout: deferred(),\n      };\n\n      const result = Promise.race([\n         onClose === false ? never : events.closeTimeout.promise,\n         onExit === false ? never : events.exitTimeout.promise,\n      ]);\n\n      configureTimeout(onClose, events.close, events.closeTimeout);\n      configureTimeout(onExit, events.exit, events.exitTimeout);\n\n      return {\n         close(code: number) {\n            exitCode = code;\n            events.close.done();\n         },\n         exit(code: number) {\n            exitCode = code;\n            events.exit.done();\n         },\n         get exitCode() {\n            return exitCode;\n         },\n         result,\n      };\n   }\n\n   function configureTimeout(\n      flag: boolean | number,\n      event: DeferredPromise<void>,\n      timeout: DeferredPromise<void>\n   ) {\n      if (flag === false) {\n         return;\n      }\n\n      (flag === true ? event.promise : event.promise.then(() => delay(flag))).then(timeout.done);\n   }\n\n   return {\n      type: 'spawn.after',\n      async action(_data, { spawned, close }) {\n         const events = createEvents();\n\n         let deferClose = true;\n         let quickClose = () => void (deferClose = false);\n\n         spawned.stdout?.on('data', quickClose);\n         spawned.stderr?.on('data', quickClose);\n         spawned.on('error', quickClose);\n\n         spawned.on('close', (code: number) => events.close(code));\n         spawned.on('exit', (code: number) => events.exit(code));\n\n         try {\n            await events.result;\n            if (deferClose) {\n               await delay(50);\n            }\n            close(events.exitCode);\n         } catch (err) {\n            close(events.exitCode, err as Error);\n         }\n      },\n   };\n}\n","import { spawn, SpawnOptions } from 'child_process';\nimport { GitError } from '../errors/git-error';\nimport { OutputLogger } from '../git-logger';\nimport { PluginStore } from '../plugins';\nimport { EmptyTask, isBufferTask, isEmptyTask } from '../tasks/task';\nimport {\n   GitExecutorResult,\n   Maybe,\n   outputHandler,\n   RunnableTask,\n   SimpleGitExecutor,\n   SimpleGitTask,\n} from '../types';\nimport { callTaskParser, first, GitOutputStreams, objectToString } from '../utils';\nimport { Scheduler } from './scheduler';\nimport { TasksPendingQueue } from './tasks-pending-queue';\n\nexport class GitExecutorChain implements SimpleGitExecutor {\n   private _chain: Promise<any> = Promise.resolve();\n   private _queue = new TasksPendingQueue();\n   private _cwd: string | undefined;\n\n   public get binary() {\n      return this._executor.binary;\n   }\n\n   public get cwd() {\n      return this._cwd || this._executor.cwd;\n   }\n\n   public set cwd(cwd: string) {\n      this._cwd = cwd;\n   }\n\n   public get env() {\n      return this._executor.env;\n   }\n\n   public get outputHandler() {\n      return this._executor.outputHandler;\n   }\n\n   constructor(\n      private _executor: SimpleGitExecutor,\n      private _scheduler: Scheduler,\n      private _plugins: PluginStore\n   ) {}\n\n   public chain() {\n      return this;\n   }\n\n   public push<R>(task: SimpleGitTask<R>): Promise<R> {\n      this._queue.push(task);\n\n      return (this._chain = this._chain.then(() => this.attemptTask(task)));\n   }\n\n   private async attemptTask<R>(task: SimpleGitTask<R>): Promise<void | R> {\n      const onScheduleComplete = await this._scheduler.next();\n      const onQueueComplete = () => this._queue.complete(task);\n\n      try {\n         const { logger } = this._queue.attempt(task);\n         return (await (isEmptyTask(task)\n            ? this.attemptEmptyTask(task, logger)\n            : this.attemptRemoteTask(task, logger))) as R;\n      } catch (e) {\n         throw this.onFatalException(task, e as Error);\n      } finally {\n         onQueueComplete();\n         onScheduleComplete();\n      }\n   }\n\n   private onFatalException<R>(task: SimpleGitTask<R>, e: Error) {\n      const gitError =\n         e instanceof GitError ? Object.assign(e, { task }) : new GitError(task, e && String(e));\n\n      this._chain = Promise.resolve();\n      this._queue.fatal(gitError);\n\n      return gitError;\n   }\n\n   private async attemptRemoteTask<R>(task: RunnableTask<R>, logger: OutputLogger) {\n      const args = this._plugins.exec(\n         'spawn.args',\n         [...task.commands],\n         pluginContext(task, task.commands)\n      );\n\n      const raw = await this.gitResponse(\n         task,\n         this.binary,\n         args,\n         this.outputHandler,\n         logger.step('SPAWN')\n      );\n      const outputStreams = await this.handleTaskData(task, args, raw, logger.step('HANDLE'));\n\n      logger(`passing response to task's parser as a %s`, task.format);\n\n      if (isBufferTask(task)) {\n         return callTaskParser(task.parser, outputStreams);\n      }\n\n      return callTaskParser(task.parser, outputStreams.asStrings());\n   }\n\n   private async attemptEmptyTask(task: EmptyTask, logger: OutputLogger) {\n      logger(`empty task bypassing child process to call to task's parser`);\n      return task.parser(this);\n   }\n\n   private handleTaskData<R>(\n      task: SimpleGitTask<R>,\n      args: string[],\n      result: GitExecutorResult,\n      logger: OutputLogger\n   ): Promise<GitOutputStreams> {\n      const { exitCode, rejection, stdOut, stdErr } = result;\n\n      return new Promise((done, fail) => {\n         logger(`Preparing to handle process response exitCode=%d stdOut=`, exitCode);\n\n         const { error } = this._plugins.exec(\n            'task.error',\n            { error: rejection },\n            {\n               ...pluginContext(task, args),\n               ...result,\n            }\n         );\n\n         if (error && task.onError) {\n            logger.info(`exitCode=%s handling with custom error handler`);\n\n            return task.onError(\n               result,\n               error,\n               (newStdOut) => {\n                  logger.info(`custom error handler treated as success`);\n                  logger(`custom error returned a %s`, objectToString(newStdOut));\n\n                  done(\n                     new GitOutputStreams(\n                        Array.isArray(newStdOut) ? Buffer.concat(newStdOut) : newStdOut,\n                        Buffer.concat(stdErr)\n                     )\n                  );\n               },\n               fail\n            );\n         }\n\n         if (error) {\n            logger.info(\n               `handling as error: exitCode=%s stdErr=%s rejection=%o`,\n               exitCode,\n               stdErr.length,\n               rejection\n            );\n            return fail(error);\n         }\n\n         logger.info(`retrieving task output complete`);\n         done(new GitOutputStreams(Buffer.concat(stdOut), Buffer.concat(stdErr)));\n      });\n   }\n\n   private async gitResponse<R>(\n      task: SimpleGitTask<R>,\n      command: string,\n      args: string[],\n      outputHandler: Maybe<outputHandler>,\n      logger: OutputLogger\n   ): Promise<GitExecutorResult> {\n      const outputLogger = logger.sibling('output');\n      const spawnOptions: SpawnOptions = this._plugins.exec(\n         'spawn.options',\n         {\n            cwd: this.cwd,\n            env: this.env,\n            windowsHide: true,\n         },\n         pluginContext(task, task.commands)\n      );\n\n      return new Promise((done) => {\n         const stdOut: Buffer[] = [];\n         const stdErr: Buffer[] = [];\n\n         logger.info(`%s %o`, command, args);\n         logger('%O', spawnOptions);\n\n         let rejection = this._beforeSpawn(task, args);\n         if (rejection) {\n            return done({\n               stdOut,\n               stdErr,\n               exitCode: 9901,\n               rejection,\n            });\n         }\n\n         this._plugins.exec('spawn.before', undefined, {\n            ...pluginContext(task, args),\n            kill(reason) {\n               rejection = reason || rejection;\n            },\n         });\n\n         const spawned = spawn(command, args, spawnOptions);\n\n         spawned.stdout!.on(\n            'data',\n            onDataReceived(stdOut, 'stdOut', logger, outputLogger.step('stdOut'))\n         );\n         spawned.stderr!.on(\n            'data',\n            onDataReceived(stdErr, 'stdErr', logger, outputLogger.step('stdErr'))\n         );\n\n         spawned.on('error', onErrorReceived(stdErr, logger));\n\n         if (outputHandler) {\n            logger(`Passing child process stdOut/stdErr to custom outputHandler`);\n            outputHandler(command, spawned.stdout!, spawned.stderr!, [...args]);\n         }\n\n         this._plugins.exec('spawn.after', undefined, {\n            ...pluginContext(task, args),\n            spawned,\n            close(exitCode: number, reason?: Error) {\n               done({\n                  stdOut,\n                  stdErr,\n                  exitCode,\n                  rejection: rejection || reason,\n               });\n            },\n            kill(reason: Error) {\n               if (spawned.killed) {\n                  return;\n               }\n\n               rejection = reason;\n               spawned.kill('SIGINT');\n            },\n         });\n      });\n   }\n\n   private _beforeSpawn<R>(task: SimpleGitTask<R>, args: string[]) {\n      let rejection: Maybe<Error>;\n      this._plugins.exec('spawn.before', undefined, {\n         ...pluginContext(task, args),\n         kill(reason) {\n            rejection = reason || rejection;\n         },\n      });\n\n      return rejection;\n   }\n}\n\nfunction pluginContext<R>(task: SimpleGitTask<R>, commands: string[]) {\n   return {\n      method: first(task.commands) || '',\n      commands,\n   };\n}\n\nfunction onErrorReceived(target: Buffer[], logger: OutputLogger) {\n   return (err: Error) => {\n      logger(`[ERROR] child process exception %o`, err);\n      target.push(Buffer.from(String(err.stack), 'ascii'));\n   };\n}\n\nfunction onDataReceived(\n   target: Buffer[],\n   name: string,\n   logger: OutputLogger,\n   output: OutputLogger\n) {\n   return (buffer: Buffer) => {\n      logger(`%s received %L bytes`, name, buffer);\n      output(`%B`, buffer);\n      target.push(buffer);\n   };\n}\n","const cache = new WeakMap<String, string[]>();\n\nexport function pathspec(...paths: string[]) {\n   const key = new String(paths);\n   cache.set(key, paths);\n\n   return key as string;\n}\n\nexport function isPathSpec(path: string | unknown): path is string {\n   return path instanceof String && cache.has(path);\n}\n\nexport function toPaths(pathSpec: string): string[] {\n   return cache.get(pathSpec) || [];\n}\n","import type { SimpleGitTask } from '../types';\n\n/**\n * The `GitError` is thrown when the underlying `git` process throws a\n * fatal exception (eg an `ENOENT` exception when attempting to use a\n * non-writable directory as the root for your repo), and acts as the\n * base class for more specific errors thrown by the parsing of the\n * git response or errors in the configuration of the task about to\n * be run.\n *\n * When an exception is thrown, pending tasks in the same instance will\n * not be executed. The recommended way to run a series of tasks that\n * can independently fail without needing to prevent future tasks from\n * running is to catch them individually:\n *\n * ```typescript\n import { gitP, SimpleGit, GitError, PullResult } from 'simple-git';\n\n function catchTask (e: GitError) {\n   return e.\n }\n\n const git = gitP(repoWorkingDir);\n const pulled: PullResult | GitError = await git.pull().catch(catchTask);\n const pushed: string | GitError = await git.pushTags().catch(catchTask);\n ```\n */\nexport class GitError extends Error {\n   constructor(\n      public task?: SimpleGitTask<any>,\n      message?: string\n   ) {\n      super(message);\n      Object.setPrototypeOf(this, new.target.prototype);\n   }\n}\n","import { GitError } from './git-error';\n\n/**\n * The `GitResponseError` is the wrapper for a parsed response that is treated as\n * a fatal error, for example attempting a `merge` can leave the repo in a corrupted\n * state when there are conflicts so the task will reject rather than resolve.\n *\n * For example, catching the merge conflict exception:\n *\n * ```typescript\n import { gitP, SimpleGit, GitResponseError, MergeSummary } from 'simple-git';\n\n const git = gitP(repoRoot);\n const mergeOptions: string[] = ['--no-ff', 'other-branch'];\n const mergeSummary: MergeSummary = await git.merge(mergeOptions)\n      .catch((e: GitResponseError<MergeSummary>) => e.git);\n\n if (mergeSummary.failed) {\n   // deal with the error\n }\n ```\n */\nexport class GitResponseError<T = any> extends GitError {\n   constructor(\n      /**\n       * `.git` access the parsed response that is treated as being an error\n       */\n      public readonly git: T,\n      message?: string\n   ) {\n      super(undefined, message || String(git));\n   }\n}\n","import { GitError } from './git-error';\n\n/**\n * The `TaskConfigurationError` is thrown when a command was incorrectly\n * configured. An error of this kind means that no attempt was made to\n * run your command through the underlying `git` binary.\n *\n * Check the `.message` property for more detail on why your configuration\n * resulted in an error.\n */\nexport class TaskConfigurationError extends GitError {\n   constructor(message?: string) {\n      super(undefined, message);\n   }\n}\n","import { Maybe, Options, Primitives } from '../types';\nimport { objectToString } from './util';\nimport { isPathSpec } from '../args/pathspec';\n\nexport interface ArgumentFilterPredicate<T> {\n   (input: any): input is T;\n}\n\nexport function filterType<T, K>(\n   input: K,\n   filter: ArgumentFilterPredicate<T>\n): K extends T ? T : undefined;\nexport function filterType<T, K>(input: K, filter: ArgumentFilterPredicate<T>, def: T): T;\nexport function filterType<T, K>(input: K, filter: ArgumentFilterPredicate<T>, def?: T): Maybe<T> {\n   if (filter(input)) {\n      return input;\n   }\n   return arguments.length > 2 ? def : undefined;\n}\n\nexport const filterArray: ArgumentFilterPredicate<Array<any>> = (input): input is Array<any> => {\n   return Array.isArray(input);\n};\n\nexport function filterPrimitives(\n   input: unknown,\n   omit?: Array<'boolean' | 'string' | 'number'>\n): input is Primitives {\n   const type = isPathSpec(input) ? 'string' : typeof input;\n\n   return (\n      /number|string|boolean/.test(type) &&\n      (!omit || !omit.includes(type as 'boolean' | 'string' | 'number'))\n   );\n}\n\nexport const filterString: ArgumentFilterPredicate<string> = (input): input is string => {\n   return typeof input === 'string';\n};\n\nexport const filterStringArray: ArgumentFilterPredicate<string[]> = (input): input is string[] => {\n   return Array.isArray(input) && input.every(filterString);\n};\n\nexport const filterStringOrStringArray: ArgumentFilterPredicate<string | string[]> = (\n   input\n): input is string | string[] => {\n   return filterString(input) || (Array.isArray(input) && input.every(filterString));\n};\n\nexport function filterPlainObject<T extends Options>(input: T | unknown): input is T;\nexport function filterPlainObject<T extends Object>(input: T | unknown): input is T {\n   return !!input && objectToString(input) === '[object Object]';\n}\n\nexport function filterFunction(input: unknown): input is Function {\n   return typeof input === 'function';\n}\n\nexport const filterHasLength: ArgumentFilterPredicate<{ length: number }> = (\n   input\n): input is { length: number } => {\n   if (input == null || 'number|boolean|function'.includes(typeof input)) {\n      return false;\n   }\n   return Array.isArray(input) || typeof input === 'string' || typeof input.length === 'number';\n};\n","/**\n * Known process exit codes used by the task parsers to determine whether an error\n * was one they can automatically handle\n */\nexport enum ExitCodes {\n   SUCCESS,\n   ERROR,\n   NOT_FOUND = -2,\n   UNCLEAN = 128,\n}\n","import { TaskResponseFormat } from '../types';\n\nexport class GitOutputStreams<T extends TaskResponseFormat = Buffer> {\n   constructor(\n      public readonly stdOut: T,\n      public readonly stdErr: T\n   ) {}\n\n   asStrings(): GitOutputStreams<string> {\n      return new GitOutputStreams(this.stdOut.toString('utf8'), this.stdErr.toString('utf8'));\n   }\n}\n","export class LineParser<T> {\n   protected matches: string[] = [];\n\n   private _regExp: RegExp[];\n\n   constructor(\n      regExp: RegExp | RegExp[],\n      useMatches?: (target: T, match: string[]) => boolean | void\n   ) {\n      this._regExp = Array.isArray(regExp) ? regExp : [regExp];\n      if (useMatches) {\n         this.useMatches = useMatches;\n      }\n   }\n\n   parse = (line: (offset: number) => string | undefined, target: T): boolean => {\n      this.resetMatches();\n\n      if (!this._regExp.every((reg, index) => this.addMatch(reg, index, line(index)))) {\n         return false;\n      }\n\n      return this.useMatches(target, this.prepareMatches()) !== false;\n   };\n\n   // @ts-ignore\n   protected useMatches(target: T, match: string[]): boolean | void {\n      throw new Error(`LineParser:useMatches not implemented`);\n   }\n\n   protected resetMatches() {\n      this.matches.length = 0;\n   }\n\n   protected prepareMatches() {\n      return this.matches;\n   }\n\n   protected addMatch(reg: RegExp, index: number, line?: string) {\n      const matched = line && reg.exec(line);\n      if (matched) {\n         this.pushMatch(index, matched);\n      }\n\n      return !!matched;\n   }\n\n   protected pushMatch(_index: number, matched: string[]) {\n      this.matches.push(...matched.slice(1));\n   }\n}\n\nexport class RemoteLineParser<T> extends LineParser<T> {\n   protected addMatch(reg: RegExp, index: number, line?: string): boolean {\n      return /^remote:\\s/.test(String(line)) && super.addMatch(reg, index, line);\n   }\n\n   protected pushMatch(index: number, matched: string[]) {\n      if (index > 0 || matched.length > 1) {\n         super.pushMatch(index, matched);\n      }\n   }\n}\n","import { SimpleGitOptions } from '../types';\n\nconst defaultOptions: Omit<SimpleGitOptions, 'baseDir'> = {\n   binary: 'git',\n   maxConcurrentProcesses: 5,\n   config: [],\n   trimmed: false,\n};\n\nexport function createInstanceConfig(\n   ...options: Array<Partial<SimpleGitOptions> | undefined>\n): SimpleGitOptions {\n   const baseDir = process.cwd();\n   const config: SimpleGitOptions = Object.assign(\n      { baseDir, ...defaultOptions },\n      ...options.filter((o) => typeof o === 'object' && o)\n   );\n\n   config.baseDir = config.baseDir || baseDir;\n   config.trimmed = config.trimmed === true;\n\n   return config;\n}\n","import {\n   filterArray,\n   filterFunction,\n   filterPlainObject,\n   filterPrimitives,\n   filterType,\n} from './argument-filters';\nimport { asFunction, isUserFunction, last } from './util';\nimport { Maybe, Options, OptionsValues } from '../types';\nimport { isPathSpec } from '../args/pathspec';\n\nexport function appendTaskOptions<T extends Options = Options>(\n   options: Maybe<T>,\n   commands: string[] = []\n): string[] {\n   if (!filterPlainObject<Options>(options)) {\n      return commands;\n   }\n\n   return Object.keys(options).reduce((commands: string[], key: string) => {\n      const value: OptionsValues = options[key];\n\n      if (isPathSpec(value)) {\n         commands.push(value);\n      } else if (filterPrimitives(value, ['boolean'])) {\n         commands.push(key + '=' + value);\n      } else {\n         commands.push(key);\n      }\n\n      return commands;\n   }, commands);\n}\n\nexport function getTrailingOptions(\n   args: IArguments,\n   initialPrimitive = 0,\n   objectOnly = false\n): string[] {\n   const command: string[] = [];\n\n   for (let i = 0, max = initialPrimitive < 0 ? args.length : initialPrimitive; i < max; i++) {\n      if ('string|number'.includes(typeof args[i])) {\n         command.push(String(args[i]));\n      }\n   }\n\n   appendTaskOptions(trailingOptionsArgument(args), command);\n   if (!objectOnly) {\n      command.push(...trailingArrayArgument(args));\n   }\n\n   return command;\n}\n\nfunction trailingArrayArgument(args: IArguments) {\n   const hasTrailingCallback = typeof last(args) === 'function';\n   return filterType(last(args, hasTrailingCallback ? 1 : 0), filterArray, []);\n}\n\n/**\n * Given any number of arguments, returns the trailing options argument, ignoring a trailing function argument\n * if there is one. When not found, the return value is null.\n */\nexport function trailingOptionsArgument(args: IArguments): Maybe<Options> {\n   const hasTrailingCallback = filterFunction(last(args));\n   return filterType(last(args, hasTrailingCallback ? 1 : 0), filterPlainObject);\n}\n\n/**\n * Returns either the source argument when it is a `Function`, or the default\n * `NOOP` function constant\n */\nexport function trailingFunctionArgument(\n   args: unknown[] | IArguments | unknown,\n   includeNoop = true\n): Maybe<(...args: any[]) => unknown> {\n   const callback = asFunction(last(args));\n   return includeNoop || isUserFunction(callback) ? callback : undefined;\n}\n","import type { MaybeArray, TaskParser, TaskResponseFormat } from '../types';\nimport { GitOutputStreams } from './git-output-streams';\nimport { LineParser } from './line-parser';\nimport { asArray, toLinesWithContent } from './util';\n\nexport function callTaskParser<INPUT extends TaskResponseFormat, RESPONSE>(\n   parser: TaskParser<INPUT, RESPONSE>,\n   streams: GitOutputStreams<INPUT>\n) {\n   return parser(streams.stdOut, streams.stdErr);\n}\n\nexport function parseStringResponse<T>(\n   result: T,\n   parsers: LineParser<T>[],\n   texts: MaybeArray<string>,\n   trim = true\n): T {\n   asArray(texts).forEach((text) => {\n      for (let lines = toLinesWithContent(text, trim), i = 0, max = lines.length; i < max; i++) {\n         const line = (offset = 0) => {\n            if (i + offset >= max) {\n               return;\n            }\n            return lines[i + offset];\n         };\n\n         parsers.some(({ parse }) => parse(line, result));\n      }\n   });\n\n   return result;\n}\n","export * from './argument-filters';\nexport * from './exit-codes';\nexport * from './git-output-streams';\nexport * from './line-parser';\nexport * from './simple-git-options';\nexport * from './task-options';\nexport * from './task-parser';\nexport * from './util';\n","import { ExitCodes } from '../utils';\nimport { Maybe, StringTask } from '../types';\n\nexport enum CheckRepoActions {\n   BARE = 'bare',\n   IN_TREE = 'tree',\n   IS_REPO_ROOT = 'root',\n}\n\nconst onError: StringTask<boolean>['onError'] = ({ exitCode }, error, done, fail) => {\n   if (exitCode === ExitCodes.UNCLEAN && isNotRepoMessage(error)) {\n      return done(Buffer.from('false'));\n   }\n\n   fail(error);\n};\n\nconst parser: StringTask<boolean>['parser'] = (text) => {\n   return text.trim() === 'true';\n};\n\nexport function checkIsRepoTask(action: Maybe<CheckRepoActions>): StringTask<boolean> {\n   switch (action) {\n      case CheckRepoActions.BARE:\n         return checkIsBareRepoTask();\n      case CheckRepoActions.IS_REPO_ROOT:\n         return checkIsRepoRootTask();\n   }\n\n   const commands = ['rev-parse', '--is-inside-work-tree'];\n\n   return {\n      commands,\n      format: 'utf-8',\n      onError,\n      parser,\n   };\n}\n\nexport function checkIsRepoRootTask(): StringTask<boolean> {\n   const commands = ['rev-parse', '--git-dir'];\n\n   return {\n      commands,\n      format: 'utf-8',\n      onError,\n      parser(path) {\n         return /^\\.(git)?$/.test(path.trim());\n      },\n   };\n}\n\nexport function checkIsBareRepoTask(): StringTask<boolean> {\n   const commands = ['rev-parse', '--is-bare-repository'];\n\n   return {\n      commands,\n      format: 'utf-8',\n      onError,\n      parser,\n   };\n}\n\nfunction isNotRepoMessage(error: Error): boolean {\n   return /(Not a git repository|Kein Git-Repository)/i.test(String(error));\n}\n","import { CleanSummary } from '../../../typings';\nimport { toLinesWithContent } from '../utils';\n\nexport class CleanResponse implements CleanSummary {\n   public paths: string[] = [];\n   public files: string[] = [];\n   public folders: string[] = [];\n\n   constructor(public readonly dryRun: boolean) {}\n}\n\nconst removalRegexp = /^[a-z]+\\s*/i;\nconst dryRunRemovalRegexp = /^[a-z]+\\s+[a-z]+\\s*/i;\nconst isFolderRegexp = /\\/$/;\n\nexport function cleanSummaryParser(dryRun: boolean, text: string): CleanSummary {\n   const summary = new CleanResponse(dryRun);\n   const regexp = dryRun ? dryRunRemovalRegexp : removalRegexp;\n\n   toLinesWithContent(text).forEach((line) => {\n      const removed = line.replace(regexp, '');\n\n      summary.paths.push(removed);\n      (isFolderRegexp.test(removed) ? summary.folders : summary.files).push(removed);\n   });\n\n   return summary;\n}\n","import { TaskConfigurationError } from '../errors/task-configuration-error';\nimport type { BufferTask, EmptyTaskParser, SimpleGitTask, StringTask } from '../types';\n\nexport const EMPTY_COMMANDS: [] = [];\n\nexport type EmptyTask = {\n   commands: typeof EMPTY_COMMANDS;\n   format: 'empty';\n   parser: EmptyTaskParser;\n   onError?: undefined;\n};\n\nexport function adhocExecTask(parser: EmptyTaskParser): EmptyTask {\n   return {\n      commands: EMPTY_COMMANDS,\n      format: 'empty',\n      parser,\n   };\n}\n\nexport function configurationErrorTask(error: Error | string): EmptyTask {\n   return {\n      commands: EMPTY_COMMANDS,\n      format: 'empty',\n      parser() {\n         throw typeof error === 'string' ? new TaskConfigurationError(error) : error;\n      },\n   };\n}\n\nexport function straightThroughStringTask(commands: string[], trimmed = false): StringTask<string> {\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text) {\n         return trimmed ? String(text).trim() : text;\n      },\n   };\n}\n\nexport function straightThroughBufferTask(commands: string[]): BufferTask<any> {\n   return {\n      commands,\n      format: 'buffer',\n      parser(buffer) {\n         return buffer;\n      },\n   };\n}\n\nexport function isBufferTask<R>(task: SimpleGitTask<R>): task is BufferTask<R> {\n   return task.format === 'buffer';\n}\n\nexport function isEmptyTask<R>(task: SimpleGitTask<R>): task is EmptyTask {\n   return task.format === 'empty' || !task.commands.length;\n}\n","import { CleanSummary } from '../../../typings';\nimport { cleanSummaryParser } from '../responses/CleanSummary';\nimport { Maybe, StringTask } from '../types';\nimport { asStringArray } from '../utils';\nimport { configurationErrorTask } from './task';\n\nexport const CONFIG_ERROR_INTERACTIVE_MODE = 'Git clean interactive mode is not supported';\nexport const CONFIG_ERROR_MODE_REQUIRED = 'Git clean mode parameter (\"n\" or \"f\") is required';\nexport const CONFIG_ERROR_UNKNOWN_OPTION = 'Git clean unknown option found in: ';\n\n/**\n * All supported option switches available for use in a `git.clean` operation\n */\nexport enum CleanOptions {\n   DRY_RUN = 'n',\n   FORCE = 'f',\n   IGNORED_INCLUDED = 'x',\n   IGNORED_ONLY = 'X',\n   EXCLUDING = 'e',\n   QUIET = 'q',\n   RECURSIVE = 'd',\n}\n\n/**\n * The two modes `git.clean` can run in - one of these must be supplied in order\n * for the command to not throw a `TaskConfigurationError`\n */\nexport type CleanMode = CleanOptions.FORCE | CleanOptions.DRY_RUN;\n\nconst CleanOptionValues: Set<string> = new Set([\n   'i',\n   ...asStringArray(Object.values(CleanOptions as any)),\n]);\n\nexport function cleanWithOptionsTask(mode: CleanMode | string, customArgs: string[]) {\n   const { cleanMode, options, valid } = getCleanOptions(mode);\n\n   if (!cleanMode) {\n      return configurationErrorTask(CONFIG_ERROR_MODE_REQUIRED);\n   }\n\n   if (!valid.options) {\n      return configurationErrorTask(CONFIG_ERROR_UNKNOWN_OPTION + JSON.stringify(mode));\n   }\n\n   options.push(...customArgs);\n\n   if (options.some(isInteractiveMode)) {\n      return configurationErrorTask(CONFIG_ERROR_INTERACTIVE_MODE);\n   }\n\n   return cleanTask(cleanMode, options);\n}\n\nexport function cleanTask(mode: CleanMode, customArgs: string[]): StringTask<CleanSummary> {\n   const commands: string[] = ['clean', `-${mode}`, ...customArgs];\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text: string): CleanSummary {\n         return cleanSummaryParser(mode === CleanOptions.DRY_RUN, text);\n      },\n   };\n}\n\nexport function isCleanOptionsArray(input: string[]): input is CleanOptions[] {\n   return Array.isArray(input) && input.every((test) => CleanOptionValues.has(test));\n}\n\nfunction getCleanOptions(input: string) {\n   let cleanMode: Maybe<CleanMode>;\n   let options: string[] = [];\n   let valid = { cleanMode: false, options: true };\n\n   input\n      .replace(/[^a-z]i/g, '')\n      .split('')\n      .forEach((char) => {\n         if (isCleanMode(char)) {\n            cleanMode = char;\n            valid.cleanMode = true;\n         } else {\n            valid.options = valid.options && isKnownOption((options[options.length] = `-${char}`));\n         }\n      });\n\n   return {\n      cleanMode,\n      options,\n      valid,\n   };\n}\n\nfunction isCleanMode(cleanMode?: string): cleanMode is CleanMode {\n   return cleanMode === CleanOptions.FORCE || cleanMode === CleanOptions.DRY_RUN;\n}\n\nfunction isKnownOption(option: string): boolean {\n   return /^-[a-z]$/i.test(option) && CleanOptionValues.has(option.charAt(1));\n}\n\nfunction isInteractiveMode(option: string): boolean {\n   if (/^-[^\\-]/.test(option)) {\n      return option.indexOf('i') > 0;\n   }\n\n   return option === '--interactive';\n}\n","import { ConfigGetResult, ConfigListSummary, ConfigValues } from '../../../typings';\nimport { last, splitOn } from '../utils';\n\nexport class ConfigList implements ConfigListSummary {\n   public files: string[] = [];\n   public values: { [fileName: string]: ConfigValues } = Object.create(null);\n\n   private _all: ConfigValues | undefined;\n\n   public get all(): ConfigValues {\n      if (!this._all) {\n         this._all = this.files.reduce((all: ConfigValues, file: string) => {\n            return Object.assign(all, this.values[file]);\n         }, {});\n      }\n\n      return this._all;\n   }\n\n   public addFile(file: string): ConfigValues {\n      if (!(file in this.values)) {\n         const latest = last(this.files);\n         this.values[file] = latest ? Object.create(this.values[latest]) : {};\n\n         this.files.push(file);\n      }\n\n      return this.values[file];\n   }\n\n   public addValue(file: string, key: string, value: string) {\n      const values = this.addFile(file);\n\n      if (!values.hasOwnProperty(key)) {\n         values[key] = value;\n      } else if (Array.isArray(values[key])) {\n         (values[key] as string[]).push(value);\n      } else {\n         values[key] = [values[key] as string, value];\n      }\n\n      this._all = undefined;\n   }\n}\n\nexport function configListParser(text: string): ConfigList {\n   const config = new ConfigList();\n\n   for (const item of configParser(text)) {\n      config.addValue(item.file, String(item.key), item.value);\n   }\n\n   return config;\n}\n\nexport function configGetParser(text: string, key: string): ConfigGetResult {\n   let value: string | null = null;\n   const values: string[] = [];\n   const scopes: Map<string, string[]> = new Map();\n\n   for (const item of configParser(text, key)) {\n      if (item.key !== key) {\n         continue;\n      }\n\n      values.push((value = item.value));\n\n      if (!scopes.has(item.file)) {\n         scopes.set(item.file, []);\n      }\n\n      scopes.get(item.file)!.push(value);\n   }\n\n   return {\n      key,\n      paths: Array.from(scopes.keys()),\n      scopes,\n      value,\n      values,\n   };\n}\n\nfunction configFilePath(filePath: string): string {\n   return filePath.replace(/^(file):/, '');\n}\n\nfunction* configParser(text: string, requestedKey: string | null = null) {\n   const lines = text.split('\\0');\n\n   for (let i = 0, max = lines.length - 1; i < max; ) {\n      const file = configFilePath(lines[i++]);\n\n      let value = lines[i++];\n      let key = requestedKey;\n\n      if (value.includes('\\n')) {\n         const line = splitOn(value, '\\n');\n         key = line[0];\n         value = line[1];\n      }\n\n      yield { file, key, value };\n   }\n}\n","import type { ConfigGetResult, ConfigListSummary, SimpleGit } from '../../../typings';\nimport { configGetParser, configListParser } from '../responses/ConfigList';\nimport type { SimpleGitApi } from '../simple-git-api';\nimport type { StringTask } from '../types';\nimport { trailingFunctionArgument } from '../utils';\n\nexport enum GitConfigScope {\n   system = 'system',\n   global = 'global',\n   local = 'local',\n   worktree = 'worktree',\n}\n\nfunction asConfigScope<T extends GitConfigScope | undefined>(\n   scope: GitConfigScope | unknown,\n   fallback: T\n): GitConfigScope | T {\n   if (typeof scope === 'string' && GitConfigScope.hasOwnProperty(scope)) {\n      return scope as GitConfigScope;\n   }\n   return fallback;\n}\n\nfunction addConfigTask(\n   key: string,\n   value: string,\n   append: boolean,\n   scope: GitConfigScope\n): StringTask<string> {\n   const commands: string[] = ['config', `--${scope}`];\n\n   if (append) {\n      commands.push('--add');\n   }\n\n   commands.push(key, value);\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text: string): string {\n         return text;\n      },\n   };\n}\n\nfunction getConfigTask(key: string, scope?: GitConfigScope): StringTask<ConfigGetResult> {\n   const commands: string[] = ['config', '--null', '--show-origin', '--get-all', key];\n\n   if (scope) {\n      commands.splice(1, 0, `--${scope}`);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text) {\n         return configGetParser(text, key);\n      },\n   };\n}\n\nfunction listConfigTask(scope?: GitConfigScope): StringTask<ConfigListSummary> {\n   const commands = ['config', '--list', '--show-origin', '--null'];\n\n   if (scope) {\n      commands.push(`--${scope}`);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text: string) {\n         return configListParser(text);\n      },\n   };\n}\n\nexport default function (): Pick<SimpleGit, 'addConfig' | 'getConfig' | 'listConfig'> {\n   return {\n      addConfig(this: SimpleGitApi, key: string, value: string, ...rest: unknown[]) {\n         return this._runTask(\n            addConfigTask(\n               key,\n               value,\n               rest[0] === true,\n               asConfigScope(rest[1], GitConfigScope.local)\n            ),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      getConfig(this: SimpleGitApi, key: string, scope?: GitConfigScope) {\n         return this._runTask(\n            getConfigTask(key, asConfigScope(scope, undefined)),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      listConfig(this: SimpleGitApi, ...rest: unknown[]) {\n         return this._runTask(\n            listConfigTask(asConfigScope(rest[0], undefined)),\n            trailingFunctionArgument(arguments)\n         );\n      },\n   };\n}\n","import { GrepResult, SimpleGit } from '../../../typings';\nimport { SimpleGitApi } from '../simple-git-api';\nimport {\n   asNumber,\n   forEachLineWithContent,\n   getTrailingOptions,\n   NULL,\n   prefixedArray,\n   trailingFunctionArgument,\n} from '../utils';\n\nimport { configurationErrorTask } from './task';\n\nconst disallowedOptions = ['-h'];\n\nconst Query = Symbol('grepQuery');\n\nexport interface GitGrepQuery extends Iterable<string> {\n   /** Adds one or more terms to be grouped as an \"and\" to any other terms */\n   and(...and: string[]): this;\n\n   /** Adds one or more search terms - git.grep will \"or\" this to other terms */\n   param(...param: string[]): this;\n}\n\nclass GrepQuery implements GitGrepQuery {\n   private [Query]: string[] = [];\n\n   *[Symbol.iterator]() {\n      for (const query of this[Query]) {\n         yield query;\n      }\n   }\n\n   and(...and: string[]) {\n      and.length && this[Query].push('--and', '(', ...prefixedArray(and, '-e'), ')');\n      return this;\n   }\n\n   param(...param: string[]) {\n      this[Query].push(...prefixedArray(param, '-e'));\n      return this;\n   }\n}\n\n/**\n * Creates a new builder for a `git.grep` query with optional params\n */\nexport function grepQueryBuilder(...params: string[]): GitGrepQuery {\n   return new GrepQuery().param(...params);\n}\n\nfunction parseGrep(grep: string): GrepResult {\n   const paths: GrepResult['paths'] = new Set<string>();\n   const results: GrepResult['results'] = {};\n\n   forEachLineWithContent(grep, (input) => {\n      const [path, line, preview] = input.split(NULL);\n      paths.add(path);\n      (results[path] = results[path] || []).push({\n         line: asNumber(line),\n         path,\n         preview,\n      });\n   });\n\n   return {\n      paths,\n      results,\n   };\n}\n\nexport default function (): Pick<SimpleGit, 'grep'> {\n   return {\n      grep(this: SimpleGitApi, searchTerm: string | GitGrepQuery) {\n         const then = trailingFunctionArgument(arguments);\n         const options = getTrailingOptions(arguments);\n\n         for (const option of disallowedOptions) {\n            if (options.includes(option)) {\n               return this._runTask(\n                  configurationErrorTask(`git.grep: use of \"${option}\" is not supported.`),\n                  then\n               );\n            }\n         }\n\n         if (typeof searchTerm === 'string') {\n            searchTerm = grepQueryBuilder().param(searchTerm);\n         }\n\n         const commands = ['grep', '--null', '-n', '--full-name', ...options, ...searchTerm];\n\n         return this._runTask(\n            {\n               commands,\n               format: 'utf-8',\n               parser(stdOut) {\n                  return parseGrep(stdOut);\n               },\n            },\n            then\n         );\n      },\n   };\n}\n","import { straightThroughStringTask } from './task';\nimport { Maybe, OptionFlags, Options } from '../types';\n\nexport enum ResetMode {\n   MIXED = 'mixed',\n   SOFT = 'soft',\n   HARD = 'hard',\n   MERGE = 'merge',\n   KEEP = 'keep',\n}\n\nconst ResetModes = Array.from(Object.values(ResetMode));\n\nexport type ResetOptions = Options &\n   OptionFlags<'-q' | '--quiet' | '--no-quiet' | '--pathspec-from-nul'> &\n   OptionFlags<'--pathspec-from-file', string>;\n\nexport function resetTask(mode: Maybe<ResetMode>, customArgs: string[]) {\n   const commands: string[] = ['reset'];\n   if (isValidResetMode(mode)) {\n      commands.push(`--${mode}`);\n   }\n   commands.push(...customArgs);\n\n   return straightThroughStringTask(commands);\n}\n\nexport function getResetMode(mode: ResetMode | any): Maybe<ResetMode> {\n   if (isValidResetMode(mode)) {\n      return mode;\n   }\n\n   switch (typeof mode) {\n      case 'string':\n      case 'undefined':\n         return ResetMode.SOFT;\n   }\n\n   return;\n}\n\nfunction isValidResetMode(mode: ResetMode | any): mode is ResetMode {\n   return ResetModes.includes(mode);\n}\n","import { SimpleGitTask } from '../types';\nimport { GitError } from '../errors/git-error';\nimport { createLogger, OutputLogger } from '../git-logger';\n\ntype AnySimpleGitTask = SimpleGitTask<any>;\n\ntype TaskInProgress = {\n   name: string;\n   logger: OutputLogger;\n   task: AnySimpleGitTask;\n};\n\nexport class TasksPendingQueue {\n   private _queue: Map<AnySimpleGitTask, TaskInProgress> = new Map();\n\n   constructor(private logLabel = 'GitExecutor') {}\n\n   private withProgress(task: AnySimpleGitTask) {\n      return this._queue.get(task);\n   }\n\n   private createProgress(task: AnySimpleGitTask): TaskInProgress {\n      const name = TasksPendingQueue.getName(task.commands[0]);\n      const logger = createLogger(this.logLabel, name);\n\n      return {\n         task,\n         logger,\n         name,\n      };\n   }\n\n   push(task: AnySimpleGitTask): TaskInProgress {\n      const progress = this.createProgress(task);\n      progress.logger('Adding task to the queue, commands = %o', task.commands);\n\n      this._queue.set(task, progress);\n\n      return progress;\n   }\n\n   fatal(err: GitError) {\n      for (const [task, { logger }] of Array.from(this._queue.entries())) {\n         if (task === err.task) {\n            logger.info(`Failed %o`, err);\n            logger(\n               `Fatal exception, any as-yet un-started tasks run through this executor will not be attempted`\n            );\n         } else {\n            logger.info(\n               `A fatal exception occurred in a previous task, the queue has been purged: %o`,\n               err.message\n            );\n         }\n\n         this.complete(task);\n      }\n\n      if (this._queue.size !== 0) {\n         throw new Error(`Queue size should be zero after fatal: ${this._queue.size}`);\n      }\n   }\n\n   complete(task: AnySimpleGitTask) {\n      const progress = this.withProgress(task);\n      if (progress) {\n         this._queue.delete(task);\n      }\n   }\n\n   attempt(task: AnySimpleGitTask): TaskInProgress {\n      const progress = this.withProgress(task);\n      if (!progress) {\n         throw new GitError(undefined, 'TasksPendingQueue: attempt called for an unknown task');\n      }\n      progress.logger('Starting task');\n\n      return progress;\n   }\n\n   static getName(name = 'empty') {\n      return `task:${name}:${++TasksPendingQueue.counter}`;\n   }\n\n   private static counter = 0;\n}\n","import type { PluginStore } from '../plugins';\nimport type { GitExecutorEnv, outputHandler, SimpleGitExecutor, SimpleGitTask } from '../types';\n\nimport { GitExecutorChain } from './git-executor-chain';\nimport { Scheduler } from './scheduler';\n\nexport class GitExecutor implements SimpleGitExecutor {\n   private _chain = new GitExecutorChain(this, this._scheduler, this._plugins);\n\n   public env: GitExecutorEnv;\n   public outputHandler?: outputHandler;\n\n   constructor(\n      public binary: string = 'git',\n      public cwd: string,\n      private _scheduler: Scheduler,\n      private _plugins: PluginStore\n   ) {}\n\n   chain(): SimpleGitExecutor {\n      return new GitExecutorChain(this, this._scheduler, this._plugins);\n   }\n\n   push<R>(task: SimpleGitTask<R>): Promise<R> {\n      return this._chain.push(task);\n   }\n}\n","import { GitError } from './errors/git-error';\nimport { GitResponseError } from './errors/git-response-error';\nimport { SimpleGitTask, SimpleGitTaskCallback } from './types';\nimport { NOOP } from './utils';\n\nexport function taskCallback<R>(\n   task: SimpleGitTask<R>,\n   response: Promise<R>,\n   callback: SimpleGitTaskCallback<R> = NOOP\n) {\n   const onSuccess = (data: R) => {\n      callback(null, data);\n   };\n\n   const onError = (err: GitError | GitResponseError) => {\n      if (err?.task === task) {\n         callback(\n            err instanceof GitResponseError ? addDeprecationNoticeToError(err) : err,\n            undefined as any\n         );\n      }\n   };\n\n   response.then(onSuccess, onError);\n}\n\nfunction addDeprecationNoticeToError(err: GitResponseError) {\n   let log = (name: string) => {\n      console.warn(\n         `simple-git deprecation notice: accessing GitResponseError.${name} should be GitResponseError.git.${name}, this will no longer be available in version 3`\n      );\n      log = NOOP;\n   };\n\n   return Object.create(err, Object.getOwnPropertyNames(err.git).reduce(descriptorReducer, {}));\n\n   function descriptorReducer(all: PropertyDescriptorMap, name: string): typeof all {\n      if (name in err) {\n         return all;\n      }\n\n      all[name] = {\n         enumerable: false,\n         configurable: false,\n         get() {\n            log(name);\n            return err.git[name];\n         },\n      };\n\n      return all;\n   }\n}\n","import { folderExists } from '../utils';\nimport { SimpleGitExecutor } from '../types';\nimport { adhocExecTask } from './task';\n\nexport function changeWorkingDirectoryTask(directory: string, root?: SimpleGitExecutor) {\n   return adhocExecTask((instance: SimpleGitExecutor) => {\n      if (!folderExists(directory)) {\n         throw new Error(`Git.cwd: cannot change to non-directory \"${directory}\"`);\n      }\n\n      return ((root || instance).cwd = directory);\n   });\n}\n","import type { SimpleGit } from '../../../typings';\nimport type { SimpleGitApi } from '../simple-git-api';\nimport { getTrailingOptions, remove, trailingFunctionArgument } from '../utils';\nimport { straightThroughStringTask } from './task';\n\nfunction checkoutTask(args: string[]) {\n   const commands = ['checkout', ...args];\n   if (commands[1] === '-b' && commands.includes('-B')) {\n      commands[1] = remove(commands, '-B');\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport default function (): Pick<SimpleGit, 'checkout' | 'checkoutBranch' | 'checkoutLocalBranch'> {\n   return {\n      checkout(this: SimpleGitApi) {\n         return this._runTask(\n            checkoutTask(getTrailingOptions(arguments, 1)),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      checkoutBranch(this: SimpleGitApi, branchName, startPoint) {\n         return this._runTask(\n            checkoutTask(['-b', branchName, startPoint, ...getTrailingOptions(arguments)]),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      checkoutLocalBranch(this: SimpleGitApi, branchName) {\n         return this._runTask(\n            checkoutTask(['-b', branchName, ...getTrailingOptions(arguments)]),\n            trailingFunctionArgument(arguments)\n         );\n      },\n   };\n}\n","import { CommitResult } from '../../../typings';\nimport { LineParser, parseStringResponse } from '../utils';\n\nconst parsers: LineParser<CommitResult>[] = [\n   new LineParser(/^\\[([^\\s]+)( \\([^)]+\\))? ([^\\]]+)/, (result, [branch, root, commit]) => {\n      result.branch = branch;\n      result.commit = commit;\n      result.root = !!root;\n   }),\n   new LineParser(/\\s*Author:\\s(.+)/i, (result, [author]) => {\n      const parts = author.split('<');\n      const email = parts.pop();\n\n      if (!email || !email.includes('@')) {\n         return;\n      }\n\n      result.author = {\n         email: email.substr(0, email.length - 1),\n         name: parts.join('<').trim(),\n      };\n   }),\n   new LineParser(\n      /(\\d+)[^,]*(?:,\\s*(\\d+)[^,]*)(?:,\\s*(\\d+))/g,\n      (result, [changes, insertions, deletions]) => {\n         result.summary.changes = parseInt(changes, 10) || 0;\n         result.summary.insertions = parseInt(insertions, 10) || 0;\n         result.summary.deletions = parseInt(deletions, 10) || 0;\n      }\n   ),\n   new LineParser(\n      /^(\\d+)[^,]*(?:,\\s*(\\d+)[^(]+\\(([+-]))?/,\n      (result, [changes, lines, direction]) => {\n         result.summary.changes = parseInt(changes, 10) || 0;\n         const count = parseInt(lines, 10) || 0;\n         if (direction === '-') {\n            result.summary.deletions = count;\n         } else if (direction === '+') {\n            result.summary.insertions = count;\n         }\n      }\n   ),\n];\n\nexport function parseCommitResult(stdOut: string): CommitResult {\n   const result: CommitResult = {\n      author: null,\n      branch: '',\n      commit: '',\n      root: false,\n      summary: {\n         changes: 0,\n         insertions: 0,\n         deletions: 0,\n      },\n   };\n   return parseStringResponse(result, parsers, stdOut);\n}\n","import type { CommitResult, SimpleGit } from '../../../typings';\nimport type { SimpleGitApi } from '../simple-git-api';\nimport type { StringTask } from '../types';\nimport { parseCommitResult } from '../parsers/parse-commit';\nimport {\n   asArray,\n   filterArray,\n   filterStringOrStringArray,\n   filterType,\n   getTrailingOptions,\n   prefixedArray,\n   trailingFunctionArgument,\n} from '../utils';\nimport { configurationErrorTask } from './task';\n\nexport function commitTask(\n   message: string[],\n   files: string[],\n   customArgs: string[]\n): StringTask<CommitResult> {\n   const commands: string[] = [\n      '-c',\n      'core.abbrev=40',\n      'commit',\n      ...prefixedArray(message, '-m'),\n      ...files,\n      ...customArgs,\n   ];\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser: parseCommitResult,\n   };\n}\n\nexport default function (): Pick<SimpleGit, 'commit'> {\n   return {\n      commit(this: SimpleGitApi, message: string | string[], ...rest: unknown[]) {\n         const next = trailingFunctionArgument(arguments);\n         const task =\n            rejectDeprecatedSignatures(message) ||\n            commitTask(\n               asArray(message),\n               asArray(filterType(rest[0], filterStringOrStringArray, [])),\n               [...filterType(rest[1], filterArray, []), ...getTrailingOptions(arguments, 0, true)]\n            );\n\n         return this._runTask(task, next);\n      },\n   };\n\n   function rejectDeprecatedSignatures(message?: unknown) {\n      return (\n         !filterStringOrStringArray(message) &&\n         configurationErrorTask(\n            `git.commit: requires the commit message to be supplied as a string/string[]`\n         )\n      );\n   }\n}\n","import { straightThroughStringTask } from './task';\nimport { StringTask } from '../types';\n\n/**\n * Task used by `git.hashObject`\n */\nexport function hashObjectTask(filePath: string, write: boolean): StringTask<string> {\n   const commands = ['hash-object', filePath];\n   if (write) {\n      commands.push('-w');\n   }\n\n   return straightThroughStringTask(commands, true);\n}\n","import { InitResult } from '../../../typings';\n\nexport class InitSummary implements InitResult {\n   constructor(\n      public readonly bare: boolean,\n      public readonly path: string,\n      public readonly existing: boolean,\n      public readonly gitDir: string\n   ) {}\n}\n\nconst initResponseRegex = /^Init.+ repository in (.+)$/;\nconst reInitResponseRegex = /^Rein.+ in (.+)$/;\n\nexport function parseInit(bare: boolean, path: string, text: string) {\n   const response = String(text).trim();\n   let result;\n\n   if ((result = initResponseRegex.exec(response))) {\n      return new InitSummary(bare, path, false, result[1]);\n   }\n\n   if ((result = reInitResponseRegex.exec(response))) {\n      return new InitSummary(bare, path, true, result[1]);\n   }\n\n   let gitDir = '';\n   const tokens = response.split(' ');\n   while (tokens.length) {\n      const token = tokens.shift();\n      if (token === 'in') {\n         gitDir = tokens.join(' ');\n         break;\n      }\n   }\n\n   return new InitSummary(bare, path, /^re/i.test(response), gitDir);\n}\n","import { InitResult } from '../../../typings';\nimport { parseInit } from '../responses/InitSummary';\nimport { StringTask } from '../types';\n\nconst bareCommand = '--bare';\n\nfunction hasBareCommand(command: string[]) {\n   return command.includes(bareCommand);\n}\n\nexport function initTask(bare = false, path: string, customArgs: string[]): StringTask<InitResult> {\n   const commands = ['init', ...customArgs];\n   if (bare && !hasBareCommand(commands)) {\n      commands.splice(1, 0, bareCommand);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text: string): InitResult {\n         return parseInit(commands.includes('--bare'), path, text);\n      },\n   };\n}\n","export enum LogFormat {\n   NONE = '',\n   STAT = '--stat',\n   NUM_STAT = '--numstat',\n   NAME_ONLY = '--name-only',\n   NAME_STATUS = '--name-status',\n}\n\nconst logFormatRegex = /^--(stat|numstat|name-only|name-status)(=|$)/;\n\nexport function logFormatFromCommand(customArgs: string[]) {\n   for (let i = 0; i < customArgs.length; i++) {\n      const format = logFormatRegex.exec(customArgs[i]);\n      if (format) {\n         return `--${format[1]}` as LogFormat;\n      }\n   }\n\n   return LogFormat.NONE;\n}\n\nexport function isLogFormat(customArg: string | unknown) {\n   return logFormatRegex.test(customArg as string);\n}\n","import { DiffResult, DiffResultBinaryFile, DiffResultTextFile } from '../../../typings';\n\n/***\n * The DiffSummary is returned as a response to getting `git().status()`\n */\nexport class DiffSummary implements DiffResult {\n   changed = 0;\n   deletions = 0;\n   insertions = 0;\n\n   files: Array<DiffResultTextFile | DiffResultBinaryFile> = [];\n}\n","import { DiffResult } from '../../../typings';\nimport { LogFormat } from '../args/log-format';\nimport { DiffSummary } from '../responses/DiffSummary';\nimport { asNumber, LineParser, parseStringResponse } from '../utils';\n\nconst statParser = [\n   new LineParser<DiffResult>(\n      /(.+)\\s+\\|\\s+(\\d+)(\\s+[+\\-]+)?$/,\n      (result, [file, changes, alterations = '']) => {\n         result.files.push({\n            file: file.trim(),\n            changes: asNumber(changes),\n            insertions: alterations.replace(/[^+]/g, '').length,\n            deletions: alterations.replace(/[^-]/g, '').length,\n            binary: false,\n         });\n      }\n   ),\n   new LineParser<DiffResult>(\n      /(.+) \\|\\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)/,\n      (result, [file, before, after]) => {\n         result.files.push({\n            file: file.trim(),\n            before: asNumber(before),\n            after: asNumber(after),\n            binary: true,\n         });\n      }\n   ),\n   new LineParser<DiffResult>(\n      /(\\d+) files? changed\\s*((?:, \\d+ [^,]+){0,2})/,\n      (result, [changed, summary]) => {\n         const inserted = /(\\d+) i/.exec(summary);\n         const deleted = /(\\d+) d/.exec(summary);\n\n         result.changed = asNumber(changed);\n         result.insertions = asNumber(inserted?.[1]);\n         result.deletions = asNumber(deleted?.[1]);\n      }\n   ),\n];\n\nconst numStatParser = [\n   new LineParser<DiffResult>(\n      /(\\d+)\\t(\\d+)\\t(.+)$/,\n      (result, [changesInsert, changesDelete, file]) => {\n         const insertions = asNumber(changesInsert);\n         const deletions = asNumber(changesDelete);\n\n         result.changed++;\n         result.insertions += insertions;\n         result.deletions += deletions;\n\n         result.files.push({\n            file,\n            changes: insertions + deletions,\n            insertions,\n            deletions,\n            binary: false,\n         });\n      }\n   ),\n   new LineParser<DiffResult>(/-\\t-\\t(.+)$/, (result, [file]) => {\n      result.changed++;\n\n      result.files.push({\n         file,\n         after: 0,\n         before: 0,\n         binary: true,\n      });\n   }),\n];\n\nconst nameOnlyParser = [\n   new LineParser<DiffResult>(/(.+)$/, (result, [file]) => {\n      result.changed++;\n      result.files.push({\n         file,\n         changes: 0,\n         insertions: 0,\n         deletions: 0,\n         binary: false,\n      });\n   }),\n];\n\nconst nameStatusParser = [\n   new LineParser<DiffResult>(/([ACDMRTUXB])\\s*(.+)$/, (result, [_status, file]) => {\n      result.changed++;\n      result.files.push({\n         file,\n         changes: 0,\n         insertions: 0,\n         deletions: 0,\n         binary: false,\n      });\n   }),\n];\n\nconst diffSummaryParsers: Record<LogFormat, LineParser<DiffResult>[]> = {\n   [LogFormat.NONE]: statParser,\n   [LogFormat.STAT]: statParser,\n   [LogFormat.NUM_STAT]: numStatParser,\n   [LogFormat.NAME_STATUS]: nameStatusParser,\n   [LogFormat.NAME_ONLY]: nameOnlyParser,\n};\n\nexport function getDiffParser(format = LogFormat.NONE) {\n   const parser = diffSummaryParsers[format];\n\n   return (stdOut: string) => parseStringResponse(new DiffSummary(), parser, stdOut, false);\n}\n","import { ListLogLine, LogResult } from '../../../typings';\nimport { toLinesWithContent } from '../utils';\nimport { getDiffParser } from './parse-diff-summary';\nimport { LogFormat } from '../args/log-format';\n\nexport const START_BOUNDARY = 'òòòòòò ';\n\nexport const COMMIT_BOUNDARY = ' òò';\n\nexport const SPLITTER = ' ò ';\n\nconst defaultFieldNames = ['hash', 'date', 'message', 'refs', 'author_name', 'author_email'];\n\nfunction lineBuilder(tokens: string[], fields: string[]): any {\n   return fields.reduce(\n      (line, field, index) => {\n         line[field] = tokens[index] || '';\n         return line;\n      },\n      Object.create({ diff: null }) as any\n   );\n}\n\nexport function createListLogSummaryParser<T = any>(\n   splitter = SPLITTER,\n   fields = defaultFieldNames,\n   logFormat = LogFormat.NONE\n) {\n   const parseDiffResult = getDiffParser(logFormat);\n\n   return function (stdOut: string): LogResult<T> {\n      const all: ReadonlyArray<T & ListLogLine> = toLinesWithContent(\n         stdOut,\n         true,\n         START_BOUNDARY\n      ).map(function (item) {\n         const lineDetail = item.trim().split(COMMIT_BOUNDARY);\n         const listLogLine: T & ListLogLine = lineBuilder(\n            lineDetail[0].trim().split(splitter),\n            fields\n         );\n\n         if (lineDetail.length > 1 && !!lineDetail[1].trim()) {\n            listLogLine.diff = parseDiffResult(lineDetail[1]);\n         }\n\n         return listLogLine;\n      });\n\n      return {\n         all,\n         latest: (all.length && all[0]) || null,\n         total: all.length,\n      };\n   };\n}\n","import { StringTask } from '../types';\nimport { DiffResult } from '../../../typings';\nimport { isLogFormat, LogFormat, logFormatFromCommand } from '../args/log-format';\nimport { getDiffParser } from '../parsers/parse-diff-summary';\nimport { configurationErrorTask, EmptyTask } from './task';\n\nexport function diffSummaryTask(customArgs: string[]): StringTask<DiffResult> | EmptyTask {\n   let logFormat = logFormatFromCommand(customArgs);\n\n   const commands = ['diff'];\n\n   if (logFormat === LogFormat.NONE) {\n      logFormat = LogFormat.STAT;\n      commands.push('--stat=4096');\n   }\n\n   commands.push(...customArgs);\n\n   return (\n      validateLogFormatConfig(commands) || {\n         commands,\n         format: 'utf-8',\n         parser: getDiffParser(logFormat),\n      }\n   );\n}\n\nexport function validateLogFormatConfig(customArgs: unknown[]): EmptyTask | void {\n   const flags = customArgs.filter(isLogFormat);\n\n   if (flags.length > 1) {\n      return configurationErrorTask(\n         `Summary flags are mutually exclusive - pick one of ${flags.join(',')}`\n      );\n   }\n\n   if (flags.length && customArgs.includes('-z')) {\n      return configurationErrorTask(\n         `Summary flag ${flags} parsing is not compatible with null termination option '-z'`\n      );\n   }\n}\n","import type { Options, StringTask } from '../types';\nimport type { LogResult, SimpleGit } from '../../../typings';\nimport { logFormatFromCommand } from '../args/log-format';\nimport { pathspec } from '../args/pathspec';\nimport {\n   COMMIT_BOUNDARY,\n   createListLogSummaryParser,\n   SPLITTER,\n   START_BOUNDARY,\n} from '../parsers/parse-list-log-summary';\nimport {\n   appendTaskOptions,\n   filterArray,\n   filterPrimitives,\n   filterString,\n   filterType,\n   trailingFunctionArgument,\n   trailingOptionsArgument,\n} from '../utils';\nimport { SimpleGitApi } from '../simple-git-api';\nimport { configurationErrorTask } from './task';\nimport { validateLogFormatConfig } from './diff';\n\nenum excludeOptions {\n   '--pretty',\n   'max-count',\n   'maxCount',\n   'n',\n   'file',\n   'format',\n   'from',\n   'to',\n   'splitter',\n   'symmetric',\n   'mailMap',\n   'multiLine',\n   'strictDate',\n}\n\nexport interface DefaultLogFields {\n   hash: string;\n   date: string;\n   message: string;\n   refs: string;\n   body: string;\n   author_name: string;\n   author_email: string;\n}\n\nexport type LogOptions<T = DefaultLogFields> = {\n   file?: string;\n   format?: T;\n   from?: string;\n   mailMap?: boolean;\n   maxCount?: number;\n   multiLine?: boolean;\n   splitter?: string;\n   strictDate?: boolean;\n   symmetric?: boolean;\n   to?: string;\n};\n\ninterface ParsedLogOptions {\n   fields: string[];\n   splitter: string;\n   commands: string[];\n}\n\nfunction prettyFormat(\n   format: Record<string, string | unknown>,\n   splitter: string\n): [string[], string] {\n   const fields: string[] = [];\n   const formatStr: string[] = [];\n\n   Object.keys(format).forEach((field) => {\n      fields.push(field);\n      formatStr.push(String(format[field]));\n   });\n\n   return [fields, formatStr.join(splitter)];\n}\n\nfunction userOptions<T extends Options>(input: T): Options {\n   return Object.keys(input).reduce((out, key) => {\n      if (!(key in excludeOptions)) {\n         out[key] = input[key];\n      }\n      return out;\n   }, {} as Options);\n}\n\nexport function parseLogOptions<T extends Options>(\n   opt: Options | LogOptions<T> = {},\n   customArgs: string[] = []\n): ParsedLogOptions {\n   const splitter = filterType(opt.splitter, filterString, SPLITTER);\n   const format =\n      !filterPrimitives(opt.format) && opt.format\n         ? opt.format\n         : {\n              hash: '%H',\n              date: opt.strictDate === false ? '%ai' : '%aI',\n              message: '%s',\n              refs: '%D',\n              body: opt.multiLine ? '%B' : '%b',\n              author_name: opt.mailMap !== false ? '%aN' : '%an',\n              author_email: opt.mailMap !== false ? '%aE' : '%ae',\n           };\n\n   const [fields, formatStr] = prettyFormat(format, splitter);\n\n   const suffix: string[] = [];\n   const command: string[] = [\n      `--pretty=format:${START_BOUNDARY}${formatStr}${COMMIT_BOUNDARY}`,\n      ...customArgs,\n   ];\n\n   const maxCount: number | undefined = (opt as any).n || (opt as any)['max-count'] || opt.maxCount;\n   if (maxCount) {\n      command.push(`--max-count=${maxCount}`);\n   }\n\n   if (opt.from || opt.to) {\n      const rangeOperator = opt.symmetric !== false ? '...' : '..';\n      suffix.push(`${opt.from || ''}${rangeOperator}${opt.to || ''}`);\n   }\n\n   if (filterString(opt.file)) {\n      command.push('--follow', pathspec(opt.file));\n   }\n\n   appendTaskOptions(userOptions(opt as Options), command);\n\n   return {\n      fields,\n      splitter,\n      commands: [...command, ...suffix],\n   };\n}\n\nexport function logTask<T>(\n   splitter: string,\n   fields: string[],\n   customArgs: string[]\n): StringTask<LogResult<T>> {\n   const parser = createListLogSummaryParser(splitter, fields, logFormatFromCommand(customArgs));\n\n   return {\n      commands: ['log', ...customArgs],\n      format: 'utf-8',\n      parser,\n   };\n}\n\nexport default function (): Pick<SimpleGit, 'log'> {\n   return {\n      log<T extends Options>(this: SimpleGitApi, ...rest: unknown[]) {\n         const next = trailingFunctionArgument(arguments);\n         const options = parseLogOptions<T>(\n            trailingOptionsArgument(arguments),\n            filterType(arguments[0], filterArray)\n         );\n         const task =\n            rejectDeprecatedSignatures(...rest) ||\n            validateLogFormatConfig(options.commands) ||\n            createLogTask(options);\n\n         return this._runTask(task, next);\n      },\n   };\n\n   function createLogTask(options: ParsedLogOptions) {\n      return logTask(options.splitter, options.fields, options.commands);\n   }\n\n   function rejectDeprecatedSignatures(from?: unknown, to?: unknown) {\n      return (\n         filterString(from) &&\n         filterString(to) &&\n         configurationErrorTask(\n            `git.log(string, string) should be replaced with git.log({ from: string, to: string })`\n         )\n      );\n   }\n}\n","import {\n   MergeConflict,\n   MergeConflictDeletion,\n   MergeDetail,\n   MergeResultStatus,\n} from '../../../typings';\n\nexport class MergeSummaryConflict implements MergeConflict {\n   constructor(\n      public readonly reason: string,\n      public readonly file: string | null = null,\n      public readonly meta?: MergeConflictDeletion\n   ) {}\n\n   toString() {\n      return `${this.file}:${this.reason}`;\n   }\n}\n\nexport class MergeSummaryDetail implements MergeDetail {\n   public conflicts: MergeConflict[] = [];\n   public merges: string[] = [];\n   public result: MergeResultStatus = 'success';\n\n   get failed() {\n      return this.conflicts.length > 0;\n   }\n\n   get reason() {\n      return this.result;\n   }\n\n   toString() {\n      if (this.conflicts.length) {\n         return `CONFLICTS: ${this.conflicts.join(', ')}`;\n      }\n\n      return 'OK';\n   }\n}\n","import {\n   PullDetailFileChanges,\n   PullDetailSummary,\n   PullFailedResult,\n   PullResult,\n} from '../../../typings';\n\nexport class PullSummary implements PullResult {\n   public remoteMessages = {\n      all: [],\n   };\n   public created = [];\n   public deleted: string[] = [];\n   public files: string[] = [];\n   public deletions: PullDetailFileChanges = {};\n   public insertions: PullDetailFileChanges = {};\n   public summary: PullDetailSummary = {\n      changes: 0,\n      deletions: 0,\n      insertions: 0,\n   };\n}\n\nexport class PullFailedSummary implements PullFailedResult {\n   remote = '';\n   hash = {\n      local: '',\n      remote: '',\n   };\n   branch = {\n      local: '',\n      remote: '',\n   };\n   message = '';\n\n   toString() {\n      return this.message;\n   }\n}\n","import {\n   RemoteMessageResult,\n   RemoteMessages,\n   RemoteMessagesObjectEnumeration,\n} from '../../../typings';\nimport { asNumber, RemoteLineParser } from '../utils';\n\nfunction objectEnumerationResult<T extends RemoteMessages = RemoteMessages>(\n   remoteMessages: T\n): RemoteMessagesObjectEnumeration {\n   return (remoteMessages.objects = remoteMessages.objects || {\n      compressing: 0,\n      counting: 0,\n      enumerating: 0,\n      packReused: 0,\n      reused: { count: 0, delta: 0 },\n      total: { count: 0, delta: 0 },\n   });\n}\n\nfunction asObjectCount(source: string) {\n   const count = /^\\s*(\\d+)/.exec(source);\n   const delta = /delta (\\d+)/i.exec(source);\n\n   return {\n      count: asNumber((count && count[1]) || '0'),\n      delta: asNumber((delta && delta[1]) || '0'),\n   };\n}\n\nexport const remoteMessagesObjectParsers: RemoteLineParser<RemoteMessageResult<RemoteMessages>>[] =\n   [\n      new RemoteLineParser(\n         /^remote:\\s*(enumerating|counting|compressing) objects: (\\d+),/i,\n         (result, [action, count]) => {\n            const key = action.toLowerCase();\n            const enumeration = objectEnumerationResult(result.remoteMessages);\n\n            Object.assign(enumeration, { [key]: asNumber(count) });\n         }\n      ),\n      new RemoteLineParser(\n         /^remote:\\s*(enumerating|counting|compressing) objects: \\d+% \\(\\d+\\/(\\d+)\\),/i,\n         (result, [action, count]) => {\n            const key = action.toLowerCase();\n            const enumeration = objectEnumerationResult(result.remoteMessages);\n\n            Object.assign(enumeration, { [key]: asNumber(count) });\n         }\n      ),\n      new RemoteLineParser(\n         /total ([^,]+), reused ([^,]+), pack-reused (\\d+)/i,\n         (result, [total, reused, packReused]) => {\n            const objects = objectEnumerationResult(result.remoteMessages);\n            objects.total = asObjectCount(total);\n            objects.reused = asObjectCount(reused);\n            objects.packReused = asNumber(packReused);\n         }\n      ),\n   ];\n","import { PushResultRemoteMessages, RemoteMessageResult, RemoteMessages } from '../../../typings';\nimport { asNumber, parseStringResponse, RemoteLineParser } from '../utils';\nimport { remoteMessagesObjectParsers } from './parse-remote-objects';\n\nconst parsers: RemoteLineParser<RemoteMessageResult<PushResultRemoteMessages | RemoteMessages>>[] =\n   [\n      new RemoteLineParser(/^remote:\\s*(.+)$/, (result, [text]) => {\n         result.remoteMessages.all.push(text.trim());\n         return false;\n      }),\n      ...remoteMessagesObjectParsers,\n      new RemoteLineParser(\n         [/create a (?:pull|merge) request/i, /\\s(https?:\\/\\/\\S+)$/],\n         (result, [pullRequestUrl]) => {\n            (result.remoteMessages as PushResultRemoteMessages).pullRequestUrl = pullRequestUrl;\n         }\n      ),\n      new RemoteLineParser(\n         [/found (\\d+) vulnerabilities.+\\(([^)]+)\\)/i, /\\s(https?:\\/\\/\\S+)$/],\n         (result, [count, summary, url]) => {\n            (result.remoteMessages as PushResultRemoteMessages).vulnerabilities = {\n               count: asNumber(count),\n               summary,\n               url,\n            };\n         }\n      ),\n   ];\n\nexport function parseRemoteMessages<T extends RemoteMessages = RemoteMessages>(\n   _stdOut: string,\n   stdErr: string\n): RemoteMessageResult {\n   return parseStringResponse({ remoteMessages: new RemoteMessageSummary() as T }, parsers, stdErr);\n}\n\nexport class RemoteMessageSummary implements RemoteMessages {\n   public readonly all: string[] = [];\n}\n","import { PullDetail, PullFailedResult, PullResult, RemoteMessages } from '../../../typings';\nimport { PullFailedSummary, PullSummary } from '../responses/PullSummary';\nimport { TaskParser } from '../types';\nimport { append, LineParser, parseStringResponse } from '../utils';\nimport { parseRemoteMessages } from './parse-remote-messages';\n\nconst FILE_UPDATE_REGEX = /^\\s*(.+?)\\s+\\|\\s+\\d+\\s*(\\+*)(-*)/;\nconst SUMMARY_REGEX = /(\\d+)\\D+((\\d+)\\D+\\(\\+\\))?(\\D+(\\d+)\\D+\\(-\\))?/;\nconst ACTION_REGEX = /^(create|delete) mode \\d+ (.+)/;\n\nconst parsers: LineParser<PullResult>[] = [\n   new LineParser(FILE_UPDATE_REGEX, (result, [file, insertions, deletions]) => {\n      result.files.push(file);\n\n      if (insertions) {\n         result.insertions[file] = insertions.length;\n      }\n\n      if (deletions) {\n         result.deletions[file] = deletions.length;\n      }\n   }),\n   new LineParser(SUMMARY_REGEX, (result, [changes, , insertions, , deletions]) => {\n      if (insertions !== undefined || deletions !== undefined) {\n         result.summary.changes = +changes || 0;\n         result.summary.insertions = +insertions || 0;\n         result.summary.deletions = +deletions || 0;\n         return true;\n      }\n      return false;\n   }),\n   new LineParser(ACTION_REGEX, (result, [action, file]) => {\n      append(result.files, file);\n      append(action === 'create' ? result.created : result.deleted, file);\n   }),\n];\n\nconst errorParsers: LineParser<PullFailedResult>[] = [\n   new LineParser(/^from\\s(.+)$/i, (result, [remote]) => void (result.remote = remote)),\n   new LineParser(/^fatal:\\s(.+)$/, (result, [message]) => void (result.message = message)),\n   new LineParser(\n      /([a-z0-9]+)\\.\\.([a-z0-9]+)\\s+(\\S+)\\s+->\\s+(\\S+)$/,\n      (result, [hashLocal, hashRemote, branchLocal, branchRemote]) => {\n         result.branch.local = branchLocal;\n         result.hash.local = hashLocal;\n         result.branch.remote = branchRemote;\n         result.hash.remote = hashRemote;\n      }\n   ),\n];\n\nexport const parsePullDetail: TaskParser<string, PullDetail> = (stdOut, stdErr) => {\n   return parseStringResponse(new PullSummary(), parsers, [stdOut, stdErr]);\n};\n\nexport const parsePullResult: TaskParser<string, PullResult> = (stdOut, stdErr) => {\n   return Object.assign(\n      new PullSummary(),\n      parsePullDetail(stdOut, stdErr),\n      parseRemoteMessages<RemoteMessages>(stdOut, stdErr)\n   );\n};\n\nexport function parsePullErrorResult(stdOut: string, stdErr: string) {\n   const pullError = parseStringResponse(new PullFailedSummary(), errorParsers, [stdOut, stdErr]);\n\n   return pullError.message && pullError;\n}\n","import { MergeDetail, MergeResult } from '../../../typings';\nimport { MergeSummaryConflict, MergeSummaryDetail } from '../responses/MergeSummary';\nimport { TaskParser } from '../types';\nimport { LineParser, parseStringResponse } from '../utils';\nimport { parsePullResult } from './parse-pull';\n\nconst parsers: LineParser<MergeDetail>[] = [\n   new LineParser(/^Auto-merging\\s+(.+)$/, (summary, [autoMerge]) => {\n      summary.merges.push(autoMerge);\n   }),\n   new LineParser(/^CONFLICT\\s+\\((.+)\\): Merge conflict in (.+)$/, (summary, [reason, file]) => {\n      summary.conflicts.push(new MergeSummaryConflict(reason, file));\n   }),\n   new LineParser(\n      /^CONFLICT\\s+\\((.+\\/delete)\\): (.+) deleted in (.+) and/,\n      (summary, [reason, file, deleteRef]) => {\n         summary.conflicts.push(new MergeSummaryConflict(reason, file, { deleteRef }));\n      }\n   ),\n   new LineParser(/^CONFLICT\\s+\\((.+)\\):/, (summary, [reason]) => {\n      summary.conflicts.push(new MergeSummaryConflict(reason, null));\n   }),\n   new LineParser(/^Automatic merge failed;\\s+(.+)$/, (summary, [result]) => {\n      summary.result = result;\n   }),\n];\n\n/**\n * Parse the complete response from `git.merge`\n */\nexport const parseMergeResult: TaskParser<string, MergeResult> = (stdOut, stdErr) => {\n   return Object.assign(parseMergeDetail(stdOut, stdErr), parsePullResult(stdOut, stdErr));\n};\n\n/**\n * Parse the merge specific detail (ie: not the content also available in the pull detail) from `git.mnerge`\n * @param stdOut\n */\nexport const parseMergeDetail: TaskParser<string, MergeDetail> = (stdOut) => {\n   return parseStringResponse(new MergeSummaryDetail(), parsers, stdOut);\n};\n","import { MergeResult } from '../../../typings';\nimport { GitResponseError } from '../errors/git-response-error';\nimport { parseMergeResult } from '../parsers/parse-merge';\nimport { StringTask } from '../types';\nimport { configurationErrorTask, EmptyTask } from './task';\n\nexport function mergeTask(customArgs: string[]): EmptyTask | StringTask<MergeResult> {\n   if (!customArgs.length) {\n      return configurationErrorTask('Git.merge requires at least one option');\n   }\n\n   return {\n      commands: ['merge', ...customArgs],\n      format: 'utf-8',\n      parser(stdOut, stdErr): MergeResult {\n         const merge = parseMergeResult(stdOut, stdErr);\n         if (merge.failed) {\n            throw new GitResponseError(merge);\n         }\n\n         return merge;\n      },\n   };\n}\n","import {\n   PushDetail,\n   PushResult,\n   PushResultPushedItem,\n   PushResultRemoteMessages,\n} from '../../../typings';\nimport { TaskParser } from '../types';\nimport { LineParser, parseStringResponse } from '../utils';\nimport { parseRemoteMessages } from './parse-remote-messages';\n\nfunction pushResultPushedItem(local: string, remote: string, status: string): PushResultPushedItem {\n   const deleted = status.includes('deleted');\n   const tag = status.includes('tag') || /^refs\\/tags/.test(local);\n   const alreadyUpdated = !status.includes('new');\n\n   return {\n      deleted,\n      tag,\n      branch: !tag,\n      new: !alreadyUpdated,\n      alreadyUpdated,\n      local,\n      remote,\n   };\n}\n\nconst parsers: LineParser<PushDetail>[] = [\n   new LineParser(/^Pushing to (.+)$/, (result, [repo]) => {\n      result.repo = repo;\n   }),\n   new LineParser(/^updating local tracking ref '(.+)'/, (result, [local]) => {\n      result.ref = {\n         ...(result.ref || {}),\n         local,\n      };\n   }),\n   new LineParser(/^[=*-]\\s+([^:]+):(\\S+)\\s+\\[(.+)]$/, (result, [local, remote, type]) => {\n      result.pushed.push(pushResultPushedItem(local, remote, type));\n   }),\n   new LineParser(\n      /^Branch '([^']+)' set up to track remote branch '([^']+)' from '([^']+)'/,\n      (result, [local, remote, remoteName]) => {\n         result.branch = {\n            ...(result.branch || {}),\n            local,\n            remote,\n            remoteName,\n         };\n      }\n   ),\n   new LineParser(\n      /^([^:]+):(\\S+)\\s+([a-z0-9]+)\\.\\.([a-z0-9]+)$/,\n      (result, [local, remote, from, to]) => {\n         result.update = {\n            head: {\n               local,\n               remote,\n            },\n            hash: {\n               from,\n               to,\n            },\n         };\n      }\n   ),\n];\n\nexport const parsePushResult: TaskParser<string, PushResult> = (stdOut, stdErr) => {\n   const pushDetail = parsePushDetail(stdOut, stdErr);\n   const responseDetail = parseRemoteMessages<PushResultRemoteMessages>(stdOut, stdErr);\n\n   return {\n      ...pushDetail,\n      ...responseDetail,\n   };\n};\n\nexport const parsePushDetail: TaskParser<string, PushDetail> = (stdOut, stdErr) => {\n   return parseStringResponse({ pushed: [] }, parsers, [stdOut, stdErr]);\n};\n","import { PushResult } from '../../../typings';\nimport { parsePushResult as parser } from '../parsers/parse-push';\nimport { StringTask } from '../types';\nimport { append, remove } from '../utils';\n\ntype PushRef = { remote?: string; branch?: string };\n\nexport function pushTagsTask(ref: PushRef = {}, customArgs: string[]): StringTask<PushResult> {\n   append(customArgs, '--tags');\n   return pushTask(ref, customArgs);\n}\n\nexport function pushTask(ref: PushRef = {}, customArgs: string[]): StringTask<PushResult> {\n   const commands = ['push', ...customArgs];\n   if (ref.branch) {\n      commands.splice(1, 0, ref.branch);\n   }\n   if (ref.remote) {\n      commands.splice(1, 0, ref.remote);\n   }\n\n   remove(commands, '-v');\n   append(commands, '--verbose');\n   append(commands, '--porcelain');\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser,\n   };\n}\n","import { SimpleGit } from '../../../typings';\nimport { SimpleGitApi } from '../simple-git-api';\nimport { getTrailingOptions, trailingFunctionArgument } from '../utils';\nimport { straightThroughBufferTask, straightThroughStringTask } from './task';\n\nexport default function (): Pick<SimpleGit, 'showBuffer' | 'show'> {\n   return {\n      showBuffer(this: SimpleGitApi) {\n         const commands = ['show', ...getTrailingOptions(arguments, 1)];\n         if (!commands.includes('--binary')) {\n            commands.splice(1, 0, '--binary');\n         }\n\n         return this._runTask(\n            straightThroughBufferTask(commands),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      show(this: SimpleGitApi) {\n         const commands = ['show', ...getTrailingOptions(arguments, 1)];\n         return this._runTask(\n            straightThroughStringTask(commands),\n            trailingFunctionArgument(arguments)\n         );\n      },\n   };\n}\n","import { FileStatusResult } from '../../../typings';\n\nexport const fromPathRegex = /^(.+) -> (.+)$/;\n\nexport class FileStatusSummary implements FileStatusResult {\n   public readonly from: string | undefined;\n\n   constructor(\n      public path: string,\n      public index: string,\n      public working_dir: string\n   ) {\n      if ('R' === index + working_dir) {\n         const detail = fromPathRegex.exec(path) || [null, path, path];\n         this.from = detail[1] || '';\n         this.path = detail[2] || '';\n      }\n   }\n}\n","import { StatusResult } from '../../../typings';\nimport { append, NULL } from '../utils';\nimport { FileStatusSummary } from './FileStatusSummary';\n\ntype StatusLineParser = (result: StatusResult, file: string) => void;\n\nexport class StatusSummary implements StatusResult {\n   public not_added = [];\n   public conflicted = [];\n   public created = [];\n   public deleted = [];\n   public ignored = undefined;\n   public modified = [];\n   public renamed = [];\n   public files = [];\n   public staged = [];\n   public ahead = 0;\n   public behind = 0;\n   public current = null;\n   public tracking = null;\n   public detached = false;\n\n   public isClean = () => {\n      return !this.files.length;\n   };\n}\n\nenum PorcelainFileStatus {\n   ADDED = 'A',\n   DELETED = 'D',\n   MODIFIED = 'M',\n   RENAMED = 'R',\n   COPIED = 'C',\n   UNMERGED = 'U',\n   UNTRACKED = '?',\n   IGNORED = '!',\n   NONE = ' ',\n}\n\nfunction renamedFile(line: string) {\n   const [to, from] = line.split(NULL);\n\n   return {\n      from: from || to,\n      to,\n   };\n}\n\nfunction parser(\n   indexX: PorcelainFileStatus,\n   indexY: PorcelainFileStatus,\n   handler: StatusLineParser\n): [string, StatusLineParser] {\n   return [`${indexX}${indexY}`, handler];\n}\n\nfunction conflicts(indexX: PorcelainFileStatus, ...indexY: PorcelainFileStatus[]) {\n   return indexY.map((y) => parser(indexX, y, (result, file) => append(result.conflicted, file)));\n}\n\nconst parsers: Map<string, StatusLineParser> = new Map([\n   parser(PorcelainFileStatus.NONE, PorcelainFileStatus.ADDED, (result, file) =>\n      append(result.created, file)\n   ),\n   parser(PorcelainFileStatus.NONE, PorcelainFileStatus.DELETED, (result, file) =>\n      append(result.deleted, file)\n   ),\n   parser(PorcelainFileStatus.NONE, PorcelainFileStatus.MODIFIED, (result, file) =>\n      append(result.modified, file)\n   ),\n\n   parser(\n      PorcelainFileStatus.ADDED,\n      PorcelainFileStatus.NONE,\n      (result, file) => append(result.created, file) && append(result.staged, file)\n   ),\n   parser(\n      PorcelainFileStatus.ADDED,\n      PorcelainFileStatus.MODIFIED,\n      (result, file) =>\n         append(result.created, file) &&\n         append(result.staged, file) &&\n         append(result.modified, file)\n   ),\n\n   parser(\n      PorcelainFileStatus.DELETED,\n      PorcelainFileStatus.NONE,\n      (result, file) => append(result.deleted, file) && append(result.staged, file)\n   ),\n\n   parser(\n      PorcelainFileStatus.MODIFIED,\n      PorcelainFileStatus.NONE,\n      (result, file) => append(result.modified, file) && append(result.staged, file)\n   ),\n   parser(\n      PorcelainFileStatus.MODIFIED,\n      PorcelainFileStatus.MODIFIED,\n      (result, file) => append(result.modified, file) && append(result.staged, file)\n   ),\n\n   parser(PorcelainFileStatus.RENAMED, PorcelainFileStatus.NONE, (result, file) => {\n      append(result.renamed, renamedFile(file));\n   }),\n   parser(PorcelainFileStatus.RENAMED, PorcelainFileStatus.MODIFIED, (result, file) => {\n      const renamed = renamedFile(file);\n      append(result.renamed, renamed);\n      append(result.modified, renamed.to);\n   }),\n   parser(PorcelainFileStatus.IGNORED, PorcelainFileStatus.IGNORED, (_result, _file) => {\n      append((_result.ignored = _result.ignored || []), _file);\n   }),\n\n   parser(PorcelainFileStatus.UNTRACKED, PorcelainFileStatus.UNTRACKED, (result, file) =>\n      append(result.not_added, file)\n   ),\n\n   ...conflicts(PorcelainFileStatus.ADDED, PorcelainFileStatus.ADDED, PorcelainFileStatus.UNMERGED),\n   ...conflicts(\n      PorcelainFileStatus.DELETED,\n      PorcelainFileStatus.DELETED,\n      PorcelainFileStatus.UNMERGED\n   ),\n   ...conflicts(\n      PorcelainFileStatus.UNMERGED,\n      PorcelainFileStatus.ADDED,\n      PorcelainFileStatus.DELETED,\n      PorcelainFileStatus.UNMERGED\n   ),\n\n   [\n      '##',\n      (result, line) => {\n         const aheadReg = /ahead (\\d+)/;\n         const behindReg = /behind (\\d+)/;\n         const currentReg = /^(.+?(?=(?:\\.{3}|\\s|$)))/;\n         const trackingReg = /\\.{3}(\\S*)/;\n         const onEmptyBranchReg = /\\son\\s([\\S]+)$/;\n         let regexResult;\n\n         regexResult = aheadReg.exec(line);\n         result.ahead = (regexResult && +regexResult[1]) || 0;\n\n         regexResult = behindReg.exec(line);\n         result.behind = (regexResult && +regexResult[1]) || 0;\n\n         regexResult = currentReg.exec(line);\n         result.current = regexResult && regexResult[1];\n\n         regexResult = trackingReg.exec(line);\n         result.tracking = regexResult && regexResult[1];\n\n         regexResult = onEmptyBranchReg.exec(line);\n         result.current = (regexResult && regexResult[1]) || result.current;\n\n         result.detached = /\\(no branch\\)/.test(line);\n      },\n   ],\n]);\n\nexport const parseStatusSummary = function (text: string): StatusResult {\n   const lines = text.split(NULL);\n   const status = new StatusSummary();\n\n   for (let i = 0, l = lines.length; i < l; ) {\n      let line = lines[i++].trim();\n\n      if (!line) {\n         continue;\n      }\n\n      if (line.charAt(0) === PorcelainFileStatus.RENAMED) {\n         line += NULL + (lines[i++] || '');\n      }\n\n      splitLine(status, line);\n   }\n\n   return status;\n};\n\nfunction splitLine(result: StatusResult, lineStr: string) {\n   const trimmed = lineStr.trim();\n   switch (' ') {\n      case trimmed.charAt(2):\n         return data(trimmed.charAt(0), trimmed.charAt(1), trimmed.substr(3));\n      case trimmed.charAt(1):\n         return data(PorcelainFileStatus.NONE, trimmed.charAt(0), trimmed.substr(2));\n      default:\n         return;\n   }\n\n   function data(index: string, workingDir: string, path: string) {\n      const raw = `${index}${workingDir}`;\n      const handler = parsers.get(raw);\n\n      if (handler) {\n         handler(result, path);\n      }\n\n      if (raw !== '##' && raw !== '!!') {\n         result.files.push(new FileStatusSummary(path.replace(/\\0.+$/, ''), index, workingDir));\n      }\n   }\n}\n","import { StatusResult } from '../../../typings';\nimport { parseStatusSummary } from '../responses/StatusSummary';\nimport { StringTask } from '../types';\n\nconst ignoredOptions = ['--null', '-z'];\n\nexport function statusTask(customArgs: string[]): StringTask<StatusResult> {\n   const commands = [\n      'status',\n      '--porcelain',\n      '-b',\n      '-u',\n      '--null',\n      ...customArgs.filter((arg) => !ignoredOptions.includes(arg)),\n   ];\n\n   return {\n      format: 'utf-8',\n      commands,\n      parser(text: string) {\n         return parseStatusSummary(text);\n      },\n   };\n}\n","import type { SimpleGitApi } from '../simple-git-api';\nimport type { SimpleGit } from '../../../typings';\nimport { asNumber, ExitCodes, LineParser, parseStringResponse } from '../utils';\n\nexport interface VersionResult {\n   major: number;\n   minor: number;\n   patch: number | string;\n   agent: string;\n   installed: boolean;\n}\n\nconst NOT_INSTALLED = 'installed=false';\n\nfunction versionResponse(\n   major = 0,\n   minor = 0,\n   patch: string | number = 0,\n   agent = '',\n   installed = true\n): VersionResult {\n   return Object.defineProperty(\n      {\n         major,\n         minor,\n         patch,\n         agent,\n         installed,\n      },\n      'toString',\n      {\n         value() {\n            return `${this.major}.${this.minor}.${this.patch}`;\n         },\n         configurable: false,\n         enumerable: false,\n      }\n   );\n}\n\nfunction notInstalledResponse() {\n   return versionResponse(0, 0, 0, '', false);\n}\n\nexport default function (): Pick<SimpleGit, 'version'> {\n   return {\n      version(this: SimpleGitApi) {\n         return this._runTask({\n            commands: ['--version'],\n            format: 'utf-8',\n            parser: versionParser,\n            onError(result, error, done, fail) {\n               if (result.exitCode === ExitCodes.NOT_FOUND) {\n                  return done(Buffer.from(NOT_INSTALLED));\n               }\n\n               fail(error);\n            },\n         });\n      },\n   };\n}\n\nconst parsers: LineParser<VersionResult>[] = [\n   new LineParser(\n      /version (\\d+)\\.(\\d+)\\.(\\d+)(?:\\s*\\((.+)\\))?/,\n      (result, [major, minor, patch, agent = '']) => {\n         Object.assign(\n            result,\n            versionResponse(asNumber(major), asNumber(minor), asNumber(patch), agent)\n         );\n      }\n   ),\n   new LineParser(\n      /version (\\d+)\\.(\\d+)\\.(\\D+)(.+)?$/,\n      (result, [major, minor, patch, agent = '']) => {\n         Object.assign(result, versionResponse(asNumber(major), asNumber(minor), patch, agent));\n      }\n   ),\n];\n\nfunction versionParser(stdOut: string) {\n   if (stdOut === NOT_INSTALLED) {\n      return notInstalledResponse();\n   }\n\n   return parseStringResponse(versionResponse(0, 0, 0, stdOut), parsers, stdOut);\n}\n","import { SimpleGitBase } from '../../typings';\nimport { taskCallback } from './task-callback';\nimport { changeWorkingDirectoryTask } from './tasks/change-working-directory';\nimport checkout from './tasks/checkout';\nimport commit from './tasks/commit';\nimport config from './tasks/config';\nimport grep from './tasks/grep';\nimport { hashObjectTask } from './tasks/hash-object';\nimport { initTask } from './tasks/init';\nimport log from './tasks/log';\nimport { mergeTask } from './tasks/merge';\nimport { pushTask } from './tasks/push';\nimport show from './tasks/show';\nimport { statusTask } from './tasks/status';\nimport { configurationErrorTask, straightThroughStringTask } from './tasks/task';\nimport version from './tasks/version';\nimport { outputHandler, SimpleGitExecutor, SimpleGitTask, SimpleGitTaskCallback } from './types';\nimport {\n   asArray,\n   filterString,\n   filterType,\n   getTrailingOptions,\n   trailingFunctionArgument,\n} from './utils';\n\nexport class SimpleGitApi implements SimpleGitBase {\n   constructor(private _executor: SimpleGitExecutor) {}\n\n   protected _runTask<T>(task: SimpleGitTask<T>, then?: SimpleGitTaskCallback<T>) {\n      const chain = this._executor.chain();\n      const promise = chain.push(task);\n\n      if (then) {\n         taskCallback(task, promise, then);\n      }\n\n      return Object.create(this, {\n         then: { value: promise.then.bind(promise) },\n         catch: { value: promise.catch.bind(promise) },\n         _executor: { value: chain },\n      });\n   }\n\n   add(files: string | string[]) {\n      return this._runTask(\n         straightThroughStringTask(['add', ...asArray(files)]),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   cwd(directory: string | { path: string; root?: boolean }) {\n      const next = trailingFunctionArgument(arguments);\n\n      if (typeof directory === 'string') {\n         return this._runTask(changeWorkingDirectoryTask(directory, this._executor), next);\n      }\n\n      if (typeof directory?.path === 'string') {\n         return this._runTask(\n            changeWorkingDirectoryTask(\n               directory.path,\n               (directory.root && this._executor) || undefined\n            ),\n            next\n         );\n      }\n\n      return this._runTask(\n         configurationErrorTask('Git.cwd: workingDirectory must be supplied as a string'),\n         next\n      );\n   }\n\n   hashObject(path: string, write: boolean | unknown) {\n      return this._runTask(\n         hashObjectTask(path, write === true),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   init(bare?: boolean | unknown) {\n      return this._runTask(\n         initTask(bare === true, this._executor.cwd, getTrailingOptions(arguments)),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   merge() {\n      return this._runTask(\n         mergeTask(getTrailingOptions(arguments)),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   mergeFromTo(remote: string, branch: string) {\n      if (!(filterString(remote) && filterString(branch))) {\n         return this._runTask(\n            configurationErrorTask(\n               `Git.mergeFromTo requires that the 'remote' and 'branch' arguments are supplied as strings`\n            )\n         );\n      }\n\n      return this._runTask(\n         mergeTask([remote, branch, ...getTrailingOptions(arguments)]),\n         trailingFunctionArgument(arguments, false)\n      );\n   }\n\n   outputHandler(handler: outputHandler) {\n      this._executor.outputHandler = handler;\n      return this;\n   }\n\n   push() {\n      const task = pushTask(\n         {\n            remote: filterType(arguments[0], filterString),\n            branch: filterType(arguments[1], filterString),\n         },\n         getTrailingOptions(arguments)\n      );\n\n      return this._runTask(task, trailingFunctionArgument(arguments));\n   }\n\n   stash() {\n      return this._runTask(\n         straightThroughStringTask(['stash', ...getTrailingOptions(arguments)]),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   status() {\n      return this._runTask(\n         statusTask(getTrailingOptions(arguments)),\n         trailingFunctionArgument(arguments)\n      );\n   }\n}\n\nObject.assign(\n   SimpleGitApi.prototype,\n   checkout(),\n   commit(),\n   config(),\n   grep(),\n   log(),\n   show(),\n   version()\n);\n","import { straightThroughStringTask } from './task';\nimport { OptionFlags, Options, StringTask } from '../types';\n\nexport type ApplyOptions = Options &\n   OptionFlags<\n      | '--stat'\n      | '--numstat'\n      | '--summary'\n      | '--check'\n      | '--index'\n      | '--intent-to-add'\n      | '--3way'\n      | '--apply'\n      | '--no-add'\n      | '-R'\n      | '--reverse'\n      | '--allow-binary-replacement'\n      | '--binary'\n      | '--reject'\n      | '-z'\n      | '--inaccurate-eof'\n      | '--recount'\n      | '--cached'\n      | '--ignore-space-change'\n      | '--ignore-whitespace'\n      | '--verbose'\n      | '--unsafe-paths'\n   > &\n   OptionFlags<'--whitespace', 'nowarn' | 'warn' | 'fix' | 'error' | 'error-all'> &\n   OptionFlags<'--build-fake-ancestor' | '--exclude' | '--include' | '--directory', string> &\n   OptionFlags<'-p' | '-C', number>;\n\nexport function applyPatchTask(patches: string[], customArgs: string[]): StringTask<string> {\n   return straightThroughStringTask(['apply', ...customArgs, ...patches]);\n}\n","import {\n   BranchMultiDeleteResult,\n   BranchSingleDeleteFailure,\n   BranchSingleDeleteResult,\n   BranchSingleDeleteSuccess,\n} from '../../../typings';\n\nexport class BranchDeletionBatch implements BranchMultiDeleteResult {\n   all: BranchSingleDeleteResult[] = [];\n   branches: { [branchName: string]: BranchSingleDeleteResult } = {};\n   errors: BranchSingleDeleteResult[] = [];\n\n   get success(): boolean {\n      return !this.errors.length;\n   }\n}\n\nexport function branchDeletionSuccess(branch: string, hash: string): BranchSingleDeleteSuccess {\n   return {\n      branch,\n      hash,\n      success: true,\n   };\n}\n\nexport function branchDeletionFailure(branch: string): BranchSingleDeleteFailure {\n   return {\n      branch,\n      hash: null,\n      success: false,\n   };\n}\n\nexport function isSingleBranchDeleteFailure(\n   test: BranchSingleDeleteResult\n): test is BranchSingleDeleteSuccess {\n   return test.success;\n}\n","import { BranchMultiDeleteResult } from '../../../typings';\nimport {\n   BranchDeletionBatch,\n   branchDeletionFailure,\n   branchDeletionSuccess,\n} from '../responses/BranchDeleteSummary';\nimport { TaskParser } from '../types';\nimport { ExitCodes, LineParser, parseStringResponse } from '../utils';\n\nconst deleteSuccessRegex = /(\\S+)\\s+\\(\\S+\\s([^)]+)\\)/;\nconst deleteErrorRegex = /^error[^']+'([^']+)'/m;\n\nconst parsers: LineParser<BranchMultiDeleteResult>[] = [\n   new LineParser(deleteSuccessRegex, (result, [branch, hash]) => {\n      const deletion = branchDeletionSuccess(branch, hash);\n\n      result.all.push(deletion);\n      result.branches[branch] = deletion;\n   }),\n   new LineParser(deleteErrorRegex, (result, [branch]) => {\n      const deletion = branchDeletionFailure(branch);\n\n      result.errors.push(deletion);\n      result.all.push(deletion);\n      result.branches[branch] = deletion;\n   }),\n];\n\nexport const parseBranchDeletions: TaskParser<string, BranchMultiDeleteResult> = (\n   stdOut,\n   stdErr\n) => {\n   return parseStringResponse(new BranchDeletionBatch(), parsers, [stdOut, stdErr]);\n};\n\nexport function hasBranchDeletionError(data: string, processExitCode: ExitCodes): boolean {\n   return processExitCode === ExitCodes.ERROR && deleteErrorRegex.test(data);\n}\n","import type { BranchSummary, BranchSummaryBranch } from '../../../typings';\n\nexport enum BranchStatusIdentifier {\n   CURRENT = '*',\n   LINKED = '+',\n}\n\nexport class BranchSummaryResult implements BranchSummary {\n   public all: string[] = [];\n   public branches: { [p: string]: BranchSummaryBranch } = {};\n   public current: string = '';\n   public detached: boolean = false;\n\n   push(\n      status: BranchStatusIdentifier | unknown,\n      detached: boolean,\n      name: string,\n      commit: string,\n      label: string\n   ) {\n      if (status === BranchStatusIdentifier.CURRENT) {\n         this.detached = detached;\n         this.current = name;\n      }\n\n      this.all.push(name);\n      this.branches[name] = {\n         current: status === BranchStatusIdentifier.CURRENT,\n         linkedWorkTree: status === BranchStatusIdentifier.LINKED,\n         name,\n         commit,\n         label,\n      };\n   }\n}\n","import type { BranchSummary } from '../../../typings';\nimport { BranchSummaryResult } from '../responses/BranchSummary';\nimport { LineParser, parseStringResponse } from '../utils';\n\nconst parsers: LineParser<BranchSummaryResult>[] = [\n   new LineParser(\n      /^([*+]\\s)?\\((?:HEAD )?detached (?:from|at) (\\S+)\\)\\s+([a-z0-9]+)\\s(.*)$/,\n      (result, [current, name, commit, label]) => {\n         result.push(branchStatus(current), true, name, commit, label);\n      }\n   ),\n   new LineParser(\n      /^([*+]\\s)?(\\S+)\\s+([a-z0-9]+)\\s?(.*)$/s,\n      (result, [current, name, commit, label]) => {\n         result.push(branchStatus(current), false, name, commit, label);\n      }\n   ),\n];\n\nfunction branchStatus(input?: string) {\n   return input ? input.charAt(0) : '';\n}\n\nexport function parseBranchSummary(stdOut: string): BranchSummary {\n   return parseStringResponse(new BranchSummaryResult(), parsers, stdOut);\n}\n","import { BranchMultiDeleteResult, BranchSingleDeleteResult, BranchSummary } from '../../../typings';\nimport { StringTask } from '../types';\nimport { GitResponseError } from '../errors/git-response-error';\nimport { hasBranchDeletionError, parseBranchDeletions } from '../parsers/parse-branch-delete';\nimport { parseBranchSummary } from '../parsers/parse-branch';\nimport { bufferToString } from '../utils';\n\nexport function containsDeleteBranchCommand(commands: string[]) {\n   const deleteCommands = ['-d', '-D', '--delete'];\n   return commands.some((command) => deleteCommands.includes(command));\n}\n\nexport function branchTask(\n   customArgs: string[]\n): StringTask<BranchSummary | BranchSingleDeleteResult> {\n   const isDelete = containsDeleteBranchCommand(customArgs);\n   const commands = ['branch', ...customArgs];\n\n   if (commands.length === 1) {\n      commands.push('-a');\n   }\n\n   if (!commands.includes('-v')) {\n      commands.splice(1, 0, '-v');\n   }\n\n   return {\n      format: 'utf-8',\n      commands,\n      parser(stdOut, stdErr) {\n         if (isDelete) {\n            return parseBranchDeletions(stdOut, stdErr).all[0];\n         }\n\n         return parseBranchSummary(stdOut);\n      },\n   };\n}\n\nexport function branchLocalTask(): StringTask<BranchSummary> {\n   const parser = parseBranchSummary;\n\n   return {\n      format: 'utf-8',\n      commands: ['branch', '-v'],\n      parser,\n   };\n}\n\nexport function deleteBranchesTask(\n   branches: string[],\n   forceDelete = false\n): StringTask<BranchMultiDeleteResult> {\n   return {\n      format: 'utf-8',\n      commands: ['branch', '-v', forceDelete ? '-D' : '-d', ...branches],\n      parser(stdOut, stdErr) {\n         return parseBranchDeletions(stdOut, stdErr);\n      },\n      onError({ exitCode, stdOut }, error, done, fail) {\n         if (!hasBranchDeletionError(String(error), exitCode)) {\n            return fail(error);\n         }\n\n         done(stdOut);\n      },\n   };\n}\n\nexport function deleteBranchTask(\n   branch: string,\n   forceDelete = false\n): StringTask<BranchSingleDeleteResult> {\n   const task: StringTask<BranchSingleDeleteResult> = {\n      format: 'utf-8',\n      commands: ['branch', '-v', forceDelete ? '-D' : '-d', branch],\n      parser(stdOut, stdErr) {\n         return parseBranchDeletions(stdOut, stdErr).branches[branch]!;\n      },\n      onError({ exitCode, stdErr, stdOut }, error, _, fail) {\n         if (!hasBranchDeletionError(String(error), exitCode)) {\n            return fail(error);\n         }\n\n         throw new GitResponseError(\n            task.parser(bufferToString(stdOut), bufferToString(stdErr)),\n            String(error)\n         );\n      },\n   };\n\n   return task;\n}\n","/**\n * Parser for the `check-ignore` command - returns each file as a string array\n */\nexport const parseCheckIgnore = (text: string): string[] => {\n   return text\n      .split(/\\n/g)\n      .map((line) => line.trim())\n      .filter((file) => !!file);\n};\n","import { StringTask } from '../types';\nimport { parseCheckIgnore } from '../responses/CheckIgnore';\n\nexport function checkIgnoreTask(paths: string[]): StringTask<string[]> {\n   return {\n      commands: ['check-ignore', ...paths],\n      format: 'utf-8',\n      parser: parseCheckIgnore,\n   };\n}\n","import { configurationErrorTask, EmptyTask, straightThroughStringTask } from './task';\nimport { OptionFlags, Options, StringTask } from '../types';\nimport { append, filterString } from '../utils';\n\nexport type CloneOptions = Options &\n   OptionFlags<\n      | '--bare'\n      | '--dissociate'\n      | '--mirror'\n      | '--no-checkout'\n      | '--no-remote-submodules'\n      | '--no-shallow-submodules'\n      | '--no-single-branch'\n      | '--no-tags'\n      | '--remote-submodules'\n      | '--single-branch'\n      | '--shallow-submodules'\n      | '--verbose'\n   > &\n   OptionFlags<'--depth' | '-j' | '--jobs', number> &\n   OptionFlags<\n      | '--branch'\n      | '--origin'\n      | '--recurse-submodules'\n      | '--separate-git-dir'\n      | '--shallow-exclude'\n      | '--shallow-since'\n      | '--template',\n      string\n   >;\n\nfunction disallowedCommand(command: string) {\n   return /^--upload-pack(=|$)/.test(command);\n}\n\nexport function cloneTask(\n   repo: string | undefined,\n   directory: string | undefined,\n   customArgs: string[]\n): StringTask<string> | EmptyTask {\n   const commands = ['clone', ...customArgs];\n\n   filterString(repo) && commands.push(repo);\n   filterString(directory) && commands.push(directory);\n\n   const banned = commands.find(disallowedCommand);\n   if (banned) {\n      return configurationErrorTask(`git.fetch: potential exploit argument blocked.`);\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport function cloneMirrorTask(\n   repo: string | undefined,\n   directory: string | undefined,\n   customArgs: string[]\n) {\n   append(customArgs, '--mirror');\n\n   return cloneTask(repo, directory, customArgs);\n}\n","import { FetchResult } from '../../../typings';\nimport { LineParser, parseStringResponse } from '../utils';\n\nconst parsers: LineParser<FetchResult>[] = [\n   new LineParser(/From (.+)$/, (result, [remote]) => {\n      result.remote = remote;\n   }),\n   new LineParser(/\\* \\[new branch]\\s+(\\S+)\\s*-> (.+)$/, (result, [name, tracking]) => {\n      result.branches.push({\n         name,\n         tracking,\n      });\n   }),\n   new LineParser(/\\* \\[new tag]\\s+(\\S+)\\s*-> (.+)$/, (result, [name, tracking]) => {\n      result.tags.push({\n         name,\n         tracking,\n      });\n   }),\n   new LineParser(/- \\[deleted]\\s+\\S+\\s*-> (.+)$/, (result, [tracking]) => {\n      result.deleted.push({\n         tracking,\n      });\n   }),\n   new LineParser(\n      /\\s*([^.]+)\\.\\.(\\S+)\\s+(\\S+)\\s*-> (.+)$/,\n      (result, [from, to, name, tracking]) => {\n         result.updated.push({\n            name,\n            tracking,\n            to,\n            from,\n         });\n      }\n   ),\n];\n\nexport function parseFetchResult(stdOut: string, stdErr: string): FetchResult {\n   const result: FetchResult = {\n      raw: stdOut,\n      remote: null,\n      branches: [],\n      tags: [],\n      updated: [],\n      deleted: [],\n   };\n   return parseStringResponse(result, parsers, [stdOut, stdErr]);\n}\n","import { FetchResult } from '../../../typings';\nimport { parseFetchResult } from '../parsers/parse-fetch';\nimport { StringTask } from '../types';\n\nimport { configurationErrorTask, EmptyTask } from './task';\n\nfunction disallowedCommand(command: string) {\n   return /^--upload-pack(=|$)/.test(command);\n}\n\nexport function fetchTask(\n   remote: string,\n   branch: string,\n   customArgs: string[]\n): StringTask<FetchResult> | EmptyTask {\n   const commands = ['fetch', ...customArgs];\n   if (remote && branch) {\n      commands.push(remote, branch);\n   }\n\n   const banned = commands.find(disallowedCommand);\n   if (banned) {\n      return configurationErrorTask(`git.fetch: potential exploit argument blocked.`);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser: parseFetchResult,\n   };\n}\n","import { MoveResult } from '../../../typings';\nimport { LineParser, parseStringResponse } from '../utils';\n\nconst parsers: LineParser<MoveResult>[] = [\n   new LineParser(/^Renaming (.+) to (.+)$/, (result, [from, to]) => {\n      result.moves.push({ from, to });\n   }),\n];\n\nexport function parseMoveResult(stdOut: string): MoveResult {\n   return parseStringResponse({ moves: [] }, parsers, stdOut);\n}\n","import { MoveResult } from '../../../typings';\nimport { parseMoveResult } from '../parsers/parse-move';\nimport { StringTask } from '../types';\nimport { asArray } from '../utils';\n\nexport function moveTask(from: string | string[], to: string): StringTask<MoveResult> {\n   return {\n      commands: ['mv', '-v', ...asArray(from), to],\n      format: 'utf-8',\n      parser: parseMoveResult,\n   };\n}\n","import { PullResult } from '../../../typings';\nimport { GitResponseError } from '../errors/git-response-error';\nimport { parsePullErrorResult, parsePullResult } from '../parsers/parse-pull';\nimport { Maybe, StringTask } from '../types';\nimport { bufferToString } from '../utils';\n\nexport function pullTask(\n   remote: Maybe<string>,\n   branch: Maybe<string>,\n   customArgs: string[]\n): StringTask<PullResult> {\n   const commands: string[] = ['pull', ...customArgs];\n   if (remote && branch) {\n      commands.splice(1, 0, remote, branch);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(stdOut, stdErr): PullResult {\n         return parsePullResult(stdOut, stdErr);\n      },\n      onError(result, _error, _done, fail) {\n         const pullError = parsePullErrorResult(\n            bufferToString(result.stdOut),\n            bufferToString(result.stdErr)\n         );\n         if (pullError) {\n            return fail(new GitResponseError(pullError));\n         }\n\n         fail(_error);\n      },\n   };\n}\n","import { forEachLineWithContent } from '../utils';\n\nexport interface RemoteWithoutRefs {\n   name: string;\n}\n\nexport interface RemoteWithRefs extends RemoteWithoutRefs {\n   refs: {\n      fetch: string;\n      push: string;\n   };\n}\n\nexport function parseGetRemotes(text: string): RemoteWithoutRefs[] {\n   const remotes: { [name: string]: RemoteWithoutRefs } = {};\n\n   forEach(text, ([name]) => (remotes[name] = { name }));\n\n   return Object.values(remotes);\n}\n\nexport function parseGetRemotesVerbose(text: string): RemoteWithRefs[] {\n   const remotes: { [name: string]: RemoteWithRefs } = {};\n\n   forEach(text, ([name, url, purpose]) => {\n      if (!remotes.hasOwnProperty(name)) {\n         remotes[name] = {\n            name: name,\n            refs: { fetch: '', push: '' },\n         };\n      }\n\n      if (purpose && url) {\n         remotes[name].refs[purpose.replace(/[^a-z]/g, '') as keyof RemoteWithRefs['refs']] = url;\n      }\n   });\n\n   return Object.values(remotes);\n}\n\nfunction forEach(text: string, handler: (line: string[]) => void) {\n   forEachLineWithContent(text, (line) => handler(line.split(/\\s+/)));\n}\n","import { parseGetRemotes, parseGetRemotesVerbose } from '../responses/GetRemoteSummary';\nimport { StringTask } from '../types';\nimport { straightThroughStringTask } from './task';\n\nexport function addRemoteTask(\n   remoteName: string,\n   remoteRepo: string,\n   customArgs: string[] = []\n): StringTask<string> {\n   return straightThroughStringTask(['remote', 'add', ...customArgs, remoteName, remoteRepo]);\n}\n\nexport function getRemotesTask(verbose: boolean): StringTask<any> {\n   const commands = ['remote'];\n   if (verbose) {\n      commands.push('-v');\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser: verbose ? parseGetRemotesVerbose : parseGetRemotes,\n   };\n}\n\nexport function listRemotesTask(customArgs: string[] = []): StringTask<string> {\n   const commands = [...customArgs];\n   if (commands[0] !== 'ls-remote') {\n      commands.unshift('ls-remote');\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport function remoteTask(customArgs: string[] = []): StringTask<string> {\n   const commands = [...customArgs];\n   if (commands[0] !== 'remote') {\n      commands.unshift('remote');\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport function removeRemoteTask(remoteName: string) {\n   return straightThroughStringTask(['remote', 'remove', remoteName]);\n}\n","import { LogOptions, LogResult } from '../../../typings';\nimport { logFormatFromCommand } from '../args/log-format';\nimport { createListLogSummaryParser } from '../parsers/parse-list-log-summary';\nimport type { StringTask } from '../types';\nimport { validateLogFormatConfig } from './diff';\nimport { parseLogOptions } from './log';\nimport type { EmptyTask } from './task';\n\nexport function stashListTask(\n   opt: LogOptions = {},\n   customArgs: string[]\n): EmptyTask | StringTask<LogResult> {\n   const options = parseLogOptions<any>(opt);\n   const commands = ['stash', 'list', ...options.commands, ...customArgs];\n   const parser = createListLogSummaryParser(\n      options.splitter,\n      options.fields,\n      logFormatFromCommand(commands)\n   );\n\n   return (\n      validateLogFormatConfig(commands) || {\n         commands,\n         format: 'utf-8',\n         parser,\n      }\n   );\n}\n","import { StringTask } from '../types';\nimport { straightThroughStringTask } from './task';\n\nexport function addSubModuleTask(repo: string, path: string): StringTask<string> {\n   return subModuleTask(['add', repo, path]);\n}\n\nexport function initSubModuleTask(customArgs: string[]): StringTask<string> {\n   return subModuleTask(['init', ...customArgs]);\n}\n\nexport function subModuleTask(customArgs: string[]): StringTask<string> {\n   const commands = [...customArgs];\n   if (commands[0] !== 'submodule') {\n      commands.unshift('submodule');\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport function updateSubModuleTask(customArgs: string[]): StringTask<string> {\n   return subModuleTask(['update', ...customArgs]);\n}\n","import { TagResult } from '../../../typings';\n\nexport class TagList implements TagResult {\n   constructor(\n      public readonly all: string[],\n      public readonly latest: string | undefined\n   ) {}\n}\n\nexport const parseTagList = function (data: string, customSort = false) {\n   const tags = data.split('\\n').map(trimmed).filter(Boolean);\n\n   if (!customSort) {\n      tags.sort(function (tagA, tagB) {\n         const partsA = tagA.split('.');\n         const partsB = tagB.split('.');\n\n         if (partsA.length === 1 || partsB.length === 1) {\n            return singleSorted(toNumber(partsA[0]), toNumber(partsB[0]));\n         }\n\n         for (let i = 0, l = Math.max(partsA.length, partsB.length); i < l; i++) {\n            const diff = sorted(toNumber(partsA[i]), toNumber(partsB[i]));\n\n            if (diff) {\n               return diff;\n            }\n         }\n\n         return 0;\n      });\n   }\n\n   const latest = customSort ? tags[0] : [...tags].reverse().find((tag) => tag.indexOf('.') >= 0);\n\n   return new TagList(tags, latest);\n};\n\nfunction singleSorted(a: number, b: number): number {\n   const aIsNum = isNaN(a);\n   const bIsNum = isNaN(b);\n\n   if (aIsNum !== bIsNum) {\n      return aIsNum ? 1 : -1;\n   }\n\n   return aIsNum ? sorted(a, b) : 0;\n}\n\nfunction sorted(a: number, b: number) {\n   return a === b ? 0 : a > b ? 1 : -1;\n}\n\nfunction trimmed(input: string) {\n   return input.trim();\n}\n\nfunction toNumber(input: string | undefined) {\n   if (typeof input === 'string') {\n      return parseInt(input.replace(/^\\D+/g, ''), 10) || 0;\n   }\n\n   return 0;\n}\n","import { TagResult } from '../../../typings';\nimport { parseTagList } from '../responses/TagList';\nimport { StringTask } from '../types';\n\n/**\n * Task used by `git.tags`\n */\nexport function tagListTask(customArgs: string[] = []): StringTask<TagResult> {\n   const hasCustomSort = customArgs.some((option) => /^--sort=/.test(option));\n\n   return {\n      format: 'utf-8',\n      commands: ['tag', '-l', ...customArgs],\n      parser(text: string) {\n         return parseTagList(text, hasCustomSort);\n      },\n   };\n}\n\n/**\n * Task used by `git.addTag`\n */\nexport function addTagTask(name: string): StringTask<{ name: string }> {\n   return {\n      format: 'utf-8',\n      commands: ['tag', name],\n      parser() {\n         return { name };\n      },\n   };\n}\n\n/**\n * Task used by `git.addTag`\n */\nexport function addAnnotatedTagTask(\n   name: string,\n   tagMessage: string\n): StringTask<{ name: string }> {\n   return {\n      format: 'utf-8',\n      commands: ['tag', '-a', '-m', tagMessage, name],\n      parser() {\n         return { name };\n      },\n   };\n}\n","const { GitExecutor } = require('./lib/runners/git-executor');\nconst { SimpleGitApi } = require('./lib/simple-git-api');\n\nconst { Scheduler } = require('./lib/runners/scheduler');\nconst { configurationErrorTask } = require('./lib/tasks/task');\nconst {\n   asArray,\n   filterArray,\n   filterPrimitives,\n   filterString,\n   filterStringOrStringArray,\n   filterType,\n   getTrailingOptions,\n   trailingFunctionArgument,\n   trailingOptionsArgument,\n} = require('./lib/utils');\nconst { applyPatchTask } = require('./lib/tasks/apply-patch');\nconst {\n   branchTask,\n   branchLocalTask,\n   deleteBranchesTask,\n   deleteBranchTask,\n} = require('./lib/tasks/branch');\nconst { checkIgnoreTask } = require('./lib/tasks/check-ignore');\nconst { checkIsRepoTask } = require('./lib/tasks/check-is-repo');\nconst { cloneTask, cloneMirrorTask } = require('./lib/tasks/clone');\nconst { cleanWithOptionsTask, isCleanOptionsArray } = require('./lib/tasks/clean');\nconst { diffSummaryTask } = require('./lib/tasks/diff');\nconst { fetchTask } = require('./lib/tasks/fetch');\nconst { moveTask } = require('./lib/tasks/move');\nconst { pullTask } = require('./lib/tasks/pull');\nconst { pushTagsTask } = require('./lib/tasks/push');\nconst {\n   addRemoteTask,\n   getRemotesTask,\n   listRemotesTask,\n   remoteTask,\n   removeRemoteTask,\n} = require('./lib/tasks/remote');\nconst { getResetMode, resetTask } = require('./lib/tasks/reset');\nconst { stashListTask } = require('./lib/tasks/stash-list');\nconst {\n   addSubModuleTask,\n   initSubModuleTask,\n   subModuleTask,\n   updateSubModuleTask,\n} = require('./lib/tasks/sub-module');\nconst { addAnnotatedTagTask, addTagTask, tagListTask } = require('./lib/tasks/tag');\nconst { straightThroughBufferTask, straightThroughStringTask } = require('./lib/tasks/task');\n\nfunction Git(options, plugins) {\n   this._executor = new GitExecutor(\n      options.binary,\n      options.baseDir,\n      new Scheduler(options.maxConcurrentProcesses),\n      plugins\n   );\n\n   this._trimmed = options.trimmed;\n}\n\n(Git.prototype = Object.create(SimpleGitApi.prototype)).constructor = Git;\n\n/**\n * Sets the path to a custom git binary, should either be `git` when there is an installation of git available on\n * the system path, or a fully qualified path to the executable.\n *\n * @param {string} command\n * @returns {Git}\n */\nGit.prototype.customBinary = function (command) {\n   this._executor.binary = command;\n   return this;\n};\n\n/**\n * Sets an environment variable for the spawned child process, either supply both a name and value as strings or\n * a single object to entirely replace the current environment variables.\n *\n * @param {string|Object} name\n * @param {string} [value]\n * @returns {Git}\n */\nGit.prototype.env = function (name, value) {\n   if (arguments.length === 1 && typeof name === 'object') {\n      this._executor.env = name;\n   } else {\n      (this._executor.env = this._executor.env || {})[name] = value;\n   }\n\n   return this;\n};\n\n/**\n * List the stash(s) of the local repo\n */\nGit.prototype.stashList = function (options) {\n   return this._runTask(\n      stashListTask(\n         trailingOptionsArgument(arguments) || {},\n         (filterArray(options) && options) || []\n      ),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nfunction createCloneTask(api, task, repoPath, localPath) {\n   if (typeof repoPath !== 'string') {\n      return configurationErrorTask(`git.${api}() requires a string 'repoPath'`);\n   }\n\n   return task(repoPath, filterType(localPath, filterString), getTrailingOptions(arguments));\n}\n\n/**\n * Clone a git repo\n */\nGit.prototype.clone = function () {\n   return this._runTask(\n      createCloneTask('clone', cloneTask, ...arguments),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Mirror a git repo\n */\nGit.prototype.mirror = function () {\n   return this._runTask(\n      createCloneTask('mirror', cloneMirrorTask, ...arguments),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Moves one or more files to a new destination.\n *\n * @see https://git-scm.com/docs/git-mv\n *\n * @param {string|string[]} from\n * @param {string} to\n */\nGit.prototype.mv = function (from, to) {\n   return this._runTask(moveTask(from, to), trailingFunctionArgument(arguments));\n};\n\n/**\n * Internally uses pull and tags to get the list of tags then checks out the latest tag.\n *\n * @param {Function} [then]\n */\nGit.prototype.checkoutLatestTag = function (then) {\n   var git = this;\n   return this.pull(function () {\n      git.tags(function (err, tags) {\n         git.checkout(tags.latest, then);\n      });\n   });\n};\n\n/**\n * Pull the updated contents of the current repo\n */\nGit.prototype.pull = function (remote, branch, options, then) {\n   return this._runTask(\n      pullTask(\n         filterType(remote, filterString),\n         filterType(branch, filterString),\n         getTrailingOptions(arguments)\n      ),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Fetch the updated contents of the current repo.\n *\n * @example\n *   .fetch('upstream', 'master') // fetches from master on remote named upstream\n *   .fetch(function () {}) // runs fetch against default remote and branch and calls function\n *\n * @param {string} [remote]\n * @param {string} [branch]\n */\nGit.prototype.fetch = function (remote, branch) {\n   return this._runTask(\n      fetchTask(\n         filterType(remote, filterString),\n         filterType(branch, filterString),\n         getTrailingOptions(arguments)\n      ),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Disables/enables the use of the console for printing warnings and errors, by default messages are not shown in\n * a production environment.\n *\n * @param {boolean} silence\n * @returns {Git}\n */\nGit.prototype.silent = function (silence) {\n   console.warn(\n      'simple-git deprecation notice: git.silent: logging should be configured using the `debug` library / `DEBUG` environment variable, this will be an error in version 3'\n   );\n   return this;\n};\n\n/**\n * List all tags. When using git 2.7.0 or above, include an options object with `\"--sort\": \"property-name\"` to\n * sort the tags by that property instead of using the default semantic versioning sort.\n *\n * Note, supplying this option when it is not supported by your Git version will cause the operation to fail.\n *\n * @param {Object} [options]\n * @param {Function} [then]\n */\nGit.prototype.tags = function (options, then) {\n   return this._runTask(\n      tagListTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Rebases the current working copy. Options can be supplied either as an array of string parameters\n * to be sent to the `git rebase` command, or a standard options object.\n */\nGit.prototype.rebase = function () {\n   return this._runTask(\n      straightThroughStringTask(['rebase', ...getTrailingOptions(arguments)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Reset a repo\n */\nGit.prototype.reset = function (mode) {\n   return this._runTask(\n      resetTask(getResetMode(mode), getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Revert one or more commits in the local working copy\n */\nGit.prototype.revert = function (commit) {\n   const next = trailingFunctionArgument(arguments);\n\n   if (typeof commit !== 'string') {\n      return this._runTask(configurationErrorTask('Commit must be a string'), next);\n   }\n\n   return this._runTask(\n      straightThroughStringTask(['revert', ...getTrailingOptions(arguments, 0, true), commit]),\n      next\n   );\n};\n\n/**\n * Add a lightweight tag to the head of the current branch\n */\nGit.prototype.addTag = function (name) {\n   const task =\n      typeof name === 'string'\n         ? addTagTask(name)\n         : configurationErrorTask('Git.addTag requires a tag name');\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\n/**\n * Add an annotated tag to the head of the current branch\n */\nGit.prototype.addAnnotatedTag = function (tagName, tagMessage) {\n   return this._runTask(\n      addAnnotatedTagTask(tagName, tagMessage),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Delete a local branch\n */\nGit.prototype.deleteLocalBranch = function (branchName, forceDelete, then) {\n   return this._runTask(\n      deleteBranchTask(branchName, typeof forceDelete === 'boolean' ? forceDelete : false),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Delete one or more local branches\n */\nGit.prototype.deleteLocalBranches = function (branchNames, forceDelete, then) {\n   return this._runTask(\n      deleteBranchesTask(branchNames, typeof forceDelete === 'boolean' ? forceDelete : false),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * List all branches\n *\n * @param {Object | string[]} [options]\n * @param {Function} [then]\n */\nGit.prototype.branch = function (options, then) {\n   return this._runTask(\n      branchTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Return list of local branches\n *\n * @param {Function} [then]\n */\nGit.prototype.branchLocal = function (then) {\n   return this._runTask(branchLocalTask(), trailingFunctionArgument(arguments));\n};\n\n/**\n * Executes any command against the git binary.\n */\nGit.prototype.raw = function (commands) {\n   const createRestCommands = !Array.isArray(commands);\n   const command = [].slice.call(createRestCommands ? arguments : commands, 0);\n\n   for (let i = 0; i < command.length && createRestCommands; i++) {\n      if (!filterPrimitives(command[i])) {\n         command.splice(i, command.length - i);\n         break;\n      }\n   }\n\n   command.push(...getTrailingOptions(arguments, 0, true));\n\n   var next = trailingFunctionArgument(arguments);\n\n   if (!command.length) {\n      return this._runTask(\n         configurationErrorTask('Raw: must supply one or more command to execute'),\n         next\n      );\n   }\n\n   return this._runTask(straightThroughStringTask(command, this._trimmed), next);\n};\n\nGit.prototype.submoduleAdd = function (repo, path, then) {\n   return this._runTask(addSubModuleTask(repo, path), trailingFunctionArgument(arguments));\n};\n\nGit.prototype.submoduleUpdate = function (args, then) {\n   return this._runTask(\n      updateSubModuleTask(getTrailingOptions(arguments, true)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.submoduleInit = function (args, then) {\n   return this._runTask(\n      initSubModuleTask(getTrailingOptions(arguments, true)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.subModule = function (options, then) {\n   return this._runTask(\n      subModuleTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.listRemote = function () {\n   return this._runTask(\n      listRemotesTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Adds a remote to the list of remotes.\n */\nGit.prototype.addRemote = function (remoteName, remoteRepo, then) {\n   return this._runTask(\n      addRemoteTask(remoteName, remoteRepo, getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Removes an entry by name from the list of remotes.\n */\nGit.prototype.removeRemote = function (remoteName, then) {\n   return this._runTask(removeRemoteTask(remoteName), trailingFunctionArgument(arguments));\n};\n\n/**\n * Gets the currently available remotes, setting the optional verbose argument to true includes additional\n * detail on the remotes themselves.\n */\nGit.prototype.getRemotes = function (verbose, then) {\n   return this._runTask(getRemotesTask(verbose === true), trailingFunctionArgument(arguments));\n};\n\n/**\n * Call any `git remote` function with arguments passed as an array of strings.\n *\n * @param {string[]} options\n * @param {Function} [then]\n */\nGit.prototype.remote = function (options, then) {\n   return this._runTask(\n      remoteTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Call any `git tag` function with arguments passed as an array of strings.\n *\n * @param {string[]} options\n * @param {Function} [then]\n */\nGit.prototype.tag = function (options, then) {\n   const command = getTrailingOptions(arguments);\n\n   if (command[0] !== 'tag') {\n      command.unshift('tag');\n   }\n\n   return this._runTask(straightThroughStringTask(command), trailingFunctionArgument(arguments));\n};\n\n/**\n * Updates repository server info\n *\n * @param {Function} [then]\n */\nGit.prototype.updateServerInfo = function (then) {\n   return this._runTask(\n      straightThroughStringTask(['update-server-info']),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Pushes the current tag changes to a remote which can be either a URL or named remote. When not specified uses the\n * default configured remote spec.\n *\n * @param {string} [remote]\n * @param {Function} [then]\n */\nGit.prototype.pushTags = function (remote, then) {\n   const task = pushTagsTask(\n      { remote: filterType(remote, filterString) },\n      getTrailingOptions(arguments)\n   );\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\n/**\n * Removes the named files from source control.\n */\nGit.prototype.rm = function (files) {\n   return this._runTask(\n      straightThroughStringTask(['rm', '-f', ...asArray(files)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Removes the named files from source control but keeps them on disk rather than deleting them entirely. To\n * completely remove the files, use `rm`.\n *\n * @param {string|string[]} files\n */\nGit.prototype.rmKeepLocal = function (files) {\n   return this._runTask(\n      straightThroughStringTask(['rm', '--cached', ...asArray(files)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Returns a list of objects in a tree based on commit hash. Passing in an object hash returns the object's content,\n * size, and type.\n *\n * Passing \"-p\" will instruct cat-file to determine the object type, and display its formatted contents.\n *\n * @param {string[]} [options]\n * @param {Function} [then]\n */\nGit.prototype.catFile = function (options, then) {\n   return this._catFile('utf-8', arguments);\n};\n\nGit.prototype.binaryCatFile = function () {\n   return this._catFile('buffer', arguments);\n};\n\nGit.prototype._catFile = function (format, args) {\n   var handler = trailingFunctionArgument(args);\n   var command = ['cat-file'];\n   var options = args[0];\n\n   if (typeof options === 'string') {\n      return this._runTask(\n         configurationErrorTask('Git.catFile: options must be supplied as an array of strings'),\n         handler\n      );\n   }\n\n   if (Array.isArray(options)) {\n      command.push.apply(command, options);\n   }\n\n   const task =\n      format === 'buffer' ? straightThroughBufferTask(command) : straightThroughStringTask(command);\n\n   return this._runTask(task, handler);\n};\n\nGit.prototype.diff = function (options, then) {\n   const task = filterString(options)\n      ? configurationErrorTask(\n           'git.diff: supplying options as a single string is no longer supported, switch to an array of strings'\n        )\n      : straightThroughStringTask(['diff', ...getTrailingOptions(arguments)]);\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\nGit.prototype.diffSummary = function () {\n   return this._runTask(\n      diffSummaryTask(getTrailingOptions(arguments, 1)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.applyPatch = function (patches) {\n   const task = !filterStringOrStringArray(patches)\n      ? configurationErrorTask(\n           `git.applyPatch requires one or more string patches as the first argument`\n        )\n      : applyPatchTask(asArray(patches), getTrailingOptions([].slice.call(arguments, 1)));\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\nGit.prototype.revparse = function () {\n   const commands = ['rev-parse', ...getTrailingOptions(arguments, true)];\n   return this._runTask(\n      straightThroughStringTask(commands, true),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n */\nGit.prototype.clean = function (mode, options, then) {\n   const usingCleanOptionsArray = isCleanOptionsArray(mode);\n   const cleanMode =\n      (usingCleanOptionsArray && mode.join('')) || filterType(mode, filterString) || '';\n   const customArgs = getTrailingOptions([].slice.call(arguments, usingCleanOptionsArray ? 1 : 0));\n\n   return this._runTask(\n      cleanWithOptionsTask(cleanMode, customArgs),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.exec = function (then) {\n   const task = {\n      commands: [],\n      format: 'utf-8',\n      parser() {\n         if (typeof then === 'function') {\n            then();\n         }\n      },\n   };\n\n   return this._runTask(task);\n};\n\n/**\n * Clears the queue of pending commands and returns the wrapper instance for chaining.\n *\n * @returns {Git}\n */\nGit.prototype.clearQueue = function () {\n   // TODO:\n   // this._executor.clear();\n   return this;\n};\n\n/**\n * Check if a pathname or pathnames are excluded by .gitignore\n *\n * @param {string|string[]} pathnames\n * @param {Function} [then]\n */\nGit.prototype.checkIgnore = function (pathnames, then) {\n   return this._runTask(\n      checkIgnoreTask(asArray(filterType(pathnames, filterStringOrStringArray, []))),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.checkIsRepo = function (checkType, then) {\n   return this._runTask(\n      checkIsRepoTask(filterType(checkType, filterString)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nmodule.exports = Git;\n","import { pathspec } from './args/pathspec';\nimport { GitConstructError } from './errors/git-construct-error';\nimport { GitError } from './errors/git-error';\nimport { GitPluginError } from './errors/git-plugin-error';\nimport { GitResponseError } from './errors/git-response-error';\nimport { TaskConfigurationError } from './errors/task-configuration-error';\nimport { CheckRepoActions } from './tasks/check-is-repo';\nimport { CleanOptions } from './tasks/clean';\nimport { GitConfigScope } from './tasks/config';\nimport { grepQueryBuilder } from './tasks/grep';\nimport { ResetMode } from './tasks/reset';\n\nexport {\n   CheckRepoActions,\n   CleanOptions,\n   GitConfigScope,\n   GitConstructError,\n   GitError,\n   GitPluginError,\n   GitResponseError,\n   ResetMode,\n   TaskConfigurationError,\n   grepQueryBuilder,\n   pathspec,\n};\n","import { GitError } from './git-error';\nimport { SimpleGitOptions } from '../types';\n\n/**\n * The `GitConstructError` is thrown when an error occurs in the constructor\n * of the `simple-git` instance itself. Most commonly as a result of using\n * a `baseDir` option that points to a folder that either does not exist,\n * or cannot be read by the user the node script is running as.\n *\n * Check the `.message` property for more detail including the properties\n * passed to the constructor.\n */\nexport class GitConstructError extends GitError {\n   constructor(\n      public readonly config: SimpleGitOptions,\n      message: string\n   ) {\n      super(undefined, message);\n   }\n}\n","import { SimpleGitOptions, SimpleGitTask } from '../types';\nimport { GitError } from './git-error';\n\nexport class GitPluginError extends GitError {\n   constructor(\n      public task?: SimpleGitTask<any>,\n      public readonly plugin?: keyof SimpleGitOptions,\n      message?: string\n   ) {\n      super(task, message);\n      Object.setPrototypeOf(this, new.target.prototype);\n   }\n}\n","import { SimpleGitOptions } from '../types';\nimport { SimpleGitPlugin } from './simple-git-plugin';\nimport { GitPluginError } from '../errors/git-plugin-error';\n\nexport function abortPlugin(signal: SimpleGitOptions['abort']) {\n   if (!signal) {\n      return;\n   }\n\n   const onSpawnAfter: SimpleGitPlugin<'spawn.after'> = {\n      type: 'spawn.after',\n      action(_data, context) {\n         function kill() {\n            context.kill(new GitPluginError(undefined, 'abort', 'Abort signal received'));\n         }\n\n         signal.addEventListener('abort', kill);\n\n         context.spawned.on('close', () => signal.removeEventListener('abort', kill));\n      },\n   };\n\n   const onSpawnBefore: SimpleGitPlugin<'spawn.before'> = {\n      type: 'spawn.before',\n      action(_data, context) {\n         if (signal.aborted) {\n            context.kill(new GitPluginError(undefined, 'abort', 'Abort already signaled'));\n         }\n      },\n   };\n\n   return [onSpawnBefore, onSpawnAfter];\n}\n","import type { SimpleGitPlugin } from './simple-git-plugin';\n\nimport { GitPluginError } from '../errors/git-plugin-error';\nimport type { SimpleGitPluginConfig } from '../types';\n\nfunction isConfigSwitch(arg: string | unknown) {\n   return typeof arg === 'string' && arg.trim().toLowerCase() === '-c';\n}\n\nfunction preventProtocolOverride(arg: string, next: string) {\n   if (!isConfigSwitch(arg)) {\n      return;\n   }\n\n   if (!/^\\s*protocol(.[a-z]+)?.allow/.test(next)) {\n      return;\n   }\n\n   throw new GitPluginError(\n      undefined,\n      'unsafe',\n      'Configuring protocol.allow is not permitted without enabling allowUnsafeExtProtocol'\n   );\n}\n\nfunction preventUploadPack(arg: string, method: string) {\n   if (/^\\s*--(upload|receive)-pack/.test(arg)) {\n      throw new GitPluginError(\n         undefined,\n         'unsafe',\n         `Use of --upload-pack or --receive-pack is not permitted without enabling allowUnsafePack`\n      );\n   }\n\n   if (method === 'clone' && /^\\s*-u\\b/.test(arg)) {\n      throw new GitPluginError(\n         undefined,\n         'unsafe',\n         `Use of clone with option -u is not permitted without enabling allowUnsafePack`\n      );\n   }\n\n   if (method === 'push' && /^\\s*--exec\\b/.test(arg)) {\n      throw new GitPluginError(\n         undefined,\n         'unsafe',\n         `Use of push with option --exec is not permitted without enabling allowUnsafePack`\n      );\n   }\n}\n\nexport function blockUnsafeOperationsPlugin({\n   allowUnsafeProtocolOverride = false,\n   allowUnsafePack = false,\n}: SimpleGitPluginConfig['unsafe'] = {}): SimpleGitPlugin<'spawn.args'> {\n   return {\n      type: 'spawn.args',\n      action(args, context) {\n         args.forEach((current, index) => {\n            const next = index < args.length ? args[index + 1] : '';\n\n            allowUnsafeProtocolOverride || preventProtocolOverride(current, next);\n            allowUnsafePack || preventUploadPack(current, context.method);\n         });\n\n         return args;\n      },\n   };\n}\n","import { prefixedArray } from '../utils';\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\nexport function commandConfigPrefixingPlugin(\n   configuration: string[]\n): SimpleGitPlugin<'spawn.args'> {\n   const prefix = prefixedArray(configuration, '-c');\n\n   return {\n      type: 'spawn.args',\n      action(data) {\n         return [...prefix, ...data];\n      },\n   };\n}\n","import { GitError } from '../errors/git-error';\nimport { GitExecutorResult, SimpleGitPluginConfig } from '../types';\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\ntype TaskResult = Omit<GitExecutorResult, 'rejection'>;\n\nfunction isTaskError(result: TaskResult) {\n   return !!(result.exitCode && result.stdErr.length);\n}\n\nfunction getErrorMessage(result: TaskResult) {\n   return Buffer.concat([...result.stdOut, ...result.stdErr]);\n}\n\nexport function errorDetectionHandler(\n   overwrite = false,\n   isError = isTaskError,\n   errorMessage: (result: TaskResult) => Buffer | Error = getErrorMessage\n) {\n   return (error: Buffer | Error | undefined, result: TaskResult) => {\n      if ((!overwrite && error) || !isError(result)) {\n         return error;\n      }\n\n      return errorMessage(result);\n   };\n}\n\nexport function errorDetectionPlugin(\n   config: SimpleGitPluginConfig['errors']\n): SimpleGitPlugin<'task.error'> {\n   return {\n      type: 'task.error',\n      action(data, context) {\n         const error = config(data.error, {\n            stdErr: context.stdErr,\n            stdOut: context.stdOut,\n            exitCode: context.exitCode,\n         });\n\n         if (Buffer.isBuffer(error)) {\n            return { error: new GitError(undefined, error.toString('utf-8')) };\n         }\n\n         return {\n            error,\n         };\n      },\n   };\n}\n","import { SimpleGitPlugin, SimpleGitPluginType, SimpleGitPluginTypes } from './simple-git-plugin';\nimport { append, asArray } from '../utils';\n\nexport class PluginStore {\n   private plugins: Set<SimpleGitPlugin<SimpleGitPluginType>> = new Set();\n\n   public add<T extends SimpleGitPluginType>(\n      plugin: void | SimpleGitPlugin<T> | SimpleGitPlugin<T>[]\n   ) {\n      const plugins: SimpleGitPlugin<T>[] = [];\n\n      asArray(plugin).forEach((plugin) => plugin && this.plugins.add(append(plugins, plugin)));\n\n      return () => {\n         plugins.forEach((plugin) => this.plugins.delete(plugin));\n      };\n   }\n\n   public exec<T extends SimpleGitPluginType>(\n      type: T,\n      data: SimpleGitPluginTypes[T]['data'],\n      context: SimpleGitPluginTypes[T]['context']\n   ): typeof data {\n      let output = data;\n      const contextual = Object.freeze(Object.create(context));\n\n      for (const plugin of this.plugins) {\n         if (plugin.type === type) {\n            output = plugin.action(output, contextual);\n         }\n      }\n\n      return output;\n   }\n}\n","import { SimpleGitOptions } from '../types';\nimport { asNumber, including } from '../utils';\n\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\nexport function progressMonitorPlugin(progress: Exclude<SimpleGitOptions['progress'], void>) {\n   const progressCommand = '--progress';\n   const progressMethods = ['checkout', 'clone', 'fetch', 'pull', 'push'];\n\n   const onProgress: SimpleGitPlugin<'spawn.after'> = {\n      type: 'spawn.after',\n      action(_data, context) {\n         if (!context.commands.includes(progressCommand)) {\n            return;\n         }\n\n         context.spawned.stderr?.on('data', (chunk: Buffer) => {\n            const message = /^([\\s\\S]+?):\\s*(\\d+)% \\((\\d+)\\/(\\d+)\\)/.exec(chunk.toString('utf8'));\n            if (!message) {\n               return;\n            }\n\n            progress({\n               method: context.method,\n               stage: progressEventStage(message[1]),\n               progress: asNumber(message[2]),\n               processed: asNumber(message[3]),\n               total: asNumber(message[4]),\n            });\n         });\n      },\n   };\n\n   const onArgs: SimpleGitPlugin<'spawn.args'> = {\n      type: 'spawn.args',\n      action(args, context) {\n         if (!progressMethods.includes(context.method)) {\n            return args;\n         }\n\n         return including(args, progressCommand);\n      },\n   };\n\n   return [onArgs, onProgress];\n}\n\nfunction progressEventStage(input: string) {\n   return String(input.toLowerCase().split(' ', 1)) || 'unknown';\n}\n","import { SpawnOptions } from 'child_process';\nimport { pick } from '../utils';\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\nexport function spawnOptionsPlugin(\n   spawnOptions: Partial<SpawnOptions>\n): SimpleGitPlugin<'spawn.options'> {\n   const options = pick(spawnOptions, ['uid', 'gid']);\n\n   return {\n      type: 'spawn.options',\n      action(data) {\n         return { ...options, ...data };\n      },\n   };\n}\n","import type { SimpleGitPlugin } from './simple-git-plugin';\n\nimport type { SimpleGitOptions } from '../types';\nimport { GitPluginError } from '../errors/git-plugin-error';\n\nexport function timeoutPlugin({\n   block,\n   stdErr = true,\n   stdOut = true,\n}: Exclude<SimpleGitOptions['timeout'], undefined>): SimpleGitPlugin<'spawn.after'> | void {\n   if (block > 0) {\n      return {\n         type: 'spawn.after',\n         action(_data, context) {\n            let timeout: NodeJS.Timeout;\n\n            function wait() {\n               timeout && clearTimeout(timeout);\n               timeout = setTimeout(kill, block);\n            }\n\n            function stop() {\n               context.spawned.stdout?.off('data', wait);\n               context.spawned.stderr?.off('data', wait);\n               context.spawned.off('exit', stop);\n               context.spawned.off('close', stop);\n               timeout && clearTimeout(timeout);\n            }\n\n            function kill() {\n               stop();\n               context.kill(new GitPluginError(undefined, 'timeout', `block timeout reached`));\n            }\n\n            stdOut && context.spawned.stdout?.on('data', wait);\n            stdErr && context.spawned.stderr?.on('data', wait);\n            context.spawned.on('exit', stop);\n            context.spawned.on('close', stop);\n\n            wait();\n         },\n      };\n   }\n}\n","import { SimpleGitPlugin } from './simple-git-plugin';\nimport { isPathSpec, toPaths } from '../args/pathspec';\n\nexport function suffixPathsPlugin(): SimpleGitPlugin<'spawn.args'> {\n   return {\n      type: 'spawn.args',\n      action(data) {\n         const prefix: string[] = [];\n         let suffix: undefined | string[];\n         function append(args: string[]) {\n            (suffix = suffix || []).push(...args);\n         }\n\n         for (let i = 0; i < data.length; i++) {\n            const param = data[i];\n\n            if (isPathSpec(param)) {\n               append(toPaths(param));\n               continue;\n            }\n\n            if (param === '--') {\n               append(\n                  data.slice(i + 1).flatMap((item) => (isPathSpec(item) && toPaths(item)) || item)\n               );\n               break;\n            }\n\n            prefix.push(param);\n         }\n\n         return !suffix ? prefix : [...prefix, '--', ...suffix.map(String)];\n      },\n   };\n}\n","import { SimpleGitFactory } from '../../typings';\n\nimport * as api from './api';\nimport {\n   abortPlugin,\n   blockUnsafeOperationsPlugin,\n   commandConfigPrefixingPlugin,\n   completionDetectionPlugin,\n   errorDetectionHandler,\n   errorDetectionPlugin,\n   PluginStore,\n   progressMonitorPlugin,\n   spawnOptionsPlugin,\n   timeoutPlugin,\n} from './plugins';\nimport { suffixPathsPlugin } from './plugins/suffix-paths.plugin';\nimport { createInstanceConfig, folderExists } from './utils';\nimport { SimpleGitOptions } from './types';\n\nconst Git = require('../git');\n\n/**\n * Adds the necessary properties to the supplied object to enable it for use as\n * the default export of a module.\n *\n * Eg: `module.exports = esModuleFactory({ something () {} })`\n */\nexport function esModuleFactory<T>(defaultExport: T) {\n   return Object.defineProperties(defaultExport, {\n      __esModule: { value: true },\n      default: { value: defaultExport },\n   }) as T & { __esModule: true; default: T };\n}\n\nexport function gitExportFactory(factory: SimpleGitFactory) {\n   return Object.assign(factory.bind(null), api);\n}\n\nexport function gitInstanceFactory(\n   baseDir?: string | Partial<SimpleGitOptions>,\n   options?: Partial<SimpleGitOptions>\n) {\n   const plugins = new PluginStore();\n   const config = createInstanceConfig(\n      (baseDir && (typeof baseDir === 'string' ? { baseDir } : baseDir)) || {},\n      options\n   );\n\n   if (!folderExists(config.baseDir)) {\n      throw new api.GitConstructError(\n         config,\n         `Cannot use simple-git on a directory that does not exist`\n      );\n   }\n\n   if (Array.isArray(config.config)) {\n      plugins.add(commandConfigPrefixingPlugin(config.config));\n   }\n\n   plugins.add(blockUnsafeOperationsPlugin(config.unsafe));\n   plugins.add(suffixPathsPlugin());\n   plugins.add(completionDetectionPlugin(config.completion));\n   config.abort && plugins.add(abortPlugin(config.abort));\n   config.progress && plugins.add(progressMonitorPlugin(config.progress));\n   config.timeout && plugins.add(timeoutPlugin(config.timeout));\n   config.spawnOptions && plugins.add(spawnOptionsPlugin(config.spawnOptions));\n\n   plugins.add(errorDetectionPlugin(errorDetectionHandler(true)));\n   config.errors && plugins.add(errorDetectionPlugin(config.errors));\n\n   return new Git(config, plugins);\n}\n","import { SimpleGit, SimpleGitOptions } from '../../../typings';\n\nimport { GitResponseError } from '../errors/git-response-error';\nimport { gitInstanceFactory } from '../git-factory';\nimport { SimpleGitTaskCallback } from '../types';\n\nconst functionNamesBuilderApi = ['customBinary', 'env', 'outputHandler', 'silent'];\n\nconst functionNamesPromiseApi = [\n   'add',\n   'addAnnotatedTag',\n   'addConfig',\n   'addRemote',\n   'addTag',\n   'applyPatch',\n   'binaryCatFile',\n   'branch',\n   'branchLocal',\n   'catFile',\n   'checkIgnore',\n   'checkIsRepo',\n   'checkout',\n   'checkoutBranch',\n   'checkoutLatestTag',\n   'checkoutLocalBranch',\n   'clean',\n   'clone',\n   'commit',\n   'cwd',\n   'deleteLocalBranch',\n   'deleteLocalBranches',\n   'diff',\n   'diffSummary',\n   'exec',\n   'fetch',\n   'getRemotes',\n   'init',\n   'listConfig',\n   'listRemote',\n   'log',\n   'merge',\n   'mergeFromTo',\n   'mirror',\n   'mv',\n   'pull',\n   'push',\n   'pushTags',\n   'raw',\n   'rebase',\n   'remote',\n   'removeRemote',\n   'reset',\n   'revert',\n   'revparse',\n   'rm',\n   'rmKeepLocal',\n   'show',\n   'stash',\n   'stashList',\n   'status',\n   'subModule',\n   'submoduleAdd',\n   'submoduleInit',\n   'submoduleUpdate',\n   'tag',\n   'tags',\n   'updateServerInfo',\n];\n\nexport function gitP(\n   ...args: [] | [string] | [Partial<SimpleGitOptions>] | [string, Partial<SimpleGitOptions>]\n): SimpleGit {\n   let git: any;\n\n   let chain = Promise.resolve();\n\n   try {\n      git = gitInstanceFactory(...args);\n   } catch (e) {\n      chain = Promise.reject(e);\n   }\n\n   function builderReturn() {\n      return promiseApi;\n   }\n\n   function chainReturn() {\n      return chain;\n   }\n\n   const promiseApi = [...functionNamesBuilderApi, ...functionNamesPromiseApi].reduce(\n      (api: any, name: string) => {\n         const isAsync = functionNamesPromiseApi.includes(name);\n\n         const valid = isAsync ? asyncWrapper(name, git) : syncWrapper(name, git, api);\n         const alternative = isAsync ? chainReturn : builderReturn;\n\n         Object.defineProperty(api, name, {\n            enumerable: false,\n            configurable: false,\n            value: git ? valid : alternative,\n         });\n\n         return api;\n      },\n      {}\n   );\n\n   return promiseApi as SimpleGit;\n\n   function asyncWrapper(fn: string, git: any): (...args: any[]) => Promise<any> {\n      return function (...args: any[]) {\n         if (typeof args[args.length] === 'function') {\n            throw new TypeError(\n               'Promise interface requires that handlers are not supplied inline, ' +\n                  'trailing function not allowed in call to ' +\n                  fn\n            );\n         }\n\n         return chain.then(function () {\n            return new Promise(function (resolve, reject) {\n               const callback: SimpleGitTaskCallback = (err: Error | null, result?: any) => {\n                  if (err) {\n                     return reject(toError(err));\n                  }\n\n                  resolve(result);\n               };\n               args.push(callback);\n\n               git[fn].apply(git, args);\n            });\n         });\n      };\n   }\n\n   function syncWrapper(fn: string, git: any, api: SimpleGit) {\n      return (...args: any[]) => {\n         git[fn](...args);\n\n         return api;\n      };\n   }\n}\n\nfunction toError(error: Error | string | any): Error {\n   if (error instanceof Error) {\n      return error;\n   }\n\n   if (typeof error === 'string') {\n      return new Error(error);\n   }\n\n   return new GitResponseError(error);\n}\n","import { gitInstanceFactory } from './lib/git-factory';\n\nexport { gitP } from './lib/runners/promise-wrapped';\nexport * from './lib/api';\n\nexport const simpleGit = gitInstanceFactory;\n\nexport default gitInstanceFactory;\n","import { Config, Context, Effect, Layer } from \"effect\"\nimport * as SG from \"simple-git\"\n\n/**\n * A simple wrapper around simple-git.\n *\n * It exposes a `clone` method for working with git repositories.\n */\n\nexport class GitError {\n  readonly _tag = \"GitError\"\n  constructor(readonly error: SG.GitError) {}\n}\n\nexport interface GitConfig extends Partial<SG.SimpleGitOptions> {\n  simpleGit?: Partial<SG.SimpleGitOptions>\n  userName: string\n  userEmail: string\n}\n\nexport interface GitRepo {\n  readonly path: string\n  readonly git: SG.SimpleGit\n  readonly run: <A>(\n    f: (git: SG.SimpleGit) => Promise<A>,\n  ) => Effect.Effect<never, GitError, A>\n}\nexport const GitRepo = Context.Tag<GitRepo>()\n\nconst make = ({ simpleGit: opts = {}, userName, userEmail }: GitConfig) => {\n  const clone = (url: string, dir: string) =>\n    Effect.gen(function* (_) {\n      yield* _(\n        Effect.tryPromise({\n          try: () => SG.simpleGit(opts).clone(url, dir),\n          catch: error => new GitError(error as any),\n        }),\n      )\n\n      const git = SG.simpleGit(dir, opts)\n\n      const run = <A>(f: (git: SG.SimpleGit) => Promise<A>) =>\n        Effect.tryPromise({\n          try: () => f(git),\n          catch: error => new GitError(error as any),\n        })\n\n      yield* _(\n        run(_ =>\n          _.addConfig(\"user.name\", userName).addConfig(\"user.email\", userEmail),\n        ),\n      )\n\n      return GitRepo.of({ git, run, path: dir })\n    })\n\n  return { clone } as const\n}\n\nexport interface Git extends ReturnType<typeof make> {}\nexport const Git = Context.Tag<Git>()\nexport const layer = (_: Config.Config.Wrap<GitConfig>) =>\n  Effect.config(Config.unwrap(_)).pipe(Effect.map(make), Layer.effect(Git))\n","import { getOctokit } from \"@actions/github\"\nimport type { OctokitResponse } from \"@octokit/types\"\nimport {\n  Chunk,\n  Config,\n  ConfigSecret,\n  Context,\n  Effect,\n  Layer,\n  Option,\n  Stream,\n} from \"effect\"\n\nexport interface GithubOptions {\n  readonly token: ConfigSecret.ConfigSecret\n}\n\nexport class GithubError {\n  readonly _tag = \"GithubError\"\n  constructor(readonly reason: unknown) {}\n}\n\nconst make = ({ token }: GithubOptions) => {\n  const api = getOctokit(ConfigSecret.value(token))\n\n  const rest = api.rest\n  type Endpoints = typeof rest\n\n  const request = <A>(f: (_: Endpoints) => Promise<A>) =>\n    Effect.tryPromise({\n      try: () => f(rest),\n      catch: reason => new GithubError(reason),\n    })\n\n  const wrap =\n    <A, Args extends any[]>(\n      f: (_: Endpoints) => (...args: Args) => Promise<OctokitResponse<A>>,\n    ) =>\n    (...args: Args) =>\n      Effect.map(\n        Effect.tryPromise({\n          try: () => f(rest)(...args),\n          catch: reason => new GithubError(reason),\n        }),\n        _ => _.data,\n      )\n\n  const stream = <A>(\n    f: (_: Endpoints, page: number) => Promise<OctokitResponse<A[]>>,\n  ) =>\n    Stream.paginateChunkEffect(0, page =>\n      Effect.tryPromise({\n        try: () => f(rest, page),\n        catch: reason => new GithubError(reason),\n      }).pipe(\n        Effect.map(_ => [\n          Chunk.fromIterable(_.data),\n          maybeNextPage(page, _.headers.link),\n        ]),\n      ),\n    )\n\n  return { api, token, request, wrap, stream } as const\n}\n\nexport interface Github extends ReturnType<typeof make> {}\nexport const Github = Context.Tag<Github>()\nexport const layer = (_: Config.Config.Wrap<GithubOptions>) =>\n  Effect.config(Config.unwrap(_)).pipe(Effect.map(make), Layer.effect(Github))\n\nconst maybeNextPage = (page: number, linkHeader?: string) =>\n  Option.fromNullable(linkHeader).pipe(\n    Option.filter(_ => _.includes(`rel=\\\"next\\\"`)),\n    Option.as(page + 1),\n  )\n","import { Config, ConfigError, ConfigSecret, Either } from \"effect\"\n\nexport const nonEmptyString = (name: string) =>\n  Config.string(name).pipe(\n    Config.mapOrFail(_ => {\n      const trimmed = _.trim()\n      return trimmed !== \"\"\n        ? Either.right(trimmed)\n        : Either.left(ConfigError.MissingData([], \"must not be empty\"))\n    }),\n  )\n\nexport const nonEmptySecret = (name: string) =>\n  Config.secret(name).pipe(\n    Config.mapOrFail(_ => {\n      const trimmed = ConfigSecret.fromString(ConfigSecret.value(_).trim())\n      return ConfigSecret.value(trimmed) !== \"\"\n        ? Either.right(trimmed)\n        : Either.left(ConfigError.MissingData([], \"must not be empty\"))\n    }),\n  )\n\nexport const input = (name: string) =>\n  Config.nested(nonEmptyString(name), \"input\")\nexport const inputSecret = (name: string) =>\n  Config.nested(nonEmptySecret(name), \"input\")\n"]}